<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConfigChoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ConfigChoice extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromTmpConfigValue</Name>
				<Source><![CDATA[
    void initFromTmpConfigValue(TmpConfigValue  tmpValue)
    {
        this.ChosenGroupId      = tmpValue.ConfigGroupId;
        this.ChosenItemId       = tmpValue.ItemId;
        this.ChosenConfigId     = tmpValue.ConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;

        ret = super();
        ret = InventTable::checkConfig(this.ChosenItemId, this.ChosenConfigId) && ret;
        ret = InventTable::checkConfig(this.ItemId, this.ConfigId) && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(
        ItemId                      itemNum,
        EcoResItemConfigurationName configId,
        ConfigGroupId               configGroupId,
        ItemId                      chosenItemId
        )
    {
        if (itemNum && configId &&
            ! ConfigChoice::existByValues(itemNum,configId,configGroupId,chosenItemId)
           )
            return checkFailed(strFmt(ConfigChoice::txtNotExist(),itemNum,configId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>con2ConfigId</Name>
				<Source><![CDATA[
    static EcoResItemConfigurationName con2ConfigId(container c)
    {
        return conPeek(c,ConfigChoice::conConfigIdx());
    }

]]></Source>
			</Method>
			<Method>
				<Name>con2GroupNum</Name>
				<Source><![CDATA[
    static ConfigGroupNum con2GroupNum(container c)
    {
        return conPeek(c,ConfigChoice::conGroupNumIdx());
    }

]]></Source>
			</Method>
			<Method>
				<Name>con2ItemId</Name>
				<Source><![CDATA[
    static ItemId con2ItemId(container c)
    {
        return conPeek(c,ConfigChoice::conItemIdx());
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConfigIdx</Name>
				<Source><![CDATA[
    static Integer conConfigIdx()
    {
        return 3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conGroupIdx</Name>
				<Source><![CDATA[
    static Integer conGroupIdx()
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conGroupNumIdx</Name>
				<Source><![CDATA[
    static Integer conGroupNumIdx()
    {
        return 4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conItemIdx</Name>
				<Source><![CDATA[
    static Integer conItemIdx()
    {
        return 2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByValues</Name>
				<Source><![CDATA[
    static boolean existByValues(
        ItemId                      itemId,
        EcoResItemConfigurationName configId,
        ConfigGroupId               configGroupId,
        ItemId                      chosenItemId
        )
    {
        return (select configChoice
                    index hint ConfigChoiceIdx
                    where configChoice.ItemId           == itemId           &&
                          configChoice.ConfigId         == configId         &&
                          configChoice.ChosenGroupId    == configGroupId    &&
                          configChoice.ChosenItemId     == chosenItemId
                ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByValues</Name>
				<Source><![CDATA[
    static ConfigChoice findByValues(
        ItemId                      _itemId,
        EcoResItemConfigurationName _configId,
        ConfigGroupId               _configGroupId,
        ItemId                      _chosenItemId,
        boolean                     _forUpdate = false
        )
    {
        ConfigChoice    choice;

        if (! _itemId || ! _configId)
        {
            return choice;
        }

        choice.selectForUpdate(_forUpdate);

        select firstonly choice
            where choice.ItemId         == _itemId
              &&  choice.ConfigId       == _configId
              &&  choice.ChosenGroupId  == _configGroupId
              &&  choice.ChosenItemId   == _chosenItemId;

        return choice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findConfig</Name>
				<Source><![CDATA[
    static Configs findConfig(
        ItemId              itemNum,
        ConfigValues        configValues
        )
    {
        Query                       q = new Query();
        QueryBuildDataSource        qB;
        QueryRun                    qRun;
        Integer                     numOfValues     = conLen(configValues);
        Counter                     i;
        container                   c;
        ConfigGroupId               curConfigGroupId;
        ItemId                      curItemId;
        EcoResItemConfigurationName curConfigId;
        ConfigChoice                choice;
        Set                         searchValue;
        Set                         noConfigs;
        Set                         yesConfigs;
        boolean                     found;
        EcoResItemConfigurationName configId;
        SetEnumerator               se;
        SetEnumerator               searchValueE;

        if (! configValues)
            return conNull();

        qB = q.addDataSource(tableNum(ConfigChoice));
        qB.addRange(fieldNum(ConfigChoice,ItemId)).value(queryValue(itemNum));

        searchValue = new Set(Types::Container);
        noConfigs   = new Set(Types::String);
        yesConfigs  = new Set(Types::String);

        i = 1;
        while (i <= numOfValues)
        {
            c = conPeek(configValues,i);
            curConfigGroupId    = conPeek(c,ConfigChoice::conGroupIdx());
            curItemId           = conPeek(c,ConfigChoice::conItemIdx());
            curConfigId         = conPeek(c,ConfigChoice::conConfigIdx());

            if (curItemId)
            {
                qB.addRange(fieldNum(ConfigChoice,ChosenGroupId)).value(queryValue(curConfigGroupId));
                if (curConfigId)
                    // Add complete
                    searchValue.add([curConfigGroupId,curItemId,curConfigId]);
                else
                    // Add without config
                    searchValue.add([curConfigGroupId,curItemId]);
            }
            i += 1;
        }

        qRun = new QueryRun(q);

        while (qRun.next())
        {
            choice = qRun.get(tableNum(ConfigChoice));
            if (searchValue.in([choice.ChosenGroupId,choice.ChosenItemId,choice.ChosenConfigId]) ||
                searchValue.in([choice.ChosenGroupId,choice.ChosenItemId])
               )
            {
                if (! noConfigs.in(choice.ConfigId) && ! yesConfigs.in(choice.ConfigId))
                    yesConfigs.add(choice.ConfigId);
            }
            else
            {
                if (! noConfigs.in(choice.ConfigId))
                    noConfigs.add(choice.ConfigId);
            }
        }

        se = noConfigs.getEnumerator();
        while (se.moveNext())
        {
            configId    = se.current();
            if (yesConfigs.in(configId))
                yesConfigs.remove(configId);
        }

        noConfigs = new Set(Types::String);
        se = yesConfigs.getEnumerator();
        while (se.moveNext())
        {
            configId        = se.current();
            found           = false;
            //i               = 1;

            searchValueE    = searchValue.getEnumerator();
            while (searchValueE.moveNext())
            {
                c                   = searchValueE.current();
                curConfigGroupId    = conPeek(c,1);
                curItemId           = conPeek(c,2);
                curConfigId         = conPeek(c,3);
                choice              = ConfigChoice::findByValues(itemNum,configId,curConfigGroupId,curItemId);
                if (! choice)
                {
                    found  = false;
                    if (! noConfigs.in(choice.ConfigId))
                        noConfigs.add(configId);
                    break;
                }
                found  = true;
                //i += 1;
            }
        }

        se = noConfigs.getEnumerator();
        while (se.moveNext())
        {
            configId    = se.current();
            if (yesConfigs.in(configId))
                yesConfigs.remove(configId);
        }

        return yesConfigs.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS27975";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Config</ConfigurationKey>
	<DeveloperDocumentation>@SYS123808</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS22238</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>ConfigId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ConfigChoiceIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ConfigChoiceIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenConfigId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Autogenerated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Configuration</Name>
			<Label>@SYS14011</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChosenGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenConfigId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChosenConfigId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TableGroup</Name>
			<Label>@SYS21958</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Autogenerated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24284</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChosenConfigId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChosenGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConfigGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS3815</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChosenItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConfigId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ConfigChoiceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ChosenGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ChosenItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ConfigGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123809</EntityRelationshipRole>
			<RelatedTable>ConfigGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChosenGroupId</Name>
					<Field>ChosenGroupId</Field>
					<RelatedField>ConfigGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EcoResConfiguration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123810</EntityRelationshipRole>
			<RelatedTable>EcoResConfiguration</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResConfiguration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ConfigChoice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConfigId</Name>
					<Field>ConfigId</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EcoResConfigurationChosen</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123810</EntityRelationshipRole>
			<RelatedTable>EcoResConfiguration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResConfigurationChosen</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ConfigChoice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChosenConfigId</Name>
					<Field>ChosenConfigId</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ConfigChoice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SelectedInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SelectedInventTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ConfigChoice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChosenItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ChosenItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>