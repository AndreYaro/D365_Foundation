<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AuditPolicyCaseGroupAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AuditPolicyCaseGroupAttribute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all the records in the <c>AuditPolicyCaseGroupAttribute</c> table that are related to the
    /// records in the <c>AuditPolicyCaseGroup</c> table.
    /// </summary>
    /// <param name="_auditPolicyCaseGroup">
    /// The record ID of the <c>AuditPolicyCaseGroup</c> reference table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void deleteAll(RefRecId _auditPolicyCaseGroup)
    {
        AuditPolicyCaseGroupAttribute auditPolicyCaseGroupAttribute;
        ttsbegin;
        delete_from auditPolicyCaseGroupAttribute
            where auditPolicyCaseGroupAttribute.AuditPolicyCaseGroup == _auditPolicyCaseGroup;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>AuditPolicyCaseGroupAttribute</c> table exists.
    /// </summary>
    /// <param  name='_recId'>
    ///     The record ID of the <c>AuditPolicyCaseGroupAttribute</c> record.
    /// </param>
    /// <returns>
    ///     true if the record was found; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _recId)
    {
        return (AuditPolicyCaseGroupAttribute::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record in the <c>AuditPolicyCaseGroupAttribute</c> table.
    /// </summary>
    /// <param  name='_recId'>
    ///     The record ID of the <c>AuditPolicyCaseGroupAttribute</c> record.
    /// </param>
    /// <param  name='_forUpdate'>
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>AuditPolicyCaseGroupAttribute</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AuditPolicyCaseGroupAttribute find(RefRecId _recId, boolean _forUpdate = false)
    {
        AuditPolicyCaseGroupAttribute auditPolicy;

        if (_recId)
        {
            auditPolicy.selectForUpdate(_forUpdate);
            select firstonly auditPolicy
                where auditPolicy.RecId == _recId;
        }
        return auditPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts records into the <c>AuditPolicyCaseGroupAttribute</c> table that list the case grouping
    /// fields.
    /// </summary>
    /// <param name="_fields">
    /// A list of <c>FieldId</c> values of the case grouping fields to insert.
    /// </param>
    /// <param name="_auditPolicyCaseGroup">
    /// The record ID of the <c>AuditPolicyCaseGroup</c> reference table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void insertAll(container _fields, RefRecId _auditPolicyCaseGroup)
    {
        AuditPolicyCaseGroupAttribute   groupAttributes;
        Counter                         i;
        RefTableId                      sourceTableId;

        sourceTableId = tableName2id(AuditPolicyCaseGroup::find(_auditPolicyCaseGroup).SourceRelationType);
        ttsbegin;
        AuditPolicyCaseGroupAttribute::deleteAll(_auditPolicyCaseGroup);

        for (i = 1; i <= conLen(_fields); i++)
        {
            groupAttributes.AuditPolicyCaseGroup = _auditPolicyCaseGroup;
            groupAttributes.SourceAttribute = fieldId2name(sourceTableId, conPeek(_fields, i));
            groupAttributes.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS316926</DeveloperDocumentation>
	<Label>@SYS316925</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AuditPolicyCaseGroup</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<Modules>ComplianceAndInternalControls</Modules>
	<ReplacementKey>SourceAttributeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuditPolicyCaseGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditPolicyCaseGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceAttribute</Name>
			<Label>@SYS77030</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AuditPolicyCaseGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS316923</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceAttribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceAttributeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceAttribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AuditPolicyCaseGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AuditPolicyCaseGroupFK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AuditPolicyCaseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AuditPolicyCaseGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>AuditPolicyCaseGroup_AuditPolicyCaseGroupAttribute</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AuditPolicyCaseGroup</Name>
					<Field>AuditPolicyCaseGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>