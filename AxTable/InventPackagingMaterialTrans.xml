<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackagingMaterialTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventPackagingMaterialTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPackagingWeight</Name>
				<Source><![CDATA[
    private void calcPackagingWeight()
    {
        this.PackagingWeight = this.PackingUnitWeight * this.PackingUnitQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean  _forUpdate = false)
    {
        return InventDim::find(this.InventDimId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventPackagingMaterialTrans, PackMaterialCode):
                this.PackingUnitWeight = InventPackagingUnit::packingUnitWeightForMaterialTrans(this);
                this.calcPackagingWeight();
                break;

            case fieldNum(InventPackagingMaterialTrans, PackingUnitQty):
                this.calcPackagingWeight();
                break;

            case fieldNum(InventPackagingMaterialTrans, PackingUnit):
                this.PackingUnitWeight = InventPackagingUnit::packingUnitWeightForMaterialTrans(this);
                this.calcPackagingWeight();
                break;

            case fieldNum(InventPackagingMaterialTrans, PackingUnitWeight):
                this.calcPackagingWeight();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialCode</Name>
				<Source><![CDATA[
    public InventPackagingMaterialCode packagingMaterialCode(boolean  update = false)
    {
        return InventPackagingMaterialCode::find(this.PackMaterialCode, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialCodeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of a packing material.
    /// </summary>
    /// <returns>
    /// The name of a packing material.
    /// </returns>
    [SysClientCacheDataMethodAttribute]
    public display Name packagingMaterialCodeName()
    {
        return this.packagingMaterialCode().Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (InventParameters::isPackingMaterialTariffCatEnabled_W())
        {
            if (! this.PackagingClassId_W)
            {
                ret = checkFailed(strFmt("@SYS84378", "@PackingMaterial:InventPackingClass"));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialCodeUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the packing unit for a packing material.
    /// </summary>
    /// <returns>
    /// The packing unit for a packing material.
    /// </returns>
    [SysClientCacheDataMethodAttribute]
    public display UnitOfMeasureSymbol packagingMaterialCodeUnit()
    {
        return this.packagingMaterialCode().Unit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialFee</Name>
				<Source><![CDATA[
    public InventPackagingMaterialFee packagingMaterialFee(boolean  update = false)
    {
        return InventPackagingMaterialFee::findForDate(this.PackMaterialCode, this.InvoiceDate, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialFeePricePerUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the price per unit for a packing material.
    /// </summary>
    /// <returns>
    /// The price per unit for a packing material.
    /// </returns>
    [SysClientCacheDataMethodAttribute]
    public display InventPackingMaterialFeePriceCur packagingMaterialFeePricePerUnit()
    {
        return this.packagingMaterialFee().PriceCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromCustInvoiceTrans</Name>
				<Source><![CDATA[
    static public RecId createFromCustInvoiceTrans(
        CustInvoiceTrans                _custInvoiceTrans,
        InventPackingMaterialCode       _packMaterialCode,
        ItemPackagingClassId_W          _packagingClassId = '')
    {
        InventPackagingMaterialTrans   inventPackagingMaterialTrans;
        CustTable                      custTable;

        inventPackagingMaterialTrans.InvoiceId          = _custInvoiceTrans.InvoiceId;
        inventPackagingMaterialTrans.InvoiceDate        = _custInvoiceTrans.InvoiceDate;
        inventPackagingMaterialTrans.SalesId            = _custInvoiceTrans.OrigSalesId;
        inventPackagingMaterialTrans.LineNum            = _custInvoiceTrans.LineNum;
        inventPackagingMaterialTrans.ItemId             = _custInvoiceTrans.ItemId;
        inventPackagingMaterialTrans.InventDimId        = _custInvoiceTrans.InventDimId;
        inventPackagingMaterialTrans.PackMaterialCode   = _packMaterialCode;
        inventPackagingMaterialTrans.PackagingClassId_W = _packagingClassId;

        custTable = _custInvoiceTrans.custTable_InvoiceAccount();
        if (custTable.PackMaterialFeeLicenseNum == '')
        {
            inventPackagingMaterialTrans.FeeIsCalculated = NoYes::Yes;
        }
        else
        {
            inventPackagingMaterialTrans.FeeIsCalculated = NoYes::No;
        }

        inventPackagingMaterialTrans.LogisticsPostalAddress = _custInvoiceTrans.DeliveryPostalAddress;

        if (inventPackagingMaterialTrans.validateWrite())
        {
            inventPackagingMaterialTrans.insert();
        }

        return  inventPackagingMaterialTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromSalesParmLine</Name>
				<Source><![CDATA[
    static public void createFromSalesParmLine(
        SalesParmLine       _salesParmLine,
        CustInvoiceJour     _custInvoiceJour)
    {
        InventPackagingMaterialTrans    inventPackagingMaterialTrans;
        InventPackagingUnit             inventPackagingUnit;
        InventPackagingUnitMaterial     inventPackagingUnitMaterial;
        InventDim                       inventDim;
        InventDimParm                   inventDimParm;
        InventPackingUnit               packingUnit;
        CustTable                       custTable;

        if (!InventParameters::find().PackingMaterialEnabled)
        {
            return;
        }

        inventDim   = _salesParmLine.inventDim();
        packingUnit = _salesParmLine.PackingUnit;
        inventDimParm = EcoResProductDimGroupSetup::newItemId(_salesParmLine.ItemId).inventDimParmActiveDimensions();
        inventDim.clearNotSelectedDim(inventDimParm);
        inventDim   = InventDim::findOrCreate(inventDim);
        inventPackagingUnit = InventPackagingUnit::findFirstUnit(_salesParmLine.ItemId, inventDim, packingUnit);

        while select inventPackagingUnitMaterial
              where inventPackagingUnitMaterial.PackingUnitRecID == inventPackagingUnit.RecId
        {
            inventPackagingMaterialTrans.clear();

            inventPackagingMaterialTrans.InvoiceId         = _custInvoiceJour.InvoiceId;
            inventPackagingMaterialTrans.InvoiceDate       = _custInvoiceJour.InvoiceDate;
            inventPackagingMaterialTrans.SalesId           = _salesParmLine.OrigSalesId;
            inventPackagingMaterialTrans.LineNum           = _salesParmLine.LineNum;
            inventPackagingMaterialTrans.ItemId            = _salesParmLine.ItemId;
            inventPackagingMaterialTrans.InventDimId       = inventDim.InventDimId;
            inventPackagingMaterialTrans.PackMaterialCode  = inventPackagingUnitMaterial.PackMaterialCode;
            inventPackagingMaterialTrans.PackingUnit       = packingUnit;
            inventPackagingMaterialTrans.PackingUnitQty    = _salesParmLine.PackingUnitQty;
            inventPackagingMaterialTrans.PackingUnitWeight = inventPackagingUnitMaterial.PackingUnitWeight;

            if (InventParameters::isPackingMaterialTariffCatEnabled_W())
            {
                inventPackagingMaterialTrans.PackagingClassId_W = inventPackagingUnitMaterial.PackagingClassId_W;
            }

            inventPackagingMaterialTrans.calcPackagingWeight();

            custTable = CustTable::find(_custInvoiceJour.InvoiceAccount);
            if (custTable.PackMaterialFeeLicenseNum == '')
            {
                inventPackagingMaterialTrans.FeeIsCalculated = NoYes::Yes;
            }
            else
            {
                inventPackagingMaterialTrans.FeeIsCalculated = NoYes::No;
            }

            inventPackagingMaterialTrans.LogisticsPostalAddress = _salesParmLine.DeliveryPostalAddress;
            inventPackagingMaterialTrans.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteForInvoice</Name>
				<Source><![CDATA[
    static public void deleteForInvoice(
        InvoiceId       _invoiceId,
        InvoiceDate     _invoiceDate)
    {
        InventPackagingMaterialTrans    inventPackagingMaterialTrans;

        delete_from inventPackagingMaterialTrans
                    where inventPackagingMaterialTrans.InvoiceId   == _invoiceId &&
                          inventPackagingMaterialTrans.InvoiceDate == _invoiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static public InventPackagingMaterialTrans findRecId(
        RecId       recId,
        boolean     update = false )
    {
        InventPackagingMaterialTrans inventPackagingMaterialTrans;

        inventPackagingMaterialTrans.selectForUpdate(update);

        select firstonly inventPackagingMaterialTrans
            where inventPackagingMaterialTrans.RecId == recId;

        return inventPackagingMaterialTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAll</Name>
				<Source><![CDATA[
    static private void removeAll(CustInvoiceJour _custInvoiceJour)
    {
        InventPackagingMaterialTrans    inventPackagingMaterialTrans;

        delete_from  inventPackagingMaterialTrans
               where inventPackagingMaterialTrans.InvoiceId    == _custInvoiceJour.InvoiceId &&
                     inventPackagingMaterialTrans.InvoiceDate  == _custInvoiceJour.InvoiceDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<DeveloperDocumentation>@SYS123995</DeveloperDocumentation>
	<Label>@SYS72997</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InvoiceId</TitleField1>
	<TitleField2>InvoiceDate</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackagingWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FeeIsCalculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Fee</Name>
			<Label>@SYS9154</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FeeIsCalculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackagingWeight</Name>
			<Label>@SYS54069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackagingWeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingUnit</Name>
			<Label>@SYS72977</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingUnitQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingUnitWeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackagingClassId_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemPackagingClassId_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FeeIsCalculated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS73104</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustInvoiceId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackagingWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackagingWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackingUnitQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingUnitQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackingUnitWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingUnitWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackMaterialCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingMaterialCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackagingMaterialTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PackMaterialCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvoiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LogisticsPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123512</EntityRelationshipRole>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceId</Name>
					<Field>InvoiceId</Field>
					<RelatedField>InvoiceId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceDate</Name>
					<Field>InvoiceDate</Field>
					<RelatedField>InvoiceDate</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryPostalAddress_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventPackagingMaterialTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsPostalAddress</Name>
					<Field>LogisticsPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventPackagingMaterialCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingMaterialCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackMaterialCode</Name>
					<Field>PackMaterialCode</Field>
					<RelatedField>PackMaterialCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PackagingMaterialCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123828</EntityRelationshipRole>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingUnit</Name>
					<Field>PackingUnit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventPackagingClass_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingClass_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackagingClassId_W</Name>
					<Field>PackagingClassId_W</Field>
					<RelatedField>PackagingClassId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>