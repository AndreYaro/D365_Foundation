<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlSADPurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PlSADPurchLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display ItemId itemId()
    {
        return PurchLine::findRecId(this.PurchLineRefId).ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyOrdered</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display InventQty qtyOrdered()
    {
        PurchLine purchLine = PurchLine::findRecId(this.PurchLineRefId);

        return purchLine.RemainPurchFinancial + purchLine.RemainPurchPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        PlSADPurchLine       this_orig;
        PlSADPurchLine       otherLines;
        PurchLine_W          purchLineExt;
        PurchLine            purchLine;
        VendInvoiceInfoLine  vendInvoiceInfoLine;
        VendInvoiceInfoTable vendInvoiceInfoTable;
        PlSADPurchTable      sadPurchTable;

        ttsbegin;

        this_orig = this.orig();

        if (this.SADInvoiceLineNo != this_orig.SADInvoiceLineNo)
        {
            delete_from vendInvoiceInfoLine
            exists join otherLines
                where otherLines.PurchLineRefId == vendInvoiceInfoLine.PurchLineRecId &&
                      otherLines.SADNumberCode  == this.SADNumberCode                 &&
                     (otherLines.SADInvoiceLineNo == this.SADInvoiceLineNo ||
                      otherLines.SADInvoiceLineNo == this_orig.SADInvoiceLineNo);
        }

        super();

        purchLine = PurchLine::findRecId(this.PurchLineRefId, true);
        if (purchLine)
        {
            purchLineExt = purchLine.purchLine_W();
            purchLineExt.selectForUpdate(true);
            purchLineExt.SADInvoiceLineNo_PL = this.SADInvoiceLineNo;
            purchLineExt.write();

            purchLine.packExtensionTable(purchLineExt);
            purchLine.update();

            // delete pending and new lines that may fall into wrong invoice otherwise
            delete_from vendInvoiceInfoLine
                where vendInvoiceInfoLine.PurchLineRecId == purchLine.RecId;
        }

        delete_from vendInvoiceInfoTable
        exists join sadPurchTable
            where sadPurchTable.PurchId          == vendInvoiceInfoTable.PurchId
        notexists join vendInvoiceInfoLine
            where vendInvoiceInfoLine.ParmId     == vendInvoiceInfoTable.ParmId &&
                  vendInvoiceInfoLine.TableRefId == vendInvoiceInfoTable.TableRefId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Findr <c>PlSADPurchLine</c> record by reference to purchase order line
    /// </summary>
    /// <param name="_refRecId">
    /// Purchase order line record Id
    /// </param>
    /// <param name="_forUpdate">
    /// Pass true if the record should be selected for update
    /// </param>
    /// <returns>
    /// <c>PlSADPurchLine</c> record found
    /// </returns>
    public static PlSadPurchLine find(
        RefRecId    _refRecId,
        boolean     _forUpdate = false)
    {
        PlSADPurchLine sadPurchLine;

        sadPurchLine.selectForUpdate(_forUpdate);

        select firstonly sadPurchLine
            where sadPurchLine.PurchLineRefId == _refRecId;

        return sadPurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefRecIdInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>PlSADPurchLine</c> record by reference to purchase order line and SAD invoice id.
    /// </summary>
    /// <param name="_purchLineRefRecId">
    /// Purchase order line record ID
    /// </param>
    /// <param name="_invoiceId">
    /// SAD invoice ID
    /// </param>
    /// <param name="_forUpdate">
    /// Pass true if the record should be selected for update
    /// </param>
    /// <returns>
    /// The found <c>PlSADPurchLine</c> record.
    /// </returns>
    public static PlSadPurchLine findRefRecIdInvoiceId(
        PurchLineRefRecId _purchLineRefRecId,
        InvoiceId         _invoiceId,
        boolean           _forUpdate = false)
    {
        PlSADPurchLine sadPurchLine;
        PlSADInvoice sadInvoice;

        sadPurchLine.selectForUpdate(_forUpdate);

        select firstonly sadPurchLine
            where sadPurchLine.PurchLineRefId == _purchLineRefRecId
            exists join sadInvoice
                where sadInvoice.PurchId == sadPurchLine.PurchId
                    && sadInvoice.SADNumberCode == sadPurchLine.SADNumberCode
                    && sadInvoice.SADInvoiceLineNo == sadPurchLine.SADInvoiceLineNo
                    && sadInvoice.InvoiceId == _invoiceId;

        return sadPurchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret && FeatureStateProvider::isFeatureEnabled(PlSADMultiInvoicePerPurchOrderFeature::instance()))
        {
            ret = this.checkPurchLineQty();
        }        
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPurchLineQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether SAD purch lines quantity matches related purch line quantity.
    /// </summary>
    /// <returns>true if SAD purch lines quantity matches related purch line quantity; otherwise false</returns>
    internal boolean checkPurchLineQty()
    {
        boolean ret = true;

        PlSADPurchLine sadPurchLine;

        select sum(Qty) from sadPurchLine
            where sadPurchLine.PurchLineRefId == this.PurchLineRefId
                && sadPurchLine.RecId != this.RecId;

        InventQty diffQty = sadPurchLine.Qty + this.Qty - this.qtyOrdered();
        if (diffQty)
        {
            PurchLine purchLine = PurchLine::findRecId(this.PurchLineRefId);
            str message = strFmt("@Inventory_Localization:PlSADPurchaseLineQtyNotMtachesSADPurchaseLinesQtyTotal",
                    purchLine.LineNumber,
                    purchLine.PurchId,
                    this.qtyOrdered(),
                    sadPurchLine.Qty + this.Qty);
                
            if (diffQty > 0)
            {
                ret = checkFailed(message);
            }
            else
            {
                info(message);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUniqueVendor</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the unique vendor account from purch lines which are linked with both SAD lines and SAD invoice lines.
    /// </summary>
    /// <param name = "_sadNumberCode">SAD document number.</param>
    /// <returns>The unique vendor account set on the SAD invoice lines</returns>
    internal static VendAccount getUniqueVendor(PlSadNumberCode _sadNumberCode)
    {
        VendAccount vendAccount;
        int countOfVendors;

        PlSADPurchLine sadPurchLine;
        PlSADTrans sadTransLine;
        PlSADInvoice sadInvoice;
        
        while select sadPurchLine
            where sadPurchLine.SADNumberCode == _sadNumberCode
            join sadTransLine
            where sadPurchLine.SADLineNo == sadTransLine.SADLineNo
                && sadPurchLine.SADNumberCode == sadTransLine.SADNumberCode
            join sadInvoice
            group by sadInvoice.SADDutyVend
            where sadPurchLine.SADInvoiceLineNo == sadInvoice.SADInvoiceLineNo
                && sadPurchLine.SADNumberCode == sadInvoice.SADNumberCode
        {
            countOfVendors++;
            if (countOfVendors > 1)
            {
                vendAccount = '';
                break;
            }
            vendAccount = sadInvoice.SADDutyVend;
        }
        return vendAccount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223966</DeveloperDocumentation>
	<Label>@GLS109529</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>SADNumberCode</TitleField1>
	<TitleField2>SADLineNo</TitleField2>
	<ClusteredIndex>PurchLineRefIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>PurchLineRefIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumberCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADLineNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumberCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADLineNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumberCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADLineNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADInvoiceLineNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchLineRefId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relation</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADLineNo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchLineRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SADInvoiceLineNo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADInvoiceLineNo</ExtendedDataType>
			<Label>@SYS14204</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SADLineNo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADLineNo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SADNumberCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADNumberCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<FeatureClass>PlSADMultiInvoicePerPurchOrderFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SADNumberCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SADNumberCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchLineRefIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchLineRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SADInvoiceLineNo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PlSADInvoice</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PlSADInvoice</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADNumberCode</Name>
					<Field>SADNumberCode</Field>
					<RelatedField>SADNumberCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADInvoiceLineNo</Name>
					<Field>SADInvoiceLineNo</Field>
					<RelatedField>SADInvoiceLineNo</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PlSADPurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PlSADPurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADNumberCode</Name>
					<Field>SADNumberCode</Field>
					<RelatedField>SADNumberCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PlSADTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PlSADTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADNumberCode</Name>
					<SourceEDT>PlSADNumberCode</SourceEDT>
					<Field>SADNumberCode</Field>
					<RelatedField>SADNumberCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SadCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PlSADTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PlSADTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADNumberCode</Name>
					<Field>SADNumberCode</Field>
					<RelatedField>SADNumberCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADLineNo</Name>
					<Field>SADLineNo</Field>
					<RelatedField>SADLineNo</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchLineRefId</Name>
					<Field>PurchLineRefId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>