<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRInstallmentPayment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRInstallmentPayment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCCNumMasked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the decrypted credit card number masked for display.
    /// </summary>
    /// <returns>
    /// The decrypted credit card number.
    /// </returns>
    public display CreditCardNumber getCCNumMasked()
    {
        MCRCustPaymTable   mcrCustPaymTable;
        str      ccNum;

        mcrCustPaymTable = this.getDefaultPaymentRecord();
        ccNum = mcrCustPaymTable.getCCNumMasked();

        return ccNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultPaymentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the default payment record.
    /// </summary>
    /// <returns>
    /// The default payment record.
    /// </returns>
    private MCRCustPaymTable getDefaultPaymentRecord()
    {
        MCRInstallmentPlanSalesTable  mcrInstallmentPlanSalesTable;
        MCRCustPaymTable              mcrCustPaymTable;

        mcrInstallmentPlanSalesTable = MCRInstallmentPlanSalesTable::findSalesId(this.SalesID);
        mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(mcrInstallmentPlanSalesTable.RecId, mcrInstallmentPlanSalesTable.TableId);

        return mcrCustPaymTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDueAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the amount due for the payment schedule associated
    /// with the installment payment.
    /// </summary>
    /// <returns>
    /// The customer payment amount due.
    /// </returns>
    public display Amount getDueAmount()
    {
        Amount             dueAmount = 0;
        CustPaymSchedLine  custPaymSchedLine;

        custPaymSchedLine = CustPaymSchedLine::MCRFindByRecID(this.CustPaymSchedLineRecID);
        if (custPaymSchedLine)
        {
            dueAmount = custPaymSchedLine.DueAmount;
        }

        return dueAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the due dates for the payment schedule associated with the
    /// installment payment.
    /// </summary>
    /// <returns>
    /// The payment due date.
    /// </returns>
    public display DueDate getDueDate()
    {
        DueDate            dueDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        CustPaymSchedLine  custPaymSchedLine;

        custPaymSchedLine = CustPaymSchedLine::MCRFindByRecID(this.CustPaymSchedLineRecID);
        if (custPaymSchedLine)
        {
            dueDate = custPaymSchedLine.DueDate;
        }

        return dueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the payment information based on type of payment.
    /// </summary>
    /// <returns>
    /// The payment information based on the default payment record.
    /// </returns>
    public display MCRPaymentInfo getPaymentInfo()
    {
        MCRCustPaymTable  mcrCustPaymTable;
        MCRPaymentInfo    returnPaymentInfo;

        mcrCustPaymTable = this.getDefaultPaymentRecord();
        switch (mcrCustPaymTable.CustPaymType)
        {
            case MCRCustPaymType::CreditCard:
                returnPaymentInfo = strFmt('%1 %2', mcrCustPaymTable.CardTypeId, mcrCustPaymTable.getCCNumMasked());
                break;
            default:
                returnPaymentInfo = "";
                break;
        }

        return returnPaymentInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrGetDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the dimension value for the installment sales order.
    /// </summary>
    /// <returns>
    /// A default dimension for documents/letters.
    /// </returns>
    /// <remarks>
    /// Documents/letters are now set up by dimension.  When creating a document,
    /// use the dimension from the originating sales order.
    /// </remarks>
    public display DimensionDefault mcrGetDimension()
    {
        return SalesTable::find(this.SalesID).DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>MCRInstallmentPayment</c> record using the passed
    /// sales ID and payment schedule ID.
    /// </summary>
    /// <param name="_salesId">
    /// The sales ID used to find the installment payment record.
    /// </param>
    /// <param name="_paymSchedId">
    /// The payment schedule ID used to find the installment payment record.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>MCRInstallmentPayment</c> record.
    /// </returns>
    public static MCRInstallmentPayment find(SalesId _salesId,
                                            PaymSchedId _paymSchedId,
                                            boolean _forUpdate = false)
    {
        MCRInstallmentPayment mcrInstallmentPayment;

        if (_salesId
            && _paymSchedId)
        {
            mcrInstallmentPayment.selectForUpdate(_forUpdate);

            select firstOnly mcrInstallmentPayment
                where mcrInstallmentPayment.SalesID == _salesId
                && mcrInstallmentPayment.PaymSched == _paymSchedId;
        }

        return mcrInstallmentPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySchedLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>MCRInstallmentPayment</c> record using the passed
    /// sales ID, payment schedule ID, and payment schedule line record ID.
    /// </summary>
    /// <param name="_salesId">
    /// The sales ID used to find the installment payment record.
    /// </param>
    /// <param name="_paymSchedId">
    /// The payment schedule ID used to find the installment payment record.
    /// </param>
    /// <param name="_custPaymSchedLineRecID">
    /// The record ID of a <c>CustPaymSchedLine</c> record the payment relates to.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRBrokerContractTable</c> record found.
    /// </returns>
    public static MCRInstallmentPayment findBySchedLine(SalesId _salesId,
                                                        PaymSchedId _paymSchedId,
                                                        RecId _custPaymSchedLineRecID,
                                                        boolean _forUpdate = false)
    {
        MCRInstallmentPayment mcrInstallmentPayment;

        if (_salesId && _paymSchedId && _custPaymSchedLineRecID )
        {
            mcrInstallmentPayment.selectForUpdate(_forUpdate);

            select firstOnly mcrInstallmentPayment
                where mcrInstallmentPayment.SalesID == _salesId
                && mcrInstallmentPayment.PaymSched == _paymSchedId
                && mcrInstallmentPayment.CustPaymSchedLineRecID == _custPaymSchedLineRecID;
        }

        return mcrInstallmentPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>MCRInstallmentPayment</c> record using the passed record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID used to find the installment payment record.
    /// </param>
    /// <param name="_update">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRBrokerContractTable</c> record found.
    /// </returns>
    public static MCRInstallmentPayment findRecId(RecId _recId,
                                                  boolean _update = false )
    {
        MCRInstallmentPayment mcrInstallmentPayment;

        if (_recId)
        {
            mcrInstallmentPayment.selectForUpdate(_update);

            select firstonly mcrInstallmentPayment
                where mcrInstallmentPayment.RecId == _recId;
        }
        return mcrInstallmentPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertInstallmentPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts and initializes an installment payment.
    /// </summary>
    /// <param name="_salesId">
    /// The sales ID for the installment payment.
    /// </param>
    /// <param name="_paymSchedId">
    /// The payment schedule ID for the installment payment.
    /// </param>
    /// <param name="_custPaymSchedLineRecid">
    /// The <c>custPaymSchedLine</c> record ID.
    /// </param>
    /// <param name="_custPaymRecID">
    /// A record ID from the <c>custPaym</c> record; optional.
    /// </param>
    /// <returns>
    /// An installment payment record.
    /// </returns>
    /// <remarks>
    /// The insert to the installment payment table is called from multiple places
    /// hence it is better to have it as a static method on the table, that
    /// initializes the record and inserts it.
    /// </remarks>
    public static MCRInstallmentPayment insertInstallmentPayment(SalesId _salesId,
                                                        PaymSchedId _paymSchedId,
                                                        RecId _custPaymSchedLineRecid,
                                                        RecId _custPaymRecID = 0)
    {
        MCRInstallmentPlanSalesTable mcrInstallmentPlanSalesTable;
        MCRInstallmentPayment        mcrInstallmentPayment;

        mcrInstallmentPlanSalesTable = MCRInstallmentPlanSalesTable::find(_salesId, _paymSchedId);

        if (mcrInstallmentPlanSalesTable)
        {
            ttsBegin;
                mcrInstallmentPayment.SalesID = mcrInstallmentPlanSalesTable.SalesId;
                mcrInstallmentPayment.PaymSched = mcrInstallmentPlanSalesTable.PaymSchedId;
                mcrInstallmentPayment.CustAccount = SalesTable::find(_salesId).InvoiceAccount;
                mcrInstallmentPayment.CustPaymTableRecID = _custPaymRecID;
                if (_custPaymRecID == 0)
                {
                    mcrInstallmentPayment.PaymentStatus = MCRSchedulePaymStatus::Billed;
                }
                else
                {
                    mcrInstallmentPayment.PaymentStatus = MCRSchedulePaymStatus::Charged;
                }
                mcrInstallmentPayment.CustPaymSchedLineRecID = _custPaymSchedLineRecid;
                if (mcrInstallmentPayment.validateWrite())
                {
                    mcrInstallmentPayment.insert();
                }
                else
                {
                    throw error("@SYS21628");
                }

            ttsCommit;
        }
        mcrInstallmentPayment.reread();
        return mcrInstallmentPayment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRPayment</ConfigurationKey>
	<DeveloperDocumentation>@MCR30817</DeveloperDocumentation>
	<Label>@MCR30817</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>SalesID</TitleField1>
	<TitleField2>PaymSched</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Payments</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymTableRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymSchedLineRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Installments</Name>
			<Label>@MCR30662</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymSched</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymTableRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymSchedLineRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargedDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ChargedDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@MCR30813</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustPaymSchedLineRecID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRCustPaymSchedLineRefRecId</ExtendedDataType>
			<Label>@MCR30811</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustPaymTableRecID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRCustPaymTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymentStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRSchedulePaymStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymSched</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSchedId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PrintDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrintDate</ExtendedDataType>
			<Label>@MCR30815</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesIDPlanIDSchedRecIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustPaymSchedLineRecID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustPaymSchedLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustPaymSchedLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymSchedLineRecID</Name>
					<Field>CustPaymSchedLineRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRCustPaymTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>MCRCustPaymTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymTableRecID</Name>
					<Field>CustPaymTableRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymSched</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PaymSched</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymSched</Name>
					<SourceEDT>PaymSchedId</SourceEDT>
					<Field>PaymSched</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesID</Name>
					<SourceEDT>SalesId</SourceEDT>
					<Field>SalesID</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>