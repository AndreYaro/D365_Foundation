<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInterestWaiveLimit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInterestWaiveLimit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified currency code exists in the table; if not, an error message is
    ///    displayed.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The currency code to check for existence.
    /// </param>
    /// <returns>
    ///    true if the currency code exists in the table; otherwise, false.
    /// </returns>
    public static boolean checkExist(CurrencyCode _currencyCode)
    {
        boolean ret = true;

        if (!CustInterestWaiveLimit::exist(_currencyCode))
        {
            ret = checkFailed(strFmt(CustInterestWaiveLimit::txtNotExist(), _currencyCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified currency code exists in the table.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The currency code to check for existence.
    /// </param>
    /// <returns>
    ///    true if the currency code exists in the table; otherwise, false.
    /// </returns>
    public static boolean exist(CurrencyCode _currencyCode)
    {
        boolean found;

        found = (select RecId from custInterestWaiveLimit
                    where
                        custInterestWaiveLimit.CurrencyCode == _currencyCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Searches the <c>CustInterestWaiveLimit</c> table for the specified natural key and currency code.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The currency code to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A <c>CustInterestWaiveLimit</c> table buffer.
    /// </returns>
    public static CustInterestWaiveLimit find(
        CurrencyCode _currencyCode,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInterestWaiveLimit custInterestWaiveLimit;

        custInterestWaiveLimit.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInterestWaiveLimit.concurrencyModel(_concurrencyModel);
        }

        select custInterestWaiveLimit
            where
                custInterestWaiveLimit.CurrencyCode == _currencyCode;

        return custInterestWaiveLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>CustInterestWaiveLimit</c> table does not
    ///    exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102208";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS342297</DeveloperDocumentation>
	<FormRef>CustInterestWaiveLimit</FormRef>
	<Label>@SYS315385</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>CurrencyCode</TitleField1>
	<TitleField2>Limit</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>AccountsReceivable</Modules>
	<ReplacementKey>CurrencyCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Limit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Limit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Limit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS62867</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CurrencyCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>