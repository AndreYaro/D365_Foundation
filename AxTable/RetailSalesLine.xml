<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailSalesLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>retailPickupTimeslots</Name>
				<Source><![CDATA[
    /// <summary>
    /// Column for display the timerange of the timeslot with the format of "08:00 AM - 12:00 PM"
    /// if the value for PickupStartTime and PickupEndTime is zero, the column should present as empty
    /// </summary>
    /// <param name = "_set">Whether user trigger the update</param>
    /// <param name = "_retailSalesLine">The update record</param>
    /// <param name = "_value">The update value</param>
    /// <returns>
    /// Display for the type
    /// </returns>
    public edit RetailPickupTimeslotTimeRange retailPickupTimeslots(boolean _set,RetailSalesLine _retailSalesLine, str _value)
    {
        // If user clear the value of the controller, set the pickupStartTime and pickupEndTime to 0.
        if (_set && _value == "")
        {
            _retailSalesLine.PickupStartTime = 0;
            _retailSalesLine.PickupEndTime = 0;
        }

        if (_retailSalesLine.PickupStartTime == 0 && _retailSalesLine.PickupEndTime == 0)
        {
            return "";
        }
        return strFmt("@Retail:RetailPickupTimeslotTimeRangeDisplay",RetailPickupTimeslotHandler::timeToStrHourMinute(_retailSalesLine.PickupStartTime),RetailPickupTimeslotHandler::timeToStrHourMinute(_retailSalesLine.PickupEndTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in RetailSalesLine table.
    /// </summary>
    /// <param name="_salesLineRecId">
    /// Sales line record Id.
    /// </param>
    /// <param name="_forUpdate">
    /// if we want to update the row.
    /// </param>
    /// <returns>
    /// A RetailSalesLine record.
    /// </returns>
    public static RetailSalesLine findBySalesLine(SalesLineRefRecId _salesLineRecId, boolean _forUpdate = false)
    {
        RetailSalesLine retailSalesLine;

        retailSalesLine.selectForUpdate(_forUpdate);
        if (_salesLineRecId)
        {
            select firstonly retailSalesLine
                where retailSalesLine.SalesLine == _salesLineRecId;
        }

        return retailSalesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// inserts a record.
    /// </summary>
    public void insert()
    {
        if (this.SalesLine)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate the PriceOverrideReasonCode field of the <c>RetailSalesLine</c> table.
    /// </summary>
    /// <param name = "_fieldIdToCheck">
    /// Field id of the <c>RetailSalesLine</c>
    /// </param>
    /// <returns>
    /// True if PriceOverrideReasonCode is '0'; otherwise, false.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        if (_fieldIdToCheck == fieldNum(RetailSalesLine, PriceOverrideReasonCode))
        {
            RetailInformationSubcodeId priceOverrideCodeInput = this.PriceOverrideReasonCode;

            if (strLen(priceOverrideCodeInput) != 0)
            {
                RetailInformationSubcodeTable subCode = RetailMCRChannelTable::getPriceOverrideReasonCode(priceOverrideCodeInput);

                if (!subCode)
                {
                    return checkFailed("@Retail:InvalidPriceOverrideCode");
                }
            }
        }
        if (_fieldIdToCheck == fieldNum(RetailSalesLine, Catalog))
        {
            if (!this.SalesLine)
            {
                return true;
            }

            SalesLine salesLine = SalesLine::findRecId(this.SalesLine);
            RetailChannelRecId retailChannel = salesLine.salesTable().RetailChannelTable;

            if (!B2B2BDataHelper::shouldRespectCatalog(retailChannel))
            {
                return true;
            }

            if (this.Catalog)
            {
                B2B2BDataHelper::EventWriteMultipleCatalogsEnabledInB2b2bOrders(this.Catalog);

                if (!B2B2BDataHelper::isCatalogValidForCustAccountAndRetailChannel(this.Catalog, retailChannel, salesLine.CustAccount))
                {
                    return checkFailed(strFmt("@Retail:InvalidCatalogError",
                        Catalog::find(this.Catalog).CatalogId,
                        salesLine.CustAccount,
                        RetailChannelTable::findByRecId(retailChannel).name()));
                }
            }
        }

        return super(_fieldIdToCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>stockedInventoryQuantitiesNeverUpdated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if and only if this line's item is tracked in inventory,
    /// and this line has never had its inventory quantities updated.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional; if not provided, it will be located from this RetailSalesLine.</param>
    /// <returns>True if and only if this line's item is tracked in inventory.</returns>
    internal boolean stockedInventoryQuantitiesNeverUpdated(SalesLine salesLine = null)
    {
        if (salesLine == null)
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }
        else
        {
            if (this.SalesLine && salesLine.RecId && this.SalesLine != salesLine.RecId)
            {
                throw error(Error::wrongUseOfFunction(funcName())); 
            }
        }

        return this.QuantityColumnsVersion == RetailSalesLineQuantityColumnsVersion::V0
            && salesLine.isStocked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantityCanceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the quantity canceled.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity cancelled in inventory unit.</returns>
    internal InventQty quantityCanceled(SalesLine salesLine = null)
    {
        if (salesLine && salesLine.RecId != this.SalesLine)
        {
            throw error(strFmt('The SalesLine (%1) passed does not match the SaleLine (%2) asociated with RetailSalesLine.', salesLine.RecId, this.SalesLine));
        }

        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        InventQty canceledQty = salesLine.QtyOrdered - salesLine.RemainInventPhysical - salesLine.RemainInventFinancial - this.QuantityInvoiced;

        return max(canceledQty, 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityPickedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity picked from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity picked in sales unit.</returns>
    public SalesQty getQuantityPickedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        SalesQty salesQty = salesLine.unitConvertInvent2Sales(this.QuantityPicked);

        return salesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityPackedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity packed from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity packed in sales unit.</returns>
    public SalesQty getQuantityPackedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        return salesLine.RemainSalesFinancial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityInvoicedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity invoiced from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity invoiced in sales unit.</returns>
    public SalesQty getQuantityInvoicedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        return salesLine.invoicedInTotal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityNotProcessedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity not processed from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity not processed in sales unit.</returns>
    public SalesQty getQuantityNotProcessedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        SalesQty notProcessedQty = salesLine.RemainSalesPhysical - this.getQuantityPickedInSalesUnit(salesLine) - this.getQuantityPhysicallyReservedInSalesUnit(salesLine);

        return max(notProcessedQty, 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityPhysicallyReservedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity reserved from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity reserved in sales unit.</returns>
    public SalesQty getQuantityPhysicallyReservedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        SalesQty salesQty = salesLine.unitConvertInvent2Sales(this.QuantityPhysicallyReserved);

        return salesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityOrderedInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity ordered from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity ordered in sales unit.</returns>
    public SalesQty getQuantityOrderedInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        return salesLine.SalesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantityCanceledInSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the quantity canceled from inventory unit to sales unit.
    /// </summary>
    /// <param name = "salesLine">The sales line, optional.</param>
    /// <returns>Quantity calceled in sales unit.</returns>
    public SalesQty getQuantityCanceledInSalesUnit(SalesLine salesLine = null)
    {
        if (prmIsDefault(salesLine))
        {
            salesLine = SalesLine::findRecId(this.SalesLine);
        }

        SalesQty canceledQty = salesLine.SalesQty - salesLine.RemainSalesPhysical - salesLine.RemainSalesFinancial - salesLine.invoicedInTotal();

        return max(canceledQty, 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the modified field event for table fields.
    /// </summary>
    /// <param name="_fieldId">
    /// The field ID for the modified field.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailSalesLine, ReturnReasonCodeId):
                SalesLine salesLine = SalesLine::findRecId(this.SalesLine);
                if (RetailInfoCodeLineTableV2Feature::isEnabled())
                {
                    RetailInfocodeLineV2 retailInfocodeLineV2 = RetailInfocodeLineV2::findByLineNum(salesLine.salesTable().RecId, salesLine.RecId, RetailInfoCodeLineRelatedTableType::Sales, RetailInfocodeTransType::Sales, salesLine.LineNum, true);
                    if (!retailInfocodeLineV2)
                    {
                        this.createReasonCodeLinesV2(salesLine.salesTable().RecId, salesLine.RecId, RetailInfoCodeLineRelatedTableType::Sales, salesLine.LineNum);
                    }
                    else
                    {
                        this.updateReasonCodeLinesV2(retailInfocodeLineV2);
                    }
                }
                else
                {
                    RetailInfocodeLine retailInfocodeLine = RetailInfocodeLine::findByLineNum(salesLine.salesTable().RecId, salesLine.RecId, RetailInfocodeTransType::Sales, salesLine.LineNum, true);
                    if (!retailInfocodeLine)
                    {
                        this.createReasonCodeLines(salesLine.salesTable().RecId, salesLine.RecId, RetailInfocodeTransType::Sales, salesLine.LineNum);
                    }
                    else
                    {
                        this.updateReasonCodeLines(retailInfocodeLine);
                    }
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>catalogName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The catalog name.
    /// </summary>
    /// <returns>Name of the catalog.</returns>
    public display CatalogName catalogName()
    {
        return Catalog::find(this.Catalog).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReasonCodeLinesV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates reason code lines given the sales record ID and line record ID.
    /// </summary>
    /// <param name = "_salesTableRecId">The sales table record ID.</param>
    /// <param name = "_salesLineRecId">The sales line record ID.</param>
    /// <param name = "_tableType">The info code line table type.</param>
    /// <param name = "_headerOrLineNum">The header or line number.</param>
    internal void createReasonCodeLinesV2(
        RecId _salesTableRecId,
        RecId _salesLineRecId,
        RetailInfoCodeLineRelatedTableType _tableType,
        HeaderOrLineNum _headerOrLineNum = 0)
    {
        RetailInfocodeLineV2 infoCodeLineV2;

        infoCodeLineV2.Amount = this.OriginalPrice;
        infoCodeLineV2.InfocodeId = this.ReturnReasonCodeId;
        infoCodeLineV2.Information = ReturnReasonCode::find(this.ReturnReasonCodeId).Description;
        infoCodeLineV2.InputType = RetailInfocodeInputType::SubcodeButtons;
        infoCodeLineV2.ParentRecId = _salesLineRecId;
        infoCodeLineV2.SalesTable = _salesTableRecId;
        infoCodeLineV2.SubInfocodeId = this.ReturnReasonCodeId;
        infoCodeLineV2.TableType = _tableType;
        infoCodeLineV2.Type = RetailInfocodeTransType::Sales;
        infoCodeLineV2.LineNum = _headerOrLineNum;

        infoCodeLineV2.validateWrite();
        infoCodeLineV2.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReasonCodeLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates reason code lines given the sales record ID and line record ID.
    /// </summary>
    /// <param name = "_salesTableRecId">The sales table record ID.</param>
    /// <param name = "_salesLineRecId">The sales line record ID.</param>
    /// <param name = "_type">The info code line trans type.</param>
    /// <param name = "_headerOrLineNum">The header or line number.</param>
    internal void createReasonCodeLines(
        RecId _salesTableRecId,
        RecId _salesLineRecId,
        RetailInfocodeTransType _type,
        HeaderOrLineNum _headerOrLineNum = 0)
    {
        RetailInfocodeLine infoCodeLine;

        infocodeLine.Amount = this.OriginalPrice;
        infocodeLine.InfocodeId = this.ReturnReasonCodeId;
        infocodeLine.Information = ReturnReasonCode::find(this.ReturnReasonCodeId).Description;
        infocodeLine.InputType = RetailInfocodeInputType::SubcodeButtons;
        infocodeLine.ParentRecId = _salesLineRecId;
        infocodeLine.SalesTable = _salesTableRecId;
        infocodeLine.SubInfocodeId = this.ReturnReasonCodeId;
        infocodeLine.Type = _Type;
        infocodeLine.LineNum = _headerOrLineNum;

        infoCodeLine.validateWrite();
        infoCodeLine.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReasonCodeLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates reason code lines given the info codes.
    /// </summary>
    /// <param name = "_retailInfocodeLine">Retail info code line table buffer.</param>
    internal void updateReasonCodeLines(
        RetailInfocodeLine _retailInfocodeLine)
    {
        RetailInfocodeLine infoCodeLine;
        ttsbegin;
        select forupdate infoCodeLine where infoCodeLine.RecId == _retailInfocodeLine.RecId;
        infoCodeLine.InfocodeId = this.ReturnReasonCodeId;
        infoCodeLine.Information = ReturnReasonCode::find(this.ReturnReasonCodeId).Description;
        infoCodeLine.SubInfocodeId = this.ReturnReasonCodeId;
        infoCodeLine.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReasonCodeLinesV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates reason code lines given the info codes.
    /// </summary>
    /// <param name = "_retailInfocodeLineV2">Retail info code line table buffer.</param>
    internal void updateReasonCodeLinesV2(
        RetailInfocodeLineV2 _retailInfocodeLineV2)
    {
        RetailInfocodeLineV2 infoCodeLineV2;
        ttsbegin;
        select forupdate infoCodeLineV2 where infoCodeLineV2.RecId == _retailInfocodeLineV2.RecId;
        infoCodeLineV2.InfocodeId = this.ReturnReasonCodeId;
        infoCodeLineV2.Information = ReturnReasonCode::find(this.ReturnReasonCodeId).Description;
        infoCodeLineV2.SubInfocodeId = this.ReturnReasonCodeId;
        infoCodeLineV2.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET490380</DeveloperDocumentation>
	<Label>@Retail:RetailSalesLine</Label>
	<TitleField1>SalesLine</TitleField1>
	<TitleField2>ListingId</TitleField2>
	<AllowArchival>Yes</AllowArchival>
	<AllowRetention>Yes</AllowRetention>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>TransactionsAndOrders</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ListingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineManualDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ListingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS71506</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineDscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercentageDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineManualDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineManualDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodicDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodicPercentageDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalPctDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TenderDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TenderDiscountPercentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PickupTimeRange</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PickupStartTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PickupEndTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Catalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatalogRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineDscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineManualDiscountAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineManualDiscountPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@RET4230043</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercentageDiscount</Name>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS301377</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ListingId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailChannelListingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PeriodicDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PeriodicPercentageDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalPctDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FulfillmentStoreId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnReasonCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnReasonCodeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OriginalPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>PickupStartTime</Name>
			<ExtendedDataType>RetailPickupTimeslotStartTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>PickupEndTime</Name>
			<ExtendedDataType>RetailPickupTimeslotEndTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriceOverrideReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInformationSubcodeId</ExtendedDataType>
			<Label>@SYS63086</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPriceOverridden</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPriceChange</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentStatus</Name>
			<Label>@Retail:RetailFulfillmentLineStatusTitle</Label>
			<EnumType>RetailFulfillmentLineStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityPicked</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@Retail:RetailFulfillmentQuantityPicked</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityPacked</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@Retail:RetailFulfillmentQuantityPacked</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityInvoiced</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@Retail:RetailFulfillmentQuantityInvoiced</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InfocodeId</Name>
			<ExtendedDataType>RetailInfocodeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Information</Name>
			<ExtendedDataType>RetailInfocodeInformation</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubInfocodeId</Name>
			<ExtendedDataType>RetailInformationSubcodeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TenderDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Label>@Retail:RetailTenderDiscount</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TenderDiscountPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@Retail:TenderDiscountPercentage</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPriceKeyedIn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPriceChange</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxExemptPriceInclusiveOriginalPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTaxExemptOriginalPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxExemptPriceInclusiveReductionAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTaxExemptReductionAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityNotProcessed</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@Retail:RetailSalesLineQuantityNotProcessed</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityPhysicallyReserved</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@Retail:RetailSalesLineQuantityPhysicallyReserved</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>QuantityColumnsVersion</Name>
			<Label>@Retail:RetailSalesLineQuantityColumnsVersion</Label>
			<Visible>No</Visible>
			<EnumType>RetailSalesLineQuantityColumnsVersion</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailProductListLineUpdateId</Name>
			<ExtendedDataType>RetailProductListLineId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPriceLocked</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RetailPriceLock</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FulfillmentStatus</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FulfillmentStoreId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PickupEndTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PickupStartTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPacked</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPicked</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityInvoiced</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityNotProcessed</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPhysicallyReserved</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityColumnsVersion</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FulfillmentStoreIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FulfillmentStoreId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FulfillmentStatus</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesLine</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PickupStartTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PickupEndTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPicked</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPacked</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityInvoiced</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityNotProcessed</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityPhysicallyReserved</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityColumnsVersion</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FulfillmentStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FulfillmentStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesLine</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailProductListLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RetailProductListLineUpdateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>SalesLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RetailSalesPurchLineMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Catalog</MapField>
					<MapFieldTo>Catalog</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDscAmount</MapField>
					<MapFieldTo>LineDscAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineId</MapField>
					<MapFieldTo>SalesLine</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineManualDiscountAmount</MapField>
					<MapFieldTo>LineManualDiscountAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineManualDiscountPercentage</MapField>
					<MapFieldTo>LineManualDiscountPercentage</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercentageDiscount</MapField>
					<MapFieldTo>LinePercentageDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PeriodicDiscount</MapField>
					<MapFieldTo>PeriodicDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PeriodicPercentageDiscount</MapField>
					<MapFieldTo>PeriodicPercentageDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TotalDiscount</MapField>
					<MapFieldTo>TotalDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TotalPctDiscount</MapField>
					<MapFieldTo>TotalPctDiscount</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RetailOrderLineExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Catalog</MapField>
					<MapFieldTo>Catalog</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FulfillmentStoreId</MapField>
					<MapFieldTo>FulfillmentStoreId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPriceKeyedIn</MapField>
					<MapFieldTo>IsPriceKeyedIn</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPriceOverridden</MapField>
					<MapFieldTo>IsPriceOverridden</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDscAmount</MapField>
					<MapFieldTo>LineDscAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineManualDiscountAmount</MapField>
					<MapFieldTo>LineManualDiscountAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineManualDiscountPercentage</MapField>
					<MapFieldTo>LineManualDiscountPercentage</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercentageDiscount</MapField>
					<MapFieldTo>LinePercentageDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OriginalPrice</MapField>
					<MapFieldTo>OriginalPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PeriodicDiscount</MapField>
					<MapFieldTo>PeriodicDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PeriodicPercentageDiscount</MapField>
					<MapFieldTo>PeriodicPercentageDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PickupEndTime</MapField>
					<MapFieldTo>PickupEndTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PickupStartTime</MapField>
					<MapFieldTo>PickupStartTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RetailOrderLine</MapField>
					<MapFieldTo>SalesLine</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxExemptPriceInclusiveOriginalPrice</MapField>
					<MapFieldTo>TaxExemptPriceInclusiveOriginalPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxExemptPriceInclusiveReductionAmount</MapField>
					<MapFieldTo>TaxExemptPriceInclusiveReductionAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TenderDiscount</MapField>
					<MapFieldTo>TenderDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TenderDiscountPercentage</MapField>
					<MapFieldTo>TenderDiscountPercentage</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TotalDiscount</MapField>
					<MapFieldTo>TotalDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TotalPctDiscount</MapField>
					<MapFieldTo>TotalPctDiscount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPriceLocked</MapField>
					<MapFieldTo>IsPriceLocked</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Catalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Catalog</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Catalog</Name>
					<Field>Catalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesLine1</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesLine</Name>
					<Field>SalesLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReturnReasonCode</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ReturnReasonCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReturnReasonCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnReasonCodeId</Name>
					<Field>ReturnReasonCodeId</Field>
					<RelatedField>ReasonCodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>