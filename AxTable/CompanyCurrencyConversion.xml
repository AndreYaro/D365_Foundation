<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CompanyCurrencyConversion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CompanyCurrencyConversion extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldId)
    {
        TableId tableId;
        boolean ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case (fieldnum(CompanyCurrencyConversion, ConvertedField)):
                    if (this.ExtendedTypeId == extendedTypeNum(ExchRate))
                    {
                        ret = CompanyCurrencyConversion::checkField(
                            tablename2id(this.TableConvertedField),
                            this.ConvertedField,
                            this.ExtendedTypeId,
                            extendedTypeNum(ExchrateSecondary),
                            extendedTypeNum(CrossExchRate));
                    }
                    else
                    {
                        ret = CompanyCurrencyConversion::checkField(
                            tablename2id(this.TableConvertedField),
                            this.ConvertedField,
                            this.ExtendedTypeId);
                    }
                    break;

                case (fieldnum(CompanyCurrencyConversion, AmountCurField)):
                    ret = CompanyCurrencyConversion::checkField(
                        tablename2id(this.TableConvertedField),
                        this.AmountCurField,
                        extendedTypeNum(AmountCur));
                    break;

                case (fieldnum(CompanyCurrencyConversion, CurrencyField)):
                    if (this.TableCurrencyField)
                    {
                        tableId = tablename2id(this.TableCurrencyField);
                    }
                    else
                    {
                        tableId = tablename2id(this.TableConvertedField);
                    }
                    ret = CompanyCurrencyConversion::checkField(
                        tableId,
                        this.CurrencyField,
                        extendedTypeNum(CurrencyCode));
                    break;

                case (fieldnum(CompanyCurrencyConversion, TransDateField)):
                    ret = CompanyCurrencyConversion::checkField(
                        tablename2id(this.TableConvertedField),
                        this.TransDateField,
                        extendedTypeNum(TransDate));
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(recId _recId )
    {
        boolean ret = true;

        if (!CompanyCurrencyConversion::exist(_recId))
        {
            ret = checkFailed(strfmt(CompanyCurrencyConversion::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkField</Name>
				<Source><![CDATA[
    private static boolean checkField(
        tableId _tableId,
        FieldName _fieldName,
        extendedTypeId _extendedTypeId1,
        extendedTypeId _extendedTypeId2 = 0,
        extendedTypeId _extendedTypeId3 = 0)
    {
        boolean isCorrectField = false;
        UtilElements utilElements;
        DictField dictField;
        DictType dictType;

        // Checks whether _fieldName belongs to the table with Id _tableId

        select firstonly * from utilElements
            where utilElements.RecordType == UtilElementType::TableField &&
                  utilElements.ParentId == _tableId &&
                  utilElements.Name == _fieldName;

        if (utilElements)

        {
            isCorrectField = true;
        }
        else
        {
            isCorrectField = false;
            error(strfmt("@SYS55265",_fieldName,"@SYS16033",'UtilElements'));
        }

        if (isCorrectField == true)
        {
            // Checks whether _fieldName extends from _extendedTypeId1 and does not
            // extend from _extendedTypeId2 and from _extendedTypeId3

            isCorrectField = false;

            dictField = new DictField(_tableId, fieldname2id(_tableId, _fieldName));

            dictType = new DictType(dictField.typeId());
            while (dictType)
            {
                if (dictType.id() == _extendedTypeId2 ||
                    dictType.id() == _extendedTypeId3)
                {
                    isCorrectField = false;
                    break;
                }
                if (dictType.id() == _extendedTypeId1)
                {
                    isCorrectField = true;
                    break;
                }
                dictType = new DictType(dictType.extend());
            }
            if (isCorrectField == false)
            {
                error("@SYS75708");
            }
        }
        return isCorrectField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId _recId )
    {
        boolean found = (select firstonly RecId from companyCurrencyConversion
            where companyCurrencyConversion.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CompanyCurrencyConversion find(
        RecId _recId ,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CompanyCurrencyConversion companyCurrencyConversion;

        companyCurrencyConversion.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            companyCurrencyConversion.concurrencyModel(_concurrencyModel);
        }

        select firstonly companyCurrencyConversion
            where companyCurrencyConversion.RecId == _recId;

        return companyCurrencyConversion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupField</Name>
				<Source><![CDATA[
    public static void lookupField(FormStringControl _ctrl, tableId _tableId)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(UtilElements), _ctrl);
        Query query = new Query();
        QueryBuildDataSource qbds;

        sysTableLookup.addLookupfield(fieldnum(UtilElements, Name));
        sysTableLookup.addLookupfield(fieldnum(UtilElements, ParentId));

        qbds = query.addDataSource(tablenum(UtilElements));
        qbds.addRange(fieldnum(UtilElements, RecordType)).value(queryValue(UtilElementType::TableField));
        qbds.addRange(fieldnum(UtilElements, ParentId)).value(queryValue(_tableId));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125038</DeveloperDocumentation>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SYS72720</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>ExtendedTypeId</TitleField1>
	<TitleField2>Converted</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExtendedTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableConvertedField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableCurrencyField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConvertedField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCurField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Converted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Conversion</Name>
			<Label>@SYS9783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExtendedTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableConvertedField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableCurrencyField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConvertedField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCurField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastConvertedTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Converted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AmountCurField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS860</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Converted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS76015</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConvertedField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS76021</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS7572</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ExtendedTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExtendedTypeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LastConvertedTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableConvertedField</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TableName</ExtendedDataType>
			<Label>@SYS57368</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableCurrencyField</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TableName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransDateField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS7402</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ExtendedTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExtendedTypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>