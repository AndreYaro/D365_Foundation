<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymTermHold</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PaymTermHold extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;
        PaymTermHold paymTermHoldLocal;
        SecurityRole securityRoleLocal;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(PaymTermHold, SecurityRole_PSN):
                    select RecId from paymTermHoldLocal
                        where paymTermHoldLocal.PaymTerm_PSN == this.PaymTerm_PSN &&
                                paymTermHoldLocal.SecurityRole_PSN == this.SecurityRole_PSN &&
                                paymTermHoldLocal.RecId != this.RecId;

                    if (paymTermHoldLocal.RecId)
                    {
                        select firstonly Name from securityRoleLocal
                            where securityRoleLocal.RecId == this.SecurityRole_PSN;

                        error(strFmt("@SPS2343", securityRoleLocal.Name));
                        ret = false;
                    }
                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>PaymTermHold</c> table; if not, an error message
    ///    is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>PaymTermHold</c> table record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExist(recId _recId)
    {
        boolean ret = true;

        if (!PaymTermHold::exist(_recId))
        {
            ret = checkFailed(strFmt(PaymTermHold::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>PaymTermHold</c> table exists.
    /// </summary>
    /// <param name="_paymTermHoldId">
    ///    The record ID of the <c>PaymTermHold</c> table record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static boolean exist(RefRecId _paymTermHoldId)
    {
        PaymTermHold paymTermHold;

        return _paymTermHoldId && (select firstonly RecId from paymTermHold
                                      where paymTermHold.RecId == _paymTermHoldId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PaymTermHold</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record in the <c>PaymTermHold</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>PaymTermHold</c> table if found; otherwise, an empty buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static PaymTermHold find(RefRecId _recId,
                         boolean    _forUpdate = false)
    {
        PaymTermHold paymTermHold;

        if (_recId)
        {
            paymTermHold.selectForUpdate(_forUpdate);

            select firstonly paymTermHold
                where paymTermHold.RecId == _recId;
        }

        return paymTermHold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the record not found message.
    /// </summary>
    /// <returns>
    /// A string text
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static str 80 txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
	<DeveloperDocumentation>@SPS2512</DeveloperDocumentation>
	<Label>@SPS1752</Label>
	<TitleField1>PaymTerm_PSN</TitleField1>
	<TitleField2>SecurityRole_PSN</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>AccountsPayable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymTerm_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymTerm_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumDaysThreshold_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumHold_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymTerm_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Hold</Name>
			<Label>@SYS88630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumDaysThreshold_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumHold_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaximumHold_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>PositiveNumber</ExtendedDataType>
			<Label>@SPS1746</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumDaysThreshold_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>PositiveDays</ExtendedDataType>
			<Label>@SPS1744</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymTerm_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>SysGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SecurityRole_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SPS1742</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SecurityRoleIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UniqueIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymTerm_PSN</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SecurityRole_PSN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymTerm_PSN</Name>
					<Field>PaymTerm_PSN</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SecurityRole</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SecurityRole</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SecurityRole_PSN</Name>
					<Field>SecurityRole_PSN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecIDIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>