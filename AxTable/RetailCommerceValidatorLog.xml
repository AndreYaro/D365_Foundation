<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCommerceValidatorLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds Message/Warning/Error info related to a rule of a validation.
    /// </summary>
    /// <param name = "_logContext">The <c>RetailCommerceValidatorLogContext</c> table buffer.</param>
    /// <param name = "_metricId">The Metric Id.</param>
    /// <param name = "_description">Description of the log.</param>
    /// <param name = "_testId">The Test Id.</param>
    /// <param name = "_ruleId">The Rule Id.</param>
    public static void addLog(RetailCommerceValidatorLogContext _logContext,
        RetailCommerceValidatorMetricId _metricId,
        RetailCommerceValidatorLogDescription _description,
        RetailCommerceValidatorTestId _testId,
        RetailCommerceValidatorRuleId _ruleId )
    {
        System.Exception exception;
        RetailCommerceValidatorLog validatorLog;
        RetailCommerceValidator retailCommerceValidator = RetailCommerceValidator::find(_logContext.ValidationId);
        RetailCommerceValidatorTests retailCommerceValidatorTests = RetailCommerceValidatorTests::findByTest(retailCommerceValidator.ValidationId, _testId);
        RetailCommerceValidatorRules retailCommerceValidatorRules = RetailCommerceValidatorRules::find(retailCommerceValidatorTests.RuleId);
        RetailCommerceValidatorLogType logType = RetailCommerceValidatorLog::convertResultStatusToLogType(retailCommerceValidatorRules.ResultStatusType, (retailCommerceValidatorTests.EntityFunction == RetailCommerceValidatorEntityFunction::Setup));

        //*************************************************************************************
        //  Telemetry : Validation log event
        //*************************************************************************************
        RetailCommerceValidatorParameters retailCommerceValidatorParameters = RetailCommerceValidatorParameters::find();
        if (retailCommerceValidatorParameters.TelemetryLevel == RetailCommerceValidatorTelemetryLevel::Diagnostic)
        {
            RetailCommerceValidatorTelemetry::addExecutionLogTelemetry(retailCommerceValidator, retailCommerceValidatorTests, _logContext, logType, _description);
        }
        //*************************************************************************************

        try
        {
            // Insert log 
            validatorLog.ContextRecId = _logContext.RecId;
            validatorLog.BatchJobId = retailCommerceValidator.CurrentBatchJobId;
            validatorLog.Description = _description;
            validatorLog.LogType = logType;
            validatorLog.TestId = _testId;
            validatorLog.ValidationId = _logContext.ValidationId;
            validatorLog.RuleId = _ruleId;
            validatorLog.MetricId =_metricId;

            validatorLog.insert();
        

            if (retailCommerceValidatorParameters.UseSetBasedOpForContextCounters == NoYes::Yes)
            {
                RetailCommerceValidatorLogCountersByContext::calculateCounters(retailCommerceValidator,_logContext,logType);
            }
        }
        catch (exception)
        {
            if (xSession::currentRetryCount() >= retailCommerceValidatorParameters.MaxRetryCount)
            {
                RetailCommerceValidatorExceptions::logRetry(_logContext.ValidationId, strFmt("@Retail:RetailCommerceValidatorInsertException", tableStr(RetailCommerceValidatorLog), 'addLog'), xSession::currentRetryCount(), false, exception);
            }
            else
            {
                RetailCommerceValidatorExceptions::logRetry(_logContext.ValidationId, strFmt("@Retail:RetailCommerceValidatorInsertException", tableStr(RetailCommerceValidatorLog), 'addLog'), xSession::currentRetryCount(), true, exception);
                retry;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertResultStatusToLogType</Name>
				<Source><![CDATA[
    internal static RetailCommerceValidatorLogType convertResultStatusToLogType(RetailCommerceValidatorResultStatus _resultStatus, boolean _isSetup = false)
    {
        RetailCommerceValidatorLogType result;
        if (_isSetup)
        {
            result = RetailCommerceValidatorLogType::Setup;
        }
        else
        {
            switch (_resultStatus)
            {
                case RetailCommerceValidatorResultStatus::Error:
                    result = RetailCommerceValidatorLogType::Error;
                    break;
                case RetailCommerceValidatorResultStatus::Warning:
                    result = RetailCommerceValidatorLogType::Warning;
                    break;
                case RetailCommerceValidatorResultStatus::Passed:
                    result = RetailCommerceValidatorLogType::Info;
                    break;
                default:
                    result = RetailCommerceValidatorLogType::Total;
                    break;
            }
        }
        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Retail:RetailCommerceValidatorLogDevDocs</DeveloperDocumentation>
	<Label>@Retail:RetailCommerceValidatorLogLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>TestId</TitleField1>
	<TitleField2>RuleId</TitleField2>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValidationId</Name>
			<ExtendedDataType>RetailCommerceValidatorId</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorIdLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TestId</Name>
			<ExtendedDataType>RetailCommerceValidatorTestId</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorTestIdLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<ExtendedDataType>RetailCommerceValidatorRuleId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContextRecId</Name>
			<Label>@SYS76571</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>RetailCommerceValidatorLogDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LogType</Name>
			<EnumType>RetailCommerceValidatorLogType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MetricId</Name>
			<ExtendedDataType>RetailCommerceValidatorMetricId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CounterRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS23730</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchJobId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorBatchJobId</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TestIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TestId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RuleIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RuleId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ValidatorIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailCommerceValidator</Name>
			<RelatedTable>RetailCommerceValidator</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ValidationId</Name>
					<Field>ValidationId</Field>
					<RelatedField>ValidationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ValidationIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorTests</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailCommerceValidatorTests</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ValidationId</Name>
					<Field>ValidationId</Field>
					<RelatedField>ValidationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TestId</Name>
					<Field>TestId</Field>
					<RelatedField>TestId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TestValidationId</Name>
					<Field>ValidationId</Field>
					<RelatedField>ValidationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorRules</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailCommerceValidatorRules</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RuleId</Name>
					<Field>RuleId</Field>
					<RelatedField>RuleId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorLogContext</Name>
			<RelatedTable>RetailCommerceValidatorLogContext</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContextRecId</Name>
					<Field>ContextRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorMetrics</Name>
			<RelatedTable>RetailCommerceValidatorMetrics</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MetricId</Name>
					<Field>MetricId</Field>
					<RelatedField>MetricId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorCounters</Name>
			<RelatedTable>RetailCommerceValidatorCounters</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CounterRecId</Name>
					<Field>CounterRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>