<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMFundInvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TAMFundInvent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the product name for the current ItemId.
    /// </summary>
    /// <returns>
    /// The <c>Name</c> of the product for the current item or item dimension combination.
    /// </returns>
    public display Name name()
    {
        if (this.InventDimID)
        {
            return InventTable::find(this.ItemID).productName(CompanyInfo::languageId(), this.InventDimID);
        }
        return InventTable::find(this.ItemID).defaultProductName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>TAMFundInvent</c> record that matches the specified criteria.
    /// </summary>
    /// <param name="_fundID">
    /// The <c>TAMFundID</c> to search for.
    /// </param>
    /// <param name="_itemId">
    /// The <c>ItemId</c> to search for.
    /// </param>
    /// <param name="_inventDimId">
    /// The <c>InventDimId</c> to search for.
    /// </param>
    /// <param name="_forUpdate">
    /// Indicates if the record should be selected for update.
    /// </param>
    /// <returns>
    /// The <c>TAMFundInvent</c> record found for the specified criteria.
    /// </returns>
    public static TAMFundInvent find(TAMFundID          _fundID,
                                       ItemId           _itemId,
                                       InventDimId      _inventDimId = InventDim::findOrCreateBlank().InventDimId,
                                       boolean          _forUpdate = false)
    {
        TAMFundInvent  tamFundInvent;

        if (_fundID && _itemId && _inventDimId)
        {
            tamFundInvent.selectForUpdate(_forUpdate);

            select firstonly tamFundInvent
                where tamFundInvent.FundID == _fundID
                && tamFundInvent.ItemID == _itemId
                && tamFundInvent.InventDimID == _inventDimId;
        }

        return tamFundInvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTAMPromotionItemFromProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a trade promotion item record from the product provided.
    /// </summary>
    /// <param name="_productContainer">
    /// A container of the products to be inserted into the <c>TAMFundInvent</c> table.
    /// </param>
    /// <param name="_tamFundTable">
    /// The trade fund record used to get the fund ID.
    /// </param>
    /// <returns>
    /// true if no errors occured; otherwise, false.
    /// </returns>
    public static boolean insertTAMPromotionItemFromProduct(Container        _productContainer,
                                                                   TAMFundTable     _tamFundTable)
    {
        TAMFundInvent           tamFundInvent;
        TmpRetailProductsToAdd  tmpProductTable;
        List                    listProducts;
        ListEnumerator          listEnumerator;
        boolean                 ret = true;

        if (_productContainer)
        {
            listProducts = List::create(_productContainer);
            listEnumerator = listProducts.getEnumerator();

            while (listEnumerator.moveNext())
            {
                tmpProductTable = listEnumerator.current();
                tamFundInvent.FundID = _tamFundTable.FundID;
                tamFundInvent.ItemID = tmpProductTable.ItemId;

                // Check for PromotionId and ItemId before processing.
                if (tamFundInvent.FundID && tamFundInvent.ItemId)
                {
                    tamFundInvent.InventDimID    = tmpProductTable.InventDim;

                    if (!TAMFundInvent::find(tamFundInvent.FundID,
                                                tamFundInvent.ItemID,
                                                tamFundInvent.InventDimID))
                    {
                        if (tamFundInvent.validateWrite())
                        {
                            tamFundInvent.insert();
                        }
                        else
                        {
                            throw error("@SYS104318");
                        }
                    }
                }
                else
                {
                    error(strFmt("@MCR38748", tmpProductTable.EcoResProductName));
                    ret = false;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TAMPromotionsManagement</ConfigurationKey>
	<DeveloperDocumentation>@MCR25673</DeveloperDocumentation>
	<FormRef>TAMFundSetupMenu</FormRef>
	<Label>@MCR25673</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FundID</TitleField1>
	<TitleField2>ItemID</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>FundItemDim</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>FundItemDim</PrimaryIndex>
	<ReplacementKey>FundItemDim</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FundID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FundID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FundID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FundID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FundID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TAMFundID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FundItemDim</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventDimID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FundID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimID</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimID</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ItemID</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemID</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemID</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TAMFundTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TAMFundTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FundID</Name>
					<SourceEDT>TAMFundID</SourceEDT>
					<Field>FundID</Field>
					<RelatedField>FundID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Fund</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>