<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEExpressionLines_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEExpressionLines_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>datasourceQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDatasourceQuery_W datasourceQuery(LedgerRRGEDocuments_W _document = null, LedgerRRGEBufferEval_W _bufferEval = null)
    {
        if (_bufferEval)
        {
            return _bufferEval.datasourceQuery(this.LedgerRRGEQueries_W, _document);
        }

        return LedgerRRGEQueries_W::datasourceQuery(this.LedgerRRGEQueries_W, _document);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFieldName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public edit FieldName editFieldName(boolean _set, FieldName _fieldName)
    {
        LedgerRRGEDatasourceQuery_W datasourceQuery = this.datasourceQuery();
        Map                         fieldsMap;
        LedgerRRGEDatasourceField_W datasourceField;

        if (datasourceQuery && this.RefTableId && this.FieldNum)
        {
            fieldsMap = datasourceQuery.fieldsMap(this.RefTableId);
            if (fieldsMap.exists(this.FieldNum))
            {
                datasourceField = fieldsMap.lookup(this.FieldNum);
                return datasourceField.fieldName();
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>editTableCaption</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public edit TableName editTableCaption(boolean _set, TableName _tableCaption)
    {
        if (_set)
        {
            if (FormDataUtil::isFormDataSource(this))
            {
                FormDataUtil::getFormDataSource(this).refresh();
            }
        }

        return this.tableCaption();
    }

]]></Source>
			</Method>
			<Method>
				<Name>eQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEQueries_W eQuery(boolean _forupdate = false)
    {
        return LedgerRRGEQueries_W::find(this.LedgerRRGEQueries_W, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>evalValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEPropertyValue_W evalValue(LedgerRRGEDocuments_W _document = null, LedgerRRGEBufferEval_W _bufferEval = null)
    {
        LedgerRRGEDatasourceQuery_W datasourceQuery;
        LedgerRRGEPropertyValue_W   value;

        if (this.FieldNum && this.RefTableId)
        {
            datasourceQuery = this.datasourceQuery(_document, _bufferEval);
            if (datasourceQuery)
            {
                if (!datasourceQuery.initialized(this.RefTableId))
                {
                    datasourceQuery.reset(this.RefTableId);
                    datasourceQuery.next(this.RefTableId);
                }

                if (datasourceQuery.initialized(this.RefTableId))
                {
                    value = datasourceQuery.value(this.FieldNum, this.RefTableId);
                }
            }
        }

        return ComExcelDocument_RU::removeExtremeQuotas(this.Prefix) + value + ComExcelDocument_RU::removeExtremeQuotas(this.Postfix);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromQuery(boolean _updateFieldNum = true)
    {
        LedgerRRGEDatasourceQuery_W datasourceQuery;
   

        LedgerRRGEQueries_W::flushCache(this.LedgerRRGEQueries_W);
        datasourceQuery = this.datasourceQuery();
        if (datasourceQuery)
        {
            this.RefTableId = datasourceQuery.singularTableId();
            if (this.RefTableId && _updateFieldNum)
            {
                this.FieldNum = datasourceQuery.singularFieldId();
            }
        }

        if (!this.RefTableId)
        {
            this.RefTableId = this.eQuery().RefTableId;
            if (_updateFieldNum)
            {
                this.FieldNum = 0;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refSysDictTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public SysDictTable refSysDictTable()
    {
        if (this.RefTableId)
        {
            return SysDictTable::newTableId(this.RefTableId);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableCaption</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display RangeTableLabel tableCaption()
    {
        LedgerRRGEDatasourceQuery_W datasourceQuery = this.datasourceQuery();
        Map                         tablesMap;

        if (datasourceQuery && this.RefTableId)
        {
            tablesMap = datasourceQuery.tablesMap();
            if (tablesMap.exists(this.RefTableId))
            {
                return tablesMap.lookup(this.RefTableId);
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        LedgerRRGEQueries_W::flushCache(this.LedgerRRGEQueries_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>value</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LedgerRRGEPropertyValue_W value()
    {
        return this.evalValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existPropertyIdAndLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns whether a record of the table exist or not.
    /// </summary>
    /// <param name="_propertyRecId">
    ///   A property record ID.
    /// </param>
    /// <param name="_lineNum">
    ///  A line number.
    /// </param>
    /// <returns>
    /// True if exists; otherwise - false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existPropertyIdAndLineNum(
        LedgerRRGEPropertyRecId_W  _propertyRecId,
        LineNum                    _lineNum)
    {
        LedgerRRGEExpressionLines_W expressionLines;
       

        if (_propertyRecId && _lineNum)
        {
            select RecId from expressionLines
                where expressionLines.LedgerRRGEProperties_W == _propertyRecId
                   && expressionLines.LineNum                == _lineNum;
        }

        return (expressionLines.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LedgerRRGEExpressionLines_W</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The RecId of the LedgerRRGEExpressionLines_W record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LedgerRRGEExpressionLines_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEExpressionLines_W find(
        RecId              _recId,
        boolean            _forupdate = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerRRGEExpressionLines_W ledgerRRGEExpressionLines;

        ledgerRRGEExpressionLines.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerRRGEExpressionLines.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerRRGEExpressionLines
            where ledgerRRGEExpressionLines.RecId == _recId;

        return ledgerRRGEExpressionLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPropertyIdAndLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds a line by given parameters.
    /// </summary>
    /// <param name="_propertyRecId">
    ///   A property record ID.
    /// </param>
    /// <param name="_lineNum">
    ///   A line number.
    /// </param>
    /// <param name="_forupdate">
    ///  Whether select for update or not.
    /// </param>
    /// <returns>
    ///   A record found.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEExpressionLines_W findByPropertyIdAndLineNum(
        LedgerRRGEPropertyRecId_W  _propertyRecId,
        LineNum                    _lineNum,
        boolean                    _forupdate = false)
    {
        LedgerRRGEExpressionLines_W expressionLine;
       

        if (_propertyRecId && _lineNum)
        {
            expressionLine.selectForUpdate(_forupdate);

            select firstonly expressionLine
                where expressionLine.LedgerRRGEProperties_W == _propertyRecId
                   && expressionLine.LineNum                == _lineNum;
        }

        return expressionLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryExists</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean queryExists(LedgerRRGEQueryRecId_W _queryRecId, TableId _tableId = 0, FieldId _fieldId = 0)
    {
        LedgerRRGEExpressionLines_W expressionLine;

        if (_queryRecId)
        {
            select firstonly RecId from expressionLine
                where expressionLine.LedgerRRGEQueries_W    == _queryRecId
                 && (!_tableId
                 ||   expressionLine.RefTableId == _tableId)
                 && (!_fieldId
                 ||   expressionLine.FieldNum   == _fieldId);
        }

        return (expressionLine.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@LedgerRRG:LedgerRRG_ExpressionLines</DeveloperDocumentation>
	<Label>@LedgerRRG:LedgerRRG_ExpressionLines</Label>
	<TitleField1>LedgerRRGEProperties_W</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<ClusteredIndex>PropertyLineIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEProperties_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEProperties_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IdLineNumGroup</Name>
			<Label>@SYS15682</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEProperties_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEQueries_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editTableCaption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FieldNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Label>@SYS16033</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGEProperties_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LedgerRRGEPropertyRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGEQueries_W</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LedgerRRGEQueryRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Postfix</Name>
			<ExtendedDataType>LedgerRRGEExpressionStr_W</ExtendedDataType>
			<Label>@LedgerRRG:LedgerRRG_Postfix</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Prefix</Name>
			<ExtendedDataType>LedgerRRGEExpressionStr_W</ExtendedDataType>
			<Label>@SYS22501</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PropertyLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGEProperties_W</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGEQueries_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGEQueries_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEProperties_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEProperties_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEProperties_W</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LedgerRRGEExpressionLines_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGEProperties_W</Name>
					<Field>LedgerRRGEProperties_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEQueries_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEQueries_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEQueries_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerRRGEExpressionLines_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGEQueries_W</Name>
					<Field>LedgerRRGEQueries_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>