<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppFieldPriority</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSMobileAppFieldPriority extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByMobileAppField</Name>
				<Source><![CDATA[
    public static WHSMobileAppFieldPriority findByMobileAppField(WHSMobileAppField _mobileAppField, boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        mobileAppFieldPriority.selectForUpdate(_forUpdate);

        select firstonly mobileAppFieldPriority
            where mobileAppFieldPriority.LineType           == WHSMobileAppFieldPriorityLineType::Item
               && mobileAppFieldPriority.WHSMobileAppField  == _mobileAppField.RecId;

        return mobileAppFieldPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPriority</Name>
				<Source><![CDATA[
    public static WHSMobileAppFieldPriority findByPriority(WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriority, boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        mobileAppFieldPriority.selectForUpdate(_forUpdate);

        select firstonly mobileAppFieldPriority
            where mobileAppFieldPriority.Priority    == _priority
               && mobileAppFieldPriority.SubPriority == _subPriority;

        return mobileAppFieldPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existGroupRecord</Name>
				<Source><![CDATA[
    public static boolean existGroupRecord(WHSFieldDisplayPriority _priority)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        select firstonly mobileAppFieldPriority
            where mobileAppFieldPriority.Priority    == _priority
               && mobileAppFieldPriority.SubPriority == 0;

        return mobileAppFieldPriority.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUpRecord</Name>
				<Source><![CDATA[
    public static void moveUpRecord(WHSFieldDisplayPriority _currentPriority, WHSFieldDisplaySubPriority _currentSubPriority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority mobileAppFieldPriority = WHSMobileAppFieldPriority::findByPriority(_currentPriority, _currentSubPriority, true);

        if (mobileAppFieldPriority.LineType == WHSMobileAppFieldPriorityLineType::Item)
        {
            if (!WHSMobileAppFieldPriority::swapWithPreviousItemInGroup(mobileAppFieldPriority))
            {
                WHSMobileAppFieldPriority::moveItemToPreviousGroup(mobileAppFieldPriority);
            }
        }
        else
        {
            WHSMobileAppFieldPriority::swapGroupWithPreviousGroup(mobileAppFieldPriority);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDownRecord</Name>
				<Source><![CDATA[
    public static void moveDownRecord(WHSFieldDisplayPriority _currentPriority, WHSFieldDisplaySubPriority _currentSubPriority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority mobileAppFieldPriority = WHSMobileAppFieldPriority::findByPriority(_currentPriority, _currentSubPriority, true);

        if (mobileAppFieldPriority.LineType == WHSMobileAppFieldPriorityLineType::Item)
        {
            if (!WHSMobileAppFieldPriority::swapWithNextItemInGroup(mobileAppFieldPriority))
            {
                WHSMobileAppFieldPriority::moveItemToNextGroup(mobileAppFieldPriority);
            }
        }
        else
        {
            WHSMobileAppFieldPriority::swapGroupWithNextGroup(mobileAppFieldPriority);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignPriority</Name>
				<Source><![CDATA[
    public static void assignPriority(WHSMobileAppField _mobileAppField, WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority currentRecordInPosition = WHSMobileAppFieldPriority::findByPriority(_priority, _subPriority, true);

        if (currentRecordInPosition.LineType == WHSMobileAppFieldPriorityLineType::Group)
        {
            currentRecordInPosition.moveDownItemsInGroup();
            WHSMobileAppFieldPriority::insertItemRecord(_mobileAppField, _priority, 1);
        }
        else
        {
            currentRecordInPosition.moveDownItemsInGroup(true);
            WHSMobileAppFieldPriority::insertItemRecord(_mobileAppField, _priority, _subPriority);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unassignPriority</Name>
				<Source><![CDATA[
    public static void unassignPriority(WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority mobileAppFieldPriority = WHSMobileAppFieldPriority::findByPriority(_priority, _subPriority, true);

        if (mobileAppFieldPriority.LineType == WHSMobileAppFieldPriorityLineType::Item)
        {
            mobileAppFieldPriority.delete();
            WHSMobileAppFieldPriority::moveUpFollowingItemsInGroup(_priority, _subPriority);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriority</Name>
				<Source><![CDATA[
    public static void addPriority(WHSFieldDisplayPriority _priority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority recordsToMove;

        update_recordset recordsToMove
                 setting Priority = recordsToMove.Priority + 1
                   where recordsToMove.Priority >= _priority;

        WHSMobileAppFieldPriority::insertGroupRecord(_priority);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removePriority</Name>
				<Source><![CDATA[
    public static void removePriority(WHSFieldDisplayPriority _priority)
    {
        ttsbegin;
        WHSMobileAppFieldPriority mobileAppFieldPriorityItem;

        select firstonly RecId from mobileAppFieldPriorityItem
            where mobileAppFieldPriorityItem.LineType == WHSMobileAppFieldPriorityLineType::Item
               && mobileAppFieldPriorityItem.Priority == _priority;

        if (mobileAppFieldPriorityItem.RecId == 0)
        {
            WHSMobileAppFieldPriority::findByPriority(_priority, 0, true).delete();

            WHSMobileAppFieldPriority recordsToMove;

            update_recordset recordsToMove
                 setting Priority = recordsToMove.Priority - 1
                   where recordsToMove.Priority > _priority;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertItemRecord</Name>
				<Source><![CDATA[
    public static void insertItemRecord(WHSMobileAppField _mobileAppField, WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriority)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        mobileAppFieldPriority.WHSMobileAppField = _mobileAppField.RecId;
        mobileAppFieldPriority.Priority     = _priority;
        mobileAppFieldPriority.SubPriority  = _subPriority;
        mobileAppFieldPriority.LineType     = WHSMobileAppFieldPriorityLineType::Item;
        mobileAppFieldPriority.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertGroupRecord</Name>
				<Source><![CDATA[
    public static void insertGroupRecord(WHSFieldDisplayPriority _priority)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        mobileAppFieldPriority.GroupName   = guid2Str(newGuid());
        mobileAppFieldPriority.Priority    = _priority;
        mobileAppFieldPriority.SubPriority = 0;
        mobileAppFieldPriority.LineType    = WHSMobileAppFieldPriorityLineType::Group;
        mobileAppFieldPriority.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>changePriority</Name>
				<Source><![CDATA[
    private static void changePriority(WHSFieldDisplayPriority _fromPriority, WHSFieldDisplayPriority _toPriority)
    {
        WHSMobileAppFieldPriority mobileAppFieldPriority;

        update_recordset mobileAppFieldPriority
                 setting Priority = _toPriority
                   where mobileAppFieldPriority.Priority == _fromPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapWithPreviousItemInGroup</Name>
				<Source><![CDATA[
    private static boolean swapWithPreviousItemInGroup(WHSMobileAppFieldPriority _mobileAppFieldPriority)
    {
        WHSMobileAppFieldPriority previousItem = _mobileAppFieldPriority.previousItemInGroup(true);

        if (previousItem.RecId)
        {
            WHSMobileAppFieldPriority::swapItemSubPriority(_mobileAppFieldPriority, previousItem);
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapWithNextItemInGroup</Name>
				<Source><![CDATA[
    private static boolean swapWithNextItemInGroup(WHSMobileAppFieldPriority _mobileAppFieldPriority)
    {
        WHSMobileAppFieldPriority nextItem = _mobileAppFieldPriority.nextItemInGroup(true);

        if (nextItem.RecId)
        {
            WHSMobileAppFieldPriority::swapItemSubPriority(_mobileAppFieldPriority, nextItem);
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapItemSubPriority</Name>
				<Source><![CDATA[
    private static void swapItemSubPriority(WHSMobileAppFieldPriority _firstRecord, WHSMobileAppFieldPriority _secondRecord)
    {
        var currentSubPriority = _firstRecord.SubPriority;
        _firstRecord.SubPriority = _secondRecord.SubPriority;
        _firstRecord.update();
        _secondRecord.SubPriority = currentSubPriority;
        _secondRecord.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveItemToPreviousGroup</Name>
				<Source><![CDATA[
    private static void moveItemToPreviousGroup(WHSMobileAppFieldPriority _mobileAppFieldPriority)
    {
        WHSMobileAppFieldPriority previousGroup = _mobileAppFieldPriority.previousGroup();

        if (previousGroup)
        {
            WHSMobileAppFieldPriority previousGroupLastItem = previousGroup.lastItemInGroup(true);

            _mobileAppFieldPriority.Priority = previousGroup.Priority;
            _mobileAppFieldPriority.SubPriority = previousGroupLastItem.RecId ? previousGroupLastItem.SubPriority + 1 : 1;
            _mobileAppFieldPriority.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveItemToNextGroup</Name>
				<Source><![CDATA[
    private static void moveItemToNextGroup(WHSMobileAppFieldPriority _mobileAppFieldPriority)
    {
        WHSMobileAppFieldPriority nextGroup = _mobileAppFieldPriority.nextGroup();

        if (nextGroup.RecId)
        {
            nextGroup.moveDownItemsInGroup();

            _mobileAppFieldPriority.Priority = nextGroup.Priority;
            _mobileAppFieldPriority.SubPriority = 1;
            _mobileAppFieldPriority.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDownItemsInGroup</Name>
				<Source><![CDATA[
    private void moveDownItemsInGroup(boolean _currentPositionAndBelow = false)
    {
        WHSMobileAppFieldPriority nextGroupItems;

        var fromSubPriority = _currentPositionAndBelow ? this.SubPriority : 1;

        update_recordset nextGroupItems
                 setting SubPriority = nextGroupItems.SubPriority + 1
                   where nextGroupItems.LineType    == WHSMobileAppFieldPriorityLineType::Item
                      && nextGroupItems.Priority    == this.Priority
                      && nextGroupItems.SubPriority >= fromSubPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDownFollowingItemsInGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves items within a group to a lower priority.
    /// </summary>
    /// <param name = "_priority">Priority of the group.</param>
    /// <param name = "_subPriorityToFollow">Subpriority, following which items should be moved.</param>
    public static void moveDownFollowingItemsInGroup(WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriorityToFollow)
    {
        WHSMobileAppFieldPriority nextGroupItems;

        update_recordset nextGroupItems
                 setting SubPriority = nextGroupItems.SubPriority + 1
                   where nextGroupItems.LineType    == WHSMobileAppFieldPriorityLineType::Item
                      && nextGroupItems.Priority    == _priority
                      && nextGroupItems.SubPriority  > _subPriorityToFollow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUpFollowingItemsInGroup</Name>
				<Source><![CDATA[
    private static void moveUpFollowingItemsInGroup(WHSFieldDisplayPriority _priority, WHSFieldDisplaySubPriority _subPriorityToFollow)
    {
        WHSMobileAppFieldPriority nextGroupItems;

        update_recordset nextGroupItems
                 setting SubPriority = nextGroupItems.SubPriority - 1
                   where nextGroupItems.LineType    == WHSMobileAppFieldPriorityLineType::Item
                      && nextGroupItems.Priority    == _priority
                      && nextGroupItems.SubPriority  > _subPriorityToFollow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapGroupWithPreviousGroup</Name>
				<Source><![CDATA[
    private static void swapGroupWithPreviousGroup(WHSMobileAppFieldPriority _mobileAppFieldPriorityGroup)
    {
        WHSMobileAppFieldPriority previousGroup = _mobileAppFieldPriorityGroup.previousGroup(true);

        if (previousGroup.RecId)
        {
            var tmpPriority = -1;
            WHSMobileAppFieldPriority::changePriority(_mobileAppFieldPriorityGroup.Priority, tmpPriority);
            WHSMobileAppFieldPriority::changePriority(previousGroup.Priority, _mobileAppFieldPriorityGroup.Priority);
            WHSMobileAppFieldPriority::changePriority(tmpPriority, previousGroup.Priority);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapGroupWithNextGroup</Name>
				<Source><![CDATA[
    private static void swapGroupWithNextGroup(WHSMobileAppFieldPriority _mobileAppFieldPriorityGroup)
    {
        WHSMobileAppFieldPriority nextGroup = _mobileAppFieldPriorityGroup.nextGroup(true);

        if (nextGroup.RecId)
        {
            var tmpPriority = -1;
            WHSMobileAppFieldPriority::changePriority(_mobileAppFieldPriorityGroup.Priority, tmpPriority);
            WHSMobileAppFieldPriority::changePriority(nextGroup.Priority, _mobileAppFieldPriorityGroup.Priority);
            WHSMobileAppFieldPriority::changePriority(tmpPriority, nextGroup.Priority);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>previousGroup</Name>
				<Source><![CDATA[
    private WHSMobileAppFieldPriority previousGroup(boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority previousGroup;

        previousGroup.selectForUpdate(_forUpdate);

        select firstonly previousGroup
                order by Priority desc
                   where previousGroup.LineType == WHSMobileAppFieldPriorityLineType::Group
                      && previousGroup.Priority  < this.Priority;

        return previousGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextGroup</Name>
				<Source><![CDATA[
    private WHSMobileAppFieldPriority nextGroup(boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority nextGroup;

        nextGroup.selectForUpdate(_forUpdate);

        select firstonly nextGroup
                order by Priority
                   where nextGroup.LineType == WHSMobileAppFieldPriorityLineType::Group
                      && nextGroup.Priority  > this.Priority;

        return nextGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>previousItemInGroup</Name>
				<Source><![CDATA[
    private WHSMobileAppFieldPriority previousItemInGroup(boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority previousItem;

        previousItem.selectForUpdate(_forUpdate);

        select firstonly previousItem
                order by Priority, SubPriority desc
                   where previousItem.LineType   == WHSMobileAppFieldPriorityLineType::Item
                      && previousItem.Priority   == this.Priority
                      && previousItem.SubPriority < this.SubPriority;

        return previousItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextItemInGroup</Name>
				<Source><![CDATA[
    private WHSMobileAppFieldPriority nextItemInGroup(boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority nextItem;

        nextItem.selectForUpdate(_forUpdate);

        select firstonly nextItem
                order by Priority, SubPriority
                   where nextItem.LineType   == WHSMobileAppFieldPriorityLineType::Item
                      && nextItem.Priority   == this.Priority
                      && nextItem.SubPriority > this.SubPriority;

        return nextItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastItemInGroup</Name>
				<Source><![CDATA[
    private WHSMobileAppFieldPriority lastItemInGroup(boolean _forUpdate = false)
    {
        WHSMobileAppFieldPriority lastItem;

        lastItem.selectForUpdate(_forUpdate);

        select firstonly lastItem
                order by Priority desc, SubPriority desc
                   where lastItem.LineType == WHSMobileAppFieldPriorityLineType::Item
                      && lastItem.Priority == this.Priority;

        return lastItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(WHSMobileAppFieldPriority, LineType),
             [fieldNum(WHSMobileAppFieldPriority, GroupName)]
            ]
            ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch(_fieldId)
        {
            case fieldNum(WHSMobileAppFieldPriority, LineType):
                if (this.isFieldSet(fieldNum(WHSMobileAppFieldPriority, GroupName)))
                {
                    this.LineType = WHSMobileAppFieldPriorityLineType::Group;
                }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>WHSMobileAppFieldPriority</FormRef>
	<Label>@WAX:WHSDisplayPriority</Label>
	<TitleField1>GroupName</TitleField1>
	<TitleField2>WHSMobileAppField</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>KnownTypeGroupNameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WHSMobileAppField</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LineType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSMobileAppFieldPriorityLineType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WHSMobileAppField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMobileAppFieldRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Priority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFieldDisplayPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SubPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFieldDisplaySubPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFieldGroupName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KnownTypeGroupNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Priority</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WHSMobileAppField</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSMobileAppField</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSMobileAppField</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WHSMobileAppField</Name>
					<Field>WHSMobileAppField</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>