<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSCarrierFuelIndexLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSCarrierFuelIndexLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromHeader</Name>
				<Source><![CDATA[
	/// <summary>
	/// Initializes the record from a carrier fuel index header.
	/// </summary>
	/// <param name="_fuelIndexTable">
	/// Header record to be used to initialize the line record.
	/// </param>
    void initFromHeader(TMSCarrierFuelIndexTable _fuelIndexTable)
    {
        this.CarrierFuelIndexCode = _fuelIndexTable.CarrierFuelIndexCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>tmsCarrierFuelIndexLine</c> record exists.
	/// </summary>
	/// <param name="_tmsCarrierFuelIndexCode">
	/// Carrier fuel index code of the record.
	/// </param>
	/// <param name="_tmsEffectiveUTCDateTime">
	/// Effective starting date of the fuel index line.
	/// </param>
	/// <param name="_tmsPPGFrom">
	/// Minimum PPG value of the record.
	/// </param>
	/// <param name="_tmsPPGTo">
	/// Maximum PPG value of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(TMSCarrierFuelIndexCode         _tmsCarrierFuelIndexCode,
                                TMSEffectiveUTCDateTimeFrom     _tmsEffectiveUTCDateTime,
                                TMSPPG                          _tmsPPGFrom,
                                TMSPPG                          _tmsPPGTo)
    {
        return (_tmsCarrierFuelIndexCode && _tmsEffectiveUTCDateTime && _tmsPPGFrom && _tmsPPGTo) &&
               (select firstonly tmsCarrierFuelIndexLine
                where tmsCarrierFuelIndexLine.CarrierFuelIndexCode == _tmsCarrierFuelIndexCode &&
                      tmsCarrierFuelIndexLine.EffectiveUTCDateTime == _tmsEffectiveUTCDateTime &&
                      tmsCarrierFuelIndexLine.ppgFrom   == _tmsPPGFrom &&
                      tmsCarrierFuelIndexLine.ppgTo     == _tmsPPGTo).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>tmsCarrierFuelIndexLine</c> record with given parameters.
	/// </summary>
	/// <param name="_tmsCarrierFuelIndexCode">
	/// Carrier fuel index code of the record.
	/// </param>
	/// <param name="_tmsEffectiveUTCDateTime">
	/// Effective starting date of the fuel index line.
	/// </param>
	/// <param name="_tmsPPGFrom">
	/// Minumum PPG value of the record.
	/// </param>
	/// <param name="_tmsPPGTo">
	/// Maximum PPG value of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static TMSCarrierFuelIndexLine find(TMSCarrierFuelIndexCode      _tmsCarrierFuelIndexCode,
                                               TMSEffectiveUTCDateTimeFrom  _tmsEffectiveUTCDateTime,
                                               TMSPPG                       _tmsPPGFrom,
                                               TMSPPG                       _tmsPPGTo,
                                               boolean                      _forupdate = false)
    {
        TMSCarrierFuelIndexLine    tmsCarrierFuelIndexLine;

        if (_tmsCarrierFuelIndexCode        &&
            _tmsEffectiveUTCDateTime        &&
            _tmsPPGFrom                     &&
            _tmsPPGTo)
        {
            tmsCarrierFuelIndexLine.selectForUpdate(_forupdate);

            select firstonly tmsCarrierFuelIndexLine
                where tmsCarrierFuelIndexLine.CarrierFuelIndexCode == _tmsCarrierFuelIndexCode &&
                      tmsCarrierFuelIndexLine.EffectiveUTCDateTime == _tmsEffectiveUTCDateTime &&
                      tmsCarrierFuelIndexLine.ppgFrom == _tmsPPGFrom &&
                      tmsCarrierFuelIndexLine.ppgTo == _tmsPPGTo;
        }

        return tmsCarrierFuelIndexLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>TMSCarrierFuelIndexLine</c> record by id.
	/// </summary>
	/// <param name="_recId">
	/// Id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static TMSCarrierFuelIndexLine findByRecId(RecId   _recId,
                                                      boolean _forupdate = false)
    {
        TMSCarrierFuelIndexLine    tmsCarrierFuelIndexLine;

        if (_recId)
        {
            tmsCarrierFuelIndexLine.selectForUpdate(_forupdate);

            select firstonly tmsCarrierFuelIndexLine
                where tmsCarrierFuelIndexLine.RecId == _recId;
        }

        return tmsCarrierFuelIndexLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1888</DeveloperDocumentation>
	<FormRef>TMSCarrierFuelIndex</FormRef>
	<Label>@TRX1566</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>CarrierFuelIndexCode</TitleField1>
	<TitleField2>EffectiveUTCDateTime</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>CarrierFuelIndexCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierFuelIndexCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierFuelIndexCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@TRX1387</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PPGFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierFuelIndexCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierFuelIndexCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCarrierFuelIndexCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EffectiveUTCDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@TRX2034</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PPGFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPPG</ExtendedDataType>
			<Label>@TRX495</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PPGTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPPG</ExtendedDataType>
			<Label>@TRX496</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Rate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSRate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CarrierFuelIndexCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CarrierFuelIndexCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PPGFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PPGTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSCarrierFuelIndexTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSCarrierFuelIndexTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierFuelIndexCode</Name>
					<SourceEDT>TMSCarrierFuelIndexCode</SourceEDT>
					<Field>CarrierFuelIndexCode</Field>
					<RelatedField>CarrierFuelIndexCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>