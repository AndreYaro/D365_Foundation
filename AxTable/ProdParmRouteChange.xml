<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdParmRouteChange</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdParmRouteChange extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    public static LineNum lastLineNum(ParmId _parmId)
    {
        if (_parmId)
        {
            ProdParmRouteChange prodParmRouteChange;

            select maxof(LineNum) from prodParmRouteChange
                where prodParmRouteChange.ParmId == _parmId;
            
            return prodParmRouteChange.LineNum;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    public static void deleteParameters(ParmId _parmId)
    {       
        if (_parmId)
        {
            ProdParmRouteChange prodParmRouteChange;

            delete_from prodParmRouteChange
                index hint ParmLineNumIdx
                where prodParmRouteChange.ParmId == _parmId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(ParmId _parmId)
    {
        if (_parmId)
        {
            ProdParmRouteChange prodParmRouteChange;

            select firstonly RecId from prodParmRouteChange
                index hint NumProdNumIdx
                where prodParmRouteChange.ParmId == _parmId;
            
            return prodParmRouteChange.RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existProdId</Name>
				<Source><![CDATA[
    public static boolean existProdId(ParmId _parmId, ProdId _prodId)
    {
        if (_parmId && _prodId)
        {
            ProdParmRouteChange prodParmRouteChange;

            select firstonly RecId from prodParmRouteChange
                index hint NumProdNumIdx
                where prodParmRouteChange.ParmId == _parmId &&
                      prodParmRouteChange.ProdId == _prodId;
            
            return prodParmRouteChange.RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLineNum</Name>
				<Source><![CDATA[
    public static boolean existLineNum(ParmId _parmId, LineNum _lineNum)
    {
        if (_parmId && _lineNum)
        {
            ProdParmRouteChange prodParmRouteChange;

            select firstonly RecId from prodParmRouteChange
                index hint NumProdNumIdx
                where prodParmRouteChange.ParmId == _parmId &&
                      prodParmRouteChange.LineNum == _lineNum;
            
            return prodParmRouteChange.RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordsCountToProcess</Name>
				<Source><![CDATA[
    static int64 recordsCountToProcess(ParmId _parmId)
    {
        if (_parmId)
        {
            ProdParmRouteChange prodParmRouteChange;

            select count(RecId) from prodParmRouteChange
                where prodParmRouteChange.ParmId == _parmId &&                      
                      prodParmRouteChange.IsMarked;

            return prodParmRouteChange.RecId;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    private void initParmDefault()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ProdParmRouteChangeTableDeveloperDocumentation</DeveloperDocumentation>
	<Label>@SCM:ProdParmRouteChangeTableLabel</Label>
	<TableGroup>Worksheet</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>NumProdNumIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>NumProdNumIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FromItem</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ToItem</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsMarked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS21707</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsValid</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS8553</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmLineNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NumProdNumIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProdId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ParmBuffer</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ExecutedDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDateTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobStatus</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Linenum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>