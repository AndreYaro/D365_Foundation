<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostControlTransCommittedCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostControlTransCommittedCost extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromInventJournalTrans</Name>
				<Source><![CDATA[
    public void initFromInventJournalTrans(InventJournalTrans _inventJournalTrans)
    {
        this.DefaultDimension      =   _inventJournalTrans.DefaultDimension;
        this.LineNum        =   _inventJournalTrans.LineNum;
        this.RefId          =   _inventJournalTrans.JournalId;
        this.ProjTransId    =   _inventJournalTrans.ProjTransId;
        this.ProjId         =   _inventJournalTrans.ProjId;
        this.CategoryId     =   _inventJournalTrans.ProjCategoryId;
        this.EmplItemId     =   _inventJournalTrans.ItemId;
        this.ActivityNumber =   _inventJournalTrans.ActivityNumber;
        this.InventTransId  =   _inventJournalTrans.InventTransId;

        this.CommittedCostOrig = CommittedCostOrig::ItemJournal;
        this.ProjType = ProjTable::find(this.ProjId).Type;
        this.VendAccount     =   '';
        this.CurrencyCode   =    CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdBom</Name>
				<Source><![CDATA[
    public void initFromProdBom(ProdBOM _prodBOM)
    {
        ProjTable   projTable;

        projTable= _prodBOM.projTable();

        this.DefaultDimension= _prodBOM.DefaultDimension;
        this.LineNum= _prodBOM.LineNum;
        this.RefId= _prodBOM.ProdId;
        this.ProjTransId= _prodBOM.ProjTransId;
        this.CategoryId = _prodBOM.ProjCategoryId;
        this.EmplItemId = _prodBOM.ItemId;
        this.ActivityNumber = _prodBOM.ActivityNumber;
        this.InventTransId= _prodBOM.InventTransId;

        this.CurrencyCode =CompanyInfoHelper::standardCurrency();

        this.CommittedCostOrig = CommittedCostOrig::Production;

        this.ProjId =projTable.ProjId;
        this.ProjType =projTable.Type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdRoute</Name>
				<Source><![CDATA[
    public void initFromProdRoute(ProdRoute _prodRoute,ItemCalcType _calcType)
    {
        switch (_calcType)
        {
            case ItemCalcType::Process:
                this.CategoryId = _prodRoute.ProcessCategoryId;
                break;
            case ItemCalcType::Setup:
                this.CategoryId = _prodRoute.SetUpCategoryId;
                break;
            case ItemCalcType::Qty:
                this.CategoryId = _prodRoute.QtyCategoryId;
                break;
        }
        this.RefId= _prodRoute.ProdId;

        this.DefaultDimension = _prodRoute.DefaultDimension;

        this.Resource = ResourceFacade::findByResourceBackingEntity(_prodRoute.getResource(false));

        this.ResourceCategory = ResourceFacade::getResourceCategory(this.Resource, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        this.CurrencyCode =CompanyInfoHelper::standardCurrency();

        this.CommittedCostOrig = CommittedCostOrig::Production;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdRouteProj</Name>
				<Source><![CDATA[
    public void initFromProdRouteProj(ProdRouteProj _prodRouteProj)
    {
        this.RefId= _prodRouteProj.ProdId;
        this.ProjTransId= _prodRouteProj.ProjTransId;
        this.ProjId = _prodRouteProj.ProjId;
        this.ActivityNumber = _prodRouteProj.ActivityNumber;
        this.CurrencyCode =CompanyInfoHelper::standardCurrency();
        this.CommittedCostOrig = CommittedCostOrig::Production;
        this.ProjType = _prodRouteProj.projTable().Type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdTable</Name>
				<Source><![CDATA[
    public void initFromProdTable(ProdTable _prodTable)
    {
        this.DefaultDimension= _prodTable.DefaultDimension;
        this.LineNum= 0;
        this.RefId= _prodTable.ProdId;
        this.ProjTransId= _prodTable.ProjTransId;
        this.ProjId = _prodTable.ProjId;
        this.CategoryId = _prodTable.ProjCategoryId;
        this.EmplItemId = _prodTable.ItemId;
        this.ActivityNumber = _prodTable.ActivityNumber;
        this.InventTransId= _prodTable.InventTransId;

        this.CurrencyCode =CompanyInfoHelper::standardCurrency();

        this.CommittedCostOrig = CommittedCostOrig::Production;
        this.ProjType = ProjTable::find(this.ProjId).Type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjJournalTrans</Name>
				<Source><![CDATA[
    public void initFromProjJournalTrans(ProjJournalTrans _projJournalTrans)
    {
        this.DefaultDimension      =   _projJournalTrans.DefaultDimension;
        this.LineNum        =   _projJournalTrans.LineNum;
        this.RefId          =   _projJournalTrans.JournalId;
        this.ProjTransId    =   _projJournalTrans.TransId;
        this.ProjId         =   _projJournalTrans.ProjId;
        this.CategoryId     =   _projJournalTrans.CategoryId;
        this.ActivityNumber =   _projJournalTrans.ActivityNumber;
        this.Resource       =   _projJournalTrans.Resource;
        this.ResourceCategory = _projJournalTrans.ResourceCategory;

        this.CommittedCostOrig = CommittedCostOrig::HourJournal;
        this.ProjType = ProjTable::find(this.ProjId).Type;
        this.VendAccount     =   '';
        this.CurrencyCode   =    CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    public void initFromPurchLine(PurchLine _purchLine)
    {
        this.DefaultDimension= _purchLine.DefaultDimension;
        this.LineNum= any2real(_purchLine.LineNumber);
        this.RefId= _purchLine.PurchId;
        this.ProjTransId= _purchLine.ProjTransId;
        this.ProjId = _purchLine.ProjId;
        this.CategoryId = _purchLine.ProjCategoryId;
        this.EmplItemId = _purchLine.ItemId;
        this.ActivityNumber = _purchLine.ActivityNumber;
        this.InventTransId= _purchLine.InventTransId;
        this.VendAccount= _purchLine.VendAccount;
        this.CurrencyCode = _purchLine.CurrencyCode;

        this.CommittedCostOrig = CommittedCostOrig::PurchaseOrder;
        this.ProjType = ProjTable::find(this.ProjId).Type;
        this.SourceDocumentLine = _purchLine.SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchReqLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current <c>CostControlTransCommittedCost</c> table record based on the data in the
    ///    specified <c>PurchReqLine</c> record.
    /// </summary>
    /// <param name="_purchReqLine">
    ///    The <c>PurchReqLine</c> record that contains the data to copy.
    /// </param>
    public void initFromPurchReqLine(PurchReqLine _purchReqLine)
    {
        this.DefaultDimension = _purchReqLine.DefaultDimension;
        this.LineNum = _purchReqLine.LineNum;
        this.RefId = PurchReqTable::find(_purchReqLine.PurchReqTable).PurchReqId;
        this.ProjTransId = _purchReqLine.ProjTransId;
        this.ProjId = _purchReqLine.ProjId;
        this.CategoryId = _purchReqLine.ProjCategoryId;
        this.EmplItemId = _purchReqLine.ItemId;
        this.ActivityNumber = _purchReqLine.ActivityNumber;
        this.VendAccount = _purchReqLine.VendAccount;
        this.CurrencyCode = _purchReqLine.CurrencyCode;
        this.CommittedCostOrig = CommittedCostOrig::PurchaseRequisition;
        this.ProjType = ProjTable::find(this.ProjId).Type;
        this.SourceDocumentLine = _purchReqLine.SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesLine</Name>
				<Source><![CDATA[
    public void initFromSalesLine(SalesLine _salesLine)
    {
        this.DefaultDimension   =   _salesLine.DefaultDimension;
        this.LineNum            =   _salesLine.LineNum;
        this.RefId              =   _salesLine.SalesId;
        this.ProjTransId        =   _salesLine.ProjTransId;
        this.ProjId             =   _salesLine.ProjId;
        this.CategoryId         =   _salesLine.ProjCategoryId;
        this.EmplItemId         =   _salesLine.ItemId;
        this.ActivityNumber     =   _salesLine.ActivityNumber;
        this.InventTransId      =   _salesLine.InventTransId;
        this.SourceDocumentLine =   _salesLine.SourceDocumentLine;
        this.VendAccount        =   '';

        if (_salesLine.SalesType == SalesType::ItemReq)
        {
            this.CommittedCostOrig = CommittedCostOrig::ItemRequirement;
        }
        else
        {
            this.CommittedCostOrig = CommittedCostOrig::SalesOrder;
        }
        this.ProjType = ProjTable::find(this.ProjId).Type;
        this.CurrencyCode   =    CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {       
        ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(tableStr(CostControlTransCommittedCost));
        using (var activityContext = logger.projOpsManagementActivity().insertCommittedCostContext())
        {
            CostControlTransCommittedCost::addLoggingCustomProperty(activityContext, this);

            real lastNum = CostControlTransCommittedCost::lastLineNum(this.RefId);
            ProjTransIdBase oldProjTransId = CostControlTransCommittedCost::findByLineNum(this.CommittedCostOrig, this.RefId, this.LineNum).ProjTransId;
            if (oldProjTransId && this.LineNum <= lastNum && this.ProjTransId != oldProjTransId)
            {
                CostControlTransCommittedCost CostControlTransCommittedCost;
                select firstonly RecId from CostControlTransCommittedCost
                    where CostControlTransCommittedCost.ProjTransId == this.projTransId;
                if (CostControlTransCommittedCost.RecId)
                {
                    this.LineNum = lastNum;
                }
                else
                {
                    this.LineNum = lastNum + 1;
                }

            }
            
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(tableStr(CostControlTransCommittedCost));
        using (var activityContext = logger.projOpsManagementActivity().updateCommittedCostContext())
        {
            CostControlTransCommittedCost::addLoggingCustomProperty(activityContext, this);

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(tableStr(CostControlTransCommittedCost));        
        using (var activityContext = logger.projOpsManagementActivity().deleteCommittedCostContext())
        {
            CostControlTransCommittedCost::addLoggingCustomProperty(activityContext, this);

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addLoggingCustomProperty</Name>
				<Source><![CDATA[
    internal static void addLoggingCustomProperty(SysInstrumentationActivityContext _activityContext, CostControlTransCommittedCost _costControlTransCommittedCost)
    {
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::ProjectIdProperty, any2Str(ProjTable::find(_costControlTransCommittedCost.ProjId).RecId));
        _activityContext.addCustomProperty(ProjOpsManagementInstrumentationActivities::CommittedCostOrig, enum2Symbol(enumNum(CommittedCostOrig), _costControlTransCommittedCost.CommittedCostOrig));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::SourceDocumentLineProperty, any2Str(_costControlTransCommittedCost.SourceDocumentLine));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::IsOpenProperty, any2Str(_costControlTransCommittedCost.Open));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::TransIdProperty, _costControlTransCommittedCost.ProjTransId);
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::TransTypeProperty, enum2Symbol(enumNum(ProjTransType), _costControlTransCommittedCost.ProjTransType));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::QtyProperty, any2Str(_costControlTransCommittedCost.Qty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>origin</Name>
				<Source><![CDATA[
    ProjOrigin origin()
    {
        ProjOrigin          origin;
        VendInvoiceInfoLine vendInvoiceInfoLine;

        switch (this.CommittedCostOrig)
        {
            case CommittedCostOrig::None:
                origin = ProjOrigin::None;
                break;
            case CommittedCostOrig::PurchaseRequisition:
                origin = ProjOrigin::PurchaseRequisition;
                break;
            case CommittedCostOrig::PurchaseOrder:
                origin = ProjOrigin::PurchaseOrder;
                break;
            case CommittedCostOrig::VendorInvoice:
                origin = ProjOrigin::PurchaseOrder;
                vendInvoiceInfoLine = VendInvoiceInfoLine::findSourceDocumentLine(this.SourceDocumentLine);
                if (vendInvoiceInfoLine &&
                vendInvoiceInfoLine.isNonPO())
                {
                    origin = ProjOrigin::VendorInvoice;
                }
                break;
            case CommittedCostOrig::SalesOrder:
                origin = ProjOrigin::SalesOrder;
                break;
            case CommittedCostOrig::Production:
                origin = ProjOrigin::ProductionConsumed;
                break;
            case CommittedCostOrig::ItemRequirement:
                origin = ProjOrigin::ItemRequirement;
                break;
            case CommittedCostOrig::ItemJournal:
                origin = ProjOrigin::ItemJournal;
                break;
        }

        return origin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addNegativeRecord</Name>
				<Source><![CDATA[
    static void addNegativeRecord(CostControlTransCommittedCost record, NoYes setReversed, Voucher _voucher, LedgerDimensionDefaultAccount _ledgerDimensionDefaultAccount, TransDate _ledgerTransDate=DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        CostControlTransCommittedCost       costControlTransCommittedCost;

        costControlTransCommittedCost = record.data();
        costControlTransCommittedCost.Qty = -record.Qty;
        costControlTransCommittedCost.CommittedDate = record.CommittedDate;
        costControlTransCommittedCost.Reverse = setReversed;
        if (setReversed)
        {
            costControlTransCommittedCost.LedgerDimension = _ledgerDimensionDefaultAccount;
            costControlTransCommittedCost.Voucher       = _voucher;
            costControlTransCommittedCost.CommittedDate = _ledgerTransDate;
        }
        costControlTransCommittedCost.Amount = -record.Amount;
        costControlTransCommittedCost.AmountMst = -record.AmountMst;
        costControlTransCommittedCost.doInsert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearWIPPeriod</Name>
				<Source><![CDATA[
    public static void clearWIPPeriod(ProjId _projId, ProjPeriodTo _projPeriodTo)
    {
        CostControlTransCommittedCost   costControlTransCommittedCost;
        ProjTable                       projTable;

        while select wipProject, ProjId from projTable
        where projTable.wipProject == _projId
        join forupdate costControlTransCommittedCost
            where costControlTransCommittedCost.ProjId == projTable.ProjId
                && costControlTransCommittedCost.wipPeriod == _projPeriodTo
        {
            costControlTransCommittedCost.wipPeriod     = dateNull();
            costControlTransCommittedCost.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existOpenBySourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>CostControlTransCommittedCost</c> table exists.
    /// </summary>
    /// <param name="_sourceDocumentLine">
    /// The record ID of the <c>SourceDocumentLine</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists, otherwise, false.
    /// </returns>
    public static boolean existOpenBySourceDocumentLine(RefRecId _sourceDocumentLine)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;

        select firstonly RecId from costControlTransCommittedCost
        where costControlTransCommittedCost.SourceDocumentLine ==_sourceDocumentLine &&
            costControlTransCommittedCost.Open == NoYes::Yes;

        return (costControlTransCommittedCost.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLineNum</Name>
				<Source><![CDATA[
    public static CostControlTransCommittedCost findByLineNum(CommittedCostOrig            _orig,
                                                          Num                          _refId,
                                                          LineNum                      _lineNum,
                                                          boolean                      _update = false)
    {
        CostControlTransCommittedCost   costControlTransCommittedCost;

        if (_orig && _refId)
        {
            costControlTransCommittedCost.selectForUpdate(_update);

            select firstonly costControlTransCommittedCost
            where costControlTransCommittedCost.CommittedCostOrig  == _orig
                && costControlTransCommittedCost.RefId             == _refId
                && costControlTransCommittedCost.LineNum           == _lineNum;
        }

        return costControlTransCommittedCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProjTransID</Name>
				<Source><![CDATA[
    public static CostControlTransCommittedCost findByProjTransID(Num _projTransID, boolean _forUpdate=false)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;
        if (_projTransID)
        {
            costControlTransCommittedCost.selectForUpdate(_forUpdate);
            select firstonly costControlTransCommittedCost
        where costControlTransCommittedCost.ProjTransId==_projTransID;
        }
        return costControlTransCommittedCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOpenedByInventTransID</Name>
				<Source><![CDATA[
    public static CostControlTransCommittedCost findOpenedByInventTransID(InventTransId _inventTransId, boolean _forUpdate=false)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;
        if (_inventTransId)
        {
            costControlTransCommittedCost.selectForUpdate(_forUpdate);
            select firstonly costControlTransCommittedCost
        where costControlTransCommittedCost.InventTransId==_inventTransId
        &&    costControlTransCommittedCost.Open == NoYes::Yes;
        }
        return costControlTransCommittedCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOpenedByLineNum</Name>
				<Source><![CDATA[
    public static CostControlTransCommittedCost findOpenedByLineNum(CommittedCostOrig            _orig,
                                                                Num                          _refId,
                                                                LineNum                      _lineNum,
                                                                boolean                      _update = false)
    {
        CostControlTransCommittedCost   costControlTransCommittedCost;

        if (_orig && _refId)
        {
            costControlTransCommittedCost.selectForUpdate(_update);

            select firstonly costControlTransCommittedCost
            where costControlTransCommittedCost.CommittedCostOrig  == _orig
                && costControlTransCommittedCost.RefId             == _refId
                && costControlTransCommittedCost.LineNum           == _lineNum
                && costControlTransCommittedCost.Open              == NoYes::Yes;
        }

        return costControlTransCommittedCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOpenedByProjTransID</Name>
				<Source><![CDATA[
    public static CostControlTransCommittedCost findOpenedByProjTransID(Num _projTransID, boolean _forUpdate=false)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;
        if (_projTransID)
        {
            costControlTransCommittedCost.selectForUpdate(_forUpdate);
            select firstonly costControlTransCommittedCost
                where costControlTransCommittedCost.ProjTransId==_projTransID
                    && costControlTransCommittedCost.Open == NoYes::Yes;
        }
        return costControlTransCommittedCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWIPCommittedCostOpen</Name>
				<Source><![CDATA[
    public static boolean isWIPCommittedCostOpen(ProjWipId _projWipId, ProjMsgLevel    _infoMsgType = ProjMsgLevel::None)
    {
        CostControlTransCommittedCost   costControlTransCommittedCost;
        ProjTable                       projTable;
        boolean                         ret;

        ret = false;

        while select wipProject, ProjId from projTable
        where projTable.wipProject == _projWipId
        join ProjId, Open from costControlTransCommittedCost
        where   costControlTransCommittedCost.ProjId == projTable.ProjId
        &&      costControlTransCommittedCost.Open
        {
            switch (_infoMsgType)
            {
                case ProjMsgLevel::Info :

                info(strFmt("@SYS116516",
                    costControlTransCommittedCost.ProjId));
                    break;

                case ProjMsgLevel::Warning :
                warning(strFmt("@SYS116516",
                    costControlTransCommittedCost.ProjId));
                    break;

                case ProjMsgLevel::Error :
                error(strFmt("@SYS116516",
                    costControlTransCommittedCost.ProjId));
            }

            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    public static LineNum lastLineNum(Num _refId)
    {
        return (select maxof(LineNum) from costControlTransCommittedCost
            where costControlTransCommittedCost.RefId == _refId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBySourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes <c>CostControlTransCommittedCost</c> records related to a source document line.
    /// </summary>
    /// <param name = "_sourceDocumentLine">The RecId of the related <c>SourceDocumentLine</c> record.</param>
    public static void deleteBySourceDocumentLine(RefRecId _sourceDocumentLine)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;

        costControlTransCommittedCost.skipDataMethods(true);
        costControlTransCommittedCost.skipDeleteActions(true);
        costControlTransCommittedCost.skipEvents(true);
        costControlTransCommittedCost.skipDatabaseLog(true);

        delete_from costControlTransCommittedCost
            where costControlTransCommittedCost.SourceDocumentLine == _sourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBySourceDocumentLineAndAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a <c>CostControlTransCommittedCost</c> record related to a source document line with a specific amount.
    /// </summary>
    /// <param name = "_sourceDocumentLine">The RecId of the related <c>SourceDocumentLine</c> record.</param>
    /// <param name = "_sourceDocumentLineAmount">The Amount of the related <c>SourceDocumentLine</c> record.</param>
    public static void deleteBySourceDocumentLineAndAmount(
        RefRecId _sourceDocumentLine,
        AmountCur _sourceDocumentLineAmount)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;

        select firstonly forupdate costControlTransCommittedCost
            where costControlTransCommittedCost.SourceDocumentLine == _sourceDocumentLine
                && costControlTransCommittedCost.Amount == _sourceDocumentLineAmount;

        costControlTransCommittedCost.delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransToOpenBySourceDocumentLineAndAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a <c>CostControlTransCommittedCost</c> record to open.
    /// </summary>
    /// <param name = "_sourceDocumentLine">The RecId of the related <c>SourceDocumentLine</c> record.</param>
    /// <param name = "_sourceDocumentLineAmount">The Amount of the related <c>SourceDocumentLine</c> record.</param>
    public static void setTransToOpenBySourceDocumentLineAndAmount(
        RefRecId _sourceDocumentLine,
        AmountCur _sourceDocumentLineAmount)
    {
        CostControlTransCommittedCost costControlTransCommittedCost;

        select firstonly forupdate costControlTransCommittedCost
            where costControlTransCommittedCost.SourceDocumentLine == _sourceDocumentLine
                && costControlTransCommittedCost.Amount == _sourceDocumentLineAmount
                && costControlTransCommittedCost.Open == NoYes::No;

        if (costControlTransCommittedCost)
        {
            costControlTransCommittedCost.Open = NoYes::Yes;
            costControlTransCommittedCost.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS125014</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS102748</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ProjId</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMst</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS53072</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMst</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Estimate</Name>
			<Label>@SYS54063</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WIPPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS80304</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Open</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reverse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS40147</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittedCostOrig</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmActivityNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMst</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CommittedCostOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CommittedCostOrig</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CommittedDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS102752</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjEmplItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Open</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS102750</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS25395</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceCategory</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reverse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8776</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WIPPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPeriodFromWIP</ExtendedDataType>
			<Label>@SYS74643</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CategoryId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Open</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendAccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CommittedLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CommittedCostOrig</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>projWIPIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WIPPeriod</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceDocumentLineIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ResourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Resource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Currency_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Item</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124931</EntityRelationshipRole>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Item</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplItemId</Name>
					<Field>EmplItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_CostControlTransCommittedCost</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjCategory_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjTable_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceCategoryView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResourceCategory</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmActivities</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmActivities_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<SourceEDT>smmActivityNumber</SourceEDT>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SourceDocumentLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SourceDocumentLine_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentLine</Name>
					<Field>SourceDocumentLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_CostControlTransCommittedCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ResResourceIdentifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>