<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentBatchSubmissionInvoiceTmpTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using System.Collections;

public class BusinessDocumentBatchSubmissionInvoiceTmpTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustVendInvoiceJour</Name>
				<Source><![CDATA[
    private void initFromCustVendInvoiceJour(CustVendInvoiceJour _invoiceJour, BusinessDocumentState _submissionState)
    {
        this.InvoiceId = _invoiceJour.InvoiceId;
        this.InvoiceDate = _invoiceJour.InvoiceDate;
        this.AccountNum = _invoiceJour.InvoiceAccount;
        this.SubmissionStatus = _submissionState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustInvoiceJour</Name>
				<Source><![CDATA[
    private void initFromCustInvoiceJour(CustInvoiceJour _custInvoiceJour, BusinessDocumentState _submissionState)
    {
        this.initFromCustVendInvoiceJour(_custInvoiceJour, _submissionState);
        this.TaxInvoiceSalesId = _custInvoiceJour.TaxInvoiceSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjInvoiceJour</Name>
				<Source><![CDATA[
    private void initFromProjInvoiceJour(ProjInvoiceJour _projInvoiceJour, BusinessDocumentState _submissionState)
    {
        this.initFromCustVendInvoiceJour(_projInvoiceJour, _submissionState);
        this.TaxInvoiceSalesId = _projInvoiceJour.TaxInvoiceSalesId_ID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceJour</Name>
				<Source><![CDATA[
    private void initFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour, BusinessDocumentState _submissionState)
    {
        this.initFromCustVendInvoiceJour(_vendInvoiceJour, _submissionState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromXrmEntity</Name>
				<Source><![CDATA[
    private void initFromXrmEntity(Microsoft.Xrm.Sdk.Entity _entity)
    {
        var attributes = _entity.get_Attributes();
        if (attributes.Contains(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceIdFieldName))
        {
            this.InvoiceId = attributes.get_Item(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceIdFieldName);
        }
        if (attributes.Contains(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceDateFieldName))
        {
            this.InvoiceDate = any2Date(attributes.get_Item(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceDateFieldName));
        }
        if (attributes.Contains(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceAccountFieldName))
        {
            this.AccountNum = attributes.get_Item(BusinessDocumentDataverseClient::SubmissionDocumentsEntityInvoiceAccountFieldName);
        }
        if (attributes.Contains(BusinessDocumentDataverseClient::SubmissionDocumentsEntityTaxInvoiceSalesIdFieldName))
        {
            this.TaxInvoiceSalesId = attributes.get_Item(BusinessDocumentDataverseClient::SubmissionDocumentsEntityTaxInvoiceSalesIdFieldName);
        }
        this.SubmissionStatus = BusinessDocumentState::Completed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillFromSubmissionTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills table by a given submission table record.
    /// </summary>
    /// <param name = "_submissionTable">A <c>BusinessDocumentSubmission</c> table record.</param>
    internal void fillFromSubmissionTable(BusinessDocumentSubmission _submissionTable)
    {
        if (_submissionTable.RefTableId != tableNum(BusinessDocumentBatchSubmission))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        RefRecId batchSubmissionRecId = _submissionTable.RefRecId;
        BusinessDocumentBatchSubmissionItem itemTable;

        while select RefTableId, RefRecId from itemTable
            where itemTable.BatchSubmissionId == batchSubmissionRecId
        {
            switch (itemTable.RefTableId)
            {
                case tableNum(CustInvoiceJour):
                    this.initFromCustInvoiceJour(CustInvoiceJour::findRecId(itemTable.RefRecId), _submissionTable.State);
                    this.insert();
                    break;
                case tableNum(ProjInvoiceJour):
                    this.initFromProjInvoiceJour(ProjInvoiceJour::findRecId(itemTable.RefRecId), _submissionTable.State);
                    this.insert();
                    break;
                case tableNum(VendInvoiceJour):
                    this.initFromVendInvoiceJour(VendInvoiceJour::findRecId(itemTable.RefRecId), _submissionTable.State);
                    this.insert();
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillFromDataverseEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills table from a given Dataverse entity collection.
    /// </summary>
    /// <param name = "_dataCollection">A Dataverse entity collection.</param>
    internal void fillFromDataverseEntities(IEnumerable _dataCollection)
    {
        var i = _dataCollection.GetEnumerator();
        if (i.MoveNext())
        {
            Microsoft.Xrm.Sdk.Entity entity = i.get_Current();
            this.initFromXrmEntity(entity);
            this.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@BusinessDocumentSubmissionService:BatchSubmissionInvoicesDevDoc</DeveloperDocumentation>
	<Label>@BusinessDocumentSubmissionService:BatchSubmissionInvoices</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>InvoiceId</TitleField1>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubmissionStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AccountNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubmissionStatus</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BusinessDocumentState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxInvoiceSalesId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxInvoiceSalesId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>