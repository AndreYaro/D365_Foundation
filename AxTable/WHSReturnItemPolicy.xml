<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnItemPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSReturnItemPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(WHSReturnItemPolicy, AllowedDaysForReturn), [fieldnum(WHSReturnItemPolicy, ReturnAcceptance)]],
            [fieldnum(WHSReturnItemPolicy, ItemRelation), [fieldnum(WHSReturnItemPolicy, ItemCode)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(WHSReturnItemPolicy, AllowedDaysForReturn):
                this.defaultAllowedDaysForReturn();
                break;
            case fieldnum(WHSReturnItemPolicy, ItemRelation):
                this.defaultItemRelation();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAllowedDaysForReturn</Name>
				<Source><![CDATA[
    private void defaultAllowedDaysForReturn()
    {
        if (this.ReturnAcceptance != WHSReturnItemPolicyReturnAcceptance::AllowedDaysAfterShipment)
        {
            this.AllowedDaysForReturn = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemRelation</Name>
				<Source><![CDATA[
    private void defaultItemRelation()
    {
        // Clear ItemRelation when ItemCode is modified as different ItemCode values change which table the ItemRelation field points to.
        this.ItemRelation = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = this.validateAllowedDaysForReturn() && ret;
        ret = this.validateItemRelation() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSReturnItemPolicy, AllowedDaysForReturn):
                ret = this.validateAllowedDaysForReturn() && ret;
                break;
            case fieldNum(WHSReturnItemPolicy, ItemRelation):
                ret = this.validateItemRelation() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAllowedDaysForReturn</Name>
				<Source><![CDATA[
    private boolean validateAllowedDaysForReturn()
    {
        if (this.ReturnAcceptance == WHSReturnItemPolicyReturnAcceptance::AllowedDaysAfterShipment)
        {
            if (this.AllowedDaysForReturn == 0)
            {
                return checkFailed("@WAX:WHSReturnItemPolicyAllowedDaysAfterEventZero_Error");
            }
        }
        else if (this.AllowedDaysForReturn != 0)
        {
            return checkFailed("@WAX:WHSReturnItemPolicyAllowedDaysAfterEventNotZero_Error");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemRelation</Name>
				<Source><![CDATA[
    private boolean validateItemRelation()
    {
        switch (this.ItemCode)
        {
            case TableGroupAll::All:
                if (this.ItemRelation != '')
                {
                    return checkFailed("@WAX:WHSReturnItemPolicyItemRelationMustBeBlank_Error");
                }
                break;
            case TableGroupAll::GroupId:
                if (!InventItemGroup::exist(this.ItemRelation))
                {
                    return checkFailed(strFmt("@WAX:WHSReturnItemPolicyGroupIdNotExists_Error", this.ItemRelation));
                }
                break;
            case TableGroupAll::Table:
                if (!WHSInventEnabled::exist(this.ItemRelation))
                {
                    return checkFailed(strFmt("@WAX:WHSReturnItemPolicyWHSItemIdNotExists_Error", this.ItemRelation));
                }
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    internal static WHSReturnItemPolicy find(
        WHSReturnItemCode       _itemCode,
        WHSReturnItemRelation   _itemRelation,
        boolean                 _forUpdate      = false)
    {
        WHSReturnItemPolicy returnItemPolicy;

        returnItemPolicy.selectForUpdate(_forUpdate);

        select firstonly returnItemPolicy
            where returnItemPolicy.ItemCode == _itemCode
                && returnItemPolicy.ItemRelation == _itemRelation;

        return returnItemPolicy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSReturnItemPolicy_DevDoc</DeveloperDocumentation>
	<Label>@WAX:WHSReturnItemPolicy</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Reference</TableGroup>
	<TitleField1>ItemCode</TitleField1>
	<TitleField2>ItemRelation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ItemCodeItemRelationIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Warehouse</Modules>
	<PrimaryIndex>ItemCodeItemRelationIdx</PrimaryIndex>
	<ReplacementKey>ItemCodeItemRelationIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnItemCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnItemRelation</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReturnAcceptance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSReturnItemPolicyReturnAcceptance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AllowedDaysForReturn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnItemPolicyAllowedDaysForReturn</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemCodeItemRelationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>