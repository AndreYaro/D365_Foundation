<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailOfflineTerminalState</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailOfflineTerminalState extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find retailOfflineTerminalState record filter by recid of RetailOfflineTerminalStateData.
    /// </summary>
    /// <param name = "_recId">RecId of RetailOfflineTerminalStateData</param>
    /// <param name = "_forUpdate">ForUpdate</param>
    /// <returns>The record.</returns>
    static RetailOfflineTerminalState find(RecId _recId, boolean _forUpdate = false)
    {
        RetailOfflineTerminalState  retailOfflineTerminalState;
        retailOfflineTerminalState.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly retailOfflineTerminalState
                where retailOfflineTerminalState.RetailOfflineTerminalStateData  == _recId;
        }

        return retailOfflineTerminalState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPendingTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for Pending Transactions as N/A when -1.
    /// </summary>
    /// <returns>Displays the Pending transactions in string value.</returns>
    display str displayPendingTransactions()
    {
        return this.PendingTransactions == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.PendingTransactions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDatabaseSize</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for DatabaseSizeInMB as N/A when -1.
    /// </summary>
    /// <returns>Displays the database size in string value.</returns>

    display str displayDatabaseSize()
    {
        return this.DatabaseSizeInMB == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.DatabaseSizeInMB);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOfflineDbIndexSizeInMb</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for OfflineDbIndexSizeInMB as N/A when -1.
    /// </summary>
    /// <returns>Displays the DbIndex size in string value.</returns>

    display str displayOfflineDbIndexSizeInMb()
    {
        return this.OfflineDbIndexSizeInMB == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.OfflineDbIndexSizeInMB);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayUnusedSpaceInMB</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for UnusedSpaceInMB as N/A when -1.
    /// </summary>
    /// <returns>Displays the Unused Space size in string value.</returns>
    display str displayUnusedSpaceInMB()
    {
        return this.UnusedSpaceInMB == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.UnusedSpaceInMB);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOfflineDbDataSizeInMB</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for OfflineDbDataSizeInMB as N/A when -1.
    /// </summary>
    /// <returns>Displays offline DbData Size in string value.</returns>
    display str displayOfflineDbDataSizeInMB()
    {
        return this.OfflineDbDataSizeInMB == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.OfflineDbDataSizeInMB);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayUnallocatedSpaceInMB</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method to display for UnallocatedSpaceInMB as N/A when -1.
    /// </summary>
    /// <returns>Displays the Unallocated Space size in string value.</returns>
    display str displayUnallocatedSpaceInMB()
    {
        return this.UnallocatedSpaceInMB == -1 ? "@Retail:RetailOfflineTerminalStatusDashBoardNA" : int2Str(this.UnallocatedSpaceInMB);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTimeGapCalculateLastStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///  The method for getting last status.
    /// </summary>
    /// <returns>Displays the last status in string value.</returns>
    display str displayTimeGapCalculateLastStatus()
    {
        str ret;

        int64 seconds = DateTimeUtil::getDifference(DateTimeUtil::utcNow(), this.TerminalStateDateTime);
        ret = RetailOfflineTerminalState::timeGap(seconds);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>timeGap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculating the time between now and timestamp.
    /// </summary>
    /// <param name = "_timeGap">
    /// The time in seconds.
    /// </param>
    /// <returns>
    /// Converts the time gap into string.
    /// </returns>
    internal static str timeGap(int64 _timeGap)
    {
        const int OneMinute = 60;
        const int OneHour = 60 * 60;
        const int OneDay = 24 * 60 * 60;
        str result;
        int timeGap;

        _timeGap = abs(_timeGap);

        if (_timeGap < OneHour)
        {
            // Calculating time in minutes.
            timeGap =  _timeGap / OneMinute;

            if (timeGap <= 1)
            {
                result = "@Retail:RetailOfflineTerminalStatusDashBoardMinuteAgo";
            }
            else
            {
                result = strFmt("@Retail:RetailOfflineTerminalStatusDashBoardMinutesAgo", timeGap);
            }
        }
        else if (_timeGap >= OneHour && _timeGap < OneDay)
        {
            // Calculating time in hours.
            timeGap = _timeGap/ OneHour;

            if (timeGap <= 1)
            {
                result = "@Retail:RetailOfflineTerminalStatusDashBoardHourAgo";
            }
            else
            {
                result = strFmt("@Retail:RetailOfflineTerminalStatusDashBoardHoursAgo", timeGap);
            }
        }
        else if (_timeGap >= OneDay)
        {
            // Calculating time in days.
            timeGap = _timeGap / OneDay;

            if (timeGap <= 1)
            {
                result = "@Retail:RetailOfflineTerminalStatusDashBoardDayAgo";
            }
            else
            {
                timeGap = (timeGap > 999) ? 999 : timeGap;
                result = strFmt("@Retail:RetailOfflineTerminalStatusDashBoardDaysAgo", timeGap);
            }
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@Retail:RetailOfflineTerminalStatusDashBoardTitle</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>TerminalId</TitleField1>
	<TitleField2>MPOSVersion</TitleField2>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Retail</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@Retail:RetailOfflineTerminalStateGeneral</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TerminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MPOSVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TerminalStateDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OfflineStatus</Name>
			<Label>@Retail:RetailOfflineTerminalStateOfflineStatus</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OfflineOperatorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineOperationError</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineOperation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineAvailable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineConnectionStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OfflineDatabaseInfo</Name>
			<Label>@Retail:RetailOfflineTerminalStateOfflineDatabaseInfo</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OfflineDBVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PendingTransactions</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OfflineDatabaseSize</Name>
			<Label>@Retail:RetailOfflineTerminalStateOfflineDatabaseSize</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OfflineDbDataSizeInMB</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineDbIndexSizeInMB</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnallocatedSpaceInMB</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnusedSpaceInMB</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DatabaseSizeInMB</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfflineOperatorId</Name>
			<ExtendedDataType>RetailStaffId</ExtendedDataType>
			<Label>@Retail:RetailOfflineOperatorId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfflineOperationError</Name>
			<ExtendedDataType>Notes</ExtendedDataType>
			<Label>@Retail:RetailOfflineOperationError</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailOfflineTerminalStateData</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TerminalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
			<Label>@Retail:RetailOfflineTerminalId</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MPOSVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrentVersion</ExtendedDataType>
			<Label>@Retail:RetailModernPOSVersion</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfflineDBVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrentVersion</ExtendedDataType>
			<Label>@Retail:RetailOfflineDatabaseVersion</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OfflineAvailable</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@Retail:RetailOfflineAvailable</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OfflineConnectionStatus</Name>
			<Label>@Retail:RetailOfflineConnectionStatus</Label>
			<EnumType>RetailOfflineConnectionStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OfflineOperation</Name>
			<Label>@Retail:RetailOfflineOperation</Label>
			<EnumType>RetailOfflineOperation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PendingTransactions</Name>
			<ExtendedDataType>RetailNumberOfTransactions</ExtendedDataType>
			<Label>@Retail:RetailPendingTransactions</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OfflineDbDataSizeInMB</Name>
			<ExtendedDataType>RetailOfflineDBSize</ExtendedDataType>
			<Label>@Retail:RetailOfflineDBSizeInMB</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OfflineDbIndexSizeInMB</Name>
			<ExtendedDataType>RetailOfflineDBSize</ExtendedDataType>
			<Label>@Retail:RetailOfflineDBIndexSizeInMB</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnallocatedSpaceInMB</Name>
			<ExtendedDataType>RetailOfflineDBSize</ExtendedDataType>
			<Label>@Retail:RetailUnallocatedSpaceInMB</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnusedSpaceInMB</Name>
			<ExtendedDataType>RetailOfflineDBSize</ExtendedDataType>
			<Label>@Retail:RetailUnusedSpaceInMB</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TerminalStateDateTime</Name>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@Retail:RetailTerminalStateDateTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DatabaseSizeInMB</Name>
			<ExtendedDataType>RetailOfflineDBSize</ExtendedDataType>
			<Label>@Retail:RetailDatabaseSizeInMB</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TerminalId_Idx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TerminalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OfflineAvailable_Idx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OfflineAvailable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OfflineConnectionStatus_Idx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OfflineConnectionStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailOfflineTerminalStateData</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailOfflineTerminalStateData</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailOfflineTerminalStateData</Name>
					<Field>RetailOfflineTerminalStateData</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailTerminalTable</Name>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TerminalId</Name>
					<Field>TerminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>