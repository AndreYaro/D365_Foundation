<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionMatrixLine_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DimensionMatrixLine_CN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimensionName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the dimension value name for the specified dimension value.
    /// </summary>
    /// <returns>
    ///     The dimension value name.
    /// </returns>
    public display Name getDimensionName()
    {
        DimensionMatrixTable_CN   dimensionMatrixTable;
        DimensionAttribute        dimensionAttribute;
        Name                      dimensionName;

        dimensionMatrixTable = DimensionMatrixTable_CN::find(this.DimensionMatrixTable);

        dimensionAttribute = DimensionAttribute::find(dimensionMatrixTable.DimensionAttribute);
        dimensionName = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, this.DimensionValue, false, false).getName();
        return dimensionName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>DimensionMatrixLine_CN</c> table; if not, an
    ///    error message is displayed.
    /// </summary>
    /// <param name="_dimensionMatrixTable">
    ///    The record ID of the <c>DimensionMatrixTable_CN</c> record to check for existence.
    /// </param>
    /// <param name="_dimAttributeValue">
    ///    The dimension attribute value to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(
        RefRecId        _dimensionMatrixTable,
        DimensionValue  _dimAttributeValue)
    {
        boolean ret = true;

        if (!DimensionMatrixLine_CN::exist(_dimensionMatrixTable, _dimAttributeValue))
        {
            ret = checkFailed(strfmt(DimensionMatrixLine_CN::txtNotExist(), _dimAttributeValue));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>DimensionMatrixLine_CN</c> table exists.
    /// </summary>
    /// <param name="_dimensionMatrixTable">
    ///    The record ID of the <c>DimensionMatrixTable_CN</c> record to check for existence.
    /// </param>
    /// <param name="_dimAttributeValue">
    ///    The dimension attribute value to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        RefRecId        _dimensionMatrixTable,
        DimensionValue  _dimAttributeValue)
    {
        return _dimensionMatrixTable
            && _dimAttributeValue
            && (select firstonly RecId from dimensionMatrixLine_CN
                    where dimensionMatrixLine_CN.DimensionMatrixTable == _dimensionMatrixTable
                        && dimensionMatrixLine_CN.DimensionValue      == _dimAttributeValue
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>DimensionMatrixLine_CN</c> table.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the <c>DimensionMatrixLine_CN</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>DimensionMatrixLine_CN</c> table; otherwise, an empty record.
    /// </returns>
    public static DimensionMatrixLine_CN find(
        RecId   _recId,
        boolean _forupdate = false)
    {
        DimensionMatrixLine_CN dimensionMatrixLine_CN;

        dimensionMatrixLine_CN.selectForUpdate(_forupdate);

        select firstonly dimensionMatrixLine_CN
            where dimensionMatrixLine_CN.RecId == _recId;

        return dimensionMatrixLine_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findbyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>DimensionMatrixLine_CN</c> table.
    /// </summary>
    /// <param name="_DimensionMatrixTable">
    ///     The record ID of the <c>DimensionMatrixTable_CN</c> record to find.
    /// </param>
    /// <param name="_dimAttributeValue">
    ///     The dimension attribute value.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>DimensionMatrixLine_CN</c> table; otherwise, an empty record.
    /// </returns>
    public static DimensionMatrixLine_CN findbyDimension(
        RefRecId        _DimensionMatrixTable,
        DimensionValue  _dimAttributeValue,
        boolean         _forupdate = false)
    {
        DimensionMatrixLine_CN dimensionMatrixLine_CN;

        if (_DimensionMatrixTable && _dimAttributeValue)
        {
            dimensionMatrixLine_CN.selectForUpdate(_forupdate);

            select firstonly dimensionMatrixLine_CN
                where dimensionMatrixLine_CN.DimensionMatrixTable == _DimensionMatrixTable
                    && dimensionMatrixLine_CN.DimensionValue      == _dimAttributeValue;
        }

        return dimensionMatrixLine_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>DimensionMatrixLine_CN</c> table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@GLS223397";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>CN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64326</DeveloperDocumentation>
	<FormRef>dimensionmatrixSetupSRS_CN</FormRef>
	<Label>@GLS64325</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>DimensionValue</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>DimensionValueIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionMatrixTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DimensionNum</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionMatrixTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionMatrixTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DimensionValue</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DimensionValue</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DimensionMatrixTable_CNIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DimensionMatrixTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DimensionValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionValueIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DimensionValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionMatrixTable_CN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DimensionMatrixTable_CN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionMatrixTable</Name>
					<Field>DimensionMatrixTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>