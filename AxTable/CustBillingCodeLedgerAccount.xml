<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillingCodeLedgerAccount</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustBillingCodeLedgerAccount extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean isValid;
        ;

        isValid = super ( _fieldIdToCheck );

        if ( isValid )
        {
            switch ( _fieldIdToCheck )
            {
                case fieldNum ( CustBillingCodeLedgerAccount, LedgerDimension ):
    //                isValid = LedgerTable::checkTransactionAccount ( this.LedgerAccount );
    //                isValid = isValid && LedgerTable::checkAllowPosting ( this.LedgerAccount, LedgerPostingType::LedgerJournal );
                    break;
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CustBillingCodeLedgerAccount</c> table and shows an error message if it does not.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _recId)
    {
        boolean exist = true;
        ;

        if ( !CustBillingCodeLedgerAccount::exist( _recId ) )
        {
            exist = checkFailed ( strFmt ( CustBillingCodeLedgerAccount::txtNotExist(), _recId ) );
        }

        return exist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Counts the number of ledger accounts associated with a billing code.
    /// </summary>
    /// <param name="_custBillingCodeVersionRecId">
    /// The billing code version record ID to filter the ledger accounts.
    /// </param>
    /// <returns>
    /// The count of ledger accounts associated with the specified billing code.
    /// </returns>
    public static int64 countRecords(RefRecId _custBillingCodeVersionRecId)
    {
        CustBillingCodeLedgerAccount    ledgerAccount;

        select count(RecId)
        from ledgerAccount
        where ledgerAccount.CustBillingCodeVersion == _custBillingCodeVersionRecId;

        return ledgerAccount.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CustBillingCodeLedgerAccount</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        boolean found;
        ;

        found = ( select firstonly RecId
                  from custBillingCodeLedgerAccount
                  where custBillingCodeLedgerAccount.RecId == _recId ).RecId != 0;
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Ledger account based on RecID field.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that determines whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>CustBillingCodeLedgerAccount</c> table buffer.
    /// </returns>
    public static CustBillingCodeLedgerAccount find(
        recId   _recId,
        boolean _forUpdate = false)
    {
        CustBillingCodeLedgerAccount ledgerAccount;
        ;

        ledgerAccount.selectForUpdate(_forUpdate);

        select firstonly ledgerAccount
        where ledgerAccount.RecId == _recId;

        return ledgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustBillingCodeVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>CustBillingCodeLedgerAccount</c> table to find the specified record.
    /// </summary>
    /// <param name="_refRecId">
    /// The record id of billing code version to find.
    /// </param>
    /// <returns>
    /// <c>CustBillingCodeLedgerAccount</c>  table buffer.
    /// </returns>
    public static CustBillingCodeLedgerAccount findByCustBillingCodeVersion(RefRecId _refRecId)
    {
        CustBillingCodeLedgerAccount custBillingCodeLedgerAccount;

        select firstonly
            custBillingCodeLedgerAccount
            where
            custBillingCodeLedgerAccount.CustBillingCodeVersion == _refRecId;

        return custBillingCodeLedgerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sums up the percentages of ledger accounts against a billing code.
    /// </summary>
    /// <param name="_billingCodeRefRecId">
    /// The billing code to filter the ledger accounts.
    /// </param>
    /// <returns>
    /// The sum of ledger accounts' percentages againt the specified billing code.
    /// </returns>
    public static NonNegPercent sumPercent(BillingCodeRefRecId _billingCodeRefRecId)
    {
        CustBillingCodeLedgerAccount    ledgerAccount;
        CustBillingCodeVersion          custBillingCodeVersion;

        select sum( Percentage ), CustBillingCodeVersion
        from ledgerAccount
            join RecId, CustBillingCode from custBillingCodeVersion
                where   custBillingCodeVersion.CustBillingCode == _billingCodeRefRecId &&
                        ledgerAccount.CustBillingCodeVersion == custBillingCodeVersion.RecId;

        return ledgerAccount.Percentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS2230</DeveloperDocumentation>
	<FormRef>CustBillingCode</FormRef>
	<Label>@SYS8343</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CustBillingCodeVersion</TitleField1>
	<TitleField2>Percentage</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustBillingCodeVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NonNegPercent</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustBillingCodeVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustBillingCodeVersion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustBillingCodeVersion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustBillingCodeVersion_CustBillingCodeLedgerAccount</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustBillingCodeVersion</Name>
					<Field>CustBillingCodeVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_CustBillingCodeLedgerAccount</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>