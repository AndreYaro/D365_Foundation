<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductVariantVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductVariantVersion extends EcoResProductVariantDimensionValue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dimension value of the derived type.
    /// </summary>
    /// <returns>
    /// The dimension value ID of the table that inherits from the
    /// <c>EcoResProductVariantDimensionValue</c> table.
    /// </returns>
    /// <remarks>
    /// This method must be overridden on tables deriving the <c>EcoResProductVariantDimensionValue</c>
    /// table.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The method has not been overridden.
    /// </exception>
    public RefRecId getDimensionValue()
    {
        return this.ProductVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID of the derived type.
    /// </summary>
    /// <returns>
    /// The table ID of the table that inherits from the <c>EcoResProductVariantDimensionValue</c> table.
    /// </returns>
    /// <remarks>
    /// This method must be overridden on tables deriving the <c>EcoResProductVariantDimensionValue</c>
    /// table.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The method has not been overridden.
    /// </exception>
    public TableId getTableId()
    {
        return this.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [FieldNum(EcoResProductVariantDimensionValue, RetailWeight), [fieldNum(EcoResProductVariantVersion, ProductVersion)]],
            [FieldNum(EcoResProductVariantDimensionValue, ProductDimensionAttribute), [fieldNum(EcoResProductVariantVersion,ProductVersion)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(EcoResProductVariantDimensionValue, ProductDimensionAttribute):
                this.ProductDimensionAttribute = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldnum(InventDim, InventVersionId));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResProductVariantVersion</c> table.
    /// </summary>
    /// <param name="_distinctProductVariant">
    ///    The ID of the <c>EcoResDistinctProductVariant</c> record id.
    /// </param>
    /// <param name="_productDimensionAttribute">
    ///    The ID of the <c>EcoResProductDimensionAttribute</c> record id.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResProductVariantVersion</c> table; otherwise, an empty record.
    /// </returns>
    public static EcoResProductVariantVersion find(EcoResProductRecId _distinctProductVariant, RefRecId _productDimensionAttribute, boolean _forUpdate = false)
    {
        EcoResProductVariantVersion ecoResProductVariantVersion;

        ecoResProductVariantVersion.selectForUpdate(_forUpdate);

        select firstonly ecoResProductVariantVersion
            where ecoResProductVariantVersion.DistinctProductVariant == _distinctProductVariant
                && ecoResProductVariantVersion.ProductDimensionAttribute == _productDimensionAttribute;

        return ecoResProductVariantVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EcoResProductVersion</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ProductVariantVersionTableDevDoc</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>EcoResProductVariantsAction</FormRef>
	<Label>@SCM:VersionVariants</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProductVersion</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>EcoResProductVariantDimensionValue</Extends>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS2186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EcoResVersionRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResVersionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductVersion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductVariantDimensionValue</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResProductVariantDimensionValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResVersion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SourceVersion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VariantVersion</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductVersion</Name>
					<Field>ProductVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>