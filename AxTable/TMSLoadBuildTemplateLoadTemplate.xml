<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSLoadBuildTemplateLoadTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSLoadBuildTemplateLoadTemplate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sequenceArrange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Change <c>TMSTmpLoadTemplate</c> sequence numbers with adjacent line numbers based on up or down button click
    /// </summary>
    /// <param name="_up">
    /// Boolean used to determine if the up button or down button was pressed
    /// </param>
    /// <returns>
    /// An instance of <c>TMSTmpLoadTemplate</c> that represents the line that was moved
    /// </returns>
    public TMSLoadBuildTemplateLoadTemplate sequenceArrange(boolean _up)
    {
        TMSLoadBuildTemplateLoadTemplate    tmsLoadBuildTemplateLoadTemplateNew;
        TMSLoadBuildTemplateLoadTemplate    tmsLoadBuildTemplateLoadTemplateOld;
        TMSLoadBuildTemplateLoadTemplate    cursor;
        int                                 change  = 0;
        TMSLoadTemplateAssignmentSequence   oldLocSeqNum;

        cursor = this;

        if (cursor.validateWrite())
        {
            ttsbegin;

            cursor.write();

            tmsLoadBuildTemplateLoadTemplateNew.setTmpData(this);
            tmsLoadBuildTemplateLoadTemplateOld.setTmpData(this);

            if (_up)
            {
                if (cursor.Sequence > 1)
                {
                    change--;
                }
            }
            else
            {
                if (cursor.Sequence < TMSLoadBuildTemplateLoadTemplate::getMaxLineLocSeqNum(cursor)
                &&  cursor.Sequence != 0)
                {
                    change++;
                }
            }

            if (change)
            {
                select forupdate tmsLoadBuildTemplateLoadTemplateNew
                    where tmsLoadBuildTemplateLoadTemplateNew.RecId == cursor.RecId;

                if (tmsLoadBuildTemplateLoadTemplateNew)
                {
                    oldLocSeqNum = tmsLoadBuildTemplateLoadTemplateNew.Sequence;
                    tmsLoadBuildTemplateLoadTemplateNew.Sequence += change;

                    select forupdate firstonly tmsLoadBuildTemplateLoadTemplateOld
                        where tmsLoadBuildTemplateLoadTemplateOld.Sequence              == tmsLoadBuildTemplateLoadTemplateNew.Sequence
                            && tmsLoadBuildTemplateLoadTemplateOld.LoadBuildTemplate    == tmsLoadBuildTemplateLoadTemplateNew.LoadBuildTemplate;

                    if (tmsLoadBuildTemplateLoadTemplateOld && change)
                    {
                        tmsLoadBuildTemplateLoadTemplateOld.Sequence = maxInt(); // Update index conflict during switch of sequence
                        tmsLoadBuildTemplateLoadTemplateOld.update();
                    }

                    tmsLoadBuildTemplateLoadTemplateNew.update();

                    if (tmsLoadBuildTemplateLoadTemplateOld && change)
                    {
                        tmsLoadBuildTemplateLoadTemplateOld.Sequence = oldLocSeqNum;
                        tmsLoadBuildTemplateLoadTemplateOld.update();
                    }
                }
            }

            ttscommit;
        }
        else
        {
            tmsLoadBuildTemplateLoadTemplateNew = cursor;
        }

        return tmsLoadBuildTemplateLoadTemplateNew;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxLineLocSeqNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the highest sequence for the records in the <c>TMSTmpLoadTemplate</c> buffer.
    /// </summary>
    /// <param name="_tmsTmpLoadTemplate">
    /// The buffer to determine the next seqeunce number from.
    /// </param>
    /// <returns>
    /// The highest sequence number.
    /// </returns>
    private static TMSLoadTemplateAssignmentSequence getMaxLineLocSeqNum(TMSLoadBuildTemplateLoadTemplate _tmsTmpLoadTemplate)
    {
        TMSLoadBuildTemplateLoadTemplate tmsLoadBuildTemplateLoadTemplateLocal;

        tmsLoadBuildTemplateLoadTemplateLocal.setTmpData(_tmsTmpLoadTemplate);

        select maxof(Sequence) from tmsLoadBuildTemplateLoadTemplateLocal;

        return tmsLoadBuildTemplateLoadTemplateLocal.Sequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextSequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the next sequence number based on the records in the <c>TMSTmpLoadTemplate</c> buffer.
    /// </summary>
    /// <param name="_tmsTmpLoadTemplate">
    /// A <c>TMSTmpLoadTemplate</c> buffer.
    /// </param>
    /// <returns>
    /// The next sequence number.
    /// </returns>
    public static TMSLoadTemplateAssignmentSequence getNextSequenceNumber(TMSLoadBuildTemplateLoadTemplate _tmsTmpLoadTemplate)
    {
        TMSLoadBuildTemplateLoadTemplate    tmsLoadBuildTemplateLoadTemplateLocal;

        tmsLoadBuildTemplateLoadTemplateLocal.setTmpData(_tmsTmpLoadTemplate);

        select firstonly Sequence from tmsLoadBuildTemplateLoadTemplateLocal
            order by tmsLoadBuildTemplateLoadTemplateLocal.Sequence desc
        where tmsLoadBuildTemplateLoadTemplateLocal.LoadBuildTemplate == _tmsTmpLoadTemplate.LoadBuildTemplate;

        return tmsLoadBuildTemplateLoadTemplateLocal.Sequence + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYP4861078</DeveloperDocumentation>
	<Label>@SYP4861077</Label>
	<TitleField1>LoadBuildTemplate</TitleField1>
	<TitleField2>LoadTemplate</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>LoadBuildTemplateLoadTemplateIdx</ClusteredIndex>
	<Modules>Transportation</Modules>
	<ReplacementKey>LoadBuildTemplateSequenceIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadBuildTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadBuildTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYP4861179</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadBuildTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadBuildTemplate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadBuildTemplateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadTemplate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadTemplateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Sequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadTemplateAssignmentSequence</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LoadBuildTemplateSequenceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadBuildTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sequence</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LoadBuildTemplateLoadTemplateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadBuildTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LoadTemplate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSLoadBuildTemplate</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSLoadBuildTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadBuildTemplate</Name>
					<Field>LoadBuildTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSLoadTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSLoadTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadTemplate</Name>
					<Field>LoadTemplate</Field>
					<RelatedField>LoadTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>LoadTemplateIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>