<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymDueDateLimit_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PaymDueDateLimit_ES extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLastValidDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last valid due date.
    /// </summary>
    /// <param name="_transDate">
    /// The transaction date.
    /// </param>
    /// <returns>
    /// The transaction date adjusted by the days limit.
    /// </returns>
    public TransDate getLastValidDate(TransDate _transDate)
    {
        TransDate                   lastValidDate;
        DueDateLimitPeriodUnit_ES   periodUnit;
        Days                        qtyUnit;
        PaymDueDateLimitValues_ES   dueDateLimitValue = PaymDueDateLimitValues_ES::find(this.GroupId, _transDate);

        if (dueDateLimitValue)
        {
            periodUnit  = dueDateLimitValue.PeriodUnit;
            qtyUnit     = dueDateLimitValue.QtyUnit;
        }
        else
        {
            periodUnit  = this.PeriodUnit;
            qtyUnit     = this.QtyUnit;
        }

        switch (periodUnit)
        {
            case DueDateLimitPeriodUnit_ES::Day:
                lastValidDate = _transDate + qtyUnit;
                break;

            case DueDateLimitPeriodUnit_ES::Month:
                lastValidDate = Global::dateMthFwd(_transDate, qtyUnit);
                break;
        }

        return dueDateLimitValue.RecId ? lastValidDate : maxDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyUnitValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the number of units that is associated with the due date limits.
    /// </summary>
    /// <returns>
    ///    The number of units that is associated with the due date limits.
    /// </returns>
    display DueDateLimitQtyUnit_ES qtyUnitValue()
    {
        PaymDueDateLimitValues_ES   value = PaymDueDateLimitValues_ES::find(this.GroupId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        if (value)
        {
            return value.QtyUnit;
        }

        return this.QtyUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PaymDueDateLimit_ES</c> record poppulated with the current values.
    /// </summary>
    /// <param name="_dueDateLimitGroupId">
    /// The group Id of the <c>PaymDueDateLimit_ES</c> record to get.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>PaymDueDateLimit_ES</c> record; otherwise an empty buffer.
    /// </returns>
    public static PaymDueDateLimit_ES getCurrentValues(DueDateLimitGroupId_ES  _dueDateLimitGroupId,
                                            boolean _forUpdate = false)
    {
        PaymDueDateLimit_ES dueDateLimit;
        PaymDueDateLimitValues_ES   currentValue;

        if (_dueDateLimitGroupId)
        {
            dueDateLimit.selectForUpdate(_forUpdate);

            select firstonly dueDateLimit
                where dueDateLimit.GroupId == _dueDateLimitGroupId;

            currentValue = PaymDueDateLimitValues_ES::find(_dueDateLimitGroupId);
            if (currentValue)
            {
                dueDateLimit.QtyUnit    = currentValue.QtyUnit;
                dueDateLimit.PeriodUnit = currentValue.PeriodUnit;
            }
        }

        return dueDateLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDueDateLimitPurchParm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PaymDueDateLimit_ES</c> record for the specified purchase parameters.
    /// </summary>
    /// <param name="_dueDateLimitGroupId">
    /// The due date limit group Id that is used.
    /// </param>
    /// <param name="_transDate">
    /// The search date.
    /// </param>
    /// <param name="_purchId">
    /// The given purchase order Id.
    /// </param>
    /// <param name="_parmId">
    /// The <c>VendInvoiceInfoLine</c> Id.
    /// </param>
    /// <returns>
    /// The <c>PaymDueDateLimit_ES</c> record; otherwise an empty buffer.
    /// </returns>
    public static PaymDueDateLimit_ES getDueDateLimitPurchParm(
        DueDateLimitGroupId_ES  _dueDateLimitGroupId,
        TransDate               _transDate,
        PurchId                 _purchId,
        ParmId                  _parmId)
    {
        PaymDueDateLimit_ES     itemDueDateLimit;
        PaymDueDateLimit_ES     dueDateLimitMin;
        InventTable             inventTable;
        InventItemGroup         inventItemGroup;
        InventItemGroupItem     inventItemGroupItem;
        VendInvoiceInfoLine     vendInvoiceInfoLine;

        dueDateLimitMin = PaymDueDateLimit_ES::getCurrentValues(_dueDateLimitGroupId);

        while select * from itemDueDateLimit
            exists join inventItemGroup
                where itemDueDateLimit.GroupId == inventItemGroup.DueDateLimitGroupId_ES
            exists join inventItemGroupItem
                where inventItemGroup.ItemGroupId == inventItemGroupItem.ItemGroupId
            exists join inventTable
                    where inventItemGroupItem.ItemDataAreaId == inventTable.DataAreaId
                    && inventItemGroupItem.ItemId == inventTable.ItemId
            exists join vendInvoiceInfoLine
                where inventTable.ItemId                == vendInvoiceInfoLine.ItemId
                   && vendInvoiceInfoLine.OrigPurchId   == _purchId
                   && vendInvoiceInfoLine.ParmId        == _parmId
        {
            if (!dueDateLimitMin  ||
                itemDueDateLimit.getLastValidDate(_transDate) < dueDateLimitMin.getLastValidDate(_transDate))
            {
                dueDateLimitMin.data(itemDueDateLimit);
            }
        }

        return dueDateLimitMin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDueDateLimitSalesParm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PaymDueDateLimit_ES</c> record for the specified sales parameters.
    /// </summary>
    /// <param name="_dueDateLimitGroupId">
    /// The due date limit group Id that is used.
    /// </param>
    /// <param name="_transDate">
    /// The search date.
    /// </param>
    /// <param name="_salesId">
    /// The given sales order Id.
    /// </param>
    /// <param name="_parmId">
    /// The <c>SalesParmTable</c> Id.
    /// </param>
    /// <returns>
    /// The <c>PaymDueDateLimit_ES</c> record; otherwise an empty buffer.
    /// </returns>
    public static PaymDueDateLimit_ES getDueDateLimitSalesParm(
        DueDateLimitGroupId_ES  _dueDateLimitGroupId,
        TransDate               _transDate,
        SalesId                 _salesId,
        ParmId                  _parmId)
    {
        PaymDueDateLimit_ES     itemDueDateLimit;
        PaymDueDateLimit_ES     dueDateLimitMin;
        InventTable             inventTable;
        InventItemGroup         inventItemGroup;
        InventItemGroupItem     inventItemGroupItem;
        SalesParmTable          salesParmTable;
        SalesParmLine           salesParmLine;

        dueDateLimitMin = PaymDueDateLimit_ES::getCurrentValues(_dueDateLimitGroupId);

        while select * from itemDueDateLimit
            exists join inventItemGroup
                where itemDueDateLimit.GroupId == inventItemGroup.DueDateLimitGroupId_ES
            exists join inventItemGroupItem
                where inventItemGroup.ItemGroupId == inventItemGroupItem.ItemGroupId
            exists join inventTable
                where inventItemGroupItem.ItemDataAreaId  == inventTable.DataAreaId
                    && inventItemGroupItem.ItemId         == inventTable.ItemId
            exists join salesParmLine
                where inventTable.ItemId == salesParmLine.ItemId
            exists join salesParmTable
                where salesParmLine.ParmId      == salesParmTable.ParmId
                   && salesParmLine.TableRefId  == salesParmTable.TableRefId
                   && salesParmTable.SalesId    == _salesId
                   && salesParmTable.ParmId     == _parmId
        {
            if (!dueDateLimitMin  ||
                itemDueDateLimit.getLastValidDate(_transDate) < dueDateLimitMin.getLastValidDate(_transDate))
            {
                dueDateLimitMin.data(itemDueDateLimit);
            }
        }

        return dueDateLimitMin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemDueDateLimit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PaymDueDateLimit_ES</c> record for the <c>SalesTable</c> record.
    /// </summary>
    /// <param name="_salesTable">
    /// The <c>SalesTable</c> record.
    /// </param>
    /// <param name="_parmId">
    /// The <c>SalesParmTable</c> id.
    /// </param>
    /// <returns>
    /// The <c>PaymDueDateLimit_ES</c> record; otherwise an empty buffer.
    /// </returns>
    public static PaymDueDateLimit_ES getItemDueDateLimit(SalesTable _salesTable, ParmId _parmId)
    {
        return PaymDueDateLimit_ES::getDueDateLimitSalesParm(
            PaymTerm::find(_salesTable.Payment).DueDateLimitGroupId_ES,
            _salesTable.ReceiptDateConfirmed,
            _salesTable.SalesId,
            _parmId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>ES</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081486</DeveloperDocumentation>
	<FormRef>PaymDueDateLimit_ES</FormRef>
	<Label>@SYS4081487</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>GroupId</TitleField1>
	<TitleField2>GroupDescription</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>DueDateGroupIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Bank</Modules>
	<PrimaryIndex>DueDateGroupIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PaymTerm</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>PaymTerm</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>PaymDueDateLimitValues_ES</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PaymDueDateLimitValues_ES</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QtyUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>qtyUnitValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS40777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDateLimitGroupDescription_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDateLimitGroupId_ES</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>DueDateLimitPeriodUnit_ES</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>QtyUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDateLimitQtyUnit_ES</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DueDateGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>GroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>