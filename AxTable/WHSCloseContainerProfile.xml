<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCloseContainerProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSCloseContainerProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        WHSWorker worker;

        ttsbegin;

        while select forupdate worker
             where worker.CloseContainerProfileId == this.CloseContainerProfileId
        {
            worker.CloseContainerProfileId = '';
            worker.update();
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
	public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSCloseContainerProfile, DefaultFinalShipLoc):
                if (this.ContainerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::None
                    && this.WarehouseGroupAll == WhsWarehouseGroupAll::Warehouse)
                {
                    ret = WMSLocation::find(this.DefaultFinalShipLoc, this.InventLocationId).checkFinalShipLocation() && ret;
                }
                break;

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>whsCloseContainerProfile</c> record exists in database.
	/// </summary>
	/// <param name="_closeContainerProfileId">
	/// The close container profile id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists, false otherwise.
	/// </returns>
    public static boolean exist(WHSCloseContainerProfileId _closeContainerProfileId)
    {
        return (_closeContainerProfileId) &&
               (select firstonly whsCloseContainerProfile
                where whsCloseContainerProfile.CloseContainerProfileId == _closeContainerProfileId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSCloseContainerProfile</c> record by given parameters.
	/// </summary>
	/// <param name="_closeContainerProfileId">
	/// The close container profile id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update, false by default.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSCloseContainerProfile find(WHSCloseContainerProfileId  _closeContainerProfileId,
                                                boolean                     _forupdate = false)
    {
        WHSCloseContainerProfile    closeContainerProfile;

        if (_closeContainerProfileId)
        {
            closeContainerProfile.selectForUpdate(_forupdate);

            select firstonly closeContainerProfile
                where closeContainerProfile.CloseContainerProfileId == _closeContainerProfileId;
        }

        return closeContainerProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if ((select firstonly RecId from WHSContainerTable where WHSContainerTable.CloseContainerProfileId == this.CloseContainerProfileId).RecId)
        {
            ret = checkFailed("@WAX:TheContainerPackingPolicyIsAlreadyUsedOnContainer");
        }

        if (this.ManifestAtContainerClose && this.ManifestRequirementsForContainer == WHSManifestRequirement::None)
        {
            ret = checkFailed("@WAX:ManifestRequirementMustBeSpecified");
        }

        if (this.ContainerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::Automatic)
        {
            if (this.PrintPackingSlip)
            {
                ret = checkfailed("@WAX:AutomaticPrintingOfPackingSlipCanNotBeActivatedForContainerPoliciesWithWorkCreation");
            }

            if (this.DefaultFinalShipLoc)
            {
                ret = checkfailed("@WAX:ErrorDefaultFinalShippingLocationWithWorkCreationPolicy");
            }

            WHSParameters warehouseParameters = WHSParameters::find();

            if (warehouseParameters.PackingLocType)
            {
                ret = checkfailed("@WAX:ErrorWorkCreationPackingPolicyWithPackLocationProfile");
            }
        }
        else if (this.ContainerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::None && this.WorkTemplateCode)
        {
            ret = checkfailed("@WAX:ErrorWorkTemplateCodeWithoutWorkCreationPolicy");
        }

        if (this.PrintPackingSlipAsynchronously && !this.PackingSlipPostingParameters)
        {
            ret = checkFailed("@WAX:ErrorPackingSlipPostingParametersCannotBeEmpty");
        }

        ret = this.validateWarehouseGroupAll() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupAll()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Group:
                if (!this.WarehouseGroupId)
                {
                    return checkFailed("@WAX:CloseContainerProfileMissingWarehouseGroup");
                }
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(WHSCloseContainerProfile, DefaultFinalShipLoc),
                [fieldnum(WHSCloseContainerProfile, ContainerClosingWorkCreationProcess)]],
            [fieldnum(WHSCloseContainerProfile, WorkTemplateCode),
                [fieldnum(WHSCloseContainerProfile, ContainerClosingWorkCreationProcess)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(WHSCloseContainerProfile, DefaultFinalShipLoc):
                this.initDefaultFinalShipLoc(this.ContainerClosingWorkCreationProcess);
                break;
            case fieldnum(WHSCloseContainerProfile, WorkTemplateCode):
                this.initWorkTemplateCode(this.ContainerClosingWorkCreationProcess);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWeightUnitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a weight unit of measure of current close container profile.
    /// </summary>
    /// <returns>A weight unit of measure of current close container profile.</returns>
    public UnitOfMeasureSymbol getWeightUnitOfMeasure()
    {
        UnitOfMeasureSymbol weightUOM;

        if (this.WeightUOM)
        {
            weightUOM = this.WeightUOM;
        }
        else
        {
            weightUOM = UnitOfMeasure::find(UnitOfMeasureSystemUnit::findByUnitOfMeasureClass(UnitOfMeasureClass::Mass).UnitOfMeasure).Symbol;
        }

        return weightUOM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPrintContainerContents</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the contents of the container should be printed.
    /// </summary>
    /// <returns>true if contents of the container should be printed; otherwise, false</returns>
    public boolean canPrintContainerContents()
    {
        return this.PrintContainerContents;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldContainerBeAvailableAtFinalShippingLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the container should be available at final shipping location.
    /// </summary>
    /// <returns>true if container should be available at final shipping destination; otherwise, false.</returns>
    public boolean shouldContainerBeAvailableAtFinalShippingLocation()
    {
        return this.ContainerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldWorkBeCreatedToMoveFromPickingLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the work should be created to move the container from packing station.
    /// </summary>
    /// <returns>true if the work should be created to move the container from packing station; otherwise, false.</returns>
    public boolean shouldWorkBeCreatedToMoveFromPickingLocation()
    {
        return this.ContainerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::Automatic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultFinalShipLoc</Name>
				<Source><![CDATA[
    private void initDefaultFinalShipLoc(WHSWarehouseContainerClosingWorkCreationProcess _containerClosingWorkCreationProcess)
    {
        if (_containerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::Automatic)
        {
            this.DefaultFinalShipLoc = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>putLocationType</Name>
				<Source><![CDATA[
    internal WHSLocType putLocationType()
    {
        switch (this.ContainerClosingWorkCreationProcess)
        {
            case WHSWarehouseContainerClosingWorkCreationProcess::AssignContainerToSortPosition:
                return WHSParameters::find().SortingLocationType;
            case WHSWarehouseContainerClosingWorkCreationProcess::None:
                return WHSParameters::find().ShipFinalLocType;
            case WHSWarehouseContainerClosingWorkCreationProcess::Automatic:
            default:
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkTemplateCode</Name>
				<Source><![CDATA[
    private void initWorkTemplateCode(WHSWarehouseContainerClosingWorkCreationProcess _containerClosingWorkCreationProcess)
    {
        if (_containerClosingWorkCreationProcess == WHSWarehouseContainerClosingWorkCreationProcess::None)
        {
            this.WorkTemplateCode = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(WHSCloseContainerProfile, PrintPackingSlipAsynchronously):
                if (!this.PrintPackingSlipAsynchronously)
                {
                    this.PackingSlipPostingParameters = '';
                }
                break;
            case fieldStr(WHSCloseContainerProfile, PrintPackingSlip):
                if (!this.PrintPackingSlip)
                {
                    this.PrintPackingSlipAsynchronously = false;
                    this.PackingSlipPostingParameters = '';
                }
                break;
            case fieldStr(WHSCloseContainerProfile, WarehouseGroupAll):
                this.setWarehouseSelection();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelection</Name>
				<Source><![CDATA[
    private void setWarehouseSelection()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::All:
                this.InventLocationId = '';
                this.DefaultFinalShipLoc = '';
                this.DefaultSortLocation = '';
                this.WarehouseGroupId = '';
                break;

            case WhsWarehouseGroupAll::Group:
                this.InventLocationId = '';
                this.DefaultFinalShipLoc = '';
                this.DefaultSortLocation = '';
                break;

            case WhsWarehouseGroupAll::Warehouse:
                this.WarehouseGroupId = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.WarehouseGroupAll = WhsWarehouseGroupAll::All;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPrintContainerLabelsOnClose</Name>
				<Source><![CDATA[
    internal boolean canPrintContainerLabelsOnClose()
    {
        return this.PrintContainerLabelsOnCloseRule == WHSPrintContainerLabelsOnCloseRule::Always
               && WHSPrintContainerLabelsOnCloseFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSCloseContainerProfileDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WHSCloseContainerProfile</FormRef>
	<Label>@WAX:ContainerPolicies</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CloseContainerProfileId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CLoseContainerProfileIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CLoseContainerProfileIdIdx</PrimaryIndex>
	<ReplacementKey>CLoseContainerProfileIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CloseContainerProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeightUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultFinalShipLoc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintContainerContents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintPackingSlip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestAt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerClosingWorkCreationProcess</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CloseContainerProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CloseContainerProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeightUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultFinalShipLoc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintContainerContents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintPackingSlip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestAt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerClosingWorkCreationProcess</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestAtContainerClose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestRequirementsForContainer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReleaseContainerAtContainerClose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestRequirementsForShipment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManifestRequirementsForContainerGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintContainerShippingLabel</Name>
			<Label>@TRX:PrintContainerShippingLabelGroup</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintContainerShippingLabelRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintContainerReturnShippingLabelRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerShippingLabelPrinterName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CloseContainerProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCloseContainerProfileId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultFinalShipLoc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultFinalShipLoc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManifestAt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects70</ConfigurationKey>
			<IsObsolete>Yes</IsObsolete>
			<Visible>No</Visible>
			<EnumType>WHSManifestAt</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintContainerContents</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintContainerContents</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintPackingSlip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintPackingSlip</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WeightUOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWeightUOM</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContainerClosingWorkCreationProcess</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSWarehouseContainerClosingWorkCreationProcess</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManifestAtContainerClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSManifestAtContainerClose</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManifestRequirementsForContainer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSManifestRequirementsForContainer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoReleaseContainerAtContainerClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSAutoReleaseContainerAtContainerClose</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManifestRequirementsForShipment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSManifestRequirementsForShipment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkTemplateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManifestRequirementsForContainerGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSManifestRequirementsForContainerGroup</ExtendedDataType>
			<EnumType>WHSManifestRequirementContainerGroup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultSortLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOutboundSortLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintContainerShippingLabelRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSPrintContainerShippingLabelRule</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintContainerReturnShippingLabelRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>WHSReturnLabelSPSPrintingFlight</FeatureClass>
			<Label>@TRX:PrintContainerReturnShippingLabelRule</Label>
			<EnumType>WHSPrintContainerShippingLabelRule</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContainerShippingLabelPrinterName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrinterName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingSlipPostingParameters</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackingSlipPostingParametersId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintPackingSlipAsynchronously</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintPackingSlipAsynchronously</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WarehouseGroupAll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsWarehouseGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarehouseGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModifyPutLocationInMobileApp</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSModifyPutLocationInMobileApp</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintContainerLabelsOnCloseRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>WHSPrintContainerLabelsOnCloseFlight</FeatureClass>
			<EnumType>WHSPrintContainerLabelsOnCloseRule</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CLoseContainerProfileIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CloseContainerProfileId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>UnitOfMeasureClass_Extern</Name>
					<RelatedField>UnitOfMeasureClass</RelatedField>
					<ValueStr>UnitOfMeasureClass::Mass</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WeightUOM</Name>
					<Field>WeightUOM</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WMSLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultFinalShipLoc</Name>
					<Field>DefaultFinalShipLoc</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkTemplateTableWorkTemplateCodeContainerPicking</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWorkTemplateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTemplateCode</Name>
					<Field>WorkTemplateCode</Field>
					<RelatedField>WorkTemplateCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>WorkTransType</Name>
					<RelatedField>WorkTransType</RelatedField>
					<ValueStr>WHSWorkTransType::PackedContainerPicking</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WMSLocationSort</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultSortLocation</Name>
					<Field>DefaultSortLocation</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContainerShippingLabelPrinter</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SysCorpNetPrinters</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerShippingLabelPrinterName</Name>
					<Field>ContainerShippingLabelPrinterName</Field>
					<RelatedField>PrinterName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PackingSlipPostingParameters</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSPackingSlipPostingParameters</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingSlipPostingParameters</Name>
					<SourceEDT>WHSPackingSlipPostingParametersId</SourceEDT>
					<Field>PackingSlipPostingParameters</Field>
					<RelatedField>PackingSlipPostingParametersId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WhsWarehouseGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WhsWarehouseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarehouseGroupId</Name>
					<Field>WarehouseGroupId</Field>
					<RelatedField>WarehouseGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>