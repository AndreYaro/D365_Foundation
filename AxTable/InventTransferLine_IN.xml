<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferLine_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferLine_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.InventTransferLine)
        {
            InventTransferLine inventTransferLine = InventTransferLine::findRecId(this.InventTransferLine);
            
            if (InventTransferTable::find(inventTransferLine.TransferId).TransferType_IN == TransferType_IN::StockTransfer)
            {
                if (!this.CurrencyCode)
                {
                    this.CurrencyCode = CompanyInfoHelper::standardCurrency();
                }

                // If it is called from form, these fields have been assigned when ItemId have value.
                if (!this.isFormDataSource())
                {
                    this.initItemIdModifiedFields(inventTransferLine);
                }
            }

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initItemIdModifiedFields</Name>
				<Source><![CDATA[
    public void initItemIdModifiedFields(InventTransferLine _inventTransferLine)
    {
        this.UnitId = _inventTransferLine.UnitId;
        this.UnitPrice = _inventTransferLine.inventSumUnitPrice_IN();
        this.NetAmount = this.netAmount(_inventTransferLine);
        this.AssessableValueTransactionCurrency = this.NetAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recalculateStockTransferValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates stock transfer fields associated with price.
    /// </summary>
    /// <param name = "_inventTransferLine">The <c>InventTransferLine</c> record.</param>
    /// <param name = "_inventDim">The <c>InventDim</c> record.></param>
    public void recalculateStockTransferValue(InventTransferLine _inventTransferLine, InventDim _inventDim)
    {
        StockTransferPrice_IN stockTransferPrice = StockTransferPriceCalc_IN::calculateFromInventTransferLineInventDim(this, _inventTransferLine, _inventDim);
        this.UnitPrice = stockTransferPrice.getUnitPrice();
        this.CurrencyCode = stockTransferPrice.getCurrencyCode();
        this.NetAmount = this.netAmount(_inventTransferLine);
        this.AssessableValueTransactionCurrency = this.NetAmount;

        this.MaximumRetailPrice = this.NetAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventTransferLineItemFieldsByTransferId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>InventTransferLine_IN</c> fields for each <c>InventTransferLine</c> in the <c>InventTransferTable</c> by transfer id.
    /// </summary>
    /// <param name = "_inventTransferId">The invent transfer id.</param>
    public static void updateInventTransferLineItemFieldsByTransferId(InventTransferId _inventTransferId)
    {
        InventTransferLine transferLine;
        InventTransferLine_IN tranferLineIn;
        InventDim inventDim;

        InventTransferTable transferTable = InventTransferTable::find(_inventTransferId);
        boolean isStockTransferUnitPriceFixed = transferTable.StockTransferCostPriceHandlingImprovement_IN == NoYes::Yes;

        while select forupdate tranferLineIn
            join transferLine
                where transferLine.TransferId == _inventTransferId
                    && tranferLineIn.InventTransferLine == transferLine.RecId
            join inventDim
                where inventDim.inventDimId == transferLine.inventDimId
        {
            if (isStockTransferUnitPriceFixed)
            {
                tranferLineIn.PriceType = transferTable.PriceType_IN;
                tranferLineIn.recalculateStockTransferValue(transferLine, inventDim);
            }
            else
            {
                tranferLineIn.initItemIdModifiedFields(transferLine);
            }
            tranferLineIn.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        if (this.InventTransferLine)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByinventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record of the invent transfer line table by rec id.
    /// </summary>
    /// <param name="_recId">
    /// The record id information.
    /// </param>
    /// <param name="_update">
    /// Ture if the table will be update, default false..
    /// </param>
    /// <returns>
    /// The finding record of the invent transfer line table.
    /// </returns>
    public static InventTransferLine_IN findByinventTransferLine(
        RefRecId _recId,
        boolean _update = false)
    {
        InventTransferLine_IN inventTransferLineTaxExt;

        if (_recId)
        {
            inventTransferLineTaxExt.selectForUpdate(_update);
            select firstonly inventTransferLineTaxExt
                where inventTransferLineTaxExt.InventTransferLine == _recId;
        }

        return inventTransferLineTaxExt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a specified field.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to check.
    /// </param>
    /// <returns>
    /// true if the field passes validation; otherwise, false.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case (fieldNum(InventTransferLine_IN, AssessableValueTransactionCurrency)) :
                if (this.AssessableValueTransactionCurrency < 0)
                {
                    ret = checkFailed(strFmt("@SYS332428", fieldPName(InventTransferLine_IN, AssessableValueTransactionCurrency)));
                }
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to get the net amount by multiplying the UnitPrice and the quantity to transfer.
    /// </summary>
    /// <returns>
    /// Returns the net amount.
    /// </returns>
    public real netAmount(InventTransferLine _inventTransferLine)
    {
        return this.UnitPrice * _inventTransferLine.QtyTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.CurrencyCode  = CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        InventTransferLine inventTransferLine = InventTransferLine::findRecId(this.InventTransferLine);

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventTransferLine_IN, UnitPrice):
                if (this.UnitPrice != this.orig().UnitPrice
                && InventTransferTable::find(inventTransferLine.TransferId, false).TransferStatus == InventTransferStatus::Shipped)
                {
                    if (Box::yesNo("@SYS4000925",DialogButton::No) != DialogButton::Yes)
                    {
                        this.UnitPrice = this.orig().UnitPrice;
                        this.NetAmount = this.netAmount(inventTransferLine);
                    }
                }
                break;

            case fieldNum(InventTransferLine_IN, NetAmount):
                this.AssessableValueTransactionCurrency = this.NetAmount;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a specified field.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name of the field to check.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field.
    /// </param>
    /// <returns>
    /// Returns true if the field passes validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        InventTransferLine inventTransferLine = InventTransferLine::findRecId(this.InventTransferLine);

        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case (fieldStr(InventTransferLine_IN, UnitId)) :
                if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(
                        inventTransferLine.ItemId,
                        inventTransferLine.InventDimId,
                        InventTable::find(inventTransferLine.ItemId).inventUnitId(),
                        this.UnitId))
                {
                    ret = checkFailed(strFmt("@SYS28690", InventTable::find(inventTransferLine.ItemId).inventUnitId(), this.UnitId));
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>defaultDimension</c> field on the <c>InventTransferLine</c>
    /// table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      CompanyInfo::findDataArea(this.company()).RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that contains the merged combination of the current
    /// <c>defaultDimension</c> field on the <c>SalesLine</c> table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    /// optional.
    /// </param>
    /// <param name="_dimensionMerge">
    /// A <c>dimensionMerge</c> object created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
    /// on this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        CompanyInfo::findDataArea(this.company()).RecId)
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInventTransferLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventTransferLine_IN</c> table.
    /// </summary>
    /// <param name="_inventTransferLine">
    /// The <c>InventTransferLine</c> table record Id.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventTransferLine_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static InventTransferLine_IN findByInventTransferLineRecId(InventTransferLineRecId _inventTransferLineRecId, boolean _forUpdate = false)
    {
        InventTransferLine_IN inventTransferLineIN;

        if (_inventTransferLineRecId)
        {
            inventTransferLineIN.selectForUpdate(_forUpdate);

            select firstonly inventTransferLineIN
                where inventTransferLineIN.InventTransferLine == _inventTransferLineRecId;
        }

        return inventTransferLineIN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes fields of the current line based on values from the <c>InventTransferTable</c> table passed as argument.
    /// </summary>
    /// <param name="_inventTransferTable">
    /// The Inventory transfer table record.
    /// </param>
    public void initFromInventTransferTable(InventTransferTable _inventTransferTable)
    {
        if (_inventTransferTable.StockTransferCostPriceHandlingImprovement_IN && _inventTransferTable.TransferType_IN == TransferType_IN::StockTransfer)
        {
            this.PriceType = _inventTransferTable.PriceType_IN;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS222153</DeveloperDocumentation>
	<Label>@GLS222152</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>InventTransferLine</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>InventTransferLine</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>InventTransferLine</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransferLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransferLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssessableValue</Name>
			<Label>@GLS5298</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS342338</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvntCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventCostPriceCalculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax</Name>
			<Label>@SYS101244</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Retention</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATPriceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATRetentionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Retention</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransferLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvntCostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>CostPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NetAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NetAmount_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PriceType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Label>@GLS5124</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<Label>@GLS5941</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UnitPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VATPriceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PriceType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATRetentionCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<Label>@GLS6046</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Retention</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetentionAmt_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessableValueTransactionCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@GLS5298</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FromTaxInformation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxInformationRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ToTaxInformation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxInformationRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessableValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CompanyLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventCostPriceCalculated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>CostPrice</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransferLine</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransferLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TaxModelDocLineExtensionIN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionRefRecId</MapField>
					<MapFieldTo>InventTransferLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>InventTransferLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
					<MapFieldTo>NetAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditNoteDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsMaxRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MaximumRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAsPerOriginalInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTransferLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransferLine</Name>
					<Field>InventTransferLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_InventTransferLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>