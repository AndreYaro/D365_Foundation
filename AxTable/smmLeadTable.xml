<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmLeadTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmLeadTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closedByName</Name>
				<Source><![CDATA[
    display smmClosedBy closedByName()
    {
        return HcmWorker::worker2Name(this.ClosedByWorker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBusRelRecord</Name>
				<Source><![CDATA[
    RecId createBusRelRecord()
    {
        smmBusRelTable smmBusRelTable;

        if (this.mustCreateBusinessRelationRecord())
        {
            smmBusRelTable = this.createBusinessRelationRecord();
        }

        return smmBusRelTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCreateBusinessRelationRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a new prospect record must be created or not.
    /// </summary>
    /// <returns>
    /// true if a new prospect record must be created; otherwise, false.
    /// </returns>
    protected boolean mustCreateBusinessRelationRecord()
    {
        return this.Party && !DirPartyTableHelper::isCustomerOrRelation(this.Party);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeBusinessRelationRecordFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the necessary <c>SmmBusRelTable</c> record fields.
    /// </summary>
    /// <param name = "_smmBusRelTable">The <c>SmmBusRelTable</c> record to be initialized.</param>
    protected void initializeBusinessRelationRecordFields(SmmBusRelTable _smmBusRelTable)
    {
        _smmBusRelTable.initValue();
        _smmBusRelTable.BusRelAccount = smmParameters::getNumber(smmNumbSeqUsed::BusRel);
        _smmBusRelTable.MainContactWorker = this.OwnerWorker;
        _smmBusRelTable.Party = this.Party;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBusinessRelationRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes, validates, and inserts a new <c>SmmBusRelTable</c> record.
    /// </summary>
    /// <returns>The created <c>SmmBusRelTable</c> record.</returns>
    protected SmmBusRelTable createBusinessRelationRecord()
    {
        smmBusRelTable smmBusRelTable;

        ttsbegin;
        this.initializeBusinessRelationRecordFields(smmBusRelTable);

        smmBusRelTable.modifiedField(fieldNum(smmBusRelTable,Party));

        if (smmBusRelTable.validateWrite())
        {
            smmBusRelTable.insert();
        }
        ttscommit;

        return smmBusRelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>daysOpened</Name>
				<Source><![CDATA[
    display smmLeadDaysOpen daysOpened()
    {
        int daysOpen = 0;

        if (this.DateOpen && this.Status == smmLeadStatus::Open)
        {
            daysOpen = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) - this.DateOpen;
        }
        else
        {
            if (this.DateOpen && this.DateClose)
            {
                daysOpen = real2int(abs(this.DateOpen - this.DateClose));
            }
        }

        return daysOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ttsbegin;

        super();

        // Write to CRM transaction log
        smmTransLog::initTrans(this, smmLogAction::delete);
        
        this.writeAndValidateCrossCompany(tableMethodStr(smmLeadTable, delete));

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySourceId</Name>
				<Source><![CDATA[
    display smmSourceLinkId displaySourceId()
    {
        return this.sourceLinkedId(false, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the lead table, depending on the prospect table.
    /// </summary>
    /// <param name="_callList">
    /// The <c>smmTMCallListTable</c> table that contains the record to initialize from.
    /// </param>
    public void initFromProspect(smmBusRelTable _smmBusRelTable)
    {
        this.smmLeadOpportunity::initFromProspect(_smmBusRelTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCallList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the lead table, depending on the call list table.
    /// </summary>
    /// <param name="_callList">
    /// The <c>smmTMCallListTable</c> table that contains the record to initialize from.
    /// </param>
    public void initFromCallList(smmTMCallListTable _callList)
    {
        this.smmLeadOpportunity::initFromCallList(_callList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCampaignSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the lead table, depending on the campaign selection table.
    /// </summary>
    /// <param name="_campaignSelection">
    /// The <c>smmCampaignSelection</c> table that contains the record to initialize from.
    /// </param>
    public void initFromCampaignSelection(smmCampaignSelection _campaignSelection)
    {
        this.smmLeadOpportunity::initFromCampaignSelection(_campaignSelection);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a lead table that is based on a record.
    /// </summary>
    /// <param name="_common">
    /// The <c>Common</c> table that contains the record from which to initialize.
    /// </param>
    public void initFromCommon(Common _common)
    {
        switch (_common.TableId)
        {
            case tableNum(smmCampaignSelection) :
                this.initFromCampaignSelection(_common);
                break;

            case tableNum(smmTMCallListTable) :
                this.initFromCallList(_common);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.OwnerWorker    = smmUtility::getCurrentContactWorker();
        this.OpenedByWorker = this.OwnerWorker;
        this.DateOpen       = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.Status         = smmLeadStatus::Open;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        if (!this.Party)
        {
            //Field %1 must be filled in.
            throw error(strFmt("@SYS26332", fieldPName(DirPartyTable,Name)));
        }

        super();

        // Insert record to CRM transaction log
        smmTransLog::initTrans(this, smmLogAction::insert);

        // Create corresponding business relation record
        this.createBusRelRecord();

        this.writeAndValidateCrossCompany(tableMethodStr(smmLeadTable, insert));

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(smmLeadTable, SourceTypeId):
                if (!this.SourceTypeId || this.SourceTypeId != this.orig().SourceTypeId)
                {
                    this.SourceRefTableId = 0;
                    this.SourceRefRecId   = 0;
                }

                if (this.SourceTypeId)
                {
                    this.SourceRefTableId = smmSourceType::type2TableId(smmSourceTypeTable::find(this.SourceTypeId).Type);
                }
                break;
            case fieldNum(smmLeadTable, ProcessName):
                if (!HierarchyTreeTable::checkNumberSeq() || !Hierarchy::checkNumberSeq() || !smmActivities::checkNumberSeq())
                {
                    this.ProcessName = this.orig().ProcessName;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openedByName</Name>
				<Source><![CDATA[
    display smmOpenedBy openedByName()
    {
        return HcmWorker::worker2Name(this.OpenedByWorker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ownerName</Name>
				<Source><![CDATA[
    display smmOwner ownerName()
    {
        return HcmWorker::worker2Name(this.OwnerWorker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>previewPaneTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the title on top of the preview pane.
    /// </summary>
    /// <returns>
    /// Title field of the preview pane.
    /// </returns>
    display Caption previewPaneTitle()
    {
        return strFmt("@SYS327590", this.LeadId, this.Subject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryAddress</Name>
				<Source><![CDATA[
    display Addressing primaryAddress()
    {
        return DirParty::getAddress(this.Party);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceLinkedId</Name>
				<Source><![CDATA[
    edit smmSourceLinkId sourceLinkedId(boolean _set, smmSourceLinkId _linkId)
    {
        FieldId fieldId = smmSourceType::tableId2FieldId(this.SourceRefTableId);
        DictTable dictTable = new DictTable(this.SourceRefTableId);

        Common common;
        if (dictTable && dictTable.rights() >= AccessType::View)
        {
            common = dictTable.makeRecord();
        }
        else
        {
            return '';
        }

        if (_set)
        {
            if (_linkId)
            {
                select common where common.(fieldId) == _linkId;
                if (common)
                {
                    this.SourceRefRecId = common.RecId;
                }
                else
                {
                    // Verify if Allow-free form text is set for User-defined type
                    if (common.TableId == tableNum(smmSourceTypeOptions) && smmSourceTypeTable::find(this.SourceTypeId).AllowFreeformText)
                    {
                        smmSourceTypeOptions sourceOptionTable = smmSourceTypeOptions::createFromAllowFreeFormText(this.SourceTypeId, _linkId);
                        this.SourceRefRecId = sourceOptionTable.RecId;
                    }
                    else
                    {
                        this.orig();
                        checkFailed(strFmt("@SYS31784",_linkId,fieldId2pname(this.SourceRefTableId,fieldId),tableId2pname(this.SourceRefTableId)));
                    }
                }
            }
            else
            {
                this.SourceRefRecId = 0;
            }
        }
        else if (this.SourceRefRecId)
        {
            select common where common.RecId == this.SourceRefRecId;
            if (!common)
            {
                this.SourceRefRecId = 0;
            }
        }

        if (common)
        {
            return common.(fieldId);
        }
        else
        {
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        smmLeadTable smmLeadTableOrig = this.orig();

        ttsbegin;

        if (!this.Party)
        {
            //Field %1 must be filled in.
            throw error(strFmt("@SYS26332", fieldPName(DirPartyTable,Name)));
        }

        if (this.DateOpen != this.orig().DateOpen ||
            this.DateClose != this.orig().DateClose)
        {
            if (this.DateOpen && this.DateClose)
            {
                this.DaysToClose = real2int(abs(this.DateOpen - this.DateClose));
            }
            else
            {
                this.DaysToClose = 0;
            }
        }

        super();

        if (smmLeadTableOrig.OwnerWorker != this.OwnerWorker)
        {
            MenuFunction menuFunction = new MenuFunction(menuitemActionStr(smmActivityUpdateResponsible),MenuItemType::Action);
            if (menuFunction.checkAccessRights())
            {
                Args args = new Args(menuitemActionStr(smmActivityUpdateResponsible));
                args.record(this);
                args.parmEnumType(enumNum(NoYes));
                args.parmEnum(NoYes::Yes);
                args.parm(int642str(this.OwnerWorker));
                menuFunction.run(args);
            }
        }
        // Write to CRM transaction log
        smmTransLog::initTrans(this, smmLogAction::update);

        this.writeAndValidateCrossCompany(tableMethodStr(smmLeadTable, update));

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBusRelRecord</Name>
				<Source><![CDATA[
    void updateBusRelRecord(RecId smmbusRelTable)
    {
        smmActivityParentLinkTable smmActivityParentLinkTable;

        ttsbegin;

        while select forupdate smmActivityParentLinkTable
            where   smmActivityParentLinkTable.ParentType   == smmActivityParentType::Lead &&
                    smmActivityParentLinkTable.RefTableId   == tableNum(smmLeadTable) &&
                    smmActivityParentLinkTable.RefRecId     == this.RecId
        {
            smmActivityParentLinkTable.ParentType           = smmActivityParentType::BusRel;
            smmActivityParentLinkTable.RefTableId           = tableNum(smmBusRelTable);
            smmActivityParentLinkTable.RefRecId             = smmbusRelTable;
            smmActivityParentLinkTable.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if OwnerWorker, ClosedByWorker and OpenedByWorker of <c>smmLeadTable</c> table belongs to the current Legal Entity.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// OwnerWorker of the record in the <c>smmLeadTable</c> table.
    /// ClosedByWorker of the record in the <c>smmLeadTable</c> table.
    /// OpenedByWorker of the record in the <c>smmLeadTable</c> table.
    /// </param>
    /// <returns>
    /// True if Worker belongs to current Legal Entity otherwise false.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        ret = ret && this.validateFieldCurrentCompany(_fieldIdToCheck);

        ret = ret && this.writeAndValidateCrossCompany(tableMethodStr(smmLeadTable, validateField), _fieldIdToCheck);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldCurrentCompany</Name>
				<Source><![CDATA[
    private boolean validateFieldCurrentCompany(FieldId _fieldIdToCheck)
    {
        boolean ret = true;

        switch (_fieldIdToCheck)
        {
            case fieldNum(smmLeadTable, OwnerWorker) :
                if (this.OwnerWorker)
                {
                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.OwnerWorker);
                }
                break;

            case fieldNum(smmLeadTable, ClosedByWorker) :
                if (this.ClosedByWorker)
                {
                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.ClosedByWorker);
                }
                break;

            case fieldNum(smmLeadTable, OpenedByWorker) :
                if (this.OpenedByWorker)
                {
                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.OpenedByWorker);
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the <c>OwnerWorker</c>, <c>ClosedByWorker</c>, and <c>OpenedByWorker</c> fields of
    /// the <c>smmLeadTable</c> table belongs to the current Legal Entity.
    /// </summary>
    /// <param name="validateWorkerOnly">
    /// A Boolean value that specifies whether only the worker has to be validated.
    /// </param>
    /// <returns>
    /// true if the worker belongs to current Legal Entity; otherwise, false.
    /// </returns>
    public boolean validateWrite(boolean validateWorkerOnly = false)
    {
        boolean ret = true;

        if (!validateWorkerOnly)
        {
            ret = super();
        }

        ret = ret && this.validateWriteCurrentCompany();

        ret = ret && this.writeAndValidateCrossCompany(tableMethodStr(smmLeadTable, validateWrite));
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteCurrentCompany</Name>
				<Source><![CDATA[
    private boolean validateWriteCurrentCompany()
    {
        boolean ret = true;

        if (this.OwnerWorker)
        {
            ret = this.isValidWorkerInCurrentCompany(this.OwnerWorker);
        }

        if (this.ClosedByWorker)
        {
            ret = ret && this.isValidWorkerInCurrentCompany(this.ClosedByWorker);
        }

        if (this.OpenedByWorker && this.OpenedByWorker != this.orig().OpenedByWorker)
        {
            ret = ret && this.isValidWorkerInCurrentCompany(this.OpenedByWorker);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidWorkerInCurrentCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>HcmWorkerRecId</c> of the worker belongs to the current Legal entity.
    /// </summary>
    /// <param name="_workerRecId">The <c>HcmWorkerRecId</c> of the Worker.</param>
    /// <returns>true if belongs to current legal entity; otherwise, false.</returns>
    protected boolean isValidWorkerInCurrentCompany(HcmWorkerRecId _hcmWorkerRecId)
    {
        return smmUtility::isValidWorkerInCurrentCompany(_hcmWorkerRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(smmLeadId _leadId)
    {
        return smmLeadTable::find(_leadId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static smmLeadTable find(smmLeadId _leadId, boolean _forupdate = false)
    {
        smmLeadTable smmLeadTable = null;

        if (_leadId)
        {
            smmLeadTable.selectForUpdate(_forupdate);

            select firstonly smmLeadTable where smmLeadTable.LeadId == _leadId;
        }

        return smmLeadTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRec</Name>
				<Source><![CDATA[
    public static smmLeadTable findRec(RecId _recId, boolean _forupdate = false)
    {
        smmLeadTable  smmLeadTable = null;

        smmLeadTable.selectForUpdate(_forupdate);

        select firstonly smmLeadTable
            where smmLeadTable.RecId == _recId;

        return smmLeadTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnInsert</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnInsert))]
    static void DocuRefOnInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(smmLeadTable))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                _docuRef.Party              = smmLeadTable::findRec(_docuRef.RefRecId).Party;
                _docuRef.Author             = DirPersonUser::current().PersonParty;
                _docuRef.ActualCompanyId    = curext();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>email</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the primary e-mail electronic address for the party of the business relation.
    /// </summary>
    /// <returns>
    /// The primary e-mail electronic address for the party of the business relation.
    /// </returns>
    display Email email()
    {
        LogisticsElectronicAddress electronicAddress = DirParty::primaryElectronicAddress(this.Party, LogisticsElectronicAddressMethodType::Email);

        return electronicAddress ? electronicAddress.Locator : '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeAndValidateCrossCompany</Name>
				<Source><![CDATA[
    private boolean writeAndValidateCrossCompany(str _methodName, FieldId _fieldIdToCheck = 0)
    {
        boolean ret = true;

        SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
        if (policy.RecId && policy.IsEnabled)
        {
            Query       query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this.orig(), policy.RecId);
            QueryRun    queryRun = new QueryRun(query);
        
            while (queryRun.Next())
            {
                smmLeadTable companySmmLeadTable = queryRun.get(this.TableId);
                DataAreaId company = companySmmLeadTable.DataAreaId;

                if (companySmmLeadTable.RecId && company)
                {
                    changecompany(company)
                    {
                        smmLeadTable smmLeadTable = smmLeadTable::find(companySmmLeadTable.LeadId);
                        if (smmLeadTable.RecId)
                        {
                            buf2Buf(this, smmLeadTable);

                            switch (_methodName)
                            {
                                case tableMethodStr(smmBusRelTable, insert):
                                    if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(company, tableStr(smmTransLog)))
                                    {
                                        smmTransLog::initTrans(smmLeadTable, smmLogAction::insert);
                                    }

                                    if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(company, tableStr(SmmBusRelTable)))
                                    {
                                        smmLeadTable.createBusRelRecord();
                                    }
                                    break;

                                case tableMethodStr(smmBusRelTable, update):
                                    if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(company, tableStr(smmTransLog)))
                                    {
                                        smmTransLog::initTrans(smmLeadTable, smmLogAction::update);
                                    }
                                    break;

                                case tableMethodStr(smmBusRelTable, delete):
                                    if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(company, tableStr(smmTransLog)))
                                    {
                                        smmTransLog::initTrans(smmLeadTable, smmLogAction::delete);
                                    }
                                    break;

                                case tableMethodStr(smmBusRelTable, validateWrite):
                                    if (!smmLeadTable.validateWriteCurrentCompany())
                                    {
                                        return false;
                                    }
                                    break;
                                case tableMethodStr(smmBusRelTable, validateField):
                                    if (!smmLeadTable.validateFieldCurrentCompany(_fieldIdToCheck))
                                    {
                                        return false;
                                    }
                                    break;
                                default:
                                    return true;
                            }
                        }
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmLead</ConfigurationKey>
	<DeveloperDocumentation>@SYS124679</DeveloperDocumentation>
	<FormRef>smmLeadTable</FormRef>
	<Label>@SYS103010</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>LeadId</TitleField1>
	<TitleField2>Subject</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>LeadIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>LeadIdx</PrimaryIndex>
	<ReplacementKey>LeadIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DirOrgPersonRelations</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DirOrgPersonRelations</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmActivityParentLinkTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmActivityParentLinkTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmLeadRelTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmLeadRelTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmOpportunityRelTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmOpportunityRelTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmResponsibilitiesEmplTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmResponsibilitiesEmplTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OwnerWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Subject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OwnerWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rating</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Subject</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdministrationGroup</Name>
			<Label>@SYS40777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OpenedByWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOpen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedByWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateClose</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DaysToClose</Name>
			<Label>@SYS111018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DaysToClose</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EPMiniPage</Name>
			<Label>@SYS108232</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Subject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rating</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeadDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OwnerWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EPSource</Name>
			<Label>@SYS103019</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sourceLinkedId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LeadGroup</Name>
			<Label>@SYS102389</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Subject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeadDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OwnerWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rating</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Memo</Name>
			<Label>@SYS70989</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReasonGroup</Name>
			<Label>@SYS86426</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>smmLeadListMoreInfo</Name>
			<Label>@SYS110470</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ownerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOpen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>daysOpened</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>smmLeadOverviewDetails</Name>
			<Label>@SYS80118</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Subject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeadDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ownerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displaySourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>openedByName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOpen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>closedByName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateClose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReasonId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceDescription</Name>
			<Label>@SYS103007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceGroup</Name>
			<Label>@SYS103019</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceRefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceTypeId</Name>
			<Label>@SYS103028</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ClosedByWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CrmWorkerRecId</ExtendedDataType>
			<Label>@SYS81007</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadDate</ExtendedDataType>
			<Label>@SYS81002</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateOpen</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadDate</ExtendedDataType>
			<Label>@SYS103014</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DaysToClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmDaysToClose</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LeadDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadMemo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LeadId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OpenedByWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CrmWorkerRecId</ExtendedDataType>
			<Label>@SYS103015</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OwnerWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CrmWorkerRecId</ExtendedDataType>
			<Label>@SYS77709</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Priority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProcessName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadProcess</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Rating</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadRating</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmQuotationReasonId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmSalesUnitId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmSourceComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>smmSourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceRefTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SmmSourceTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>smmLeadStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Subject</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmSubject</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmLeadType</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LeadIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LeadId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ClosedByWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OpenedByWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx2</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OwnerWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DirPartyMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Party</MapField>
					<MapFieldTo>Party</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
					<MapFieldTo>LeadId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>smmLeadOpportunity</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Party</MapField>
					<MapFieldTo>Party</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDescription</MapField>
					<MapFieldTo>SourceDescription</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRefRecId</MapField>
					<MapFieldTo>SourceRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRefTableId</MapField>
					<MapFieldTo>SourceRefTableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTypeId</MapField>
					<MapFieldTo>SourceTypeId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ClosedByWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClosedByWorker</Name>
					<Field>ClosedByWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123670</EntityRelationshipRole>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DirAddressBookParty</Name>
			<RelatedTable>DirAddressBookPartyAllView</RelatedTable>
			<RelatedTableRole>DirAddressBookPartyAllView</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>smmLeadTable</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IsPartyOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsLeadFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Hierarchy</Name>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Hierarchy</RelatedTable>
			<RelatedTableRole>Hierarchy</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcessName</Name>
					<SourceEDT>smmLeadProcess</SourceEDT>
					<Field>ProcessName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsActive_Extern</Name>
					<SourceEDT>smmLeadProcess</SourceEDT>
					<RelatedField>IsActive</RelatedField>
					<ValueStr>NoYes::Yes</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsTemplate_Extern</Name>
					<SourceEDT>smmLeadProcess</SourceEDT>
					<RelatedField>IsTemplate</RelatedField>
					<ValueStr>NoYes::Yes</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>HierarchyType_Extern</Name>
					<SourceEDT>smmLeadProcess</SourceEDT>
					<RelatedField>HierarchyType</RelatedField>
					<ValueStr>HierarchyType::Lead</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OpenedByWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_1_smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OpenedByWorker</Name>
					<Field>OpenedByWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OwnerWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_2_smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OwnerWorker</Name>
					<Field>OwnerWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmBusRelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>smmBusRelTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmLeadPriorityTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmLeadPriorityTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmLeadPriorityTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Priority</Name>
					<SourceEDT>smmLeadPriority</SourceEDT>
					<Field>Priority</Field>
					<RelatedField>Priority</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PriorityIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmLeadRatingTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmLeadRatingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmLeadRatingTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Rating</Name>
					<SourceEDT>smmLeadRating</SourceEDT>
					<Field>Rating</Field>
					<RelatedField>Rating</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RatingIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmLeadRelTable</Name>
			<EntityRelationshipRole>@SYS124680</EntityRelationshipRole>
			<RelatedTable>smmLeadRelTable</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LeadId</Name>
					<Field>LeadId</Field>
					<RelatedField>LeadId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmLeadTypeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmLeadTypeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmLeadTypeTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TypeId</Name>
					<SourceEDT>smmLeadType</SourceEDT>
					<Field>TypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmQuotationReasonGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>smmQuotationReasonGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmQuotationReasonGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonId</Name>
					<SourceEDT>smmQuotationReasonId</SourceEDT>
					<Field>ReasonId</Field>
					<RelatedField>ReasonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ReasonIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmSalesUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmSalesUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmSalesUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesUnitId</Name>
					<SourceEDT>smmSalesUnitId</SourceEDT>
					<Field>SalesUnitId</Field>
					<RelatedField>SalesUnitId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesUnitIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmSourceTypeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmSourceTypeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmSourceTypeTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>smmLeadTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTypeId</Name>
					<SourceEDT>SmmSourceTypeId</SourceEDT>
					<Field>SourceTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>