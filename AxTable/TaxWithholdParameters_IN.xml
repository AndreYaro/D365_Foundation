<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdParameters_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdParameters_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates TaxTypeTable_IN table based on given field id.
    /// </summary>
    /// <param name="_fieldId">
    /// A field id in <c>TaxWithholdParameters_IN</c> table.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TaxWithholdParameters_IN, TDSActivate):
            case fieldNum(TaxWithholdParameters_IN, TCSActivate):
                this.populateIndirectTaxTypeForWHTlookup();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateIndirectTaxTypeForWHTlookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method populates TaxTypeTable_IN table based on taxTypeEnumValue.
    /// </summary>
    public void populateIndirectTaxTypeForWHTlookup()
    {
        TaxTypeTable_IN taxTypeTableIN;
        SysLastValue    sysLastValue;

        select firstOnly RecId from taxTypeTableIN;

        if ((this.TDSActivate == NoYes::Yes
            || this.TCSActivate == NoYes::Yes)
             && taxTypeTableIN.RecId == 0)
        {
            taxTypeTableIN.populateTaxType();
        }
        else if (this.TDSActivate == NoYes::No && this.TCSActivate == NoYes::No)
        {
            ttsBegin;
            delete_from taxTypeTableIN;
            //Clear usage data for Withholding tax group
            delete_from sysLastValue
                where sysLastValue.elementName  == formStr(TaxWithholdGroup)
                    && sysLastValue.company     == curext();
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxWithholdParameters_IN</c> table for the specified TaxType.
    /// </summary>
    /// <param name="_taxType">
    /// Tax type for withholding tax.
    /// </param>
    /// <returns>
    /// Boolean value is returned based on the given condition.
    /// </returns>
    public static boolean checkParameter(TaxWithholdType_IN   _taxType)
    {
        fieldId     whereFieldId;
        boolean     ret = true;

        switch (_taxType)
        {
            case TaxWithholdType_IN::TCS:
                whereFieldId = fieldnum(TaxWithholdParameters_IN, tcsActivate);
                break;

            case TaxWithholdType_IN::TDS:
                whereFieldId = fieldnum(TaxWithholdParameters_IN, tdsActivate);
                break;

            default:
                break;
        }

        if (whereFieldId && TaxWithholdParameters_IN::find().(whereFieldId) == NoYes::No)
        {
            ret = false;
            error(strfmt("@GLS5131", _taxType));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of TDS, TCS is checkedor not.
    /// </summary>
    /// <returns>
    /// true if any one of the TCS/TDS is Activate with Country region code.
    /// </returns>
    public static boolean checkTaxParameters()
    {
        TaxWithholdParameters_IN taxWithholdParameters;
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        taxWithholdParameters = TaxWithholdParameters_IN::find();

        return taxWithholdParameters.TDSActivate
                || taxWithholdParameters.TCSActivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxWithholdParameters_IN</c> table.
    /// </summary>
    /// <returns>
    /// A boolean value is returned whether match is true or not.
    /// </returns>
    public static boolean exist()
    {
        return (select taxWithholdParameters_IN).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TaxWithholdParameters_IN</c> table.
    /// </summary>
    /// <returns>
    /// A record in the <c>TaxWithholdParameters_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxWithholdParameters_IN find()
    {
        TaxWithholdParameters_IN parameter;

        select firstonly parameter
            index Key
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TaxWithholdParameters_IN</c> table based on the passed companyId.
    /// </summary>
    /// <param name="_companyId">
    /// The company of the TaxWithholdParameters_IN record.
    /// </param>
    /// <returns>
    /// A record in the <c>TaxWithholdParameters_IN</c> table; otherwise, an empty record if the record is not found in specified company.
    /// </returns>
    public static TaxWithholdParameters_IN findByCompany(CompanyId _companyId = curext())
    {
        TaxWithholdParameters_IN    taxWithholdParameter;
        CompanyId                   companyId;

        if (!_companyId)
        {
            companyId = curext();
        }
        else
        {
            companyId = _companyId;
        }

        changecompany(companyId)
        {
            taxWithholdParameter = TaxWithholdParameters_IN::find();
        }
        return taxWithholdParameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTCSActivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that TCSActivate is checked.
    /// </summary>
    /// <returns>
    /// true if TCSActivate is selected with Country region code.
    /// </returns>
    public static boolean isTCSActivate()
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return TaxWithholdParameters_IN::find().TCSActivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTDSActivate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that TDSActivate is checked.
    /// </summary>
    /// <returns>
    /// true if TDSActivate is selected with Country region code.
    /// </returns>
    public static boolean isTDSActivate()
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return TaxWithholdParameters_IN::find().TDSActivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxReportingVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a number sequence reference given an extended datatype, and a scope.
    /// </summary>
    /// <returns>
    /// An instance of NumberSequenceReference.
    /// </returns>
    public static NumberSequenceReference numRefTaxReportingVoucher()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxWithholdReportingVoucher_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkWarningMsg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check the WHT warning message is enabled or not.
    /// </summary>
    /// <returns>
    /// true if warning message is enabled.
    /// </returns>
    public static boolean checkWarningMsg()
    {
        TaxWithholdParameters_IN taxWithholdParameters;

        taxWithholdParameters = TaxWithholdParameters_IN::find();

        return taxWithholdParameters.EnableWarningMsg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxWithholdVendRelatedVoucher_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence for withholding tax related voucher.
    /// </summary>
    /// <returns>Number sequence reference.</returns>
    public static NumberSequenceReference numRefTaxWithholdVendRelatedVoucher_IN()
    {
        return NumberSeqReference::findReference(extendedTypeNum(TaxWithholdVendorRelatedVoucher_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxWithholdingCreditNoteTaxGroupDefaultBlank</Name>
				<Source><![CDATA[
    public static NoYes isTaxWithholdingCreditNoteTaxGroupDefaultBlank()
    {
        boolean ret;

        ret = TaxWithholdParameters_IN::checkTaxParameters() && !TaxWithholdParameters_IN::find().TaxWithholdingCreditNoteTaxGroupEdit;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>needReverseTDSForVendor</Name>
				<Source><![CDATA[
    public static NoYes needReverseTDSForVendor()
    {
        return TaxWithholdParameters_IN::checkTaxParameters() && !TaxWithholdParameters_IN::find().DisableReverseTDSForVendor;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63817</DeveloperDocumentation>
	<Label>@GLS5477</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TDSActivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSActivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSPayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CrossCompany</Name>
			<Label>@GLS6641</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossCompanyPayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TCS</Name>
			<Label>@GLS5468</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TCSActivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSPayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TDS</Name>
			<Label>@GLS5469</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TDSActivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisableReverseTDSForVendor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CalculationValidation</Name>
			<Label>@SYP4880003</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnableWarningMsg</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CrossCompanyPayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:CrossCompanyPaymentHelpText</HelpText>
			<Label>@GLS6639</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TCSActivate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:ActivateTCSHelpText</HelpText>
			<Label>@GLS5352</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TCSInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TCSInvoiceHelpText</HelpText>
			<Label>@SYS14204</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TCSPayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TCSPaymentHelpText</HelpText>
			<Label>@SYS55132</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TDSActivate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:ActivateTDSHelpText</HelpText>
			<Label>@GLS5351</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TDSInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TDSInvoiceHelpText</HelpText>
			<Label>@SYS14204</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TDSPayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TDSPaymentHelpText</HelpText>
			<Label>@SYS55132</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableWarningMsg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYP4880001</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisableThresholdCumulativeTracking</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@TaxWithholdUncommitted_IN:DisableCumulativeTracking</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdingCreditNoteTaxGroupEdit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@TaxWithholdCreditNoteDefaultsTDSTCS:TaxWithholdingCreditNoteTaxGroupEditParameterHelpText</HelpText>
			<Label>@TaxWithholdCreditNoteDefaultsTDSTCS:TaxWithholdingCreditNoteTaxGroupEditParameterLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisableReverseTDSForVendor</Name>
			<HelpText>@TaxWithholdParameters:DisableReverseTDSForVendorHelpText</HelpText>
			<Label>@TaxWithholdParameters:DisableReverseTDSForVendorLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>