<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCategoryPriceRuleGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCategoryPriceRuleGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNumberOfProducts4Pricing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get unique number of products for pricing.
    /// </summary>
    /// <param name="_priceBasisDate">
    /// Price basis date.
    /// </param>
    /// <returns>
    /// Number of products for pricing.
    /// </returns>
    public Counter getNumberOfProducts4Pricing(RetailPriceBasisDate _priceBasisDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RetailCategoryPriceScheduler priceScheduler = RetailCategoryPriceScheduler::construct();
        RetailCategoryPriceRule      priceRule;
        Set                          items = new Set(Types::Int64);
        QueryRun                     qr;
        InventTable                  inventTable;

        while select priceRule
            where priceRule.CategoryPriceRuleGroupCode == this.Code
        {
            if (!priceRule.isReady4GeneratingPrices())
            {
                continue;
            }

            priceScheduler = RetailCategoryPriceScheduler::construct();
            priceScheduler.parmCategoryPriceRule(priceRule);
            priceScheduler.parmPriceBasisDate(_priceBasisDate);
            qr = new QueryRun(priceScheduler.categoryPriceProductQueryHelper().getQuery());

            while (qr.next())
            {
                inventTable = qr.get(tableNum(InventTable));
                items.add(inventTable.RecId);
            }
        }

        return items.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
	/// <summary>
    /// Modified field logic for fields SaveAddData and SaveOtherGroupPrice.
    /// </summary>
    /// <param name = "_fieldId">The FieldId.</param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailCategoryPriceRuleGroup, SaveAddData):
                if (!this.SaveAddData)
                {
                    this.SaveBasePrice = NoYes::No;
                    this.SaveInventCost = NoYes::No;
                    this.SaveOtherGroupPrice = NoYes::No;
                    this.SaveSalesPrice = NoYes::No;
                    this.PriceGroupId = '';
                }
                break;
            case fieldNum(RetailCategoryPriceRuleGroup, SaveOtherGroupPrice):
                if (!this.SaveOtherGroupPrice)
                {
                    this.PriceGroupId = '';
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.SaveOtherGroupPrice && !this.PriceGroupId)
        {
            ret = checkFailed("@SYP4880906");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
    /// Find <c>RetailCategoryPriceRuleGroup</c> based upon the group code.
    /// </summary>
    /// <param name = "_groupCode">The group code.</param>
    /// <param name = "_update">Select for update; optional.</param>
    /// <returns>The <c>RetailCategoryPriceRuleGroup</c>.</returns>
    public static RetailCategoryPriceRuleGroup find(RetailCategoryPriceRuleGroupCode    _groupCode,
                                                    boolean                             _update = false)
    {
        RetailCategoryPriceRuleGroup  priceRuleGroup;

        priceRuleGroup.selectForUpdate(_update);

        if (_groupCode)
        {
            select firstonly priceRuleGroup
                where priceRuleGroup.Code == _groupCode;
        }

        return priceRuleGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCategoryAllowed</Name>
				<Source><![CDATA[
	/// <summary>
    /// Determine if category is allowed.
    /// </summary>
    /// <param name = "_groupCode">The group code.</param>
    /// <param name = "_category">The category.</param>
    /// <returns>true if category is allowed; otherwise, false.</returns>
    public static boolean isCategoryAllowed(RetailCategoryPriceRuleGroupCode _groupCode, EcoResCategoryId _category)
    {
        EcoResCategory  resCategory;
        RetailCategoryPriceRuleGroup priceGroup;

        if (_groupCode && _category)
        {
            select firstonly recid from resCategory
                where resCategory.RecId == _category
                exists join priceGroup
                where  priceGroup.EcoResCategoryHierarchy == resCategory.CategoryHierarchy
                    && priceGroup.Code == _groupCode;
        }

        return resCategory.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCategoryHierarchies</Name>
				<Source><![CDATA[
	/// <summary>
    /// Lookup category hierarchies.
    /// </summary>
    /// <param name = "_formReferenceControl">The form reference control.</param>
    /// <param name = "_hierarchyRoles">The hierarchy roles.</param>
    /// <returns>The result set.</returns>
    public static Common lookupCategoryHierarchies(FormReferenceControl _formReferenceControl, container _hierarchyRoles)
    {
        SysReferenceTableLookup lookup;
        Query                   query;
        QueryBuildDataSource    dataSourceHierarchy, dataSourceHierarchyRole;
        QueryBuildRange         range;
        EcoResCategoryNamedHierarchyRole hierarchyRole;
        int i;

        query       = new Query();
        dataSourceHierarchy  = query.addDataSource(tablenum(EcoResCategoryHierarchy), tablestr(EcoResCategoryHierarchy));

        range       = dataSourceHierarchy.addRange(fieldnum(EcoResCategoryHierarchy, HierarchyModifier));
        range.value(queryValue(EcoResCategoryHierarchyModifier::Category));

        dataSourceHierarchyRole = dataSourceHierarchy.addDataSource(tableNum(EcoResCategoryHierarchyRole));
        dataSourceHierarchyRole.relations(true);
        dataSourceHierarchyRole.joinMode(JoinMode::ExistsJoin);

        for (i=1; i<=conLen(_hierarchyRoles); ++i)
        {
            hierarchyRole = conPeek(_hierarchyRoles, i);
            range         = dataSourceHierarchyRole.addRange(fieldnum(EcoResCategoryHierarchyRole, NamedCategoryHierarchyRole));
            range.value(queryValue(hierarchyRole));
        }

        lookup = SysReferenceTableLookup::newParameters(tablenum(EcoResCategoryHierarchy), _formReferenceControl);
        lookup.parmQuery(query);
        lookup.addLookupfield(fieldnum(EcoResCategoryHierarchy, Name));

        return lookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4880848</DeveloperDocumentation>
	<FormRef>RetailCategoryPriceRuleGroup</FormRef>
	<Label>@SYP4880847</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>CodeIdx</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EcoResCategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdditionalDataSaving</Name>
			<Label>@SYP4880895</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SaveAddData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SaveSalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SaveBasePrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SaveInventCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SaveOtherGroupPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategoryHierarchy</Name>
			<Label>@SYS130822</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EcoResCategoryHierarchy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYP4880849</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCategoryPriceRuleGroupCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCategoryPriceRuleGroupDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EcoResCategoryHierarchy</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyId</ExtendedDataType>
			<Label>@SYS130823</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriceGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceGroupId</ExtendedDataType>
			<Label>@SYP4880904</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaveAddData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaveAddData</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaveBasePrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaveBasePrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaveInventCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaveInventCost</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaveOtherGroupPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaveOtherGroupPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaveSalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaveSalesPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategoryHierarchyFK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResCategoryHierarchy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EcoResCategoryHierarchy</Name>
					<Field>EcoResCategoryHierarchy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PriceDiscGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PriceDiscGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RetailCategoryPriceRuleGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PriceGroupId</Name>
					<Field>PriceGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PriceDiscGroup</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>