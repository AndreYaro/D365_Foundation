<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPromissoryNoteTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankPromissoryNoteTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete()
    {
        if (this.DocumentStatus != BankPromissoryNoteStatus::Created)
        {
            throw error(strfmt("@SYS73964", BankPromissoryNoteStatus::Created));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(
        BankAccountID _accountID,
        BankPromissoryNoteNum _promissoryNoteNum)
    {
        boolean ret = true;

        if (_accountID && _promissoryNoteNum && !BankPromissoryNoteTable::exist(_accountID, _promissoryNoteNum))
        {
            ret = checkFailed(strfmt(BankPromissoryNoteTable::txtNotExist(),_accountID, _promissoryNoteNum));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPromissoryNote</Name>
				<Source><![CDATA[
    static public BankPromissoryNoteTable createPromissoryNote(
        BankPromissoryNoteNum _noteNum,
        CompanyBankAccountId  _accountID)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        bankPromissoryNoteTable.clear();
        bankPromissoryNoteTable.PromissoryNoteNum = _noteNum;
        bankPromissoryNoteTable.DocumentStatus = BankPromissoryNoteStatus::Created;
        bankPromissoryNoteTable.BankAccountID = _accountID;

        if (BankPromissoryNoteTable::exist(_accountID, _noteNum))
        {
            checkFailed(strfmt("@SYS78843", bankPromissoryNoteTable.PromissoryNoteNum));
            throw error("@SYS18447");
        }

        bankPromissoryNoteTable.insert();

        return bankPromissoryNoteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        BankAccountID  _accountID,
        BankPromissoryNoteNum _promissoryNoteNum)
    {
        boolean ret = false;

        if (_accountID && _promissoryNoteNum)
        {
            ret =
                (select firstonly RecId from bankPromissoryNoteTable
                    where bankPromissoryNoteTable.BankAccountID == _accountID
                        && bankPromissoryNoteTable.PromissoryNoteNum == _promissoryNoteNum
                ).RecId != 0;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BankPromissoryNoteTable find(
        CompanyBankAccountId _accountID,
        BankPromissoryNoteNum _promissoryNoteNum,
        boolean _forUpdate = false)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        if (_accountID && _promissoryNoteNum)
        {
            bankPromissoryNoteTable.selectForUpdate(_forUpdate);

            select firstonly bankPromissoryNoteTable
                where bankPromissoryNoteTable.BankAccountID == _accountID
                    && bankPromissoryNoteTable.PromissoryNoteNum == _promissoryNoteNum;
        }
        return bankPromissoryNoteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBankPNDocStatus</Name>
				<Source><![CDATA[
    public static BankPromissoryNoteTable findBankPNDocStatus(
        CompanyBankAccountId _accountID,
        BankPromissoryNoteNum _promissoryNoteNum,
        BankPromissoryNoteStatus _promissoryNoteStatus,
        boolean _forUpdate = false)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        if (_accountID && _promissoryNoteNum && _promissoryNoteStatus)
        {
            bankPromissoryNoteTable.selectForUpdate(_forUpdate);

            select firstonly bankPromissoryNoteTable
                where bankPromissoryNoteTable.BankAccountID == _accountID
                    && bankPromissoryNoteTable.PromissoryNoteNum == _promissoryNoteNum
                    && bankPromissoryNoteTable.DocumentStatus == _promissoryNoteStatus;
        }
        return bankPromissoryNoteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBankVendPNStatus</Name>
				<Source><![CDATA[
    public static BankPromissoryNoteTable findBankVendPNStatus(
        CompanyBankAccountId _accountID,
        BankPromissoryNoteNum _promissoryNoteNum,
        BankPromissoryNoteStatus _promissoryNoteStatus,
        boolean _forUpdate = false)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        if (_accountID && _promissoryNoteNum && _promissoryNoteStatus)
        {
            bankPromissoryNoteTable.selectForUpdate(_forUpdate);

            select firstonly bankPromissoryNoteTable
                where bankPromissoryNoteTable.BankAccountID == _accountID
                    && bankPromissoryNoteTable.VendPromissoryNoteID == _promissoryNoteNum
                    && bankPromissoryNoteTable.DocumentStatus == _promissoryNoteStatus;
        }

        return bankPromissoryNoteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastPromissoryNum</Name>
				<Source><![CDATA[
    public static BankPromissoryNoteNum findLastPromissoryNum(CompanyBankAccountId _accountID)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        select maxof(PromissoryNoteNum) from bankPromissoryNoteTable
            where bankPromissoryNoteTable.BankAccountID == _accountID;

        return bankPromissoryNoteTable.PromissoryNoteNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNextFree</Name>
				<Source><![CDATA[
    public static BankPromissoryNoteNum findNextFree(CompanyBankAccountId _accountID)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        select firstonly PromissoryNoteNum from bankPromissoryNoteTable
            index AccountNoteIdx
            where bankPromissoryNoteTable.BankAccountID == _accountID
                && bankPromissoryNoteTable.DocumentStatus == BankPromissoryNoteStatus::Created;

        return bankPromissoryNoteTable.PromissoryNoteNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPromissoryNoteDocStatus</Name>
				<Source><![CDATA[
    public static void setPromissoryNoteDocStatus(
        CompanyBankAccountId _accountID,
        BankPromissoryNoteNum _promissoryNoteNum,
        BankPromissoryNoteStatus _promissoryNoteStatus,
        TransDate _transDate,
        Voucher _voucher,
        CustVendAC _beneficiaryAccountNum,
        CurrencyCode _currencyCode,
        AmountCur _amountCur)
    {
        BankPromissoryNoteTable bankPromissoryNoteTable;

        bankPromissoryNoteTable = BankPromissoryNoteTable::find(_accountID, _promissoryNoteNum, true);

        if (!bankPromissoryNoteTable)
        {
            throw error(strfmt(BankPromissoryNoteTable::txtNotExist(), _accountID, _promissoryNoteNum));
        }

        bankPromissoryNoteTable.DocumentStatus = _promissoryNoteStatus;
        bankPromissoryNoteTable.TransDate = _transDate;
        bankPromissoryNoteTable.Voucher = _voucher;
        bankPromissoryNoteTable.BeneficiaryAccountNum = _beneficiaryAccountNum;
        bankPromissoryNoteTable.CurrencyCode = _currencyCode;
        bankPromissoryNoteTable.AmountCur = _amountCur;
        bankPromissoryNoteTable.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS73966";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendPromissoryNote</ConfigurationKey>
	<DeveloperDocumentation>@SYS127029</DeveloperDocumentation>
	<FormRef>BankPromissoryNoteTable</FormRef>
	<Label>@SYS73955</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PromissoryNoteNum</TitleField1>
	<TitleField2>DocumentStatus</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Bank</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>AccountNoteIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BankChequePaymTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BankChequePaymTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromissoryNoteNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromissoryNoteNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromissoryNoteNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPromissoryNoteID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromissoryNoteNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BeneficiaryAccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BeneficiaryAccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PromissoryNote</Name>
			<Label>@SYS71440</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SystemInfo</Name>
			<Label>@SYS10575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS6928</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BeneficiaryAccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Label>@SYS4466</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankPromissoryNoteStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PromissoryNoteNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankPromissoryNoteNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendPromissoryNoteID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPromissoryNoteID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountNoteIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BankAccountID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PromissoryNoteNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BankNegInstTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BankNegInstNum</MapField>
					<MapFieldTo>PromissoryNoteNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyBankAccountId</MapField>
					<MapFieldTo>BankAccountID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendAccount</MapField>
					<MapFieldTo>BeneficiaryAccountNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AmountCur</MapField>
					<MapFieldTo>AmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
					<MapFieldTo>Voucher</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123560</EntityRelationshipRole>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BankAccountTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankPromissoryNoteTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccountID</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>BankAccountID</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPromissoryNoteJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS127030</EntityRelationshipRole>
			<RelatedTable>VendPromissoryNoteJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPromissoryNoteJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankPromissoryNoteTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPromissoryNoteID</Name>
					<SourceEDT>VendPromissoryNoteID</SourceEDT>
					<Field>VendPromissoryNoteID</Field>
					<RelatedField>PromissoryNoteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BeneficiaryAccountNum</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>BeneficiaryAccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>