<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanTaskCollectionLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqDemPlanTaskCollectionLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>duration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the duration of a task.
    /// </summary>
    /// <returns>
    /// The duration of the task.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display ReqDemPlanTaskLogDuration duration()
    {
        System.TimeSpan             duration;
        ReqDemPlanTaskLogDuration   durationstr;
        int timeDifference;

        if (this.EndDate && this.StartDate)
        {
            timeDifference = any2int(DateTimeUtil::getDifference(this.EndDate, this.StartDate));
            duration = new System.TimeSpan(0, 0, timeDifference);
            durationstr = duration.ToString();
        }
        else
        {
            durationstr = "@SYS319307";
        }
        return durationstr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>ReqDemPlanTaskCollectionLog</c> table.
    /// </summary>
    /// <param name="_recId">
    ///     The ID of the record.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>ReqDemPlanTaskCollectionLog</c> table; otherwise, an empty record.
    /// </returns>
    public static ReqDemPlanTaskCollectionLog find(RecId _recId, boolean _forUpdate = false)
    {
        ReqDemPlanTaskCollectionLog collectionLog;

        collectionLog.selectForUpdate(_forUpdate);

        select forUpdate collectionLog
            where collectionLog.RecId == _recId;

        return collectionLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ReqDemandPlanning</ConfigurationKey>
	<DeveloperDocumentation>@DMP1162</DeveloperDocumentation>
	<Label>@DMP1161</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>RecId</TitleField1>
	<TitleField2>StartDate</TitleField2>
	<Modules>MasterPlanning</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Duration</Name>
			<Label>@DMP1163</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS11696</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InfologMessages</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqDemPlanTaskEndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>InfologMessages</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InfologData</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqDemPlanTaskStartDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EndDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EndDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StartDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ReqDemPlanGeneratedForecast</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ReqDemPlanGeneratedForecast</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>TaskCollection</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>