<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventBatchJournalSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventBatchJournalSource extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the record.
    /// </summary>
    /// <param name="_updateJournal">
    ///    Determines if the batch journal should be automatically updated after the source record has been deleted.
    /// </param>
    public void delete(boolean _updateJournal = true)
    {
        InventBatchJournal                      inventBatchJournal = this.inventBatchJournal();
        InventBatchJournalController            controller;
        InventBatchId                           inventBatchId;
        InventBatchJournalSourceAttributeValue  inventBatchJournalSourceAttributeValue;

        inventBatchId = this.inventDim().InventBatchId;

        super();

        if (inventBatchJournal)
        {
            controller = inventBatchJournal.journalController();
            if (!controller.lineForBatchExists(inventBatchId))
            {
                delete_from inventBatchJournalSourceAttributeValue
                    where inventBatchJournalSourceAttributeValue.InventBatchJournal == inventBatchJournal.RecId
                        && inventBatchJournalSourceAttributeValue.InventBatchId     == inventBatchId;
            }

            if (_updateJournal)
            {
                controller.onSourceLinesDeleted();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds inventory dimensions referenced by the current record.
    /// </summary>
    /// <returns>
    /// Inventory dimensions referenced by the current record.
    /// </returns>
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a value indicating if a matching record for the <c>InventBatchJournalSource</c> table exists.
    /// </summary>
    /// <param name="_journalRefRecId">
    ///    The inventory batch journal record ID to search for.
    /// </param>
    /// <param name="_inventDimId">
    ///    The inventory dimension ID of the journal line to search for.
    /// </param>
    /// <returns>
    ///    true if a record for the <c>InventBatchJournalSource</c> table exists for the given journal and inventory dimension ID; otherwise, false.
    /// </returns>
    public static boolean exist(InventBatchJournalRecId _journalRefRecId, InventDimId _inventDimId)
    {
        return _journalRefRecId && _inventDimId
            && (select inventBatchJournalSource
                where inventBatchJournalSource.InventBatchJournal == _journalRefRecId
                    && inventBatchJournalSource.InventDimId       == _inventDimId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForJournal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a value indicating if a record for the <c>InventBatchJournalSource</c> table for the given journal ID.
    /// </summary>
    /// <param name="_journalRefRecId">
    ///    The batch handling journal record ID to search for.
    /// </param>
    /// <returns>
    ///    true if a record for the <c>InventBatchJournalSource</c> table exists for the given journal ID; otherwise, false.
    /// </returns>
    public static boolean existForJournal(InventBatchJournalRecId _journalRefRecId)
    {
        return _journalRefRecId
            && (select inventBatchJournalSource
                where inventBatchJournalSource.InventBatchJournal == _journalRefRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the matching record in the <c>InventBatchJournalSource</c> table for a given journal and inventory dimension.
    /// </summary>
    /// <param name="_journalRefRecId">
    ///    The inventory batch journal record ID to search for.
    /// </param>
    /// <param name="_inventDimId">
    ///    The inventory dimension ID to search for.
    /// </param>
    /// <param name="_forUpdate">
    ///    Determines if the record should be locked for update; optional.
    /// </param>
    /// <returns>
    ///    The matching record in the <c>InventBatchJournalSource</c> table or an empty buffer if no such
    ///    record is found.
    /// </returns>
    public static InventBatchJournalSource find(InventBatchJournalRecId _journalRefRecId, InventDimId _inventDimId, boolean _forUpdate = false)
    {
        InventBatchJournalSource inventBatchJournalSource;

        if (_journalRefRecId && _inventDimId)
        {
            inventBatchJournalSource.selectForUpdate(_forUpdate);

            select firstonly inventBatchJournalSource
                where inventBatchJournalSource.InventBatchJournal    == _journalRefRecId
                    && inventBatchJournalSource.InventDimId == _inventDimId;
        }

        return inventBatchJournalSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventBatchJournal</Name>
				<Source><![CDATA[
        public InventBatchJournal InventBatchJournal(InventBatchJournal _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('InventBatchJournal');
            }
            else
            {
                return this.setLink('InventBatchJournal', _relatedTable);
            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS4001864</DeveloperDocumentation>
	<Label>@SYS4001853</Label>
	<TitleField1>InventBatchJournal</TitleField1>
	<TitleField2>InventDimId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWInventQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBatchJournal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantities</Name>
			<Label>@PRO1693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWInventQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CWInventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventBatchJournal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBatchJournalRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BatchJournalDimIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InventBatchJournal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventBatchJournal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventBatchJournal</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventBatchJournal</Name>
					<Field>InventBatchJournal</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>