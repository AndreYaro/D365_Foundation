<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099SoftwareVendParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class Tax1099SoftwareVendParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRec</Name>
				<Source><![CDATA[
    void createRec()
    {
        /*
        The first time the Tax1099SoftwareVendTable table is accessed, ask the user whether to the system should automatically
        fill in the Company as the Transmitter.
        If Yes, fill in the company as the 1099 software vendor
        If No, then configure the software vendor with the MBS information.
        */
        #define.CR("\n")
        Tax1099SoftwareVendParameters localTax1099SoftwareVendParameters;

        select RecId from localTax1099SoftwareVendParameters;
        if (localTax1099SoftwareVendParameters.RecId == 0)
        {
            if (Box::yesNo("@SYS84756" + #CR + "@SYS86646", DialogButton::Yes, "@SYS84757", ''))
            {
                this.fillWithCompanyData();
            }
            else
            {
                this.fillWithSoftwareVendorData();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillWithCompanyData</Name>
				<Source><![CDATA[
    void fillWithCompanyData()
    {
        CompanyInfo companyInfo = CompanyInfo::find();
        Tax1099SoftwareVendParameters localTax1099SoftwareVendParameters;
        LogisticsLocationEntity location;

        ttsbegin;
        select forupdate localTax1099SoftwareVendParameters;

        location = LogisticsLocationEntity::constructFromLocationRecId(DirParty::primaryPostalAddressLocationRecId(companyInfo.RecId));

        localTax1099SoftwareVendParameters.Location = location.createLocationCopyEx().RecId;
        localTax1099SoftwareVendParameters.Name = companyInfo.name();
        localTax1099SoftwareVendParameters.Phone = companyInfo.phone();
        localTax1099SoftwareVendParameters.ForeignEntityIndicator = companyInfo.ForeignEntityIndicator;
        localTax1099SoftwareVendParameters.SoftwareVendorIndicator = Tax1099SofwareVendorIndicator::Inhouse;
        localTax1099SoftwareVendParameters.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillWithSoftwareVendorData</Name>
				<Source><![CDATA[
    void fillWithSoftwareVendorData()
    {
        Tax1099SoftwareVendParameters localTax1099SoftwareVendParameters;
        LogisticsLocation location;
        LogisticsPostalAddress postalAddress;

        ttsbegin;
        select forupdate localTax1099SoftwareVendParameters;

        localTax1099SoftwareVendParameters.Name = 'Microsoft Business Solutions';

        location = LogisticsLocation::create(localTax1099SoftwareVendParameters.Name);

        postalAddress.initValue();
        postalAddress.Street = '1 Lone Tree Road';
        postalAddress.City = 'Fargo';
        postalAddress.State = 'ND';
        postalAddress.ZipCode = '581043911';
        postalAddress.CountryRegionId = 'USA';
        postalAddress.County = '';
        postalAddress.Location = location.RecId;
        postalAddress.insert();

        localTax1099SoftwareVendParameters.Phone = '888-477-7877';
        localTax1099SoftwareVendParameters.ContactEmail = 'dynsolve@microsoft.com';
        localTax1099SoftwareVendParameters.ContactName = 'MBS Tech Support';
        localTax1099SoftwareVendParameters.ContactPhone = '888-477-7877';
        localTax1099SoftwareVendParameters.ForeignEntityIndicator = NoYes::No;
        localTax1099SoftwareVendParameters.SoftwareVendorIndicator = Tax1099SofwareVendorIndicator::Vendor;
        localTax1099SoftwareVendParameters.Location = location.RecId;
        localTax1099SoftwareVendParameters.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateIRSData</Name>
				<Source><![CDATA[
    boolean validateIRSData(boolean writeToFile = false)
    {
        boolean ret = true;
        boolean nameOK;
        boolean streetOK;
        boolean cityOK;
        boolean stateOK;
        boolean zipCodeOK;
        boolean phoneOK;
        boolean contactOK = true;
        boolean contactNameOK = true;
        boolean contactPhoneOK = true;
        boolean contactEmailOK = true;
        LogisticsPostalAddress postalAddress = LogisticsLocationEntity::location2PostalAddress(this.Location);

        setprefix(strfmt("@SYS84735", "@SYS84755"));

        nameOK = Tax1099ElectronicCheck::validateForIRS(this.Name, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(Tax1099SoftwareVendParameters, Name), writeToFile);

        streetOK = Tax1099ElectronicCheck::validateForIRS(postalAddress.Street, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(LogisticsPostalAddress, Street), writeToFile);

        cityOK = Tax1099ElectronicCheck::validateForIRS(postalAddress.City, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(LogisticsPostalAddress, City), writeToFile);

        stateOK = Tax1099ElectronicCheck::validateForIRS(postalAddress.State, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(LogisticsPostalAddress, State), writeToFile);

        zipCodeOK = Tax1099ElectronicCheck::validateForIRS(postalAddress.ZipCode, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(LogisticsPostalAddress, ZipCode), writeToFile);

        phoneOK = Tax1099ElectronicCheck::validateForIRS(this.Phone, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(Tax1099SoftwareVendParameters, Phone), writeToFile);

        contactNameOK = Tax1099ElectronicCheck::validateForIRS(this.ContactName, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(Tax1099SoftwareVendParameters, ContactName), writeToFile);

        contactPhoneOK = Tax1099ElectronicCheck::validateForIRS(this.ContactPhone, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(Tax1099SoftwareVendParameters, ContactPhone), writeToFile);

        contactEmailOK = Tax1099ElectronicCheck::validateForIRS(this.ContactEmail, tablepname(Tax1099SoftwareVendParameters),
                                               fieldpname(Tax1099SoftwareVendParameters, ContactEmail), writeToFile);

        contactOK = contactNameOK && contactPhoneOK;
        contactPhoneOK = this.ContactPhone ? true : false;
        contactEmailOK = this.ContactEmail ? true : false;

        contactOK = contactNameOK && contactPhoneOK && contactEmailOK;

        ret = nameOK && streetOK && cityOK && stateOK && zipCodeOK && phoneOK && contactOK;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            if (CompanyInfo::find().Validate1099OnEntry)
            {
                ret = this.validateIRSData(false);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(Tax1099Box tax1099Box)
    {
        boolean ret = true;

        if (tax1099Box && !Tax1099Fields::exist(tax1099Box))
        {
            ret = checkFailed(strfmt(Tax1099Fields::txtNotExist(), tax1099Box));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist()
    {
        return (select firstonly RecId from tax1099SoftwareVendParameters).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static Tax1099SoftwareVendParameters find(boolean _forupdate = false)
    {
        Tax1099SoftwareVendParameters parameter;

        parameter.selectForUpdate(_forupdate);

        select firstonly parameter
            index KeyIdx
            where parameter.ParametersKey == 0;

        return parameter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>US</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123594</DeveloperDocumentation>
	<FormRef>tax1099softwareVendParameters</FormRef>
	<Label>@SYS84755</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>SoftwareVendorIndicator</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SoftwareVendorIndicator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForeignEntityIndicator</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParametersKey</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SoftwareVendorIndicator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForeignEntityIndicator</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SoftwareContactInfo</Name>
			<Label>@SYS84758</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactEmail</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactEmail</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForeignEntityIndicator</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099ForeignEntityIndicator</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Tax1099VendorName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ParametersKey</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SoftwareVendorIndicator</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099SoftwareVendorIndicator</ExtendedDataType>
			<EnumType>Tax1099SofwareVendorIndicator</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParametersKey</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Tax1099VendorLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Tax1099SoftwareVendParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>