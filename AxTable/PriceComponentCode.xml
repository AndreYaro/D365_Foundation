<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceComponentCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceComponentCode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    public static PriceComponentCode findByName(PriceComponent _component, Name _codeName, boolean _forUpdate = false)
    {
        PriceComponentCode priceComponentCode;

        priceComponentCode.selectForUpdate(_forUpdate);

        if (_codeName)
        {
            select firstonly priceComponentCode
                where priceComponentCode.PriceComponent == _component
                   && priceComponentCode.Name == _codeName;
        }

        return priceComponentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PriceComponentCode find(RecId _recId, boolean _forUpdate = false)
    {
        PriceComponentCode priceComponentCode;

        priceComponentCode.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly priceComponentCode
                where priceComponentCode.RecId == _recId;
        }

        return priceComponentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDefault</Name>
				<Source><![CDATA[
    public static PriceComponentCode findDefault(PriceComponent _component, boolean _forUpdate = false)
    {
        PriceComponentCode priceComponentCode;

        priceComponentCode.selectForUpdate(_forUpdate);

        select firstonly priceComponentCode
            where priceComponentCode.PriceComponent == _component
                && priceComponentCode.IsDefault == NoYes::Yes;

        return priceComponentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateDefault</Name>
				<Source><![CDATA[
    public static PriceComponentCode findOrCreateDefault(PriceComponent _priceComponent, boolean _forUpdate = false)
    {
        PriceComponentCode componentCode = PriceComponentCode::findDefault(_priceComponent, _forUpdate);

        if (!componentCode)
        {
            componentCode.PriceComponent = _priceComponent;
            componentCode.Name = 'PriceComponentCodeDefaultName';
            componentCode.IsDefault = NoYes::Yes;
            componentCode.PublishStatus = PriceAttributePublishStatus::Published;
            componentCode.insert();
        }

        return componentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        if (this.IsDefault)
        {
            PriceComponentCode defaultCode = PriceComponentCode::findDefault(this.PriceComponent);
            if (defaultCode)
            {
                ret = ret && checkFailed(strFmt("@Retail:EntityDuplicateRecord", tableId2PName(tableNum(PriceComponentCode))));
            }
        }

        if (ret && this.PriceComponent == PriceComponent::PriceGroup && !this.IsDefault)
        {
            ret = checkFailed(strFmt("@Retail:EntityDuplicateRecord", tableId2PName(tableNum(PriceComponentCode))));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    public static void lookup(FormControl _formControl)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(PriceComponentCode), _formControl);
        sysTableLookup.addLookupfield(fieldNum(PriceComponentCode, Name));
   
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(PriceComponentCode));
        qbds.addRange(fieldNum(PriceComponentCode, IsDefault)).value(queryValue(NoYes::No));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>PriceComponentCode</FormRef>
	<Label>@UnifiedPricing:PriceComponentCodes</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PriceComponentNameIdx</ClusteredIndex>
	<PrimaryIndex>PriceComponentNameIdx</PrimaryIndex>
	<ReplacementKey>PriceComponentNameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceComponent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceComponent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceComponent</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<EnumType>PriceComponent</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>PriceComponentCodeName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PublishStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>PriceAttributePublishStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceComponentNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PriceComponent</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>