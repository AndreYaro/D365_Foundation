<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerConsumptionTaxReportTrans_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerConsumptionTaxReportTrans_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayAccountingPersonnel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads AccountingPersonnel_JP info.
    /// </summary>
    /// <returns>
    /// Return AccountingPersonnel_JP info.
    /// </returns>
    [SysClientCacheDataMethod(true)]
    public display AccountingPersonnel_JP displayAccountingPersonnel()
    {
        return CompanyInfo::find().AccountingPersonnel_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCompanyAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads company address info.
    /// </summary>
    /// <returns>
    /// Return company address info.
    /// </returns>
    [SysClientCacheDataMethod(true)]
    public display Addressing displayCompanyAddress()
    {
        return companyInfo::find().postalAddress().Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCompanyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads company name info.
    /// </summary>
    /// <returns>
    /// Return company name info.
    /// </returns>
    [SysClientCacheDataMethod(true)]
    public display CompanyName displayCompanyName()
    {
        return CompanyInfo::find().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize LedgerConsumptionTaxCalcTrans_JP table according to taxReport_JP record.
    /// </summary>
    /// <param name="_taxReport_JP">
    /// _taxReport_JP record.
    /// </param>
    public void initFromTaxReport(TaxReport_JP _taxReport_JP)
    {
        CompanyInfo                         companyInfo;
        TaxJurisdiction                     taxJuri;
        LedgerConsumptionTaxCalcTrans_JP    consTaxCalcRep;

        companyInfo = CompanyInfo::find();
        select firstonly TaxJurisdictionName
            from taxJuri
                where taxJuri.TaxPeriod == _taxReport_JP.taxPeriod();

        if (taxJuri)
        {
            this.TaxationOfficeName = taxJuri.TaxJurisdictionName;
        }

        select firstonly Apellative
            from consTaxCalcRep
                where consTaxCalcRep.PeriodOfTaxationFrom == _taxReport_JP.fromDate()
                    && consTaxCalcRep.PeriodOfTaxationTo  == _taxReport_JP.toDate()
                    && consTaxCalcRep.SettlementPeriod    == _taxReport_JP.taxPeriod()
                    && consTaxCalcRep.TypeOfDeclaration   == _taxReport_JP.typeOfDeclaration();

        this.AccountingPersonnel = companyInfo.AccountingPersonnel_JP;

        if (consTaxCalcRep)
        {
            this.CompanyRepresentative = consTaxCalcRep.Apellative;
        }

        this.Version = TaxRepVersion::Original;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVersionMatured</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Check whether version is more than 2.
    /// </summary>
    /// <returns>
    /// If version is more than 2, return true.
    /// </returns>
    public boolean isVersionMatured()
    {
        return !(this.Version == TaxRepVersion::Original || this.Version == TaxRepVersion::Correct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index.
    /// </param>
    public void modifiedFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(LedgerConsumptionTaxReportTrans_JP, ReportItem2):
                if (this.orig().ReportItem2 != this.ReportItem2)
                {
                    this.Modified = NoYes::Yes;
                }
                break;

            case fieldstr(LedgerConsumptionTaxReportTrans_JP, ReportItem13):
                if (this.orig().ReportItem13 != this.ReportItem13)
                {
                    this.Modified13 = NoYes::Yes;
                }
                break;

            case fieldstr(LedgerConsumptionTaxReportTrans_JP, ReportItem24):
                if (this.orig().ReportItem24 != this.ReportItem24)
                {
                    this.Modified24 = NoYes::Yes;
                }
                break;

            case fieldstr(LedgerConsumptionTaxReportTrans_JP, ReportItem25):
                if (this.orig().ReportItem25 != this.ReportItem25)
                {
                    this.Modified25 = NoYes::Yes;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the LedgerConsumptionTaxReportTrans_JP table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing LedgerConsumptionTaxReportTrans_JP table.
    /// </returns>
    public static LedgerConsumptionTaxReportTrans_JP find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans_JP;

        ledgerConsumptionTaxReportTrans_JP.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerConsumptionTaxReportTrans_JP.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerConsumptionTaxReportTrans_JP
            where ledgerConsumptionTaxReportTrans_JP.RecId == _recId;
        return ledgerConsumptionTaxReportTrans_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDateAndTypeOfDeclaration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the LedgerConsumptionTaxReportTrans_JP table for the specified details.
    /// </summary>
    /// <param name="_fromDate">
    /// Start date to find.
    /// </param>
    /// <param name="_toDate">
    /// End date to find.
    /// </param>
    /// <param name="_typeOfDeclaration">
    /// The detail info to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <returns>
    /// A buffer containing LedgerConsumptionTaxReportTrans_JP table.
    /// </returns>
    public static LedgerConsumptionTaxReportTrans_JP findByDateAndTypeOfDeclaration(
        FromDate              _fromDate,
        ToDate                _toDate,
        TypeOfDeclaration_JP  _typeOfDeclaration,
        boolean               _forUpdate = false)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans_JP;

        if (_fromDate && _toDate)
        {
            if (_forUpdate)
            {
                ledgerConsumptionTaxReportTrans_JP.selectForUpdate(_forUpdate);
            }

            select firstonly ledgerConsumptionTaxReportTrans_JP
                where ((ledgerConsumptionTaxReportTrans_JP.PeriodOfTaxationFrom == _fromDate
                    && ledgerConsumptionTaxReportTrans_JP.PeriodOfTaxationTo == _toDate)
                    || (ledgerConsumptionTaxReportTrans_JP.InterimFrom == _fromDate
                    && ledgerConsumptionTaxReportTrans_JP.InterimTo == _toDate))
                    && ledgerConsumptionTaxReportTrans_JP.TypeOfDeclaration == _typeOfDeclaration
                    && LedgerConsumptionTaxReportTrans_JP.DataLayout == '';
        }

        return ledgerConsumptionTaxReportTrans_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxReportParameters</Name>
				<Source><![CDATA[
    internal static LedgerConsumptionTaxReportTrans_JP findByTaxReportParameters(TaxReportIParameters_JP _taxReportParameters, TaxReportDataLayout_JP _dataLayout, boolean _forUpdate = false)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        if (_forUpdate)
        {
            ledgerConsumptionTaxReportTrans.selectForUpdate(_forUpdate);
        }

        if (_taxReportParameters)
        {
            select firstonly ledgerConsumptionTaxReportTrans
                where ((ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == _taxReportParameters.parmFromDate()
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo  == _taxReportParameters.parmToDate())
                    || (ledgerConsumptionTaxReportTrans.InterimFrom == _taxReportParameters.parmFromDate()
                    && ledgerConsumptionTaxReportTrans.InterimTo == _taxReportParameters.parmToDate()))
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == _taxReportParameters.parmTypeOfDeclaration()
                    && ledgerConsumptionTaxReportTrans.DataLayout == _dataLayout;
        }

        return ledgerConsumptionTaxReportTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByTaxReportParametersVersion</Name>
				<Source><![CDATA[
    internal static boolean existByTaxReportParametersVersion(TaxReportIParameters_JP _taxReportParameters, TaxRepVersion _version, TaxReportDataLayout_JP _dataLayout)
    {
        return _taxReportParameters && (select firstonly RecId from LedgerConsumptionTaxReportTrans_JP
            where ((LedgerConsumptionTaxReportTrans_JP.PeriodOfTaxationFrom == _taxReportParameters.parmFromDate()
                && LedgerConsumptionTaxReportTrans_JP.PeriodOfTaxationTo  == _taxReportParameters.parmToDate())
                || (LedgerConsumptionTaxReportTrans_JP.InterimFrom == _taxReportParameters.parmFromDate()
                && LedgerConsumptionTaxReportTrans_JP.InterimTo == _taxReportParameters.parmToDate()))
                && LedgerConsumptionTaxReportTrans_JP.TypeOfDeclaration == _taxReportParameters.parmTypeOfDeclaration()
                && LedgerConsumptionTaxReportTrans_JP.DataLayout == _dataLayout
                && LedgerConsumptionTaxReportTrans_JP.Version == _version).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeVersionZero</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Removes the records which version are zero.
    /// </summary>
    public static void removeVersionZero()
    {
        LedgerConsumptionTaxReportTrans_JP lcTaxReport;

        delete_from lcTaxReport
            where lcTaxReport.Version == TaxRepVersion::Original;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeVersionNotMatured</Name>
				<Source><![CDATA[
    internal static void removeVersionNotMatured(
        TaxPeriod _taxPeriod,
        FromDate _fromDate,
        ToDate _toDate,
        TypeOfDeclaration_JP _typeOfDeclaration)

    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        delete_from ledgerConsumptionTaxReportTrans
            where ((ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom >= _fromDate
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo <= _toDate)
                || (ledgerConsumptionTaxReportTrans.InterimFrom >= _fromDate
                && ledgerConsumptionTaxReportTrans.InterimTo <= _toDate))
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == _typeOfDeclaration
                && (ledgerConsumptionTaxReportTrans.Version == TaxRepVersion::Original
                || ledgerConsumptionTaxReportTrans.Version == TaxRepVersion::Correct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem1</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 1 amount
    /// </summary>
    /// <returns>The item 1 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem1()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(ReportItem1) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.ReportItem1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 2 amount
    /// </summary>
    /// <returns>The item 2 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem2()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem2) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem3</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 3 amount
    /// </summary>
    /// <returns>The item 3 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem3()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem3) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem4</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 4 amount
    /// </summary>
    /// <returns>The item 4 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem4()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem4) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem5</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 5 amount
    /// </summary>
    /// <returns>The item 5 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem5()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem5) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem6</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 6 amount
    /// </summary>
    /// <returns>The item 6 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem6()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem6) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem6;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem7</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 7 amount
    /// </summary>
    /// <returns>The item 7 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem7()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem7) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem7;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem8</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 8 amount
    /// </summary>
    /// <returns>The item 8 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem8()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem8) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem8;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem9</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 9 amount
    /// </summary>
    /// <returns>The item 9 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem9()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem9) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem9;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem11</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 11 amount
    /// </summary>
    /// <returns>The item 11 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem11()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem11) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem11;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem12</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 12 amount
    /// </summary>
    /// <returns>The item 12 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem12()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem12) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem12;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem15</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 15 amount
    /// </summary>
    /// <returns>The item 15 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem15()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem15) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem15;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem16</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 16 amount
    /// </summary>
    /// <returns>The item 16 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem16()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem16) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem16;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem17</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 17 amount
    /// </summary>
    /// <returns>The item 17 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem17()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem17) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem17;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem18</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 18 amount
    /// </summary>
    /// <returns>The item 18 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem18()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem18) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem18;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem19</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 19 amount
    /// </summary>
    /// <returns>The item 19 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem19()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem19) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem19;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem20</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 20 amount
    /// </summary>
    /// <returns>The item 20 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem20()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem20) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem20;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem22</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 22 amount
    /// </summary>
    /// <returns>The item 22 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem22()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem22) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem22;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem23</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 23 amount
    /// </summary>
    /// <returns>The item 23 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem23()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem23) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem23;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem26</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the item 26 amount
    /// </summary>
    /// <returns>The item 26 amount</returns>
    [SysClientCacheDataMethod(true)]
    public display TaxOriginAmount_JP reportItem26()
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;

        select sum(reportItem26) from ledgerConsumptionTaxReportTrans
            where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

        return ledgerConsumptionTaxReportTrans.reportItem26;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem10</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 10 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 10 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem10(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem10 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem10) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem10;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem13</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 13 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 13 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem13(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem13 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem13) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem13;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem21</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 21 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 21 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem21(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem21 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem21) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem21;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem24</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 24 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 24 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem24(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem24 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem24) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem24;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem14</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 14 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 14 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem14(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem14 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem14) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem14;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportItem25</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate or enter the item 25 amount
    /// </summary>
    /// <param name = "Set"></param>
    /// <param name = "_taxOriginAmount"></param>
    /// <returns>The item 25 amount</returns>
    [SysClientCacheDataMethod(true)]
    public edit TaxOriginAmount_JP reportItem25(boolean Set, TaxOriginAmount_JP _taxOriginAmount)
    {
        LedgerConsumptionTaxReportTrans_JP ledgerConsumptionTaxReportTrans;
        TaxAmount   taxAmount;

        if (Set)
        {
            this.reportItem24 = _taxOriginAmount;
            taxAmount = _taxOriginAmount;
        }
        else
        {
            select sum(reportItem25) from ledgerConsumptionTaxReportTrans
                where ledgerConsumptionTaxReportTrans.PeriodOfTaxationFrom == this.PeriodOfTaxationFrom
                    && ledgerConsumptionTaxReportTrans.PeriodOfTaxationTo == this.PeriodOfTaxationTo
                    && ledgerConsumptionTaxReportTrans.InterimFrom == this.InterimFrom
                    && ledgerConsumptionTaxReportTrans.InterimTo == this.InterimTo
                    && ledgerConsumptionTaxReportTrans.TypeOfDeclaration == this.TypeOfDeclaration;

            taxAmount = ledgerConsumptionTaxReportTrans.reportItem25;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63154</DeveloperDocumentation>
	<Label>@GLS60128</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TypeOfDeclaration</TitleField1>
	<TitleField2>CalcMethod</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodOfTaxationFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodOfTaxationTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterimFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterimTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPaymentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRefundAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcMethod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdditionalInfo</Name>
			<Label>@GLS60129</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstallmentBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferredPaymentBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PercentageOfCompletionBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashBasisAccounting</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionalTaxCalcTreatment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IndividualMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LumpsumMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FullyDeductible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRefundAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPaymentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxableSalesBenchmarkPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameOfTaxAccountant</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentSubmittedLaw30</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentSubmittedLaw332</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ConsumptionTaxCalcSection</Name>
			<Label>@GLS60130</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportItem1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem9</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem10</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem11</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem12</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem13</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem14</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem15</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem16</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Header</Name>
			<Label>@SYS4925</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxationOfficeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyRepresentative</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingPersonnel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodOfTaxationFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodOfTaxationTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterimFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterimTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LocalConsumptionTaxCalcSection</Name>
			<Label>@GLS60131</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportItem17</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem18</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem19</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem20</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem21</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem22</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem23</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem24</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem25</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportItem26</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modified</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeOfDeclaration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataLayout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountingPersonnel</Name>
			<AllowEdit>No</AllowEdit>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AccountingPersonnel_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<Label>@GLS60070</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalcMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CalcMethod_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CashBasisAccounting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CashBasisAccounting_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comments</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Comments_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyRepresentative</Name>
			<AllowEdit>No</AllowEdit>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CompanyRepresentative_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeferredPaymentBasis</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DeferredPaymentBasis_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentSubmittedLaw30</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentSubmittedLaw30_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentSubmittedLaw332</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentSubmittedLaw332_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExceptionalTaxCalcTreatment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExceptionalTaxCalcTreatment_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FullyDeductible</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FullyDeductible_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IndividualMethod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IndividualMethod_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InstallmentBasis</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InstallmentBasis_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InterimFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterimFrom_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InterimTo</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterimTo_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LumpsumMethod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LumpsumMethod_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Modified</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Modified13</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Modified24</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Modified25</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NameOfTaxAccountant</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>NameOfTaxAccountant_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PercentageOfCompletionBasis</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IsApplicablePercentage_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PeriodOfTaxationFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxationFrom_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PeriodOfTaxationTo</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxationTo_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem10</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60109</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem11</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60110</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem12</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60111</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem13</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60112</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem14</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60113</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem15</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60114</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem16</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60115</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem17</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60116</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem18</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60117</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem19</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60118</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60101</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem20</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60119</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem21</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60120</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem22</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60121</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem23</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60122</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem24</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60123</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem25</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60124</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem26</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60125</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60102</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem4</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60103</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem5</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60104</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem6</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60105</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem7</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60106</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem8</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60107</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem9</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60108</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxableSalesBenchmarkPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxableSalesBenchmarkPeriod_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxationOfficeName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxationOfficeName_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxPaymentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxPaymentAmount_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxRefundAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRefundAmount_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TypeOfDeclaration</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TypeOfDeclaration_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Version</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxRepVersion</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<EnumType>TaxType_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RatioOfTaxableSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RatioOfTaxableSales_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportItem4_1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalculatedTaxAmount_JP</ExtendedDataType>
			<Label>@GLS60103</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegistrationNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRegistrationNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DataLayout</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TaxReportDataLayout_JP</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankAccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReportIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PeriodOfTaxationFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InterimFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PeriodOfTaxationTo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InterimTo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TypeOfDeclaration</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataLayout</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Version</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankAccountTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerConsumptionTaxReportTrans_JP</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccount</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>BankAccount</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>