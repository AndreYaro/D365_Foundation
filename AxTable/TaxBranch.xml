<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxBranch</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxBranch extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the record can be delelted before you delete the record.
    /// </summary>
    public void delete()
    {
        // Check to see if the associated dimension attribute value has been used
        // in a way that would prevent deletion.
        if (!DimensionValidation::canDeleteEntityValue(this))
        {
            // The Tax branch dimension cannot be deleted.
            throw error("@SYS4082922");
        }

        ttsbegin;
        // Update the associated dimension attribute value.
        DimensionAttributeValue::updateForEntityValueDelete(this);

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks the record whether existed in the <c>TaxBranch</c> table.
    /// </summary>
    /// <returns>
    ///    False if the table have no records, otherwise true.
    /// </returns>
    static boolean exist()
    {
        return (select firstonly taxBranch).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxBranch</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>TaxBranch</c> record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxBranch</c> table.
    /// </returns>
    public static TaxBranch find(TaxBranchRefRecId _recId)
    {
        TaxBranch taxBranch;

        select firstonly taxBranch
            where taxBranch.RecId == _recId;

        return taxBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxBranch</c> table.
    /// </summary>
    /// <param name="_code">
    ///    The field Code of the <c>TaxBranch</c> record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxBranch</c> table.
    /// </returns>
    public static TaxBranch findByCode(TaxBranchCode _code)
    {
        TaxBranch taxBranch;

        select firstonly taxBranch
            where taxBranch.Code == _code;

        return taxBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxBranch</c> table.
    /// </summary>
    /// <param name="_locationId">
    ///    The field LogisticsLocation of the <c>TaxBranch</c> record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxBranch</c> table.
    /// </returns>
    public static TaxBranch findByLocationId(LogisticsLocationRecId  _locationId = 0)
    {
        TaxBranch taxBranch;

        select firstonly taxBranch
            where taxBranch.LogisticsLocation == _locationId;

        return taxBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeadOffice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the specified record in the <c>TaxBranch</c> table.
    /// </summary>
    /// <returns>
    ///    A record in the <c>TaxBranch</c> table.
    /// </returns>
    public static TaxBranch getHeadOffice()
    {
        TaxBranch taxBranch;

        select firstonly taxBranch
            where taxBranch.HeadOffice == NoYes::Yes;

        return  taxBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportTaxBranchStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the string of tax branch information that will be shown in reports
    /// based on the sepecified tax branch code.
    /// </summary>
    /// <param name="_taxBranchCode">
    /// The tax branch code.
    /// </param>
    /// <returns>
    /// the tax branch information that will be shown in reports.
    /// </returns>
    public static str getReportTaxBranchStr(TaxBranchCode _taxBranchCode)
    {
        str         ret;

        if (_taxBranchCode)
        {
            ret = TaxBranch::findByCode(_taxBranchCode).Name;
        }

        if (ret == '')
        {
            ret = TaxBranch::getHeadOffice().Name;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>haveMoreTaxBranches</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxBranch</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The Record of the <c>TaxBranch</c> record to find.
    /// </param>
    /// <returns>
    ///    True if the <c>TaxBranch</c> only have one record, otherwise false.
    /// </returns>
    public static boolean haveMoreTaxBranches(TaxBranchRefRecId _recId)
    {
        TaxBranch       taxBranch;
        boolean         ret = true;

        select firstonly RecId from taxBranch
            where taxBranch.RecId != _recId;

        if (!taxBranch.RecId)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        DimensionValueRenameV2 rename = DimensionValueRenameV2::construct(this, this.orig());
        rename.syncRenamedValuePreSuper();

        super();

        rename.syncRenamedValuePostSuper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TaxThailandGovCertification</ConfigurationKey>
	<CountryRegionCodes>ID,TH</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4082525</DeveloperDocumentation>
	<Label>@SYS4082514</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<DataSharingType>Single</DataSharingType>
	<Modules>Tax</Modules>
	<ReplacementKey>TaxBranchCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HeadOffice</Name>
			<Label>@SYS4082551</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HeadOffice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LogisticsLocation</Name>
			<Label>@SYS4082526</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LogisticsLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBranchCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HeadOffice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBranchHeadOfficeSelected</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsLocation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxBranchCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HeadOfficeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HeadOffice</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsLocation</Name>
					<Field>LogisticsLocation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>