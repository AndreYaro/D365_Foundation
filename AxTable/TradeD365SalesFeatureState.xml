<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeD365SalesFeatureState</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TradeD365SalesFeatureState extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateFeatureStates</Name>
				<Source><![CDATA[
    public static void updateFeatureStates(SalesParameters _salesParameters)
    {
        TradeD365SalesFeatureState::updateFeatureState(TradeD365SalesFeatureStateType::SalesQuotationD365SalesFeature, _salesParameters, fieldNum(SalesParameters, IsD365SalesQuotationLifecycleEnabled));
        TradeD365SalesFeatureState::updateFeatureState(TradeD365SalesFeatureStateType::SalesD365SalesPriceMasterFeature, _salesParameters, fieldNum(SalesParameters, IsD365SalesPriceMasterEnabled));
        TradeD365SalesFeatureState::updateFeatureState(TradeD365SalesFeatureStateType::SalesD365AutoSyncLineDataToSalesFeature, _salesParameters, fieldNum(SalesParameters, IsD365SalesAutoSyncLineDataToSalesEnabled));
        TradeD365SalesFeatureState::updateFeatureState(TradeD365SalesFeatureStateType::SalesD365AutoSyncTotalsToSalesFeature, _salesParameters, fieldNum(SalesParameters, IsD365SalesAutoSyncTotalsToSalesEnabled));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFeatureState</Name>
				<Source><![CDATA[
    private static void updateFeatureState(TradeD365SalesFeatureStateType _featureStateType, SalesParameters _salesParameters, FieldId _featureFieldId)
    {
        ttsbegin;

        FeatureName name = identifierstr(Dynamics.AX.Application) + '.' + enum2Symbol(enumNum(TradeD365SalesFeatureStateType), _featureStateType);

        TradeD365SalesFeatureState featureState = TradeD365SalesFeatureState::find(name, true);

        boolean isEnabled = _salesParameters.(_featureFieldId);

        if (!featureState ||
            featureState.IsEnabled != isEnabled)
        {
            featureState.Name = name;
            featureState.IsEnabled = isEnabled ? isEnabled : TradeD365SalesFeatureState::isEnabledInAnyCompany(_featureFieldId);
            featureState.write();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledInAnyCompany</Name>
				<Source><![CDATA[
    private static boolean isEnabledInAnyCompany(FieldId _featureFieldId)
    {
        SalesParameters salesParameters;

        select crosscompany RecId from salesParameters where salesParameters.(_featureFieldId) == NoYes::Yes;

        return salesParameters.Recid; 
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TradeD365SalesFeatureState find(FeatureName _name, boolean _forUpdate = false)
    {
        TradeD365SalesFeatureState tradeD365SalesFeatureState;

        if (_name)
        {
            if (_forUpdate)
            {
                tradeD365SalesFeatureState.selectForUpdate(_forUpdate);
            }

            select firstonly tradeD365SalesFeatureState
                where tradeD365SalesFeatureState.Name == _name;
        }

        return tradeD365SalesFeatureState;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<DeveloperDocumentation>@SalesAndMarketing:TradeFeatureManagementStateD365SalesDevDoc</DeveloperDocumentation>
	<Label>@SalesAndMarketing:TradeFeatureManagementStateD365Sales</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Name</TitleField1>
	<TitleField2>IsEnabled</TitleField2>
	<Visible>No</Visible>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>SalesOrder</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SystemTable>Yes</SystemTable>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FeatureName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEnabled</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FeatureIsEnabledV0</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>