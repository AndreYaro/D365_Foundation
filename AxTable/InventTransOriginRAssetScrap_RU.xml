<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginRAssetScrap_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginRAssetScrap_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOriginRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void deleteOriginRelationship(InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginRAssetScrap_RU  inventTransOriginRAssetScrap;

        ttsbegin;

        delete_from inventTransOriginRAssetScrap
            where inventTransOriginRAssetScrap.InventTransOrigin == _inventTransOriginId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_rAssetScrap">
    /// The ID of the <c>RAssetScrap</c> table. It is the primary key on the <c>RAssetScrap</c> table.
    /// </param>
    public static void deleteOwnerRelationship(RefRecId _rAssetScrap)
    {
        InventTransOriginRAssetScrap_RU  inventTransOriginRAssetScrap;

        ttsbegin;

        delete_from inventTransOriginRAssetScrap
            where inventTransOriginRAssetScrap.rAssetScrap     == _rAssetScrap;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ID of the inventory transactions originator for the fixed assets remainders.
    /// </summary>
    /// <param name="_rAssetScrap">
    /// The ID of the <c>RAssetScrap</c> table. It is the primary key on the <c>RAssetScrap</c> table.
    /// </param>
    /// <returns>
    /// The ID of the inventory transactions originator.
    /// </returns>
    public static InventTransOriginId findInventTransOriginId(RefRecId _rAssetScrap)
    {
        InventTransOriginRAssetScrap_RU  inventTransOriginRAssetScrap;

        select firstonly InventTransOrigin from inventTransOriginRAssetScrap
            where inventTransOriginRAssetScrap.rAssetScrap == _rAssetScrap;

        return inventTransOriginRAssetScrap.InventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rassetScrap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the fixed assets remainders related to the ID of the inventory transactions originator.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the buffer should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RassetScrap</c> table if exists; otherwise an empty record..
    /// </returns>
    /// <remarks>
    /// Retrieves an empty buffer if no related record exists.
    /// </remarks>
    public static RAssetScrap rassetScrap(InventTransOriginId _inventTransOriginId,
                                                 boolean             _forUpdate = false)
    {
        RAssetScrap                     rAssetScrap;
        InventTransOriginRAssetScrap_RU inventTransOriginRAssetScrap;

        rAssetScrap.selectForUpdate(_forUpdate);

        select firstonly rAssetScrap
            exists join inventTransOriginRAssetScrap
            where inventTransOriginRAssetScrap.rAssetScrap        == rAssetScrap.RecId
               && inventTransOriginRAssetScrap.InventTransOrigin  == _inventTransOriginId;

        return rAssetScrap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_rAssetScrap">
    /// The ID of the <c>RAssetScrap</c> table. It is the primary key on the <c>RAssetScrap</c> table.
    /// </param>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void writeOriginOwnerRelationship(RefRecId _rAssetScrap, InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginRAssetScrap_RU  inventTransOriginRAssetScrap;

        ttsbegin;

        select forupdate inventTransOriginRAssetScrap
            where inventTransOriginRAssetScrap.rAssetScrap == _rAssetScrap;

        if (inventTransOriginRAssetScrap.rAssetScrap == _rAssetScrap
         || inventTransOriginRAssetScrap.InventTransOrigin   != _inventTransOriginId)
        {
            inventTransOriginRAssetScrap.rAssetScrap          = _rAssetScrap;
            inventTransOriginRAssetScrap.InventTransOrigin    = _inventTransOriginId;

            inventTransOriginRAssetScrap.write();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS115978</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS4000727</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventTransOrigin</TitleField1>
	<TitleField2>RAssetScrap</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RAssetScrapIdx</ClusteredIndex>
	<Modules>RAsset</Modules>
	<ReplacementKey>RAssetScrapIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RAssetScrap</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RAssetScrap</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RAssetScrap</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RAssetScrap</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RAssetScrapIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RAssetScrap</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOriginRAssetScrap_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetScrap</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>RAssetScrap</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetScrap</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOriginRAssetScrap_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RAssetScrap</Name>
					<Field>RAssetScrap</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>