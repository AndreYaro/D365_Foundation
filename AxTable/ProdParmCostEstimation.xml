<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdParmCostEstimation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdParmCostEstimation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the values in the buffer from the specified parameters.
    /// </summary>
    /// <param name="_prodId">
    ///     The ID of the production order.
    /// </param>
    /// <param name="_profit">
    ///     The cost profit setting.
    /// </param>
    /// <param name="_references">
    ///     A <c>NoYes</c> enum value indicating whether to set the <c>references</c> flag.
    /// </param>
    /// <param name="_endJob">
    ///     A <c>NoYes</c> enum value indicating whether to set the <c>endJob</c> flag.
    /// </param>
    public void initFromParameters(
        ProdId        _prodId,
        CostProfitSet _profit      = ProdParameters::find().ProfitSet,
        NoYes         _references  = NoYes::Yes,
        NoYes         _endJob      = NoYes::Yes)
    {
        this.ParmBuffer::initParmId();
        this.initParmDefault();
        this.ProdId          = _prodId;
        this.ProfitSet       = _profit;
        this.References      = _references;
        this.EndJob          = _endJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        this.initValue();

        this.ProfitSet      = ProdParameters::find().ProfitSet;
        this.References     = NoYes::Yes;
        this.EndJob         = NoYes::Yes;
        this.AutoUpdate     = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.JobStatus  = ParmJobStatus::Waiting;
        this.EndJob     = NoYes::Yes;

        if (this.ProdId && ProdTable::find(this.ProdId).status().mustEstimateReferences() && !this.References)
        {
            this.References = NoYes::Yes;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodName</Name>
				<Source><![CDATA[
    public display ProdName prodName()
    {
        return ProdTable::find(this.ProdId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodstatus</Name>
				<Source><![CDATA[
    public display ProdStatus prodstatus()
    {
        return ProdTable::find(this.ProdId).ProdStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodTable</Name>
				<Source><![CDATA[
    public ProdTable prodTable()
    {
        return ProdTable::find(this.ProdId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ProdParmCostEstimation   prodParmCostEstimation;

        if (this.ProdId  != this.orig().ProdId)
        {
            select prodParmCostEstimation
                where prodParmCostEstimation.ParmId    == this.ParmId      &&
                      prodParmCostEstimation.ProdId    == this.ProdId     &&
                      prodParmCostEstimation.RecId     != this.RecId;

            if (prodParmCostEstimation)
            {
                checkFailed(strfmt("@SYS22550",this.ProdId));
            }
        }

        this.EndJob = NoYes::Yes;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    public static void deleteParameters(Num _parmId)
    {
        ProdParmCostEstimation prodParmCostEstimation;

        ttsbegin;

        delete_from prodParmCostEstimation
            where prodParmCostEstimation.ParmId == _parmId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        Num       _parmId,
        ProdId    _prodId)
    {
        return _parmId && _prodId && (select firstonly prodParmCostEstimation
                where prodParmCostEstimation.ParmId  == _parmId   &&
                      prodParmCostEstimation.ProdId  == _prodId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProdParmCostEstimation find(
        Num       _parmId,
        ProdId    _prodId,
        boolean   _forUpdate = false)
    {
        ProdParmCostEstimation prodParmCostEstimation;
        prodParmCostEstimation.selectForUpdate(_forUpdate);

        if (_parmId && _prodId)
        {
            select firstonly prodParmCostEstimation
                where prodParmCostEstimation.ParmId  == _parmId   &&
                      prodParmCostEstimation.ProdId  == _prodId;
        }

        return prodParmCostEstimation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    public static LineNum lastLineNum(ParmId parmId)
    {
        return (select maxof(LineNum) from prodParmCostEstimation
                    where prodParmCostEstimation.ParmId == parmId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodLookUp</Name>
				<Source><![CDATA[
    public static void prodLookUp(Object _lookupCtrl)
    {
        Query               q;
        ProdTable           prodTable;
        ProdStatusType      prodStatus;
        Counter             i = 0;
        int                 value = 0;
        Common              anyBuffer;
        ProdLookup          prodLookup;
        SysDictEnum         sysDictEnum;

        q = new Query();
        q.addDataSource(tablenum(ProdTable));

        sysDictEnum = new SysDictEnum(enumnum(ProdStatus));
        value       = sysDictEnum.firstValue();

        while (i < enumcnt(ProdStatus))
        {
            prodTable.ProdStatus = value;
            prodStatus = prodTable.statusClient();

            if (prodStatus.runCostEstimation(anyBuffer as ProdParmCostEstimation,true))
                prodStatus.queryAddStatus(q);

            value = sysDictEnum.nextValue(value);
            i++;
        }
        prodLookup = new ProdLookup(_lookupCtrl,q);
        prodLookup.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@SYS124163</DeveloperDocumentation>
	<Label>@SYS16377</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>ProdId</TitleField1>
	<TitleField2>ProfitSet</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>NumProdNumIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>NumProdNumIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndJob</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoUpdate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultGroup</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>References</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Estimation</Name>
			<Label>@SYS16377</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AutoUpdate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefProduction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndJob</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>References</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS2186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>References</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndJob</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoUpdate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProdAutoUpdate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EndJob</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProdEndJob</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExecutedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DateTimeExecuted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>ParmJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProdParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProdId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProfitSet</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>CostProfitSet</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>References</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProdUpdateRef</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RefProduction</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS15217</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumLineNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NumProdNumIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProdId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ParmBuffer</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Linenum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>ProdId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobStatus</MapField>
					<MapFieldTo>JobStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDateTime</MapField>
					<MapFieldTo>ExecutedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>ProdParmUpdate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdParmUpdate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdId</Name>
					<Field>ProdId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>