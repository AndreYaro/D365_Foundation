<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSMileageEngine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSMileageEngine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findNumberOfDetailFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the total number of detail fields of the engine record.
    /// </summary>
    /// <returns>
    /// The total number of detail fields of the engine record.
    /// </returns>
    int findNumberOfDetailFields()
    {
        TMSMileageField         mileageField;

        select firstOnly Sequence
            from  mileageField
            order by mileageField.Sequence desc
            where mileageField.MileageEngineCode == this.MileageEngineCode;

        return mileageField.Sequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if ((select count(RecId) from TMSMileageEngine
                where TMSMileageEngine.Default == NoYes::Yes &&
                    TMSMileageEngine.MileageEngineCode != this.MileageEngineCode).RecId > 0 &&
             this.Default == NoYes::Yes)
        {
            ret = checkFailed("@TRX664");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSMileageEngine</c> record exists.
    /// </summary>
    /// <param name="_tmsMileageEngineCode">
    /// Mileage engine code of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(TMSMileageEngineCode _tmsMileageEngineCode)
    {
        return (_tmsMileageEngineCode) &&
               (select firstonly TMSMileageEngine
                    where tmsMileageEngine.MileageEngineCode == _tmsMileageEngineCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSMileageEngine</c> record with given parameters.
    /// </summary>
    /// <param name="_tmsMileageEngineCode">
    /// Mileage engine code of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSMileageEngine find(TMSMileageEngineCode _tmsMileageEngineCode,
                                        boolean              _forupdate = false)
    {
        TMSMileageEngine    tmsMileageEngine;

        if (_tmsMileageEngineCode)
        {
            tmsMileageEngine.selectForUpdate(_forupdate);

            select firstonly tmsMileageEngine
                where tmsMileageEngine.MileageEngineCode == _tmsMileageEngineCode;
        }

        return tmsMileageEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the default mileage engine.
    /// </summary>
    /// <param name = "_forUpdate">Determines whether the record is selected for update.</param>
    /// <returns>A record in <c>TMSMileageEngine</c> table; otherwise an empty record.</returns>
    public static TMSMileageEngine findDefault(boolean _forUpdate = false)
    {
        TMSMileageEngine    tmsMileageEngine;

        tmsMileageEngine.selectForUpdate(_forupdate);

        select firstonly tmsMileageEngine
            where tmsMileageEngine.Default == NoYes::Yes;

        return tmsMileageEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1934</DeveloperDocumentation>
	<FormRef>TMSMileageEngine</FormRef>
	<Label>@TRX232</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>MileageEngineCode</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TMSMileageEngineCodeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>TMSMileageEngineCodeIdx</PrimaryIndex>
	<ReplacementKey>TMSMileageEngineCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EngineAssembly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EngineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Default</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EngineAssembly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EngineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Default</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Default</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDefault</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EngineAssembly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSEngineAssembly</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EngineType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSEngineType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MileageEngineCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSMileageEngineCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TMSMileageEngineCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MileageEngineCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>