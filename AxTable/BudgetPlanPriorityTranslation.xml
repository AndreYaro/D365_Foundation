<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanPriorityTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanPriorityTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a <c>BudgetPlanPriorityTranslation</c> record.
    /// </summary>
    /// <param name="_allowSystemLanguageChange">
    /// A Boolean value that indicates whether to delete the record when the language ID is equal to the
    /// system language ID.
    /// </param>
    public void delete(boolean _allowSystemLanguageChange = false)
    {
        if (_allowSystemLanguageChange ||
            this.Name != BudgetPlanPriority::find(this.BudgetPlanPriority).Name)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a <c>BudgetPlanPriorityTranslation</c> record.
    /// </summary>
    /// <param name="_allowSystemLanguageChange">
    /// A Boolean value that indicates whether to insert the record when the language ID is equal to the
    /// system language ID.
    /// </param>
    public void insert(boolean _allowSystemLanguageChange = false)
    {
        if (this.validateWrite(_allowSystemLanguageChange))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets a default <c>LanguageId</c> value.
    /// </summary>
    public void setDefaultLanguage()
    {
        this.LanguageId = SystemParameters::getSystemLanguageId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a <c>BudgetPlanPriorityTranslation</c> record.
    /// </summary>
    /// <param name="_allowSystemLanguageChange">
    /// A Boolean value that indicates whether to update the record when the language ID is equal to the
    /// system language ID.
    /// </param>
    public void update(boolean _allowSystemLanguageChange = false)
    {
        if (this.validateWrite(_allowSystemLanguageChange))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean isValid = super(_fieldIdToCheck);

        if (isValid)
        {
            if (this.LanguageId == SystemParameters::getSystemLanguageId())
            {
                isValid = checkFailed("@GLS150186");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the name of a <c>BudgetPlanPriority</c> record is not being used.
    /// </summary>
    /// <param name="_allowSystemLanguageChange">
    /// A Boolean value that indicates whether to write the record when the language ID is equal to the
    /// system language ID.
    /// </param>
    /// <returns>
    /// true if validation passes; Otherwise, false .
    /// </returns>
    public boolean validateWrite(boolean _allowSystemLanguageChange = false)
    {
        BudgetPlanPriority budgetPlanPriority;
        boolean            isValid;

        isValid = super();

        if (isValid)
        {
            if (!_allowSystemLanguageChange &&
                this.LanguageId == SystemParameters::getSystemLanguageId())
            {
                isValid = checkFailed("@GLS150186");
            }
            else
            {
                // Ensure the budget plan priority name isn't already in use
                select firstonly RecId from budgetPlanPriority
                    where budgetPlanPriority.Name == this.Name &&
                        budgetPlanPriority.RecId != this.BudgetPlanPriority;

                if (budgetPlanPriority)
                {
                    return checkFailed("@GLS150059");
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record ID exists in <c>BudgetPlanPriorityTranslation</c> table and shows an infolog message if record does not exist.
    /// </summary>
    /// <param name="_budgetPlanPriorityTranslationRecId">
    /// The value of the <c>BudgetPlanPriorityTranslation</c> record ID to check.
    /// </param>
    /// <returns>
    /// true if the record ID exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(BudgetPlanPriorityTranslationRecId _budgetPlanPriorityTranslationRecId)
    {
        boolean isExisting = true;

        if (!BudgetPlanPriorityTranslation::exist(_budgetPlanPriorityTranslationRecId))
        {
            isExisting = checkFailed(strfmt(BudgetPlanPriorityTranslation::txtNotExist(), tableId2Name(tablenum(BudgetPlanPriorityTranslation))));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates a budget plan priority translation record.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The ID of the <c>BudgetPlanPriority</c> record.
    /// </param>
    /// <param name="_name">
    /// The specified budget plan priority name value.
    /// </param>
    /// <param name="_description">
    /// The specified budget plan priority description value.
    /// </param>
    /// <param name="_languageId">
    /// The specified <c>LanguageId</c> value.
    /// </param>
    public static void createOrUpdateTranslation(
        BudgetPlanPriorityRecId       _budgetPlanPriorityRecId,
        Name                          _name,
        BudgetPlanPriorityDescription _description = '',
        LanguageId                    _languageId = '')
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;
        LanguageId                    languageId = _languageId;

        if (!_languageId)
        {
            languageId = SystemParameters::systemLanguageId();
        }

        // If system language found then create or update BudgetPlanPriority
        if (languageId)
        {
            ttsbegin;

            budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::
                findByBudgetPlanPriorityLanguage(_budgetPlanPriorityRecId, languageId, true);

            if (budgetPlanPriorityTranslation.RecId)
            {
                budgetPlanPriorityTranslation.Name        = _name;
                budgetPlanPriorityTranslation.Description = _description;
                budgetPlanPriorityTranslation.update(true);
            }
            else
            {
                budgetPlanPriorityTranslation.BudgetPlanPriority = _budgetPlanPriorityRecId;
                budgetPlanPriorityTranslation.Name               = _name;
                budgetPlanPriorityTranslation.Description        = _description;
                budgetPlanPriorityTranslation.LanguageId         = languageId;
                budgetPlanPriorityTranslation.insert(true);
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteForBudgetPlanPriority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all the <c>BudgetPlanPriorityTranslation</c> records that are associated to a
    /// <c>BudgetPlanPriority</c> record.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The record ID of a <c>BudgetPlanPriority</c> record.
    /// </param>
    public static void deleteForBudgetPlanPriority(BudgetPlanPriorityRecId _budgetPlanPriorityRecId)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        budgetPlanPriorityTranslation.skipDeleteMethod(true);
        budgetPlanPriorityTranslation.skipDeleteActions(true);

        delete_from budgetPlanPriorityTranslation
            where budgetPlanPriorityTranslation.BudgetPlanPriority == _budgetPlanPriorityRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record ID exists in the <c>BudgetPlanPriorityTranslation</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityTranslationRecId">
    /// The value of the <c>BudgetPlanPriorityTranslation</c> record ID to check.
    /// </param>
    /// <returns>
    /// true if the record ID exists; otherwise, false .
    /// </returns>
    public static boolean exist(BudgetPlanPriorityTranslationRecId _budgetPlanPriorityTranslationRecId)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        return _budgetPlanPriorityTranslationRecId && (select firstonly RecId from budgetPlanPriorityTranslation
                    where budgetPlanPriorityTranslation.RecId == _budgetPlanPriorityTranslationRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanPriorityTranslation</c> table that is based on a specified
    /// record ID value.
    /// </summary>
    /// <param name="_budgetPlanPriorityTranslationRecId">
    /// The value of the record ID to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates the concurrency settings to use on the table; optional.
    /// </param>
    /// <returns>
    /// A <c>BudgetPlanPriorityTranslation</c> record.
    /// </returns>
    public static BudgetPlanPriorityTranslation find(
        BudgetPlanPriorityTranslationRecId _budgetPlanPriorityTranslationRecId,
        boolean                            _forUpdate = false,
        ConcurrencyModel                   _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        if (_budgetPlanPriorityTranslationRecId)
        {
            budgetPlanPriorityTranslation.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanPriorityTranslation.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanPriorityTranslation
                where budgetPlanPriorityTranslation.RecId == _budgetPlanPriorityTranslationRecId;
        }

        return budgetPlanPriorityTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByBudgetPlanPriorityLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanPriorityTranslation</c> table that is based on the specified
    /// <c>BudgetPlanPriority</c> and <c>LanguageId</c> values.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The value of the <c>BudgetPlanPriority</c> field to find.
    /// </param>
    /// <param name="_languageId">
    /// The value of the <c>LanguageId</c> field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates the concurrency settings to use on the table; optional.
    /// </param>
    /// <returns>
    /// A <c>BudgetPlanPriorityTranslation</c> record.
    /// </returns>
    public static BudgetPlanPriorityTranslation findByBudgetPlanPriorityLanguage(
        BudgetPlanPriorityRecId _budgetPlanPriorityRecId,
        LanguageIdAll           _languageId,
        boolean                 _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        if (_budgetPlanPriorityRecId && _languageId)
        {
            budgetPlanPriorityTranslation.selectForUpdate(_forUpdate );

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanPriorityTranslation.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanPriorityTranslation
                where BudgetPlanPriorityTranslation.BudgetPlanPriority == _budgetPlanPriorityRecId &&
                        BudgetPlanPriorityTranslation.LanguageId       == _languageId;
        }

        return budgetPlanPriorityTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLocalizedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>BudgetPlanPriorityTranslation</c> record for a budget plan name.
    /// </summary>
    /// <param name="_budgetPlanPriorityName">
    /// The value of the <c>Name</c> field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>BudgetPlanPriorityTranslation</c> record.
    /// </returns>
    public static BudgetPlanPriorityTranslation findByLocalizedName(
        BudgetPlanPriorityName _budgetPlanPriorityName,
        boolean                _forUpdate = false)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;
        BudgetPlanPriority            budgetPlanPriority;

        budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::findByNameLanguage(_budgetPlanPriorityName, _forUpdate);

        if (!budgetPlanPriorityTranslation)
        {
            budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::findByNameLanguage(
                                                        _budgetPlanPriorityName,
                                                        _forUpdate,
                                                        SystemParameters::getSystemLanguageId());
        }

        // Fall back to the original name.
        if (!budgetPlanPriorityTranslation)
        {
            budgetPlanPriority = BudgetPlanPriority::findByName(_budgetPlanPriorityName);

            budgetPlanPriorityTranslation.Name = budgetPlanPriority.Name;
            budgetPlanPriorityTranslation.BudgetPlanPriority = budgetPlanPriority.RecId;
            budgetPlanPriorityTranslation.selectForUpdate(_forUpdate);
        }

        return budgetPlanPriorityTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNameLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>BudgetPlanPriorityTranslation</c> record for a budget plan name and language.
    /// </summary>
    /// <param name="_budgetPlanPriorityName">
    /// The value of the <c>Name</c> field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_languageId">
    /// The language of the <c>BudgetPlanPriorityTranslation</c> record; optional.
    /// </param>
    /// <returns>
    /// A <c>BudgetPlanPriorityTranslation</c> record.
    /// </returns>
    public static BudgetPlanPriorityTranslation findByNameLanguage(
            BudgetPlanPriorityName _budgetPlanPriorityName,
            boolean                _forUpdate = false,
            LanguageId             _languageId = currentUserLanguage())
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        if (_budgetPlanPriorityName)
        {
            budgetPlanPriorityTranslation.selectForUpdate(_forUpdate);

            select firstOnly Name, BudgetPlanPriority from budgetPlanPriorityTranslation
                where budgetPlanPriorityTranslation.Name == _budgetPlanPriorityName
                &&    budgetPlanPriorityTranslation.LanguageId == _languageId;
        }

        return budgetPlanPriorityTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriorityTranslationByLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanPriorityTranslation</c> table that is based on the specified
    /// <c>BudgetPlanPriority</c> and <c>LanguageId</c> values.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The ID of a budget plan priority that the name is retrieved.
    /// </param>
    /// <param name="_languageId">
    /// The ID of a language that the name is retrieved.
    /// </param>
    /// <param name="_translationFieldId">
    /// The field ID of localized field that is retrieved.
    /// </param>
    /// <returns>
    /// A <c>BudgetPlanPriorityTranslation</c> record.
    /// </returns>
    public static BudgetPlanPriorityTranslation findPriorityTranslationByLanguage(
        BudgetPlanPriorityRecId _budgetPlanPriorityRecId,
        LanguageId              _languageId,
        fieldId                 _translationFieldId)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;
        LanguageId                    systemLanguageId;

        if (_budgetPlanPriorityRecId)
        {
            budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                _budgetPlanPriorityRecId,
                _languageId);

            if (!budgetPlanPriorityTranslation.RecId || !budgetPlanPriorityTranslation.(_translationFieldId))
            {
                // no translation record or no value provided - fallback to system language
                systemLanguageId = SystemParameters::getSystemLanguageId();

                if (systemLanguageId != _languageId)
                {
                    budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                        _budgetPlanPriorityRecId,
                        systemLanguageId);
                }
            }
        }

        return budgetPlanPriorityTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the localized <c>Description</c> field of the <c>BudgetPlanPriorityTranslation</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The ID of a <c>BudgetPlanPriority</c> record for which a description is retrieved.
    /// </param>
    /// <returns>
    /// The localized description of a budget plan priority.
    /// </returns>
    public static BudgetPlanPriorityName getLocalizedDescription(BudgetPlanPriorityRecId _budgetPlanPriorityRecId)
    {
        BudgetPlanPriorityDescription budgetPlanPriorityDescription;

        budgetPlanPriorityDescription = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                                                _budgetPlanPriorityRecId,
                                                currentUserLanguage()
                                                ).Description;
        if (!budgetPlanPriorityDescription)
        {
            budgetPlanPriorityDescription = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                                                    _budgetPlanPriorityRecId,
                                                    SystemParameters::getSystemLanguageId()
                                                    ).Description;
        }

        // Fall back to Description if no localized description found
        if (!budgetPlanPriorityDescription)
        {
            budgetPlanPriorityDescription = BudgetPlanPriority::find(_budgetPlanPriorityRecId).Description;
        }

        return budgetPlanPriorityDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the localized <c>Name</c> field of the <c>BudgetPlanPriorityTranslation</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The ID of a budget plan priority that the name is retrieved.
    /// </param>
    /// <returns>
    /// The localized name of a budget plan priority.
    /// </returns>
    public static BudgetPlanPriorityName getLocalizedName(BudgetPlanPriorityRecId _budgetPlanPriorityRecId)
    {
        BudgetPlanPriorityName budgetPlanPriorityName;

        budgetPlanPriorityName = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                                                _budgetPlanPriorityRecId,
                                                currentUserLanguage()
                                                ).Name;
        if (!budgetPlanPriorityName)
        {
            budgetPlanPriorityName = BudgetPlanPriorityTranslation::findByBudgetPlanPriorityLanguage(
                                                    _budgetPlanPriorityRecId,
                                                    SystemParameters::getSystemLanguageId()
                                                    ).Name;
        }

        // Fall back to Name if no localized name found
        if (!budgetPlanPriorityName)
        {
            budgetPlanPriorityName = BudgetPlanPriority::find(_budgetPlanPriorityRecId).Name;
        }

        return budgetPlanPriorityName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Name</c> field of the <c>BudgetPlanPriorityTranslation</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The ID of a budget plan priority that the name is retrieved.
    /// </param>
    /// <param name="_languageId">
    /// The ID of a language that the name is retrieved.
    /// </param>
    /// <returns>
    /// The name of a budget plan priority.
    /// </returns>
    public static Name getName(
        BudgetPlanPriorityRecId _budgetPlanPriorityRecId,
        LanguageId              _languageId)
    {
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        budgetPlanPriorityTranslation = BudgetPlanPriorityTranslation::findPriorityTranslationByLanguage(
            _budgetPlanPriorityRecId,
            _languageId,
            fieldNum(BudgetPlanPriorityTranslation,
            Name)
            );

        return budgetPlanPriorityTranslation.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a default language ID filter for a specified query.
    /// </summary>
    /// <param name="_query">
    /// The query that is extended to include the default language ID filter.
    /// </param>
    /// <param name="_dataSourceName">
    /// The name of the specified data source for which to add the range.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// The query does not contain the specified data source or the <c>BudgetPlanPriority</c> data source.
    /// </exception>
    public static void queryAddDefaultLanguage(Query _query, str _dataSourceName = '')
    {
        QueryBuildDataSource qbdsBudgetPlanPriorityTranslation;

        if (_dataSourceName)
        {
            qbdsBudgetPlanPriorityTranslation = _query.dataSourceName(_dataSourceName);
        }
        else
        {
            qbdsBudgetPlanPriorityTranslation = _query.dataSourceTable(tableNum(BudgetPlanPriorityTranslation));
        }

        if (!qbdsBudgetPlanPriorityTranslation)
        {
            throw error(Error::wrongUseOfFunction(tableStaticMethodStr(BudgetPlanPriorityTranslation, queryAddDefaultLanguage)));
        }

        qbdsBudgetPlanPriorityTranslation.addRange(fieldNum(BudgetPlanPriorityTranslation, LanguageId))
            .value(queryValue(SystemParameters::getSystemLanguageId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddUserLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a user language ID filter for a specified query.
    /// </summary>
    /// <param name="_query">
    /// The query that is extended to include the company language ID filter.
    /// </param>
    /// <param name="_dataSourceName">
    /// The name of the specified data source for which to add the range.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// The query does not contain the specified data source or the <c>BudgetPlanPriority</c> data source.
    /// </exception>
    public static void queryAddUserLanguage(Query _query, str _dataSourceName = '')
    {
        QueryBuildDataSource qbdsBudgetPlanPriorityTranslation;

        if (_dataSourceName)
        {
            qbdsBudgetPlanPriorityTranslation = _query.dataSourceName(_dataSourceName);
        }
        else
        {
            qbdsBudgetPlanPriorityTranslation = _query.dataSourceTable(tableNum(BudgetPlanPriorityTranslation));
        }

        if (!qbdsBudgetPlanPriorityTranslation)
        {
            throw error(Error::wrongUseOfFunction(tableStaticMethodStr(BudgetPlanPriorityTranslation, queryAddDefaultLanguage)));
        }

        qbdsBudgetPlanPriorityTranslation.addRange(fieldNum(BudgetPlanPriorityTranslation, LanguageId))
            .value(queryValue(currentUserLanguage()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS150117</DeveloperDocumentation>
	<Label>@GLS150115</Label>
	<SingularLabel>@GLS150116</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>BudgetPlanPriority</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>BudgetPlanPriorityTranslationIdx</ClusteredIndex>
	<Modules>Budget</Modules>
	<ReplacementKey>BudgetPlanPriorityTranslationIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS312922</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanPriorityRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanPriorityDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanPriorityName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetPlanPriorityTranslationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetPlanPriority</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameLanguageIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanPriority</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>BudgetPlanPriority</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanPriority</Name>
					<Field>BudgetPlanPriority</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>