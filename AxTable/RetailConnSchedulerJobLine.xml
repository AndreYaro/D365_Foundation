<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSchedulerJobLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnSchedulerJobLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    [SysObsolete('All uses of RetailCDXMetadataSyncTombstone are obsolete.', false, 04\01\2022)]
    public void delete()
    {
        RetailCDXMetadataSyncTombstone tombstone;

        ttsBegin;

        tombstone.initValue();
        tombstone.RefTableID = tableNum(RetailConnScheduleJobMapping);
        tombstone.RefRecID = this.RecId;
        tombstone.JobID = this.jobId;
        tombstone.insert();

        ttsCommit;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Enabled = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jobDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the value in the <c>Description</c> field of the <c>RetailConnSchedulerJobTable</c> table.
    /// </summary>
    /// <returns>
    /// The description value.
    /// </returns>
    /// <remarks>
    /// This method finds the record in the <c>RetailConnSchedulerJobTable</c> table for the specified
    /// parameter and returns the description in the <c>Description</c> field.
    /// </remarks>
    display Description jobDescription()
    {
        return RetailConnSchedulerJobTable::find(this.JobId).translatedDescription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>LineNum</c> field of the <c>RetailConnSchedulerJobLine</c> table with the value,
    /// incrementing the maximum line number by 1.
    /// </summary>
    void nextLineNum()
    {
        this.LineNum = (select maxof(LineNum) from retailConnSchedulerJobLine
                            where retailConnSchedulerJobLine.JobId == this.JobId).LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subjobForReferenceOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method displays the values for Referency Only field. Here the method finds the record in <c>RetailConnSchedulerSubjobTable</c> table for the
    /// specified parameter and returnsRetailConnSchedulerSubjobTable.ForReferenceOnly.
    /// </summary>
    /// <returns>
    /// ReferenceOnly value for the subjob from RetailConnSchedulerSubjobTable.ForReferenceOnly field.
    /// </returns>
    display RetailCDXSubJobForReferenceOnly subjobForReferenceOnly()
    {
        RetailConnSchedulerSubjobTable subjob = RetailConnSchedulerSubjobTable::find(this.SubJobId);
        return subjob.ForReferenceOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subJobName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the values in the <c>Name</c> field of the <c>RetailConnSchedulerSubjobTable</c> table.
    /// </summary>
    /// <returns>
    /// The name value.
    /// </returns>
    /// <remarks>
    /// This method finds the record in the <c>RetailConnSchedulerSubjobTable</c> table for the specified
    /// parameter and returns the name in the <c>Name</c> field.
    /// </remarks>
    display Description subJobName()
    {
        return RetailConnSchedulerSubjobTable::find(this.SubJobId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subjobReplicationMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the value in the <c>ReplicationMethod</c> field of the
    /// <c>RetailConnSchedulerSubjobTable</c> table.
    /// </summary>
    /// <returns>
    /// The value in the <c>ReplicationMethod</c> field.
    /// </returns>
    /// <remarks>
    /// This method finds the record in the <c>RetailConnSchedulerSubjobTable</c> table for the specified
    /// parameter and returns the description in the <c>ReplicationMethod</c> field.
    /// </remarks>
    display RetailConnNormalByActions subjobReplicationMethod()
    {
        return RetailConnSchedulerSubjobTable::find(this.SubJobId).ReplicationMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subjobTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method displays the values in the <c>FromTableName</c> field. Here the method finds the record in <c>RetailConnSchedulerSubjobTable</c> table for the
    /// specified parameter and returns the description in the RetailConnSchedulerSubjobTable.FromTableName field.
    /// </summary>
    /// <returns>
    /// The description in the RetailConnSchedulerSubjobTable.FromTableName field.
    /// </returns>
    display TableName subjobTableName()
    {
        return RetailConnSchedulerSubjobTable::find(this.SubJobId).AXTableName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateDRMSchedulerJobLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>RetailConnSchedulerJobLine</c> table if the records exists for the
    /// specified <c>JobId</c> value.
    /// </summary>
    /// <param name="_jobId">
    /// A job number.
    /// </param>
    /// <param name="_newJobId">
    /// The new job number created in the <c>RetailConnSchedulerJobLine</c> table.
    /// </param>
    public static void duplicateDRMSchedulerJobLine(RetailConnJobId _jobId, RetailConnJobId _newJobId)
    {
        RetailConnSchedulerJobLine     tSchedulerJobLine;
    ;
        if (_jobId && _newJobId)
        {
            //if (RetailConnSchedulerJobTable::find(_newJobId).RecId)
            //    throw error(strfmt("@RET430",_newJobId));

            while select forupdate tSchedulerJobLine
            where tSchedulerJobLine.JobId == _jobId
            {
                tSchedulerJobLine.JobId = _newJobId;
                tSchedulerJobLine.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailConnSchedulerJobLine</c> table by using the specified
    /// values.
    /// </summary>
    /// <param name="_jobId">
    /// The job number of a scheduler job lines record.
    /// </param>
    /// <param name="_subjobId">
    /// The subjob number of a scheduler job lines record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailConnSchedulerJobLine</c> record if found; otherwise, an empty record.
    /// </returns>
    public static RetailConnSchedulerJobLine find(RetailConnJobId _jobId, RetailConnSubJobId _subjobId, boolean _forUpdate = false)
    {
        RetailConnSchedulerJobLine  drmSchedulerJobLine;

        if (_jobId && _subjobId)
        {
            drmSchedulerJobLine.selectForUpdate(_forUpdate);

            select firstonly drmSchedulerJobLine
                index hint jobSubJobIdx
                where drmSchedulerJobLine.JobId == _jobId
                && drmSchedulerJobLine.SubJobId == _subjobId;
        }

        return drmSchedulerJobLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowSkipDataSync</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the allowSkipDataSync code.
    /// </summary>
    /// <param name="_set">
    /// A Boolean value that indicates whether the allowSkip dataSync is set.
    /// </param>
    /// <param name="_allowSkipDataSync">
    /// The new allowSkip dataSync when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The allowSkip dataSync of the record in the <c>RetailConnSchedulerSubjobTable</c> table.
    /// </returns>
    edit RetailCdxAllowSkipDataSync allowSkipDataSync(boolean _set, RetailCdxAllowSkipDataSync _allowSkipDataSync)
    {
        RetailConnSchedulerSubjobTable subjobTable;

        // update the allowSkipDataSync record
        if (_set)
        {
            ttsbegin;
            subjobTable = RetailConnSchedulerSubjobTable::find(this.subJobId, true);
            subjobTable.AllowSkipDataSync = _allowSkipDataSync;
            subjobTable.update();
            ttscommit;
        }
        else
        {
            subjobTable = RetailConnSchedulerSubjobTable::find(this.subJobId);
        }

        return subjobTable.AllowSkipDataSync;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040238</DeveloperDocumentation>
	<Label>@RET49</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>jobId</TitleField1>
	<TitleField2>subJobId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>jobSubJobIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<PrimaryIndex>jobSubJobIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>jobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subJobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>lineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>jobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subJobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>lineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>enabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>jobId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>lineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>subJobId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSubJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>jobSubJobIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>jobId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>subJobId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>subjobIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>subJobId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>jobLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>jobId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>lineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>modifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailConnSchedulerJobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnSchedulerJobTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>jobId</Name>
					<SourceEDT>RetailConnJobId</SourceEDT>
					<Field>jobId</Field>
					<RelatedField>jobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailConnSchedulerSubjobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnSchedulerSubjobTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>subJobId</Name>
					<SourceEDT>RetailConnSubJobId</SourceEDT>
					<Field>subJobId</Field>
					<RelatedField>subJobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>