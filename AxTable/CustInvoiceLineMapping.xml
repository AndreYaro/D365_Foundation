<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceLineMapping</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceLineMapping extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;

        if (!CustInvoiceLineMapping::exist(_recId))
        {
            ret = checkFailed(strfmt(CustInvoiceLineMapping::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCustInvoiceLineMapping</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a relationship between the parent invoice line and the corrected invoice line.
    /// </summary>
    /// <param name="_parentInvoiceLineRecId">
    ///    The record ID of the parent invoice line.
    /// </param>
    /// <param name="_parentInvoiceLineParentRecId">
    ///    The record ID of the parent invoice.
    /// </param>
    /// <param name="_parentInvoiceLineLineNum">
    ///    The line number of the parent invoice line.
    /// </param>
    /// <param name="_custInvoiceLineRecId">
    ///    The record ID of the corrected invoice line.
    /// </param>
    /// <param name="_custInvoiceLineParentRecId">
    ///    The record ID of the corrected invoice.
    /// </param>
    /// <param name="_custInvoiceLineLineNum">
    ///    The line number of the corrected invoice line.
    /// </param>
    public static void createCustInvoiceLineMapping(
                                        RefRecId _parentInvoiceLineRecId,
                                        RefRecId _parentInvoiceLineParentRecId,
                                        LineNum _parentInvoiceLineLineNum,
                                        RefRecId _custInvoiceLineRecId,
                                        RefRecId _custInvoiceLineParentRecId,
                                        LineNum _custInvoiceLineLineNum)
    {
        CustInvoiceLineMapping custInvoiceLineMapping;

        custInvoiceLineMapping.ParentInvoiceLineRecId = _parentInvoiceLineRecId;
        custInvoiceLineMapping.ParentInvoiceLineParentRecId = _parentInvoiceLineParentRecId;
        custInvoiceLineMapping.ParentInvoiceLineLineNum = _parentInvoiceLineLineNum;
        custInvoiceLineMapping.CustInvoiceLineRecId = _custInvoiceLineRecId;
        custInvoiceLineMapping.CustInvoiceLineParentRecId = _custInvoiceLineParentRecId;
        custInvoiceLineMapping.CustInvoiceLineLineNum = _custInvoiceLineLineNum;
        custInvoiceLineMapping.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>CustInvoiceLineMapping</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;

        if (_recId)
        {
            found = (select firstonly RecId from custInvoiceLineMapping
                        where custInvoiceLineMapping.RecId == _recId).RecId != 0;
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CustInvoiceLineMapping</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustInvoiceLineMapping</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceLineMapping find(
        RecId _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceLineMapping custInvoiceLineMapping;

        custInvoiceLineMapping.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceLineMapping.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceLineMapping
            where custInvoiceLineMapping.RecId == _recId;

        return custInvoiceLineMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineIdByParentSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the adjusting or corrected invoice line record ID through the parent invoice line
    ///    <c>SourceDocumentLine</c> record.
    /// </summary>
    /// <param name="_parentSourceDocumentLine">
    ///    The record ID of the parent invoice line.
    /// </param>
    /// <param name="invoiceType">
    ///    The association type of the invoice.
    /// </param>
    /// <param name="parentRecId">
    ///    The record ID of the parent invoice.
    /// </param>
    /// <returns>
    ///    The record ID of the adjusting or corrected invoice line.
    /// </returns>
    static public RefRecId getLineIdByParentSourceDocumentLine(RefRecId _parentSourceDocumentLine, InvoiceAssociationType invoiceType, RefRecId parentRecId)
    {
        CustInvoiceLineMapping custInvoiceLineMapping;
        CustInvoiceLine custInvoiceLine;

        RefRecId custInvoiceLineRecId;
        LineNum parentCustInvoiceLineNum;

        custInvoiceLine = CustInvoiceLine::findBySourceDocumentLine(_parentSourceDocumentLine);
        parentCustInvoiceLineNum = custInvoiceLine.LineNum;

        if (custInvoiceLine && invoiceType == InvoiceAssociationType::CorrectedInvoice)
        {
            select firstonly CustInvoiceLineRecId from custInvoiceLineMapping
                where custInvoiceLineMapping.ParentInvoiceLineLineNum == custInvoiceLine.LineNum &&
                custInvoiceLineMapping.ParentInvoiceLineParentRecId == custInvoiceLine.ParentRecId &&
                custInvoiceLineMapping.ParentInvoiceLineRecId == custInvoiceLine.RecId;

            custInvoiceLineRecId = custInvoiceLineMapping.CustInvoiceLineRecId;
        }
        else if (custInvoiceLine && invoiceType == InvoiceAssociationType::AdjustingInvoice)
        {
            select firstonly RecId from custInvoiceLine
                where custInvoiceLine.LineNum == parentCustInvoiceLineNum &&
                custInvoiceLine.ParentRecId == parentRecId;

            custInvoiceLineRecId = custInvoiceLine.RecId;
        }

        return custInvoiceLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>FreeTextInvoiceCorrection</ConfigurationKey>
	<DeveloperDocumentation>@SYS300618</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ParentInvoiceLineRecId</TitleField1>
	<TitleField2>CustInvoiceLineRecId</TitleField2>
	<Visible>No</Visible>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentInvoiceLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustInvoiceLineLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceLineParentRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceLineIdRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ParentInvoiceLineLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentInvoiceLineParentRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentInvoiceLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceLineIdRefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CustInvoiceLineMapping</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLineRecId</Name>
					<Field>CustInvoiceLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLineLineNum</Name>
					<Field>CustInvoiceLineLineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLineParentRecId</Name>
					<Field>CustInvoiceLineParentRecId</Field>
					<RelatedField>ParentRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ParentRecIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceLineParentRecId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceLineParentRecId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLineParentRecId</Name>
					<SourceEDT>CustInvoiceTableRefRecId</SourceEDT>
					<Field>CustInvoiceLineParentRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ParentInvoiceLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ParentInvoiceLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CustInvoiceLineMapping</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentInvoiceLineRecId</Name>
					<Field>ParentInvoiceLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentInvoiceLineLineNum</Name>
					<Field>ParentInvoiceLineLineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentInvoiceLineParentRecId</Name>
					<Field>ParentInvoiceLineParentRecId</Field>
					<RelatedField>ParentRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ParentRecIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ParentInvoiceLineParentRecId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ParentInvoiceLineParentRecId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentInvoiceLineParentRecId</Name>
					<SourceEDT>CustInvoiceTableRefRecId</SourceEDT>
					<Field>ParentInvoiceLineParentRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>