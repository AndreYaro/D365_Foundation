<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjHierarchyTemp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjHierarchyTemp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByReferenceV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for the ProjHierarchyTemp record with the associated RecId.
    /// </summary>
    /// <param name = "_refRecId">Id of the referenced task record to search with (RefRecId).</param>
    /// <param name = "_forUpdate">Whether the record should be locked for update.</param>
    /// <returns>The associated ProjHierarchyTemp record.</returns>
    public ProjHierarchyTemp findByReferenceV2(
		RefRecId _refRecId,
		boolean _forUpdate = false)
    {
        ProjHierarchyTemp result = this.getNewBuffer();
        result.selectForUpdate(_forUpdate);

		if (_refRecId)
        {
            select firstonly result
				where result.RefRecId == _refRecId;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySortReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for the ProjHierarchyTemp record with the associated SortRecId.
    /// </summary>
    /// <param name = "_refSortRecId">Id of the referenced sort record to search with (RefSortRecId).</param>
    /// <param name = "_forUpdate">Whether the record should be locked for update.</param>
    /// <returns>The associated ProjHierarchyTemp record.</returns>
    public ProjHierarchyTemp findBySortReference(
        RefRecId _refSortRecId,
        boolean _forUpdate = false)
    {
        ProjHierarchyTemp result = this.getNewBuffer();
        result.selectForUpdate(_forUpdate);

        if (_refSortRecId)
        {
            select firstonly result
                where result.RefSortRecId == _refSortRecId;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNodeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for the ProjHierarchyTemp record with the associated NodeId.
    /// </summary>
    /// <param name = "_refNodeId">Id of the node (HierarchyTaskId for ProjPlanVersion) to search with (RefNodeId).</param>
    /// <param name = "_forUpdate">Whether the record should be locked for update.</param>
    /// <returns>The associated ProjHierarchyTemp record.</returns>
    public ProjHierarchyTemp findByNodeId(
        int64 _refNodeId,
        boolean _forUpdate = false)
    {
        ProjHierarchyTemp result = this.getNewBuffer();
        result.selectForUpdate(_forUpdate);

        if (_refNodeId)
        {
            select firstonly result 
                where result.RefNodeId == _refNodeId;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new buffer for the same temp table as the one this is called on.
    /// </summary>
    /// <returns>A new buffer for the same temp table.</returns>
    public ProjHierarchyTemp getNewBuffer()
    {
        ProjHierarchyTemp result;
        result.linkPhysicalTableInstance(this);
        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@ProjPlan:ProjHierarchyTempTableDoc</DeveloperDocumentation>
	<Label>@ProjPlan:ProjHierarchyTempTable</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<ClusteredIndex>RefRecIdIndex</ClusteredIndex>
	<PrimaryIndex>RefRecIdIndex</PrimaryIndex>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Expand</Name>
			<Label>@ProjPlan:Expanded</Label>
			<EnumType>FalseTrue</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Visible</Name>
			<Label>@ProjPlan:Visible</Label>
			<EnumType>FalseTrue</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@ProjPlan:ReferenceRecordId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefSortRecId</Name>
			<Label>@ProjPlan:ReferenceSortingRecordID</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefNodeId</Name>
			<Label>@ProjPlan:ReferenceNodeID</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SelectionGroup</Name>
			<Label>@ProjPlan:SelectedGroupID</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DiffNumDeletedChildren</Name>
			<Label>@ProjPlan:DeletedChildTasks</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@ProjPlan:ReferenceTableID</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefNodeIdIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefNodeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Expand</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>