<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrRequirementWizardFilterTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WrkCtrRequirementWizardFilterTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addRangeToRequirementsQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds ranges to the query
    /// </summary>
    /// <param name="_query">
    /// The query for which to add ranges.
    /// </param>
    public void addRangeToRequirementsQuery(Query _query)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        queryBuildDataSource = SysQuery::findOrCreateDataSource(_query, tablenum(WrkCtrActivityRequirementSet));
        queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityRequirement));
        queryBuildDataSource.joinMode(JoinMode::InnerJoin);
        queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
        queryBuildDataSource.relations(true);

        switch (this.RelationshipType)
        {
            case WrkCtrActivityRequirementType::Capability:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityCapabilityRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrCapability));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(WrkCtrCapability, Name));
                break;
            case WrkCtrActivityRequirementType::Certificate:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityCertificateRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(HcmCertificateType));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(HcmCertificateType, CertificateTypeId));
                break;
            case WrkCtrActivityRequirementType::Course:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityCourseRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(WrkCtrActivityCourseRequirement, hrmCourseId));
                break;
            case WrkCtrActivityRequirementType::PersonTitle:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityPersonTitleRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(HcmTitle));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(HcmTitle, TitleId));
                break;
            case WrkCtrActivityRequirementType::Resource:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityResourceRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(WrkCtrActivityResourceRequirement, WrkCtrId));
                break;
            case WrkCtrActivityRequirementType::ResourceGroup:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityResourceGroupRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrResourceGroup));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(WrkCtrResourceGroup, WrkCtrId));
                break;
            case WrkCtrActivityRequirementType::ResourceType:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivityResourceTypeRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(WrkCtrActivityResourceTypeRequirement, ResourceType));
                break;
            case WrkCtrActivityRequirementType::Skill:
                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(WrkCtrActivitySkillRequirement));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);

                queryBuildDataSource = queryBuildDataSource.addDataSource(tablenum(HcmSkill));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.fetchMode(QueryFetchMode::One2One);
                queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(HcmSkill, SkillId));
                break;
        }

        queryBuildRange.value(this.Filter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes table values
    /// </summary>
    public void initValue()
    {
        super();
        this.RelationshipType = WrkCtrActivityRequirementType::Resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summaryText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets filter description.
    /// </summary>
    /// <returns>
    /// The filter description.
    /// </returns>
    public str summaryText()
    {
        switch (this.RelationshipType)
        {
            case WrkCtrActivityRequirementType::Capability:
                return strfmt("@SYS335760", this.Filter);
            case WrkCtrActivityRequirementType::Certificate:
                return strfmt("@SYS335763", this.Filter);
            case WrkCtrActivityRequirementType::Course:
                return strfmt("@SYS335762", this.Filter);
            case WrkCtrActivityRequirementType::PersonTitle:
                return strfmt("@SYS335764", this.Filter);
            case WrkCtrActivityRequirementType::Resource:
                return strfmt("@SYS335758", this.Filter);
            case WrkCtrActivityRequirementType::ResourceGroup:
                return strfmt("@SYS335759", this.Filter);
            case WrkCtrActivityRequirementType::ResourceType:
                return strfmt("@SYS335757", this.Filter);
            case WrkCtrActivityRequirementType::Skill:
                return strfmt("@SYS335761", this.Filter);
        }

        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS338542</DeveloperDocumentation>
	<Label>@SYS335051</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Filter</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>String255</ExtendedDataType>
			<Label>@SYS11370</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RelationshipType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WrkCtrActivityRequirementType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>