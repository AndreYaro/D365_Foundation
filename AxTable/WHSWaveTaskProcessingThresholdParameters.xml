<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveTaskProcessingThresholdParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveTaskProcessingThresholdParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreateDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the default record for wave task processing threshold parameters.
    /// If the default record does not exists, we create it.
    /// </summary>
    /// <returns>
    /// The default <c>WHSWaveTaskProcessingThresholdParameters</c> record.
    /// </returns>
    public static WHSWaveTaskProcessingThresholdParameters findOrCreateDefault()
    {
        const WHSWaveTaskProcessingThresholdParametersName    Name                                  = 'Default';
        
        WHSWaveTaskProcessingThresholdParameters  waveTaskProcessingThreshold = WHSWaveTaskProcessingThresholdParameters::find(Name);
        if (waveTaskProcessingThreshold.RecId)
        {
            return waveTaskProcessingThreshold;
        }
        
        Counter logCount;

        try
        {
            ttsbegin;

            logCount = infologLine();
            waveTaskProcessingThreshold.WaveTaskProcessingThresholdParametersName = Name;
            waveTaskProcessingThreshold.initDefaults();
            waveTaskProcessingThreshold.insert();

            ttscommit;
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == waveTaskProcessingThreshold.TableId)
            {
                // If we get the duplicate exception for WHSWaveTaskProcessingThresholdParameters somebody else must have inserted the default record.
                // We can then select it and return it without showing an error in infolog.
                infolog.clear(logCount);
                waveTaskProcessingThreshold = WHSWaveTaskProcessingThresholdParameters::find(Name);
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
        }

        return waveTaskProcessingThreshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaults</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the buffer with default values.
    /// </summary>
    [Wrappable(true)]
    internal void initDefaults()
    {
        this.MinimumWaveLoadLines                            = 15;
        this.MinimumForReplenishment                         = 5;
        this.MinimumAllocateWaveGroupedPendingAllocations    = 2;
        this.MinimumWorkThresholdForLabelPrinting            = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSWaveTaskProcessingThresholdParameters find(
        str _name)
    {
        WHSWaveTaskProcessingThresholdParameters waveTaskProcessingThreshold;

        if (_name)
        {
            select firstonly waveTaskProcessingThreshold
                where waveTaskProcessingThreshold.WaveTaskProcessingThresholdParametersName  == _name;
        }

        return waveTaskProcessingThreshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WaveTaskProcessingThresholdParamsDevDoc</DeveloperDocumentation>
	<Label>@WAX:WaveTaskProcessingThresholdParams</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>WaveTaskProcessingThresholdParametersNameIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveTaskProcessingThresholdParametersNameIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumWaveLoadLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMinimumWaveLoadLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveTaskProcessingThresholdParametersName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveTaskProcessingThresholdParametersName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumForReplenishment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMinimumForReplenishment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumAllocateWaveGroupedPendingAllocations</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMinimumAllocateWaveGroupedPendingAllocations</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumWorkThresholdForLabelPrinting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMinimumWorkThresholdForLabelPrinting</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveTaskProcessingThresholdParametersNameIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveTaskProcessingThresholdParametersName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>