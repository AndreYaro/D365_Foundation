<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGroupData</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxGroupData extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        TaxCache::clearScope(TaxCacheScope::IntersectionData);
        TaxCache::clearScope(TaxCacheScope::TaxPerUnitAndGrossDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDataSourceFields</Name>
				<Source><![CDATA[
    public void enableDataSourceFields()
    {
        FormDataObject  formDataObject;

        if (FormDataUtil::isFormDataSource(this))
        {
            formDataObject = FormDataUtil::getFormDataSource(this).object(fieldnum(TaxGroupData, TaxExemptCode));
            formDataObject.allowEdit(this.ExemptTax == NoYes::Yes);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxGroupTaxJurisdiction</Name>
				<Source><![CDATA[
    void initFromTaxGroupTaxJurisdiction(TaxGroupTaxJurisdiction _taxGroupTaxJurisdiction)
    {
        this.TaxGroup       = _taxGroupTaxJurisdiction.TaxGroup;
        this.ExemptTax      = _taxGroupTaxJurisdiction.TaxExemptTax;
        this.TaxExemptCode  = _taxGroupTaxJurisdiction.TaxExemptCode;
        this.UseTax         = _taxGroupTaxJurisdiction.TaxUseTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        TaxCache::clearScope(TaxCacheScope::IntersectionData);
        TaxCache::clearScope(TaxCacheScope::TaxPerUnitAndGrossDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TaxGroupData, ExemptTax) :
                if (this.ExemptTax == NoYes::No)
                {
                    this.TaxExemptCode = '';
                }
                this.enableDataSourceFields();
                break;

            // <GEERU>
            case fieldNum(TaxGroupData, TaxCode) :
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    if (this.TaxCode &&
                        TaxTable::find(this.TaxCode).vatChargeSource_RU == VATChargeSource_RU::OwnFunds)
                    {
                        this.ExemptTax = NoYes::Yes;
                    }
                }
                break;
            // </GEERU>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    public void renamePrimaryKey()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            RetailConnActionManagement::errorOnRename(this);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showConcessionalValue_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the concessional value.
    /// </summary>
    /// <returns>
    /// Returns the concessional value.
    /// </returns>
    display ConcessionalValue_IN showConcessionalValue_IN()
    {
        ConcessionalValue_IN  concessionalValue;

        concessionalValue  = TaxData::value_IN(this.TaxCode,
                                               DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                               0);
        return concessionalValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPreferentialValue_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax value.
    /// </summary>
    /// <returns>
    /// Returns the tax value.
    /// </returns>
    display TaxValue  showPreferentialValue_IN()
    {
        TaxValue  taxValue;

        taxValue = TaxData::percentPreferentialValue_IN(this.TaxCode,
                                                        DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                        0);
        return taxValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTaxValue</Name>
				<Source><![CDATA[
    display TaxValue  showTaxValue()
    {
        TaxValue  taxValue;

        // <GIN>
        TaxParameters   taxParameters = TaxParameters::find();
        #ISOCountryRegionCodes
        // </GIN>

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])  &&
        ((taxParameters.Customs_IN                                        &&
            TaxTable::find(this.TaxCode).TaxType_IN == TaxType_IN::Customs)  ||
        (taxParameters.SalesTax_IN                                        &&
            TaxTable::find(this.TaxCode).TaxType_IN == TaxType_IN::SalesTax) ||
        (taxParameters.Excise_IN                                          &&
            TaxTable::find(this.TaxCode).TaxType_IN == TaxType_IN::Excise)))
        {
            taxValue = TaxData::percentValue_IN(this.TaxCode,
                                                DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                0);
        }
        else
        {
        // </GIN>
            taxValue  = TaxData::percent(this.TaxCode,
                                    DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                    0);
        // <GIN>
        }
        // </GIN>
        return taxValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroupName</Name>
				<Source><![CDATA[
    display TaxGroupName taxGroupName()
    {
        return TaxGroupHeading::find(this.TaxGroup).TaxGroupName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxName</Name>
				<Source><![CDATA[
    display TaxName taxName()
    {
        return TaxTable::find(this.TaxCode).TaxName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        TaxCache::clearScope(TaxCacheScope::IntersectionData);
        TaxCache::clearScope(TaxCacheScope::TaxPerUnitAndGrossDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean     ret;
        // <GEERU>
        TaxTable    taxTable;
        #ISOCountryRegionCodes
        // </GEERU>
        ;

        ret = super(_fieldIdToCheck);

        // <GEERU>
        switch (_fieldIdToCheck)
        {
            case fieldNum(TaxGroupData, TaxCode):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    taxTable = TaxTable::find(this.TaxCode);

                    if (taxTable.TaxType_W == TaxType_W::CustomDuty_RU ||
                        taxTable.TaxType_W == TaxType_W::CustomCharge_RU)
                    {
                        ret = checkFailed(strFmt("@GLS115422", taxTable.TaxType_W));
                    }
                }
                break;
        }
        // </GEERU>

        if (ret
            && BrazilParameters::isEnabled()
            && _fieldIdToCheck == fieldNum(TaxGroupData, TaxationCodeTable_BR)
            && this.TaxationCodeTable_BR)
        {
            if (TaxationCodeTable_BR::findRecId(this.TaxationCodeTable_BR).FiscalValue != TaxFiscalValue_BR::WithoutCreditDebitExempt)
            {
                ret = checkFailed(strFmt("@GLS50824", enum2str(TaxTable::find(this.TaxCode).TaxType_BR), enum2str(TaxFiscalValue_BR::WithoutCreditDebitExempt)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ;

        ret = super();

        if (ret
            && BrazilParameters::isEnabled())
        {
            if (this.ExemptTax      == NoYes::Yes
                && this.TaxationCodeTable_BR == 0
                && TaxationCodeSetup_BR::isTaxationCodeRequired(TaxTable::find(this.TaxCode).TaxType_BR))
            {
                ret = checkFailed(strFmt("@GLS60393", this.TaxCode));
            }

            if (this.TaxationCodeTable_BR
                    && !TaxationCodeTable_BR::asOf(this.TaxationCodeTable_BR))
            {
                ret = checkFailed(strFmt("@GLS63485", TaxationCodeTable_BR::findRecId(this.TaxationCodeTable_BR).TaxationCode, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TaxGroup _taxGroup, TaxCode _taxCode )
    {
        boolean ret = true;

        if (!TaxGroupData::exist(_taxGroup, _taxCode))
        {
            ret = checkFailed(strfmt(TaxGroupData::txtNotExist(), _taxGroup, _taxCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxGroups</Name>
				<Source><![CDATA[
    static boolean checkTaxGroups(TaxGroup _taxGroup, TaxItemGroup _taxItemGroup)
    {
        TaxGroupData   taxGroupData;
        TaxOnItem      taxOnItem;
        boolean        ret = true;

        if (!_taxGroup)
        {
            ret = checkFailed(strfmt("@SYS26332", "@SYS21919"));
        }
        else if (!_taxItemGroup)
        {
            ret = checkFailed(strfmt("@SYS26332", "@SYS21932"));
        }
        else
        {
            select firstonly RecId from taxGroupData
                index hint TaxGroupIdx
                where  taxGroupData.TaxGroup == _taxGroup
                exists join taxOnItem
                    where taxOnItem.TaxItemGroup == _taxItemGroup &&
                        taxOnItem.TaxCode == taxGroupData.TaxCode;

            if (!taxGroupData.RecId)
            {
                ret = checkFailed("@SYS79298");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTaxGroupsCompleteness</Name>
				<Source><![CDATA[
    public static boolean validateTaxGroupsCompleteness(TaxGroup _taxGroup, TaxItemGroup _taxItemGroup)
    {
        boolean ret = true;

        if ((_taxGroup && !_taxItemGroup) || (_taxItemGroup && !_taxGroup))
        {
            ret = checkFailed(strfmt("@AccountsPayable:TaxGroupCompletenessValidationMessage"));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TaxGroup _taxGroup, TaxCode _taxCode )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxGroupData
                 where
                     taxGroupData.TaxGroup == _taxGroup &&
                    taxGroupData.TaxCode == _taxCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxGroupData find(
        TaxGroup _taxGroup,
        TaxCode _taxCode ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxGroupData taxGroupData;

        taxGroupData.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxGroupData.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxGroupData
            where
            taxGroupData.TaxGroup == _taxGroup &&
                    taxGroupData.TaxCode == _taxCode;

        return taxGroupData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS27763";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS126030</DeveloperDocumentation>
	<FormRef>TaxGroup</FormRef>
	<Label>@SYS21919</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxGroup</TitleField1>
	<TitleField2>TaxCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>TaxGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>TaxGroupIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExemptTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Exemption</Name>
			<Label>@SYS88006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExemptTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxExemptCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntracomVAT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCodeTable_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UseTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReverseCharge_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATScheduleName_IN</Name>
			<Label>@SYS6793</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATScheduleName_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExemptTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxExemptTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IntracomVAT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>ES,CZ</CountryRegionCodes>
			<Label>@SYS92926</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxationCodeTable_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS60378</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxExemptCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxExemptCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxUseTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VATScheduleName_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VATScheduleRecId_IN</ExtendedDataType>
			<Label>@GLS5173</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseCharge_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReverseCharge</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseCharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>TaxReverseCharge</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VATScheduleName_INIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VATScheduleName_IN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxationCodeTable_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxationCodeTable_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxationCodeTable_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxationCodeTable_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxationCodeTable_BR</Name>
					<Field>TaxationCodeTable_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxExemptCodeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxExemptCodeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxExemptCode</Name>
					<SourceEDT>TaxExemptCode</SourceEDT>
					<Field>TaxExemptCode</Field>
					<RelatedField>ExemptCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ExemptCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxGroupCodeIdx</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>TaxGroupData</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupCodeIdx</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TaxGroupData</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VATScheduleName_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VATSchedule_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VATSchedule_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VATSchedule_IN_TaxGroupData</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATScheduleName_IN</Name>
					<Field>VATScheduleName_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>