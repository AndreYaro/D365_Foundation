<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayCategoryPriceRange</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayCategoryPriceRange extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayCategoryPriceRange</c> table by duplicating this record.
    /// </summary>
    /// <param  name='_tblSharedData'>
    /// The <c>CatDisplayCategorySharedInfo</c> record the cloned <c>CatDisplayCategoryPriceRange</c> record will point to.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayCategoryPriceRange</c> data type.
    /// </returns>
    /// <remarks>
    /// The cloned record is not inserted into the database.
    /// </remarks>
    public CatDisplayCategoryPriceRange cloneRecord(CatDisplayCategorySharedInfo _tblSharedData)
    {
        CatDisplayCategoryPriceRange tblDisplayCategoryPriceRangeDup;

        tblDisplayCategoryPriceRangeDup.clear();
        tblDisplayCategoryPriceRangeDup.SharedData = _tblSharedData.RecId;
        tblDisplayCategoryPriceRangeDup.FilterRange = this.FilterRange;
        tblDisplayCategoryPriceRangeDup.Currency = this.Currency;

        return tblDisplayCategoryPriceRangeDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        if ( this.validate() )
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        private boolean validate()
    {
        CatDisplayCategoryFilterRange   validFilterRange;
        CatDisplayCategoryFilterRange   dcFilterRange;
        CatDisplayCategoryPriceRange    dcPriceRange;

        RefRecID sharedData = this.SharedData;
        real lowerLimit;
        real upperLimit;

        //Get the given limit
        select LowerLimit, UpperLimit from dcFilterRange where dcFilterRange.RecId == this.FilterRange;
        lowerLimit = dcFilterRange.LowerLimit;
        upperLimit = dcFilterRange.UpperLimit;

        //Validate if range is overlapping in the beginning
        select SharedData, RecId from dcPriceRange
            join LowerLimit, UpperLimit, RecId from validFilterRange
                where validFilterRange.RecId == dcPriceRange.FilterRange
                    && dcPriceRange.SharedData == sharedData
                    && (( validFilterRange.UpperLimit > lowerLimit) && (validFilterRange.UpperLimit < upperLimit ));
        if (validFilterRange)
        {
            throw error(strfmt("@SYS309036",lowerLimit,upperLimit,validFilterRange.LowerLimit,validFilterRange.UpperLimit));
        }

        //Validate if range is overlapping at the end
        select SharedData, RecId from dcPriceRange
            join LowerLimit, UpperLimit, RecId from validFilterRange
                where validFilterRange.RecId == dcPriceRange.FilterRange
                    && dcPriceRange.SharedData == sharedData
                    && (( validFilterRange.LowerLimit < upperLimit) && (validFilterRange.LowerLimit > lowerLimit ));
        if (validFilterRange)
        {
            throw error(strfmt("@SYS309036",lowerLimit,upperLimit,validFilterRange.LowerLimit,validFilterRange.UpperLimit));
        }

        //Validate if range is inside the other range
        select SharedData, RecId from dcPriceRange
            join LowerLimit, UpperLimit, RecId from validFilterRange
                where validFilterRange.RecId == dcPriceRange.FilterRange
                    && dcPriceRange.SharedData == sharedData
                    && (( validFilterRange.UpperLimit <= upperLimit) && (validFilterRange.LowerLimit >= lowerLimit ));
        if (validFilterRange)
        {
            throw error(strfmt("@SYS309036",lowerLimit,upperLimit,validFilterRange.LowerLimit,validFilterRange.UpperLimit));
        }

        //Validate if someother range is inside the given range
        select SharedData, RecId from dcPriceRange
            join LowerLimit, UpperLimit, RecId from validFilterRange
                where validFilterRange.RecId == dcPriceRange.FilterRange
                    && dcPriceRange.SharedData == sharedData
                    && (( validFilterRange.UpperLimit >= upperLimit) && (validFilterRange.LowerLimit <= lowerLimit ));
        if (validFilterRange)
        {
            throw error(strfmt("@SYS309036",lowerLimit,upperLimit,validFilterRange.LowerLimit,validFilterRange.UpperLimit));
        }
        return NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryPriceRange</c> table.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shared data field.
    /// </param>
    /// <param  name='_filterRange'>
    /// An instance of the <c>RefRecId</c> class denoting filter range field.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _sharedData, RefRecId _filterRange)
    {
        if (!CatDisplayCategoryPriceRange::exist(_sharedData, _filterRange))
        {
            return checkFailed(strfmt(CatDisplayCategoryPriceRange::txtNotExist(), _sharedData, _filterRange));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryPriceRange</c> table.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shared data field.
    /// </param>
    /// <param  name='_filterRange'>
    /// An instance of the <c>RefRecId</c> class denoting filter range field.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _sharedData, RefRecId _filterRange)
    {
        return (CatDisplayCategoryPriceRange::find(_sharedData, _filterRange).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>CatDisplayCategoryPriceRange</c> table.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shared data field.
    /// </param>
    /// <param  name='_filterRange'>
    /// An instance of the <c>RefRecId</c> class denoting filter range field.
    /// </param>
    /// <param  name='_forUpdate'>
    /// A Boolean value to specify the selected record is for update; optional.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatDisplayCategoryPriceRange</c> class.
    /// </returns>
    public static CatDisplayCategoryPriceRange find(RefRecId _sharedData, RefRecId _filterRange, boolean _forUpdate = false)
    {
        CatDisplayCategoryPriceRange tblCatDisplayCategoryPriceRange;
        ;
        if (_sharedData && _filterRange)
        {
            tblCatDisplayCategoryPriceRange.selectForUpdate(_forUpdate);
            select firstonly tblCatDisplayCategoryPriceRange
                index hint PriceRangeIdx
                where tblCatDisplayCategoryPriceRange.SharedData == _sharedData
                    && tblCatDisplayCategoryPriceRange.FilterRange == _filterRange;
        }
        return tblCatDisplayCategoryPriceRange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS131155";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS322966</DeveloperDocumentation>
	<Label>@SYS191285</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SharedData</TitleField1>
	<TitleField2>FilterRange</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PriceRangeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterRange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterRange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS27587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterRange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FilterRange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS35881</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SharedData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS71475</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceRangeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FilterRange</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SharedData</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CatDisplayCategoryPriceRange</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FilterRangeRel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatDisplayCategoryFilterRange</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategoryFilterRange</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategoryFilterRange_CatDisplayCategoryPriceRange</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FilterRange</Name>
					<Field>FilterRange</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SharedDataRel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatDisplayCategorySharedInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategorySharedInfo</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategorySharedInfo_CatDisplayCategoryPriceRange</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SharedData</Name>
					<Field>SharedData</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>