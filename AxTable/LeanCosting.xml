<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanCosting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanCosting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endDateTime</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display DateTimeExecuted endDateTime()
    {
        LeanProductionFlowCosting       productionFlowCosting;

        // check if the user has access to the field
        if (!hasFieldAccess(tablenum(LeanProductionFlowCosting), fieldnum(LeanProductionFlowCosting, ModifiedDateTime)))
        {
            return DateTimeUtil::minValue();
        }

        if (this.status() != LeanProductionFlowCostingStatus::Ended)
        {
            return DateTimeUtil::minValue();
        }
        else
        {
            select maxof(ModifiedDateTime) from productionFlowCosting
            where productionFlowCosting.LeanCosting == this.RecId
               && productionFlowCosting.Status      == LeanProductionFlowCostingStatus::Ended;

            return productionFlowCosting.ModifiedDateTime;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display FromDate fromDate()
    {
        LeanCosting   costing;

        // check if the user has access to the field
        if (!hasFieldAccess(tablenum(LeanCosting), fieldnum(LeanCosting, ToDate)))
        {
            return dateNull();
        }

        select maxof(ToDate) from costing
        where costing.ToDate < this.ToDate;

        if (costing)
        {
            return costing.ToDate + 1;
        }
        else
        {
            return dateNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromToDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns calculation period as a formatted from-to date string.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display str getFromToDate()
    {
        return strFmt("@SYS313427", this.fromDate(), this.ToDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LeanProductionFlowCostingStatus status()
    {
        LeanProductionFlowCosting       productionFlowCosting;

        // check if the user has access to the field
        if (!hasFieldAccess(tablenum(LeanProductionFlowCosting), fieldnum(LeanProductionFlowCosting, Status)))
        {
            return LeanProductionFlowCostingStatus::Created;
        }

        select count(RecId) from productionFlowCosting
        where productionFlowCosting.LeanCosting == this.RecId
           && productionFlowCosting.Status      == LeanProductionFlowCostingStatus::Created;

        if (productionFlowCosting.RecId)
        {
            return LeanProductionFlowCostingStatus::Calculation;
        }
        else
        {
            return LeanProductionFlowCostingStatus::Ended;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkOpen</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static boolean checkOpen(TransDate testDate, boolean onDateOk = false)
    {
        TransDate costingDate = LeanCosting::lastToDate();

        if ((testDate <= costingDate && !onDateOk) ||
            (testDate <  costingDate &&  onDateOk))
        {
            return checkFailed(strfmt("@SYS190012",date2StrUsr( costingDate, DateFlags::FormatAll)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static LeanCosting find(RecId _recId, boolean _forupdate = false)
    {
        LeanCosting leanCosting;

        leanCosting.selectForUpdate(_forupdate);

        select leanCosting where leanCosting.RecId == _recId;

        return leanCosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastToDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ToDate lastToDate()
    {
        return (select maxof(ToDate) from leanCosting).ToDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS324581</DeveloperDocumentation>
	<FormRef>LeanCosting</FormRef>
	<Label>@SYS190008</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ToDate</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>DateIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProductionControl</Modules>
	<OccEnabled>No</OccEnabled>
	<ReplacementKey>DateIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LeanProductionFlowCosting</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LeanProductionFlowCosting</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Session</Name>
			<Label>@SYS7115</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>endDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>