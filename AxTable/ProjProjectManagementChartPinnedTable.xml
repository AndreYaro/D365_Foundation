<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectManagementChartPinnedTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProjectManagementChartPinnedTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>showChartTypeIcon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an image container for the getChartTypeIconName symbol
    /// </summary>
    /// <returns>The image container</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display container showChartTypeIcon()
    {
        ImageReference imgRef;
        container imgContainer;

        imgRef = ImageReference::constructForSymbol(this.getChartTypeIconName());
        imgContainer = imgRef.pack();

        return imgContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChartTypeIconName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the icon to use for the given chart type.
    /// </summary>
    /// <returns>The name of the icon associated with the chart type.</returns>
    private str getChartTypeIconName()
    {
        str imageName;
        switch (this.ChartType)
        {
            case SysChartType::Bar :
                imageName = identifierstr(BarChartHorz);
                break;
            case SysChartType::Column :
                imageName = identifierstr(BarChartVert);
                break;
            case SysChartType::Funnel :
                imageName = identifierstr(FunnelChart);
                break;
            case SysChartType::Line :
                imageName = identifierstr(LineChart);
                break;
            case SysChartType::Pie :
                imageName = identifierstr(PieChart);
                break;
            case SysChartType::StackedColumn :
                imageName = identifierstr(StackColumn);
                break;
            case SysChartType::StackedPercentageColumn :
                imageName = identifierstr(StackColumn);
                break;
            default: // TFS 3621923 : Determine all charts that are supported in chart gallery and request symbols if necessary
                imageName = identifierstr(BarChartVert);
                break;
        }
        return imageName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MenuItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Title</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChartType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChartOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MenuItemName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<StringSize>100</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AssetClassification>End User Identifiable Information (EUII)</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Title</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<StringSize>25</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<StringSize>35</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Type</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<StringSize>25</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ChartType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SysChartType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ChartOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MenuItemUserIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>UserId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MenuItemName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>