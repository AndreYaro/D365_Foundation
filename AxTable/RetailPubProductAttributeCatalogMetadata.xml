<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPubProductAttributeCatalogMetadata</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;
public class RetailPubProductAttributeCatalogMetadata extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>publishCatalogAttributeMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates publishing data for the specified catalog in the <c>RetailPubProductAttributeCatalogMetadata</c> table.
    /// </summary>
    /// <param name="_catalogRefRecId">
    /// Id of the channel to publish.
    /// </param>
    public static void publishCatalogAttributeMetadata(CatalogRefRecId _catalogRefRecId)
    {
        Catalog publishedCatalog;

        if (_catalogRefRecId > 0)
        {
            publishedCatalog = Catalog::find(_catalogRefRecId);
            RetailPubProductAttributeCatalogMetadata::updateCatalogAttributeMetadata(publishedCatalog.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCatalogAttributeMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates publishing data for the specified Catalog in the <c>RetailPubProductAttributeCatalogMetadata</c> table.
    /// </summary>
    /// <param name="_publishedCatalog">
    /// Catalog to publish.
    /// </param>
    /// <remarks>
    /// Publish the entire hierarchy.
    /// </remarks>
    public static void updateCatalogAttributeMetadata(CatalogRefRecId _publishedCatalog)
    {
        RetailProdAttributeCatalogMetadata retailCatalogAttributeMetadata;
        Catalog catalog;
        RetailCatalogAttributeGroup catalogAttributeGroup;
        RetailPubProductAttributeCatalogMetadata retailPubCatalogAttributeMetadata, retailPubFoundCatalogAttributeMetadata;
        EcoResAttributeDefaultValue attributeReference;
        EcoResReferenceValue ecoResReferenceValue;
        EcoResAttribute ecoResAttribute;
        EcoResAttributeType ecoResAttributeType;
        EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute;
        utcDateTime utcNow = DateTimeUtil::utcNow();
        CommerceHQEventSource eventSource = CommerceHQEventSource::Log;
        utcdatetime stepStartTime, stepEndTime;

        #define.maxAttempts(8)
        #define.timeSlot(1000)

        int tryCount = 0;

        try
        {
            tryCount++;

            ttsBegin;

            stepStartTime = DateTimeUtil::utcNow();

            // Delete Public Catalog Attribute metadata which do not exist or are not valid
            delete_from retailPubCatalogAttributeMetadata
                where retailPubCatalogAttributeMetadata.HostCatalog == _publishedCatalog
                notExists join retailCatalogAttributeMetadata
                    where retailCatalogAttributeMetadata.CatalogRefRecId == catalog.RecId
                       && retailCatalogAttributeMetadata.Attribute == retailPubCatalogAttributeMetadata.Attribute;

            stepEndTime = DateTimeUtil::utcNow();
            eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'Delete Public Catalog Attribute metadata which do not exist or are not valid');

            stepStartTime = DateTimeUtil::utcNow();

            // Delete Public Catalog Attribute metadata which were modified
            delete_from retailPubCatalogAttributeMetadata
                where retailPubCatalogAttributeMetadata.HostCatalog == _publishedCatalog
                exists join retailCatalogAttributeMetadata
                where retailCatalogAttributeMetadata.RecId == retailPubCatalogAttributeMetadata.OriginId
                   && retailCatalogAttributeMetadata.recVersion != retailPubCatalogAttributeMetadata.OriginRecVersion;

            stepEndTime = DateTimeUtil::utcNow();
            eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'Delete Public Catalog Attribute metadata which were modified');

            stepStartTime = DateTimeUtil::utcNow();

            // Insert
            insert_recordset retailPubCatalogAttributeMetadata (HostCatalog, Attribute, AttributeRelationType, KeyName, Metadata, MetadataVersion, OriginRecVersion, OriginId)
            select CatalogRefRecId, Attribute, AttributeRelationType, KeyName, Metadata, MetadataVersion, RecVersion, RecId from retailCatalogAttributeMetadata
                where retailCatalogAttributeMetadata.CatalogRefRecId == _publishedCatalog
                notExists join retailPubFoundCatalogAttributeMetadata
                    where retailPubFoundCatalogAttributeMetadata.HostCatalog == retailCatalogAttributeMetadata.CatalogRefRecId
                       && retailPubFoundCatalogAttributeMetadata.Attribute == retailCatalogAttributeMetadata.Attribute;

            stepEndTime = DateTimeUtil::utcNow();
            eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'Insert');

            stepStartTime = DateTimeUtil::utcNow();

            // set the DataType field for non-reference attributes
            update_recordSet retailPubCatalogAttributeMetadata
            setting DataType = ecoResAttributeType.DataType
                where retailPubCatalogAttributeMetadata.HostCatalog == _publishedCatalog
                join ecoResAttribute
                    where retailPubCatalogAttributeMetadata.Attribute == ecoResAttribute.RecId
                join ecoResAttributeType
                        where ecoResAttributeType.RecId == ecoResAttribute.AttributeType
                        && ecoResAttributeType.DataType != retailPubCatalogAttributeMetadata.DataType
                        && ecoResAttributeType.DataType != AttributeDataType::Reference;

            stepEndTime = DateTimeUtil::utcNow();
            eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'set the DataType field for non-reference attributes');

            stepStartTime = DateTimeUtil::utcNow();

            // set the DataType field for reference attributes
            update_recordSet retailPubCatalogAttributeMetadata
            setting DataType = ecoResAttributeType.DataType
                where retailPubCatalogAttributeMetadata.HostCatalog == _publishedCatalog
                join attributeReference
                    where attributeReference.Attribute == retailPubCatalogAttributeMetadata.Attribute
                join ecoResReferenceValue
                    where ecoResReferenceValue.RecId == attributeReference.Value
                        && ecoResReferenceValue.RefTableId == tableNum(EcoResAttribute)
                join ecoResAttribute
                    where ecoResAttribute.RecId == ecoResReferenceValue.RefRecId
                join ecoResAttributeType
                        where ecoResAttributeType.RecId == ecoResAttribute.AttributeType
                        && ecoResAttributeType.DataType != retailPubCatalogAttributeMetadata.DataType;

            stepEndTime = DateTimeUtil::utcNow();
            eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'set the DataType field for reference attributes');


            // Update AttributeGroup, AttributeGroupDisplayOrder, AttributeDisplayOrder for the catalog to sort the attributes.
            if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
            {
                stepStartTime = DateTimeUtil::utcNow();

                update_recordset retailPubCatalogAttributeMetadata
                setting AttributeDisplayOrder = ecoResAttributeGroupAttribute.RetailDisplayOrder,
                        AttributeGroup = catalogAttributeGroup.AttributeGroup,
                        AttributeGroupDisplayOrder = catalogAttributeGroup.DisplayOrder
                    where retailPubCatalogAttributeMetadata.HostCatalog == _publishedCatalog
                    join ecoResAttributeGroupAttribute
                        where ecoResAttributeGroupAttribute.Attribute == retailPubCatalogAttributeMetadata.Attribute
                    join catalogAttributeGroup
                        where catalogAttributeGroup.CatalogRefRecId == catalog.RecId &&
                              catalogAttributeGroup.AttributeGroup == ecoResAttributeGroupAttribute.AttributeGroup;

                stepEndTime = DateTimeUtil::utcNow();
                eventSource.EventWriteRetailPubProductAttributeCatalogMetadataPublishCatalogTimeStamp(stepStartTime, stepEndTime, DateTimeUtil::getDifference(stependTime, stepStartTime), 'Update AttributeGroup, AttributeGroupDisplayOrder, AttributeDisplayOrder for the catalog to sort the attributes');
            }
           
            ttsCommit;
        }
        catch (Exception::Deadlock)
        {
            // Sleep with Exponential Backoff;
            if (1 <= tryCount && tryCount <= #maxAttempts)
            {
                int sleepTime = real2int(((power(2, tryCount) - 1) / 2) * #timeSlot);
                sleep(sleepTime);
                retry;
            }
            else
            {
                throw Exception::Deadlock;
            }
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailPubProductAttributeCatalogMetadataTitle</DeveloperDocumentation>
	<Label>@RET261229</Label>
	<TitleField1>HostCatalog</TitleField1>
	<TitleField2>Attribute</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Merchandising</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HostCatalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Metadata</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductAttributeMetadata</Name>
			<Label>@RET261229</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HostCatalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Metadata</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginRecVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MetadataVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Attribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AttributeDisplayOrder</Name>
			<AssetClassification>Customer content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AttributeGroup</Name>
			<AssetClassification>Customer content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AttributeGroupDisplayOrder</Name>
			<AssetClassification>Customer content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AttributeRelationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailProductAttributeRelationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DataType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AttributeDataType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HostCatalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatalogRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KeyName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAttributeKeyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Metadata</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAttributeChannelMetadata</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MetadataVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailChannelMetadataVersion</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOriginId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>OriginRecVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOriginRecVersion</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductAttribute</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>HostCatalog</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Attribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductAttributeKeyName</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>HostCatalog</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>KeyName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Attribute</Name>
					<Field>Attribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Catalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Catalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HostCatalog</Name>
					<Field>HostCatalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailProdAttributeCatalogMetadata</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailProdAttributeCatalogMetadata</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginId</Name>
					<Field>OriginId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPubCatalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailPubCatalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HostCatalog</Name>
					<Field>HostCatalog</Field>
					<RelatedField>Origin</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>OriginIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>