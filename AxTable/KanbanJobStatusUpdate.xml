<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobStatusUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanJobStatusUpdate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromKanbanJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current <c>KanbanJobStatusUpdate</c> table buffer from a <c>KanbanJob</c> record.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The <c>KanbanJob</c> record to use.
    /// </param>
    public void initFromKanbanJob(KanbanJob _kanbanJob)
    {
        this.Job              = _kanbanJob.RecId;
        this.KanbanId         = _kanbanJob.kanban().KanbanId;
        this.QuantityReceived = _kanbanJob.QuantityOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromKanbanStatusUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current <c>KanbanJobStatusUpdate</c> table buffer from a <c>KanbanStatusUpdate</c>
    ///    record.
    /// </summary>
    /// <param name="_kanbanStatusUpdate">
    ///    The <c>KanbanStatusUpdate</c> record to use.
    /// </param>
    public void initFromKanbanStatusUpdate(KanbanStatusUpdate _kanbanStatusUpdate)
    {
        this.QuantityReceived    = _kanbanStatusUpdate.QuantityReceived;
        this.QuantityScrapped    = _kanbanStatusUpdate.QuantityScrapped;
        this.FirstTimeThrough    = _kanbanStatusUpdate.FirstTimeThrough;
        this.TransactionDateTime = _kanbanStatusUpdate.TransactionDateTime;
        this.InventDimId         = _kanbanStatusUpdate.InventDimId;
        this.InventDimDataAreaId = _kanbanStatusUpdate.InventDimDataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the default values for the <c>ParmBuffer</c> buffer.
    /// </summary>
    public void initParmDefault()
    {
        this.JobStatus               = ParmJobStatus::Waiting;
        this.AutoUpdate              = NoYes::No;
        this.PlanAfterType           = LeanPlanJobReferenceTypes::LineNumber;
        this.InventDimId             = InventDim::inventDimIdBlank();
        this.InventDimDataAreaId     = this.InventDimId ? appl.company().dataArea(tableNum(InventDim)) : '';
        this.PostponeMove            = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>InventDim</c> record referenced in the <c>InventDimId</c> field of the table.
    /// </summary>
    /// <returns>
    ///    A <c>InventDim</c> table buffer.
    /// </returns>
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanbanJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>KanbanJob</c> record referenced in the <c>Job</c> field.
    /// </summary>
    /// <returns>
    ///    A <c>KanbanJob</c> table buffer.
    /// </returns>
    public KanbanJob kanbanJob()
    {
        return KanbanJob::find(this.Job);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDateTimeFromOriginalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Update transaction date and time to original inventory trasaction date and time
    ///    for kanban job cancellation and reversal if the original date is later than
    ///    the latest backflush costing performed in the system.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    A buffer of the <c>KanbanJob</c> table.
    /// </param>
    public void updateDateTimeFromOriginalTrans(KanbanJob _kanbanJob)
    {
        InventMovement  movement;
        InventTrans     inventTrans;

        movement = _kanbanJob.inventMovement();
        if (movement)
        {
            select firstonly DatePhysical from inventTrans
                where inventTrans.InventTransOrigin   == movement.inventTransOriginId()
                   && inventTrans.PackingSlipReturned == NoYes::No
                   && inventTrans.InvoiceReturned     == NoYes::No
                   && !inventTrans.ReturnInventTransOrigin
                   && (( inventTrans.StatusReceipt    == StatusReceipt::Received
                      && inventTrans.StatusIssue      == StatusIssue::None)
                      || (inventTrans.StatusIssue     == StatusIssue::Deducted
                      &&  inventTrans.StatusReceipt   == StatusReceipt::None));

            if (inventTrans.DatePhysical > LeanCosting::lastToDate())
            {
                this.TransactionDateTime = DateTimeUtil::newDateTime(inventTrans.DatePhysical, 0 , DateTimeUtil::getCompanyTimeZone());
                this.PlanAfterLineNum    = KanbanJobSchedule::lastSequence(_kanbanJob.WorkCell, inventTrans.DatePhysical);

                ttsBegin;
                this.selectForUpdate(true);
                this.doUpdate();
                ttsCommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return    super()
               && KanbanItemCheckMovement::newStandard(this.kanbanJob().inventMovement(),true,false).isAllowed();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes records from the <c>KanbanJobStatusUpdate</c> table.
    /// </summary>
    /// <param name="_parmId">
    ///    A parameter ID.
    /// </param>
    /// <remarks>
    ///    The records with a <c>ParmId</c> field that match the specified parameter ID are deleted.
    /// </remarks>
    public static void deleteParameters(ParmId _parmId)
    {
        KanbanJobStatusUpdate  kanbanJobStatusUpdate;

        ttsbegin;
        delete_from kanbanJobStatusUpdate
            where kanbanJobStatusUpdate.ParmId == _parmId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobStatusUpdate</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        return _recId && (select firstonly kanbanJobStatusUpdate where kanbanJobStatusUpdate.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existParmIdJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobStatusUpdate</c> table exists.
    /// </summary>
    /// <param name="_parmId">
    ///    The parameter ID to find.
    /// </param>
    /// <param name="_job">
    ///    The record ID of the job to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existParmIdJob(
        ParmId   _parmId,
        RefRecId _job)
    {
        return _parmId &&
               _job    &&
               (select firstonly kanbanJobStatusUpdate
                    where kanbanJobStatusUpdate.ParmId == _parmId &&
                          kanbanJobStatusUpdate.Job    == _job).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobStatusUpdate</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the kanban job status update table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobStatusUpdate</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanJobStatusUpdate find(
        recId   _recId,
        boolean _forUpdate = false)
    {
        KanbanJobStatusUpdate kanbanJobStatusUpdate;

        if (_recId)
        {
            kanbanJobStatusUpdate.selectForUpdate(_forUpdate);

            select firstonly kanbanJobStatusUpdate
                where kanbanJobStatusUpdate.RecId == _recId;
        }

        return kanbanJobStatusUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates the highest line number for a given parameter ID in the <c>KanbanJobStatusUpdate</c>
    ///    table.
    /// </summary>
    /// <param name="_parmId">
    ///    The parameter ID.
    /// </param>
    /// <returns>
    ///    The highest line number for the given parameter ID.
    /// </returns>
    public static LineNum lastLineNum(ParmId _parmId)
    {
        return (select maxof(LineNum) from kanbanJobStatusUpdate
                    where kanbanJobStatusUpdate.ParmId == _parmId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new paramter record with its own parameter ID for a given <c>KanbanJobStatus</c> object and <c>LeanKanbanJobStatus</c> target status.
    /// </summary>
    /// <param name="_kanbanJobStatus">
    /// The <c>KanbanJobStatus</c> object.
    /// </param>
    /// <param name="_leanKanbanJobStatus">
    /// The <c>LeanKanbanJobStatus</c> enumeration value.
    /// </param>
    /// <param name="_setParmId">
    /// An optional boolean value indicating whether a <c>ParmId</c> should be assigned to the record.
    /// </param>
    /// <param name="_insert">
    /// An optional boolean value indicating whether the record should be inserted in the database (it inserts if omitted).
    /// </param>
    /// <returns>
    /// A <c>KanbanJobStatusUpdate</c> record.
    /// </returns>
    public static KanbanJobStatusUpdate makeParameters(
        KanbanJobStatus     _kanbanJobStatus,
        LeanKanbanJobStatus _leanKanbanJobStatus,
        boolean             _setParmId = true,
        boolean             _insert    = true)
    {
        KanbanJobStatusUpdate   kanbanJobStatusUpdate;

        if (_setParmId)
        {
            kanbanJobStatusUpdate.ParmBuffer::initParmId();
        }
        kanbanJobStatusUpdate.initParmDefault();
        kanbanJobStatusUpdate.LineNum = 1;
        kanbanJobStatusUpdate         = _kanbanJobStatus.initStatusUpdate(kanbanJobStatusUpdate,_leanKanbanJobStatus);
        if (_insert)
        {
            ttsbegin;
            kanbanJobStatusUpdate.insert();
            ttscommit;
        }

        return kanbanJobStatusUpdate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS131638</DeveloperDocumentation>
	<Label>@SYS131636</Label>
	<SingularLabel>@SYS131637</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Type</TitleField1>
	<TitleField2>ParmId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>ParmIdNumIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KanbanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KanbanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Parms</Name>
			<Label>@SYS7764</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuantityReceived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityScrapped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstTimeThrough</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WantedStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlanAfterLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlanAfterJob</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlanAfterType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoUpdate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoUpdate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobAutoUpdate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExecutedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DateTimeExecuted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FirstTimeThrough</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobFirstTimeThrough</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS131642</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ParmJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KanbanId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlanAfterJob</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS301066</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PlanAfterLineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@SYS134372</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PlanAfterType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeanPlanJobReferenceType</ExtendedDataType>
			<EnumType>LeanPlanJobReferenceTypes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityReceived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobQuantityReceived</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityScrapped</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobQuantityScrapped</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TransactionDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>LeanKanbanJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WantedStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS131639</Label>
			<EnumType>LeanKanbanJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostponeMove</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobPostponeMove</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmIdNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>KanbanJobIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ParmBuffer</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Linenum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>KanbanId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobStatus</MapField>
					<MapFieldTo>JobStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDateTime</MapField>
					<MapFieldTo>ExecutedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimDataAreaId</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>InventDimDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanJob</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanParentJob</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJobStatusUpdate</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanJobPlanAfter</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanJobToPlanAfter</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJobStatusUpdate</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlanAfterJob</Name>
					<Field>PlanAfterJob</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>