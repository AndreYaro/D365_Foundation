<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransPosting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransPosting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>actualPostedOperationsValue</Name>
				<Source><![CDATA[
    display CostAmount actualPostedOperationsValue()
    {
        InventTransPosting  inventTransPostingFinancial;
        InventTrans         inventTrans;

        if (!this.IsPosted)
        {
            return 0;
        }

        switch (this.InventTransPostingType)
        {
            case InventTransPostingType::Physical:

                select sum(CostAmountPhysical) from inventTrans
                    where inventTrans.InventTransOrigin     == this.InventTransOrigin
                      &&  inventTrans.VoucherPhysical       == this.Voucher
                      &&  inventTrans.DatePhysical          == this.TransDate
                notexists join inventTransPostingFinancial
                    where inventTrans.Voucher                                   == inventTransPostingFinancial.Voucher
                      &&  inventTrans.DateFinancial                             == inventTransPostingFinancial.TransDate
                      &&  inventTrans.InventTransOrigin                         == inventTransPostingFinancial.InventTransOrigin
                      &&  inventTransPostingFinancial.InventTransPostingType    == InventTransPostingType::Financial;

                return -inventTrans.CostAmountPhysical;

            case InventTransPostingType::Financial:
                    select sum(CostAmountOperations),sum(CostAmountAdjustment) from inventTrans
                        where inventTrans.InventTransOrigin == this.InventTransOrigin
                          &&  inventTrans.Voucher           == this.Voucher
                          &&  inventTrans.DateFinancial     == this.TransDate;

                return inventTrans.CostAmountOperations - inventTrans.CostAmountAdjustment;

            case InventTransPostingType::PhysicalRevenue:

                select sum(RevenueAmountPhysical) from inventTrans
                    where inventTrans.InventTransOrigin     == this.InventTransOrigin
                      &&  inventTrans.VoucherPhysical       == this.Voucher
                      &&  inventTrans.DatePhysical          == this.TransDate
                notexists join inventTransPostingFinancial
                    where inventTrans.Voucher                       == inventTransPostingFinancial.Voucher
                      &&  inventTrans.DateFinancial                 == inventTransPostingFinancial.TransDate
                      &&  inventTrans.InventTransOrigin             == inventTransPostingFinancial.InventTransOrigin
                      &&  inventTransPostingFinancial.InventTransPostingType == InventTransPostingType::Financial;

                return -inventTrans.RevenueAmountPhysical;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>CompanyInfo</c> record that is associated with the current record.
    /// </summary>
    /// <returns>
    /// A <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransFirst</Name>
				<Source><![CDATA[
    InventTrans inventTransFirst()
    {
        InventTrans     inventTrans;

        switch (this.InventTransPostingType)
        {
            case InventTransPostingType::Physical:
            case InventTransPostingType::PhysicalRevenue:
                select firstonly inventTrans
                    where inventTrans.InventTransOrigin     == this.InventTransOrigin
                      &&  inventTrans.VoucherPhysical       == this.Voucher
                      &&  inventTrans.DatePhysical          == this.TransDate;
                break;

            case InventTransPostingType::Financial:
                select firstonly inventTrans
                    where inventTrans.InventTransOrigin     == this.InventTransOrigin
                      &&  inventTrans.Voucher               == this.Voucher
                      &&  inventTrans.DateFinancial         == this.TransDate;

                break;
        }

        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    /// field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    /// optional.
    /// </param>
    /// <param name="_dimensionMerge">
    /// A <c>dimensionMerge</c> object that was created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    /// this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedOperationsValue</Name>
				<Source><![CDATA[
    CostAmountPosted postedOperationsValue()
    {
        InventTrans     inventTrans;

        switch (this.InventTransPostingType)
        {
            case InventTransPostingType::Financial:
                select sum(CostAmountOperations) from inventTrans
                    where inventTrans.InventTransOrigin == this.InventTransOrigin
                      &&  inventTrans.Voucher           == this.Voucher
                      &&  inventTrans.DateFinancial     == this.TransDate;

                break;
        }

        return inventTrans.CostAmountOperations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedQty</Name>
				<Source><![CDATA[
    display InventQtyPosted postedQty()
    {
        InventTrans     inventTrans;

        switch (this.InventTransPostingType)
        {
            case InventTransPostingType::Physical:
            case InventTransPostingType::PhysicalRevenue:
                select sum(Qty) from inventTrans
                    where inventTrans.InventTransOrigin == this.InventTransOrigin
                      &&  inventTrans.VoucherPhysical   == this.Voucher
                      &&  inventTrans.DatePhysical      == this.TransDate;
                break;

            case InventTransPostingType::Financial:
                select sum(Qty) from inventTrans
                    where inventTrans.InventTransOrigin == this.InventTransOrigin
                      &&  inventTrans.Voucher           == this.Voucher
                      &&  inventTrans.DateFinancial     == this.TransDate;

                break;
        }

        return inventTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedValue</Name>
				<Source><![CDATA[
    CostAmountPosted postedValue()
    {
        InventTrans     inventTrans;

        switch (this.InventTransPostingType)
        {
            case InventTransPostingType::Physical:
                select sum(CostAmountPhysical) from inventTrans
                    where inventTrans.InventTransOrigin     == this.InventTransOrigin
                      &&  inventTrans.VoucherPhysical       == this.Voucher
                      &&  inventTrans.VoucherPhysical       != inventTrans.Voucher
                      &&  inventTrans.DatePhysical          == this.TransDate;

                return inventTrans.CostAmountPhysical;

            case InventTransPostingType::Financial:
                    select sum(CostAmountPosted) from inventTrans
                        where inventTrans.InventTransOrigin == this.InventTransOrigin
                          &&  inventTrans.Voucher           == this.Voucher
                          &&  inventTrans.DateFinancial     == this.TransDate;

                return inventTrans.CostAmountPosted;

            case InventTransPostingType::PhysicalRevenue:
                    select sum(RevenueAmountPhysical) from inventTrans
                        where inventTrans.InventTransOrigin == this.InventTransOrigin
                          &&  inventTrans.VoucherPhysical   == this.Voucher
                          &&  inventTrans.DatePhysical      == this.TransDate;

                return inventTrans.RevenueAmountPhysical;
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCategoryId</Name>
				<Source><![CDATA[
    display ProjCategoryId projCategoryId()
    {
        return this.inventTransFirst().ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storno_RU</Name>
				<Source><![CDATA[
    display Storno_RU storno_RU()
    {
        InventTrans inventTrans;

        if (this.InventTransPostingType == InventTransPostingType::Financial)
        {
            select firstonly Storno_RU from inventTrans
                where inventTrans.InventTransOrigin == this.InventTransOrigin
                   && inventTrans.Voucher           == this.Voucher
                   && inventTrans.DateFinancial     == this.TransDate;
        }
        else
        {
            select firstonly Storno_RU from inventTrans
                where inventTrans.InventTransOrigin == this.InventTransOrigin
                   && inventTrans.VoucherPhysical   == this.Voucher
                   && inventTrans.DatePhysical      == this.TransDate;
        }

        return inventTrans.Storno_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(
        TransDate                   _transDate,
        Voucher                     _voucher,
        InventTransOriginId         _transOriginId,
        InventTransPostingType      _type)
    {
        InventTransPosting  inventTransPosting;

        inventTransPosting.Voucher                = _voucher;
        inventTransPosting.TransDate              = _transDate;
        inventTransPosting.InventTransOrigin      = _transOriginId;
        inventTransPosting.InventTransPostingType = _type;

        return InventTransPosting::existByNaturalKey(inventTransPosting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether an <c>InventTransPosting</c> record matching the provided search parameters exists.
    /// </summary>
    /// <param name = "_searchParameter">A search parameter.</param>
    /// <returns>true if an <c>InventTransPosting</c> record matching the provided search parameters exists.</returns>
    [Hookable(false)]
    public static boolean existByNaturalKey(InventTransPosting _searchParameter)
    {
        InventTransPosting  inventTransPosting;

        select firstonly inventTransPosting
            where inventTransPosting.Voucher                == _searchParameter.Voucher
              &&  inventTransPosting.TransDate              == _searchParameter.TransDate
              &&  inventTransPosting.InventTransOrigin      == _searchParameter.InventTransOrigin
              &&  inventTransPosting.InventTransPostingType == _searchParameter.InventTransPostingType;

        return inventTransPosting.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventTransPosting find(
        TransDate                   _transDate,
        Voucher                     _voucher,
        InventTransOriginId         _transOriginId,
        InventTransPostingType      _type,
        boolean                     _forUpdate = false)
    {
        InventTransPosting  inventTransPosting;

        inventTransPosting.Voucher                = _voucher;
        inventTransPosting.TransDate              = _transDate;
        inventTransPosting.InventTransOrigin      = _transOriginId;
        inventTransPosting.InventTransPostingType = _type;

        return InventTransPosting::findByNaturalKey(inventTransPosting, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>InventTransPosting</c> record based on provided search parameters.
    /// </summary>
    /// <param name = "_searchParameter">A search parameter.</param>
    /// <param name = "_forUpdate">Whether found record is supposed to be updated.</param>
    /// <returns>A <c>InventTransPosting</c> record.</returns>
    [Hookable(false)]
    public static InventTransPosting findByNaturalKey(InventTransPosting _searchParameter, boolean _forUpdate = false)
    {
        InventTransPosting  inventTransPosting;

        inventTransPosting.selectForUpdate(_forUpdate);
        inventTransPosting.selectLocked(_forUpdate);

        select firstonly inventTransPosting
            where inventTransPosting.Voucher                == _searchParameter.Voucher
              &&  inventTransPosting.TransDate              == _searchParameter.TransDate
              &&  inventTransPosting.InventTransOrigin      == _searchParameter.InventTransOrigin
              &&  inventTransPosting.InventTransPostingType == _searchParameter.InventTransPostingType;

        return inventTransPosting;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123889</DeveloperDocumentation>
	<FormRef>InventTransPosting</FormRef>
	<Label>@SYS27302</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TransDate</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>DateVoucherTransIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>DateVoucherTransIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingTypeOffset</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Accounts</Name>
			<Label>@SYS11800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Origin</Name>
			<Label>@SYS26398</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>storno_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS12919</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingTypeOffset</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PostingInfo</Name>
			<Label>@SYS118166</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPosted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransBeginTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventTransPostingType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS1711</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingTypeOffset</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<Label>@SYS27324</Label>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TransBeginTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransBeginTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemTypeDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransPostingType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DateVoucherTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransPostingType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DefaultDimension_InventTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_InventTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_InventTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_1_InventTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>