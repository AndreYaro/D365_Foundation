<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPAssetTrans_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBCIAPAssetTrans_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ciapAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the CIAP asset id
    /// </summary>
    /// <returns>
    ///     The CIAP asset id
    /// </returns>
    public AssetId ciapAssetId()
    {
        return (select ciapAssetID from fbciapAssetTable_BR
                    where fbciapAssetTable_BR.RecId == this.fbciapAssetTable_BR).ciapAssetID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        FBCIAPAssetTable_BR ciapAssetTable;

        ttsbegin;

        super();

        select forupdate ciapAssetTable
            where ciapAssetTable.RecId == this.fbciapAssetTable_BR;

        if (ciapAssetTable)
        {
            switch (this.TransType)
            {
                case FBCIAPAssetTransType_BR::BA :
                case FBCIAPAssetTransType_BR::ATSale :
                case FBCIAPAssetTransType_BR::ATTransfer :
                case FBCIAPAssetTransType_BR::OT :
                case FBCIAPAssetTransType_BR::PE :
                    if (ciapAssetTable.Status == FBCIAPAssetStatus_BR::Closed)
                    {
                        ciapAssetTable.Status = FBCIAPAssetStatus_BR::Open;
                        ciapAssetTable.update();
                    }
                    break;

                case FBCIAPAssetTransType_BR::IM :
                    if (ciapAssetTable.Status == FBCIAPAssetStatus_BR::Open)
                    {
                        ciapAssetTable.Status = FBCIAPAssetStatus_BR::NoAcquisition;
                        ciapAssetTable.ICMSAmount           = 0;
                        ciapAssetTable.ICMSDiffAmount       = 0;
                        ciapAssetTable.ICMSFreightAmount    = 0;
                        ciapAssetTable.ICMSSTAmount         = 0;
                        ciapAssetTable.update();
                    }
                    break;
            }

            if (this.InstallmentAmount && this.InstallmentNum)
            {
                if (ciapAssetTable.Installments > ciapAssetTable.RemainingInstallments)
                {
                    ciapAssetTable.RemainingInstallments++;
                    ciapAssetTable.update();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>icmsToRecover</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Return the sum of ICMS amounts to recover
    /// </summary>
    /// <returns>
    ///     The sum of ICMS amounts
    /// </returns>

    display public AmountMST icmsToRecover()
    {
        return this.ICMSAmount + this.ICMSSTAmount + this.ICMSDiffAmount + this.ICMSFreightAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        FBCIAPAssetTable_BR ciapAssetTable;

        ttsBegin;

        if (!this.OrigAssetTrans)
        {
            select forUpdate ciapAssetTable
                where ciapAssetTable.RecId == this.FBCIAPAssetTable_BR;

            switch (this.TransType)
            {
                case FBCIAPAssetTransType_BR::IM :
                case FBCIAPAssetTransType_BR::SI :
                    ciapAssetTable.ICMSAmount           = this.ICMSAmount;
                    ciapAssetTable.ICMSDiffAmount       = this.ICMSDiffAmount;
                    ciapAssetTable.ICMSFreightAmount    = this.ICMSFreightAmount;
                    ciapAssetTable.ICMSSTAmount         = this.ICMSSTAmount;
                    ciapAssetTable.Status               = FBCIAPAssetStatus_BR::Open;

                    if (this.InstallmentAmount && this.InstallmentNum && ciapAssetTable.RemainingInstallments >= 1)
                    {
                        ciapAssetTable.RemainingInstallments--;
                    }

                    ciapAssetTable.update();
                    break;

                case FBCIAPAssetTransType_BR::ATSale :
                case FBCIAPAssetTransType_BR::ATTransfer :
                case FBCIAPAssetTransType_BR::OT :
                case FBCIAPAssetTransType_BR::BA :
                case FBCIAPAssetTransType_BR::PE :
                    ciapAssetTable.Status               = FBCIAPAssetStatus_BR::Closed;
                    ciapAssetTable.update();
            }
        }
        else
        {
            if (this.TransType == FBCIAPAssetTransType_BR::ATSale)
            {
                select forUpdate ciapAssetTable
                    where ciapAssetTable.RecId == this.FBCIAPAssetTable_BR;

                ciapAssetTable.Status               = FBCIAPAssetStatus_BR::Closed;
                ciapAssetTable.update();
            }
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>otherCreditsAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the sum of the transactions amount related with this transaction.
    /// </summary>
    /// <returns>
    /// The sum of the field InstallmentAmount of the table FBCIAPAssetTrans_OtherCredits_BR.
    /// </returns>
    public display AmountCur otherCreditsAmount()
    {
        FBCIAPAssetTrans_OtherCredits_BR   otherCredits;

        select sum(InstallmentAmount) from otherCredits
            where otherCredits.FBCIAPAssetTrans_BR == this.RecId;

        return otherCredits.InstallmentAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        ttsBegin;

        super();

        if (this.TransType == FBCIAPAssetTransType_BR::IM)
        {
            this.updateCiapAssetTableICMSFields();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCiapAssetTableICMSFields</Name>
				<Source><![CDATA[
        private void updateCiapAssetTableICMSFields()
    {
        FBCIAPAssetTrans_BR ciapAssetTrans;
        FBCIAPAssetTable_BR ciapAssetTable;

        select sum(ICMSAmount), sum(ICMSSTAmount), sum(ICMSDiffAmount), sum(ICMSFreightAmount) from ciapAssetTrans
            where ciapAssetTrans.FBCIAPAssetTable_BR == this.FBCIAPAssetTable_BR
                && ciapAssetTrans.TransType == FBCIAPAssetTransType_BR::IM;

        select forUpdate ciapAssetTable
            where ciapAssetTable.RecId == this.FBCIAPAssetTable_BR;

        ciapAssetTable.ICMSAmount         = ciapAssetTrans.ICMSAmount;
        ciapAssetTable.ICMSDiffAmount     = ciapAssetTrans.ICMSDiffAmount;
        ciapAssetTable.ICMSFreightAmount  = ciapAssetTrans.ICMSFreightAmount;
        ciapAssetTable.ICMSSTAmount       = ciapAssetTrans.ICMSSTAmount;
        ciapAssetTable.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCiapAssetFiscalEstablishment</Name>
				<Source><![CDATA[
        private boolean validateCiapAssetFiscalEstablishment(FBCIAPAssessment_BR _ciapAssessment)
    {
        boolean ret = true;
        FBBookingPeriod_BR bookingPeriod = FBTaxAssessment_BR::find(_ciapAssessment.FBTaxAssessment_BR).bookingPeriod();

        if (bookingPeriod.fiscalEstablishment().RecId != FBCIAPAssetTable_BR::find(this.FBCIAPAssetTable_BR).FiscalEstablishment_BR)
        {
            ret = checkFailed("@SYS4006721");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInstallmentNumber</Name>
				<Source><![CDATA[
        private boolean validateInstallmentNumber()
    {
        FBCIAPAssetTable_BR                 ciapAssetTable;
        FBCIAPAssetTrans_BR                 ciapAssetTrans;
        FBCIAPAssetTrans_OtherCredits_BR    ciapAssetTransOtherCredits;

        boolean ok = true;

        if ((this.InstallmentAmount == 0) ^ (this.InstallmentNum == 0))
        {
            ok  = checkFailed("@SYS4006722");
        }

        if (this.TransType == FBCIAPAssetTransType_BR::IM && (this.InstallmentAmount == 0 || this.InstallmentNum == 0))
        {
            ok  = checkFailed("@SYS4006717");
        }

        select firstOnly InstallmentNum from ciapAssetTrans
            where ciapAssetTrans.FBCIAPAssetTable_BR == this.FBCIAPAssetTable_BR
                && ciapAssetTrans.InstallmentNum == this.InstallmentNum
                && ciapAssetTrans.RecId != this.RecId;

        if (ciapAssetTrans)
        {
            ok = checkFailed("@SYS4006718");
        }

        select installmentnum from ciapAssetTransOtherCredits
            where ciapAssetTransOtherCredits.FBCIAPAssetTrans_BR == this.RecId
                && ciapAssetTransOtherCredits.InstallmentNum == this.InstallmentNum;

        if (ciapAssetTransOtherCredits)
        {
            ok = checkFailed("@SYS4006719");
        }

        select installmentnum from ciapAssetTransOtherCredits
            where ciapAssetTransOtherCredits.FBCIAPAssetTrans_BR == this.RecId
                && ciapAssetTransOtherCredits.InstallmentNum >= this.InstallmentNum;

        if (ciapAssetTransOtherCredits)
        {
            ok = checkFailed("@SYS4006720");
        }

        select Installments from ciapAssetTable
            where ciapAssetTable.RecId == this.FBCIAPAssetTable_BR;

        if (this.InstallmentNum > ciapAssetTable.Installments)
        {
            ok = checkFailed("@SYS4006711");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        FBCIAPAssessment_BR ciapAssessment;

        boolean ret;

        ret = super();

        if (ret)
        {
            ciapAssessment = FBCIAPAssessment_BR::fbCIAPAssessment(this.FBCIAPAssessment_BR);

            if (this.TransDate < ciapAssessment.FromDate || this.TransDate > ciapAssessment.ToDate)
            {
                ret = checkFailed("@SYS138113");
            }

            ret = this.validateCiapAssetFiscalEstablishment(ciapAssessment) && ret;

            ret = this.validateInstallmentNumber() && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasICMSCreditForPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Verifies if a credit transaction exists for the given CIAP assessment.
    /// </summary>
    /// <param name="_ciapAssetTable">
    ///     The <c>FBCIAPAssetTable_BR</c> record.
    /// </param>
    /// <param name="_ciapAssessment">
    ///     The <c>FBCIAPAssessment_BR</c>
    /// </param>
    /// <returns>
    ///     True if a credit transaction exists, otherwise false.
    /// </returns>

    public static boolean hasICMSCreditForPeriod(FBCIAPAssetTable_BR _ciapAssetTable, FBCIAPAssessment_BR _ciapAssessment)
    {
        FBCIAPAssetTrans_BR ciapAssetTrans;

        select RecId from ciapAssetTrans
            where ciapAssetTrans.fbciapAssessment_BR == _ciapAssessment.RecId
                && ciapAssetTrans.fbciapAssetTable_BR == _ciapAssetTable.RecId
                && ciapAssetTrans.InstallmentAmount > 0 && ciapAssetTrans.InstallmentNum;

        return ciapAssetTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransactionOutgoing</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns if the current transaction is a outgoing(scrap) transaction
    /// </summary>
    /// <param name="_transType">
    ///     The <c>FBCIAPAssetTransType_BR</c> to check
    /// </param>
    /// <returns>
    ///     Returns true if the transaction is a outgoing transaction, otherwise false
    /// </returns>

    public static boolean isTransactionOutgoing(FBCIAPAssetTransType_BR _transType)
    {
        switch (_transType)
        {
                case FBCIAPAssetTransType_BR::ATSale :
                case FBCIAPAssetTransType_BR::ATTransfer :
                case FBCIAPAssetTransType_BR::OT :
                case FBCIAPAssetTransType_BR::PE :
                return true;

            default : return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>FBCIAPAssessment_BR</Name>
				<Source><![CDATA[
        public FBCIAPAssessment_BR FBCIAPAssessment_BR(FBCIAPAssessment_BR _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('FBCIAPAssessment_BR');
            }
            else
            {
                return this.setLink('FBCIAPAssessment_BR', _relatedTable);
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>FBCIAPAssetTable_BR</Name>
				<Source><![CDATA[
        public FBCIAPAssetTable_BR FBCIAPAssetTable_BR(FBCIAPAssetTable_BR _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('FBCIAPAssetTable_BR');
            }
            else
            {
                return this.setLink('FBCIAPAssetTable_BR', _relatedTable);
            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4001706</DeveloperDocumentation>
	<Label>@SYS4001704</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>FBCIAPAssetTable_BR</TitleField1>
	<TitleField2>TransType</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>FiscalBooksBrazil</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssessment_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssetTable_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@SYS75670</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ICMSAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSDiffAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSFreightAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssessment_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssetTable_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FBCIAPAssessment_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS4001705</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FBCIAPAssetTable_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS893</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSDiffAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@SYS4000762</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSFreightAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBCIAPICMSFreightAmount_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSSTAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@SYS4082237</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InstallmentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBCIAPInstallmentAmount_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InstallmentNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ICMSCreditInstallments_BR</ExtendedDataType>
			<Label>@SYS4001709</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OrigAssetTrans</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>FBCIAPAssetTransType_BR</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OrigAssetTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OrigAssetTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FBCIAPAssetTable_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CIAPAssessmentIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FBCIAPAssessment_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FBCIAPAssetTable_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>AssetTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigAssetTrans</Name>
					<Field>OrigAssetTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FBCIAPAssessment_BR</Name>
			<Cardinality>OneMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>FBCIAPAssessment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>FBCIAPAssessment_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FBCIAPAssessment_BR</Name>
					<Field>FBCIAPAssessment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FBCIAPAssetTable_BR</Name>
			<Cardinality>OneMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>FBCIAPAssetTable_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>FBCIAPAssetTable_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FBCIAPAssetTable_BR</Name>
					<Field>FBCIAPAssetTable_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>