<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailImportTableSelect</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailImportTableSelect extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ImportTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailImportTable</c> table.
    /// </summary>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailImportTable</c> record if found; otherwise, an empty record.
    /// </returns>
    RetailImportTable ImportTable(boolean        update = false)
    {
        RetailImportTable      tImportTable;

        if (this.refRecId)
        {
            tImportTable.selectForUpdate(update);

            select firstonly tImportTable
                where tImportTable.RecId == this.refRecId;
        }

        return tImportTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in table <c>RetailImportTableSelect</c>.
    /// </summary>
    public void insert()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsInOtherSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>RetailImportTableSelect</c> record with the same <c>RefRecId</c> value but not in the
    /// current session.
    /// </summary>
    /// <param name="_refRecId">
    /// The <c>RefRecId</c> value of a <c>RetailImportTableSelect</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailImportTableSelect</c> record if found; otherwise, an empty record.
    /// </returns>
    static RetailImportTableSelect existsInOtherSelection(recId      _refRecId,
                                       boolean    _forUpdate = false)
    {
        RetailImportTableSelect        tImportTableSelect;
        ;

        if (_refRecId)
        {
            tImportTableSelect.selectForUpdate(_forUpdate);

            select firstonly tImportTableSelect
                where tImportTableSelect.refRecId   == _refRecId
                   && tImportTableSelect.sessionId  != sessionId();
        }
        return tImportTableSelect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>RetailImportTableSelect</c> record with the same <c>RefRecId</c> value and in the same
    /// session.
    /// </summary>
    /// <param name="_refRecId">
    /// The <c>RefRecId</c> value of a <c>RetailImportTableSelect</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailImportTableSelect</c> record if found; otherwise, an empty record.
    /// </returns>
    static RetailImportTableSelect find(recId      _refRecId,
                                     boolean    _forUpdate = false)
    {
        RetailImportTableSelect        tImportTableSelect;
        ;

        if (_refRecId)
        {
            tImportTableSelect.selectForUpdate(_forUpdate);

            select firstonly tImportTableSelect
                where tImportTableSelect.refRecId   == _refRecId
                   && tImportTableSelect.sessionId  == sessionId();
        }
        return tImportTableSelect;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260855</DeveloperDocumentation>
	<Label>@RET1256</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>sessionId</TitleField1>
	<TitleField2>refRecId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>recIdSessionIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Retail</Modules>
	<PrimaryIndex>recIdSessionIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>refRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>refRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>refRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@RET1257</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>sessionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>recIdSessionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>refRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>sessionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>