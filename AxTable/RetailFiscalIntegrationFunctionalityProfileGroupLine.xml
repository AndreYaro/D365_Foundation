<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationFunctionalityProfileGroupLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailFiscalIntegrationFunctionalityProfileGroupLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromFiscalFunctionalityProfileGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> table record from <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table.
    /// </summary>
    /// <param name = "_group">
    /// A record of <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromFiscalFunctionalityProfileGroup(RetailFiscalIntegrationFunctionalityProfileGroup _group)
    {
        this.FunctionalityProfileGroup = _group.FunctionalityProfileGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> table specified by record id.
    /// </summary>
    /// <param name = "_recId">
    /// The recId id of the <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationFunctionalityProfileGroupLine findRecId(RecId _recId, boolean _forUpdate = false)
    {
        RetailFiscalIntegrationFunctionalityProfileGroupLine groupLine;

        if (_recId)
        {
            if (_forUpdate)
            {
                groupLine.selectForUpdate(_forUpdate);
            }

            select firstonly groupLine where groupLine.RecId == _recId;
        }

        return groupLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table specified by a group line.
    /// </summary>
    /// <param name = "_connectorGroup">
    /// The group id of the <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationFunctionalityProfileGroup findGroup(RecId _connectorGroup, boolean _forUpdate = false)
    {
        RetailFiscalIntegrationFunctionalityProfileGroup connectrosGroup;

        if (_connectorGroup)
        {
            if (_forUpdate)
            {
                connectrosGroup.selectForUpdate(_forUpdate);
            }

            select firstonly connectrosGroup where connectrosGroup.RecId == _connectorGroup;
        }

        return connectrosGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>functionalProfileDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for DataAreaId field of <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table.
    /// </summary>
    /// <returns>
    /// The value of DataAreaId field.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display DataAreaId functionalProfileDataAreaId()
    {
        return RetailFiscalIntegrationFunctionalityProfile::findCrossCompany(this.FunctionalityProfile).DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>functionalProfileDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for Description field of <c>RetailFiscalIntegrationFunctionalityProfileGroup</c> table.
    /// </summary>
    /// <returns>
    /// The value of Description field.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display Description functionalProfileDescription()
    {
        return RetailFiscalIntegrationFunctionalityProfile::findCrossCompany(this.FunctionalityProfile).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add necessary conditions when fill in the <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> table fields.
    /// </summary>
    /// <param name = "_fieldId">
    /// The field id needs to check.
    /// </param>
    /// <returns>
    /// A boolean value that indicates whether the field is effective; true, effect; false, void.
    /// </returns>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret;

        switch (_fieldId)
        {
            case fieldNum(RetailFiscalIntegrationFunctionalityProfileGroupLine, FunctionalityProfile) :
                DataAreaId dataAreaId = RetailFiscalIntegrationFunctionalityProfile::findCrossCompany(this.FunctionalityProfile).DataAreaId;

                changecompany(dataAreaId)
                {
                    ret = super(_fieldId) && this.validateFunctionalityProfile(dataAreaId);
                }
                break;

            default :
                ret = super(_fieldId);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFunctionalityProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates ProfileId field in <c>RetailFiscalIntegrationFunctionalityProfileGroupLine</c> table.
    /// </summary>
    /// <param name = "_dataAreaId">
    /// The data area id to filter the record in <c>RetailFiscalIntegrationFunctionalityProfile</c>table .
    /// </param>
    /// <returns>
    /// Validate result, True, successful, otherwise, failure.
    /// </returns>
    private boolean validateFunctionalityProfile(DataAreaId _dataAreaId)
    {
        boolean ret = true;
        RetailFiscalIntegrationFunctionalityProfile functionalityProfile = RetailFiscalIntegrationFunctionalityProfile::findCrossCompany(this.FunctionalityProfile);

        // Selected functionality profiles are not allowed to belong to same connector.
        if (functionalityProfile)
        {
            RetailFiscalIntegrationFunctionalityProfile profile;
            RetailFiscalIntegrationFunctionalityProfileGroupLine profileGroupline;
            
            select firstonly crossCompany RecId from profile 
                where profile.ConnectorName == functionalityProfile.ConnectorName
                && profile.DataAreaId == _dataAreaId
                    exists join profileGroupline
                    where profileGroupline.FunctionalityProfile == profile.RecId
                    && profileGroupline.FunctionalityProfileGroup == this.FunctionalityProfileGroup;

            if (profile.RecId)
            {
                ret = checkFailed(strfmt("@RetailFiscalIntegration:ConnectorUsedInConnectorGroup", functionalityProfile.ConnectorName));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RetailFiscalIntegration:RetailFiscalIntegrationFunctionalProfileGroupLine</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<ClusteredIndex>Idx</ClusteredIndex>
	<Modules>Retail</Modules>
	<PrimaryIndex>Idx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RetailFiscalIntegrationFunctionalityProfileId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Disable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS70337</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EffectiveDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@RetailFiscalIntegration:EffectiveDate</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FunctionalityProfileGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationConnectorGroupId</ExtendedDataType>
			<Label>@RET238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FunctionalityProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationFunctionalityProfileRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Idx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FunctionalityProfileGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FunctionalityProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailFiscalIntegrationFunctionalityProfileGroup</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailFiscalIntegrationFunctionalityProfileGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FunctionalityProfileGroup</Name>
					<Field>FunctionalityProfileGroup</Field>
					<RelatedField>FunctionalityProfileGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailFiscalIntegrationFunctionalityProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailFiscalIntegrationFunctionalityProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FunctionalityProfile</Name>
					<Field>FunctionalityProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>