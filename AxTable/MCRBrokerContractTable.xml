<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRBrokerContractTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRBrokerContractTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Currency = CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            //To date must be greater than from date.
            if (this.ToDate && this.ToDate < this.FromDate)
            {
                ret = checkFailed("@MCR27189");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>MCRBrokerContractTable</c> record using the passed contract ID.
    /// </summary>
    /// <param name="_contractID">
    /// The contract ID of the <c>MCRBrokerContractTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>MCRBrokerContractTable</c> table record; otherwise, an empty record.
    /// </returns>
    public static MCRBrokerContractTable find(MCRBrokerContractID _contractID,
                                              boolean _forUpdate = false)
    {
        MCRBrokerContractTable mcrBrokerContractTable;
        if (_contractID)
        {
            if (_forUpdate)
            {
                mcrBrokerContractTable.selectForUpdate(true);
            }

            select firstonly mcrBrokerContractTable
                where mcrBrokerContractTable.ContractID == _contractID;
        }
        return mcrBrokerContractTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrLookupContractByBroker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens a lookup for broker contracts that displays a uniue list of contract ID's.
    /// </summary>
    /// <param name="_callingControl">
    /// The <c>FormStringControl</c> control that the lookup should attach to.
    /// </param>
    /// <param name="_brokerID">
    /// The broker account number used to filter the lookup.
    /// </param>
    public static void mcrLookupContractByBroker(FormControl             _callingControl,
                                                 MCRBrokerVendAccount    _brokerID)
    {
        SysTableLookup          localSysTableLookup;
        Query                   localQuery;
        QueryBuildDataSource    qbds_BrokerContract;

        localSysTableLookup = SysTableLookup::newParameters(tableNum(MCRBrokerContractTable), _callingControl);
        localSysTableLookup.addLookupfield(fieldNum(MCRBrokerContractTable, ContractID));
        localSysTableLookup.addLookupfield(fieldNum(MCRBrokerContractTable, Description));

        localQuery = new Query();
        qbds_BrokerContract = localQuery.addDataSource(tableNum(MCRBrokerContractTable));
        qbds_BrokerContract.addRange(fieldNum(MCRBrokerContractTable, BrokerID))
            .value(SysQuery::value(_brokerID));

        // Sort by MCRBrokerContractID descending.
        qbds_BrokerContract.addSortField(fieldNum(MCRBrokerContractTable, ContractID), SortOrder::Descending);

        localSysTableLookup.parmQuery(localQuery);
        localSysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBrokerContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the passed broker contract is valid.
    /// </summary>
    /// <param name="_contract">
    /// The contract ID that is being validated.
    /// </param>
    /// <param name="_showWarning">
    /// A <c>boolean</c> value that determines whether or not to show warnings.
    /// </param>
    /// <returns>
    /// true if the contract is valid; otherwise, false.
    /// </returns>
    public static boolean validateBrokerContract(MCRBrokerContractID _contract,
                                                 boolean _showWarning = false)
    {
        MCRBrokerContractTable mcrBrokerContractTable;
        boolean retVal = true;
        date todaysDate;

        if (_contract)
        {
            mcrBrokerContractTable = MCRBrokerContractTable::find(_contract);
            if (mcrBrokerContractTable)
            {
                if (mcrBrokerContractTable.Status != MCRBrokerContractStatus::Approved)
                {
                    if (_showWarning)
                    {
                        warning(strFmt("@MCR34091",_contract));
                    }
                    retVal = false;
                }
                todaysDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                if ((mcrBrokerContractTable.FromDate > todaysDate
                     && mcrBrokerContractTable.FromDate)
                        || (mcrBrokerContractTable.ToDate < todaysDate
                            && mcrBrokerContractTable.ToDate))
                {
                    if (_showWarning)
                    {
                        warning(strFmt("@MCR34092",_contract));
                    }
                    retVal = false;
                }
            }
        }
        return retVal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeBroker</ConfigurationKey>
	<DeveloperDocumentation>@MCR33933</DeveloperDocumentation>
	<Label>@MCR33933</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>ContractID</TitleField1>
	<TitleField2>MiscChargeCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ContractID</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>ContractID</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>MCRBrokerAccrual</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>MCRBrokerAccrual</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>MCRBrokerContractLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>MCRBrokerContractLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BrokerID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GridGrp</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BrokerID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BrokerID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRBrokerVendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRBrokerContractID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MiscChargeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRBrokerContractStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRAmountorPercent</ExtendedDataType>
			<Label>@SYS23652</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValueType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRBrokerValueType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ContractID</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SelectIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<SourceEDT>MarkupCurrencyCode</SourceEDT>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MarkupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>MarkupTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRBrokerContractTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ModuleType_Extern</Name>
					<RelatedField>ModuleType</RelatedField>
					<ValueStr>MarkupModuleType::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MiscChargeCode</Name>
					<Field>MiscChargeCode</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BrokerID</Name>
					<SourceEDT>MCRBrokerVendAccount</SourceEDT>
					<Field>BrokerID</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>