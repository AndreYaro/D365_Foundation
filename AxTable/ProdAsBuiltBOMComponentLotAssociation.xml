<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdAsBuiltBOMComponentLotAssociation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdAsBuiltBOMComponentLotAssociation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findComponentLot</Name>
				<Source><![CDATA[
    internal ProdBom findComponentLot(boolean _forUpdate = false)
    {
        ProdBom componentLot;

        componentLot.selectForUpdate(_forUpdate);

        select firstonly componentLot
            where componentLot.ProdId        == this.ReferenceId
               && componentLot.ItemId        == this.ItemId
               && componentLot.InventTransId == this.InventTransId;

        return componentLot;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPickingListLine</Name>
				<Source><![CDATA[
    internal ProdJournalBOM findPickingListLine(boolean _forUpdate = false)
    {
        ProdJournalBOM pickingListLine;

        pickingListLine.selectForUpdate(_forUpdate);

        select firstonly pickingListLine
            where pickingListLine.ProdId                == this.ReferenceId
               && pickingListLine.ItemId                == this.ItemId
               && pickingListLine.InventTransChildRefId == this.InventTransChildRefId
               && pickingListLine.InventTransChildType  == this.InventTransChildType;

        return pickingListLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickComponent</Name>
				<Source><![CDATA[
    internal void pickComponent()
    {
        if (this.IsCompleted)
        {
            return;
        }

        ProdAsBuiltBOMComponentLotAssociationOnhandController::construct(this).pick();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickedQuantity</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethod(true)]
    internal display InventQty pickedQuantity()
    {
        if (!this.InventConsumptionQty)
        {
            return 0;
        }

        return ProdAsBuiltBOMComponentLotAssociationOnhandController::construct(this).picked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProdAsBuiltBOMComponentLotAssociation, InventTransId):
                if (this.InventTransId)
                {
                    ProdBOM material = ProdBOM::findTransId(this.InventTransId);
                    if (!material.RecId)
                    {
                        return;
                    }

                    this.ReferenceId = material.ProdId;
                    this.ItemId = material.ItemId;
                    this.SiteId = InventDim::find(material.InventDimId).InventSiteId;
                    this.InventUnitId = material.UnitId;
                    this.VendorId = material.VendId;
                    this.Position = material.Position;
                    this.initInternal();
                }
                break;
            case fieldNum(ProdAsBuiltBOMComponentLotAssociation, SerialNumberId):
            case fieldNum(ProdAsBuiltBOMComponentLotAssociation, BatchNumberId):
                this.initInventDim();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInternal</Name>
				<Source><![CDATA[
    internal void initInternal()
    {
        this.SequenceId = (this.SequenceId != 0) ? this.SequenceId
                                                 : ProdAsBuiltBOMComponentLotAssociation::nextSequenceId(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventDim</Name>
				<Source><![CDATA[
    internal void initInventDim()
    {
        if (this.InventTransId)
        {
            InventDim inventDimLocal;
            ProdBOM componentLot = ProdBOM::findTransId(this.InventTransId);

            inventDimLocal.initFromInventDim(InventDim::find(componentLot.InventDimId));
            inventDimLocal.InventBatchId     = this.BatchNumberId;
            inventDimLocal.InventSerialId    = this.SerialNumberId;

            this.InventDimId = InventDim::findOrCreate(inventDimLocal).InventDimId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    internal InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPickingListLineFromComponentLotAssociation</Name>
				<Source><![CDATA[
    internal void initPickingListLineFromComponentLotAssociation(ProdBOM _materialLot, ProdJournalBOM _pickingListLineAssociation, ProdJournalBOM _pickingListLineEstimation)
    {
        _pickingListLineAssociation.InventDimId        = this.InventDimId;
        _pickingListLineAssociation.InventConsump      = this.InventConsumptionQty;
        _pickingListLineAssociation.InventProposal     = this.InventConsumptionQty;
        _pickingListLineAssociation.BomConsump         = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_materialLot.ItemId,
                                                                                            _materialLot.InventDimId,
                                                                                            this.InventConsumptionQty,
                                                                                            InventTableModule::find(_materialLot.ItemId, ModuleInventPurchSales::Invent).UnitId,
                                                                                            _materialLot.UnitId,
                                                                                            NoYes::Yes);
        _pickingListLineAssociation.BomProposal        = _pickingListLineAssociation.BomConsump;

        // deduct from ProdBOMCalc estimation based on flushing principle to pick the remaining quantity as regular consumption
        _pickingListLineEstimation.InventConsump    -= _pickingListLineAssociation.InventConsump;
        _pickingListLineEstimation.InventProposal   -= _pickingListLineAssociation.InventProposal;
        _pickingListLineEstimation.BOMConsump       -= _pickingListLineAssociation.BomConsump;
        _pickingListLineEstimation.BomProposal      -= _pickingListLineAssociation.BomProposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromPickingListLine</Name>
				<Source><![CDATA[
    internal void updateFromPickingListLine(ProdJournalBOM _pickingListLine)
    {
        this.selectForUpdate(true);
        this.PickingListJournalId  = _pickingListLine.JournalId;
        this.InventTransChildRefId = _pickingListLine.InventTransChildRefId;
        this.InventTransChildType  = _pickingListLine.InventTransChildType;
        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteDependent</Name>
				<Source><![CDATA[
    internal void deleteDependent()
    {
        if (this.SerialNumberId)
        {
            InventTrackingRegisterTrans inventTrackingRegisterTrans;
            InventDim                   inventDim;
      
            delete_from InventTrackingRegisterTrans
                where inventTrackingRegisterTrans.InventTransOrigin == InventTransOrigin::findByInventTransId(this.InventTransId).RecId
                exists join inventDim
                where inventDim.InventDimId    == inventTrackingRegisterTrans.InventDimId
                   && inventDim.InventSerialId == this.SerialNumberId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssociation</Name>
				<Source><![CDATA[
    internal static ProdAsBuiltBOMComponentLotAssociation findAssociation(InventTransRefId      _referenceId,
                                                                          InventTransId         _inventTransId,
                                                                          ItemId                _itemId,
                                                                          InventDim             _inventDim,
                                                                          ProdAsBuiltBOMMatchId _matchId = '',
                                                                          boolean               _forUpdate = false)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        componentLotAssociation.selectForUpdate(_forUpdate);

        select componentLotAssociation
            where componentLotAssociation.ReferenceId           == _referenceId
               && componentLotAssociation.InventTransId         == _inventTransId
               && componentLotAssociation.ItemId                == _itemId
               && (!_matchId || componentLotAssociation.MatchId == _matchId)
               && (!_inventDim.InventSerialId || componentLotAssociation.SerialNumberId == _inventDim.InventSerialId)
               && (!_inventDim.InventBatchId  || componentLotAssociation.BatchNumberId  == _inventDim.InventBatchId);

        return componentLotAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssociationByMatchId</Name>
				<Source><![CDATA[
    internal static ProdAsBuiltBOMComponentLotAssociation findAssociationByMatchId(ProdAsBuiltBOMMatchId _matchId, boolean _forUpdate = false)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        componentLotAssociation.selectForUpdate(_forUpdate);

        select componentLotAssociation
            where componentLotAssociation.MatchId == _matchId;

        return componentLotAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssociationMatchByProductDimensions</Name>
				<Source><![CDATA[
    internal static ProdAsBuiltBOMComponentLotAssociation findAssociationMatchByProductDimensions(InventTransRefId      _referenceId,
                                                                                                  InventTransId         _componentInventTransId,
                                                                                                  ItemId                _componentItemId,
                                                                                                  InventDim             _componentInventDim,
                                                                                                  InventTransId         _productInventTransId,
                                                                                                  ItemId                _producttItemId,
                                                                                                  InventDim             _productInventDim,
                                                                                                  boolean               _forUpdate = false)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;
        ProdAsBuiltBOMProductLotAssociation   productLotAssociation;

        componentLotAssociation.selectForUpdate(_forUpdate);

        select componentLotAssociation
            where componentLotAssociation.ReferenceId           == _referenceId
               && componentLotAssociation.InventTransId         == _componentInventTransId
               && componentLotAssociation.ItemId                == _componentItemId
               && componentLotAssociation.SerialNumberId        == _componentInventDim.InventSerialId
               && componentLotAssociation.BatchNumberId         == _componentInventDim.InventBatchId
            exists join productLotAssociation
               where productLotAssociation.ReferenceId          == componentLotAssociation.ReferenceId
                  && productLotAssociation.InventTransId        == _productInventTransId
                  && productLotAssociation.ItemId               == _producttItemId
                  && productLotAssociation.SerialNumberId       == _productInventDim.InventSerialId
                  && productLotAssociation.BatchNumberId        == _productInventDim.InventBatchId 
                  && productLotAssociation.MatchId              == componentLotAssociation.MatchId;

        return componentLotAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRecordsetFromPickingListJournalLine</Name>
				<Source><![CDATA[
    internal static void updateRecordsetFromPickingListJournalLine(ProdJournalBom _pickingListJournalLine)
    {
        if (ProdAsBuiltBOMComponentLotAssociation::skipUpdateFromPickingListJournalLine(_pickingListJournalLine))
        {
            return;
        }

        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        update_recordset componentLotAssociation
            setting PickingListJournalId  = _pickingListJournalLine.JournalId,
                    InventTransChildRefId = _pickingListJournalLine.InventTransChildRefId,
                    InventTransChildType  = _pickingListJournalLine.InventTransChildType
            where componentLotAssociation.ReferenceId    == _pickingListJournalLine.ProdId
                && componentLotAssociation.InventTransId == _pickingListJournalLine.InventTransId
                && !componentLotAssociation.IsCompleted
                && !componentLotAssociation.PickingListJournalId
                && !componentLotAssociation.InventTransChildRefId
                && !componentLotAssociation.InventTransChildType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipUpdateFromPickingListJournalLine</Name>
				<Source><![CDATA[
    private static boolean skipUpdateFromPickingListJournalLine(ProdJournalBom _pickingListJournalLine)
    {
        if (!ProdAsBuiltBOMResolveRAFLocationLPFlight::instance().isEnabled())
        {
            return false;
        }

        if (_pickingListJournalLine.InventReturnFlag)
        {
            // skip for reverse action.
            return true;
        }

        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;
        select firstonly RecId from componentLotAssociation
            where componentLotAssociation.PickingListJournalId == _pickingListJournalLine.JournalId;
        
        if (componentLotAssociation.RecId)
        {
            // auto-created picking list journal => componentLotAssociation has a stamp already.
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>complete</Name>
				<Source><![CDATA[
    internal static void complete(ProdId _productionOrderId, JournalId _journalId)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        update_recordset componentLotAssociation
            setting IsCompleted = true
            where componentLotAssociation.ReferenceId          == _productionOrderId
               && componentLotAssociation.PickingListJournalId == _journalId
               && !componentLotAssociation.IsCompleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearProdPickListJournalId</Name>
				<Source><![CDATA[
    internal static void clearProdPickListJournalId(ProdId _productionOrderId, JournalId _journalId)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        update_recordset componentLotAssociation
            setting PickingListJournalId   = '', InventTransChildRefId = '', InventTransChildType = 0
            where componentLotAssociation.ReferenceId          == _productionOrderId
               && componentLotAssociation.PickingListJournalId == _journalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearProdPickListJournalLine</Name>
				<Source><![CDATA[
    internal static void clearProdPickListJournalLine(ProdJournalBom _pickingListJournalLine)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        update_recordset componentLotAssociation
            setting PickingListJournalId = '', InventTransChildRefId = '', InventTransChildType = 0
            where componentLotAssociation.ReferenceId            == _pickingListJournalLine.ProdId
                && componentLotAssociation.InventTransId         == _pickingListJournalLine.InventTransId
                && componentLotAssociation.PickingListJournalId  == _pickingListJournalLine.JournalId
                && componentLotAssociation.InventTransChildRefId == _pickingListJournalLine.InventTransChildRefId
                && componentLotAssociation.InventTransChildType  == _pickingListJournalLine.InventTransChildType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetProdPickListJournals</Name>
				<Source><![CDATA[
    internal static void resetProdPickListJournals(ProdId _productionOrderId)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;

        update_recordset componentLotAssociation
            setting PickingListJournalId = '', InventTransChildRefId = '', InventTransChildType = 0, IsCompleted = false
            where componentLotAssociation.ReferenceId == _productionOrderId
               && componentLotAssociation.PickingListJournalId != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextSequenceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next sequence Id for the component lot association within a production order context.
    /// </summary>
    /// <param name="_componentLotAssociation">
    ///    An instance of <c>ProdAsBuiltBOMComponentLotAssociation</c> table buffer.
    /// </param>
    /// <returns>
    /// The next sequence Id.
    /// </returns>
    internal static BOMSequenceId nextSequenceId(ProdAsBuiltBOMComponentLotAssociation _componentLotAssociation)
    {
        ProdAsBuiltBOMComponentLotAssociation componentLotAssociation;
        BOMSequenceId currentSequenceId = 0;

        select maxof(SequenceId) from componentLotAssociation
            where componentLotAssociation.ReferenceId == _componentLotAssociation.ReferenceId;

        if (componentLotAssociation.SequenceId)
        {
            currentSequenceId = componentLotAssociation.SequenceId;
        }

        return currentSequenceId + 1;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@SCM:TrackedComponentsComponentLotAssociationTable</DeveloperDocumentation>
	<Label>@SCM:TrackedComponentsLotAssociations</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ReferenceId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<AllowArchival>Yes</AllowArchival>
	<AllowRetention>Yes</AllowRetention>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ComponentLotAssociationIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>ProductionControl</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SerialNumberId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchNumberId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Position</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCompleted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventConsumptionQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransChildRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransChildType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PickingListJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MatchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAsBuiltBOMMatchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReferenceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransRefId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<RelationContext>ProductionBOM</RelationContext>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SerialNumberId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSerialId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BatchNumberId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBatchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Position</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMPosition</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCompleted</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS55773</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventConsumptionQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS853</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransChildRefId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransChildRefId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventTransChildType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransChildType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PickingListJournalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdJournalIdBOM</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceId</Name>
			<ExtendedDataType>BOMSequenceId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ComponentLotAssociationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReferenceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SequenceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TrackingDimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SerialNumberId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchNumberId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MatchIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MatchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BatchNumberId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventBatch</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchNumberId</Name>
					<Field>BatchNumberId</Field>
					<RelatedField>inventBatchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SerialNumberId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventSerial</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SerialNumberId</Name>
					<Field>SerialNumberId</Field>
					<RelatedField>InventSerialId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ItemId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProductLotAssociation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProdAsBuiltBOMProductLotAssociation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MatchId</Name>
					<Field>MatchId</Field>
					<RelatedField>MatchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SiteId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SiteId</Name>
					<Field>SiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventUnitId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventUnitId</Name>
					<Field>InventUnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProductionBOM</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EntityRelationshipRole>@SYS123434</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProdBOM</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendorId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorId</Name>
					<Field>VendorId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>