<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCTableConstraintGlobalColumnDef</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PCTableConstraintGlobalColumnDef extends PCTableConstraintColumnDefinition
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a product configuration model visitor.
    /// </summary>
    /// <param name="_visitor">
    ///  A product configuration model visitor.
    /// </param>
    public void accept(PCModelVisitor _visitor)
    {
        _visitor.visitStart(this);
        _visitor.visitEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        PCTableConstraintColumnNameValidator columnNameValidator = PCTableConstraintColumnNameValidator::construct();

        ret = super();

        if (!columnNameValidator.validate(this.Name))
        {
            ret = checkFailed("@SYS342651");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a record of the <c>PCTableConstraintGlobalColumnDef</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return (PCTableConstraintGlobalColumnDef::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PCTableConstraintGlobalColumnDef</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>PCTableConstraintGlobalColumnDef</c> table; otherwise, an empty record.
    /// </returns>
    public static PCTableConstraintGlobalColumnDef find(RefRecId _recId, boolean _forupdate = false)
    {
        PCTableConstraintGlobalColumnDef record;

        if (!_recId)
        {
            return record;
        }
        record.selectForUpdate(_forupdate);
        select firstonly record where record.RecId == _recId;
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasContent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a constraint column of a user defined table has associated content.
    /// </summary>
    /// <param name="_tableConstraintColumn">
    ///    The record ID of a table constraint column.
    /// </param>
    /// <returns>
    ///    The <c>NoYes::Yes</c> enumeration value if the constraint column has content; otherwise, the
    ///    <c>NoYes::No</c> enumeration value.
    /// </returns>
    public static NoYes hasContent(RefRecId _tableConstraintColumn)
    {
        PCTableConstraintCell   cell;
        NoYes                   hasContent = NoYes::No;

        select firstonly RecId from cell
            where cell.TableConstraintColumnDefinition == _tableConstraintColumn;

        if (cell.RecId != 0)
        {
            hasContent = NoYes::Yes;
        }

        return hasContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PC</ConfigurationKey>
	<DeveloperDocumentation>@SYS323993</DeveloperDocumentation>
	<Label>@SYS191261</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RecId</TitleField1>
	<TitleField2>TableId</TitleField2>
	<Extends>PCTableConstraintColumnDefinition</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PCTableConstraintCell</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PCTableConstraintCell</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields />
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TableConstraintColumnDefinition_Global</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PCTableConstraintColumnDefinition</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TableConstraintColumn</RelatedTableRole>
			<RelationshipType>Specialization</RelationshipType>
			<Role>UserDefinedTableConstraintColumnDefinition</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>