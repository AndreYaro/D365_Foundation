<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqEventProcessingUsedEvents</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqEventProcessingUsedEvents extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds the specified pegging event to be processed during a batch job.
    /// </summary>
    /// <param name="_common">
    ///     A record of the <c>ReqPeggingEvent</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void addEvent(ReqPeggingEvent _common)
    {
        ReqEventProcessingUsedEvents buf;

        ttsBegin;
        buf.ReqPeggingEvent = _common.RecId;
        buf.SessionId = sessionId();
        buf.doInsert();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearSession</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Clears all batch events of the current session.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void clearSession()
    {
        ReqEventProcessingUsedEvents buf;

        ttsBegin;
        delete_from buf where buf.SessionId == sessionId();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4003111</DeveloperDocumentation>
	<Label>@SYS4003110</Label>
	<TitleField1>SessionId</TitleField1>
	<TitleField2>ReqPeggingEvent</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>ReqPeggingEventIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqPeggingEvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqPeggingEvent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Events</Name>
			<Label>@SYS312644</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqPeggingEvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReqPeggingEvent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SessionId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReqPeggingEventIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReqPeggingEvent</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPeggingEvent</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ReqPeggingEvent</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReqPeggingEvent</Name>
					<Field>ReqPeggingEvent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>