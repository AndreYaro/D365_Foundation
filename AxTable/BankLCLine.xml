<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class BankLCLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBankDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Bank document type of the Letter of Credit line.
    /// </summary>
    /// <returns>
    /// The Bank document type.
    /// </returns>
    public BankDocumentType getBankDocumentType()
    {
        return this.getBankLC().getBankDocumentType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankLC</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>BankLC</c> record that is related to the <c>BankLCLine</c> record.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>BankLC</c> table; otherwise, an empty record.
    /// </returns>
    public BankLC getBankLC(boolean _forUpdate = false)
    {
        return BankLC::find(this.BankLC, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextShipmentLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the next shipment line number for the letter of credit.
    /// </summary>
    /// <returns>
    ///    The next shipment line number.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The method was not called within a transaction.
    /// </exception>
    private BankLCShipmentLineNum getNextShipmentLineNum()
    {
        BankLCLine bankLCLineLocal;

        if (appl.ttsLevel() == 0)
        {
            throw error (Error::wrongUseOfFunction(funcname()));
        }

        select maxof(LineNum) from bankLCLineLocal
            where bankLCLineLocal.BankLC == this.BankLC;

        return bankLCLineLocal.LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initShipmentLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an instance of the <c>BankLCLine</c> class.
    /// </summary>
    /// <param name="_bankLCRefRecId">
    ///    The record ID of a letter of credit.
    /// </param>
    /// <param name="_defaultDeliveryDate">
    ///    The default delivery date.
    /// </param>
    /// <param name="_amount">
    ///    The default shipment amount.
    /// </param>
    public void initShipmentLine(
        BankLCRefRecId  _bankLCRefRecId,
        TransDate       _defaultDeliveryDate,
        AmountCur       _amount)
    {
        TransDateTime expectedDeliveryDateTime;

        this.initValue();

        expectedDeliveryDateTime = DateTimeUtil::newDateTime(
            _defaultDeliveryDate,
            0,
            DateTimeUtil::getUserPreferredTimeZone());

        this.BankLC                  = _bankLCRefRecId;
        this.ActualMaturityDateTime  = expectedDeliveryDateTime;
        this.ShipmentAmountCur       = _amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        this.LineNum = this.getNextShipmentLineNum();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdateInvoiceAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the <c>BankLCLine</c> record can update an invoice.
    /// </summary>
    /// <returns>
    ///    true if the <c>BankLCLine</c> record can update an invoice; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method should be implemented by a subtable.
    /// </remarks>
    public boolean isUpdateInvoiceAllowed()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdatePackingslipAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the <c>BankLCLine</c> record can update a packing slip.
    /// </summary>
    /// <returns>
    ///    true if the <c>BankLCLine</c> record can update a packing slip; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method should be implemented by a subtable.
    /// </remarks>
    public boolean isUpdatePackingslipAllowed()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified <c>BankLCLine</c> record.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BankLCLine</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankLCLine</c> table; otherwise, an empty record.
    /// </returns>
    public static BankLCLine find(
        BankLCLineRefRecId _recId,
        boolean            _forUpdate = false)
    {
        BankLCLine bankLCLineLocal;

        if (_recId)
        {
            bankLCLineLocal.selectForUpdate(_forUpdate);

            select firstonly bankLCLineLocal
                where bankLCLineLocal.RecId == _recId;
        }

        return bankLCLineLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTableAndLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>BankLCLine</c> record specified by a <c>BankLC</c> record and shipment line number
    /// </summary>
    /// <param name="_bankLCRefRecId">
    ///    The record ID of the <c>BankLC</c> record.
    /// </param>
    /// <param name="_bankLCShipmentLineNum">
    ///    The shipment line number.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>BankLCLine</c> table; otherwise, an empty record.
    /// </returns>
    public static BankLCLine findByTableAndLineNum(
        BankLCRefRecId        _bankLCRefRecId,
        BankLCShipmentLineNum _bankLCShipmentLineNum,
        boolean               _forUpdate = false)
    {
        BankLCLine bankLCLineLocal;

        if (_bankLCRefRecId
            && _bankLCShipmentLineNum)
        {
            bankLCLineLocal.selectForUpdate(_forUpdate);

            select firstonly bankLCLineLocal
                where bankLCLineLocal.BankLC   == _bankLCRefRecId
                    && bankLCLineLocal.LineNum == _bankLCShipmentLineNum;
        }

        return bankLCLineLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankLCToleranceAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the amount of the tolerance.
    /// </summary>
    /// <returns>
    ///    The tolerance amount.
    /// </returns>
    public AmountCur getBankLCToleranceAmountCur()
    {
        BankLCToleranceAmountCur bankLCToleranceAmountCur;

        BankLC bankLC = this.getBankLC();

        if (bankLC.ToleranceAmountCur)
        {
            bankLCToleranceAmountCur = abs(bankLC.ToleranceAmountCur);
        }

        if (bankLC.TolerancePercentage)
        {
            bankLCToleranceAmountCur = CurrencyExchangeHelper::amount(abs(bankLC.getTotalOrderAmount() * (bankLC.TolerancePercentage/100)), bankLC.getCurrencyCode());
        }

        return bankLCToleranceAmountCur;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS316215</DeveloperDocumentation>
	<FormRef>BankLCImport</FormRef>
	<Label>@SYS316218</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>BankLC</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<Abstract>Yes</Abstract>
	<CacheLookup>NotInTTS</CacheLookup>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>Bank</Modules>
	<ReplacementKey>BankLCIdx</ReplacementKey>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankLC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActualMaturityDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankLC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankLC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActualMaturityDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LookupIdentification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ActualMaturityDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCActualMaturityDateTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankLC</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BankLCRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCShipmentIRT</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCShipmentLineNum</ExtendedDataType>
			<HelpText>@CashManagement:LineNum_HelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShipmentAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCShipmentAmountCur</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankLCIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BankLC</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankLC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankLC</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BankLC</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankLC_BankLCLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankLC</Name>
					<Field>BankLC</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>