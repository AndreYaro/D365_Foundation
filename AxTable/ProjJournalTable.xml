<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjJournalTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkCategoryId</Name>
				<Source><![CDATA[
    public boolean checkCategoryId()
    {
        ProjCategory    projCategory;
        boolean         ret = true;

        if (this.CategoryId)
        {
            projCategory    = ProjCategory::find(this.CategoryId);
            switch (this.JournalType)
            {
                case ProjJournalType::Hour :
                if (projCategory.CategoryType    != ProjCategoryType::Hour)
                    {
                        ret = checkFailed(strFmt("@SYS54897",this.CategoryId));
                    }

                    ret = ret && projCategory.validateIfInactiveAllowed();
                    break;

                case ProjJournalType::Revenue:
                if (projCategory.CategoryType    != ProjCategoryType::Revenue)
                    {
                        ret = checkFailed(strFmt("@SYS54897",this.CategoryId));
                    }

                    if (ret && (projCategory.SetupEstimate || projCategory.SetupSubscription || projCategory.PSACustPaymentRetention))
                    {
                        ret = checkFailed("@SYS88806");
                    }

                    ret = ret && projCategory.validateIfInactiveAllowed();
                    break;
            }

            if (ret && projCategory.psaIndirectComponent)
            {
                ret = checkFailed("@PSA11059");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjId</Name>
				<Source><![CDATA[
    public boolean checkProjId()
    {
        boolean ret = true;
        ProjTable projTable;

        if (this.ProjId)
        {
            projTable = ProjTable::find(this.ProjId);

            switch (this.JournalType)
            {
                case ProjJournalType::Hour:
                if (! projTable.status().checkRule(ProjStatusRule::CreateJournal))
                    {
                        ret = checkFailed(strFmt("@SYS135526",projTable.Stage()));
                    }
                    if (ret && ! projTable.status().activeInTree())
                    {
                        ret = checkFailed(strFmt("@SYS96612",this.ProjId));
                    }
                    break;

                case ProjJournalType::Revenue:
                if (! projTable.status().checkRule(ProjStatusRule::CreateJournal))
                    {
                        ret = checkFailed(strFmt("@SYS135526",projTable.Stage()));
                    }
                    // checkFeeJournalAccess in form ProjJournalTable's Data Source takes care of this.
                    if (ret && ! projTable.status().activeInTree())
                    {
                        ret = checkFailed(strFmt("@SYS96612",this.ProjId));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkResource</Name>
				<Source><![CDATA[
    public boolean checkResource()
    {
        boolean ret = true;
        HcmWorkerRecId worker;

        if (this.Resource)
        {
            switch (this.JournalType)
            {
                case ProjJournalType::Hour   :
                case ProjJournalType::Revenue:
                    worker = ResourceFacade::getWorker(this.Resource);
                    if (worker && HcmWorker::find(worker).workerStatus() == HcmWorkerStatus::Terminated && !ProjParameters::find().ShowInactiveEmployees)
                    {
                        ret = checkFailed("@SYS39651");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberSequenceTable</Name>
				<Source><![CDATA[
    public NumberSequenceTable getNumberSequenceTable(boolean _forUpdate = false)
    {
        return NumberSequenceTable::find(this.VoucherNumberSequenceTable, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjJournalName</Name>
				<Source><![CDATA[
    public void initFromProjJournalName(ProjJournalName _projJournalName)
    {
        JournalTableData::newTable(this).initFromJournalName(_projJournalName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.PostPayroll = NoYes::Yes;
        this.PostPL = NoYes::Yes;
        this.PostWIP = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ProjJournalTrans projJournalTrans;
        ttsbegin;

        if (!this.JournalId)
        {
            this.JournalId = JournalTableData::newTable(this).nextJournalId();
        }

        if (this.StatusNameId)
        {
            this.setStatus(NextPrevious::Next);
        }

        select count(RecId), sum(Qty) from projJournalTrans
            where projJournalTrans.JournalId == this.JournalId;
            this.NumOfLines += int642int(projJournalTrans.RecId);
            this.ProjQty += projJournalTrans.Qty;

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalStatusLine</Name>
				<Source><![CDATA[
    public ProjJournalStatusLine journalStatusLine()
    {
        ProjJournalStatusLine   journalStatus = ProjJournalStatusLine::find(this.StatusNameId, this.Status);

        return journalStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatus</Name>
				<Source><![CDATA[
    public void setStatus(NextPrevious nextPrevious)
    {
        ProjJournalStatusType currentStatus = this.Status;

        if (nextPrevious == NextPrevious::Next)
        {
            this.Status = ProjJournalStatusLine::statusNxt(this.StatusNameId, this.Status);
        }
        else
        {
            this.Status = ProjJournalStatusLine::statusPrev(this.StatusNameId, this.Status);
        }

        ProjJournalStatusLine journalStatusLine = this.journalStatusLine();

        if (journalStatusLine.GroupIdStatus  && !isSystemAdministrator())
        {
            using (ProjJournalTableParameters insertParameters = ProjJournalTableParameters::parmStatusNameId(this.StatusNameId))
            {
                if (journalStatusLine.AllowEdit && !ProjJournalTable::validateUserAccessForCreatingProjectJournal())
                {
                    this.Status = currentStatus;
                    throw error(strFmt("@Proj:CurrentUserHasNoAccessToCreateJournal", curUserId()));
                }

                if (journalStatusLine.Check && !ProjJournalTable::validateUserAccessForReviewingProjectJournal())
                {
                    this.Status = currentStatus;
                    throw error(strFmt("@Proj:CurrentUserHasNoAccessToReviewJournal", curUserId()));
                }

                if (journalStatusLine.PostingReady && !ProjJournalTable::validateUserAccessForApprovingProjectJournal())
                {
                    this.Status = currentStatus;
                    throw error(strFmt("@Proj:CurrentUserHasNoAccessToApproveJournal", curUserId()));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ProjJournalStatusType origStatusNameId    = this.orig().StatusNameId;

        ttsbegin;

        super();

        if (this.StatusNameId != origStatusNameId)
        {
            this.Status = '';
            this.setStatus(NextPrevious::Next);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean         ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(ProjJournalTable, ProjId):
                    ret = this.checkProjId();
                    break;

                case fieldNum(ProjJournalTable, CategoryId):
                    ret = this.checkCategoryId();
                    break;

                case fieldNum(ProjJournalTable, Resource):
                    ret = this.checkResource() && ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite(ProjJournalTableData  _journalTableData = JournalTableData::newTable(this))
    {
        ProjCategory        projCategory;
        ProjValCheckTrans   projValCheckTrans = new ProjValCheckTrans();
        boolean             ret = true;

        ret = _journalTableData.validateWritePre(ret);

        ret = super() && ret;

        ret = ret && this.checkProjId() && this.checkCategoryId() && this.checkResource();

        if (ret)
        {
            if (this.CategoryId)
            {
                projCategory=ProjCategory::find(this.CategoryId);

                if (projCategory.RecId && projCategory.ProjCategoryEmplOption == ProjCategoryEmplOption::Never && this.Resource)
                {
                    ret = checkFailed("@SYS75858");
                }
            }
        }

        if (ret)
        {
            ret = projValCheckTrans.validateMandatory(this);
        }

        ret = ret && ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(ProjJournalId projJournalId)
    {
        return projJournalId && (select firstonly projJournalTable
            where projJournalTable.JournalId == projJournalId
           ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjJournalTable find(JournalId _journalId, boolean _forupdate = false)
    {
        ProjJournalTable journalTable = null;

        journalTable.selectForUpdate(_forupdate);

        if (_journalId)
        {
            select firstonly journalTable
                where journalTable.JournalId == _journalId;
        }

        return journalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the total number of lines, quantity, and sales price on the header record according to the
    /// lines that are related to this record.
    /// </summary>
    /// <param name="_projJournalTable">
    /// The table buffer on which this method works.
    /// </param>
    public static void initTotal(ProjJournalTable _projJournalTable)
    {
        ProjJournalTrans                    projJournalTrans;
        ProjBegBalJournalTrans_CostSales    projBegBalJournalTrans_CostSales;
        ProjBegBalJournalTrans_Fee          projBegBalJournalTrans_Fee;
        ProjBegBalJournalTrans_OnAcc        projBegBalJournalTrans_OnAcc;

        _projJournalTable.NumOfLines     = 0;
        _projJournalTable.ProjQty        = 0;
        _projJournalTable.SalesPrice     = 0;

        if (_projJournalTable.JournalType != ProjJournalType::BegBalance)
        {
            while select count(RecId), sum(Qty), sum(SalesPrice), CurrencyId from projJournalTrans
                group by projJournalTrans.CurrencyId
                where projJournalTrans.JournalId == _projJournalTable.JournalId
            {
                _projJournalTable.NumOfLines += int642int(projJournalTrans.RecId);
                _projJournalTable.ProjQty += projJournalTrans.Qty;
                _projJournalTable.SalesPrice += ExchangeRateHelper::mstPrice(projJournalTrans.SalesPrice, projJournalTrans.CurrencyId);
            }
        }
        else
        {
            while select count(RecId), sum(Quantity), sum(SalesPrice), ProjSalesCurrencyId from projBegBalJournalTrans_CostSales
                group by projBegBalJournalTrans_CostSales.ProjSalesCurrencyId
                where projBegBalJournalTrans_CostSales.JournalId == _projJournalTable.JournalId
            {
                _projJournalTable.NumOfLines += int642int(projBegBalJournalTrans_CostSales.RecId);
                _projJournalTable.ProjQty += projBegBalJournalTrans_CostSales.Quantity;
                _projJournalTable.SalesPrice += ExchangeRateHelper::mstPrice(projBegBalJournalTrans_CostSales.SalesPrice, projBegBalJournalTrans_CostSales.ProjSalesCurrencyId);
            }

            while select count(RecId), sum(ProjSalesAmount), ProjSalesCurrencyId from projBegBalJournalTrans_Fee
                group by projBegBalJournalTrans_Fee.ProjSalesCurrencyId
                where projBegBalJournalTrans_Fee.JournalId == _projJournalTable.JournalId
            {
                _projJournalTable.NumOfLines += int642int(projBegBalJournalTrans_Fee.RecId);
                _projJournalTable.SalesPrice += CurrencyExchangeHelper::amountCur2MST(projBegBalJournalTrans_Fee.ProjSalesAmount, projBegBalJournalTrans_Fee.ProjSalesCurrencyId);
            }

            while select count(RecId), sum(ProjSalesAmount), CurrencyId from projBegBalJournalTrans_OnAcc
                group by projBegBalJournalTrans_OnAcc.CurrencyId
                where projBegBalJournalTrans_OnAcc.JournalId == _projJournalTable.JournalId
            {
                _projJournalTable.NumOfLines += int642int(projBegBalJournalTrans_OnAcc.RecId);
                _projJournalTable.SalesPrice += CurrencyExchangeHelper::amountCur2MST(projBegBalJournalTrans_OnAcc.ProjSalesAmount, projBegBalJournalTrans_OnAcc.CurrencyId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupJournalType</Name>
				<Source><![CDATA[
    public static void lookupJournalType(FormStringControl _ctrl, ProjJournalType _journalType)
    {
        SysTableLookup          sysTableLookup              = SysTableLookup::newParameters(tableNum(ProjJournalTable), _ctrl);
        Query                   query                       = new Query();
        QueryBuildDataSource    queryBuildDataSource        = query.addDataSource(tableNum(ProjJournalTable));
        QueryBuildRange         queryBuildRangeJournalType  = queryBuildDataSource.addRange(fieldNum(ProjJournalTable, JournalType));

        sysTableLookup.addLookupfield(fieldNum(ProjJournalTable, JournalId));
        sysTableLookup.addLookupfield(fieldNum(ProjJournalTable, JournalType));
        sysTableLookup.addLookupfield(fieldNum(ProjJournalTable, Description));

        queryBuildRangeJournalType.value(queryValue(_journalType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUserAccessForCreatingProjectJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current user can create a project journal.
    /// </summary>
    /// <returns>
    /// Boolean value indicating whether the current user can create a journal.
    /// </returns>
    internal static boolean validateUserAccessForCreatingProjectJournal()
    {
        if (isSystemAdministrator())
        {
            return true;
        }

        ProjJournalTableParameters insertParameters = ProjJournalTableParameters::current();
        ProjJournalStatusLine projJournalStatusLine;
        boolean canCreate;

        if (insertParameters)
        {
            ProjJournalStatusNameId statusNameId = insertParameters.statusNameId();

            select firstonly RecId, GroupIdStatus from projJournalStatusLine
                where projJournalStatusLine.StatusNameId == statusNameId
                    && projJournalStatusLine.AllowEdit == NoYes::Yes;
        }

        if (projJournalStatusLine.GroupIdStatus)
        {
            canCreate = ProjJournalStatusLine::checkUserAccessByApprovalParameters(true, false, false);
        }
        else
        {
            canCreate = true;
        }

        return canCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateStatusNameExistForUserAccessWhenCreatingProjectJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates status name exist for user access to create project journal.
    /// </summary>
    /// <param name = "_statusNameId">Project journal status name</param>
    /// <remarks>
    /// If the status name exist then user access validation is checked.
    /// </remarks>
    public static void validateStatusNameExistForUserAccessWhenCreatingProjectJournal(ProjJournalStatusNameId _statusNameId)
    {
        if (_statusNameId)
        {
            using (ProjJournalTableParameters insertParameters = ProjJournalTableParameters::parmStatusNameId(_statusNameId))
            {
                if (!ProjJournalTable::validateUserAccessForCreatingProjectJournal())
                {
                    throw error(strFmt("@Proj:CurrentUserHasNoAccessToCreateJournal", curUserId()));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUserAccessForReviewingProjectJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current user can review a project journal.
    /// </summary>
    /// <returns>
    /// Boolean value indicating whether the current user can review the journal.
    /// </returns>
    internal static boolean validateUserAccessForReviewingProjectJournal()
    {
        if (isSystemAdministrator())
        {
            return true;
        }

        ProjJournalTableParameters insertParameters = ProjJournalTableParameters::current();
        ProjJournalStatusLine projJournalStatusLine;
        boolean canReview;

        if (insertParameters)
        {
            ProjJournalStatusNameId statusNameId = insertParameters.statusNameId();

            select firstonly RecId, GroupIdStatus from projJournalStatusLine
                where projJournalStatusLine.StatusNameId == statusNameId
                    && projJournalStatusLine.Check == NoYes::Yes;
        }

        if (projJournalStatusLine.GroupIdStatus)
        {
            canReview = ProjJournalStatusLine::checkUserAccessByApprovalParameters(false, true, false);
        }
        else
        {
            canReview = true;
        }

        return canReview;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUserAccessForApprovingProjectJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current user can approve a project journal.
    /// </summary>
    /// <returns>
    /// Boolean value indicating whether the current user can approve the journal.
    /// </returns>
    internal static boolean validateUserAccessForApprovingProjectJournal()
    {
        if (isSystemAdministrator())
        {
            return true;
        }

        ProjJournalTableParameters insertParameters = ProjJournalTableParameters::current();
        ProjJournalStatusLine projJournalStatusLine;
        boolean canApprove;

        if (insertParameters)
        {
            ProjJournalStatusNameId statusNameId = insertParameters.statusNameId();

            select firstonly RecId, GroupIdStatus from projJournalStatusLine
                where projJournalStatusLine.StatusNameId == statusNameId
                    && projJournalStatusLine.PostingReady == NoYes::Yes;
        }

        if (projJournalStatusLine.GroupIdStatus)
        {
            canApprove = ProjJournalStatusLine::checkUserAccessByApprovalParameters(false, false, true);
        }
        else
        {
            canApprove = true;
        }

        return canApprove;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEditAllowedByJournalApproval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current user can edit the project journal based on its current status
    /// in the journal approval configuration.
    /// </summary>
    /// <returns>
    /// Boolean value indicating whether the current user can edit the journal.
    /// </returns>
    /// <remarks>
    /// Returns false if all the conditions below are true:
    ///     User is not Admin
    ///     Journal record has a status value
    ///     Editing is not selected for the status
    ///         or Editing is selected for the status 
    ///             and there is a group assigned 
    ///             and the current user is not part of this group
    /// </remarks>
    internal boolean isEditAllowedByJournalApproval()
    {
        boolean editAllowed = true;

        if (this.StatusNameId
            && this.Status
            && !isSystemAdministrator())
        {
            ProjJournalStatusLine projJournalStatusLine = this.journalStatusLine();
            if (projJournalStatusLine && projJournalStatusLine.AllowEdit == NoYes::No)
            {
                editAllowed = false;
            }
            else if (projJournalStatusLine && projJournalStatusLine.GroupIdStatus)
            {
                using (ProjJournalTableParameters insertParameters = ProjJournalTableParameters::parmStatusNameId(this.StatusNameId))
                {
                    editAllowed = ProjJournalStatusLine::checkUserAccessByApprovalParameters(true, false, false);
                }
            }
        }

        return editAllowed;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124921</DeveloperDocumentation>
	<Label>@SYS55267</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JournalIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>JournalIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ProjBegBalJournalTrans_CostSales</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjBegBalJournalTrans_CostSales</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjBegBalJournalTrans_Fee</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjBegBalJournalTrans_Fee</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjBegBalJournalTrans_OnAcc</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjBegBalJournalTrans_OnAcc</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjJournalTrans</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjJournalTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Approval</Name>
			<Label>@SYS2453</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatusNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultValues</Name>
			<Label>@SYS80655</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>History</Name>
			<Label>@SYS10575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalIdOriginal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimesheetNbr</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DetailSummary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeletePostedLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProjLedgerUpdates</Name>
			<Label>@SYS152930</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostPayroll</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostPL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Stopped</Name>
			<Label>@SYS11058</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BlockUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SystemBlocked</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberSequenceTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Timecard</Name>
			<Label>@PSA54</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PSAPeriodStart</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PSAPeriodEnd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totals</Name>
			<Label>@SYS8311</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumOfLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherDraw</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VoucherDate</Name>
			<Label>@SYS16658</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherDateChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalBlockUserGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalBlockUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeletePostedLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDeletePostedLines</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DetailSummary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDetailSummary</ExtendedDataType>
			<EnumType>DetailSummary</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjJournalId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalIdOriginal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>projJournalIdOriginal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNameId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LinePropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumOfLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalNumOfLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>PostedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPostedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostedUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalPostedUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostPayroll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPostPayroll</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostPL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPostPL</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostWIP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPostWIP</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProjQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjQtyEmpl</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ProjTransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PSAPeriodEnd</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPeriodTo</ExtendedDataType>
			<Label>@PSA55</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PSAPeriodStart</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPeriodFrom</ExtendedDataType>
			<Label>@PSA57</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalSessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjJournalStatusType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatusNameId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjJournalStatusNameId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SystemBlocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSystemBlocked</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TimesheetNbr</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TSTimesheetNbr</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherChange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjJournalVoucherChange</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherDateChange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjJournalVoucherDateChange</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherDraw</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JournalVoucherDraw</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VoucherNumberSequenceTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjVoucherNumberSequenceTable</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PostedJournalIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NumberSequenceTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>VoucherNumberSequenceTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ResourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Resource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalTypePostedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>JournalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionLoginDateTime</MapField>
					<MapFieldTo>SessionLoginDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedDateTime</MapField>
					<MapFieldTo>PostedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimesheetNbr</MapField>
					<MapFieldTo>TimesheetNbr</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SystemBlocked</MapField>
					<MapFieldTo>SystemBlocked</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
					<MapFieldTo>Posted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherNumberSeq</MapField>
					<MapFieldTo>VoucherNumberSequenceTable</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>JournalNameId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserId</MapField>
					<MapFieldTo>BlockUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherDraw</MapField>
					<MapFieldTo>VoucherDraw</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DetailSummary</MapField>
					<MapFieldTo>DetailSummary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeletePostedLines</MapField>
					<MapFieldTo>DeletePostedLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalType</MapField>
					<MapFieldTo>JournalType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionId</MapField>
					<MapFieldTo>SessionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumOfLines</MapField>
					<MapFieldTo>NumOfLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherChange</MapField>
					<MapFieldTo>VoucherChange</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedUserId</MapField>
					<MapFieldTo>PostedUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserGroupId</MapField>
					<MapFieldTo>BlockUserGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalIdOriginal</MapField>
					<MapFieldTo>JournalIdOriginal</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxObligationCompany</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
					<MapFieldTo>Posted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequenceTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VoucherNumberSequenceTable</Name>
					<Field>VoucherNumberSequenceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjJournalName</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNameId</Name>
					<SourceEDT>ProjJournalNameId</SourceEDT>
					<Field>JournalNameId</Field>
					<RelatedField>JournalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjJournalStatusTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjJournalStatusTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjJournalStatusTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StatusNameId</Name>
					<SourceEDT>ProjJournalStatusNameId</SourceEDT>
					<Field>StatusNameId</Field>
					<RelatedField>StatusNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjLineProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjLineProperty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjLineProperty</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinePropertyId</Name>
					<SourceEDT>ProjLinePropertyId</SourceEDT>
					<Field>LinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserGroupInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UserGroupInfo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserGroupId</Name>
					<SourceEDT>JournalBlockUserGroupId</SourceEDT>
					<Field>BlockUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserInfo_Block</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UserInfo_Block</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserId</Name>
					<SourceEDT>JournalBlockUserId</SourceEDT>
					<Field>BlockUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserInfo_Posted</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UserInfo_Posted</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostedUserId</Name>
					<SourceEDT>JournalPostedUserId</SourceEDT>
					<Field>PostedUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ResResourceIdentifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>