<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpEximEPCGExportObligationPeriod_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpEximEPCGExportObligationPeriod_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>blockPct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets block percent.
    /// </summary>
    /// <param name="_tmpEPCGExportObligationPeriod">
    /// The temporary EOCG export obligation period.
    /// </param>
    /// <returns>
    /// The percentage of the block unit.
    /// </returns>
    public container blockPct(TmpEximEPCGExportObligationPeriod_IN _tmpEPCGExportObligationPeriod)
    {
        TmpEximEPCGExportObligationPeriod_IN tmpEPCGExportObligationPeriod;
        Percent                              percentage;
        EximBlockUnit_IN                     units;
        ;

        tmpEPCGExportObligationPeriod.setTmpData(_tmpEPCGExportObligationPeriod);

        select sum(Percentage), sum(Units)
            from tmpEPCGExportObligationPeriod
            where tmpEPCGExportObligationPeriod.Block != _tmpEPCGExportObligationPeriod.Block;

        if (tmpEPCGExportObligationPeriod)
        {
            percentage = tmpEPCGExportObligationPeriod.Percentage;
            units      = tmpEPCGExportObligationPeriod.Units;
        }

        return [percentage, units];
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayActualExports</Name>
				<Source><![CDATA[
    display AmountMST displayActualExports()
    {
        return TmpEximEPCGExportObligationPeriod_IN::totalActualExports(this.ExportObligationPeriodRecId,
                                                                        this.SchemeTableRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayExpObligationAchieved</Name>
				<Source><![CDATA[
    display AmountMST displayExpObligationAchieved()
    {
        return TmpEximEPCGExportObligationPeriod_IN::exportObligationAmt(this.ExportObligationPeriodRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayExpObligationAmt</Name>
				<Source><![CDATA[
    display AmountMST displayExpObligationAmt()
    {
        return TmpEximEPCGExportObligationPeriod_IN::totalExpObligationAmt(this.SchemeTableRecId,
                                                                           this.ExportObligationPeriodRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNetDiff</Name>
				<Source><![CDATA[
    display AmountMST displayNetDiff()
    {
        return TmpEximEPCGExportObligationPeriod_IN::netDifference(this.SchemeTableRecId,
                                                                   this.ExportObligationPeriodRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
        public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(TmpEximEPCGExportObligationPeriod_IN, Units):
                this.Units = !this.Units ? 1 : this.Units;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>achievedTotal</Name>
				<Source><![CDATA[
        public static AmountMST achievedTotal(TmpEximEPCGExportObligationPeriod_IN _tmpEPCGExportObligationPeriod)
    {
        AmountMST                            totalObligationResultAmt;
        TmpEximEPCGExportObligationPeriod_IN tmpEPCGExportObligationPeriod;
        ;

        tmpEPCGExportObligationPeriod.setTmpData(_tmpEPCGExportObligationPeriod);

        while select tmpEPCGExportObligationPeriod
        {
            totalObligationResultAmt += TmpEximEPCGExportObligationPeriod_IN::totalExpObligationAmt(tmpEPCGExportObligationPeriod.SchemeTableRecId,
                                                                                                    tmpEPCGExportObligationPeriod.ExportObligationPeriodRecId);
        }

        return totalObligationResultAmt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>annualAverage</Name>
				<Source><![CDATA[
        public static AmountMST annualAverage(TmpEximEPCGExportObligationPeriod_IN _tmpEPCGExportObligationPeriod)
    {
        EximEPCGExportObligationPeriod_IN epcgExportObligationPeriod;
        EximEPCGSchemeApprove_IN          epcgSchemeApproval;
        ;

        select firstonly SchemeApproveRecId, RecId
            from epcgExportObligationPeriod
            where epcgExportObligationPeriod.RecId == _tmpEPCGExportObligationPeriod.ExportObligationPeriodRecId
        join RecId, AnnualAverageMST
            from epcgSchemeApproval
            where epcgSchemeApproval.RecId == epcgExportObligationPeriod.SchemeApproveRecId;

        return epcgSchemeApproval.AnnualAverageMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>balance</Name>
				<Source><![CDATA[
        public static AmountMST balance(TmpEximEPCGExportObligationPeriod_IN _tmpEximEPCGExportObligationPeriod)
    {
        return (TmpEximEPCGExportObligationPeriod_IN::achievedTotal(_tmpEximEPCGExportObligationPeriod) - TmpEximEPCGExportObligationPeriod_IN::exportObligationAmt(_tmpEximEPCGExportObligationPeriod.ExportObligationPeriodRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportObligationAmt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets export obligation amount.
    /// </summary>
    /// <param name="_exportObligationPeriodRecId">
    /// The export obligation period record ID.
    /// </param>
    /// <returns>
    /// An instance of the <c>AmountMST</c> class.
    /// </returns>
    public static AmountMST exportObligationAmt(RecId _exportObligationPeriodRecId)
    {
        EximEPCGExportObligationPeriod_IN epcgExportObligationPeriod;
        EximEPCGSchemeApprove_IN          epcgSchemeApproval;
        EximEPCGSchemeTable_IN            epcgSchemeTable;
        EximEPCGSchemeLine_IN             epcgSchemeLine;
        AmountMST                         expObligationAchievedAmt;

        select firstonly SchemeApproveRecId, RecId
            from epcgExportObligationPeriod
                where epcgExportObligationPeriod.RecId == _exportObligationPeriodRecId
            join RecId, SchemeTableRecId from epcgSchemeApproval
                where epcgSchemeApproval.RecId == epcgExportObligationPeriod.SchemeApproveRecId
            join RecId, ApprovalBasis, IssueDateTime, ImportValueMST
                from epcgSchemeTable
                    where epcgSchemeTable.RecId == epcgSchemeApproval.SchemeTableRecId
            join SchemeTableRecId, ExportObligationAmountMST
                from epcgSchemeLine
                    where epcgSchemeLine.SchemeTableRecId == epcgSchemeTable.RecId
                       && epcgSchemeLine.VersionNum       == 1;

        if (epcgSchemeTable.ImportValueMST)
        {
            expObligationAchievedAmt = (EximEPCGImportTrans_IN::importValueExpObligation(epcgSchemeTable.RecId) *
                                        epcgSchemeLine.ExportObligationAmountMST) /
                                        epcgSchemeTable.ImportValueMST;
        }

        return expObligationAchievedAmt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netDifference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets net difference.
    /// </summary>
    /// <param name="_schemeTableRecId">
    /// The scheme table record ID.
    /// </param>
    /// <param name="_exportObligationPeriodRecId">
    /// The export obligation period record ID.
    /// </param>
    /// <returns>
    /// An instance of the <c>AmountMST</c> class.
    /// </returns>
    public static AmountMST netDifference(
        EximEPCGSchemeTableRecId_IN            _schemeTableRecId,
        EximEPCGExportObligationPeriodRecId_IN _exportObligationPeriodRecId)
    {
        AmountMST                           netDifference;
        AmountMST                           annualAverageAmt;
        EximEPCGExportObligationDetails_IN  epcgExportObligationDetails;
        ;

        annualAverageAmt = EximEPCGSchemeApprove_IN::findRefRecId(_schemeTableRecId).AnnualAverageMST;

        while select FromDateTime, ToDateTime, ExportObligationPeriodRecId, SchemeTableRecId
                from epcgExportObligationDetails
                where epcgExportObligationDetails.ExportObligationPeriodRecId == _exportObligationPeriodRecId
        {
            netDifference += (EximEPCGExportObligationDetails_IN::assessableValue(epcgExportObligationDetails.FromDateTime,
                                                                                  epcgExportObligationDetails.ToDateTime,
                                                                                  epcgExportObligationDetails.SchemeTableRecId) - annualAverageAmt);
        }

        return netDifference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalActualExports</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets total actual exports.
    /// </summary>
    /// <param name="_epcgExportObligationPeriodRecId">
    /// The EPCG export obligation period record ID.
    /// </param>
    /// <param name="_epcgSchemeTableRecId">
    /// The EPCG scheme table record ID.
    /// </param>
    /// <returns>
    /// An instance of the <c>AmountMST</c> class.
    /// </returns>
    public static AmountMST totalActualExports(
        EximEPCGExportObligationPeriodRecId_IN _epcgExportObligationPeriodRecId,
        EximEPCGSchemeTableRecId_IN            _epcgSchemeTableRecId)
    {
        AmountMST                           actualExports;
        EximEPCGExportObligationDetails_IN  epcgExportObligationDetails;
        ;

        while select FromDateTime, ToDateTime, ExportObligationPeriodRecId, SchemeTableRecId
            from epcgExportObligationDetails
            where epcgExportObligationDetails.ExportObligationPeriodRecId == _epcgExportObligationPeriodRecId
        {
            actualExports += EximEPCGExportObligationDetails_IN::assessableValue(epcgExportObligationDetails.FromDateTime,
                                                                                 epcgExportObligationDetails.ToDateTime,
                                                                                 _epcgSchemeTableRecId);
        }

        return actualExports;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalExpObligationAmt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets total export obligation amount.
    /// </summary>
    /// <param name="_schemeTableRecId">
    /// The scheme table record ID.
    /// </param>
    /// <param name="_exportObligationPeriodRecId">
    /// The export obligation period record ID.
    /// </param>
    /// <returns>
    /// An instance of the <c>AmountMST</c> class.
    /// </returns>
    public static AmountMST totalExpObligationAmt(
        EximEPCGSchemeTableRecId_IN            _schemeTableRecId,
        EximEPCGExportObligationPeriodRecId_IN _exportObligationPeriodRecId)
    {
        AmountMST                           totalExpObligationAmt;
        AmountMST                           totalObligationResultAmt;
        AmountMST                           annualAverageAmt;
        EximEPCGExportObligationDetails_IN  epcgExportObligationDetails;
        ;

        annualAverageAmt = EximEPCGSchemeApprove_IN::findRefRecId(_schemeTableRecId).AnnualAverageMST;

        while select FromDateTime, ToDateTime, ExportObligationPeriodRecId, SchemeTableRecId
                from epcgExportObligationDetails
                where epcgExportObligationDetails.ExportObligationPeriodRecId == _exportObligationPeriodRecId
        {
            totalExpObligationAmt = (EximEPCGExportObligationDetails_IN::assessableValue(epcgExportObligationDetails.FromDateTime,
                                                                                         epcgExportObligationDetails.ToDateTime,
                                                                                         _schemeTableRecId) - annualAverageAmt);
            if (totalExpObligationAmt > 0)
            {
                totalObligationResultAmt += totalExpObligationAmt;
            }
        }

        return totalObligationResultAmt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<Label>@GLS62069</Label>
	<ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExportObligationPeriodRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAchieved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiffExportObligation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CumulativeExpObligation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExportObligationPeriodRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAchieved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiffExportObligation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CumulativeExpObligation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchemeTableRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40858</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Block</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximBlockNum_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CumulativeExpObligation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS62125</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiffExportObligation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS62126</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExportObligationAchieved</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS62122</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExportObligationAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS62079</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExportObligationPeriodRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>FromDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FromDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@SYS67344</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodInterval</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS23339</Label>
			<EnumType>PaymentPer_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SchemeTableRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ToDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ToDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Units</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximBlockUnit_IN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EximEPCGSchemeTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SchemeTableRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>EximEPCGBlockExtension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximEPCGBlockExtension_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExportObligationPeriodRecId</Name>
					<Field>ExportObligationPeriodRecId</Field>
					<RelatedField>ExportObligationPeriodRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximEPCGSchemeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximEPCGSchemeTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EximEPCGSchemeTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximEPCGSchemeTable_IN_TmpEximEPCGExportObligationPeriod_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SchemeTableRecId</Name>
					<Field>SchemeTableRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>