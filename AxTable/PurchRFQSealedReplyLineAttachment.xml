<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQSealedReplyLineAttachment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQSealedReplyLineAttachment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findPurchRFQReplyLine</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    internal static PurchRFQReplyLine findPurchRFQReplyLine(RefRecId _purchRFQSealedReplyLineAttachmentLinkRecId)
    {
        PurchRFQSealedReplyLineAttachmentLink purchRFQSealedReplyLineAttachmentLink;
        PurchRFQReplyLine purchRFQReplyLine;
        PurchRFQSealedReplyLine purchRFQSealedReplyLine;

        select firstonly purchRFQReplyLine
            exists join purchRFQSealedReplyLineAttachmentLink
            where purchRFQSealedReplyLineAttachmentLink.PurchRFQReplyLine == purchRFQReplyLine.RecId
               && purchRFQSealedReplyLineAttachmentLink.RecId == _purchRFQSealedReplyLineAttachmentLinkRecId;

        return purchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchRFQReplyTable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static PurchRFQReplyTable findPurchRFQReplyTable(RefRecId _purchRFQSealedReplyLineAttachmentLinkRecId)
    {
        PurchRFQSealedReplyLineAttachmentLink purchRFQSealedReplyLineAttachmentLink;
        PurchRFQReplyLine purchRFQReplyLine;
        PurchRFQReplyTable purchRFQReplyTable;

        select firstonly purchRFQReplyTable
            exists join purchRFQReplyLine
            where purchRFQReplyTable.RFQId == purchRFQReplyLine.RFQId
            exists join purchRFQSealedReplyLineAttachmentLink
                where purchRFQSealedReplyLineAttachmentLink.PurchRFQReplyLine == purchRFQReplyLine.RecId
                   && purchRFQSealedReplyLineAttachmentLink.RecId == _purchRFQSealedReplyLineAttachmentLinkRecId;

        return purchRFQReplyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public void insert()
    {
        Global::handleEncryptedTablePreInsert(this);
        super();
        Global::handleEncryptedTablePostInsert(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public void update()
    {
        Global::handleEncryptedTablePreUpdate(this);
        super();
        Global::handleEncryptedTablePostUpdate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sealedRecordEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method encrypts or decrypts the value to be stored in the table and makes an entry in the audit log based on the parameters passed to it.
    /// </summary>
    /// <param name = "_set">The boolean value which determines if table value is to be encrypted or decrypted.</param>
    /// <param name = "_value">The value to be encrypted or decrypted.</param>
    /// <param name = "_sealedBidEncryptionManager">The <c>PurchRFQSealedBidEncryptionManager</c> object instance.</param>
    /// <param name = "_sealedAuditLogParameters">The object containing audit log parameters.</param>
    /// <returns><c>PurchRFQTmpSealedReplyAttachment</c> table record.</returns>
    [Hookable(false), Wrappable(false)]
    internal PurchRFQTmpSealedReplyAttachment sealedRecordEdit(boolean _set
                                                              , container _value
                                                              , PurchRFQSealedBidEncryptionManager _sealedBidEncryptionManager
                                                              , PurchRFQSealedAuditLogParameters _sealedAuditLogParameters)
    {
        str retValue = _sealedBidEncryptionManager.editEncryptedField(this, con2base64str(_value), fieldNum(PurchRFQSealedReplyLineAttachment, SealedRecord), _set);
        _sealedBidEncryptionManager.logEncryptionActivity(_set, _sealedAuditLogParameters);

        return con2Buf(base64str2con(retValue));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendorPortal</ConfigurationKey>
	<DeveloperDocumentation>@SCM:PurchRFQSealedReplyLineAttachmentDeveloperDocumentation</DeveloperDocumentation>
	<Label>@SCM:RFQSealedReplyLineAttachment</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetLine</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PurchRFQSealedReplyLineAttachmentLinkIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SealedRecord</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EncryptedField</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQSealedReplyLineAttachmentLink</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchRFQSealedReplyLineAttachmentLinkIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchRFQSealedReplyLineAttachmentLink</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQSealedReplyLineAttachmentLink</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchRFQSealedReplyLineAttachmentLink</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQSealedReplyLineAttachmentLink</Name>
					<Field>PurchRFQSealedReplyLineAttachmentLink</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DocuRef</Name>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DocuRef</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefRecId1</Name>
					<Field>DocuRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>