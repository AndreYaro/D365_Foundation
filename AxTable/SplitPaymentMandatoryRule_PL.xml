<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SplitPaymentMandatoryRule_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SplitPaymentMandatoryRule_PL extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds split payment mandatory rule.
    /// </summary>
    /// <param name = "_amount">
    /// Amount value of current order.
    /// </param>
    /// <param name = "_documentType">
    /// Document type of current order.
    /// </param>
    /// <param name = "_itemGroupId">
    /// Item group id of current line.
    /// </param>
    /// /// <param name = "_currencyCode">
    /// Currency code of current line.
    /// </param>
    /// <returns>
    /// The found mandatory split payment rule.
    /// </returns>
    [SysObsolete('Use method findByContract instead.', true, 26\04\2021)]
    public static SplitPaymentMandatoryRule_PL findRule(
        Amount _amount,
        SplitPaymentDocumentType_PL _documentType,
        SplitPaymentMandatoryItemGroupId_PL _itemGroupId,
        CurrencyCode _currencyCode)
    {
        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymModeOverrideNonMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds split payment mandatory rule for override non mandatory split.
    /// </summary>
    /// <param name = "_documentType">
    /// Document type of current order.
    /// </param>
    /// <returns>
    /// The found enchantments rule.
    /// </returns>
    public static SplitPaymentMandatoryRule_PL findPaymModeOverrideNonMandatory(SplitPaymentDocumentType_PL _documentType)
    {
        SplitPaymentMandatoryRule_PL rule;

        select firstonly rule
            order by VoluntarySplitPayment, Threshold
            where rule.DocumentType == _documentType
                && rule.IsOverrideNonMandatorySplit;

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (this.IsOverrideMandatorySplit && !this.PaymModeRevert)
        {
            ret = checkFailed("@AccountsPayable:PaymModeRevertOverrideError");
        }

        if (this.getSplitPayment() == NoYes::No)
        {
            ret = checkFailed("@AccountsPayable:PaymModeSplitParameterError");
        }

        if (this.VoluntarySplitPayment == NoYes::Yes
            && this.getSplitPaymentVoluntary() == NoYes::No)
        {
            ret = checkFailed("@AccountsPayable:VoluntarySplitPaymentSpecificationShouldBeSelected");
        }
    
        if (this.VoluntarySplitPayment == NoYes::No
            && this.getSplitPaymentVoluntary() == NoYes::Yes)
        {
            ret = checkFailed("@AccountsPayable:VoluntarySplitPaymentSpecificationCannotBeSelected");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SplitPaymentMandatoryRule_PL, PaymMode):
                this.Specification = '';
                break;

            case fieldNum(SplitPaymentMandatoryRule_PL, PaymModeRevert):
                this.SpecificationRevert = '';
                break;
            default: break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRuleByTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds split payment rule by tax item group.
    /// </summary>
    /// <param name = "_amount">
    /// Amount value of current order.
    /// </param>
    /// <param name = "_documentType">
    /// Document type of current order.
    /// </param>
    /// <param name = "_itemGroupId">
    /// Item group id of current line.
    /// </param>
    /// <param name = "_taxItemGroup">
    /// Tax item group id of current line.
    /// </param>
    /// <param name = "_currencyCode">
    /// Currency code of current line.
    /// </param>
    /// <returns>
    /// The found split payment rule.
    /// </returns>
    [SysObsolete('Use method findByContract instead.', true, 26\04\2021)]
    public static SplitPaymentMandatoryRule_PL findRuleByTaxItemGroup(
        Amount _amount,
        SplitPaymentDocumentType_PL _documentType,
        SplitPaymentMandatoryItemGroupId_PL _itemGroupId,
        TaxItemGroup _taxItemGroup,
        CurrencyCode _currencyCode)
    {
        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSplitPaymentVoluntary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the split payment voluntary parameter of the current payment mode and specification.
    /// </summary>
    /// <returns>The split payment voluntary parameter of the current payment mode and specification.</returns>
    public VoluntarySplitPayment_W getSplitPaymentVoluntary()
    {
        return SplitPaymentMandatoryRuleEngine::getVoluntarySplitPaymentFromPaymModeSpec(this.DocumentType, this.PaymMode, this.Specification);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSplitPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the split payment parameter of the current payment mode and specification.
    /// </summary>
    /// <returns>The split payment parameter of the current payment mode and specification.</returns>
    public NoYes getSplitPayment()
    {
        return SplitPaymentMandatoryRuleEngine::getSplitPaymentFromPaymModeSpec(this.DocumentType, this.PaymMode, this.Specification);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymModeOverrideMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds split payment mandatory rule for override mandatory split payment.
    /// </summary>
    /// <param name = "_documentType">
    /// Document type of current order.
    /// </param>
    /// <returns>
    /// The buffer of the table <c>SplitPaymentMandatoryRule_PL</c>.
    /// </returns>
    public static SplitPaymentMandatoryRule_PL findPaymModeOverrideMandatory(SplitPaymentDocumentType_PL _documentType)
    {
        SplitPaymentMandatoryRule_PL rule;

        select firstonly rule
            order by VoluntarySplitPayment, Threshold
            where rule.DocumentType == _documentType
                && rule.IsOverrideMandatorySplit;

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds split payment rule by contract.
    /// </summary>
    /// <param name = "_contract">The instance of the class <c>SplitPaymentMandatoryRuleContract</c>.</param>
    /// <returns>The found split payment rule by contract.</returns>
    public static SplitPaymentMandatoryRule_PL findByContract(SplitPaymentMandatoryRuleContract _contract)
    {
        SplitPaymentMandatoryRule_PL rule, ruleRet;
        SplitPaymentRuleTaxItemGroup_PL ruletaxItemGroup;
        Query query = new Query();
        QueryBuildDataSource ruleDS = query.addDataSource(tableNum(SplitPaymentMandatoryRule_PL));
        ruleDS.addOrderByField(fieldNum(SplitPaymentMandatoryRule_PL, VoluntarySplitPayment), SortOrder::Ascending);
        ruleDS.addOrderByField(fieldNum(SplitPaymentMandatoryRule_PL, Threshold), SortOrder::Ascending);

        ruleDS.addRange(fieldNum(SplitPaymentMandatoryRule_PL, DocumentType)).value(queryValue(enum2int(_contract.parmDocumentType())));
        ruleDS.addRange(fieldNum(SplitPaymentMandatoryRule_PL, ItemGroupId)).value(strFmt('((%1.%2 == %3) || ((%1.%2 == 0) && (%3 == 0)))',
            ruleDS.name(),
            fieldStr(SplitPaymentMandatoryRule_PL, ItemGroupId),
            _contract.parmItemGroupId()));
        ruleDS.addRange(fieldNum(SplitPaymentMandatoryRule_PL, PartnerCountryRegionType)).value(queryValue(enum2int(_contract.parmCountryType())));

        QueryBuildDataSource ruleTaxItemGroupDS = ruleDS.addDataSource(tableNum(SplitPaymentRuleTaxItemGroup_PL));
        ruleTaxItemGroupDS.relations(true);

        if (_contract.parmSearchByTaxItemGroup())
        {
            ruleTaxItemGroupDS.joinMode(JoinMode::ExistsJoin);
            ruleTaxItemGroupDS.addRange(fieldNum(SplitPaymentRuleTaxItemGroup_PL, TaxItemGroup)).value(queryValue(_contract.parmTaxItemGroup()));
        }
        else
        {
            ruleTaxItemGroupDS.joinMode(JoinMode::NoExistsJoin);
        }

        QueryRun queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            rule = queryRun.get(tableNum(SplitPaymentMandatoryRule_PL));

            if (!rule.Threshold)
            {
                ruleRet = rule;
                break;
            }

            LineAmount amountCurrency = _contract.parmAmount();

            if (_contract.parmCurrencyCode() != rule.CurrencyCode)
            {
                amountCurrency = CurrencyExchangeHelper::curAmount2CurAmount(amountCurrency, _contract.parmCurrencyCode(), rule.CurrencyCode);
            }

            if (rule.Threshold < amountCurrency)
            {
                ruleRet = rule;
                break;
            }
        }

        return ruleRet;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@AccountsPayable:DevDocSplitPaymentMandatoryRule</DeveloperDocumentation>
	<Label>@AccountsPayable:SplitPaymentMandatoryRule</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PaymMode</TitleField1>
	<TitleField2>CurrencyCode</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Threshold</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Threshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Specification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOverrideNonMandatorySplit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOverrideMandatorySplit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockWhilePosting</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymModeRevert</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SpecificationRevert</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoluntarySplitPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartnerCountryRegionType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OtherFields</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Threshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS118776</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymMode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverrideNonMandatorySplit</Name>
			<HelpText>@AccountsPayable:OverrideNonmandatorySplitPaymentHelp</HelpText>
			<Label>@AccountsPayable:OverrideNonmandatorySplitPayment</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverrideMandatorySplit</Name>
			<HelpText>@AccountsPayable:OverrideMandatorySplitPaymentHelp</HelpText>
			<Label>@AccountsPayable:OverrideMandatorySplitPayment</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlockWhilePosting</Name>
			<HelpText>@AccountsPayable:BlockWhilePostingHelp</HelpText>
			<Label>@AccountsPayable:BlockWhilePosting</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymModeRevert</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymMode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@AccountsPayable:PaymModeRevert</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentType</Name>
			<EnumType>SplitPaymentDocumentType_PL</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Specification</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SpecificationRevert</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSpec</ExtendedDataType>
			<Label>@AccountsPayable:PaymSpecRevert</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ItemGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SplitPaymentMandatoryItemGroupId_PL</ExtendedDataType>
			<Label>@SYS4922</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoluntarySplitPayment</Name>
			<ExtendedDataType>VoluntarySplitPayment_W</ExtendedDataType>
			<HelpText>@AccountsPayable:VoluntarySplitPaymentRule</HelpText>
			<Label>@AccountsPayable:Voluntary</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartnerCountryRegionType</Name>
			<EnumType>SplitPaymentMandatoryCountryRegionType_PL</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SlipPaymentMandatoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymMode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymMode</Name>
					<Field>PaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Customer</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymMode</Name>
					<Field>PaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Vendor</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPaymModeTableReverse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymModeRevert</Name>
					<Field>PaymModeRevert</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Customer</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPaymModeTableRevert</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymModeRevert</Name>
					<Field>PaymModeRevert</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Vendor</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymMode</Name>
					<Field>PaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Specification</Name>
					<Field>Specification</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Vendor</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPaymModeSpecRevert</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymModeRevert</Name>
					<Field>PaymModeRevert</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SpecificationRevert</Name>
					<Field>SpecificationRevert</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Vendor</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Specification</Name>
					<Field>Specification</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymMode</Name>
					<Field>PaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Customer</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPaymModeSpecRevert</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SpecificationRevert</Name>
					<Field>SpecificationRevert</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymModeRevert</Name>
					<Field>PaymModeRevert</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentType</Name>
					<Field>DocumentType</Field>
					<ValueStr>SplitPaymentDocumentType_PL::Customer</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SplitPaymentMandatoryItemGroup_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SplitPaymentMandatoryItemGroup_PL</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemGroupId</Name>
					<Field>ItemGroupId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>