<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetMoveHist</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetMoveHist extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
        /// <summary>
    ///    Gets and sets the reason code.
    /// </summary>
    /// <param name="_set">
    ///    A Boolean value that specifies whether the a new reason code should be set.
    /// </param>
    /// <param name="_reasonCode">
    ///    The new reason code when <paramref name="_set" /> is true.
    /// </param>
    /// <returns>
    ///    The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    //BP Deviation Documented
    public edit ReasonCode editReasonCode(boolean _set, ReasonCode _reasonCode)
    {
        ReasonCode  reasonCode = _reasonCode;

        if (_set)
        {
            if (this.ReasonRefRecID == 0)
            {
                this.ReasonRefRecID = ReasonTableRef::createFromCode(reasonCode);
            }
            else
            {
                this.ReasonRefRecID = ReasonTableRef::updateCode(reasonCode, this.ReasonRefRecID);
            }

            // Updated the reason comment with the default value for the updated reason code
            this.editReasonComment(_set,ReasonTable::find(reasonCode).Description);
        }
        else
        {
            reasonCode = ReasonTableRef::find(this.ReasonRefRecID).Reason;
        }

        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
        /// <summary>
    ///    Gets or sets the reason comment.
    /// </summary>
    /// <param name="_set">
    ///    A Boolean value that specifies whether a new reason comment should be set.
    /// </param>
    /// <param name="_reasonComment">
    ///    The new reason comment when <paramref name="_set" /> is true.
    /// </param>
    /// <returns>
    ///    The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    //BP Deviation Documented
    public edit ReasonComment editReasonComment(boolean _set, ReasonComment _reasonComment)
    {
        ReasonComment   reasonComment = _reasonComment;

        if (_set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonRefRecID == 0)
            {
               this.ReasonRefRecID = ReasonTableRef::createFromComment(reasonComment);
            }
            else
            {
               this.ReasonRefRecID = ReasonTableRef::updateComment(reasonComment,this.ReasonRefRecID);
            }
        }

        if (this.ReasonRefRecID)
        {
            reasonComment = ReasonTableRef::find(this.ReasonRefRecID).ReasonComment;
        }

        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsAssetId</Name>
				<Source><![CDATA[
        public server RAssetMoveHist existsAssetId(CompanyId _companyId = curext())
    {
        RAssetMoveHist assetMoveHist;
        ;

        if (! this.Company || ! this.AssetId)
            return null;
        if (this.DataAreaId == _companyId)
        {
            select firstonly assetMoveHist
                where assetMoveHist.AssetId  == this.AssetId  &&
                      assetMoveHist.Company  == this.Company  &&
                      assetMoveHist.MoveType == this.MoveType &&
                      assetMoveHist.Posted   == NoYes::No     &&
                      assetMoveHist.RecId    != this.RecId;
        }
        else
        {
            if (SysDataArea::checkAccessible(_companyId))
            {
                changecompany(_companyId)
                {
                    select firstonly assetMoveHist
                        where assetMoveHist.AssetId  == this.AssetId  &&
                              assetMoveHist.Company  == this.Company  &&
                              assetMoveHist.MoveType == this.MoveType &&
                              assetMoveHist.Posted   == NoYes::No;
                }
            }
        }
        return assetMoveHist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssetId</Name>
				<Source><![CDATA[
        private server RAssetMoveHist findAssetId(CompanyId      _companyId,
                                              RAssetMoveType _assetMoveType,
                                              Posted         _posted = NoYes::Yes)
    {
        RAssetMoveHist assetMoveHist;
        ;

        if (SysDataArea::checkAccessible(_companyId))
        {
            changecompany(_companyId)
            {
                select firstonly assetMoveHist
                    where assetMoveHist.AssetId  == this.AccountNum &&
                          assetMoveHist.Company  == this.DataAreaId &&
                          assetMoveHist.MoveType == _assetMoveType &&
                          assetMoveHist.Posted   == _posted;
            }
        }
        return assetMoveHist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findConcerned</Name>
				<Source><![CDATA[
        public server RAssetMoveHist findConcerned(boolean _equal     = false,
                                               boolean _forupdate = false)
    {
        RAssetMoveHist assetMoveHist;
        RAssetMoveType assetMoveType;
        ;

        if (! this.AssetId || ! this.Company)
            return null;

        assetMoveType = this.MoveType == RAssetMoveType::CompanyIssue ? RAssetMoveType::CompanyReceipt : RAssetMoveType::CompanyIssue;

        if (SysDataArea::checkAccessible(this.Company))
        {
            changecompany(this.Company)
            {
                if (_equal)
                {
                    assetMoveHist.selectForUpdate(_forupdate);
                    select firstonly assetMoveHist
                        order by ChangeDate desc
                        where assetMoveHist.MoveType   == assetMoveType  &&
                              assetMoveHist.AccountNum == this.AssetId    &&
                              assetMoveHist.AssetId    == this.AccountNum &&
                              assetMoveHist.Company    == this.DataAreaId &&
                              assetMoveHist.Posted;
                }
                else
                {
                    assetMoveHist.selectForUpdate(_forupdate);
                    select firstonly assetMoveHist
                        order by ChangeDate desc
                        where assetMoveHist.MoveType   == assetMoveType  &&
                              assetMoveHist.AccountNum == this.AssetId    &&
                              assetMoveHist.Posted;
                }
            }
        }
        return assetMoveHist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromrAssetMoveHistIssued</Name>
				<Source><![CDATA[
        public server void initFromrAssetMoveHistIssued()
    {
        RAssetMoveHist assetMoveHist;
        DataArea       dataArea;
        ;

        while select Id from dataArea
            where dataArea.IsVirtual == NoYes::No
        {
            assetMoveHist = this.findAssetId(dataArea.Id, RAssetMoveType::CompanyIssue);
            if (assetMoveHist)
            {
                this.ChangeDate = assetMoveHist.ChangeDate;
                this.AssetId    = assetMoveHist.AccountNum;
                this.Company    = assetMoveHist.DataAreaId;
                break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();
        this.Userid = curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLast</Name>
				<Source><![CDATA[
        /// <summary>
    /// determines whether the current history line is the last one
    /// </summary>
    /// <returns>
    /// a boolean sign, true - the current history line is the last one
    /// </returns>
    public boolean isLast()
    {
        RAssetMoveHist  rAssetMoveHistCheck;

        select firstonly RecId from rAssetMoveHistCheck
            where rAssetMoveHistCheck.AccountNum  == this.AccountNum   &&
                  rAssetMoveHistCheck.MoveType    == this.MoveType     &&
                  rAssetMoveHistCheck.ChangeDate  >  this.ChangeDate;

        return ! rAssetMoveHistCheck.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rAssetMoveStandard</Name>
				<Source><![CDATA[
        public server RAssetMoveStandard rAssetMoveStandard(RAssetStandardId _assetStandardId,
                                                        boolean          _forupdate = false)
    {
        RAssetMoveStandard assetMoveStandard;
        ;

        assetMoveStandard.selectForUpdate(_forupdate);
        select firstonly assetMoveStandard
            where assetMoveStandard.RefRecId         == this.RecId       &&
                  assetMoveStandard.RefTableId       == this.TableId     &&
                  assetMoveStandard.rAssetStandardId == _assetStandardId;
        return assetMoveStandard;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMoveStandard</Name>
				<Source><![CDATA[
        public server void updateMoveStandard()
    {
        RAssetStandards    assetStandards;
        RAssetMoveStandard assetMoveStandard;
        ;

        while select AssetStandardId from assetStandards
            where assetStandards.AssetId == this.AccountNum
        {
            if (! this.rAssetMoveStandard(assetStandards.AssetStandardId))
            {
                assetMoveStandard.clear();
                assetMoveStandard.rAssetStandardId = assetStandards.AssetStandardId;
                assetMoveStandard.RefRecId         = this.RecId;
                assetMoveStandard.RefTableId       = this.TableId;
                assetMoveStandard.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean         ret;

        ret = super();

        if (RAssetTable::find(this.AccountNum).RecId && !this.isLast())
        {
            ret = checkFailed("@GLS63377");
        }


        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _p1)
    {
        RAssetMoveHist tmprAssetMoveHist;
        boolean ok = super(_p1);
        ;

        if (ok)
        {
            switch(_p1)
            {
                case fieldNum(RAssetMoveHist, Company):
                    ok = this.Company != curext() && SysDataArea::checkAccessible(this.Company);
                    if (ok)
                    {
                        this.AssetId = tmprAssetMoveHist.AccountNum;
                    }
                    break;
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        ReasonTable         reasonTable;
        ReasonCode          reasonCode;
        boolean             ret = super();

        if (this.ReasonRefRecID)
        {
            reasonCode = ReasonTableRef::find(this.ReasonRefRecID).Reason;
        }
        if (ret && reasonCode != "")
        {
            reasonTable = ReasonTable::find(reasonCode);
            if (reasonTable.RecId == 0)
            {
                  ret = checkFailed(strFmt("@SYS112224", reasonCode, fieldPName(ReasonTable, Reason), tablePName(ReasonTable)));
            }
        }
        if (ret)
        {
            if (reasonCode == "")
            {
                if (RAssetParameters::find().AssetChanges)
                {
                    //The Reason code required.
                    ret = checkFailed(strFmt("@SYS110217", "@SYS111246"));
                }
            }
            else
            {
                // If a Reason code is blank then these validations will not occur.
                if (reasonTable.rAsset == NoYes::No)
                {
                    // The Reason code is not active for 'Asset' transactions.
                    ret = checkFailed("@SYS115522");
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastOperation</Name>
				<Source><![CDATA[
        public static server RAssetMoveHist findLastOperation(RAssetId        _assetId,
                                                          RAssetMoveType  _assetMoveType,
                                                          Posted          _posted = NoYes::No,
                                                          RAssetTransDate _assetTransDate = maxDate(),
                                                          boolean         _forupdate      = false)
    {
        RAssetMoveHist  assetMoveHist;

        assetMoveHist.selectForUpdate(_forupdate);

        select firstonly assetMoveHist
            order by ChangeDate desc
            where assetMoveHist.AccountNum == _assetId        &&
                  assetMoveHist.MoveType   == _assetMoveType  &&
                  assetMoveHist.Posted     == _posted         &&
                  assetMoveHist.ChangeDate <= _assetTransDate;

        return assetMoveHist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecID</Name>
				<Source><![CDATA[
        public static RAssetMoveHist findRecID(RecId       _recId,
                                           boolean     _forUpdate = false)
    {
        RAssetMoveHist      assetMoveHist;

        ;

        if (_recId)
        {
            assetMoveHist.selectForUpdate(_forUpdate);

            select firstonly assetMoveHist
                where assetMoveHist.RecId == _recId;
        }

        return assetMoveHist;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RAssetLifeHistory</FormRef>
	<Label>@GLS223133</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>AccountNum</TitleField1>
	<TitleField2>ChangeDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>AccDateTimeUsrIdx</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RAssetMoveStandard</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetMoveStandard</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetTransferTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetTransferTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetTransferTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetTransferTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetDocument</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetDocument</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChangeDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NewLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NewEmployee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Userid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MoveType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Asset</Name>
			<Label>@SYS25653</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AttachedDocument</Name>
			<Label>@GLS116443</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttachDocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttachDocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Changes</Name>
			<Label>@GLS116254</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChangeDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Userid</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Company</Name>
			<Label>@SYS13342</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Company</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FinanciallyChargedPerson</Name>
			<Label>@GLS116158</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NewEmployee</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NewLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NewEmployee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChangeDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Userid</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferTransRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Location</Name>
			<Label>@GLS116157</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NewLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MoveType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reason</Name>
			<Label>@SYS107174</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonRefRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Receipted</Name>
			<Label>@SYS16476</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Receipted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NewLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetLocationId</ExtendedDataType>
			<Label>@GLS116155</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetIdAc</ExtendedDataType>
			<Label>@SYS25653</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AttachDocumentDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetDocumentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttachDocumentNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetDocumentNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ChangeDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetDepStartDate</ExtendedDataType>
			<Label>@SYS7402</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CompanyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MoveType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RAssetMoveType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NewEmployee</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetEmployee</ExtendedDataType>
			<Label>@GLS116154</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Posted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonRefRecID</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReasonRefRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Receipted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS4466</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransferTransRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Userid</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NewEmployeeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>NewEmployee</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccDateTimeUsrIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ChangeDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MoveType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Company</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<Field>Company</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>NewEmployee</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EmployeeTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NewEmployee</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetMoveHist</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NewEmployee</Name>
					<Field>NewEmployee</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetLocationNew</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetLocationNew</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetMoveHist</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LocationType_Extern</Name>
					<RelatedField>LocationType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NewLocation</Name>
					<SourceEDT>RAssetLocationId</SourceEDT>
					<Field>NewLocation</Field>
					<RelatedField>Location</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RassetMoveHist</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>RAssetMoveHist</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RassetMoveHist</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RAssetMoveHist</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChangeDate</Name>
					<Field>ChangeDate</Field>
					<RelatedField>ChangeDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MoveType</Name>
					<Field>MoveType</Field>
					<RelatedField>MoveType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<SourceEDT>RAssetId</SourceEDT>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetTransferTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetTransferTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetTransferTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetMoveHist</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferTransRecId</Name>
					<Field>TransferTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReasonTableRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetMoveHist</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonRefRecID</Name>
					<SourceEDT>ReasonRefRecID</SourceEDT>
					<Field>ReasonRefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>