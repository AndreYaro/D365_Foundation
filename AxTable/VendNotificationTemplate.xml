<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendNotificationTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendNotificationTemplate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a vendor account is associated with the category filters of the notification
    /// template.
    /// </summary>
    /// <param name="_vendAccount">
    /// The account number of the vendor.
    /// </param>
    /// <returns>
    /// true if the vendor matches a category that is specified in the vendor notification category filter;
    /// otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean checkCategory(VendAccount _vendAccount)
    {
        boolean                             result = false;
        VendNotificationTemplateCategory    templateCategory;
        VendCategory                        vendCategory;

        while select EcoResCategory, DataAreaId from templateCategory
            where (templateCategory.VendNotificationTemplate == this.RecId)
        {
            result = (select firstonly RecId from vendCategory
                      where vendCategory.VendorAccount  == _vendAccount
                      && vendCategory.Category          == templateCategory.EcoResCategory
                      && vendCategory.VendorDataArea    == templateCategory.DataAreaId).RecId != 0;

            if (result)
            {
                break;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Copies the topic, recipient query, subject, and message translation of the existing
    ///    <c>VendNotificationTemplate</c> record.
    /// </summary>
    /// <returns>
    ///    Retrieves the newly created <c>VendNotificationTemplate</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public VendNotificationTemplate copy()
    {
        VendNotificationTemplate                vendNotificationTemplate;
        VendNotificationTemplateTranslation     templateTranslation;
        VendNotificationTemplateTranslation     newTemplateTranslation;
        VendNotificationTemplateCategory        templateCategory;
        VendNotificationTemplateCategory        newTemplateCategory;

        ttsbegin;
        vendNotificationTemplate.initValue();
        vendNotificationTemplate.Topic = this.Topic;
        vendNotificationTemplate.EnableCategorySelection = this.EnableCategorySelection;
        vendNotificationTemplate.QueryData = this.QueryData;
        vendNotificationTemplate.insert();

        while select templateTranslation where templateTranslation.VendNotificationTemplate == this.RecId
        {
            newTemplateTranslation.initValue();
            newTemplateTranslation.LanguageId = templateTranslation.LanguageId;
            newTemplateTranslation.Subject = templateTranslation.Subject;
            newTemplateTranslation.Message = templateTranslation.Message;
            newTemplateTranslation.VendNotificationTemplate = vendNotificationTemplate.RecId;
            newTemplateTranslation.insert();
        }

        while select EcoResCategory from templateCategory where templateCategory.VendNotificationTemplate == this.RecId
        {
            newTemplateCategory.initValue();
            newTemplateCategory.EcoResCategory = templateCategory.EcoResCategory;
            newTemplateCategory.VendNotificationTemplate = vendNotificationTemplate.RecId;
            newTemplateCategory.insert(false);
        }
        ttscommit;

        return vendNotificationTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDocument</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the selected <c>VendNotificationTemplate</c> record has an attached document.
    /// </summary>
    /// <returns>
    ///    true if the <c>VendNotificationTemplate</c> record has an attached document; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display boolean hasDocument()
    {
        boolean hasAttachedDocument = false;

        hasAttachedDocument = DocuRef::exist(this.DataAreaId, this.TableId, this.RecId);

        return hasAttachedDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendNotificationTemplate</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>VendNotificationTemplate</c> table record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendNotificationTemplate</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendNotificationTemplate find( recId _recId, boolean _forUpdate = false )
    {
        VendNotificationTemplate vendNotificationTemplate;

        vendNotificationTemplate.selectForUpdate(_forUpdate);

        select firstonly vendNotificationTemplate
            where vendNotificationTemplate.RecId == _recId;

        return vendNotificationTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAsDeleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks <c>VendNotificationTemplate</c> record as Deleted and deletes associated sent messages.
    /// </summary>
    /// <param name = "_deleteSentMessages">A boolean indicating if related messages should be deleted.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void markAsDeleted(boolean _deleteSentMessages)
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(strFmt("@SCM:TransactionExpected", funcName()));
        }

        if (_deleteSentMessages)
        {
            this.deleteMessages();
        }

        this.Status = VendNotificationStatus::Deleted;
        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.defaultQueryData();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteMessages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all messages related to the <c>VendNotificationTemplate</c> record.
    /// </summary>
    private void deleteMessages()
    {
        EventInbox inbox;
        VendNotification vendNotification;

        while select vendNotification where vendNotification.VendNotificationTemplate == this.RecId
        {
            delete_from inbox where inbox.InboxId == vendNotification.EventInbox;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultQueryData</Name>
				<Source><![CDATA[
    private void defaultQueryData()
    {
        this.QueryData = new QueryRun(queryStr(VendNotificationTemplate)).pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VSS</ConfigurationKey>
	<DeveloperDocumentation>@SYS323460</DeveloperDocumentation>
	<Label>@SYS152448</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>Topic</TitleField1>
	<TitleField2>createdDateTime</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Obsolete</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Topic</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableCategorySelection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QueryData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS152435</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Topic</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendEmail</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Selection</Name>
			<Label>@SYS152429</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QueryData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableCategorySelection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableCategorySelection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendNotificationCategorySelection</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpirationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendNotificationExpirationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>QueryData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendNotificationQueryData</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SendEmail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS152439</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendNotificationStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Topic</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendNotificationTopic</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>