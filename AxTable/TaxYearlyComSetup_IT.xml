<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxYearlyComSetup_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxYearlyComSetup_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query for the tax transactions.
    /// </summary>
    /// <returns>
    /// The <c>Query</c> object with ranges added by the user, if any.
    /// </returns>
    /// <remarks>
    /// Default filters are on Sales tax direction and Transaction date. The user can add other filters as well.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Query getQuery()
    {
        Query query;

        if (SysQuery::isPackedOk(this.PackedQuery))
        {
            query = new Query(this.PackedQuery);
        }
        else
        {
            query = new Query();

            QueryBuildDataSource qbdsTaxBook = query.addDataSource(tableNum(TaxBook));
            findOrCreateRange_W(qbdsTaxBook, fieldNum(TaxBook, atecofinCode_IT)).status(RangeStatus::Locked);
            findOrCreateRange_W(qbdsTaxBook, fieldNum(TaxBook, TaxBookType), SysQuery::valueNot(TaxBookType::NotIncluded)).status(RangeStatus::Locked);

            QueryBuildDataSource qbdsTaxTrans = qbdsTaxBook.addDataSource(tableNum(TaxTrans));
            qbdsTaxTrans.relations(true);
            qbdsTaxTrans.fetchMode(QueryFetchMode::One2Many);
            findOrCreateRange_W(qbdsTaxTrans, fieldNum(TaxTrans, TaxDirection));
            findOrCreateRange_W(qbdsTaxTrans, fieldNum(TaxTrans, TransDate));
            findOrCreateRange_W(qbdsTaxTrans, fieldNum(TaxTrans, TaxCode)).status(RangeStatus::Locked);
        }

        QueryBuildDataSource qbdsTaxTrans_W = query.dataSourceTable(tableNum(TaxTrans_W));

        if (TaxParameters::reportUseVatDueDate_W() && !qbdsTaxTrans_W)
        {
            QueryBuildDataSource qbdsTaxTrans = query.dataSourceTable(tableNum(TaxTrans));
            qbdsTaxTrans_W = TaxTransCustomization_W::addDataSource(qbdsTaxTrans, tableNum(TaxTrans_W));
            findOrCreateRange_W(qbdsTaxTrans_W, fieldNum(TaxTrans_W, VatDueDate_W));
        }
        else if (!TaxParameters::reportUseVatDueDate_W() && qbdsTaxTrans_W)
        {
            qbdsTaxTrans_W.enabled(false);
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Sign = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(TaxYearlyComSetup_IT, Calculation) :
                switch (this.Calculation)
                {
                    case TaxYearlyComCalculation_IT::Total :
                        this.FieldValue = '';
                        this.TaxReportingAmount = TaxReportingAmount_IT::Empty;
                        break;

                    case TaxYearlyComCalculation_IT::Manual:
                        this.TaxReportingAmount = TaxReportingAmount_IT::Empty;
                        break;

                    case TaxYearlyComCalculation_IT::Tax :
                        this.FieldValue = '';
                        this.TaxReportingAmount = TaxReportingAmount_IT::TaxBase;
                        break;
                }

                this.IncludeTaxInCostPrice = false;
                this.Sign = 1;

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prompts the user for a query to apply additional filters to the tax transactions.
    /// </summary>
    /// <returns>
    /// true, if the user has clicked OK after editing the filters; false otherwise.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean promptQuery()
    {
        QueryRun queryRun = new QueryRun(this.getQuery());
        queryRun.saveUserSetup(false);

        boolean ret = queryRun.prompt();

        if (ret)
        {
            this.PackedQuery = queryRun.pack();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(TaxYearlyComSetup_IT, FieldID):
                ret = TaxReportLine_IT::validateFieldID(
                    this.FieldID,
                    strFmt("@SYS119897", this.FieldID, fieldPName(TaxYearlyComSetup_IT, FieldID))) && ret;
                break;

            case fieldStr(TaxYearlyComSetup_IT, Sign):
                if (this.Sign != 1 && this.Sign != -1)
                {
                    ret = checkFailed(strFmt("@SYS119897", this.Sign, fieldPName(TaxYearlyComSetup_IT, Sign)));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxYearlyComSetup_IT find(TaxReportFieldID_IT _fieldId, boolean _selectForUpdate = false)
    {
        TaxYearlyComSetup_IT taxYearlyComSetup;

        taxYearlyComSetup.selectForUpdate(_selectForUpdate);

        select firstonly taxYearlyComSetup
            where taxYearlyComSetup.FieldID == _fieldId;

        return taxYearlyComSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDateRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default period filter on the <c>TaxTrans</c> or <c>TaxTrans_W</c> datasource unless user has specified the period manually.
    /// </summary>
    /// <param name="_taxTransDS">
    /// The <c>TaxTrans</c> datasource.
    /// </param>
    /// <param name="_periodStart">
    /// The start date of the period.
    /// </param>
    /// <param name="_periodEnd">
    /// The end date of the period.
    /// </param>
    /// <exception cref="Exception::Error">
    /// The datasource contains table which is different from <c>TaxTrans</c> or <c>TaxTrans_W</c>.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void setDefaultDateRange(QueryBuildDataSource _taxTransDS, TransDate _periodStart, TransDate _periodEnd)
    {
        int rangeCnt = _taxTransDS.rangeCount();
        int rangeIdx = 1;
        boolean noUserRanges = true;
        QueryBuildRange qbr;
        FieldId fieldId;
        FieldName fieldName;

        switch (_taxTransDS.table())
        {
            case tableNum(TaxTrans):
                fieldId = fieldNum(TaxTrans, TransDate);
                fieldName = fieldStr(TaxTrans, TransDate);
                break;

            case tableNum(TaxTrans_W):
                fieldId = fieldNum(TaxTrans_W, VatDueDate_W);
                fieldName = fieldStr(TaxTrans_W, VatDueDate_W);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        while (noUserRanges && rangeIdx <= rangeCnt)
        {
            qbr = _taxTransDS.range(rangeIdx);

            if (qbr.value() && qbr.fieldName() == fieldName)
            {
                noUserRanges = false;
            }

            rangeIdx ++;
        }

        if (noUserRanges)
        {
            findOrCreateRange_W(_taxTransDS, fieldId, SysQuery::range(_periodStart, _periodEnd));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYP4881974</DeveloperDocumentation>
	<FormRef>TaxYearlyComSetup_IT</FormRef>
	<Label>@SYS125652</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>FieldID</TitleField1>
	<TitleField2>FieldDescription</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeTaxInCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportingAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CalculationSetup</Name>
			<Label>@SYS31242</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReportingAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeTaxInCostPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldFormat</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Calculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportingAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeTaxInCostPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ManualSetup</Name>
			<Label>@SYS23968</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Calculation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxYearlyComCalculation_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FieldFormat</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxReportFieldFormat_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReportFieldID_IT</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReportFieldValue_IT</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeTaxInCostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24596</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Sign</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Sign</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReportingAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxReportingAmount_IT</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FieldIDIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>