<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>FiscalTechnicalProfileDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the description of technical profile.
    /// </summary>
    /// <returns>Technical profile description.</returns>
    public display Description FiscalTechnicalProfileDescription()
    {
        return RetailFiscalIntegrationTechnicalProfile::findProfileId(this.FiscalTechnicalProfileId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add necessary condition when fill in the <c>RetailHardwareProfileFiscalIntegrationTechnicalProfileLine</c> table fields.
    /// </summary>
    /// <returns>
    /// Ture if the connector type is internal or external and technical profile lines don't have same connector; otherwise, false.
    /// </returns>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine, FiscalTechnicalProfileId) :
                ret = ret && this.validateFiscalTechnicalProfileId(this.orig());
                break;

            default :
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFiscalTechnicalProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates FiscalTechnicalProfileId field in <c>RetailHardwareProfileFiscalIntegrationTechnicalProfileLine</c> table.
    /// </summary>
    /// <returns>
    /// Ture if the connector type is internal or external and technical profile lines don't have same connector; otherwise, false.
    /// </returns>
    private boolean validateFiscalTechnicalProfileId(RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine origLine)
    {
        boolean ret = true;
        boolean skipValidate = false;
        RetailFiscalIntegrationTechnicalProfile technicalProfile = RetailFiscalIntegrationTechnicalProfile::findProfileId(this.FiscalTechnicalProfileId);
        RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine technicalProfileLine;

        boolean connectorTypeValid = RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine::validateConnectorType(technicalProfile);
        if (!connectorTypeValid)
        {
            // The selected technical profile is not allowed. Please select a technical profile with 'Connector type' = 'Internal' or 'External, or 'Local' with 'Connector location' = 'Register'.
            ret = checkFailed("@RetailFiscalIntegration:FunctionalityProfilesOnlyAllowInternalExternalOrLocalAtRegister");
        }

        // Selected technical profiles are not allowed to belong to same connector,
        // skip the validation when modified the <c>RetailHardwareProfileFiscalIntegrationTechnicalProfileLine</c> record with one line only.
        select count(RecId) from technicalProfileLine where technicalProfileLine.FunctionalityProfileId == this.FunctionalityProfileId;

        if (technicalProfileLine.RecId == 1)
        {
            select firstOnly RecId from technicalProfileLine where technicalProfileLine.FunctionalityProfileId == this.FunctionalityProfileId;

            if (technicalProfileLine.RecId == this.RecId)
            {
                skipValidate = true;
            }
        }

        if (!skipValidate && technicalProfile && this.FiscalTechnicalProfileId != origLine.FiscalTechnicalProfileId)
        {
            RetailFiscalIntegrationTechnicalProfile profile;
            RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine line;

            select firstonly RecId from profile where profile.ConnectorName == technicalProfile.ConnectorName
                exists join Line
                where profile.ProfileId == line.FiscalTechnicalProfileId
                && line.FunctionalityProfileId == this.FunctionalityProfileId;

            if (profile.RecId)
            {
                ret = checkFailed("@RetailFiscalIntegration:SelectedProfilesBelongToTheSameConnector");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateConnectorType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the connector type of the fiscal technical profile.
    /// </summary>
    /// <param name = "_technicalProfile">The technical profile to validate.</param>
    /// <returns>True if the connector type is valid; false otherwise.</returns>
    private static boolean validateConnectorType(RetailFiscalIntegrationTechnicalProfile _technicalProfile)
    {
        boolean ret = 
            _technicalProfile.ConnectorType == RetailFiscalIntegrationConnectorType::Internal ||
            _technicalProfile.ConnectorType == RetailFiscalIntegrationConnectorType::External ||
            (
                _technicalProfile.ConnectorType == RetailFiscalIntegrationConnectorType::Local &&
                _technicalProfile.ConnectorLocation == RetailFiscalIntegrationConnectorLocation::Register
            );

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByFiscalTechnicalProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine</c> table specified by a technical profile id.
    /// </summary>
    /// <param name = "_fiscalTechnicalProfileId">
    /// The profile id of the <c>RetailFiscalIntegrationTechnicalProfile</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine findByFiscalTechnicalProfileId(RetailFiscalIntegrationTechnicalProfileId _fiscalTechnicalProfileId, boolean _forUpdate = false)
    {
        RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine retailFunctionalityProfileFiscalIntegrationTechnicalProfileLine;
        if (_fiscalTechnicalProfileId)
        {
            if (_forUpdate)
            {
                retailFunctionalityProfileFiscalIntegrationTechnicalProfileLine.selectForUpdate(_forUpdate);
            }
            select firstonly retailFunctionalityProfileFiscalIntegrationTechnicalProfileLine
                where retailFunctionalityProfileFiscalIntegrationTechnicalProfileLine.FiscalTechnicalProfileId == _fiscalTechnicalProfileId;
        }

        return retailFunctionalityProfileFiscalIntegrationTechnicalProfileLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RetailFiscalIntegration:RetailFunctionalityProfileFiscalIntegartionTechnicalProfileLine</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>FunctionalityProfileId</TitleField1>
	<TitleField2>FiscalTechnicalProfileId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>ProfileIdx</ClusteredIndex>
	<Modules>BrickAndMortarStore</Modules>
	<PrimaryIndex>ProfileIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FunctionalityProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFunctionalityProfileId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalTechnicalProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationTechnicalProfileId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FunctionalityProfileId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FiscalTechnicalProfileId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailFunctionalityProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailFunctionalityProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FunctionalityProfileId</Name>
					<Field>FunctionalityProfileId</Field>
					<RelatedField>profileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailFiscalIntegrationTechnicalProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailFiscalIntegrationTechnicalProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalTechnicalProfileId</Name>
					<Field>FiscalTechnicalProfileId</Field>
					<RelatedField>ProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>