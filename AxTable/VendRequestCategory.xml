<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendRequestCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendRequestCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the localized description of the category.
    /// </summary>
    /// <returns>
    ///    The description of the category.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display EcoResCategoryDescription categoryDescription()
    {
        return EcoResCategoryTranslation::find(this.Category, LanguageTable::defaultLanguage()).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.ValidFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.ValidTo = maxDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean     ret;
        AccountNum  accountNum = VendRequest::find(this.VendRequest).AccountNum;

        ret = super();

        if (ret && accountNum != '' && VendCategory::exist(accountNum, this.Category, this.dataAreaId))
        {
            // Category already exists for vendor "%1", category "%2"
            ret = checkFailed(strFmt("@SYS308753", accountNum, EcoResCategory::find(this.Category).Name));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendRequestNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the vendor request number from the current record in the <c>VendRequest</c> table.
    /// </summary>
    /// <returns>
    /// The vendor request number.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display VendRequestNumber vendRequestNumber()
    {
        return (select VendRequestNumber
                from   vendRequest
                where  vendRequest.RecId == this.VendRequest).VendRequestNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAllConfirmed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that all categories have been confirmed for a vendor request.
    /// </summary>
    /// <param name="_vendRequestRecId">
    ///    The vendor request record ID for which to check the confirmed categories.
    /// </param>
    /// <returns>
    ///    true if all of the categories have been confirmed; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkAllConfirmed(recId _vendRequestRecId)
    {
        boolean ret = true;

        VendRequestCategory vendRequestCategory;

        select firstonly RecId from vendRequestCategory where vendRequestCategory.VendRequest == _vendRequestRecId
            && vendRequestCategory.VendorConfirmed == VendRequestVendorConfirmed::NotSpecified;

        if (vendRequestCategory.RecId != 0)
        {
            // You must set a confirmation status for each category.
            ret = checkFailed("@SYS301630");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>VendRequestCategory</c> record from the supplied <c>VendRequest</c> and
    ///    <c>EcoResCategory</c> record IDs.
    /// </summary>
    /// <param name="_vendRequestId">
    ///    The <c>VendRequest</c> record ID of the record to update.
    /// </param>
    /// <param name="_categoryId">
    ///    The <c>EcoResCategory</c> record ID of the record to update.
    /// </param>
    /// <returns>
    ///    The <c>VendRequestCategory</c> record ID of the newly created record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static recId createFromCode(recId _vendRequestId, recId _categoryId)
    {
        VendRequestCategory vendRequestCategory;

        vendRequestCategory.initValue();
        vendRequestCategory.Category = _categoryId;
        vendRequestCategory.VendRequest = _vendRequestId;

        ttsbegin;
        vendRequestCategory.insert();
        ttscommit;

        return vendRequestCategory.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createVendRequestCategoryFromRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new records in <c>VendRequestProspectiveProfile</c> from an unsolicited vendor profile.
    /// </summary>
    /// <param name="_vendRequestSignupRecId">
    /// The record ID of the <c>VendRequest</c> record that was created from the unsolicited vendor profile.
    /// </param>
    /// <param name="_vendRequestCompanyRecId">
    /// The record ID of <c>DirOrganization</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static void createVendRequestCategoryFromRecId(
        VendRequestSignupRecId   _vendRequestSignupRecId,
        VendRequestCompanyRecId  _vendRequestCompanyRecId)
    {
        VendRequestSignupCategory    vendRequestSignupCategory;
        VendRequestCategory          vendRequestCategory;

        while select Category from vendRequestSignupCategory
            where vendRequestSignupCategory.Signup == _vendRequestSignupRecId
        {
            vendRequestCategory.clear();
            vendRequestCategory.Category          = vendRequestSignupCategory.Category;
            vendRequestCategory.VendRequest       = _vendRequestCompanyRecId;
            vendRequestCategory.ValidFrom         = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
            vendRequestCategory.ValidTo           = DateTimeUtil::date(DateTimeUtil::maxValue());
            vendRequestCategory.CategoryStatus    = VendCategoryStatus::Standard;
            vendRequestCategory.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>VendRequestCategory</c> table.
    /// </summary>
    /// <param name="_vendRequestId">
    ///    The <c>VendRequestCategoryExtension</c> record ID of the record to check for existence.
    /// </param>
    /// <param name="_categoryId">
    ///    The <c>EcoResCategory</c> record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the record in the <c>VendRequestCategory</c> table exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _vendRequestId,recId _categoryId)
    {
        return (select firstonly RecId
                from  vendRequestCategory
                where vendRequestCategory.VendRequest == _vendRequestId &&
                      vendRequestCategory.Category    == _categoryId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendRequestId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendRequestCategory</c> table.
    /// </summary>
    /// <param name="_vendRequestId">
    ///    The <c>VendRequest</c> record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The <c>VendRequestCategory</c> record; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendRequestCategory findByVendRequestId( recId _vendRequestId, boolean _forUpdate = false )
    {
        VendRequestCategory vendRequestCategory;

        vendRequestCategory.selectForUpdate(_forUpdate);

        select firstonly vendRequestCategory
            where vendRequestCategory.VendRequest == _vendRequestId;

        return vendRequestCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates an existing <c>VendRequestCategory</c> record that has the specified <c>VendRequest</c> and
    ///    <c>EcoResCategory</c> record IDs.
    /// </summary>
    /// <param name="_vendRequestId">
    ///    The <c>VendRequest</c> record ID that will be used for the update.
    /// </param>
    /// <param name="_categoryId">
    ///    The <c>EcoResCategory</c> record ID that will be used for the update.
    /// </param>
    /// <returns>
    ///    The <c>VendRequestCategory</c> record ID of the data that was updated.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static recId updateCode(recId _vendRequestId, recId _categoryId)
    {
        VendRequestCategory vendRequestCategory;

        vendRequestCategory = VendRequestCategory::findByVendRequestId(_vendRequestId, true);

        if (vendRequestCategory.RecId == 0)
        {
            return vendRequestCategory.RecId;
        }

        vendRequestCategory.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);

        ttsbegin;
        vendRequestCategory.Category = _categoryId;
        vendRequestCategory.write();
        ttscommit;

        return vendRequestCategory.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendRequest</ConfigurationKey>
	<DeveloperDocumentation>@SYS322702</DeveloperDocumentation>
	<Label>@SYS135200</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendRequest</TitleField1>
	<TitleField2>Category</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Obsolete</Modules>
	<ReplacementKey>CategoryIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorConfirmed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperatingUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategoryConfirmation</Name>
			<Label>@SYS301631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorConfirmed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValidPeriod</Name>
			<Label>@SYS29148</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendRequestCategory</Name>
			<Label>@SYS135200</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperatingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendRequestCategoryRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CategoryStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendCategoryStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OperatingUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCategoryOperatingUnitRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendorConfirmed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendRequestVendorConfirmed</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendRequest</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendRequestRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendRequest</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OperatingUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OMOperatingUnitIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OperatingUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategory_VendRequestCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OMOperatingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OMOperatingUnit</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>OMOperatingUnit_VendRequestCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OperatingUnit</Name>
					<Field>OperatingUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendRequest</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendRequest</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendRequest</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendRequest_VendRequestCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendRequest</Name>
					<Field>VendRequest</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>