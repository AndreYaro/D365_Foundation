<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendSupplyRiskKPICache</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendSupplyRiskKPICache extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the supply risk KPI cache.
    /// </summary>
    /// <param name = "_contextId">The context ID for the cached data.</param>
    public static void updateCache(SysDataCacheContextId _contextId)
    {
        using (var activityContext = VendSupplyRiskInstrumentationLogger::createLogger(tableStr(VendSupplyRiskKPICache)).cache().updateCacheKPI())
        {
            VendSupplyRiskKPICache cache;

            ttsbegin;

            delete_from cache;

            SetEnumerator enumValues = new SysDictEnum(enumNum(VendSupplyRiskKPIType)).getEnumerator();

            while (enumValues.moveNext())
            {
                VendSupplyRiskKPICache::updateCacheByType(_contextId, enumValues.current());
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static VendSupplyRiskKPICache find(VendSupplyRiskKPIType _kpiType)
    {
        VendSupplyRiskKPICache kpiCache;

        select firstonly kpiCache
            where kpiCache.KPIType == _kpiType;

        return kpiCache;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCacheByType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the supply risk KPI cache by type.
    /// </summary>
    /// <param name = "_contextId">The context ID for the cached data.</param>
    /// <param name = "_kpiType">The KPI type.</param>
    private static void updateCacheByType(SysDataCacheContextId _contextId, VendSupplyRiskKPIType _kpiType)
    {
        VendSupplyRiskKPICache cache = VendSupplyRiskKPICache::getByType(_kpiType, null);

        cache.SysDataCacheContextId = _contextId;
        cache.insert();

    }

]]></Source>
			</Method>
			<Method>
				<Name>getByType</Name>
				<Source><![CDATA[
    internal static VendSupplyRiskKPICache getByType(VendSupplyRiskKPIType _kpiType, VendSupplyRiskSelectPeriodState _periodState)
    {
        FieldId selectionField;
        VendSupplyRiskKPICache cache;

        switch (_kpiType)
        {
            case VendSupplyRiskKPIType::InFullDelivery:
                selectionField = fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, IsReceivedCompleteInFull);
                break;

            case VendSupplyRiskKPIType::OnTimeDelivery:
                selectionField = fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, IsReceivedCompleteOnTime);
                break;

            case VendSupplyRiskKPIType::OnTimeInFullDelivery:
                selectionField = fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, IsReceivedCompleteOnTimeInFull);
                break;

            case VendSupplyRiskKPIType::RequestedDeliveryDateAcceptance:
                selectionField = fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, IsConfirmedOnTime);
                break;

            default :
                throw error(error::wrongUseOfFunction(funcName()));
        }

        Query Query = new Query();

        QueryBuildDataSource queryDatasource = Query.addDataSource(tableNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView));

        queryDatasource.addGroupByField(selectionField);
        queryDatasource.addOrderByField(selectionField, SortOrder::Ascending);
        queryDatasource.addSelectionField(fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, RecId), SelectionField::Count);

        if (_periodState)
        {
            QueryBuildRange requestedDeliveryDateRange = SysQuery::findOrCreateRange(queryDatasource, fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, RequestedDeliveryDate));

            requestedDeliveryDateRange.value(SysQueryRangeUtil::dateRange(_periodState.parmFromDate(), _periodState.parmToDate()));
        }

        QueryRun queryRun = new QueryRun(Query);

        while (queryRun.next())
        {
            VendSupplyRiskPurchaseOrderLineAggregatedReceiptView receipts = queryRun.get(tableNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView));

            if (receipts.(selectionField) == 1)
            {
                cache.KPICount += receipts.RecId;
            }

            cache.KPITotal += receipts.RecId;
        }

        cache.KPIType = _kpiType;

        return cache;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:VendSupplyRiskKPICache_DevDoc</DeveloperDocumentation>
	<Label>@SCM:VendSupplyRiskKPICache</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>KPIType</TitleField1>
	<TitleField2>KPICount</TitleField2>
	<ClusteredIndex>PrimaryKeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>PrimaryKeyIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SysDataCacheContextId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysDataCacheContextId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>KPIType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendSupplyRiskKPIType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KPITotal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KPICount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PrimaryKeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>KPIType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>