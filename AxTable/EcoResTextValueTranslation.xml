<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResTextValueTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResTextValueTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a product configuration model visitor.
    /// </summary>
    /// <param name="_visitor">
    ///  A product configuration model visitor.
    /// </param>
    public void accept(PCModelVisitor _visitor)
    {
        _visitor.visitStart(this);
        _visitor.visitEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        super();

        this.updateTextValueIfSystemLanguage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        super();

        this.updateTextValueIfSystemLanguage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTextValueIfSystemLanguage</Name>
				<Source><![CDATA[
        private void updateTextValueIfSystemLanguage()
    {
        EcoResTextValue textValue;
        
        if (this.Language == SystemParameters::getSystemLanguageId())
        {
            AttributeValueText oldValue;
            boolean isTextValueValid;

            ttsbegin;
            select forupdate firstonly TextValue from textValue
                where textValue.RecId == this.TextValueTable
                    && textValue.TextValue != this.TextValue;
            if (textValue)
            {
                oldValue = textValue.TextValue;
                textValue.TextValue = this.TextValue;
                isTextValueValid = textValue.validateWrite();
                if (isTextValueValid)
                {
                    textValue.update();
                }
            }
            ttscommit;

            if (isTextValueValid && oldValue != this.TextValue)
            {
                this.runTranslatedValuesUpdate(oldValue);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runTranslatedValuesUpdate</Name>
				<Source><![CDATA[
    private void runTranslatedValuesUpdate(AttributeValueText _searchValue)
    {
        EcoResEnumerationAttributeTypeValueUpdateController ecoResValueUpdateController = EcoResEnumerationAttributeTypeValueUpdateController::construct();
        EcoResEnumerationAttributeTypeValueUpdateContract ecoResValueUpdateContract = ecoResValueUpdateController.getDataContractObject() as EcoResEnumerationAttributeTypeValueUpdateContract;
        EcoResEnumerationAttributeTypeValue ecoResEnumerationAttributeTypeValue;

        while select ecoResEnumerationAttributeTypeValue
            where EcoResEnumerationAttributeTypeValue.value == this.TextValueTable
        {
            ecoResValueUpdateContract.parmEcoResAttributeTypeRecId(ecoResEnumerationAttributeTypeValue.AttributeType);
            ecoResValueUpdateContract.parmEcoResTextValueRecId(this.TextValueTable);
            ecoResValueUpdateContract.parmSearchValue(_searchValue);
            ecoResValueUpdateController.parmShowDialog(false);
            ecoResValueUpdateController.startOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a record in the <c>EcoResTextValueTranslation</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return EcoResTextValueTranslation::find(_recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResTextValueTranslation</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResTextValueTranslation</c> table; otherwise, an empty buffer.
    /// </returns>
    public static EcoResTextValueTranslation find(RefRecId _recId, boolean _forupdate = false)
    {
        EcoResTextValueTranslation      ecoResTextValueTranslation;

        ecoResTextValueTranslation.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly ecoResTextValueTranslation
                where ecoResTextValueTranslation.RecId == _recId;
        }
        return ecoResTextValueTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTextValueLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResTextValueTranslation</c> table.
    /// </summary>
    /// <param name="_textValueRecId">
    ///    The text value record ID of the record to find.
    /// </param>
    /// <param name="_language">
    ///    The translation language.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResTextValueTranslation</c> table; otherwise, an empty buffer.
    /// </returns>
    public static EcoResTextValueTranslation findByTextValueLanguage(RefRecId _textValueRecId, LanguageId _language, boolean _forupdate = false)
    {
        EcoResTextValueTranslation      ecoResTextValueTranslation;

        ecoResTextValueTranslation.selectForUpdate(_forupdate);

        if (_textValueRecId && _language)
        {
            select firstonly ecoResTextValueTranslation
                where ecoResTextValueTranslation.TextValueTable == _textValueRecId
                    && ecoResTextValueTranslation.Language == _language;
        }

        return ecoResTextValueTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS152850</DeveloperDocumentation>
	<Label>@SYS130986</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TextValue</TitleField1>
	<TitleField2>Language</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>LanguageIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>LanguageIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TextValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TextValueTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TextValueTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TextValueTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TextValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Language</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TextValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeValueText</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TextValueTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes>
		<AxTableFullTextIndex>
			<Name>FullTextIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TextValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableFullTextIndex>
	</FullTextIndexes>
	<Indexes>
		<AxTableIndex>
			<Name>LanguageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TextValueTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Language</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Locale</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Locale</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Locale_EcoResTextValueTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Language</Name>
					<Field>Language</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TextValueTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResTextValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TextValueTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>TextValueTable_EcoResTextValueTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TextValueTable</Name>
					<Field>TextValueTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>