<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginTransferReceive</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginTransferReceive extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOriginRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator of the receipt transactions and the inventory transfer order line.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void deleteOriginRelationship(InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginTransferReceive  inventTransOriginTransferReceive;

        ttsbegin;

        delete_from inventTransOriginTransferReceive
            where inventTransOriginTransferReceive.InventTransOrigin == _inventTransOriginId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator of the receipt transactions and the inventory transfer order line.
    /// </summary>
    /// <param name="_transferOrderDataAreaId">
    /// The value of the <c>dataAreaId</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderId">
    /// The value of the <c>TransferId</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderLineNum">
    /// The value of the <c>LineNum</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    public static void deleteOwnerRelationship(
        DataAreaId          _transferOrderDataAreaId,
        InventTransferId    _transferOrderId,
        LineNum             _transferOrderLineNum)
    {
        InventTransOriginTransferReceive  inventTransOriginTransferReceive;

        ttsbegin;

        delete_from inventTransOriginTransferReceive
            where inventTransOriginTransferReceive.TransferReceiveId         == _transferOrderId
               && inventTransOriginTransferReceive.TransferReceiveLineNum    == _transferOrderLineNum
               && inventTransOriginTransferReceive.TransferReceiveDataAreaId == _transferOrderDataAreaId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the inventory transactions originator of the receipt transactions for the
    ///    inventory transfer order line.
    /// </summary>
    /// <param name="_transferOrderDataAreaId">
    ///    The value of the <c>dataAreaId</c> field of the <c>InventTransferLine</c> table. It is a part of
    ///    the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderId">
    ///    The value of the <c>TransferId</c> field of the <c>InventTransferLine</c> table. It is a part of
    ///    the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderLineNum">
    ///    The value of the <c>LineNum</c> field of the <c>InventTransferLine</c> table. It is a part of the
    ///    primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <returns>
    ///    The ID of the inventory transactions originator.
    /// </returns>
    public static InventTransOriginId findInventTransOriginId(DataAreaId _transferOrderDataAreaId, InventTransferId _transferOrderId, LineNum _transferOrderLineNum)
    {
        InventTransOriginTransferReceive  inventTransOriginTransferReceive;

        select firstonly InventTransOrigin from inventTransOriginTransferReceive
            where inventTransOriginTransferReceive.TransferReceiveId         == _transferOrderId
               && inventTransOriginTransferReceive.TransferReceiveLineNum    == _transferOrderLineNum
               && inventTransOriginTransferReceive.TransferReceiveDataAreaId == _transferOrderDataAreaId;

        return inventTransOriginTransferReceive.InventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the transfer line related to the ID of the inventory transactions originator.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///    The ID of the inventory transactions originator. It is the primary key on the
    ///    <c>InventTransOrigin</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the buffer should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A related record in the <c>InventTransferLine</c> table, if one exists; otherwise, an empty record.
    /// </returns>
    public static InventTransferLine inventTransferLine(
        InventTransOriginId     _inventTransOriginId,
        boolean                 _forUpdate = false)
    {
        InventTransferLine                  inventTransferLine;
        InventTransOriginTransferReceive    inventTransOriginTransferReceive;

        inventTransferLine.selectForUpdate(_forUpdate);

        select firstonly inventTransferLine
            exists join inventTransOriginTransferReceive
            where inventTransOriginTransferReceive.TransferReceiveDataAreaId == inventTransferLine.DataAreaId
               && inventTransOriginTransferReceive.TransferReceiveId         == inventTransferLine.TransferId
               && inventTransOriginTransferReceive.TransferReceiveLineNum    == inventTransferLine.LineNum
               && inventTransOriginTransferReceive.InventTransOrigin         == _inventTransOriginId;

        return inventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the relationship between the inventory transactions originator of the receipt transactions and the inventory transfer order line.
    /// </summary>
    /// <param name="_transferOrderDataAreaId">
    /// The value of the <c>dataAreaId</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderId">
    /// The value of the <c>TransferId</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_transferOrderLineNum">
    /// The value of the <c>LineNum</c> field of the <c>InventTransferLine</c> table. It is a part of the primary key on the <c>InventTransferLine</c> table.
    /// </param>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void writeOriginOwnerRelationship(
        DataAreaId              _transferOrderDataAreaId,
        InventTransferId        _transferOrderId,
        LineNum                 _transferOrderLineNum,
        InventTransOriginId     _inventTransOriginId)
    {
        InventTransOriginTransferReceive  inventTransOriginTransferReceive;
        Counter                           logCount = infologLine();

        ttsbegin;

        try
        {
            inventTransOriginTransferReceive.TransferReceiveDataAreaId  = _transferOrderDataAreaId;
            inventTransOriginTransferReceive.TransferReceiveLineNum     = _transferOrderLineNum;
            inventTransOriginTransferReceive.TransferReceiveId          = _transferOrderId;
            inventTransOriginTransferReceive.InventTransOrigin          = _inventTransOriginId;

            inventTransOriginTransferReceive.insert();
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == inventTransOriginTransferReceive.TableId)
            {
                update_recordset inventTransOriginTransferReceive
                setting InventTransOrigin = _inventTransOriginId
                where inventTransOriginTransferReceive.TransferReceiveId         == _transferOrderId
                   && inventTransOriginTransferReceive.TransferReceiveLineNum    == _transferOrderLineNum
                   && inventTransOriginTransferReceive.TransferReceiveDataAreaId == _transferOrderDataAreaId
                   && inventTransOriginTransferReceive.InventTransOrigin         != _inventTransOriginId;
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
            infolog.clear(logCount);
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventTransferOrders</ConfigurationKey>
	<DeveloperDocumentation>@SYS325117</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS133338</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventTransOrigin</TitleField1>
	<TitleField2>TransferReceiveId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TransferReceiveIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>TransferReceiveIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferReceiveLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransferReceiveDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransferReceiveId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TransferReceiveLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransferReceiveIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransferReceiveDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransferReceiveId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransferReceiveLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransferLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransferLine_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferLine_InventTransOriginTransferReceive</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferReceiveLineNum</Name>
					<Field>TransferReceiveLineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferReceiveDataAreaId</Name>
					<Field>TransferReceiveDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferReceiveId</Name>
					<Field>TransferReceiveId</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>LineIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_InventTransOriginTransferReceive</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>