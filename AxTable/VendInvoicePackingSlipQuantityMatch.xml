<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoicePackingSlipQuantityMatch</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendInvoicePackingSlipQuantityMatch extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>VendInvoicePackingSlipQuantityMatch</c> record for the specified
    /// <c>InvoiceSourceDocumentLine</c> , <c>PackingSlipSourceDocumentLine</c> table.
    /// </summary>
    /// <param name="_invoiceSourceDocumentLine">
    /// The <c>InvoiceSourceDocumentLine</c> value to check.
    /// </param>
    /// <param name="_packingSlipSourceDocumentLine">
    /// The <c>PackingSlipSourceDocumentLine</c> value to check.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to select the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A single <c>VendInvoicePackingSlipQuantityMatch</c> table record.
    /// </returns>
    /// <remarks>
    /// If the record does not exist, an empty <c>VendInvoicePackingSlipQuantityMatch</c> table record is
    /// returned.
    /// </remarks>
    public static VendInvoicePackingSlipQuantityMatch find(SourceDocumentLineRecId _invoiceSourceDocumentLine,
        SourceDocumentLineRecId _packingSlipSourceDocumentLine,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        if (_invoiceSourceDocumentLine && _packingSlipSourceDocumentLine)
        {
            if (_forUpdate)
            {
                vendInvoicePackingSlipQuantityMatch.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    vendInvoicePackingSlipQuantityMatch.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly vendInvoicePackingSlipQuantityMatch
                where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == _invoiceSourceDocumentLine
                   && vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == _packingSlipSourceDocumentLine;
        }

        return vendInvoicePackingSlipQuantityMatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>VendInvoicePackingSlipQuantityMatch</c> record by using the specified <c>RecId</c> field.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> value to check.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to select the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A single <c>VendInvoicePackingSlipQuantityMatch</c> record if it exists.
    /// </returns>
    /// <remarks>
    /// If the record does not exist, an empty <c>VendInvoicePackingSlipQuantityMatch</c> record is
    /// returned.
    /// </remarks>
    public static VendInvoicePackingSlipQuantityMatch findRecId(recId _recId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        if (_recId != 0)
        {
            if (_forUpdate)
            {
                vendInvoicePackingSlipQuantityMatch.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    vendInvoicePackingSlipQuantityMatch.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly vendInvoicePackingSlipQuantityMatch
                where vendInvoicePackingSlipQuantityMatch.RecId == _recId;
        }

        return vendInvoicePackingSlipQuantityMatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryQuantityMatched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the inventory quantity that is matched against invoice lines for an packing slip record.
    /// </summary>
    /// <param name="_packingSlipSourceDocumentLine">
    /// The <c>SourceDocumentLine</c> record of the packing slip for which to calculate the matched
    /// inventory quantity.
    /// </param>
    /// <returns>
    /// The inventory quantity that is matched against invoice lines for a packing slip record.
    /// </returns>
    public static InventQty inventoryQuantityMatched(SourceDocumentLineRecId _packingSlipSourceDocumentLine)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        select sum(InventQuantity) from vendInvoicePackingSlipQuantityMatch
            where vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == _packingSlipSourceDocumentLine;

        return vendInvoicePackingSlipQuantityMatch.InventQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQuantityMatched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the catch weight quantity that is matched against invoice lines for a packing slip line.
    /// </summary>
    /// <param name="_packingSlipSourceDocumentLine">
    /// The <c>SourceDocumentLine</c> for the packing slip for which to calculate matched inventory
    /// quantity.
    /// </param>
    /// <returns>
    /// The catch weight quantity that is matched against invoice lines for a packing slip line.
    /// </returns>
    public static PdsCWInventQty pdsCWQuantityMatched(SourceDocumentLineRecId _packingSlipSourceDocumentLine)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        select sum(PdsCWQuantity) from vendInvoicePackingSlipQuantityMatch
            where vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == _packingSlipSourceDocumentLine;

        return vendInvoicePackingSlipQuantityMatch.PdsCWQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchInventoryQuantityMatched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the purchase and inventory quantities that are matched against the invoice lines for a
    /// packing slip line.
    /// </summary>
    /// <param name="_packingSlipSourceDocumentLine">
    /// The <c>SourceDocumentLine</c> record with which the packing slip to calculate matched quantities.
    /// </param>
    /// <returns>
    /// A container with purchase, inventory and catch weight quantities that are matched against invoice
    /// lines for a packing slip line.
    /// </returns>
    public static container purchInventoryQuantityMatched(SourceDocumentLineRecId _packingSlipSourceDocumentLine)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        select sum(Quantity), sum(InventQuantity), sum(PdsCWQuantity)
            from vendInvoicePackingSlipQuantityMatch
            where vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == _packingSlipSourceDocumentLine;

        return [vendInvoicePackingSlipQuantityMatch.Quantity, vendInvoicePackingSlipQuantityMatch.InventQuantity,
            vendInvoicePackingSlipQuantityMatch.PdsCWQuantity];
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchQuantityMatched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the purchase quantity that is matched against invoice lines for a packing slip line.
    /// </summary>
    /// <param name="_packingSlipSourceDocumentLine">
    /// The <c>SourceDocumentLine</c> record of the packing slip for which to calculate the matched sales
    /// quantity.
    /// </param>
    /// <returns>
    /// The purchase quantity that is matched against invoice lines for a packing slip line.
    /// </returns>
    public static PurchQty purchQuantityMatched(SourceDocumentLineRecId _packingSlipSourceDocumentLine)
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;

        select sum(Quantity) from vendInvoicePackingSlipQuantityMatch
            where vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == _packingSlipSourceDocumentLine;

        return vendInvoicePackingSlipQuantityMatch.Quantity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS319454</DeveloperDocumentation>
	<Label>@SYS109518</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InvoiceSourceDocumentLIne</TitleField1>
	<TitleField2>PackingSlipSourceDocumentLine</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>AccountsPayable</Modules>
	<ReplacementKey>RefIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceSourceDocumentLIne</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipSourceDocumentLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceSourceDocumentLIne</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipSourceDocumentLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceSourceDocumentLIne</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipSourceDocumentLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS59970</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoiceSourceDocumentLIne</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SourceDocumentLineRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PackingSlipSourceDocumentLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SourceDocumentLineRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InvoiceSourceDocumentLIne</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackingSlipSourceDocumentLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PackingSlipInvoiceSourceDocumentLine</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PackingSlipSourceDocumentLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>VendInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceSourceDocumentLIne</Name>
					<Field>InvoiceSourceDocumentLIne</Field>
					<RelatedField>SourceDocumentLine</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPackingSlipTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPackingSlipTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingSlipSourceDocumentLine</Name>
					<Field>PackingSlipSourceDocumentLine</Field>
					<RelatedField>SourceDocumentLine</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>