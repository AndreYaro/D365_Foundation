<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyInventDim</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InterCompanyInventDim extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setValueForDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a value on the buffer for a given <c>InventDimension</c> class.
    /// </summary>
    /// <param name = "_dimensionClassName">The name of the <c>InventDimension</c> class.</param>
    /// <param name = "_value">The value to set.</param>
    protected void setValueForDimension(ClassName _dimensionClassName, anytype _value)
    {
        FieldId fieldId = InterCompanyInventDim::fieldIdForDimension(_dimensionClassName);
        this.(fieldId) = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValueForDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the value from the buffer for a given <c>InventDimension</c> class.
    /// </summary>
    /// <param name = "_dimensionClassName">The name of the <c>InventDimension</c> class.</param>
    /// <returns>The dimension's value.</returns>
    protected anytype getValueForDimension(ClassName _dimensionClassName)
    {
        FieldId fieldId = InterCompanyInventDim::fieldIdForDimension(_dimensionClassName);
        return this.(fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdForDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the field Id for a given <c>InventDimension</c> class.
    /// </summary>
    /// <param name = "_dimensionClassName">The name of the <c>InventDimension</c> class.</param>
    /// <returns>The field Id.</returns>
    static protected FieldId fieldIdForDimension(ClassName _dimensionClassName)
    {
        FieldId fieldIdOnInventDimParm = InventDimParm::fieldIdForDimension(_dimensionClassName);
        return InterCompanyInventDim::dimParm2dim(fieldIdOnInventDimParm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromInventDim</Name>
				<Source><![CDATA[
    public void fromInventDim(InventDim  _inventDim)
    {
        // Fields might not have been selected on the specified buffers, or might have been updated since selection
        _inventDim.checkInvalidFieldAccess(false);

        this.InventDimFieldsMap::initAllDimensionsFrom(_inventDim);
        // <GEERU>
        this.InventGTDId_RU   = _inventDim.InventGtdId_RU;
        this.InventProfileId_RU = _inventDim.InventProfileId_RU;
        this.InventOwnerId_RU   = _inventDim.InventOwnerId_RU;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>toInventDim</Name>
				<Source><![CDATA[
    public void toInventDim(InventDim  _inventDim)
    {
        _inventDim.InventDimFieldsMap::initAllDimensionsFrom(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSession</Name>
				<Source><![CDATA[
    static public void deleteSession(int _session)
    {
        InterCompanyInventDim    interCompanyInventDim;

        ttsbegin;
        delete_from interCompanyInventDim
               where interCompanyInventDim.SessionId == _session;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dim2dimParm</Name>
				<Source><![CDATA[
    public static FieldId dim2dimParm(FieldId _dimField)
    {
        #InventDimDevelop

        switch (_dimField)
        {
            case fieldNum(InterCompanyInventDim, ConfigId)          : return fieldNum(InventDimParm, ConfigIdFlag);
            case fieldNum(InterCompanyInventDim, InventSizeId)      : return fieldNum(InventDimParm, InventSizeIdFlag);
            case fieldNum(InterCompanyInventDim, InventColorId)     : return fieldNum(InventDimParm, InventColorIdFlag);
            case fieldNum(InterCompanyInventDim, InventStyleId)     : return fieldNum(InventDimParm, InventStyleIdFlag);
            case fieldNum(InterCompanyInventDim, InventVersionId)   : return fieldNum(InventDimParm, InventVersionIdFlag);
            case fieldNum(InterCompanyInventDim, InventSiteId)      : return fieldNum(InventDimParm, InventSiteIdFlag);
            case fieldNum(InterCompanyInventDim, InventLocationId)  : return fieldNum(InventDimParm, InventLocationIdFlag);
            case fieldNum(InterCompanyInventDim, InventBatchId)     : return fieldNum(InventDimParm, InventBatchIdFlag);
            case fieldNum(InterCompanyInventDim, wmsLocationId)     : return fieldNum(InventDimParm, wmsLocationIdFlag);
            case fieldNum(InterCompanyInventDim, wmsPalletId)       : return fieldNum(InventDimParm, wmsPalletIdFlag);
            case fieldNum(InterCompanyInventDim, InventSerialId)    : return fieldNum(InventDimParm, InventSerialIdFlag);
            case fieldNum(InterCompanyInventDim, LicensePlateId)    : return fieldNum(InventDimParm, LicensePlateFlag);
            case fieldNum(InterCompanyInventDim, InventStatusId)    : return fieldNum(InventDimParm, InventStatusFlag);
            case fieldNum(InterCompanyInventDim, InventGTDId_RU)    : return fieldNum(InventDimParm, InventGTDIdFlag_RU);
            case fieldNum(InterCompanyInventDim, InventProfileId_RU): return fieldNum(InventDimParm, InventProfileIdFlag_RU);
            case fieldNum(InterCompanyInventDim, InventOwnerId_RU)  : return fieldNum(InventDimParm, InventOwnerIdFlag_RU);
            case fieldNum(InterCompanyInventDim, InventDimension1)  : return fieldNum(InventDimParm, InventDimension1Flag);
            case fieldNum(InterCompanyInventDim, InventDimension2)  : return fieldNum(InventDimParm, InventDimension2Flag);
            case fieldNum(InterCompanyInventDim, InventDimension3)  : return fieldNum(InventDimParm, InventDimension3Flag);
            case fieldNum(InterCompanyInventDim, InventDimension4)  : return fieldNum(InventDimParm, InventDimension4Flag);
            case fieldNum(InterCompanyInventDim, InventDimension5)  : return fieldNum(InventDimParm, InventDimension5Flag);
            case fieldNum(InterCompanyInventDim, InventDimension6)  : return fieldNum(InventDimParm, InventDimension6Flag);
            case fieldNum(InterCompanyInventDim, InventDimension7)  : return fieldNum(InventDimParm, InventDimension7Flag);
            case fieldNum(InterCompanyInventDim, InventDimension8)  : return fieldNum(InventDimParm, InventDimension8Flag);
            case fieldNum(InterCompanyInventDim, InventDimension9)  : return fieldNum(InventDimParm, InventDimension9Flag);
            case fieldNum(InterCompanyInventDim, InventDimension10) : return fieldNum(InventDimParm, InventDimension10Flag);
            case fieldNum(InterCompanyInventDim, InventDimension11) : return fieldNum(InventDimParm, InventDimension11Flag);
            case fieldNum(InterCompanyInventDim, InventDimension12) : return fieldNum(InventDimParm, InventDimension12Flag);
        }

        throw error(strFmt("@SYS54431",funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimFieldList</Name>
				<Source><![CDATA[
    static public List dimFieldList()
    {
        return InventDimMetaDataCache::interCompanyDimFieldList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimParm2dim</Name>
				<Source><![CDATA[
    static public FieldId dimParm2dim(FieldId _dimParmField)
    {
        #InventDimDevelop

        switch (_dimParmField)
        {
            case fieldNum(InventDimParm, ConfigIdFlag)          : return fieldNum(InterCompanyInventDim, ConfigId);
            case fieldNum(InventDimParm, InventSizeIdFlag)      : return fieldNum(InterCompanyInventDim, InventSizeId);
            case fieldNum(InventDimParm, InventColorIdFlag)     : return fieldNum(InterCompanyInventDim, InventColorId);
            case fieldNum(InventDimParm, InventStyleIdFlag)     : return fieldNum(InterCompanyInventDim, InventStyleId);
			case fieldNum(InventDimParm, InventVersionIdFlag)   : return fieldNum(InterCompanyInventDim, InventVersionId);
            case fieldNum(InventDimParm, InventSiteIdFlag)      : return fieldNum(InterCompanyInventDim, InventSiteId);
            case fieldNum(InventDimParm, InventLocationIdFlag)  : return fieldNum(InterCompanyInventDim, InventLocationId);
            case fieldNum(InventDimParm, InventBatchIdFlag)     : return fieldNum(InterCompanyInventDim, InventBatchId);
            case fieldNum(InventDimParm, wmsLocationIdFlag)     : return fieldNum(InterCompanyInventDim, wmsLocationId);
            case fieldNum(InventDimParm, wmsPalletIdFlag)       : return fieldNum(InterCompanyInventDim, wmsPalletId);
            case fieldNum(InventDimParm, InventSerialIdFlag)    : return fieldNum(InterCompanyInventDim, InventSerialId);
            case fieldNum(InventDimParm, LicensePlateFlag)      : return fieldNum(InterCompanyInventDim, LicensePlateId);
            case fieldNum(InventDimParm, InventStatusFlag)      : return fieldNum(InterCompanyInventDim, InventStatusId);
            case fieldNum(InventDimParm, InventDimension1Flag)  : return fieldNum(InterCompanyInventDim, InventDimension1);
            case fieldNum(InventDimParm, InventDimension2Flag)  : return fieldNum(InterCompanyInventDim, InventDimension2);
            case fieldNum(InventDimParm, InventDimension3Flag)  : return fieldNum(InterCompanyInventDim, InventDimension3);
            case fieldNum(InventDimParm, InventDimension4Flag)  : return fieldNum(InterCompanyInventDim, InventDimension4);
            case fieldNum(InventDimParm, InventDimension5Flag)  : return fieldNum(InterCompanyInventDim, InventDimension5);
            case fieldNum(InventDimParm, InventDimension6Flag)  : return fieldNum(InterCompanyInventDim, InventDimension6);
            case fieldNum(InventDimParm, InventDimension7Flag)  : return fieldNum(InterCompanyInventDim, InventDimension7);
            case fieldNum(InventDimParm, InventDimension8Flag)  : return fieldNum(InterCompanyInventDim, InventDimension8);
            case fieldNum(InventDimParm, InventDimension9Flag)  : return fieldNum(InterCompanyInventDim, InventDimension9);
            case fieldNum(InventDimParm, InventDimension10Flag) : return fieldNum(InterCompanyInventDim, InventDimension10);
            case fieldNum(InventDimParm, InventDimension11Flag) : return fieldNum(InterCompanyInventDim, InventDimension11);
            case fieldNum(InventDimParm, InventDimension12Flag) : return fieldNum(InterCompanyInventDim, InventDimension12);
            case fieldNum(InventDimParm, InventGTDIdFlag_RU)    : return fieldNum(InterCompanyInventDim, InventGTDId_RU);
            case fieldNum(InventDimParm, InventProfileIdFlag_RU): return fieldNum(InterCompanyInventDim, InventProfileId_RU);
            case fieldNum(InventDimParm, InventOwnerIdFlag_RU)  : return fieldNum(InterCompanyInventDim, InventOwnerId_RU);
        }

        throw error(strFmt("@SYS54431",funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>formQueryAddDynalink</Name>
				<Source><![CDATA[
    static public void formQueryAddDynalink(
        FormDataSource  _inventDim_DS,
        Args            _args,
        boolean         _linkInventDim = false)
    {
        InventDimParm           inventDimParm;
        InventTrans             callerInventTrans;
        Object                  callerForm;
        InventDimCtrl_Frm       callerInventDimFormSetup;
        QueryBuildDataSource    interCompanyInventDimDS = _inventDim_DS.query().dataSourceTable(tableNum(InterCompanyInventDim));

        #InventDimDevelop

        switch (_args.dataset())
        {
            case tableNum(InventDimCombination):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventDimId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventDimCombination, InventDimId)));

                InventDimensionEnumerator enum = InventProductDimension::getEnumeratorForEnabledDimensions();
                while (enum.moveNext())
                {
                    FieldId inventDimParmFieldId = enum.currentInventDimParmFieldId();
                    FieldId interCompanyInventDimFieldId = InterCompanyInventDim::dimParm2dim(inventDimParmFieldId);
                    interCompanyInventDimDS.addSortField(interCompanyInventDimFieldId);
                }
                break;

            case tableNum(WMSLocation):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, wmsLocationId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(WMSLocation,wmsLocationId)));
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventLocationId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(WMSLocation,InventLocationId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,wmsLocationId));

                break;
            // Added License Plate & Inventory Status
            case tableNum(WHSLicensePlate):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, LicensePlateId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(WHSLicensePlate,LicensePlateId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,LicensePlateId));

                break;
            case tableNum(WHSInventStatus):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventStatusId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(WHSInventStatus,InventStatusId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventStatusId));

                break;
            case tableNum(InventBatch):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventBatchId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventBatch,InventBatchId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventBatchId));

                break;

            case tableNum(InventSerial):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventSerialId),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventSerial,InventSerialId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventSerialId));

                break;
            // <GEERU>
            case tableNum(InventProfile_RU):

                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventProfileId_RU),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventProfile_RU,InventProfileId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventProfileId_RU));

                break;

            case tableNum(InventOwner_RU):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventOwnerId_RU),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventOwner_RU,InventOwnerId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventOwnerId_RU));

                break;

            case tableNum(InventGTD_RU):
                interCompanyInventDimDS.addDynalink(fieldNum(InterCompanyInventDim, InventGTDId_RU),
                    _args.record(),
                    fieldName2id(_args.dataset(),fieldStr(InventGTD_RU, InventGTDId)));

                interCompanyInventDimDS.addSortField(fieldNum(InterCompanyInventDim,InventGTDId_RU));

                break;
            // </GEERU>

            case(tableNum(InventTrans)):

                if (_linkInventDim)
                {
                    callerForm                  = _args.caller();
                    callerInventTrans           = _args.record() as InventTrans;
                    if (InventDimParm::inventDimFormRightClick(callerForm))
                    {
                        callerInventDimFormSetup    = callerForm.inventDimSetupObject();
                        inventDimParm = callerInventDimFormSetup.parmDimParmVisibleGrid();
                        inventDimParm.queryAddDynalink(interCompanyInventDimDS, callerInventTrans.joinChild() as InventDim);
                    }
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddHintFromCaller</Name>
				<Source><![CDATA[
    static public boolean queryAddHintFromCaller(
        QueryBuildDataSource    _qbs,
        Args                    _callerArgs)
    {
        boolean ret = false;

        #InventDimDevelop

        switch (_callerArgs.dataset())
        {
            case(tableNum(InventBatch)):
                _qbs.addSortIndex(indexNum(InterCompanyInventDim,BatchIdIdx));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            case(tableNum(InventSerial)):
                _qbs.addSortIndex(indexNum(InterCompanyInventDim,SerialIdIdx));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            case(tableNum(WMSLocation)):
                _qbs.addSortIndex(indexNum(InterCompanyInventDim,LocationIdIdx));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            // <GEERU>
            case(tableNum(InventProfile_RU)):

               _qbs.addSortIndex(indexNum(InterCompanyInventDim, InventProfileIdx_RU));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            case(tableNum(InventOwner_RU)):

                _qbs.addSortIndex(indexNum(InterCompanyInventDim,InventOwnerIdx_RU));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            case(tableNum(InventGTD_RU)):

               _qbs.addSortIndex(indexNum(InterCompanyInventDim, InventGtdIdx_RU));
                _qbs.indexIsHint(true);
                ret = true;
                break;
            // </GEERU>

            case(tableNum(WHSLicensePlate)):
                _qbs.addSortIndex(indexNum(InterCompanyInventDim, LicensePlateIdIdx));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            case(tableNum(WHSInventStatus)):
                _qbs.addSortIndex(indexNum(InterCompanyInventDim, InventStatusIdIdx));
                _qbs.indexIsHint(true);
                ret = true;
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dimension string.
    /// </summary>
    /// <param name = "_dimFields">
    /// The list of dimensions that need to be considered.
    /// </param>
    /// <param name = "_includeEmptyFields">
    /// true if empty fields are included; otherwise, false.
    /// </param>
    /// <returns>
    /// A single string representation of <param name="_dimFields" /> dimension values.
    /// </returns>
    public str mapKey(
       List    _dimFields          = InterCompanyInventDim::dimFieldList(),
       boolean _includeEmptyFields = true)
    {
        ListEnumerator  enumerator  = _dimFields ? _dimFields.getEnumerator() : null;
        FieldId         inventDimFieldId;
        str             dimFieldStr;

        if (enumerator)
        {
            // Fields might not have been selected on the specified buffers, or might have been updated since selection
            this.checkInvalidFieldAccess(false);

            while (enumerator.moveNext())
            {
                inventDimFieldId = enumerator.current();
                if (_includeEmptyFields || this.(inventDimFieldId))
                {
                    dimFieldStr += (dimFieldStr ? '#' : '') + this.dimValue2str(inventDimFieldId);
                }
            }
        }

        return dimFieldStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimValue2str</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the dimension value to string type.  
    /// </summary>
    /// <param name = "_dimFieldId">
    /// The Id of dimensions that need to be converted to string type.
    /// </param>
    /// <returns>
    /// The dimension field value of string type.
    /// </returns>
    public str dimValue2str(FieldId _dimFieldId)
    {
        DictField df = new DictField(tableNum(InterCompanyInventDim),_dimFieldId);

        switch(df.baseType())
        {
            case Types::String      : return this.(_dimFieldId);
            case Types::Integer     : return int2str(this.(_dimFieldId));
            case Types::Real        : return num2str(this.(_dimFieldId),-1,-1,-1,-1);
            case Types::Date        : return date2StrUsr(this.(_dimFieldId), DateFlags::FormatAll);
            case Types::UtcDateTime : return datetime2Str(this.(_dimFieldId), DateFlags::FormatAll);
            case Types::Enum        : return enum2str(this.(_dimFieldId));
            case Types::Int64       : return int642str(this.(_dimFieldId));
            case Types::Guid        : return this.(_dimFieldId);
        }

        throw error(strFmt("@SYS76481",df.baseType()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>toDimParm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a new record buffer for <c>InventDimParm</c> table that has been initialized such that
    /// the dimension selection fields are <c>NoYes::Yes</c> for each non-blank dimension field in this
    /// <c>InterCompanyInventDim</c> table buffer.
    /// </summary>
    /// <returns>
    /// A new <c>InventDimParm</c> table buffer initialized for selecting the matching non-blank fields in this <c>InterCompanyInventDim</c> table buffer.
    /// </returns>
    public InventDimParm toDimParm()
    {
        InventDimParm   inventDimParm;

        inventDimParm.initFromInterCompanyInventDim(this);
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInterCompanyInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets flags for all the specified non-empty dimensions.
    /// </summary>
    /// <param name="_interCompanyInventDim">
    /// The inventory dimensions.
    /// </param>
    /// <param name="_dimFieldList">
    /// The list of dimensions that need to be considered.
    /// </param>
    /// <remarks>
    /// By default all dimensions are considered.
    /// </remarks>
    public void initFromInterCompanyInventDim(InterCompanyInventDim _interCompanyInventDim, List _dimFieldList = InterCompanyInventDim::dimFieldList())
    {
        ListEnumerator  enumerator  = _dimFieldList.getEnumerator();
        FieldId         dimFieldId;
        FieldId         dimParmFieldId;

        // Fields might not have been selected on the specified buffers, or might have been updated since selection
        _interCompanyInventDim.checkInvalidFieldAccess(false);

        while (enumerator.moveNext())
        {
            dimFieldId = enumerator.current();
            dimParmFieldId  = InterCompanyInventDim::dim2dimParm(dimFieldId);
            this.(dimParmFieldId) = _interCompanyInventDim.(dimFieldId) != InterCompanyInventDim::emptyDimField(dimFieldId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyDimField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the interCompanyInventDim field to be empty
    /// </summary>
    /// <param name = "_dimFieldId">
    /// The Id of an inventory dimension field.
    /// </param>
    /// <returns>
    /// An empty dimension value.
    /// </returns>
    static public anytype emptyDimField(FieldId _dimFieldId)
    {
        DictField df;
        #InventDimDevelop

        switch (_dimFieldId)
        {
            case fieldNum(InterCompanyInventDim,ConfigId)         :
            case fieldNum(InterCompanyInventDim,InventSizeId)     :
            case fieldNum(InterCompanyInventDim,InventColorId)    :
            case fieldNum(InterCompanyInventDim,InventStyleId)    :
            case fieldNum(InterCompanyInventDim,InventVersionId)  :
            case fieldNum(InterCompanyInventDim,InventSiteId)     :
            case fieldNum(InterCompanyInventDim,InventLocationId) :
            case fieldNum(InterCompanyInventDim,InventBatchId)    :
            case fieldNum(InterCompanyInventDim,wmsLocationId)    :
            case fieldNum(InterCompanyInventDim,wmsPalletId)      :
            case fieldNum(InterCompanyInventDim,InventSerialId)   :
                // Added License Plate & Inventory Status
            case fieldNum(InterCompanyInventDim,LicensePlateId):
            case fieldNum(InterCompanyInventDim,InventStatusId):
                // <GEERU>
            case fieldNum(InterCompanyInventDim, InventGtdId_RU)  :
            case fieldNum(InterCompanyInventDim, InventProfileId_RU):
            case fieldNum(InterCompanyInventDim,InventOwnerId_RU)   :
                // </GEERU>
            case fieldNum(InterCompanyInventDim, InventDimension1)  :
            case fieldNum(InterCompanyInventDim, InventDimension2)  : 
            case fieldNum(InterCompanyInventDim, InventDimension3)  : 
            case fieldNum(InterCompanyInventDim, InventDimension4)  : 
            case fieldNum(InterCompanyInventDim, InventDimension5)  : 
            case fieldNum(InterCompanyInventDim, InventDimension6)  : 
            case fieldNum(InterCompanyInventDim, InventDimension7)  : 
            case fieldNum(InterCompanyInventDim, InventDimension8)  : 
            case fieldNum(InterCompanyInventDim, InventDimension9)  : 
            case fieldNum(InterCompanyInventDim, InventDimension10) : 
            case fieldNum(InterCompanyInventDim, InventDimension11) : 
            case fieldNum(InterCompanyInventDim, InventDimension12) : 
                return '';
        }

        df = new DictField(tableNum(InterCompanyInventDim),_dimFieldId);
        switch(df.baseType())
        {
            case Types::String      : return '';
            case Types::Integer     : return 0;
            case Types::Real        : return 0;
            case Types::Date        : return dateNull();
            case Types::UtcDateTime : return utcDateTimeNull();
            case Types::Enum        : return 0;
            case Types::Int64       : return 0;
            case Types::Guid        : return '';
        }

        throw error(strFmt("@SYS76481",df.baseType()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static public InterCompanyInventDim find(
        InventDimId _inventDimId,
        boolean     _forupdate = false)
    {
        InterCompanyInventDim interCompanyInventDim;

        if (_inventDimId)
        {
            if (_forupdate)
            {
                interCompanyInventDim.selectForUpdate(_forupdate);
            }

            select firstonly interCompanyInventDim
                where interCompanyInventDim.InventDimId  == _inventDimId;
        }

        return interCompanyInventDim;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124491</DeveloperDocumentation>
	<Label>@SYS53630</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>InventDimId</TitleField1>
	<TitleField2>SessionId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>DimIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>DimIdIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSerialId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS11696</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventGTDId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension9</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension10</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension11</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension12</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductDimensions</Name>
			<Label>@SYS133228</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TmpInventDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConfigId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyConfigId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventBatchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventBatchId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventColorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventColorId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventGTDId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventGTDId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventOwnerId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventOwnerId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventProfileId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventProfileId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSerialId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventSerialId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSizeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventSizeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStyleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventStyleId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventVersionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInventVersionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicensePlateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLicensePlateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSPalletId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyWMSPalletId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension1</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension1</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension2</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension2</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension3</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension3</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension4</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension4</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension5</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension5</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension6</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension6</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension7</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension7</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension8</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension8</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>InventDimension9</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension9</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventDimension10</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension10</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension11</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension11</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension12</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>InventDimension12</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InterCompanyCompanyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InterCompanyCompanyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DimIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LocationIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>WMSBasic</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BatchIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventBatchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SerialIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSerialId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSizeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventColorId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStyleId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventVersionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventBatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSPalletId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSerialId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventProfileIdx_RU</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventGtdIdx_RU</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventGTDId_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LicensePlateIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventStatusIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventOwnerIdx_RU</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventDimFieldsMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ConfigId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>InventBatchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>InventColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension1</MapField>
					<MapFieldTo>InventDimension1</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension10</MapField>
					<MapFieldTo>InventDimension10</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension11</MapField>
					<MapFieldTo>InventDimension11</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension12</MapField>
					<MapFieldTo>InventDimension12</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension2</MapField>
					<MapFieldTo>InventDimension2</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension3</MapField>
					<MapFieldTo>InventDimension3</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension4</MapField>
					<MapFieldTo>InventDimension4</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension5</MapField>
					<MapFieldTo>InventDimension5</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension6</MapField>
					<MapFieldTo>InventDimension6</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension7</MapField>
					<MapFieldTo>InventDimension7</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension8</MapField>
					<MapFieldTo>InventDimension8</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension9</MapField>
					<MapFieldTo>InventDimension9</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
					<MapFieldTo>InventGTDId_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>InventLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
					<MapFieldTo>InventOwnerId_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
					<MapFieldTo>InventProfileId_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
					<MapFieldTo>InventSerialId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>InventSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>InventStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>InventStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>InventVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
					<MapFieldTo>LicensePlateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
					<MapFieldTo>WMSLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
					<MapFieldTo>WMSPalletId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyCompanyId</Name>
					<Field>InterCompanyCompanyId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TmpInventDim</Name>
			<RelatedTable>InterCompanyInventDim</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SessionId</Name>
					<Field>SessionId</Field>
					<RelatedField>SessionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyCompanyId</Name>
					<Field>InterCompanyCompanyId</Field>
					<RelatedField>InterCompanyCompanyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TmpInventSum</Name>
			<RelatedTable>InterCompanyInventSum</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SessionId</Name>
					<Field>SessionId</Field>
					<RelatedField>SessionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyCompanyId</Name>
					<Field>InterCompanyCompanyId</Field>
					<RelatedField>InterCompanyCompanyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InterCompanyDataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InterCompanyDataArea</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InterCompanyInventDim</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyCompanyId</Name>
					<Field>InterCompanyCompanyId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>