<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetGroupGlobalMapping</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetGroupGlobalMapping extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
        public void modifiedFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        this.setDataAreaForModifiedField(fieldName2id(this.TableId, _fieldName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataAreaForModifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>DataArea</c> field if a corresponding field value is modified on the form.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field number in the <c>AsseetGroupGlobalMapping</c> table.
    /// </param>

    public void setDataAreaForModifiedField(fieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(AssetGroupGlobalMapping, GroupId) : this.GroupDataAreaId = this.GroupId ? appl.company().dataArea(tableNum(AssetGroup)) : ""; break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAllAssetGroupGlobalMapping</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates records in the <c>AssetGroupGlobalMapping</c> table.
    /// </summary>
    public static void createAllAssetGroupGlobalMapping()
    {
        AssetGroupGlobal       assetGroupGlobal;

        while select RecId from assetGroupGlobal
        {
            if (!AssetGroupGlobalMapping::createAssetGroupGlobalMapping(assetGroupGlobal.RecId))
            {
                break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAssetGroupGlobalMapping</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates records in the <c>AssetGroupGlobalMapping</c> table.
    /// </summary>
    /// <param name="_assetGroupGlobalRecId">
    /// The record ID in the <c>AssetGroupGlobal</c> table.
    /// </param>
    /// <returns>
    /// True if a record has been inserted; otherwise false.
    /// </returns>
    public static boolean createAssetGroupGlobalMapping(RefRecId _assetGroupGlobalRecId)
    {
        AssetGroupGlobalMapping   assetGroupGlobalMappingInsert;
        AssetGroupGlobalMapping   assetGroupGlobalMapping;
        CompanyInfo               companyInfo;
        boolean                   recordInserted;

        while select RecId from companyInfo
            notexists join assetGroupGlobalMapping where
                assetGroupGlobalMapping.AssetGroupGlobal    == _assetGroupGlobalRecId &&
                assetGroupGlobalMapping.LegalEntity         == companyInfo.RecId
        {
            assetGroupGlobalMappingInsert.AssetGroupGlobal  = _assetGroupGlobalRecId;
            assetGroupGlobalMappingInsert.LegalEntity       = companyInfo.RecId;

            assetGroupGlobalMappingInsert.insert();
            recordInserted = true;
        }

        return recordInserted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssetGroupGlobal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetGroupGlobalMapping</c> table.
    /// </summary>
    /// <param name="_assetGroupGlobalRecId">
    /// The record ID of a record in the <c>AssetGroupGlobal</c> table that indicates the
    /// <c>AssetGroupGlobalMapping</c> record to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The record ID of the applicable legal entity.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in <c>AssetGroupGlobalMapping</c> table if found; otherwise, an empty record.
    /// </returns>

    public static AssetGroupGlobalMapping findAssetGroupGlobal( RefRecId                _assetGroupGlobalRecId,
                                                                LegalEntity             _legalEntity,
                                                                boolean                 _forUpdate = false,
                                                                ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetGroupGlobalMapping      assetGroupGlobalMapping;

        if (_assetGroupGlobalRecId && _legalEntity)
        {
            assetGroupGlobalMapping.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetGroupGlobalMapping.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                assetGroupGlobalMapping
            where
                assetGroupGlobalMapping.AssetGroupGlobal == _assetGroupGlobalRecId &&
                assetGroupGlobalMapping.LegalEntity      == _legalEntity;
        }

        return assetGroupGlobalMapping;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@SYS334896</DeveloperDocumentation>
	<Label>@SYS334901</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LegalEntity</TitleField1>
	<TitleField2>GroupId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>AssetGroupIdx</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroupGlobal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroupGlobal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroupGlobal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetGroupGlobal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LegalEntity</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>GroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssetGroupGlobalIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetGroupGlobal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetGroupGlobal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetGroupGlobal</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetGroupGlobal</Name>
					<Field>AssetGroupGlobal</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GroupId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GroupDataAreaId</Name>
					<Field>GroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GroupId</Name>
					<Field>GroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>