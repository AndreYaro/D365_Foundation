<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjDefaultDimensionRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjDefaultDimensionRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean exist(
        TableAll _contractLineGroupRelation,
        RefRecId _contractLineGroup,
        TableAll _contractRelation,
        ProjInvoiceProjId _contractId,
        TableGroupAll _projRelation,
        ProjRelation _projRelationId,
        TableAll _revenueProfileRelation,
        RefRecId _revenueProfile)
    {
        boolean recordExists = ProjDefaultDimensionRule::findByRule(
            _contractLineGroupRelation,
            _contractLineGroup,
            _contractRelation,
            _contractId,
            _projRelation,
            _projRelationId,
            _revenueProfileRelation,
            _revenueProfile
            ).RecId != 0;

        return recordExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static ProjDefaultDimensionRule findByRule(
        TableAll _contractLineGroupRelation,
        RefRecId _contractLineGroup,
        TableAll _contractRelation,
        ProjInvoiceProjId _contractId,
        TableGroupAll _projRelation,
        ProjRelation _projRelationId,
        TableAll _revenueProfileRelation,
        RefRecId _revenueProfile,
        boolean _forUpdate = false)
    {
        ProjDefaultDimensionRule defaultDimensionRule;

        defaultDimensionRule.selectForUpdate(_forUpdate);

        select firstonly defaultDimensionRule
            where defaultDimensionRule.ContractLineGroupRelation == _contractLineGroupRelation
                && defaultDimensionRule.ContractLineGroup == _contractLineGroup
                && defaultDimensionRule.ContractRelation == _contractRelation
                && defaultDimensionRule.ContractId == _contractId
                && defaultDimensionRule.ProjRelation == _projRelation
                && defaultDimensionRule.ProjRelationId == _projRelationId
                && defaultDimensionRule.RevenueProfileRelation == _revenueProfileRelation
                && defaultDimensionRule.RevenueProfile == _revenueProfile;

        return defaultDimensionRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret
            && (this.ContractLineGroupRelation == TableAll::Table || this.ContractLineGroup)
            && !ProjContractLineBasedRevenueRecognitionFeatureHelper::isFeatureEnabled())
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleContractLineGroupWithoutItsFeature", "@Proj:ProjContractLineBasedRevenueRecognitionFeature"));
        }

        ret = ret && this.validateNoMissingFilterCriteria();
        ret = ret && this.validateNoFilterCriteriaWithAll();

        // Confirm that project and contract ids provided actually match a real project.
        if (ret
            && this.ContractId
            && this.ProjRelation == TableGroupAll::Table
            && this.ProjRelationId)
        {
            ProjTable projLoc;

            select firstonly RecId from projLoc
                where projLoc.ProjId == this.ProjRelationId
                    && projLoc.ProjInvoiceProjId == this.ContractId;

            if (!projLoc.RecId)
            {
                ret = checkFailed("@Proj:DefaultDimensionRuleInvalidProjectContractPair");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNoMissingFilterCriteria</Name>
				<Source><![CDATA[
    private boolean validateNoMissingFilterCriteria()
    {
        boolean ret = true;

        if (this.ContractLineGroupRelation == TableAll::Table
            && !this.ContractLineGroup)
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleMissingFilterCriteria",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractLineGroup)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractLineGroupRelation)),
                                enum2Str(TableAll::All)));
        }

        if (ret
            && this.ContractRelation == TableAll::Table
            && this.ContractId == '')
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleMissingFilterCriteria",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractId)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractRelation)),
                                enum2Str(TableAll::All)));
        }

        if (ret
            && this.ProjRelation != TableGroupAll::All
            && this.ProjRelationId == '')
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleMissingFilterCriteria",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ProjRelationId)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ProjRelation)),
                                enum2Str(TableGroupAll::All)));
        }

        if (ret
            && this.RevenueProfileRelation == TableAll::Table
            && !this.RevenueProfile)
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleMissingFilterCriteria",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, RevenueProfile)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, RevenueProfileRelation)),
                                enum2Str(TableAll::All)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNoFilterCriteriaWithAll</Name>
				<Source><![CDATA[
    private boolean validateNoFilterCriteriaWithAll()
    {
        boolean ret = true;

        if (this.ContractLineGroupRelation == TableAll::All
            && this.ContractLineGroup)
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleFilterCriteriaWithAll",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractLineGroup)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractLineGroupRelation)),
                                enum2Str(TableAll::All)));
        }

        if (ret
            && this.ContractRelation == TableAll::All
            && this.ContractId != '')
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleFilterCriteriaWithAll",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractId)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ContractRelation)),
                                enum2Str(TableAll::All)));
        }

        if (ret
            && this.ProjRelation == TableGroupAll::All
            && this.ProjRelationId != '')
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleFilterCriteriaWithAll",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ProjRelationId)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, ProjRelation)),
                                enum2Str(TableGroupAll::All)));
        }

        if (ret
            && this.RevenueProfileRelation == TableAll::All
            && this.RevenueProfile)
        {
            ret = checkFailed(strFmt("@Proj:DefaultDimensionRuleFilterCriteriaWithAll",
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, RevenueProfile)),
                                fieldId2PName(tableNum(ProjDefaultDimensionRule), fieldNum(ProjDefaultDimensionRule, RevenueProfileRelation)),
                                enum2Str(TableAll::All)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the default dimension for a record based upon the rule matched for the default dimension priority.
    /// </summary>
    /// <param name = "_projId">The project ID for a <c>ProjTable</c> record.</param>
    /// <param name = "_contractLineNum">A ContractLineNum for a <c>PSAContractLineItems</c> record.</param>
    /// <param name = "_dimensionSourceWhenNoMatchingRule">The default source for the default dimension of a matching rule is not found.</param>
    /// <returns>A <c>DimensionDefault</c> from the resulting source determined from the matched default definition rule.</returns>
    /// <remarks>
    /// If the situations where the default dimension rule feature is not enabled, or a matched rule is not found, then the dimension is based upon the <c>_dimensionSourceWhenNoMatchingRule</c> parameter.
    /// </remarks>
    [Hookable(false)]
    public static DimensionDefault getDefaultDimension(
        ProjId _projId,
        PSAContractLineNum _contractLineNum,
        ProjDefaultDimensionPriority _dimensionSourceWhenNoMatchingRule = ProjDefaultDimensionPriority::Project)
    {
        DimensionDefault defaultDimension;

        ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(tableStr(ProjDefaultDimensionRule));
                
        using (var activityContext = logger.projOpsFinActivity().featureInstrumentationContext(tableStaticMethodStr(ProjDefaultDimensionRule, getDefaultDimension)))
        {
            ProjTable projTable = ProjTable::find(_projId);
            PSAContractLineItems contractLineItems;

            if (_contractLineNum)
            {
                contractLineItems = PSAContractLineItems::find(_contractLineNum);
            }

            ProjDefaultDimensionRule defaultDimensionRule;

            if (projTable
                && contractLineItems
                && (projTable.DefaultDimension || contractLineItems.DefaultDimension))
            {
                // The feature is enabled and the necessary criteria has been provided, so attempt
                // to find the matching rule to determine the default dimension.
                defaultDimensionRule = ProjDefaultDimensionRule::matchRule(
                    contractLineItems.ProjInvoiceProjId,
                    _projId,
                    projTable.ProjGroupId,
                    contractLineItems.BillingMethod,
                    contractLineItems.ContractLineGroupRefRecId);
            }

            if (defaultDimensionRule)
            {
                if (defaultDimensionRule.DefaultDimensionPriority == ProjDefaultDimensionPriority::Project)
                {
                    defaultDimension = projTable.DefaultDimension;
                }
                else if (defaultDimensionRule.DefaultDimensionPriority == ProjDefaultDimensionPriority::ContractLine)
                {
                    defaultDimension = contractLineItems.DefaultDimension;
                }

                activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::DimensionSourceFromRule, enum2Symbol(enumNum(ProjDefaultDimensionPriority), defaultDimensionRule.DefaultDimensionPriority));
            }
            else
            {
                // A matching rule was not found, so use the default dimension based upon the default dimension priority.
                if (_dimensionSourceWhenNoMatchingRule == ProjDefaultDimensionPriority::Project)
                {
                    defaultDimension = projTable.DefaultDimension;
                }
                else if (_dimensionSourceWhenNoMatchingRule == ProjDefaultDimensionPriority::ContractLine)
                {
                    defaultDimension = contractLineItems.DefaultDimension;
                }

                activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::DimensionSourceFromDefault, enum2Symbol(enumNum(ProjDefaultDimensionPriority), _dimensionSourceWhenNoMatchingRule));
            }

            return defaultDimension;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>matchRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the most restrictive matching default dimension rule for provided parameters.
    /// </summary>
    /// <param name = "_contractId">Contract ID.</param>
    /// <param name = "_projId">Proj ID.</param>
    /// <param name = "_projGroupId">Proj group ID.</param>
    /// <param name = "_billingMethod">Billing method for the revenue profile.</param>
    /// <param name = "_contractLineGroupRecId">RecId of the <c>ProjContractLineGroup</c> table.</param>
    /// <returns><c>ProjDefaultDimensionRule</c> record.</returns>
    [Hookable(false)]
    public static ProjDefaultDimensionRule matchRule(
        ProjInvoiceProjId _contractId,
        ProjId _projId,
        ProjGroupId _projGroupId,
        ProjContractBillingMethod _billingMethod,
        RefRecId _contractLineGroupRecId)
    {
        ProjOpsFinancialsLogger logger = ProjOpsFinancialsLogger::createLogger(tableStr(ProjDefaultDimensionRule));
        ProjDefaultDimensionRule matchingRule;
                
        using (var activityContext = logger.projOpsFinActivity().featureInstrumentationContext(tableStaticMethodStr(ProjDefaultDimensionRule, matchRule)))
        {
            unchecked (Uncheck::TableSecurityPermission)
            {
                ProjRevenueProfileId revenueProfileId = ProjRevenueProfileRule::matchProfileRule(
                    _contractId,
                    _projId,
                    _projGroupId,
                    _billingMethod,
                    _contractLineGroupRecId).ProjRevenueProfileId;

                RefRecId revenueProfileRecId;

                if (revenueProfileId)
                {
                    revenueProfileRecId = ProjRevenueProfile::findByRevenueProfileId(revenueProfileId).RecId;
                }

                if (_projId)
                {
                    // Check for possible matches for the provided project
                    matchingRule = ProjDefaultDimensionRule::processRuleCombinations(
                        _contractId,
                        _projId,
                        '',
                        revenueProfileRecId,
                        _contractLineGroupRecId);
                    }

                if (!matchingRule && _projGroupId)
                {
                    // Check for possible matches for the provided project group
                    matchingRule = ProjDefaultDimensionRule::processRuleCombinations(
                        _contractId,
                        '',
                        _projGroupId,
                        revenueProfileRecId,
                        _contractLineGroupRecId);
                }

                if (!matchingRule)
                {
                    // No matches have been found for the project or project group the rules
                    matchingRule = ProjDefaultDimensionRule::processRuleCombinations(
                        _contractId,
                        '',
                        '',
                        revenueProfileRecId,
                        _contractLineGroupRecId);
                }

                activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::DimensionRuleWasFound, any2Str(matchingRule.RecId != 0));

                if (matchingRule)
                {
                    activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::DimensionPriority, enum2Symbol(enumNum(ProjDefaultDimensionPriority), matchingRule.DefaultDimensionPriority));
                    activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::ContractLineGroupRelation, enum2Symbol(enumNum(TableAll), matchingRule.ContractLineGroupRelation));
                    activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::RevenueProfileRelation, enum2Symbol(enumNum(TableAll), matchingRule.RevenueProfileRelation));
                    activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::ContractRelation, enum2Symbol(enumNum(TableAll), matchingRule.ContractRelation));
                    activityContext.addCustomProperty(ProjOpsFinancialsInstrumentationActivites::ProjRelation, enum2Symbol(enumNum(TableGroupAll), matchingRule.ProjRelation));
                }
            }
        }

        return matchingRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRuleCombinations</Name>
				<Source><![CDATA[
    private static ProjDefaultDimensionRule processRuleCombinations(
        ProjInvoiceProjId _contractId,
        ProjId _projId,
        ProjGroupId _projGroupId,
        RefRecId _revenueProfileRecId,
        RefRecId _contractLineGroupRecId)
    {
        TableGroupAll projectRelation = TableGroupAll::All;
        ProjRelation projectRelationId;

        if (_projId)
        {
            projectRelation = TableGroupAll::Table;
            projectRelationId = _projId;
        }
        else if (_projGroupId)
        {
            projectRelation = TableGroupAll::GroupId;
            projectRelationId = _projGroupId;
        }

        ProjDefaultDimensionRule matchingRule;

        if (_contractId
            && _revenueProfileRecId
            && _contractLineGroupRecId)
        {
            // rule 1
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::Table,
                _contractLineGroupRecId,
                TableAll::Table,
                _contractId,
                projectRelation,
                projectRelationId,
                TableAll::Table,
                _revenueProfileRecId);
        }

        if (!matchingRule
            && _contractId
            && _revenueProfileRecId)
        {
            // rule 2
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::All,
                0,
                TableAll::Table,
                _contractId,
                projectRelation,
                projectRelationId,
                TableAll::Table,
                _revenueProfileRecId);
        }

        if (!matchingRule
            && _contractId
            && _contractLineGroupRecId)
        {
            // rule 3
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::Table,
                _contractLineGroupRecId,
                TableAll::Table,
                _contractId,
                projectRelation,
                projectRelationId,
                TableAll::All,
                0);
        }

        if (!matchingRule
            && _contractId)
        {
            // rule 4
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::All,
                0,
                TableAll::Table,
                _contractId,
                projectRelation,
                projectRelationId,
                TableAll::All,
                0);
        }

        if (!matchingRule
            && _revenueProfileRecId
            && _contractLineGroupRecId)
        {
            // rule 5
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::Table,
                _contractLineGroupRecId,
                TableAll::All,
                '',
                projectRelation,
                projectRelationId,
                TableAll::Table,
                _revenueProfileRecId);
        }

        if (!matchingRule
            && _revenueProfileRecId)
        {
            // rule 6
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::All,
                0,
                TableAll::All,
                '',
                projectRelation,
                projectRelationId,
                TableAll::Table,
                _revenueProfileRecId);
        }

        if (!matchingRule
            && _contractLineGroupRecId)
        {
            // rule 7
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::Table,
                _contractLineGroupRecId,
                TableAll::All,
                '',
                projectRelation,
                projectRelationId,
                TableAll::All,
                0);
        }

        if (!matchingRule)
        {
            // rule 8
            matchingRule = ProjDefaultDimensionRule::findByRule(
                TableAll::All,
                0,
                TableAll::All,
                '',
                projectRelation,
                projectRelationId,
                TableAll::All,
                0);
        }

        return matchingRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRuleRank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets rank of the given rule. The lower the rank the more restrictive the rule is and is more likely to be matched.
    /// </summary>
    /// <param name = "_rule"><c>ProjDefaultDimensionRule</c> object for which rank is being calculated.</param>
    /// <returns>Rank of the given rule.</returns>
    [Hookable(false)]
    public static int getRuleRank(ProjDefaultDimensionRule _rule)
    {
        int rank = 0;

        // Start with the most specific condition.
        if (_rule.ProjRelation == TableGroupAll::Table)
        {
            if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 1;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 2;
                }
            }
            else if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 3;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 4;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 5;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 6;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 7;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 8;
                }
            }
        }
        else if (_rule.ProjRelation == TableGroupAll::GroupId)
        {
            if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 9;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 10;
                }
            }
            else if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 11;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 12;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 13;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 14;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 15;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 16;
                }
            }
        }
        else if (_rule.ProjRelation == TableGroupAll::All)
        {
            if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 17;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 18;
                }
            }
            else if (_rule.ContractRelation == TableAll::Table
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 19;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 20;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::Table)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 21;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 22;
                }
            }
            else if (_rule.ContractRelation == TableAll::All
                && _rule.RevenueProfileRelation == TableAll::All)
            {
                if (_rule.ContractLineGroupRelation == TableAll::Table)
                {
                    rank = 23;
                }
                else if (_rule.ContractLineGroupRelation == TableAll::All)
                {
                    rank = 24;
                }
            }
        }

        return rank;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjDefaultDimensionRuleDevDoc</DeveloperDocumentation>
	<Label>@Proj:ProjectDefaultDimensionRules</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>ContractLineGroup</TitleField1>
	<TitleField2>ContractId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<ReplacementKey>DefaultDimensionRuleIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractLineGroupRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractLineGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueProfileRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimensionPriority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractLineGroupRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractLineGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueProfileRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContractLineGroupRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:ProjectContractLineGroupRelation</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContractLineGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Proj:ProjContractLineGroupId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RevenueProfileRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:ProjectCostRevenueRelation</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RevenueProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Proj:RevenueProfileId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContractRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:RevenueProfileRule_ContractRelation</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjInvoiceProjId</ExtendedDataType>
			<Label>@Proj:ContractId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:RevenueProfileRule_ProjRelation</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjRelationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjRelation</ExtendedDataType>
			<Label>@Proj:ProjectRelationId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultDimensionPriority</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjDefaultDimensionPriority</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DefaultDimensionRuleIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractLineGroupRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractLineGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RevenueProfileRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RevenueProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjRelationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ProjectGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124926</EntityRelationshipRole>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjRelation</Name>
					<Field>ProjRelation</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjRelationId</Name>
					<Field>ProjRelationId</Field>
					<RelatedField>ProjGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjectTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124926</EntityRelationshipRole>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjRelation</Name>
					<Field>ProjRelation</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjRelationId</Name>
					<Field>ProjRelationId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjInvoiceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractRelation</Name>
					<Field>ContractRelation</Field>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractId</Name>
					<Field>ContractId</Field>
					<RelatedField>ProjInvoiceProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjRevenueProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjRevenueProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RevenueProfile</Name>
					<Field>RevenueProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjContractLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjContractLineGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractLineGroup</Name>
					<Field>ContractLineGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>