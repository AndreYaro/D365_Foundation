<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemCostGroupRollupSim</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventItemCostGroupRollupSim extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayUnitId</Name>
				<Source><![CDATA[
    display UnitOfMeasureSymbol displayUnitId()
    {
        return InventItemPriceSim::findRecId(this.InventItemPriceSimRefRecId).UnitID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCostGroupRollup</Name>
				<Source><![CDATA[
    public void initFromCostGroupRollup(InventItemCostGroupRollupMap _source,
                                        InventItemPriceMap           _sourceItemPrice)
    {
        this.InventItemCostGroupRollupMap::initFromCostGroupRollup(_source, _sourceItemPrice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventItemPriceSim</Name>
				<Source><![CDATA[
    public void initFromInventItemPriceSim(InventItemPriceSim _inventItemPriceSim)
    {
        this.InventItemPriceSimRefRecId = _inventItemPriceSim.RecId;

        this.InventItemCostGroupRollupMap::initFromInventItemPriceMap(_inventItemPriceSim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyCostGroupRollupFromPrice</Name>
				<Source><![CDATA[
    static void copyCostGroupRollupFromPrice(InventItemPriceSimRefRecId   _sourceRecId,
                                                    InventItemPriceSimRefRecId   _targetRecId)
    {
        InventItemCostGroupRollupSim   costGroupRollupSim;
        InventItemCostGroupRollupSim   costGroupRollupSimSource;
        insert_recordset costGroupRollupSim
        (
            costAmountStd,
            // <GEERU>
            CostAmountSecCur_RU,
            // </GEERU>
            costGroupId,
            costLevel,
            qty,
            split,
            inventItemPriceSimRefRecId
        )
        select
            CostAmountStd,
            // <GEERU>
            CostAmountSecCur_RU,
            // </GEERU>
            CostGroupId,
            CostLevel,
            Qty,
            Split,
            _targetRecId
        from costGroupRollupSimSource
            where costGroupRollupSimSource.InventItemPriceSimRefRecId == _sourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static InventItemCostGroupRollupSim find(
        InventItemPriceSimRefRecId _priceRefRecId,
        CostGroupId             _costGroupId,
        InventCostLevel         _inventCostLevel,
        NoYesId                 _split,
        boolean                 _forUpdate = false)
    {
        InventItemCostGroupRollupSim   inventItemCostGroupRollupSim;

        if (_priceRefRecId && _costGroupId)
        {
            inventItemCostGroupRollupSim.selectForUpdate(_forUpdate);

            select firstonly inventItemCostGroupRollupSim
                where inventItemCostGroupRollupSim.InventItemPriceSimRefRecId == _priceRefRecId
                   && inventItemCostGroupRollupSim.CostGroupId                == _costGroupId
                   && inventItemCostGroupRollupSim.CostLevel                  == _inventCostLevel
                   && inventItemCostGroupRollupSim.Split                      == _split;
        }
        return inventItemCostGroupRollupSim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveSimulatedToCurrent</Name>
				<Source><![CDATA[
    public static void moveSimulatedToCurrent(InventItemPriceSim  _inventItemPriceSim,
                                                     InventItemPrice     _inventItemPrice)
    {
        InventItemCostGroupRollup       costGroupRollup;
        InventItemCostGroupRollupSim    costGroupRollupSim;
        if (_inventItemPriceSim.PriceCalcId)
        {
            // Insert records using new priceRefRecId
            while select * from costGroupRollupSim
            where costGroupRollupSim.InventItemPriceSimRefRecId == _inventItemPriceSim.RecId
            {
                costGroupRollup.clear();
                costGroupRollup.initFromCostGroupRollup(costGroupRollupSim, _inventItemPriceSim);
                costGroupRollup.InventItemPriceRefRecId = _inventItemPrice.RecId;
                costGroupRollup.insert();
            }
        }
        else
        {
            costGroupRollup.initFromInventItemPrice(_inventItemPrice);
            costGroupRollup.InventItemPriceRefRecId = _inventItemPrice.RecId;
            costGroupRollup.insert();
        }

        // Remove simulated records
        delete_from costGroupRollupSim
            where costGroupRollupSim.InventItemPriceSimRefRecId == _inventItemPriceSim.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOMCostBreakdown</ConfigurationKey>
	<DeveloperDocumentation>@SYS321277</DeveloperDocumentation>
	<FormRef>InventItemCostGroupRollup</FormRef>
	<Label>@SYS113492</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventItemPriceSimRefRecId</TitleField1>
	<TitleField2>CostGroupId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>PriceCostGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>PriceCostGroupIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountStd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CostAmount</Name>
			<Label>@SYS3058</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostAmountStd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventItemPriceSimRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventItemPriceSimRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountStd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmountSecCur_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountSecCur_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmountStd</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountNonMonetary</ExtendedDataType>
			<Label>@SYS3058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostLevel</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventCostLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventItemPriceSimRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventItemPriceSimRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Split</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceCostGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventItemPriceSimRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostLevel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Split</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventItemCostGroupRollupMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CostGroupId</MapField>
					<MapFieldTo>CostGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostLevel</MapField>
					<MapFieldTo>CostLevel</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Split</MapField>
					<MapFieldTo>Split</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostAmountStd</MapField>
					<MapFieldTo>CostAmountStd</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostAmountSecCur_RU</MapField>
					<MapFieldTo>CostAmountSecCur_RU</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOMCostGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMCostGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostGroupId</Name>
					<Field>CostGroupId</Field>
					<RelatedField>CostGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CostGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventItemPriceSim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemPriceSim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventItemPriceSimRefRecId</Name>
					<Field>InventItemPriceSimRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>