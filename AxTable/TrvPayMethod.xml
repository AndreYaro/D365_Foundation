<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvPayMethod</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Payment method related logic.
/// </summary>
public class TrvPayMethod extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldnum(TrvPayMethod,PostMethod))
        {
            this.OffsetLedgerDimension = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parm method for OffsetLedgerDimension.
    /// </summary>
    /// <param name = "_offsetLedgerDimension">The <c>LedgerDimensionDefaultAccount</c> record as the offset ledger dimension.</param>
    /// <param name = "_accountType">The post method for account type.</param>
    /// <returns>The <c>LedgerDimensionDefaultAccount</c> default account.</returns>
    public LedgerDimensionDefaultAccount parmOffsetLedgerDimension (LedgerDimensionDefaultAccount
                                            _offsetLedgerDimension = this.OffsetLedgerDimension,
                                            TrvPostMethod _accountType = this.PostMethod)
    {
        this.OffsetLedgerDimension = _offsetLedgerDimension;

        if (!prmisdefault(_accountType))
        {
            this.PostMethod = _accountType;
        }

        // If account has been changed, update the backing ledger dimension value
        if (!prmisdefault(_offsetLedgerDimension))
        {
            if (_offsetLedgerDimension)
            {
                this.OffsetLedgerDimension = _offsetLedgerDimension;
            }
            else
            {
                this.OffsetLedgerDimension = 0;
            }
        }

        return this.OffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TrvPayMethod</c> table.
    /// </summary>
    /// <param name = "_paymethod">The payment method of the record to be found.</param>
    /// <returns>The table buffer of <c>TrvPayMethod</c> if the record is found.</returns>
    public static TrvPayMethod find(TrvPayMethodEDT _paymethod)
    {
        TrvPayMethod    trvPayMethod;

        if (_paymethod)
        {
            select firstonly trvPayMethod
                where trvPayMethod.PayMethod == _paymethod;
        }

        return trvPayMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAutomaticPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the value of the <c>AutomaticPayment</c> field for the <c>TrvPayMethod</c> record is true.
    /// </summary>
    /// <param name = "_payMethod">The <c>TrvPayMEthod</c> record to check.</param>
    /// <returns>Returns true if the <c>TrvPayMethod</c> record exists and the value of the <c>AutomaticPayment</c> field is true. Otherwise, returns false.</returns>
    public static boolean isAutomaticPayment(TrvPayMethodEDT _payMethod)
    {
        TrvPayMethod payMethod = TrvPayMethod::find(_payMethod);

        return (payMethod.RecId != 0 && payMethod.AutomaticPayment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostOwner</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Get cost owner for the payment method in the desired legal entity.
    /// </summary>
    /// <param name = "_paymethod">Payment method for which cosy onwer is needed.</param>
    /// <param name = "_legalEntity">Data areaId; by default current context.</param>
    /// <returns>Cost owner for the payment method.</returns>
    public static TrvCostownerEDT getCostOwner(TrvPayMethodEDT _paymethod, DataAreaId _legalEntity = curExt())
    {
        TrvPayMethod trvPayMethod;

        if (_paymethod && _legalEntity)
        {
            changecompany(_legalEntity)
            {
                select CostOwner from trvPayMethod
                             where trvPayMethod.PayMethod == _paymethod;
            }
        }

        return trvPayMethod.CostOwner;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<DeveloperDocumentation>@SYS124853</DeveloperDocumentation>
	<Label>@SYS28161</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>PayMethod</TitleField1>
	<TitleField2>PostMethod</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PayMethodIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Expense</Modules>
	<PrimaryIndex>PayMethodIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostOwner</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostOwner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayedByTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutomaticPayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutomaticPayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS101711</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostOwner</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TrvCostownerEDT</ExtendedDataType>
			<EnumType>TrvCostOwner</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDynamicDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayedByTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TrvPayedByTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayMethod</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TrvPayMethodEDT</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TrvPostmethodEDT</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>TrvPostMethod</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PayMethodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PayMethod</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SetOffLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetfLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DescribesTheAccountingFor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AccountingDescribedBy</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>