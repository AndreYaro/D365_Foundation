<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymDayLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PaymDayLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId p1)
    {
        boolean ret = super(p1);

        switch (p1)
        {
            case fieldnum(PaymDayLine, WeekMonth):
                if (this.WeekMonth == WeekMonth::Week)
                {
                    this.MonthDay = 0;
                }
                if (this.WeekMonth == WeekMonth::Month)
                {
                    this.WeekDay = WeekDays::None;
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret = super();

        if (this.WeekMonth == WeekMonth::Week && this.WeekDay == WeekDays::None)
        {
            ret = checkFailed("@SYS57654");
        }

        if (this.WeekMonth == WeekMonth::Month && (this.MonthDay < 1 || this.MonthDay > 31))
        {
            ret = checkFailed("@SYS57655");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(PaymDayId _PaymDayId, WeekMonth _WeekMonth, WeekDays _WeekDay, Days _MonthDay )
    {
        boolean ret = true;

        if (!PaymDayLine::exist(_PaymDayId, _WeekMonth, _WeekDay, _MonthDay))
        {
            ret = checkFailed(strfmt(PaymDayLine::txtNotExist(), _PaymDayId, _WeekMonth, _WeekDay, _MonthDay));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(PaymDayId _PaymDayId, WeekMonth _WeekMonth, WeekDays _WeekDay, Days _MonthDay )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     PaymDayLine
                 where PaymDayLine.PaymDayId == _PaymDayId
                    && PaymDayLine.WeekMonth == _WeekMonth
                    && PaymDayLine.WeekDay == _WeekDay
                    && PaymDayLine.MonthDay == _MonthDay).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PaymDayLine find(
        PaymDayId _PaymDayId,
        WeekMonth _WeekMonth,
        WeekDays _WeekDay,
        Days _MonthDay,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        PaymDayLine PaymDayLine;

        PaymDayLine.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            PaymDayLine.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            PaymDayLine
            where PaymDayLine.PaymDayId == _PaymDayId
                && PaymDayLine.WeekMonth == _WeekMonth
                && PaymDayLine.WeekDay == _WeekDay
                && PaymDayLine.MonthDay == _MonthDay;

        return PaymDayLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102240";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextLineNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next line number to be used for the given <c>PaymDayId</c>.
    /// </summary>
    /// <param name = "_paymDayId">The parent <c>PaymDayId</c> value.</param>
    /// <returns>The next line number to be used for next <c>PaymDayLine</c> record's LineNumber field.</returns>
    internal static LineNum getNextLineNumber(PaymDayId _paymDayId)
    {
        PaymDayLine paymDayLine;

        // Disable the cache, so we get fresh values from the DB and avoid errors due to cached data.
        paymDayLine.disableCache(true);

        select firstonly PaymDayId, LineNumber from paymDayLine
            order by paymDayLine.LineNumber desc
            where paymDayLine.PaymDayId == _paymDayId;

        return paymDayLine.LineNumber + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLineNumber</Name>
				<Source><![CDATA[
    private void defaultLineNumber()
    {
        if (!this.LineNumber)
        {
            if (this.PaymDayId == '')
            {
                error(strFmt("@SYS50104", "@SYS57643"));
            }

            this.LineNumber = PaymDayLine::getNextLineNumber(this.PaymDayId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPaymDayLineConstraint</Name>
				<Source><![CDATA[
    internal void insertPaymDayLineConstraint()
    {
        PaymDayLineKeyConstraint paymDayLineKeyConstraint;
        paymDayLineKeyConstraint.PaymDayId = this.PaymDayId;
        paymDayLineKeyConstraint.LineNumber = this.LineNumber;
        paymDayLineKeyConstraint.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        #OCCRetryCount;

        try
        {            
            this.defaultLineNumber();
            
            ttsbegin;
            
            this.insertPaymDayLineConstraint();
        
            super();

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            ttsabort;

            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::Deadlock;
            }
            else
            {
                sleep(xSession::currentRetryCount() * RandomGenerate::construct().randomInt(50, 1000));

                // Set LineNumber to 0 so it will be recalculated again. For insert, we want to ensure that it's always unique and always gets
                // the proper new line number even when just deadlocked.
                this.LineNumber = 0;
                retry;
            }
        }
        catch (Exception::DuplicateKeyException)
        {
            ttsabort;

            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::DuplicateKeyException;
            }
            else
            {
                // Set LineNumber to 0 so it will be recalculated again to avoid the duplicate key.
                this.LineNumber = 0;
                retry;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.defaultLineNumber();        

        // Only insert a PaymDayLineKeyConstraint if the original line number was 0.
        if (this.orig().LineNumber == 0)
        {
            this.insertPaymDayLineConstraint();
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126083</DeveloperDocumentation>
	<FormRef>PaymDay</FormRef>
	<Label>@SYS57651</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PaymDayId</TitleField1>
	<TitleField2>WeekMonth</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PaymDayLineIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Bank</Modules>
	<PrimaryIndex>PaymDayLineIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymDayId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeekMonth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeekDay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonthDay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentDayLines</Name>
			<Label>@SYS57651</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymDayId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeekMonth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeekDay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonthDay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MonthDay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Days</ExtendedDataType>
			<Label>@SYS81403</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymDayId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymDayId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WeekDay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS128656</Label>
			<EnumType>WeekDays</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WeekMonth</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WeekMonth</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>CdsIntegrationKey</Name>
			<IsObsolete>Yes</IsObsolete>
			<Label>@AccountsReceivable:CdsIntegrationKey</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PaymDayLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymDayId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WeekMonth</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WeekDay</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MonthDay</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CdsIntegrationKey</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CdsIntegrationKey</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PaymDayIdLineNumberIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymDayId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PaymentDay</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126084</EntityRelationshipRole>
			<RelatedTable>PaymDay</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PaymentDay</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>PaymDayLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymDayId</Name>
					<SourceEDT>PaymDayId</SourceEDT>
					<Field>PaymDayId</Field>
					<RelatedField>PaymDayId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>