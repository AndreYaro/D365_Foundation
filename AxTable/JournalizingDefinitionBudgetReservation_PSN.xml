<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionBudgetReservation_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JournalizingDefinitionBudgetReservation_PSN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
    
        switch (_fieldId)
        {
            case fieldNum(JournalizingDefinitionBudgetReservation_PSN, BudgetReservationTypeCode):
                this.BudgetReservationType = this.BudgetReservationTypeCode == TableAll::All ? 0: this.BudgetReservationType;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean                 isValid;
        JournalizingDefinition  journalizingDefinition;
    
        isValid = super(_fieldIdToCheck);
    
        if (isValid)
        {
            switch(_fieldIdToCheck)
            {
                case fieldNum(JournalizingDefinitionBudgetReservation_PSN, JournalizingDefinition):
                    journalizingDefinition = JournalizingDefinition::findByRecId(this.JournalizingDefinition);
    
                    if (journalizingDefinition.JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::BudgetReservation_PSN)
                    {
                        isValid = checkFailed(strFmt("@SYS133932", journalizingDefinition.JournalizingDefinitionCode));
                    }
                    break;
            }
        }
    
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid;
    
        isValid = super();
    
        if (isValid && (this.BudgetReservationTypeCode == TableAll::Table && !this.BudgetReservationType))
        {
            isValid = checkFailed("@Budgeting_BudgetReservationPS:BudgetReservationTypeCodeError");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>JournalizingDefinitionBudgetReservation_PSN</c> table.
    /// </summary>
    /// <param name="_journalizingDefinitionBudgetResTransId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The specified record in the <c>JournalizingDefinitionBudgetReservation_PSN</c> table.
    /// </returns>
    public static JournalizingDefinitionBudgetReservation_PSN find(
        RefRecId _journalizingDefinitionBudgetResTransId,
        boolean  _forupdate = false)
    {
        JournalizingDefinitionBudgetReservation_PSN journalizingDefinitionBudgetResTrans;
    
        if (_journalizingDefinitionBudgetResTransId)
        {
            journalizingDefinitionBudgetResTrans.selectForUpdate(_forupdate);
    
            select firstonly journalizingDefinitionBudgetResTrans
                where journalizingDefinitionBudgetResTrans.RecId == _journalizingDefinitionBudgetResTransId;
        }
    
        return journalizingDefinitionBudgetResTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByJournalizingDefinitionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>JournalizingDefinitionBudgetReservation_PSN</c> table.
    /// </summary>
    /// <param name="_journalizingDefinitionId">
    /// The unique ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>JournalizingDefinitionBudgetReservation_PSN</c> table.
    /// </returns>
    public static JournalizingDefinitionBudgetReservation_PSN findByJournalizingDefinitionId(
        JournalizingDefinitionId _journalizingDefinitionId,
        boolean                  _forupdate = false)
    {
        JournalizingDefinitionBudgetReservation_PSN journalizingDefinitionBudgetReservation;
    
        if (_journalizingDefinitionId)
        {
            journalizingDefinitionBudgetReservation.selectForUpdate(_forupdate);
    
            select firstonly journalizingDefinitionBudgetReservation
                where journalizingDefinitionBudgetReservation.JournalizingDefinition == _journalizingDefinitionId;
        }
    
        return journalizingDefinitionBudgetReservation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
	<DeveloperDocumentation>@Budgeting_BudgetReservationPS:JournalizingDefinitionBudgetReservationDeveloper</DeveloperDocumentation>
	<FormRef>JournalizingDefinitionTrans</FormRef>
	<Label>@Budgeting_BudgetReservationPS:JournalizingDefinitionBudgetReservation</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>BudgetReservationType</TitleField1>
	<TitleField2>JournalizingDefinition</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>JournalizingDefBudgetReserveTransIdx</ClusteredIndex>
	<Modules>AccountingFoundation</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetReservationJournalizingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>BudgetReservationJournalizingType_PSN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetReservationTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Budgeting_BudgetReservationPS:PostingDefinitionType</Label>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetReservationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetReservationTypeRecId_PSN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalizingDefinition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalizingDefinitionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalizingDefBudgetReserveTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetReservationType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetReservationJournalizingType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetReservationType</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BudgetReservationType_PSN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetReservationType</Name>
					<Field>BudgetReservationType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JournalizingDefinition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JournalizingDefinition</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JournalizingDefinition</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>JournalizingDefinitionBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalizingDefinition</Name>
					<Field>JournalizingDefinition</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>