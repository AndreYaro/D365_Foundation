<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRItemListTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRItemListTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the related customer.
    /// </summary>
    /// <returns>
    /// The name of the related customer.
    /// </returns>
    public display CustName customerName()
    {
        return CustTable::find(this.CustAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>MCRItemListTable</c> table exists or not.
    /// </summary>
    /// <param name="_mcrItemListId">
    /// An identification value for the item list.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(MCRItemListId _mcrItemListId)
    {
        return _mcrItemListId && (select firstonly RecId from mcrItemListTable
                                        where mcrItemListTable.ItemListId  == _mcrItemListId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>MCRItemListTable</c> table.
    /// </summary>
    /// <param name="_mcrItemListId">
    /// The identification value of the item list.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>MCRItemListTable</c> record if found; otherwise, an empty record.
    /// </returns>
    static MCRItemListTable find(MCRItemListId _mcrItemListId,
                                 boolean       _forUpdate = false)
    {
        MCRItemListTable mcrItemListTable;

        if (_mcrItemListId)
        {
            mcrItemListTable.selectForUpdate(_forUpdate);

            select firstonly mcrItemListTable
                where mcrItemListTable.ItemListId == _mcrItemListId;
        }

        return mcrItemListTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>MCRItemListTable</c> table.
    /// </summary>
    /// <param name="_custAccount">
    /// The identification value of the customer account.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>MCRItemListTable</c> record if found; otherwise, an empty record.
    /// </returns>
    static MCRItemListTable findByCustAccount(  CustAccount   _custAccount,
                                                boolean       _forUpdate = false)
    {
        MCRItemListTable mcrItemListTable;

        if (_custAccount)
        {
            mcrItemListTable.selectForUpdate(_forUpdate);

            select firstonly mcrItemListTable
                where mcrItemListTable.CustAccount == _custAccount;
        }

        return mcrItemListTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the item list header has any associated lines.
    /// </summary>
    /// <param name = "_mcrItemListTable">A MCRItemListTable record.</param>
    /// <returns>True if the header has any lines; false otherwise.</returns>
    static boolean hasLines(MCRItemListTable _mcrItemListTable)
    {
        MCRItemListLine localMCRItemListLine;

        if (_mcrItemListTable.RecId != 0)
        {
            select firstonly RecId from localMCRItemListLine
                where localMCRItemListLine.ItemListTable == _mcrItemListTable.RecId;
        }

        return (localMCRItemListLine.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasGenericLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if there are any generic item list headers with lines valid for all customers.
    /// </summary>
    /// <returns>True if there are any records valid for all customers; false otherwise.</returns>
    public static boolean hasGenericLines()
    {
        MCRItemListTable localMCRItemListTable;
        MCRItemListLine  localMCRItemListLine;

        select firstonly RecId, CustAccount from localMCRItemListTable
            where localMCRItemListTable.CustAccount == ''
                exists join ItemListTable from localMCRItemListLine
                    where localMCRItemListLine.ItemListTable == localMCRItemListTable.RecId;

        return (localMCRItemListTable.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeq</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines and returns the next number in the item list sequence.
    /// </summary>
    /// <param name="_makeDecisionLater">
    /// A <c>boolean</c> used by the <c>NumberSeq</c> class; optional.
    /// </param>
    /// <param name="_dontThrowOnMissingRefSetUp">
    /// A <c>boolean</c> used by the <c>NumberSeq</c> class; optional.
    /// </param>
    /// <returns>
    /// The next number that can be used by the item list functionality.
    /// </returns>
    public static NumberSeq numberSeq(
        boolean _makeDecisionLater              = false,
        boolean _dontThrowOnMissingRefSetUp     = false)
    {
        return NumberSeq::newGetNum(
            CustParameters::mcrNumRefItemList(),
            _makeDecisionLater,
            _dontThrowOnMissingRefSetUp);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@MCR40207</DeveloperDocumentation>
	<FormRef>MCRItemListTable</FormRef>
	<Label>@MCR40202</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemListId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<ReplacementKey>ItemListIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemListId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>customerName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemListId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemListId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS11779</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>customerName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemListId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemListId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRItemListId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemListIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemListId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>