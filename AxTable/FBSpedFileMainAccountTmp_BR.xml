<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFileMainAccountTmp_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBSpedFileMainAccountTmp_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertFromMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in the <c>FBSpedFileMainAccountTmp_BR</c> temporary table represented by the current table buffer instance.
    /// </summary>
    /// <param name="_mainAccount">
    /// A <c>MainAccount</c> table record
    /// </param>
    public void insertFromMainAccount(MainAccount _mainAccount)
    {
        if (!FBSpedFileMainAccountTmp_BR::exists(this, _mainAccount.MainAccountId))
        {
            ttsBegin;

            this.MainAccountId  = _mainAccount.MainAccountId;
            this.Name           = _mainAccount.Name;
            this.AccountLevel   = _mainAccount.getAccountLevel();
            this.Type           = _mainAccount.Type;

            this.insert();

            ttsCommit;
        }
        else
        {
            this.MainAccountId  = _mainAccount.MainAccountId;
            this.Name           = _mainAccount.Name;
            this.AccountLevel   = _mainAccount.getAccountLevel();
            this.Type           = _mainAccount.Type;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>FBSpedFileMainAccountTmp_BR</c> temporary table exists
    /// </summary>
    /// <param name="_spedFileMainAccount">
    /// The instance of table buffer <c>FBSpedFileMainAccountTmp_BR</c> where data should be searched for.
    /// </param>
    /// <param name="_mainAccountId">
    /// The main account ID
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exists(FBSpedFileMainAccountTmp_BR _spedFileMainAccount, MainAccountNum _mainAccountId)
    {
        select firstOnly RecId from _spedFileMainAccount
            where _spedFileMainAccount.MainAccountId == _mainAccountId;

        return _spedFileMainAccount.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4001800</DeveloperDocumentation>
	<Label>@SYS4001801</Label>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AccountLevel</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MainAccountId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>MainAccountNum</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AccountName</ExtendedDataType>
			<Label>@SYS7399</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>DimensionLedgerAccountType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>