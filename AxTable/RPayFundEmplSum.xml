<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayFundEmplSum</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayFundEmplSum extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fundName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Name fundName()
    {
        return RpayCounterTable::find(this.RpayCounterUnit).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayFundEmplSum find (ReportPeriod_RU  _payPeriod,
                                        RHRMEmplId           _emplId,
                                        RPayCounterUnit  _counterUnit,
                                        ReportPeriod_RU  _correctedPeriod,
                                        Percent          _percentValue,
                                        boolean          _forUpdate  = false)
    {
        RPayFundEmplSum rPayFundEmplSum;

        rPayFundEmplSum.selectForUpdate(_forUpdate);
        select firstonly rPayFundEmplSum
            where rPayFundEmplSum.PayPeriod         == _payPeriod    &&
                  rPayFundEmplSum.EmplId            == _emplId       &&
                  rPayFundEmplSum.RpayCounterUnit   == _counterUnit  &&
                  rPayFundEmplSum.PercentValue      == _percentValue &&
                  rPayFundEmplSum.CorrectedPeriod   == _correctedPeriod;

        return rPayFundEmplSum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllFundAmount</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayAmount getAllFundAmount(RHRMEmplId      _emplId,
                                                     ReportPeriod_RU _startDate = endmth(dateStartYr(RPayParameters::payPeriod())),
                                                     ReportPeriod_RU _endDate   = RPayParameters::payPeriod())
    {
        RpayFundEmplSum rpayFundEmplSum;

        select sum(FundAmount) from rpayFundEmplSum
            where rpayFundEmplSum.EmplId    == _emplId    &&
                  rpayFundEmplSum.PayPeriod >= _startDate &&
                  rpayFundEmplSum.PayPeriod <= _endDate;
        return rpayFundEmplSum.FundAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFundAmount</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayAmount getFundAmount(RHRMEmplId          _emplId,
                                                  RPayCounterUnit     _payCounterUnit,
                                                  RPayCorrectedPeriod _startCorrectedPeriod = endmth(dateStartYr(RPayParameters::payPeriod())),
                                                  RPayCorrectedPeriod _endCorrectedPeriod   = RPayParameters::payPeriod(),
                                                  ReportPeriod_RU     _payPeriod            = RPayParameters::payPeriod(),
                                                  boolean             _usePercent           = false,
                                                  Percent             _percentValue         = 0,
                                                  boolean             _includeLast          = true)
    {
        RpayFundEmplSum rpayFundEmplSum;

        select sum(FundAmount) from rpayFundEmplSum
            where rpayFundEmplSum.EmplId          == _emplId               &&
                  rpayFundEmplSum.RpayCounterUnit == _payCounterUnit       &&
                  rpayFundEmplSum.CorrectedPeriod >= _startCorrectedPeriod &&
                  rpayFundEmplSum.CorrectedPeriod <= _endCorrectedPeriod   &&
                  rpayFundEmplSum.PayPeriod       <= _payPeriod            &&
                  (!_usePercent ||
                   rpayFundEmplSum.PercentValue   == _percentValue)        &&
                  (_includeLast ||
                  (rpayFundEmplSum.CorrectedPeriod != _endCorrectedPeriod  ||
                   rpayFundEmplSum.PayPeriod       != _payPeriod));

        return rpayFundEmplSum.FundAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFundBaseAmount</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayAmount getFundBaseAmount(RHRMEmplId          _emplId,
                                                      RPayCounterUnit     _payCounterUnit,
                                                      RPayCorrectedPeriod _startCorrectedPeriod = endmth(dateStartYr(RPayParameters::payPeriod())),
                                                      RPayCorrectedPeriod _endCorrectedPeriod   = RPayParameters::payPeriod(),
                                                      ReportPeriod_RU     _payPeriod            = RPayParameters::payPeriod(),
                                                      boolean             _usePercent           = false,
                                                      Percent             _percentValue         = 0,
                                                      boolean             _includeLast          = true)
    {
        RpayFundEmplSum rpayFundEmplSum;

        select sum(BaseAmount) from rpayFundEmplSum
            where rpayFundEmplSum.EmplId          == _emplId               &&
                  rpayFundEmplSum.RpayCounterUnit == _payCounterUnit       &&
                  rpayFundEmplSum.CorrectedPeriod >= _startCorrectedPeriod &&
                  rpayFundEmplSum.CorrectedPeriod <= _endCorrectedPeriod   &&
                  rpayFundEmplSum.PayPeriod       <= _payPeriod            &&
                  (!_usePercent ||
                   rpayFundEmplSum.PercentValue   == _percentValue)        &&
                 (_includeLast ||
                 (rpayFundEmplSum.CorrectedPeriod != _endCorrectedPeriod   ||
                  rpayFundEmplSum.payPeriod       != _payPeriod));

        return rpayFundEmplSum.BaseAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFundSum</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static container getFundSum(RHRMEmplId      _emplId,
                                              RPayCounterUnit _payCounterUnit,
                                              ReportPeriod_RU _startDate = endmth(dateStartYr(RpayParameters::payPeriod())),
                                              ReportPeriod_RU _endDate =   RpayParameters::payPeriod())
    {
        RpayFundEmplSum rpayFundEmplSum;

        select sum(BaseAmount), sum(FundAmount), sum(RpayFundTotalAmount) from rpayFundEmplSum
            where rpayFundEmplSum.EmplId          == _emplId         &&
                  rpayFundEmplSum.RpayCounterUnit == _payCounterUnit &&
                  rpayFundEmplSum.PayPeriod       >= _startDate      &&
                  rpayFundEmplSum.PayPeriod       <= _endDate;

        return [rpayFundEmplSum.BaseAmount,rpayFundEmplSum.FundAmount,rpayFundEmplSum.RpayFundTotalAmount];
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastPercentValue</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static RpayFundEmplSum lastPercentValue(RHRMEmplId          _emplId,
                                                   RPayCounterUnit     _payCounterUnit,
                                                   RPayCorrectedPeriod _correctedPeriod,
                                                   ReportPeriod_RU     _payPeriod = RPayParameters::payPeriod(_emplId),
                                                   boolean             _forUpdate = false)
    {
        RpayFundEmplSum rpayFundEmplSum, rpayFundEmplSum2;

        rpayFundEmplSum.selectForUpdate(_forUpdate);

        select firstonly rpayFundEmplSum
            order by payPeriod desc
            where rpayFundEmplSum.EmplId          == _emplId               &&
                  rpayFundEmplSum.RpayCounterUnit == _payCounterUnit       &&
                  rpayFundEmplSum.CorrectedPeriod == _correctedPeriod      &&
                  rpayFundEmplSum.PayPeriod       <  _payPeriod;

        //ensure that found percent is not correction
        if (rpayFundEmplSum.RpayFundTotalAmount < 0) //negative amount means correction
        {
             rpayFundEmplSum2.selectForUpdate(_forUpdate);

            select firstonly rpayFundEmplSum2
                order by payPeriod desc
                where rpayFundEmplSum2.EmplId          == _emplId          &&
                      rpayFundEmplSum2.RpayCounterUnit == _payCounterUnit  &&
                      rpayFundEmplSum2.CorrectedPeriod == _correctedPeriod &&
                      rpayFundEmplSum2.PayPeriod       <  _payPeriod       &&
                      rpayFundEmplSum2.RecId           != rpayFundEmplSum.RecId;

            return rpayFundEmplSum2;
        }
        else
        {
            return rpayFundEmplSum;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6144</DeveloperDocumentation>
	<FormRef>RpayFundTotal</FormRef>
	<Label>@RUP602</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>PayPeriod</TitleField1>
	<TitleField2>RpayCounterUnit</TitleField2>
	<ClusteredIndex>PeriodEmplUnitIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>PeriodEmplUnitIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RpayCounterUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FundAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BaseAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RpayCounterUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RpayFundTotalAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FundAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PercentValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayAmount</ExtendedDataType>
			<Label>@GLS101444</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CorrectedPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayCorrectedPeriod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RHRMEmplId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FundAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayAmount</ExtendedDataType>
			<Label>@RUP604</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PayPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportPeriod_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PercentValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RpayCounterUnit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayCounterUnit</ExtendedDataType>
			<Label>@GLS105865</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RpayFundTotalAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayAmount</ExtendedDataType>
			<Label>@RUP824</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PeriodEmplUnitIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PayPeriod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EmplId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RpayCounterUnit</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CorrectedPeriod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PercentValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMEmplTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplId</Name>
					<SourceEDT>RHRMEmplId</SourceEDT>
					<Field>EmplId</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>EmployeeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayCounterTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayCounterTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RpayCounterUnit</Name>
					<SourceEDT>RPayCounterUnit</SourceEDT>
					<Field>RpayCounterUnit</Field>
					<RelatedField>CounterUnit</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>