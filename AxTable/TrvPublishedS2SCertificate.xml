<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvPublishedS2SCertificate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvPublishedS2SCertificate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the published certificate is active.
    /// </summary>
    /// <returns>true, if the published certificate is active; otherwise, false.</returns>
    internal boolean isActive()
    {
        return this.ExpiryUtcDateTime >= TrvPublishedS2SCertificate::latestExpiryUtcDateTimeForActiveCertificate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActiveCertificateByThumbprint</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the active published certificate record with the specified thumbprint.
    /// </summary>
    /// <param name = "_thumbprint">The certificate thumbprint.</param>
    /// <returns>The active published certificate record with the specified thumbprint.</returns>
    internal static TrvPublishedS2SCertificate findActiveCertificateByThumbprint(str _thumbprint)
    {
        TrvPublishedS2SCertificate publishedCertificate;

        if (_thumbprint)
        {
            select firstonly publishedCertificate
                where publishedCertificate.Thumbprint == _thumbprint
                    && publishedCertificate.ExpiryUtcDateTime >= TrvPublishedS2SCertificate::latestExpiryUtcDateTimeForActiveCertificate();
        }

        return publishedCertificate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>publishCertificate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Publishes the specified certificate. It means that the certificate can now be used for secure communication with microservices 
    /// for a certain period of time (see the <c>ExpiryUtcDateTime</c> field).
    /// </summary>
    /// <param name = "certificate">The certificate to be published.</param>
    /// <returns>The record with the published certificate.</returns>
    internal static TrvPublishedS2SCertificate publishCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2 certificate)
    {
        TrvPublishedS2SCertificate publishedCertificate = TrvPublishedS2SCertificate::findActiveCertificateByThumbprint(certificate.Thumbprint);

        if (!publishedCertificate)
        {
            ttsbegin;
                
            // Content type Cert does not include the private key so it is safe to export it and store in the database
            var certBytes = certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType::Cert);
            var certBase64String = System.Convert::ToBase64String(certBytes);

            publishedCertificate.Thumbprint = certificate.Thumbprint;
            publishedCertificate.X509CertBase64 = certBase64String;
            const int PublishedCertificateValidityPeriodInMinutes = 60;
            publishedCertificate.ExpiryUtcDateTime = DateTimeUtil::addMinutes(DateTimeUtil::utcNow(), PublishedCertificateValidityPeriodInMinutes);
            publishedCertificate.insert();

            ttscommit;
        }

        return publishedCertificate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExpiredCertificates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the certificates that have expired.
    /// </summary>
    internal static void deleteExpiredCertificates()
    {
        ttsbegin;

        TrvPublishedS2SCertificate publishedCertificate;

        delete_from publishedCertificate
            where publishedCertificate.ExpiryUtcDateTime < DateTimeUtil::utcNow();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestExpiryUtcDateTimeForActiveCertificate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the latest date and time for a published certificate record to be valid.
    /// If the expiry date and time is earlier than this date then the certificate must be published again.
    /// </summary>
    /// <returns>The latest date and time for a published certificate record to be valid.</returns>
    internal static utcdatetime latestExpiryUtcDateTimeForActiveCertificate()
    {
        const int MinimumActivePublishedCertificateValidityPeriodInMinutes = 10;

        // The certificate record must be valid for some time after the current moment because it will take time to prepare, send and receive the web request.
        return DateTimeUtil::addMinutes(
            DateTimeUtil::utcNow(), 
            MinimumActivePublishedCertificateValidityPeriodInMinutes);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<DeveloperDocumentation>@Expense:TrvPublishedS2ScertDevDoc</DeveloperDocumentation>
	<Label>@Expense:TrvPublishedS2Scert</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<Visible>No</Visible>
	<ClusteredIndex>ThumbprintIdx</ClusteredIndex>
	<Modules>Expense</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Thumbprint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>X509CertBase64</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpiryUtcDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Thumbprint</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TrvPublishedS2SCertificateThumbprint</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>X509CertBase64</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TrvPublishedS2SCertificateX509CertBase64</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpiryUtcDateTime</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TrvPublishedS2SCertificateExpiryUtcDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ThumbprintIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Thumbprint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExpiryUtcDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>