<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsRebateAgreement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsRebateAgreement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the rebate agreement can be submitted to workflow or not.
    /// </summary>
    /// <param name="_workflowType">
    /// The workflow type for the rebate agreement.
    /// </param>
    /// <returns>
    /// A boolean value that defines whether the rebate agreement can be submitted to workflow or not.
    /// </returns>
    public boolean canSubmitToWorkflow(str _workflowType = '')
    {
        return this.RecId != 0
            && this.tamCustRebateApprovalStatus == TAMCustRebateApprovalStatus::NotSubmitted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfLineExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the agreement has existing related <c>PdsRebateAgreementLine</c> record.
    /// </summary>
    /// <param name="throwError">
    /// If true an error is thrown on check failure.
    /// </param>
    /// <returns>
    /// true if any related <c>PdsRebateAgreementLine</c> record exists; otherwise false.
    /// </returns>

    public boolean checkIfLineExists(boolean throwError = true)
    {
        PdsRebateAgreementLine  line;
        boolean                 ret = true;

        select firstonly RecId from line
            where line.RebateAgreementRefRecId == this.RecId;

        if (!line.RecId)
        {
            if (throwError)
            {
                ret = checkFailed("@PDS1987");
            }
            else
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLineBreaks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the agreement line breaks are valid.
    /// </summary>
    /// <returns>
    /// false if one of the line breaks is invalid; otherwise, true.
    /// </returns>
    public boolean checkLineBreaks()
    {
        PdsRebateAgreementLineBreakValidation pdsCheckLineBreaks = PdsRebateAgreementLineBreakValidation::newFromPdsRebateAgreement(this);

        return pdsCheckLineBreaks.checkLineBreaks();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPdsRebatePaymentType</Name>
				<Source><![CDATA[
    public boolean checkPdsRebatePaymentType()
    {
        boolean ret = true;

        if ((this.PdsRebateProgramType == PdsRebateProgramType::Freight
                && this.PdsPaymtType != PdsPaymtType::Freight)
            || (this.PdsRebateProgramType != PdsRebateProgramType::Freight
                && this.PdsPaymtType == PdsPaymtType::Freight))
        {
            ret = checkFailed("@PRO1158");
        }

        if (ret
            && this.PdsRebateProgramType == PdsRebateProgramType::Rebate
            && this.PdsPaymtType == PdsPaymtType::TradeSpending)
        {
            ret = checkFailed("@MCR40110");
        }

        if (ret
            && this.PdsRebateProgramType == PdsRebateProgramType::BillBack
            && this.PdsPaymtType == PdsPaymtType::TradeSpending)
        {
            ret = checkFailed("@MCR40124");
        }

        if (ret
            && this.PdsRebateProgramType == PdsRebateProgramType::TMA
            && this.PdsPaymtType != PdsPaymtType::TradeSpending)
        {
            ret = checkFailed("@PRO1169");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRebateAmountRequirements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the Rebate amount satisfies the Rebate minimum amount requirements.
    /// </summary>
    /// <param name="_rebateAmount">
    /// The Rebate amount.
    /// </param>
    /// <param name="_currency">
    /// The Currency.
    /// </param>
    /// <returns>
    /// true if Rebate amount satisfies the Rebate minimum amount requirements; otherwise, false.
    /// </returns>
    public boolean checkRebateAmountRequirements(
        real            _rebateAmount,
        CurrencyCode    _currency)
    {
        boolean     ret = true;
        real        rebateAmount = _rebateAmount;

        if (_currency != this.RebateCurrency)
        {
            rebateAmount = CurrencyExchangeHelper::curAmount2CurAmount(rebateAmount, _currency, this.RebateCurrency);
        }

        if (abs(rebateAmount) < abs(this.PdsRebateMinAmt))
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRebateQtyRequirements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the Rebate quantity satisfies the Rebate minimum quantity requirements.
    /// </summary>
    /// <param name="_rebateQty">
    /// The Rebate quantity.
    /// </param>
    /// <param name="_salesUnit">
    /// The Sales unit.
    /// </param>
    /// <param name="_itemId">
    /// The ItemId.
    /// </param>
    /// <returns>
    /// true if the Rebate quantity satisfies Rebate minimum quantity requirements; otherwise, false.
    /// </returns>
    [SysObsolete('This method has been deprecated, use method checkRebateQuantityRequirements instead', false, 31\03\2019)]
    public boolean checkRebateQtyRequirements(
        SalesQty    _rebateQty,
        SalesUnit   _salesUnit,
        ItemId      _itemId = '')
    {
        if (EcoResProduct::find(InventTable::find(_itemId).Product).isProductMasterWithProductVariantConversionEnabled())
        {
            throw error("@SCM:DeprecatedMethodErrorForVariantConversions");
        }

        RebateQuantityRequirementContract contract = RebateQuantityRequirementContract::constructWithVariables(_rebateQty,
                                                                                                               _salesUnit,
                                                                                                               _itemId,
                                                                                                               '',
                                                                                                               false);

        return this.checkRebateQuantityRequirements(contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRebateQuantityRequirements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the rebate quantity satisfies the rebate minimum quantity requirements.
    /// </summary>
    /// <param name="_contract">
    /// Rebate quantity requirement parameters.
    /// </param>
    /// <returns>
    /// true if the rebate quantity satisfies rebate minimum quantity requirements; otherwise, false.
    /// </returns>
    public boolean checkRebateQuantityRequirements(RebateQuantityRequirementContract _contract)
    {
        real rebateQty = _contract.rebateQty;
        boolean ret = true;

        if (_contract.unit != this.PdsRebateUnit)
        {
            if (this.RebateUOMOption == PdsRebateUOMOption::Convert)
            {
                EcoResProductUnitConverter	ecoResProductUnitConverter = EcoResProductUnitConverter::newGivenUnitSymbolsForReleasedProduct(_contract.itemId,
                                                                                                                                           _contract.inventDimId,
                                                                                                                                           _contract.unit,
                                                                                                                                           this.PdsRebateUnit,
                                                                                                                                           NoYes::No,
                                                                                                                                           NoYes::No);
                if (ecoResProductUnitConverter.canValueBeConverted())
                {
                    rebateQty = ecoResProductUnitConverter.convertValue(rebateQty);
                }
                else
                {
                    ret = false;
                }
            }
            else
            {
                ret = false;
            }
        }

        if (ret
            && abs(rebateQty) < abs(this.PdsRebateMinQty))
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRebateRequirement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the rebate satisfies the rebate minimum requirements.
    /// </summary>
    /// <param name="_contract">
    /// Rebate quantity check requirement parameters.
    /// </param>
    /// <returns>true if the rebate statisfies the rebate minimum; otherwise, false</returns>
    public boolean checkRebateRequirement(RebateQuantityCheckRequirementContract _contract)
    {
        boolean ret = true;

        if (!this.PdsRebateMinAmt
            && !this.PdsRebateMinQty)
        {
            ret = checkFailed("@PRO1351");
        }
        else if (this.PdsRebateMinAmt != 0)
        {
            ret = this.checkRebateAmountRequirements(_contract.rebateAmount, _contract.currency);
        }
        else if (this.PdsRebateMinQty != 0)
        {
            RebateQuantityRequirementContract contract = RebateQuantityRequirementContract::constructWithVariables(_contract.rebateQty,
                                                                                                                   _contract.unit,
                                                                                                                   _contract.itemId,
                                                                                                                   _contract.inventDimId,
                                                                                                                   false);

            ret = this.checkRebateQuantityRequirements(contract);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRebateRequirements</Name>
				<Source><![CDATA[
    [SysObsolete('This method has been deprecated, use checkRebateRequirement instead.', false, 31\03\2019)]
    public boolean checkRebateRequirements(
        real            _rebateAmount,
        SalesQty        _rebateQty,
        SalesUnit       _salesUnit,
        CurrencyCode    _currency,
        ItemId          _itemId = '')
    {
        if (EcoResProduct::find(InventTable::find(_itemId).Product).isProductMasterWithProductVariantConversionEnabled())
        {
            throw error("@SCM:DeprecatedMethodErrorForVariantConversions");
        }

        RebateQuantityCheckRequirementContract contract = RebateQuantityCheckRequirementContract::constructWithVariables(_rebateAmount,
                                                                                                                         _rebateQty,
                                                                                                                         _salesUnit,
                                                                                                                         _currency,
                                                                                                                         _itemId,
                                                                                                                         '');

        return this.checkRebateRequirement(contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRelatedRebateTransExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the Rebate agreement is assigned to the <c>PdsRebateTable</c> table.
    /// </summary>
    /// <returns>
    /// true if the Rebate agreement is assigned to the PdsRebateTable; otherwise, false.
    /// </returns>
    public boolean checkRelatedRebateTransExist()
    {
        return (this.RecId || !PdsRebateAgreementCreateRebateIfCustomerRebateWorkflowEnabledFlight::instance().isEnabled())
            && (select firstonly RecId from pdsRebateTable
                    where pdsRebateTable.PdsRebateAgreementRefRecId == this.RecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUOMConvert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the unit of measure conversion method is valid according to the <c>PdsRebateAgreementLine</c> records.
    /// </summary>
    /// <returns>
    /// false if there is a quantity overlap; otherwise, true.
    /// </returns>
    public boolean checkUOMConvert()
    {
        PdsRebateAgreementLine  pdsRebateAgreementLine;
        boolean                 ok = true;

        if (this.RebateUOMOption == PdsRebateUOMOption::Convert)
        {
            select firstonly RecId
                from pdsRebateAgreementLine
                where pdsRebateAgreementLine.RebateAgreementRefRecId == this.RecId
                    && pdsRebateAgreementLine.RebateUnit             != this.PdsRebateUnit;

            if (pdsRebateAgreementLine.RecId)
            {
                ok = checkFailed("@PDS1906");
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkValidDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the date is within the date effective range.
    /// </summary>
    /// <param name="_date">
    /// The date to check for within the date effective range.
    /// </param>
    /// <returns>
    /// True if the date is within the date effective range; otherwise false.
    /// </returns>
    public boolean checkValidDate(date _date)
    {
        boolean ret = true;

        if (this.ValidFrom
            && this.ValidTo)
        {
            if (this.ValidFrom > _date
                || this.ValidTo < _date)
            {
                ret = false;
            }
        }
        else if (this.ValidFrom)
        {
            if (this.ValidFrom > _date)
            {
                ret = false;
            }
        }
        else if (this.ValidTo)
        {
            if (this.ValidTo < _date)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyCurrencyCode</Name>
				<Source><![CDATA[
    public display CurrencyCode companyCurrencyCode()
    {
        return CompanyInfoHelper::standardCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts rebate agreement lines values from the old to new currency set on the rebate agreement.
    /// </summary>
    public void convertCurrencyCode()
    {
        PdsRebateAgreementLine  pdsRebateAgreementLine;

        ttsBegin;
        while select forUpdate pdsRebateAgreementLine
            where pdsRebateAgreementLine.RebateAgreementRefRecId == this.RecId
        {
            pdsRebateAgreementLine.Currency    = this.RebateCurrency;

            pdsRebateAgreementLine.RebateValue = PdsRebateAgreement::convertRebateValue(pdsRebateAgreementLine.RebateValue, pdsRebateAgreementLine.RebateAmtType, this.orig().RebateCurrency, this.RebateCurrency);

            if (this.PdsRebateLineBreakType == PdsRebateLineBreakType::Amount)
            {
                pdsRebateAgreementLine.RebateFromAmount = CurrencyExchangeHelper::curAmount2CurAmount(pdsRebateAgreementLine.RebateFromAmount, this.orig().RebateCurrency, this.RebateCurrency);
                pdsRebateAgreementLine.RebateToAmount   = CurrencyExchangeHelper::curAmount2CurAmount(pdsRebateAgreementLine.RebateToAmount, this.orig().RebateCurrency, this.RebateCurrency);
            }
            pdsRebateAgreementLine.doUpdate();
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.PdsCumulateSalesBy = PdsCumulationPeriod::Invoice;
        this.PdsFindNext        = NoYes::Yes;
        this.RebateCurrency     = this.rebateCurrencyCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        TAMMerchandisingEvent   tamMerchandisingEvent;
        TAMTradePromotion       tamTradePromotion;

        if (this.TAMMerchandisingEventID)
        {
            tamMerchandisingEvent = TAMMerchandisingEvent::find(this.TAMMerchandisingEventID);
            tamTradePromotion     = TAMTradePromotion::findByPromoID(tamMerchandisingEvent.PromotionID);
            this.RebateCurrency   = tamTradePromotion.Currency;
        }

        if (!this.RebateAgreementId)
        {
            this.RebateAgreementId = this.generateAgreementId();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>invalidateRebateAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invalidates the Rebate agreement.
    /// </summary>
    /// <param name="_forceUpdate">
    /// A Boolean value that specifies whether to update the record or not; optional.
    /// </param>
    public void invalidateRebateAgreement(boolean _forceUpdate = false)
    {
        this.Validated                      = false;
        this.Verifier                       = 0;
        this.tamCustRebateApprovalStatus    = TAMCustRebateApprovalStatus::NotSubmitted;

        if (_forceUpdate)
        {
            this.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
            this.doUpdate();
        }

        info("@PDS1408");
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAgreement</Name>
				<Source><![CDATA[
    public void validateAgreement(HcmPersonnelNumberId _workerPersonnelNumber)
    {
        Args arguments = new Args();
        arguments.record(this);
        PdsRebateAgreementValidate rebateAgreementValidate = PdsRebateAgreementValidate::construct(arguments);
        rebateAgreementValidate.setRemove(NoYes::No);
        rebateAgreementValidate.parmVerifier(HcmWorker::findByPersonnelNumber(_workerPersonnelNumber).RecId);
        rebateAgreementValidate.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the Rebate agreement is Validated.
    /// </summary>
    /// <returns>
    /// true if the Rebate agreement is validated; otherwise, false.
    /// </returns>
    public boolean isValidated()
    {
        return this.Validated && this.Verifier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executed when a field is modified in a form.
    /// </summary>
    /// <param name="_fieldName">
    /// Table field Name of the field being modified.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        // If a field other than the TAMCustRebateApprovalStatus has been changed
        // and the workflow is in a status other than NotSubmitted, change the workflow
        // status to NotSubmitted which will require the user to submit their changes to
        // the workflow before validating.
        if (this.tamCustRebateApprovalStatus == TAMCustRebateApprovalStatus::Approved
            && _fieldName != fieldStr(PdsRebateAgreement, tamCustRebateApprovalStatus))
        {
            this.tamCustRebateApprovalStatus = TAMCustRebateApprovalStatus::NotSubmitted;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLedgerDimension</Name>
				<Source><![CDATA[
    private void defaultLedgerDimension()
    {
        this.LedgerDimension = PdsRebate::find(this.PdsRebateType).LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultOffsetLedgerDimension</Name>
				<Source><![CDATA[
    private void defaultOffsetLedgerDimension()
    {
        this.OffsetLedgerDimension = PdsRebate::find(this.PdsRebateType).OffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateProgramType</Name>
				<Source><![CDATA[
    private void defaultRebateProgramType()
    {
        this.PdsRebateProgramType = PdsRebate::find(this.PdsRebateType).PdsRebateProgramType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateCustomizedPeriodType</Name>
				<Source><![CDATA[
    private void defaultRebateCustomizedPeriodType()
    {
        if (this.PdsCumulateSalesBy != PdsCumulationPeriod::CustomizedPeriod)
        {
            this.RebateCustomizedPeriodType = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateCurrency</Name>
				<Source><![CDATA[
    private void defaultRebateCurrency()
    {
        if (this.RebateGenericCurrency == NoYes::Yes)
        {
            this.RebateCurrency = this.rebateCurrencyCode();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateMinQuantity</Name>
				<Source><![CDATA[
    private void defaultRebateMinQuantity()
    {
        if (this.PdsRebateMinAmt != 0)
        {
            this.PdsRebateMinQty = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateMinAmount</Name>
				<Source><![CDATA[
    private void defaultRebateMinAmount()
    {
        if (this.PdsRebateMinQty != 0)
        {
            this.PdsRebateMinAmt = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRebateUnit</Name>
				<Source><![CDATA[
    private void defaultRebateUnit()
    {
        if (this.PdsItemRebateCode == PdsRebateItemCode::Table)
        {
            this.PdsRebateUnit = InventTableModule::find(
                                this.PdsItemRebateRelation,
                                ModuleInventPurchSales::Sales).UnitId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDimId</Name>
				<Source><![CDATA[
    private void defaultInventDimId()
    {
        this.InventDimId = InventDim::findOrCreateBlank().inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemRebateRelation</Name>
				<Source><![CDATA[
    private void defaultItemRebateRelation()
    {
        this.PdsItemRebateRelation = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsRebateAgreement, LedgerDimension):
                this.defaultLedgerDimension();
                break;
            case fieldNum(PdsRebateAgreement, OffsetLedgerDimension):
                this.defaultOffsetLedgerDimension();
                break;
            case fieldNum(PdsRebateAgreement, PdsRebateProgramType):
                this.defaultRebateProgramType();
                break;
            case fieldNum(PdsRebateAgreement, RebateCustomizedPeriodType):
                this.defaultRebateCustomizedPeriodType();
                break;
            case fieldNum(PdsRebateAgreement, RebateCurrency):
                this.defaultRebateCurrency();
                break;
            case fieldNum(PdsRebateAgreement, PdsRebateMinQty):
                this.defaultRebateMinQuantity();
                break;
            case fieldNum(PdsRebateAgreement, PdsRebateMinAmt):
                this.defaultRebateMinAmount();
                break;
            case fieldNum(PdsRebateAgreement, PdsRebateUnit):
                this.defaultRebateUnit();
                break;
            case fieldNum(PdsRebateAgreement, InventDimId):
                this.defaultInventDimId();
                break;
            case fieldNum(PdsRebateAgreement, PdsItemRebateRelation):
                this.defaultItemRebateRelation();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(PdsRebateAgreement, LedgerDimension), [fieldNum(PdsRebateAgreement, PdsRebateType)]],
            [fieldNum(PdsRebateAgreement, OffsetLedgerDimension), [fieldNum(PdsRebateAgreement, PdsRebateType)]],
            [fieldNum(PdsRebateAgreement, PdsRebateProgramType), [fieldNum(PdsRebateAgreement, PdsRebateType)]],
            [fieldNum(PdsRebateAgreement, RebateCustomizedPeriodType), [fieldNum(PdsRebateAgreement, PdsCumulateSalesBy)]],
            [fieldNum(PdsRebateAgreement, RebateCurrency), [fieldNum(PdsRebateAgreement, RebateGenericCurrency)]],
            [fieldNum(PdsRebateAgreement, PdsRebateMinQty), [fieldNum(PdsRebateAgreement, PdsRebateMinAmt)]],
            [fieldNum(PdsRebateAgreement, PdsRebateMinAmt), [fieldNum(PdsRebateAgreement, PdsRebateMinQty)]],
            [fieldNum(PdsRebateAgreement, PdsRebateUnit), [fieldNum(PdsRebateAgreement, PdsItemRebateRelation)]],
            [fieldNum(PdsRebateAgreement, InventDimId), [fieldNum(PdsRebateAgreement, PdsItemRebateRelation)]],
            [fieldNum(PdsRebateAgreement, PdsItemRebateRelation), [fieldNum(PdsRebateAgreement, PdsItemRebateCode)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebateCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the Rebate Currency code.
    /// </summary>
    /// <returns>
    /// The Currency code.
    /// </returns>
    public display CurrencyCode rebateCurrencyCode()
    {
        CurrencyCode currencyCode;

        if (this.RebateGenericCurrency && SalesParameters::find().GenericCurrency)
        {
            currencyCode = SalesParameters::find().GenericCurrency;
        }
        else
        {
            currencyCode = this.companyCurrencyCode();
        }

        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalcDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date used for comparison based on the calculation date
    /// selected on the rebate agreement.
    /// </summary>
    /// <param name="_salesLine">
    /// The <c>SalesLine</c> record for which to find the comparison date.
    /// </param>
    /// <returns>
    /// The date that will be used for comparison based on the calculation date field.
    /// </returns>
    date setCalcDate(SalesLine  _salesLine)
    {
        date    retDate;

        if (this.RebateCalcDateType == PdsRebateCalcDateType::CreatedDate)
        {
            retDate = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(_salesLine.createdDateTime, _salesLine.timeZoneSite()));
        }
        else if (this.RebateCalcDateType == PdsRebateCalcDateType::RequestedReceiptDate)
        {
            retDate = _salesLine.ReceiptDateRequested;
        }
        else if (this.RebateCalcDateType == PdsRebateCalcDateType::RequestedShipDate)
        {
            retDate = _salesLine.ShippingDateRequested;
        }

        return retDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tamCheckValidDateBillBack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed date is valid for the bill back rebate agreement.
    /// </summary>
    /// <param name="_date">
    /// The <c>date</c> that should be validated against the bill back rebate agreement definition.
    /// </param>
    /// <returns>
    /// true if the passed date is valid; otherwise, false.
    /// </returns>
    public boolean tamCheckValidDateBillBack(date _date)
    {
        TAMTradePromotion       tamTradePromotion;
        TAMMerchandisingEvent   tamMerchandisingEvent;
        date                    validFrom;
        date                    validTo;
        boolean ret = true;

        if (this.tamMerchandisingEventID)
        {
            tamMerchandisingEvent = TAMMerchandisingEvent::find(this.tamMerchandisingEventID);
            tamTradePromotion = TAMTradePromotion::findByPromoID(tamMerchandisingEvent.PromotionID);

            if (this.RebateCalcDateType == PdsRebateCalcDateType::RequestedReceiptDate
                && tamTradePromotion.ShipmentStartDate
                && tamTradePromotion.ShipmentEndDate)
            {
                validFrom = tamTradePromotion.ShipmentStartDate;
                validTo = tamTradePromotion.ShipmentEndDate;
            }
            else if (this.RebateCalcDateType == PdsRebateCalcDateType::RequestedShipDate
                && tamTradePromotion.RequestedShipmentStartDate
                && tamTradePromotion.RequestedShipmentEndDate)
            {
                validFrom = tamTradePromotion.RequestedShipmentStartDate;
                validTo = tamTradePromotion.RequestedShipmentEndDate;
            }
            else
            {
                validFrom = this.ValidFrom;
                validTo = this.ValidTo;
            }

            if (validFrom
                && validTo)
            {
                if (validFrom > _date
                    || validTo < _date)
                {
                    ret = false;
                }
            }
            else if (validFrom)
            {
                if (validFrom > _date)
                {
                    ret = false;
                }
            }
            else if (validTo)
            {
                if (validTo < _date)
                {
                    ret = false;
                }
            }
        }
        else
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PdsRebateAgreement</c> record.
    /// </summary>
    /// <param name="_invalidate">
    /// true if the record should be invalided; otherwise, false.
    /// </param>
    public void update(boolean _invalidate = true)
    {
        PdsRebateAgreementLine pdsRebateAgreementLine;

        if (this.checkRelatedRebateTransExist()
            && this.PdsRebateProgramType != PdsRebateProgramType::BillBack
            && this.isValidated())
        {
            throw error("@PDS1407");
        }
        else
        {
            if (_invalidate &&
                this.orig().isValidated())
            {
                this.invalidateRebateAgreement();
                info("@PDS1408");
            }

            this.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
        }

        if (this.orig().RebateCurrency != this.RebateCurrency
          || this.orig().PdsRebateUnit != this.PdsRebateUnit)
        {
            pdsRebateAgreementLine.skipDataMethods(true);
            update_recordSet pdsRebateAgreementLine
            setting Currency   = this.RebateCurrency,
                    RebateUnit = this.PdsRebateUnit
            where pdsRebateAgreementLine.RebateAgreementRefRecId == this.RecId
                && (pdsRebateAgreementLine.Currency   != this.RebateCurrency
                 || pdsRebateAgreementLine.RebateUnit != this.PdsRebateUnit);
            pdsRebateAgreementLine.skipDataMethods(false);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates changes to a field in the <c>PdsRebateAgreement</c> table.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name to Validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field to validate; optional.
    /// </param>
    /// <returns>
    /// true if the value in the field change is valid; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(PdsRebateAgreement, PdsRebateMinAmt):
                    if (this.checkPdsRebateMinAmt())
                    {
                        ret = checkFailed("@SYS134947");
                    }
                    break;

                case fieldStr(PdsRebateAgreement, PdsRebateMinQty):
                    if (this.checkPdsRebateMinQty())
                    {
                        ret = checkFailed("@SYS134947");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPdsRebateMinAmt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks condition for the value in the field <c>PdsRebateMinAmt</c> in the <c>PdsRebateAgreement</c> table.
    /// </summary>
    /// <returns>
    /// true if the value in the field change is valid; otherwise, false.
    /// </returns>
    protected boolean checkPdsRebateMinAmt()
    {
        return this.PdsRebateMinAmt < 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPdsRebateMinQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks condition for the value in the field <c>PdsRebateMinQty</c> in the <c>PdsRebateAgreement</c> table.
    /// </summary>
    /// <returns>
    /// true if the value in the field change is valid; otherwise, false.
    /// </returns>
    protected boolean checkPdsRebateMinQty()
    {
        return this.PdsRebateMinQty < 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret
            && !this.PdsCustRebateRelation
            && this.PdsCustRebateCode != TableGroupAll::All)
        {
            ret = checkFailed("@PRO37");
        }

        if (ret
            && !this.PdsItemRebateRelation
            && this.PdsItemRebateCode != PdsRebateItemCode::All
            && this.PdsItemRebateCode != PdsRebateItemCode::Selection
            )
        {
            ret = checkFailed("@PRO38");
        }

        if (ret
            && !this.checkPdsRebatePaymentType())
        {
            ret = false;
        }

        RebateQuantityCheckRequirementContract contract = RebateQuantityCheckRequirementContract::constructWithVariables(this.PdsRebateMinAmt,
                                                                                                                         this.PdsRebateMinQty,
                                                                                                                         this.PdsRebateUnit,
                                                                                                                         this.RebateCurrency,
                                                                                                                         '',
                                                                                                                         '');

        if (ret
            && !this.checkRebateRequirement(contract)
            )
        {
            ret = false;
        }

        if (ret
            && this.mustApproveRebates())
        {
            ret = checkFailed("@PRO1526");
        }

        if (ret)
        {
            if (
                this.PdsItemRebateCode == PdsRebateItemCode::Table
                && !PdsGlobal::pdsIsCWItem(this.PdsItemRebateRelation)
                && this.PdsUnitType == PdsUnitType::CWUnit)
            {
                ret = checkFailed("@PDS1048");
            }
        }

        if (ret)
        {
            if (this.PdsCumulateSalesBy == PdsCumulationPeriod::CustomizedPeriod
                && !this.RebateCustomizedPeriodType)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldId2pname(tableNum(PdsRebateAgreement), fieldNum(PdsRebateAgreement, RebateCustomizedPeriodType))));
            }
        }

        if (ret)
        {
            if (this.validateRebateType())
            {
                ret = checkFailed("@MCR40143");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustApproveRebates</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether rebates need to be approved.
    /// </summary>
    /// <returns>
    ///     true if approval needed; otherwise, false.
    /// </returns>
    protected boolean mustApproveRebates()
    {
        return (this.PdsCumulateSalesBy != PdsCumulationPeriod::Invoice
                && this.PdsApprovalRequired == NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRebateType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates rebate program type.
    /// </summary>
    /// <returns>
    ///     true if rebate type is valid; otherwise, false.
    /// </returns>
    protected boolean validateRebateType()
    {
        return (this.PdsRebateProgramType == PdsRebateProgramType::BillBack
                && PdsRebate::find(this.PdsRebateType).PdsRebateProgramType != PdsRebateProgramType::BillBack);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId _recId)
    {
        date fromDate = dateNull();
        date toDate = dateMax();

        return _recId
            && (select firstonly validTimeState(fromDate, toDate) RecId from pdsRebateAgreement
                    where pdsRebateAgreement.RecId == _recId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsRebateAgreement find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        PdsRebateAgreement   pdsRebateAgreement;
        date fromDate = dateNull();
        date toDate = dateMax();

        pdsRebateAgreement.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly validTimeState(fromDate, toDate) pdsRebateAgreement
                where pdsRebateAgreement.RecId == _recId;
        }

        return pdsRebateAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRebateAgreementId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>PdsRebateAgreement</c> record based on the passed <c>RebateAgreementId</c>.
    /// </summary>
    /// <param name="_rebateAgreementId">
    /// The Id of the rebate agreement to find.
    /// </param>
    /// <param name="_update">
    /// A boolean that determines whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>PdsRebateAgreement</c> record found; otherwise, an empty buffer.
    /// </returns>
    public static PdsRebateAgreement findRebateAgreementId(
        PdsRebateAgreementId    _rebateAgreementId,
        boolean                 _update = false)
    {
        PdsRebateAgreement   pdsRebateAgreement;
        date fromDate = dateNull();
        date toDate = dateMax();

        if (_rebateAgreementId)
        {
            pdsRebateAgreement.selectForUpdate(_update);

            select firstonly validTimeState(fromDate, toDate) pdsRebateAgreement
                where pdsRebateAgreement.RebateAgreementId == _rebateAgreementId;
        }

        return pdsRebateAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findMerchEventID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>PdsRebateAgreement</c> record based on the passed <c>MCRMerchandisingEventID</c>.
    /// </summary>
    /// <param name="_mcrMerchandisingEventID">
    /// The Id of the merchandising event to find.
    /// </param>
    /// <param name="_update">
    /// A boolean that determines whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>PdsRebateAgreement</c> record found; otherwise, an empty buffer.
    /// </returns>
    public static PdsRebateAgreement findMerchEventID(MCRMerchandisingEventID   _mcrMerchandisingEventID,
                                                        boolean                 _update = false)
    {
        PdsRebateAgreement   pdsRebateAgreement;

        if (_mcrMerchandisingEventID)
        {
            pdsRebateAgreement.selectForUpdate(_update);
            select firstonly pdsRebateAgreement
                where pdsRebateAgreement.tamMerchandisingEventID == _mcrMerchandisingEventID;
        }
        return pdsRebateAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the workflow status for an approval status.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>PdsRebateAgreement</c> record for which to set the workflow status.
    /// </param>
    /// <param name="_approvalStatus">
    /// The workflow status to set.
    /// </param>
    public static void setWorkflowStatus(RecId _recId, TAMCustRebateApprovalStatus _approvalStatus)
    {
        PdsRebateAgreement pdsRebateAgreement = PdsRebateAgreement::find(_recId, true);

        ttsbegin;
        pdsRebateAgreement.tamCustRebateApprovalStatus = _approvalStatus;
        pdsRebateAgreement.update(false);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateAgreementId</Name>
				<Source><![CDATA[
    private PdsRebateAgreementId generateAgreementId()
    {
        NumberSeq       numberSeq = NumberSeq::newGetNum(PdsRebateParameters::numRefPdsRebateAgreementId(), true);

        PdsRebateAgreementId rebateAgreementId = numberSeq.num();

        return rebateAgreementId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertRebateValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts a rebate value from one currency to another currency.
    /// </summary>
    /// <param name = "_rebateValue">
    /// A rebate value to convert.
    /// </param>
    /// <param name = "_rebateAmountType">
    /// The type of the rebate value
    /// </param>
    /// <param name = "_fromCurrencyCode">
    /// A currency to convert from.
    /// </param>
    /// <param name = "_toCurrencyCode">
    /// A currency to convert to.
    /// </param>
    /// <returns>
    /// The converted rebate value.
    /// </returns>
    static public PdsRebateValue convertRebateValue(PdsRebateValue      _rebateValue, 
                                                    PdsRebateAmtType    _rebateAmountType, 
                                                    CurrencyCode        _fromCurrencyCode, 
                                                    CurrencyCode        _toCurrencyCode)
    {
        PdsRebateValue rebateValue = _rebateValue;

        switch (_rebateAmountType)
        {
            case PdsRebateAmtType::AmountPerUnit :
                rebateValue = ExchangeRateHelper::curPrice2CurPrice(_rebateValue, _fromCurrencyCode, _toCurrencyCode);
                break;

            case PdsRebateAmtType::FixedAmount:
                rebateValue = CurrencyExchangeHelper::curAmount2CurAmount(_rebateValue, _fromCurrencyCode, _toCurrencyCode);
                break;
        }

        return rebateValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsRebate</ConfigurationKey>
	<DeveloperDocumentation>@PDS1094</DeveloperDocumentation>
	<FormRef>PdsRebateAgreements</FormRef>
	<Label>@PRO1319</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>PdsRebateType</TitleField1>
	<TitleField2>PdsPaymtType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PdsRebateAgreementSeqIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>RebateAgreementIdIdx</ReplacementKey>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateProgramType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsPaymtType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TAMCustRebateApprovalStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateProgramType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsPaymtType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Accounts</Name>
			<Label>@SYS11800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Approval</Name>
			<Label>@SYS2453</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsApprovalRequired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Breaks</Name>
			<Label>@MCR40136</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateLineBreakType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Cumulate</Name>
			<Label>@PRO1294</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCumulateSalesBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateCustomizedPeriodType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@PDS1409</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RebateGenericCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@PDS1050</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCustRebateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCustRebateRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateProgramType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsItemRebateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsItemRebateRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Notes</Name>
			<Label>@SYS70989</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateTakenFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCumulateSalesBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsPaymtType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateTakenFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rebate</Name>
			<Label>@PRO39</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateMinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateMinAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Search</Name>
			<Label>@SYS60181</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>pdsFindNext</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TAMBillBack</Name>
			<Label>@MCR25517</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TAMMerchandisingEventID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TAMVendPayTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TAMPaymentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Taxes</Name>
			<Label>@SYS333961</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsTaxable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Unit</Name>
			<Label>@SYS40864</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsRebateUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsUnitType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateUOMOption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Validation</Name>
			<Label>@PDS1411</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Validated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Verifier</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Workflow</Name>
			<Label>@SYS103643</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TAMCustRebateApprovalStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Date</Name>
			<Label>@SYS7402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateCalcDateType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTaxable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS55140</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@PDS1901</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Note</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@PDS1903</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsApprovalRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@PRO1328</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsCumulateSalesBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsCumulationPeriod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsCustRebateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCustRebateCode</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsCustRebateRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCustRebateRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>pdsFindNext</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS15494</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsItemRebateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateItemCode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsItemRebateRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsItemRebateRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsPaymtType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>PdsPaymtType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsRebateLineBreakType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateLineBreakType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsRebateMinAmt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateMinAmt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PdsRebateMinQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsRebateProgramType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateProgramType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsRebateTakenFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateTakenFrom</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsRebateType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsRebateUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsUnitType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>PdsUnitType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RebateCalcDateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateCalcDateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RebateCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RebateCustomizedPeriodType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateCustomizedPeriodType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RebateGenericCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateGenericCurrency</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RebateUOMOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsRebateUOMOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TAMCustRebateApprovalStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TAMCustRebateApprovalStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TAMMerchandisingEventID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>TAMPromotionsManagement</ConfigurationKey>
			<ExtendedDataType>MCRMerchandisingEventID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TAMPaymentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TAMPaymentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TAMVendPayTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>TAMPromotionsManagement</ConfigurationKey>
			<ExtendedDataType>TAMVendPayTo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Validated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateValidated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
			<Label>@SYS35856</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
			<Label>@PDS805</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Verifier</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateVerifier</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RebateAgreementId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateAgreementId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PdsRebateAgreementSeqIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsRebateType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCustRebateCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCustRebateRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsItemRebateCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsItemRebateRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsRebateUnit</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsUnitType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RebateCurrency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TAMMerchandisingEventID</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RebateAgreementIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PdsCustRebateCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsRebateProgramType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCustRebateRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsItemRebateCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsItemRebateRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TamMerchandisingEventIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TAMMerchandisingEventID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Validated</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Verifier</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsRebateProgramType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RebateAgreementIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RebateAgreementId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RebateCurrency</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>RebateCurrency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustomizedPeriodType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjPeriodTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RebateCustomizedPeriodType</Name>
					<SourceEDT>PdsRebateCustomizedPeriodType</SourceEDT>
					<Field>RebateCustomizedPeriodType</Field>
					<RelatedField>PeriodId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsCustRebateCode</Name>
					<Field>PdsCustRebateCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsCustRebateRelation</Name>
					<Field>PdsCustRebateRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsItemRebateCode</Name>
					<Field>PdsItemRebateCode</Field>
					<ValueStr>PdsRebateItemCode::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsItemRebateRelation</Name>
					<Field>PdsItemRebateRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsItemRebateCode</Name>
					<Field>PdsItemRebateCode</Field>
					<ValueStr>PdsRebateItemCode::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombinationDefault</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_RebateAgreementDimension</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::Freight</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsCustRebateCode</Name>
					<Field>PdsCustRebateCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsCustRebateRelation</Name>
					<Field>PdsCustRebateRelation</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombinationOffset</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_RebateAgreementOffsetDimension</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsCustomerTMAGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PdsRebateProgramTMATable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsCustRebateRelation</Name>
					<Field>PdsCustRebateRelation</Field>
					<RelatedField>PdsRebateProgramTMAGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsCustRebateCode</Name>
					<Field>PdsCustRebateCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::TMA</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsCustRebateGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsCustRebateGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::Rebate</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsCustRebateRelation</Name>
					<Field>PdsCustRebateRelation</Field>
					<RelatedField>PdsCustRebateGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsCustRebateCode</Name>
					<Field>PdsCustRebateCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsItemRebateGroupFreight</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PdsFreightGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::Freight</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsItemRebateCode</Name>
					<Field>PdsItemRebateCode</Field>
					<ValueStr>PdsRebateItemCode::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsItemRebateRelation</Name>
					<Field>PdsItemRebateRelation</Field>
					<RelatedField>PdsFreightAllocationCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsItemRebateGroupRebate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsItemRebateGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RebateItemRebateGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PdsRebateAgreement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::Rebate</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsItemRebateCode</Name>
					<Field>PdsItemRebateCode</Field>
					<ValueStr>PdsRebateItemCode::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsItemRebateRelation</Name>
					<Field>PdsItemRebateRelation</Field>
					<RelatedField>PdsItemRebateGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsItemRebateGroupTMA</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PdsItemRebateGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TMAItemRebateGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PdsRebateAgreement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsItemRebateRelation</Name>
					<Field>PdsItemRebateRelation</Field>
					<RelatedField>PdsItemRebateGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsRebateProgramType</Name>
					<Field>PdsRebateProgramType</Field>
					<ValueStr>PdsRebateProgramType::TMA</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PdsItemRebateCode</Name>
					<Field>PdsItemRebateCode</Field>
					<ValueStr>PdsRebateItemCode::GroupId</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsRebate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsRebate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsRebateType</Name>
					<Field>PdsRebateType</Field>
					<RelatedField>PdsRebateType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RebateUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsRebateUnit</Name>
					<Field>PdsRebateUnit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TAMMerchandisingEvent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TAMMerchandisingEvent</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TAMMerchandisingEventID</Name>
					<SourceEDT>MCRMerchandisingEventID</SourceEDT>
					<Field>TAMMerchandisingEventID</Field>
					<RelatedField>MerchandisingEventID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>MerchID</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TAMVendPayTo</Name>
					<SourceEDT>TAMVendPayTo</SourceEDT>
					<Field>TAMVendPayTo</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Verifier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Verifier</Name>
					<Field>Verifier</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>