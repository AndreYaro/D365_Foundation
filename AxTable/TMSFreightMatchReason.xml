<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFreightMatchReason</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSFreightMatchReason extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        if (!this.PayAmount && !this.LedgerAccount)
        {
            throw error("@TRX1253");
        }

        if (this.PayAmount && this.LedgerAccount)
        {
            throw error(strFmt("@TRX:ErrorMesageFieldCannotBeSetIfOtherFieldSet", fieldPName(TMSFreightMatchReason, LedgerAccount), fieldPName(TMSFreightMatchReason, PayAmount)));
        }

        if (!this.OffAcctLedgerDimension)
        {
            throw error("@TRX1716");
        }

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSFreightMatchReason</c> record exists.
    /// </summary>
    /// <param name="_tmsFreightReasonCode">
    /// Freight reason code of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(TMSFreightReasonCode _tmsFreightReasonCode)
    {
        return (_tmsFreightReasonCode) &&
               (select firstonly TMSFreightMatchReason
                    where tmsFreightMatchReason.FreightReasonCode == _tmsFreightReasonCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSFreightMatchReason</c> record with given parameters.
    /// </summary>
    /// <param name="_tmsFreightReasonCode">
    /// Freight reason code of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSFreightMatchReason find(TMSFreightReasonCode _tmsFreightReasonCode,
                                             boolean              _forupdate = false)
    {
        TMSFreightMatchReason    tmsFreightMatchReason;

        if (_tmsFreightReasonCode)
        {
            tmsFreightMatchReason.selectForUpdate(_forupdate);

            select firstonly tmsFreightMatchReason
                where tmsFreightMatchReason.FreightReasonCode == _tmsFreightReasonCode;
        }

        return tmsFreightMatchReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupLedgerAccounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs form lookup for ledger accounts.
    /// </summary>
    /// <param name="_ctrl">
    /// Form control that lookup belongs to.
    /// </param>
    public static void lookupLedgerAccounts(FormControl _ctrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        Ledger                  ledger;
        LedgerChartOfAccounts   ledgerCOA;

        ledger      = ledger::findByLegalEntity(CompanyInfo::current());
        ledgerCOA   = LedgerChartOfAccounts::find(ledger.ChartOfAccounts);

        sysTableLookup          = SysTableLookup::newParameters(tablenum(MainAccount), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tablenum(MainAccount));

        sysTableLookup.addLookupfield(fieldnum(MainAccount, MainAccountId));
        sysTableLookup.addLookupfield(fieldnum(MainAccount, Name));
        queryBuildDataSource.addRange(fieldnum(MainAccount, LedgerChartOfAccounts)).value(int642str(ledgerCOA.RecId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs form lookup on <c>TMSFreightMatchReason</c> for reason codes.
    /// </summary>
    /// <param name="_ctrl">
    /// Form control that lookup belongs to.
    /// </param>
    /// <param name="_freightBill">
    /// Boolean value indicating that amount is not paid to the vendor.
    /// </param>
    public static void lookupReasonCode(FormControl _ctrl, boolean _freightBill    = false)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup          = SysTableLookup::newParameters(tablenum(TMSFreightMatchReason), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tablenum(TMSFreightMatchReason));

        if (_freightBill)
        {
            queryBuildDataSource.addRange(fieldNum(TMSFreightMatchReason, PayAmount)).value('0');
        }

        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, FreightReasonCode));
        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, Description));
        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, LedgerAccount));
        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, OffAcctLedgerDimension));
        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, PayAmount));
        sysTableLookup.addLookupfield(fieldnum(TMSFreightMatchReason, OverrideAccts));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1911</DeveloperDocumentation>
	<FormRef>TMSFreightMatchReason</FormRef>
	<Label>@TRX997</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FreightReasonCode</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ReasonCode</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>ReasonCode</PrimaryIndex>
	<ReplacementKey>ReasonCode</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffAcctLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideAccts</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffAcctLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideAccts</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightReasonCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSFreightReasonCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MainAccountNum</ExtendedDataType>
			<Label>@TRX1641</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffAcctLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSVendOffAcctLedgerDimension</ExtendedDataType>
			<Label>@TRX1642</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideAccts</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSOverrideAccts</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PayAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPayAmount</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReasonCode</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FreightReasonCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueCombinationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffAcctLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffAcctLedgerDimension</Name>
					<Field>OffAcctLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MainAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MainAccount</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerAccount</Name>
					<Field>LedgerAccount</Field>
					<RelatedField>MainAccountId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>