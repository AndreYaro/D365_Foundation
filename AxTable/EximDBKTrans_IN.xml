<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximDBKTrans_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximDBKTrans_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existCustTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether custTrans record exists for given custTransOpen record.
    /// </summary>
    /// <param name="_custTransOpen">CustTransOpen record</param>
    /// <returns>true if the record in custTrans is found, otherwise false</returns>
    public static boolean existCustTransaction(CustTransOpen _custTransOpen)
    {
        CustTrans       custTrans;
        EximDBKTrans_IN dbkTrans;

        if (_custTransOpen)
        {
            select firstonly RecId
                from custTrans
                where custTrans.RecId == _custTransOpen.RefRecId
            join RecId
                from dbkTrans
                where dbkTrans.Voucher == custTrans.Voucher
                   && dbkTrans.Status  == EximDBKStatus_IN::Drawback;
        }

        return dbkTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximDBKTrans_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximDBKTrans_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximDBKTrans_IN find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximDBKTrans_IN    eximDBKTrans;

        eximDBKTrans.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximDBKTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximDBKTrans
            where eximDBKTrans.RecId == _recId;

        return eximDBKTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62432</DeveloperDocumentation>
	<Label>@GLS61970</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Voucher</TitleField1>
	<TitleField2>Status</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SchemesTableVoucherIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchemesTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DutyDrawback</Name>
			<Label>@GLS61946</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchemesTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OtherInformation</Name>
			<Label>@SYS114375</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DrawbackLetterNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrawbackLetterNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EximDBKLetterNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SchemesTableRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximDBKSchemesTableRecId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EximDBKStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Text</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EximTxt_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SchemesTableVoucherIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SchemesTableRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LedgerTransactionVoucher_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountingDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
					<MapFieldTo>Voucher</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximDBKSchemesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximDBKSchemesTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximDBKSchemesTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximDBKSchemesTable_IN_EximDBKTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SchemesTableRecId</Name>
					<Field>SchemesTableRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>