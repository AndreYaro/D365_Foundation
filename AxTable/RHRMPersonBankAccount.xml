<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMPersonBankAccount</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RHRMPersonBankAccount extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bankAccountOpenedIn_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bank account id.
    /// </summary>
    /// <returns>
    /// A bank account id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display BankAccountOpenedIn_RU bankAccountOpenedIn_RU()
    {
        return this.BankAccountMap::bankAccountOpenedIn_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAccountValidation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bank account validator.
    /// </summary>
    /// <returns>
    /// A bank account validation class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Bank bankAccountValidation()
    {
        return this.BankAccountMap::bankAccountValidation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankBIC_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bank BIC.
    /// </summary>
    /// <returns>
    /// A bank BIC.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display BankBIC_RU bankBIC_RU()
    {
        return this.BankAccountMap::bankBIC_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankIsBranch_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if bank is a branch.
    /// </summary>
    /// <returns>
    /// True if bank is a branch, otherwise false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean bankIsBranch_RU()
    {
        return this.BankAccountMap::bankIsBranch_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankName_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bank name.
    /// </summary>
    /// <returns>
    /// A bank name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display BankName_RU bankName_RU()
    {
        return this.BankAccountMap::bankName_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankShortAddressing_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bank location.
    /// </summary>
    /// <returns>
    /// A bank location.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public BankShortAddressing_RU bankShortAddressing_RU()
    {
        return this.BankAccountMap::bankShortAddressing_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>baseBankName_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the base bank name.
    /// </summary>
    /// <returns>
    /// The base bank name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Description baseBankName_RU()
    {
        return this.BankAccountMap::baseBankName_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>baseBankShortAddressing_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets base bank location.
    /// </summary>
    /// <returns>
    /// A base bank location.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public BankShortAddressing_RU baseBankShortAddressing_RU()
    {
        return this.BankAccountMap::baseBankShortAddressing_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets cross rate.
    /// </summary>
    /// <param name="set">
    /// An indicator, if true, cross rate will be set.
    /// </param>
    /// <param name="_exchRate">
    /// An exchange rate to set.
    /// </param>
    /// <returns>
    /// The exchange rate.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public edit CrossExchRate editExchRate(boolean set, CrossExchRate _exchRate)
    {
        if (set)
        {
            this.ExchRate = CurrencyEuroDenomination::prepareExchangeRateForStorage_Static(_exchRate, ExchangeRateDisplayFactor::One);
        }
        else
        {
            _exchRate = CurrencyEuroDenomination::displayStoredExchangeRate_Static(this.ExchRate, ExchangeRateDisplayFactor::One);
        }

        return _exchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBankGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes bank account from bank group.
    /// </summary>
    /// <param name="_bankGroup">
    /// The bank group.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromBankGroup(BankGroup _bankGroup)
    {
        this.BankAccountMap::initFromBankGroup(_bankGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.BankAccountMap::initValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        container bankMapDependencies = this.BankAccountMap::bankAccountMappingDefaultingDependencies();

        return bankMapDependencies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        this.BankAccountMap::defaultFieldOnMap(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles field modifications rules.
    /// </summary>
    /// <param name="_fieldId">
    /// A modified field id.
    /// </param>
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        this.BankAccountMap::modifiedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
        RPaySheetTrans                  rpaySheetTrans;
        RHRMEmplTable                   emplTable;
        RPayEmplStandardDeductionTable  standardDeductionTable;

        ret = super();

        if (ret)
        {
            select firstFast firstOnly RecId from rpaySheetTrans
                where rpaySheetTrans.EmplBankAccountId == this.AccountID
                join RecId from emplTable
                    where emplTable.EmployeeId == rpaySheetTrans.Emplid
                       && emplTable.RHRMPersonTable == this.RHRMPersonTable;

            if (rpaySheetTrans.RecId)
            {
                ret = checkFailed(strFmt("@SYS128564", tableStr(RHRMPersonBankAccount), tableStr(RPaySheetTrans)));
            }
        }

        if (ret)
        {
            select firstFast firstOnly RecId from standardDeductionTable
                where standardDeductionTable.BankTransAccountId == this.AccountID
                join RecId from emplTable
                    where emplTable.EmployeeId == standardDeductionTable.Emplid
                       && emplTable.RHRMPersonTable == this.RHRMPersonTable;

            if (standardDeductionTable.RecId)
            {
                ret = checkFailed(strFmt("@SYS128564", tableStr(RHRMPersonBankAccount), tableStr(RPayEmplStandardDeductionTable)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            ret = this.BankAccountMap::validateWrite();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBankAccountReference</Name>
				<Source><![CDATA[
    private static boolean checkBankAccountReference(RHRMEmplId            _emplId,
                                                     RHRMPersonBankAccountId _personBankAccountId,
                                                     CompanyId             _company = curext())
    {
        CompanyId   companyId;
        ;

        if (_personBankAccountId)
        {
            if (!_company)
            {
                companyId = curext();
            }
            else
            {
                companyId = _company;

                if (! xDataArea::exist(companyId))
                {
                    return checkFailed(strfmt("@SYS10666", companyId));
                }
            }

            changecompany(companyId)
            {
                if (!CustBankAccount::find(_emplId, _personBankAccountId))
                {
                    return checkFailed(strfmt("@SYS27061", _personBankAccountId));
                }
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    private static boolean exist(RHRMPersonTableRecId    _personRecId,
                                 RHRMPersonBankAccountId _personBankAccountId)
    {
        return  _personRecId && _personBankAccountId && (select firstonly RecId from RHRMPersonBankAccount
                                                       index hint AccountIdx
                                                       where RHRMPersonBankAccount.RHRMPersonTable == _personRecId &&
                                                             RHRMPersonBankAccount.AccountID       == _personBankAccountId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record.
    /// </summary>
    /// <param name="_personRecId">
    /// A person table rec id.
    /// </param>
    /// <param name="_accountId">
    /// A person bank account id.
    /// </param>
    /// <param name="_forUpdate">
    /// An indicator, if true record will be selected for update.
    /// </param>
    /// <returns>
    /// The found record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMPersonBankAccount find(RHRMPersonTableRecId    _personRecId,
                                             RHRMPersonBankAccountId _accountId = '',
                                             boolean               _forUpdate = false)
    {
        RHRMPersonBankAccount personBankAccount;

        if (_personRecId)
        {
            personBankAccount.selectForUpdate(_forUpdate);

            select firstonly personBankAccount
                index hint AccountIdx
                where personBankAccount.RHRMPersonTable == _personRecId &&
                     (personBankAccount.AccountID       == _accountId   || (_accountId ? false : true));
        }

        return personBankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEmplId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record.
    /// </summary>
    /// <param name="_emplId">
    /// An employee id.
    /// </param>
    /// <param name="_accountId">
    /// A bank account id.
    /// </param>
    /// <param name="_forUpdate">
    /// An indicator, if true record will be selected for update.
    /// </param>
    /// <returns>
    /// The found record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMPersonBankAccount findEmplId(RHRMEmplId              _emplId,
                                                   RHRMPersonBankAccountId _accountId = '',
                                                   boolean                 _forUpdate = false)
    {
        RHRMPersonBankAccount personBankAccount;
        RHRMEmplTable         emplTable;

        if (_emplId)
        {
            personBankAccount.selectForUpdate(_forUpdate);

            select firstonly personBankAccount
                index hint AccountIdx
                where (personBankAccount.AccountID       == _accountId   || (_accountId ? false : true))
                exists join emplTable
                    where emplTable.RHRMPersonTable == personBankAccount.RHRMPersonTable &&
                          emplTable.EmployeeId      == _emplId;
        }

        return personBankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBankAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows a lookup of person bank accounts on a form.
    /// </summary>
    /// <param name="_ctrl">
    /// A form string control to show lookup for.
    /// </param>
    /// <param name="_emplId">
    /// An employee id.
    /// </param>
    /// <param name="_company">
    /// A company id.
    /// </param>
    /// <exception cref="Exception::Error">
    /// Company does not exist.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupBankAccount(FormStringControl _ctrl,
                                                RHRMEmplId        _emplId,
                                                CompanyId         _company = curext())
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(RHRMPersonBankAccount), _ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    qbds;
        CompanyId               companyId;

        if (!_company)
        {
            companyId = curext();
        }
        else
        {
            companyId = _company;

            if (! xDataArea::exist(companyId))
            {
                throw error(strfmt("@SYS10666", companyId));
            }
        }

        changecompany(companyId)
        {
            sysTableLookup.addLookupfield(fieldnum(RHRMPersonBankAccount, AccountID), true);
            sysTableLookup.addLookupfield(fieldnum(RHRMPersonBankAccount, Name));
            sysTableLookup.addLookupfield(fieldnum(RHRMPersonBankAccount, BankGroupId));
            sysTableLookup.addLookupfield(fieldnum(RHRMPersonBankAccount, AccountNum));

            qbds = query.addDataSource(tablenum(RHRMPersonBankAccount));

            qbds = qbds.addDataSource(tableNum(RHRMEmplTable));
            qbds.addLink(fieldNum(RHRMPersonBankAccount, RHRMPersonTable), fieldNum(RHRMEmplTable, RHRMPersonTable));
            qbds.joinMode(JoinMode::ExistsJoin);
            qbds.addRange(fieldnum(RHRMEmplTable, EmployeeId)).value(queryValue(_emplId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    private static TxtNotExist txtNotExist()
    {
        return "@SYS9779";
    }

]]></Source>
			</Method>
			<Method>
				<Name>preventAddressClearOrEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method allows for <c>LogisticsLocationFormHandler</c> to determine if the address can be cleared or edited.
    /// </summary>
    /// <returns>
    /// true if the location is the same as the account's bank group location; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean preventAddressClearOrEdit()
    {
        return LogisticsLocationAppUtil::callerIsBankGroupLocation(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayHRMCommon</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6107</DeveloperDocumentation>
	<FormRef>RHRMPersonBankAccounts</FormRef>
	<Label>@RUP18</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>AccountID</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>AccountIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>AccountIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPerson</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Bank</Name>
			<Label>@SYS22173</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankBIC_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCorrAccount_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankAccountOpenedIn_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS21663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactPerson</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhoneLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CellularPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pager</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TeleFax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telex</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCodeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SWIFTNo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS80404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankBIC_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCorrAccount_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankAccountOpenedIn_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplPaymentTextCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MsgToBank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentShow</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplPaymentTextCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MsgToBank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editExchRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS26269</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankSortCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMPersonBankAccountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankCodeType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankCorrAccount_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCorrAccount_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankSortCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankSortCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CellularPhone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneMobile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPerson</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplPaymentTextCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymTextCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CrossExchRate</ExtendedDataType>
			<Label>@SYS4955</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExchRateRef</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRateRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MsgToBank</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankMsgToBank</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Pager</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Pager</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhoneLocal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneLocal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegistrationNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RHRMPersonTable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RHRMPersonTableRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SMS</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMS</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SWIFTNo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SWIFTNo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TeleFax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telex</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Telex</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>URL</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RHRMPersonTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BankAccountMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountID</MapField>
					<MapFieldTo>AccountID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankGroupId</MapField>
					<MapFieldTo>BankGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RegistrationNum</MapField>
					<MapFieldTo>RegistrationNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Phone</MapField>
					<MapFieldTo>Phone</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TeleFax</MapField>
					<MapFieldTo>TeleFax</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ContactPerson</MapField>
					<MapFieldTo>ContactPerson</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Email</MapField>
					<MapFieldTo>Email</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>URL</MapField>
					<MapFieldTo>URL</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Telex</MapField>
					<MapFieldTo>Telex</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PhoneLocal</MapField>
					<MapFieldTo>PhoneLocal</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CellularPhone</MapField>
					<MapFieldTo>CellularPhone</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankContractAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendPaymTextCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SWIFTNo</MapField>
					<MapFieldTo>SWIFTNo</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MsgToBank</MapField>
					<MapFieldTo>MsgToBank</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
					<MapFieldTo>ExchRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRateRef</MapField>
					<MapFieldTo>ExchRateRef</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>GiroContractAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Pager</MapField>
					<MapFieldTo>Pager</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SMS</MapField>
					<MapFieldTo>SMS</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankCodeType</MapField>
					<MapFieldTo>BankCodeType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>isBankPrenote</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PrenoteResponseDays</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankIBAN</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankCIN</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ForeignBank_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ForeignAccount_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ForeignSWIFT_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CorrAccount_W</MapField>
					<MapFieldTo>BankCorrAccount_RU</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankGroupId</Name>
					<SourceEDT>BankGroupId</SourceEDT>
					<Field>BankGroupId</Field>
					<RelatedField>BankGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BankGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Location_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RHRMPersonBankAccount</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMPersonBankAccount</Name>
			<EntityRelationshipRole>@SYS123434</EntityRelationshipRole>
			<RelatedTable>RHRMPersonBankAccount</RelatedTable>
			<RelatedTableRole>RHRMPersonBankAccount</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>RHRMPersonBankAccount</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RHRMPersonTable</Name>
					<Field>RHRMPersonTable</Field>
					<RelatedField>RHRMPersonTable</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountID</Name>
					<Field>AccountID</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMPersonTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMPersonTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RHRMPersonTable</Name>
					<Field>RHRMPersonTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>