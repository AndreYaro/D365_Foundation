<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentIndicator_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetImpairmentIndicator_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete the record, and also delete the attachements related to this record
    /// </summary>
    public void delete()
    {
        DocuRef     docuRef;

        ttsBegin;

        super();

        delete_from docuRef
            where docuRef.RefCompanyId  == this.DataAreaId
                && docuRef.RefTableId == this.TableId
                && docuRef.RefRecId == this.RecId;
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.ModifyDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLastRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Judge if the record of <C>AssetImpairmentIndicator_JP</C> is the latest record.
    /// </summary>
    /// <returns>
    /// Returns true if the record the latest modified record;
    /// else, returns false.
    /// </returns>
    /// <remarks>
    /// If the record is not finalized, the method returns true.
    /// Only the records with the same assetId and bookId are compared.
    /// </remarks>
    public boolean isLastRecord()
    {
        AssetImpairmentIndicator_JP impairmentIndicator;

        if (this.IsFinalized == NoYes::No || !this.LineNum)
        {
            return true;
        }

        select firstOnly RecId from impairmentIndicator
            where impairmentIndicator.AssetId == this.AssetId
                && impairmentIndicator.BookId == this.BookId
                && impairmentIndicator.IsFinalized == NoYes::Yes
                && (impairmentIndicator.ModifyDate > this.ModifyDate
                    ||(impairmentIndicator.ModifyDate == this.ModifyDate
                        && impairmentIndicator.LineNum > this.LineNum))
                && impairmentIndicator.RecId != this.RecId;

        if (impairmentIndicator.RecId)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean     ret;
        container   con;

        if (this.IsFinalized && !this.LineNum)
        {
            this.LineNum = AssetImpairmentIndicator_JP::lastLineNum(this.AssetId, this.BookId) + 1;
        }

        ret = super();

        if (ret)
        {
            if (!this.isLastRecord())
            {
                ret = checkFailed(strfmt("@SYS4005168",
                    this.AssetId,
                    this.BookId,
                    this.ModifyDate));
            }

            con = AssetImpairmentIndicator_JP::getIndicators(this.AssetId, this.BookId, dateMax(), this.RecId);

            if (ret
                && this.IsFinalized
                && (this.RecoverableAmount == 0 || this.RecoverableAmount == conPeek(con, 1))
                && (this.UndiscountedCashFlow == 0 || this.UndiscountedCashFlow == conPeek(con, 2)))
            {
                ret = checkFailed(strfmt("@SYS4005169",
                    this.AssetId,
                    this.BookId,
                    this.ModifyDate));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a <c>AssetImpairmentIndicator_JP</c> record by RecId.
    /// </summary>
    /// <param name="_recId">
    /// The RecId to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A <c>AssetImpairmentIndicator_JP</c> record.
    /// </returns>
    public static AssetImpairmentIndicator_JP find(
        RefRecId                _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetImpairmentIndicator_JP      indicator;

        if (_recId)
        {
            indicator.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                indicator.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                indicator
            where
                indicator.RecId == _recId;
        }

        return indicator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIndicators</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the container containing the value of impairment indicators.
    /// </summary>
    /// <param name="_assetId">
    /// Id of asset.
    /// </param>
    /// <param name="_bookId">
    /// Id of value model.
    /// </param>
    /// <param name="_toDate">
    /// To date of date interval to filt the modify date the impairment indicators.
    /// </param>
    /// <param name="_recId">
    /// The RecId of record which is not counted in.
    /// </param>
    /// <returns>
    /// Container contains the value of indicators, in the format[recoverable amount, undiscounted cash flow,
    /// the recid to get recoverable amount, the recid to get undiscounted cash flow].
    /// </returns>
    public static container getIndicators(
        AssetId _assetId,
        AssetBookId _bookId,
        AssetTransDate _toDate = dateMax(),
        int64 _recId = 0)
    {
        AssetImpairmentIndicator_JP     indicator;
        AssetRecoverableAmount_JP       recoverableAmount;
        AssetUndiscountedCashFlow_JP    undiscountedCashFlow;
        RefRecId                        recovAmtRecId, undisCashFlowRecId;

        select firstOnly UndiscountedCashFlow, RecId, ModifyDate, LineNum from indicator
            order by ModifyDate desc, LineNum desc
            where  indicator.IsFinalized == NoYes::Yes
                && indicator.AssetId == _assetId
                && indicator.BookId == _bookId
                && indicator.ModifyDate <= _toDate
                && indicator.RecId != _recId
                && indicator.UndiscountedCashFlow != 0;
        undisCashFlowRecId      = indicator.RecId;
        undiscountedCashFlow    = indicator.UndiscountedCashFlow;

        select firstOnly RecoverableAmount, RecId, ModifyDate, LineNum from indicator
            order by ModifyDate desc, LineNum desc
            where  indicator.IsFinalized == NoYes::Yes
                && indicator.AssetId == _assetId
                && indicator.BookId == _bookId
                && indicator.ModifyDate <= _toDate
                && indicator.RecId != _recId
                && indicator.RecoverableAmount != 0;
        recovAmtRecId           = indicator.RecId;
        recoverableAmount       = indicator.RecoverableAmount;

        return [recoverableAmount, undiscountedCashFlow, recovAmtRecId, undisCashFlowRecId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIndicatorsAndLastUpdatedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the container containing the value of impairment indicators and the last updated dates.
    /// </summary>
    /// <param name="_assetId">
    /// Id of asset.
    /// </param>
    /// <param name="_bookId">
    /// Id of value model.
    /// </param>
    /// <param name="_toDate">
    /// To date of date interval to filt the modify date the impairment indicators.
    /// </param>
    /// <returns>
    /// Container contains the value of indicators, in the format
    /// [[recoverable amount, recoverable amount last updated date, the recid to get recoverable amount],
    ///  [undiscounted cash flow, undiscounted cash flow last updated date, the recid to get undiscounted cash flow]].
    /// </returns>
    public static container getIndicatorsAndLastUpdatedDate(
        AssetId _assetId,
        AssetBookId _bookId,
        AssetTransDate _toDate = dateMax())
    {
        AssetImpairmentIndicator_JP     indicator;
        AssetRecoverableAmount_JP       recoverableAmount;
        AssetUndiscountedCashFlow_JP    undiscountedCashFlow;
        AssetTransDate                  recoverableLastUpdate = dateNull();
        AssetTransDate                  undiscountedLastUpdate = dateNull();
        RefRecId                        recovAmtRecId, undisCashFlowRecId;

        select firstOnly UndiscountedCashFlow, RecId, ModifyDate, LineNum from indicator
            order by ModifyDate desc, LineNum desc
            where indicator.IsFinalized == NoYes::Yes
                && indicator.AssetId == _assetId
                && indicator.BookId == _bookId
                && indicator.ModifyDate <= _toDate
                && indicator.UndiscountedCashFlow != 0;
        undisCashFlowRecId      = indicator.RecId;
        undiscountedCashFlow    = indicator.UndiscountedCashFlow;
        undiscountedLastUpdate  = indicator.ModifyDate;

        select firstOnly RecoverableAmount, RecId, ModifyDate, LineNum from indicator
            order by ModifyDate desc, LineNum desc
            where indicator.IsFinalized == NoYes::Yes
                && indicator.AssetId == _assetId
                && indicator.BookId == _bookId
                && indicator.ModifyDate <= _toDate
                && indicator.RecoverableAmount != 0;
        recovAmtRecId           = indicator.RecId;
        recoverableAmount       = indicator.RecoverableAmount;
        recoverableLastUpdate   = indicator.ModifyDate;

        return [[recoverableAmount, recoverableLastUpdate, recovAmtRecId], [undiscountedCashFlow, undiscountedLastUpdate, undisCashFlowRecId]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>isResultLineBased</Name>
				<Source><![CDATA[
    /// <summary>
    /// Judge if there is <C>AssetImpairmentTestResultLine_JP</C> referring to the <C>AssetImpairmentIndicator_JP</C>
    /// </summary>
    /// <param name="indicator">
    /// Instance of <C>AssetImpairmentIndicator_JP</C>
    /// </param>
    /// <returns>
    /// Retturn rue if there is <C>AssetImpairmentTestResultLine_JP</C> referring to the indicator;
    /// else, Return false
    /// </returns>
    public static boolean isResultLineBased(AssetImpairmentIndicator_JP indicator)
    {
        boolean                                 ret;
        AssetImpairmentTestResultDocEntry_JP    resultLine;

        if (!indicator)
        {
            return false;
        }

        select firstOnly RecId from resultLine
            where resultLine.RecoverableAmountRef == indicator.RecId
                || resultLine.UndiscountedCashFlowRef == indicator.RecId;

        if (resultLine.RecId)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the biggest line number for specific asset id and asset book id.
    /// </summary>
    /// <param name="_assetId">
    /// Id of asset.
    /// </param>
    /// <param name="_bookId">
    /// Id of value model
    /// </param>
    /// <returns>
    /// Returns the biggest line number of specific asset id and asset book id.
    /// </returns>
    public static LineNum lastLineNum(AssetId _assetId, AssetBookId _bookId)
    {
        AssetImpairmentIndicator_JP    indicator;

        select maxOf(LineNum) from indicator
            where indicator.AssetId == _assetId
                && indicator.BookId == _bookId
                && indicator.IsFinalized == NoYes::Yes;

        return indicator.LineNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4005166</DeveloperDocumentation>
	<Label>@SYS4005165</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>BookId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>IndicatorIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>FixedAssets</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsFinalized</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModifyDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RecoverableAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UndiscountedCashFlow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsFinalized</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModifyDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RecoverableAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UndiscountedCashFlow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BookId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsFinalized</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetImpairmentIndicatorIsFinalized_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Level</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>AssetImpairmentLevel_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ModifyDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTransDate</ExtendedDataType>
			<Label>@SYS4005167</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RecoverableAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetRecoverableAmount_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UndiscountedCashFlow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetUndiscountedCashFlow_JP</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IndicatorIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IsFinalized</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BookId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AssetIdBookIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>