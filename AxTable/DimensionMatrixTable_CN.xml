<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionMatrixTable_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DimensionMatrixTable_CN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>DimensionMatrixTable_CN</c> table; if not, an
    ///    error message is displayed.
    /// </summary>
    /// <param name="_matrixId">
    ///    The dimension matrix ID of the <c>DimensionMatrixTable_CN</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(DimensionMatrixId_CN _matrixId)
    {
        boolean ret = true;

        if (!DimensionMatrixTable_CN::exist(_matrixId))
        {
            ret = checkFailed(strfmt(DimensionMatrixTable_CN::txtNotExist(), _matrixId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>DimensionMatrixTable_CN</c> table exists.
    /// </summary>
    /// <param name="_matrixId">
    ///    The dimension matrix ID of the <c>DimensionMatrixTable_CN</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(DimensionMatrixId_CN _matrixId)
    {
        return _matrixId
            && (select firstonly RecId from dimensionMatrixTable_CN
                    where dimensionMatrixTable_CN.MatrixId == _matrixId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>DimensionMatrixTable_CN</c> table.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the <c>DimensionMatrixTable_CN</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>DimensionMatrixTable_CN</c> table; otherwise, an empty record.
    /// </returns>
    public static DimensionMatrixTable_CN find(
        RecId   _recId,
        boolean _forupdate = false)
    {
        DimensionMatrixTable_CN dimensionMatrixTable_CN;

        if (_recId)
        {
            dimensionMatrixTable_CN.selectForUpdate(_forupdate);

            select firstonly dimensionMatrixTable_CN
                where dimensionMatrixTable_CN.RecId == _recId;
        }

        return dimensionMatrixTable_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDimensionMatrixId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>DimensionMatrixTable_CN</c> table.
    /// </summary>
    /// <param name="_matrixId">
    ///     The dimension matrix ID of the <c>DimensionMatrixTable_CN</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>DimensionMatrixTable_CN</c> table; otherwise, an empty record.
    /// </returns>
    public static DimensionMatrixTable_CN findByDimensionMatrixId(
        DimensionMatrixId_CN _matrixId,
        boolean              _forupdate = false)
    {
        DimensionMatrixTable_CN dimensionMatrixTable_CN;

        if (_matrixId)
        {
            dimensionMatrixTable_CN.selectForUpdate(_forupdate);

            select firstonly dimensionMatrixTable_CN
                where dimensionMatrixTable_CN.MatrixId == _matrixId;
        }

        return dimensionMatrixTable_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>DimensionMatrixTable_CN</c> table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@GLS223398";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>CN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64315</DeveloperDocumentation>
	<FormRef>dimensionmatrixSetupSRS_CN</FormRef>
	<Label>@GLS64321</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>MatrixId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>MatrixIdIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MatrixId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MatrixId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Focus</Name>
			<Label>@SYS83251</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Format</Name>
			<Label>@SYS666</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SignDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MatrixId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionAttribute</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DimensionAttributeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MatrixId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DimensionMatrixId_CN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SignDisplay</Name>
			<EnumType>AmountDisplaySign_CN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MatrixIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MatrixId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DimensionAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionAttribute</Name>
					<Field>DimensionAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>