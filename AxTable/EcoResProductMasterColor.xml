<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductMasterColor</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductMasterColor extends EcoResProductMasterDimensionValue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasDimensionValueForProductMaster</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether any dimension value record has been created for the specified product master and
    /// dimension attribute.
    /// </summary>
    /// <param name="_productMaster">
    /// The <c>EcoResProductRecId</c> reference to the product master.
    /// </param>
    /// <returns>
    /// true if a product dimension table value exists for the specified product; otherwise, false.
    /// </returns>
    public boolean hasDimensionValueForProductMaster(EcoResProductRecId _productMaster)
    {
        EcoResProductMasterColor    ecoResProductMasterColor;

        select firstonly RecId from ecoResProductMasterColor
            where ecoResProductMasterColor.ColorProductMaster == _productMaster;

        if (ecoResProductMasterColor.RecId)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsBegin;

        super();

        if (!EcoResProductMasterSkipVariantCreationScope::shouldSkipVariantCreation())
        {
            this.createVariantsFromDimensionValue(this.ColorProductMaster, this.ColorProductDimensionAttribute, this.Color);
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        EcoResProductMasterColor ecoResProductMasterColor_orig = this.orig();

        super();

        if (ecoResProductMasterColor_orig.RetailDisplayOrder != this.RetailDisplayOrder)
        {
            ttsbegin;
            EcoResProductVariantColor ecoResProductVariantColor;
            EcoResDistinctProductVariant ecoResDistinctProductVariant;

            update_recordset ecoResProductVariantColor
                        setting RetailDisplayOrder = this.RetailDisplayOrder
                    join ecoResDistinctProductVariant
                        where ecoResDistinctProductVariant.RecId == ecoResProductVariantColor.DistinctProductVariant
                            && ecoResDistinctProductVariant.ProductMaster == this.ColorProductMaster
                            && ecoResProductVariantColor.Color == this.Color;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProductMasterDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the dimension value record that was created for a specified product master and
    /// dimension attribute value.
    /// </summary>
    /// <param name="_productMaster">
    /// The <c>EcoResProductRecId</c> reference to the product master.
    /// </param>
    /// <param name="_productDimensionAttribute">
    ///    An ID of the <c>EcoResProductDimensionAttribute</c> table buffer.
    /// </param>
    /// <param name="_colorRecId">
    /// The reference to the product dimension value.
    /// </param>
    /// <returns>
    /// The product dimension table value for the specified product and dimension value.
    /// </returns>
    public EcoResProductMasterDimensionValueId lookupProductMasterDimensionValue(
        EcoResProductRecId  _productMaster,
        RefRecId            _productDimensionAttribute,
        RefRecId            _colorRecId )
    {
        RefRecId ret;

        if (_productMaster && _productDimensionAttribute && _colorRecId)
        {
            ret = (select firstonly ecoResProductMasterColor
                    where ecoResProductMasterColor.ColorProductMaster               == _productMaster
                       && ecoResProductMasterColor.ColorProductDimensionAttribute   == _productDimensionAttribute
                       && ecoResProductMasterColor.Color                            == _colorRecId
                    ).RecId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionValueAndRelations</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the product dimension value and relation fields on the buffer.
    /// </summary>
    /// <param name="_productMaster">
    ///    A reference to the product master.
    /// </param>
    /// <param name="_productDimensionAttribute">
    ///    An ID of the <c>EcoResProductDimensionAttribute</c> table buffer.
    /// </param>
    /// <param name="_productDimensionValue">
    ///    The reference to the product dimension value table buffer.
    /// </param>
    public void setDimensionValueAndRelations(
        EcoResProductRecId  _productMaster,
        RefRecId            _productDimensionAttribute,
        RefRecId            _productDimensionValue)
    {
        this.Color                          = _productDimensionValue;
        this.ColorProductMaster             = _productMaster;
        this.ColorProductDimensionAttribute = _productDimensionAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        EcoResDistinctProductVariant    ecoResDistinctProductVariant;
        EcoResProductVariantColor       ecoResProductVariantColor;
        boolean                         ret;

        ret = super();

        select firstonly ecoResProductVariantColor
            where   ecoResProductVariantColor.Color                       == this.Color
                &&  ecoResProductVariantColor.ProductDimensionAttribute   == this.ColorProductDimensionAttribute
            exists join ecoResDistinctProductVariant
                where   ecoResDistinctProductVariant.RecId                == ecoResProductVariantColor.DistinctProductVariant
                    &&  ecoResDistinctProductVariant.ProductMaster        == this.ColorProductMaster;

        if (ecoResProductVariantColor.RecId != 0)
        {
            ret = checkFailed(strFmt("@SYS128564", tablePName(EcoResProductMasterColor),
                                                   tablePName(EcoResProductVariantColor)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDimensionValueAndRelations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the product dimension value and relation fields on the buffer.
    /// </summary>
    /// <param name="_productMaster">
    /// A reference to the product master.
    /// </param>
    /// <param name="_productDimensionAttribute">
    /// An ID of a <c>EcoResProductDimensionAttribute</c> table buffer.
    /// </param>
    /// <param name="_productDimensionValue">
    /// The reference to the product dimension value table buffer.
    /// </param>
    /// <param name="_throwError">
    /// A Boolean value that indicates whether to throw an exception if the dimension has been assigned to
    /// the product master.
    /// </param>
    /// <returns>
    /// true if the product dimension table value exists for specified product; otherwise, false.
    /// </returns>
    public boolean validateDimensionValueAndRelations(
        EcoResProductRecId  _productMaster,
        RefRecId            _productDimensionAttribute,
        RefRecId            _productDimensionValue,
        boolean             _throwError = false)
    {
        if (EcoResProductMasterColor::existByProductColor(
            _productMaster,
            _productDimensionAttribute,
            _productDimensionValue))
        {
            if (_throwError)
            {
                throw error(EcoResProductMasterDimensionValue::txtNotExist(
                    EcoResColor::label(),
                    EcoResColor::find(_productDimensionValue).Name,
                    EcoResProductIdentifier::findByProduct(_productMaster).ProductNumber));
            }

            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the product dimension value exists.
    /// </summary>
    /// <param name="_productMaster">
    ///    The <c>EcoResProductRecId</c> reference to the product master.
    /// </param>
    /// <param name="_productDimensionAttribute">
    ///    An ID of the <c>EcoResProductDimensionAttribute</c> table buffer.
    /// </param>
    /// <param name="_productDimensionValue">
    ///    The reference to the product dimension value table buffer.
    /// </param>
    /// <param name="_throwError">
    ///    A Boolean value that indicates whether an exception is thrown, in case the dimension does not exists.
    /// </param>
    /// <returns>
    ///    true if the product dimension value exists for a specified product; otherwise false.
    /// </returns>
    public boolean checkExistDimensionValue(
        EcoResProductRecId  _productMaster,
        RefRecId            _productDimensionAttribute,
        RefRecId            _productDimensionValue,
        boolean             _throwError = false)
    {
        return EcoResProductMasterColor::checkExistByProductColor(
                        _productMaster,
                        _productDimensionAttribute,
                        _productDimensionValue,
                        _throwError);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean     ret;

        ret = super();

        ret = ret && this.validateActiveProductDimension(this.ColorProductMaster, fieldNum(InventDim, InventColorId));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistByProductColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the specified record exists in the <c>EcoResProductMasterColor</c> table; if not, an
    /// error message is displayed or an exception thrown.
    /// </summary>
    /// <param name="_productMaster">
    /// The ID of the <c>EcoResProductMaster</c> record that is used as a filter.
    /// </param>
    /// <param name="_productDimensionAttribute">
    /// The ID of the <c>EcoResProductDimensionAttribute</c> record that is used as a filter.
    /// </param>
    /// <param name="_colorRecId">
    /// The ID of the <c>EcoResColor</c> record that is used as a filter.
    /// </param>
    /// <param name="_throwException">
    /// A Boolean value that indicates whether a message is displayed or an exception is thrown.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The <paramref name="_throwException" /> parameter is true and the record does not exist.
    /// </exception>
    static boolean checkExistByProductColor(
        RefRecId            _productMaster,
        RefRecId            _productDimensionAttribute,
        EcoResColorRecId    _colorRecId,
        boolean             _throwException = false)
    {
        EcoResProduct   ecoResProduct;
        EcoResColor     ecoResColor;
        str             message;

        if (_productMaster
            && _productDimensionAttribute
            && _colorRecId
            && !EcoResProductMasterColor::existByProductColor(_productMaster, _productDimensionAttribute, _colorRecId))
        {
            ecoResProduct   = EcoResProduct::find(_productMaster);
            ecoResColor     = EcoResColor::find(_colorRecId);
            message         = EcoResProductMasterColor::txtNotExist(ecoResColor.Name, ecoResProduct.productNumber());
            if (_throwException)
            {
                throw error(message);
            }
            return checkFailed(message);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByProductColor</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>EcoResProductMasterColor</c> table exists.
    /// </summary>
    /// <param name="_productMaster">
    ///    The ID of the <c>EcoResProductMaster</c> record to use as a filter.
    /// </param>
    /// <param name="_productDimensionAttribute">
    ///    The ID of the <c>EcoResProductDimensionAttribute</c> record to use as a filter.
    /// </param>
    /// <param name="_colorRecId">
    ///    The ID of the <c>EcoResColor</c> record to use as a filter.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean existByProductColor(
        RefRecId            _productMaster,
        RefRecId            _productDimensionAttribute,
        EcoResColorRecId    _colorRecId)
    {
        if (_productMaster && _productDimensionAttribute && _colorRecId)
        {
            return (select firstonly ecoResProductMasterColor
                    where ecoResProductMasterColor.ColorProductMaster               == _productMaster
                       && ecoResProductMasterColor.ColorProductDimensionAttribute   == _productDimensionAttribute
                       && ecoResProductMasterColor.Color                            == _colorRecId
                    ).RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a warning message in case the product dimension table value does not exist for the
    ///    specified product.
    /// </summary>
    /// <param name="_value">
    ///    The <c>Name</c> value that corresponds to the possible product dimension table value.
    /// </param>
    /// <param name="_productNumber">
    ///    The <c>EcoResProductNumber</c> value that corresponds to the product ID value.
    /// </param>
    /// <returns>
    ///    A warning message in case the product dimension table value does not exist for the specified
    ///    product.
    /// </returns>
    public static TxtNotExist txtNotExist(Name _value, EcoResProductNumber _productNumber)
    {
        return EcoResProductMasterDimensionValue::txtNotExist(EcoResColor::label(), _value, _productNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>EcoResProductMasterColor</c> record.
    /// </summary>
    /// <param name="_productMaster">
    /// An integer value that represents the product record ID.
    /// </param>
    /// <param name="_colorRecId">
    /// An integer value that represents the color record ID.
    /// </param>
    /// <param name="_inventDimFieldId">
    /// An integer value that represents the ID of the product dimension field in the
    /// <c>InventDim</c> table.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether the record must be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>EcoResProductMasterColor</c> record.
    /// </returns>
    public static EcoResProductMasterColor find(
        RefRecId                    _productMaster,
        EcoResColorRecId            _colorRecId,
        FieldId                     _inventDimFieldId   = fieldNum(InventDim, InventColorId),
        boolean                     _forupdate          = false)
    {
        EcoResProductMasterColor    ecoResProductMasterColor;
        RefRecId                    ecoResProductDimensionAttributeRecId;

        ecoResProductMasterColor.selectForUpdate(_forupdate);

        if (   _productMaster
            && _colorRecId)
        {
            ecoResProductDimensionAttributeRecId = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(_inventDimFieldId);

            select firstonly ecoResProductMasterColor
                where ecoResProductMasterColor.ColorProductMaster               == _productMaster
                   && ecoResProductMasterColor.ColorProductDimensionAttribute   == ecoResProductDimensionAttributeRecId
                   && ecoResProductMasterColor.Color                            == _colorRecId;
        }

        return ecoResProductMasterColor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTranslationByProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the color translation, if one exists, for a given product master.
    /// </summary>
    /// <param name="_productMasterRecId">
    /// An integer value that represents the product master record id.
    /// </param>
    /// <param name="_colorName">
    /// The color name. Note that the Name field is the ID of the EcoResColor table.
    /// </param>
    /// <param name="_languageId">
    /// The SystemLanguageId to find the translation for.
    /// </param>
    /// <returns>
    /// The color translation for the product master.
    /// </returns>
    public static EcoResProductMasterDimValueTranslation findTranslationByProduct(EcoResProductRecId _productMasterRecId, EcoResItemColorName _colorName, SystemLanguageId _languageId)
    {
        EcoResProductMasterDimValueTranslation valueTranslation;
        EcoResProductMasterColor masterColor;
        EcoResColor color;
        select firstonly valueTranslation
            exists join masterColor
                where masterColor.ColorProductMaster == _productMasterRecId
                && masterColor.RecId == valueTranslation.ProductMasterDimensionValue
                && valueTranslation.LanguageId == _languageId
            exists join color
                where color.RecId == masterColor.Color
                && color.Name == _colorName;

        return valueTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EcoResProductColor</ConfigurationKey>
	<DeveloperDocumentation>@SYS133890</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>EcoResProductMasterDimensionAction</FormRef>
	<Label>@SYS133889</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ColorProductMaster</TitleField1>
	<TitleField2>Color</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>EcoResProductMasterDimensionValue</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ColorProductMaster</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ColorProductDimensionAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Color</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResColorRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ColorProductDimensionAttribute</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ColorProductMaster</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FK_EcoResColor</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Color</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_EcoResProductDimensionAttribute</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ColorProductDimensionAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductColorIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ColorProductMaster</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ColorProductDimensionAttribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Color</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ColorEcoResProductDimensionAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProductDimensionAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ColorEcoResProductDimensionAttribute</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ColorEcoResProductDimensionAttribute_EcoResProductMasterColor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ColorProductDimensionAttribute</Name>
					<Field>ColorProductDimensionAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ColorEcoResProductMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProductMaster</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ColorEcoResProductMaster</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ColorEcoResProductMaster_EcoResProductMasterColor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ColorProductMaster</Name>
					<Field>ColorProductMaster</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ColorEcoResProductMasterDimensionValue</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResProductMasterDimensionValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResColor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResColor</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SourceColor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResColor_EcoResProductMasterColor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Color</Name>
					<Field>Color</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>