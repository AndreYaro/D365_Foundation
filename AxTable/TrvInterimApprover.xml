<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvInterimApprover</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvInterimApprover extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>TrvInterimApprover</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return _recId && (select firstonly RecId from trvInterimApprover
                    where trvInterimApprover.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TrvInterimApprover</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is being read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TrvInterimApprover</c> table.
    /// </returns>
    public static TrvInterimApprover find(
    RecId               _recId,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TrvInterimApprover trvInterimApprover;

        trvInterimApprover.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            trvInterimApprover.concurrencyModel(_concurrencyModel);
        }

        select firstonly trvInterimApprover
             where trvInterimApprover.RecId == _recId;

        return trvInterimApprover;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Keeps the Approver and ApproverWorker fields in sync.
    /// </summary>
    /// <param name = "_fieldId">Field being modifed.</param>
    public void modifiedField(FieldId _fieldId)
    {
        DirPersonUser personUser;
        HcmWorker worker;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TrvInterimApprover, Approver):

                select RecId from worker
                    join personUser where personUser.PersonParty == worker.Person
                        && personUser.User == this.Approver;

                this.ApproverWorker = worker.RecId;

                break;

            case fieldNum(TrvInterimApprover, ApproverWorker):
                UserInfo userInfo;

                select id from userInfo
                    join personUser where personUser.User == userInfo.id
                    join worker where worker.Person == personUser.PersonParty
                    && worker.RecId == this.ApproverWorker;

                this.Approver = userInfo.id;

                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateApproverOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Swaps the approver order with the approver at the new position.
    /// </summary>
    /// <param name = "newPosition">New order position to move the approver.</param>
    public void updateApproverOrder(int newPosition)
    {
        int old = this.ApproverOrder;

        TrvInterimApprover otherApprover;

        select forupdate otherApprover where otherApprover.WorkflowContextRecId == this.WorkflowContextRecId
                && otherApprover.ApproverOrder == newPosition;

        if (otherApprover)
        {
            ttsbegin;
            this.ApproverOrder = otherApprover.ApproverOrder;
            otherApprover.ApproverOrder = old;

            this.update();
            otherApprover.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

		if (TrvExpTable::existByRecId(this.WorkflowContextRecId))
        {
            TrvInterimApprover::rearrangeApproverOrder(this.WorkflowContextRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rearrangeApproverOrder</Name>
				<Source><![CDATA[
    public static void rearrangeApproverOrder(RefRecId _workflowContextRecId)
    {
        int neworder;
        TrvInterimApprover interimApprover;

		ttsbegin;
        while select forupdate interimApprover
            order by ApproverOrder
            where interimApprover.WorkflowContextRecId == _workflowContextRecId
        {
            neworder++;            
            interimApprover.ApproverOrder = neworder;
            interimApprover.update();
        }
		ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<DeveloperDocumentation>@Expense:TrvInterimApproverDeveloperDoc</DeveloperDocumentation>
	<Label>@Expense:InterimApprover</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>Approver</TitleField1>
	<TitleField2>WorkflowContextRecId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>Workflow</ClusteredIndex>
	<Modules>Expense</Modules>
	<PrimaryIndex>Approver</PrimaryIndex>
	<ReplacementKey>Approver</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkflowContextRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Approver</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ApproverWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasApproved</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ApproverOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCurrentApprover</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>WorkflowCorrelationId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WorkflowCorrelationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkflowContextRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WorkflowContextRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Approver</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Approver</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkflowContextRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Workflow</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkflowCorrelationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkflowContextRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ApproverOrder</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ExpenseReport</Name>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TrvExpTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkflowContextRecId</Name>
					<Field>WorkflowContextRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Approver</Name>
			<RelatedTable>UserInfo</RelatedTable>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ApproverWorker</Name>
			<RelatedTable>HcmWorker</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApproverWorker</Name>
					<Field>ApproverWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>