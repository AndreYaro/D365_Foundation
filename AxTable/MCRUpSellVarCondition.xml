<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRUpSellVarCondition</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRUpSellVarCondition extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createValueString</Name>
				<Source><![CDATA[
        private static str createValueString()
    {
        xRefTableRelation           txRef;
        str                         valueStr;

        //Find all tables that are related to the <c>SalesTable</c> or <c>SalesLine</c>.
        while select TableName from txRef
            where txRef.RelatedTableName == tableStr(SalesTable)
                || txRef.RelatedTableName == tableStr(SalesLine)
                || txRef.RelatedTableName == tableStr(MCRCustPaymTable)
        {
            valueStr = valueStr + txRef.TableName + ",";
        }

        // Find all tables that <c>SalesTable</c> or <c>SalesLine</c> are related to.
        while select RelatedTableName from txRef
            where txRef.TableName == tableStr(SalesTable)
                || txRef.TableName == tableStr(SalesLine)
        {
            valueStr = valueStr + txRef.RelatedTableName + ",";
        }

        valueStr = strDel(valueStr, strLen(valueStr), 1);

        return valueStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds condition based on the <c>MCRUpSellCondition</c> name.
    /// </summary>
    /// <param name="_condition">
    /// The <c>MCRUpSellVarCondition</c> table record on which to base the search.
    /// </param>
    /// <param name="_forUpdate">
    /// true if the method should return the <c>MCRUpSellVarCondition</c> table record for update; false if
    /// the method should not return the <c>MCRUpSellVarCondition</c> table record for update.
    /// </param>
    /// <returns>
    /// The <c>MCRUpSellVarCondition</c> table record that was found based on the passed parameters.
    /// </returns>
    public static MCRUpSellVarCondition find(MCRUpSellCondition _condition,
                                     boolean _forUpdate = false)
    {
        MCRUpSellVarCondition    mcrUpSellVarCondition;

        if (_condition)
        {
            mcrUpSellVarCondition.selectForUpdate (_forUpdate);

            select firstonly mcrUpSellVarCondition
                where mcrUpSellVarCondition.ConditionName == _condition;
        }
        return mcrUpSellVarCondition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookUpConditionTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows users to look up <c>SalesTable</c>, its
    /// related tables, <c>SalesLine</c> and its related tables,
    /// <c>MCRCustPaymTable</c> and its related tables.
    /// </summary>
    /// <param name="_ctrl">
    /// The <c>FormStringControl</c> that fired the lookup.
    /// </param>
    public static void lookUpConditionTable(FormStringControl _ctrl)
    {
        SysTableLookup              sysTableLookup;
        Query                       query;
        QueryBuildDataSource        queryBuildDataSource;
        str                         valueStr;

        //We are looking up tables.
        query = new Query();
        queryBuildDataSource  = query.addDataSource(tableNum(UtilElements));
        queryBuildDataSource.addRange(fieldNum(UtilElements, RecordType)).value(enum2str(UtilElementType::Table));
        //Set order mode so duplicate tables won't show up.
        queryBuildDataSource.orderMode(OrderMode::GroupBy);
        sysTableLookup = SysTableLookup::newParameters(tableNum(UtilElements), _ctrl);
        sysTableLookup.addLookupfield(fieldNum(UtilElements, Name));

        valueStr = MCRUpSellVarCondition::createValueString();

        queryBuildDataSource.addRange(fieldNum(UtilElements, Name)).value(valueStr);
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@MCR25103</DeveloperDocumentation>
	<Label>@SYS40733</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>ConditionName</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ConditionNameIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>ConditionNameIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>MCRUpSellVarConditionDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>MCRUpSellVarConditionDetail</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>MCRUpSellVarRuleDetail</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>MCRUpSellVarRuleDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConditionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConditionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRUpSellCondition</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TableName</ExtendedDataType>
			<Label>@MCR11855</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS7576</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ConditionNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ConditionName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SysMetaTableNameLookup</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SysMetaTableNameLookup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConditionTable</Name>
					<SourceEDT>TableName</SourceEDT>
					<Field>ConditionTable</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>