<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSRFMenuItemCycleCount</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSRFMenuItemCycleCount extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(WHSRFMenuItemCycleCount, BlindItem),
                [fieldNum(WHSRFMenuItemCycleCount, BlindLP),
                fieldNum(WHSRFMenuItemCycleCount, BlindBatch),
                fieldNum(WHSRFMenuItemCycleCount, BlindSerial)]
            ],
            [fieldNum(WHSRFMenuItemCycleCount, BlindLP),
                [fieldNum(WHSRFMenuItemCycleCount, BlindItem),
                fieldNum(WHSRFMenuItemCycleCount, BlindBatch),
                fieldNum(WHSRFMenuItemCycleCount, BlindSerial)]
            ],
            [fieldNum(WHSRFMenuItemCycleCount, BlindBatch),
                [fieldNum(WHSRFMenuItemCycleCount, BlindItem),
                fieldNum(WHSRFMenuItemCycleCount, BlindLP),
                fieldNum(WHSRFMenuItemCycleCount, BlindSerial)
                ]
            ],
            [fieldNum(WHSRFMenuItemCycleCount, BlindSerial),
                [fieldNum(WHSRFMenuItemCycleCount, BlindItem),
                fieldNum(WHSRFMenuItemCycleCount, BlindLP),
                fieldNum(WHSRFMenuItemCycleCount, BlindBatch)]
            ],
            [fieldNum(WHSRFMenuItemCycleCount, EditReasonCode),
                [fieldNum(WHSRFMenuItemCycleCount, DisplayReasonCode)]
            ]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSRFMenuItemCycleCount, BlindItem):
                if (this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindLP))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindBatch))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindSerial)))
                {
                    if (this.BlindLP || this.BlindBatch || this.BlindSerial)
                    {
                        this.BlindItem = NoYes::Yes;
                    }
                }
                break;

            case fieldNum(WHSRFMenuItemCycleCount, BlindLP):
                  if (this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindItem))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindBatch))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindSerial)))
                {
                    if ((this.BlindBatch || this.BlindSerial) && !this.BlindLP)
                    {
                        this.BlindLP = NoYes::Yes;
                    }
                    else if (!this.BlindItem && this.BlindLP)
                    {
                        this.BlindLP = NoYes::No;
                    }
                }
                break;

            case fieldNum(WHSRFMenuItemCycleCount, BlindBatch):
                  if (this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindLP))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindItem))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindSerial)))
                {
                    if (this.BlindSerial && !this.BlindBatch)
                    {
                        this.BlindBatch = NoYes::Yes;
                    }
                    else if ((!this.BlindItem || !this.BlindLP) && this.BlindBatch)
                    {
                        this.BlindBatch = NoYes::No;
                    }
                }
                break;

            case fieldNum(WHSRFMenuItemCycleCount, BlindSerial):
                  if (this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindLP))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindBatch))
                    || this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, BlindItem)))
                {
                    if (!this.BlindItem || !this.BlindLP || !this.BlindBatch)
                    {
                        this.BlindSerial = NoYes::No;
                    }
                }
                break;

            case fieldNum(WHSRFMenuItemCycleCount, EditReasonCode):
                  if (this.isFieldSet(fieldNum(WHSRFMenuItemCycleCount, DisplayReasonCode))
                      && this.DisplayReasonCode != WHSDisplayCountingReasonCode::Line)
                  {
                      this.EditReasonCode = NoYes::No;
                  }
                  break;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>whsrfMenuItemCycleCount</c> record exists.
	/// </summary>
	/// <param name="_whsMenuItemName">
	/// Menu item name of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(WHSMenuItemName _whsMenuItemName)
    {
        return (_whsMenuItemName) &&
               (select firstonly whsrfMenuItemCycleCount
                where whsRFMenuItemCycleCount.MenuItemName == _whsMenuItemName).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSRFMenuItemCycleCount</c> record with given parameters.
	/// </summary>
	/// <param name="_whsMenuItemName">
	/// Menu item name of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSRFMenuItemCycleCount find(WHSMenuItemName _whsMenuItemName,
                                               boolean         _forupdate = false)
    {
        WHSRFMenuItemCycleCount    whsrfMenuItemCycleCount;

        if (_whsMenuItemName)
        {
            whsrfMenuItemCycleCount.selectForUpdate(_forupdate);

            select firstonly whsrfMenuItemCycleCount
                where whsrfMenuItemCycleCount.MenuItemName == _whsMenuItemName;
        }

        return whsrfMenuItemCycleCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret
            && !this.BlindItem
            && (this.BlindLP
                || this.BlindBatch
                || this.BlindSerial))
        {
            ret = checkFailed(strFmt("@WAX:WHSRFMenuItemCycleCountBlindItemError",
                fieldStr(WHSRFMenuItemCycleCount,BlindItem),
                fieldStr(WHSRFMenuItemCycleCount,BlindLP),
                fieldStr(WHSRFMenuItemCycleCount,BlindBatch),
                fieldStr(WHSRFMenuItemCycleCount,BlindSerial)));
        }

        if (ret
            && !this.BlindLP
            && (this.BlindBatch
                || this.BlindSerial))
        {
            ret = checkFailed(strFmt("@WAX:WHSRFMenuItemCycleCountBlindLPError",
                fieldStr(WHSRFMenuItemCycleCount,BlindLP),
                fieldStr(WHSRFMenuItemCycleCount,BlindBatch),
                fieldStr(WHSRFMenuItemCycleCount,BlindSerial)));
        }

        if (ret
            && !this.BlindBatch
            && this.BlindSerial)
        {
            ret = checkFailed(strFmt("@WAX:WHSRFMenuItemCycleCountBlindBatchError",
                fieldStr(WHSRFMenuItemCycleCount,BlindBatch),
                fieldStr(WHSRFMenuItemCycleCount,BlindSerial)));
        }

        if (ret
            && this.DisplayReasonCode == WHSDisplayCountingReasonCode::Hide
            && this.EditReasonCode)
        {
            ret = checkFailed("@WAX:WHSRFMenuItemCycleCountDisplayReasonCodeError");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4438</DeveloperDocumentation>
	<Label>@WAX1552</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>MenuItemName</TitleField1>
	<TitleField2>NumRetries</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>MenuItemNameIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>MenuItemNameIdx</PrimaryIndex>
	<ReplacementKey>MenuItemNameIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumRetries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindItem</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindLP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindBatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindSerial</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MenuItemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MenuItemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumRetries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindItem</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindLP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindBatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlindSerial</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MenuItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultCountingReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EditReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayReasonCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlindBatch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBlindBatch</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlindItem</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBlindItem</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlindLP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBlindLP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlindSerial</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBlindSerial</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MenuItemName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMenuItemName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumRetries</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSNumRetries</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisplayReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSDisplayCountingReasonCode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EditReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEditReasonCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultCountingReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultCountingReasonCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MenuItemNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MenuItemName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSRFMenuItemTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>WHSRFMenuItemTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MenuItemName</Name>
					<SourceEDT>WHSMenuItemName</SourceEDT>
					<Field>MenuItemName</Field>
					<RelatedField>MenuItemName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventCountingReasonCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventCountingReasonCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultCountingReasonCode</Name>
					<Field>DefaultCountingReasonCode</Field>
					<RelatedField>ReasonCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>