<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPolicyFields</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceDiscPolicyFields extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPolicyFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a container of table map field IDs that represent a price discount change policy.
    /// </summary>
    /// <param name="_changePolicy">
    ///    A record ID reference to the <c>PriceDiscChangePolicy</c> table.
    /// </param>
    /// <returns>
    ///    A container of table map field IDs.
    /// </returns>
    [SysObsolete("Use retrievePolicyFieldList method instead.", false, 31\03\2018), Hookable(false)]
    public static container getPolicyFields(PriceDiscChangePolicyRefRecId _changePolicy)
    {
        container policyFields;
        Enumerator enumerator = PriceDiscPolicyFields::retrievePolicyFieldList(_changePolicy).getEnumerator();

        while (enumerator.moveNext())
        {
            PriceDiscPolicyField policyField = enumerator.current();

            if (policyField.parmTableMapId() != tableNum(PriceDiscResultFields))
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            policyFields += policyField.parmTableMapFieldId();
        }

        return policyFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievePolicyFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a list of <c>PriceDiscPolicyField</c> objects, that represent a price discount change policy.
    /// </summary>
    /// <param name="_changePolicy">
    /// A record ID reference to the <c>PriceDiscChangePolicy</c> table.
    /// </param>
    /// <returns>
    /// The <c>PriceDiscPolicyFieldList</c> object containing the policy fields.
    /// </returns>
    [Hookable(false)]
    public static PriceDiscPolicyFieldList retrievePolicyFieldList(PriceDiscChangePolicyRefRecId _changePolicy)
    {
        PriceDiscPolicyFieldList     policyFieldList = PriceDiscPolicyFieldList::newList();
        PriceDiscPolicyFields   priceDiscPolicyFields;

        while select priceDiscPolicyFields
            where priceDiscPolicyFields.ChangePolicy == _changePolicy
        {
            policyFieldList.addPolicyField(PriceDiscPolicyField::newTableMapField(PriceDiscPolicyFields::convertStoredToReferencedTable(priceDiscPolicyFields.TableMapId), priceDiscPolicyFields.FieldId));
        }

        return policyFieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertStoredToReferencedTable</Name>
				<Source><![CDATA[
    internal static TableId convertStoredToReferencedTable(Tableid _storedTableMapId)
    {
        return _storedTableMapId ? _storedTableMapId : tableNum(PriceDiscResultFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertReferencedToStoredTableMapId</Name>
				<Source><![CDATA[
    internal static TableId convertReferencedToStoredTableMapId(TableId _tableMapId)
    {
        return _tableMapId == tableNum(PriceDiscResultFields) ? 0 : _tableMapId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveTablePolicyFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a container of table field IDs that represent a price discount change policy.
    /// </summary>
    /// <param name="_tableId">
    /// The ID of the table which the table field IDs are associated with.
    /// </param>
    /// <param name="_changePolicy">
    /// A record ID reference to the <c>PriceDiscChangePolicy</c> table.
    /// </param>
    /// <returns>
    /// A container of table field IDs.
    /// </returns>
    [Hookable(false)]
    public static container retrieveTablePolicyFields(TableId _tableId, PriceDiscChangePolicyRefRecId _changePolicy)
    {
        PriceDiscPolicyFieldMappingCache fieldMapping = PriceDiscResultFields::tableFieldMapping();

        return fieldMapping.policyFieldList2TableFieldIds(_tableId, PriceDiscPolicyFields::retrievePolicyFieldList(_changePolicy));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldInPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>PriceDiscPolicyFields</c> table exists.
    /// </summary>
    /// <param name="_policyId">
    ///    The <c>ChangePolicy</c> field of the <c>PriceDiscPolicyFields</c> table.
    /// </param>
    /// <param name="_fieldId">
    ///    The <c>FieldId</c> field of the <c>PriceDiscPolicyFields</c> table.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [SysObsolete("Use isPolicyFieldInPolicy method instead.", false, 31\03\2018), Hookable(false)]
    public static boolean isFieldInPolicy(PriceDiscChangePolicyRefRecId _policyId, RefFieldId _fieldId)
    {
        return PriceDiscPolicyFields::isPolicyFieldInPolicy(_policyId, PriceDiscPolicyField::newPriceDiscResultsField(_fieldId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPolicyFieldInPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>PriceDiscPolicyFields</c> table exists.
    /// </summary>
    /// <param name="_policyId">
    /// The <c>ChangePolicy</c> field of the <c>PriceDiscPolicyFields</c> table.
    /// </param>
    /// <param name="_policyField">
    /// A <c>PriceDiscPolicyField</c> object representing the policy field.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public static boolean isPolicyFieldInPolicy(PriceDiscChangePolicyRefRecId _policyId, PriceDiscPolicyField _policyField)
    {
        return PriceDiscPolicyFields::policyFieldExists(_policyId, _policyField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>policyFieldExists</Name>
				<Source><![CDATA[
    private static boolean policyFieldExists(PriceDiscChangePolicyRefRecId _policyId, PriceDiscPolicyField _policyField)
    {
        return _policyId && _policyField &&
             (select firstonly priceDiscPolicyFields 
                where priceDiscPolicyFields.ChangePolicy == _policyId                                                                               &&
                      priceDiscPolicyFields.TableMapId   == PriceDiscPolicyFields::convertReferencedToStoredTableMapId(_policyField.parmTableMapId())    &&
                      priceDiscPolicyFields.FieldId      == _policyField.parmTableMapFieldId()).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PriceDisc</ConfigurationKey>
	<DeveloperDocumentation>@SYS325284</DeveloperDocumentation>
	<Label>@SYS133067</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>FieldId</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ChangePolicyFieldIdx</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ChangePolicyFieldIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChangePolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChangePolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableMapId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FieldGroup</Name>
			<Label>@SYS133066</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChangePolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ChangePolicy</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefReturnInvoiceTrans_W</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldId</ExtendedDataType>
			<RelatedTable>PriceDiscResultFields</RelatedTable>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TableMapId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>TableId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ChangePolicyFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ChangePolicy</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableMapId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PriceDiscChangePolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscChangePolicy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IsPriceDiscChangeOf</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>IsPriceDiscPolicyFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChangePolicy</Name>
					<Field>ChangePolicy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>