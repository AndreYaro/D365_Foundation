<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQReplyTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQReplyTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLineOnCurrencyCodeConversion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the order line after currency code conversion.
    /// </summary>
    /// <param name = "_purchRFQReplyLine">A purchase requests for quote reply line</param>
    protected void updateLineOnCurrencyCodeConversion(purchRFQReplyLine _purchRFQReplyLine)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertCurrencyCode</Name>
				<Source><![CDATA[
    void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurencyConversion = TradeCurencyConversion::ExchRate)
    {
        PurchRFQReplyLine   purchRFQReplyLine;

        ttsbegin;

        while select forupdate purchRFQReplyLine
              where purchRFQReplyLine.rfqId == this.rfqId
        {
            purchRFQReplyLine.convertCurrencyCode(currencyCode, this.orig().CurrencyCode, tradeCurencyConversion);
            this.updateLineOnCurrencyCodeConversion(purchRFQReplyLine);
            purchRFQReplyLine.doUpdate();
        }

        this.CurrencyCode = currencyCode;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates container based on RFQ status.
    /// The first item in container is a Boolean value indicating whether or not the user is allowed to view attachments for the current record.
    /// The second item in the container is optional and is a message to be displayed in the message bar.
    /// </summary>
    /// <returns>
    /// The container containing the values to be used by the attachments framework.
    /// </returns>
    public container docuAllowView()
    {
        container allowViewAttachment;
        PurchRFQTable purchRFQTable = this.purchRFQTable();

        if (PurchRFQCaseTable::find(purchRFQTable.RFQCaseId).IsSealed)
        {
            allowViewAttachment = [false, "@SYS4009893"];
        }
        else
        {
            allowViewAttachment = [true];
        }

        return allowViewAttachment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowEdit_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if document attachments are editable for the current record.
    /// </summary>
    /// <returns>
    /// True, if editing of document attachments should be allowed, otherwise false.
    /// </returns>
    public boolean docuAllowEdit_W()
    {
        PurchRFQTable purchRFQTable = this.purchRFQTable();
        PurchRFQCaseTable purchRFQCaseTable = PurchRFQCaseTable::find(purchRFQTable.RFQCaseId);
        
        return (this.isProcurementAgentEditing()
                    || this.ReplyProgressStatus == PurchRFQReplyProgressStatus::VendorEditing)
                && !purchRFQCaseTable.isRFQExpiredForCurrentUser();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLine</Name>
				<Source><![CDATA[
    boolean existLine()
    {
        return PurchRFQReplyLine::exist(this.rfqId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAgreementHeader</Name>
				<Source><![CDATA[
    void initAgreementHeader(AgreementHeader _agreementHeader)
    {
        _agreementHeader.Currency              = this.CurrencyCode;

        _agreementHeader.DefaultAgreementLineEffectiveDate     = this.ValidityDateStart;
        _agreementHeader.DefaultAgreementLineExpirationDate    = this.ValidityDateEnd;
        _agreementHeader.EarliestLineEffectiveDate             = this.ValidityDateStart;
        _agreementHeader.LatestLineExpirationDate              = this.ValidityDateEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAgreementHeaderDefault</Name>
				<Source><![CDATA[
    void initAgreementHeaderDefault(AgreementHeaderDefault _agreementHeaderDefault)
    {
        _agreementHeaderDefault.DeliveryTerm        = this.DlvTerm;
        _agreementHeaderDefault.DeliveryMode        = this.DlvMode;
        _agreementHeaderDefault.PaymentTerms        = this.Payment;
        _agreementHeaderDefault.ExternalReference   = this.VendRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchRFQTable</Name>
				<Source><![CDATA[
    void initFromPurchRFQTable(PurchRFQTable    _purchRFQTable)
    {
        this.CurrencyCode   = _purchRFQTable.CurrencyCode;
        this.DeliveryDate   = _purchRFQTable.DeliveryDate;
        this.DiscPercent    = _purchRFQTable.DiscPercent;
        this.DlvMode        = _purchRFQTable.DlvMode;
        this.DlvTerm        = _purchRFQTable.DlvTerm;
        this.Payment        = _purchRFQTable.Payment;
        this.rfqId          = _purchRFQTable.rfqId;
        this.ValidityDateEnd    = _purchRFQTable.ValidityDateEnd;
        this.ValidityDateStart  = _purchRFQTable.ValidityDateStart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();
        PurchRFQScoring::createRFQScoringForRFQReply(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDiscounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line discount for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    /// The line discount for a <c>PurchRFQReplyTable</c> record.
    /// </returns>
    public display DiscAmount lineDiscounts()
    {
        PurchRFQTotals_ReplyTrans   purchRFQTotals;

        purchRFQTotals = PurchRFQTotals::construct(this);
        purchRFQTotals.calc();

        return purchRFQTotals.totalLineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchRFQReplyTable, rfqMark):
                this.rfqMarkToLine();
                break;                
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>previewPaneTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gives the title on top of the preview pane.
    /// </summary>
    /// <returns>
    /// Title field of the preview pane.
    /// </returns>
    display Caption previewPaneTitle()
    {
        return strFmt("@SYS330566", this.RFQId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQTable</Name>
				<Source><![CDATA[
    PurchRFQTable purchRFQTable()
    {
        return PurchRFQTable::find(this.rfqId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryPurchRFQReplyLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a query that selects <c>PurchRFQReplyLine</c> records that are linked to the current
    ///    <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_update">
    ///    A <c>NoYes</c> enumeration value that determines whether the record should be selected for update;
    ///    optional.
    /// </param>
    /// <returns>
    ///    A query that selects <c>PurchRFQReplyLine</c> records.
    /// </returns>
    Query queryPurchRFQReplyLine(boolean _update = false)
    {
        DictRelation    dictRelation;
        DictField       externdictField;
        DictField       dictField;
        Query           query = new Query();
        Counter         c;

        query.addDataSource(tableNum(PurchRFQLine));
        query.dataSourceTable(tableNum(PurchRFQLine)).addDataSource(tableNum(PurchRFQReplyLine));
        query.dataSourceTable(tableNum(PurchRFQReplyLine)).addLink(fieldNum(PurchRFQLine, RecId), fieldNum(PurchRFQReplyLine, rfqLineRecId));
        query.dataSourceTable(tableNum(PurchRFQReplyLine)).joinMode(JoinMode::InnerJoin);
        query.dataSourceTable(tableNum(PurchRFQLine)).addRange(fieldNum(PurchRFQLine, Status)).value(strFmt('..%1',PurchRFQStatus::Received));
        query.dataSourceTable(tableNum(PurchRFQLine)).addRange(fieldNum(PurchRFQLine, rfqId)).value(queryValue(this.rfqId));

        dictRelation = new DictRelation(tableNum(PurchRFQReplyLine));
        dictRelation.loadTableRelation(this.TableId);

        if (dictRelation.lines())
        {
            for (c=1; c <= dictRelation.lines(); c++)
            {
                externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
                dictField   = new DictField(tableNum(PurchRFQReplyLine),dictRelation.lineTableValue(c));
                query.dataSourceTable(tableNum(PurchRFQReplyLine)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
            }
        }
        query.dataSourceTable(tableNum(PurchRFQReplyLine)).update(_update);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rfqMarkToLine</Name>
				<Source><![CDATA[
    public void rfqMarkToLine()
    {
        PurchRFQReplyLine   localReplyLine;
        ttsbegin;

        update_recordset localReplyLine
            setting rfqMark = this.rfqMark
            where localReplyLine.rfqId == this.rfqId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the balance amount for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    /// The balance amount for a <c>PurchRFQReplyTable</c> record.
    /// </returns>
    public display PurchRFQGrossAmount totalBalance()
    {
        PurchRFQTotals_ReplyTrans   purchRFQTotals;

        purchRFQTotals = PurchRFQTotals::construct(this);
        purchRFQTotals.calc();

        return purchRFQTotals.totalBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total discount for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    /// The total discount for a <c>PurchRFQReplyTable</c> record.
    /// </returns>
    public display DiscAmount totalDiscount()
    {
        PurchRFQTotals_ReplyTrans   purchRFQTotals;

        purchRFQTotals = PurchRFQTotals::construct(this);
        purchRFQTotals.calc();

        return purchRFQTotals.totalEndDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalInvoiceAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the invoice amount for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    /// The invoice amount for a <c>PurchRFQReplyTable</c> record.
    /// </returns>
    public display PurchRFQNetAmount totalInvoiceAmount()
    {
        PurchRFQTotals_ReplyTrans   purchRFQTotals;

        purchRFQTotals = PurchRFQTotals::construct(this);
        purchRFQTotals.calc();

        return purchRFQTotals.totalAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the miscellaneous charges for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <returns>
    /// The miscellaneous charges for a <c>PurchRFQReplyTable</c> record.
    /// </returns>
    public display MarkupAmount totalMarkup()
    {
        PurchRFQTotals_ReplyTrans   purchRFQTotals;

        purchRFQTotals = PurchRFQTotals::construct(this);
        purchRFQTotals.calc();

        return purchRFQTotals.totalMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromPurchRFQTable</Name>
				<Source><![CDATA[
    static void createFromPurchRFQTable(PurchRFQTable _purchRFQTable)
    {
        PurchRFQReplyTable purchRFQReplyTable;
        ttsbegin;
        purchRFQReplyTable.rfqId = _purchRFQTable.rfqId;
        purchRFQReplyTable.CurrencyCode = _purchRFQTable.CurrencyCode;
        purchRFQReplyTable.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(PurchRFQId  _rfqId)
    {
        return (select firstonly RecId from purchRFQReplyTable
                    index hint RFQIdx
                    where purchRFQReplyTable.rfqId    == _rfqId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PurchRFQReplyTable find(PurchRFQId     _rfqId,
                                     boolean        _forUpdate = false)

    {
        PurchRFQReplyTable  purchRFQReplyTable;

        if (_rfqId)
        {
            purchRFQReplyTable.selectForUpdate  (_forUpdate);
            purchRFQReplyTable.selectLocked     (_forUpdate);

            select firstonly purchRFQReplyTable
                index hint RFQIdx
                where purchRFQReplyTable.rfqId == _rfqId;
        }

        return purchRFQReplyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record that is associated with the specified record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of a <c>PurchRFQReplyTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the record will be updated.
    /// </param>
    /// <returns>
    ///    The <c>PurchRFQReplyTable</c> record that is found by the record ID.
    /// </returns>
    public static PurchRFQReplyTable findRecId(recId   _recId, boolean _forUpdate = false)
    {
        PurchRFQReplyTable    purchRFQReplyTable;

        if (_recId)
        {
            purchRFQReplyTable.selectForUpdate(_forUpdate);

            select firstonly purchRFQReplyTable
                where purchRFQReplyTable.RecId  == _recId;
        }

        return purchRFQReplyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the record exists for the specified record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of a <c>PurchRFQReplyTable</c> record.
    /// </param>
    /// <returns>
    /// A boolean value that indicates if the record exists for the specified record ID.
    /// </returns>
    public static boolean existsRecId(PurchRFQReplyTableRecId _recId)
    {
        PurchRFQReplyTable purchRFQReplyTable;

        if (_recId)
        {
            select firstonly RecId from  purchRFQReplyTable
                where purchRFQReplyTable.RecId  == _recId;
        }

        return purchRFQReplyTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRFQMark</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the RFQMark for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_replyTables">
    ///  The list of record IDs of a <c>PurchRFQReplyTable</c> record.
    /// </param>
    public static void updateRFQMark(List _replyTables)
    {
        ListEnumerator      enumerator;
        PurchRFQReplyTable  replyTable;

        if (_replyTables.elements()> 0)
        {
            enumerator = _replyTables.getEnumerator();

            ttsBegin;

            while (enumerator.moveNext())
            {
                replyTable = PurchRFQReplyTable::findRecId(conPeek(enumerator.current(),1),true);
                replyTable.RFQMark = conPeek(enumerator.current(),2);
                replyTable.doUpdate();
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotalScore</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the total score for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of a <c>PurchRFQReplyTable</c> record.
    /// </param>
    /// <param name="_score">
    ///    The score value added to the current total score value
    /// </param>
    static public void updateTotalScore(PurchRFQReplyTableRecId _recId, PurchRFQScore _score)
    {
        PurchRFQReplyTable purchRFQReplyTable;

        if (_recId && _score)
        {
            update_recordSet purchRFQReplyTable
                setting TotalScore =purchRFQReplyTable.TotalScore + _score
                where purchRFQReplyTable.RecId == _recId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReplyDates</Name>
				<Source><![CDATA[
    private boolean validateReplyDates()
    {   
        return this.ValidFrom > this.ValidTo ? 
            checkFailed("@SCM:RFQReplyDateErrorMessage"): 
            true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid = super();
        
        isValid = isValid && this.validateReplyDates();

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReplyProgressStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Update the <c>ReplyProgressStatus</c> property on the <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_replyProgressStatus">
    ///    The <c>PurchRFQReplyProgressStatus</c> value.
    /// </param>
    public void updateReplyProgressStatus(PurchRFQReplyProgressStatus _replyProgressStatus)
    {
        PurchRFQReplyTable purchRFQReplyTable;

        ttsbegin;

        update_recordset purchRFQReplyTable
            setting ReplyProgressStatus = _replyProgressStatus
                where purchRFQReplyTable.RecId == this.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEditByProcurementAgentAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the reply can be edited by Procurement agent.
    /// </summary>
    /// <returns>
    ///  true if the reply can be edited; otherwise, false.
    /// </returns>
    public boolean isEditByProcurementAgentAllowed()
    {
        return PurchRFQParameters::find().IsBidEditByProcurementAgentEnabled == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEditAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the reply can be edited.
    /// </summary>
    /// <returns>
    ///  true if the reply can be edited; otherwise, false.
    /// </returns>
    public boolean isEditAllowed()
    {
        PurchRFQCaseTable purchRFQCaseTable = PurchRFQCaseTable::find(this.purchRFQTable().RFQCaseId);

        return ((this.ReplyProgressStatus == PurchRFQReplyProgressStatus::VendorEditing               
                 || this.ReplyProgressStatus == PurchRFQReplyProgressStatus::NotStarted
                 || this.isProcurementAgentEditing())
                && purchRFQCaseTable.BidType == PurchRFQBidType::Open)
                || (this.ReplyProgressStatus != PurchRFQReplyProgressStatus::SubmittedByProcurementAgent
                    && this.ReplyProgressStatus != PurchRFQReplyProgressStatus::SubmittedByVendor
                    && xUserInfo::doesCurrentUserHaveProcurementAgentRights()
                    && this.isEditByProcurementAgentAllowed()
                    && purchRFQCaseTable.IsSealed == NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProcurementAgentEditing</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the procurement agent is editing the reply.
    /// </summary>
    /// <returns>
    ///  true if the procurement agent is editing the reply; otherwise, false.
    /// </returns>
    public boolean isProcurementAgentEditing()
    {
        return this.ReplyProgressStatus == PurchRFQReplyProgressStatus::ProcurementAgentEditing 
                   && xUserInfo::doesCurrentUserHaveProcurementAgentRights();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeclined</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the reply is declined.
    /// </summary>
    /// <returns>
    ///  true if the reply is declined; otherwise, false.
    /// </returns>
    public boolean isDeclined()
    {
        return this.ReplyProgressStatus == PurchRFQReplyProgressStatus::DeclinedByVendor
            || this.ReplyProgressStatus == PurchRFQReplyProgressStatus::DeclinedByProcurementAgent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSubmitted</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Determines whether the reply is submitted.
    /// </summary>
    /// <returns>
    ///  true if the reply is submiited; otherwise, false.
    /// </returns>
    public boolean isSubmitted()
    {
        return this.ReplyProgressStatus == PurchRFQReplyProgressStatus::SubmittedByVendor
            || this.ReplyProgressStatus == PurchRFQReplyProgressStatus::SubmittedByProcurementAgent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124581</DeveloperDocumentation>
	<Label>@SYS102694</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>RFQId</TitleField1>
	<TitleField2>VendRef</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RFQIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RFQIdx</PrimaryIndex>
	<ReplacementKey>RFQIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalScore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rank</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Accept</Name>
			<Label>@SYS57795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQMark</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BidEvaluation</Name>
			<Label>@EPR4460231</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalScore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rank</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DiscountMiscCharges</Name>
			<Label>@SYS22031</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiscPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchAgreementOrder</Name>
			<Label>@SYS139129</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidityDateStart</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityDateEnd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchAgreementOrderEP</Name>
			<Label>@SYS4009984</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidityDateStart</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityDateEnd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RFQTable</Name>
			<Label>@SYS102808</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Valid</Name>
			<Label>@SYS35164</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vend</Name>
			<Label>@SYS8079</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQRequestedDeliveryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchEndDiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendDlvModeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendDlvTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DoSeal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQDoSeal</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Rank</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQRank</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFQId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RFQMark</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQMark</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TotalScore</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQTotalScore</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQValidDate</ExtendedDataType>
			<Label>@SYS50168</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidityDateEnd</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExpirationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidityDateStart</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EffectiveDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQValidDate</ExtendedDataType>
			<Label>@SYS102701</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendRef</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplyProgressStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchRFQReplyProgressStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RFQIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RFQId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>PurchRFQTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RFQId</MapField>
					<MapFieldTo>RFQId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RFQType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatusHigh</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatusLow</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemBuyerGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DlvTerm</MapField>
					<MapFieldTo>DlvTerm</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Payment</MapField>
					<MapFieldTo>Payment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DlvMode</MapField>
					<MapFieldTo>DlvMode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymMode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AddressRefTableId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AddressRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Dimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InclTax</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LanguageId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent</MapField>
					<MapFieldTo>DiscPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CashDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Requester</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExpiryDateTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsSealed</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>VendCurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DlvMode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<SourceEDT>VendDlvModeId</SourceEDT>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DlvTerm</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTerm</Name>
					<SourceEDT>VendDlvTermId</SourceEDT>
					<Field>DlvTerm</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymTerm</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<SourceEDT>VendPaymTermId</SourceEDT>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchRFQReplyTable</Name>
			<RelatedTable>PurchRFQReplyTable</RelatedTable>
			<RelatedTableRole>PurchRFQReplyTable</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<NavigationPropertyMethodNameOverride>PurchRFQTableRelation</NavigationPropertyMethodNameOverride>
			<RelatedTable>PurchRFQTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchRFQReplyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFQId</Name>
					<SourceEDT>PurchRFQId</SourceEDT>
					<Field>RFQId</Field>
					<RelatedField>RFQId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RFQIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>