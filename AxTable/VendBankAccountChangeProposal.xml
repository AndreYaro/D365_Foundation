<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendBankAccountChangeProposal</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendBankAccountChangeProposal extends common
{



}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record.
    /// </summary>
    /// <param name="_vendBankAccountRecId">
    /// The recId of the <c>VendBankAccount</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>VendBankAccountChangeProposal</c> table; otherwise, an empty record.
    /// </returns>
    [Hookable(false)]
    public static VendBankAccountChangeProposal findOrCreate(VendBankAccountRefRecId _vendBankAccountRecId, boolean _forUpdate = false)
    {
        VendBankAccountChangeProposal result;

        if (_vendBankAccountRecId)
        {
            result.selectForUpdate(_forUpdate);

            select firstonly result
                where result.VendBankAccount == _vendBankAccountRecId;
                
            if (!result.RecId)
            {
                ttsbegin;
                result.initValue();
                result.IsAutogenerated = NoYes::No;
                result.VendBankAccount = _vendBankAccountRecId;                
                result.insert();
                ttscommit;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateAutoGenerated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates an auto generated record.
    /// </summary>
    /// <param name="_vendBankAccountRecId">
    /// The recId of the <c>VendBankAccount</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>VendBankAccountChangeProposal</c> table; otherwise, an empty record.
    /// </returns>
    [Hookable(false)]
    public static VendBankAccountChangeProposal findOrCreateAutoGenerated(VendBankAccountRefRecId _vendBankAccountRecId, boolean _forUpdate = false)
    {
        VendBankAccountChangeProposal result;

        if (_vendBankAccountRecId)
        {
            result.selectForUpdate(_forUpdate);

            select firstonly result
                where result.VendBankAccount == _vendBankAccountRecId;
                
              
            if (result.RecId && result.IsAutogenerated == NoYes::No)
            {
                throw error("@AccountsPayable:VendBankAccountChangeProposal_CannotCreateAutogenerated");
            }
        
            if (!result.RecId)
            {
                ttsbegin;
                result.initValue();
                result.IsAutogenerated = NoYes::Yes;
                result.VendBankAccount = _vendBankAccountRecId;
                result.insert();
                ttscommit;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendBankAccountRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns a record in this table corresponding to the provided vendor bank account.
    /// </summary>
    /// <param name = "_vendBankAccountRecId">The reference to a <c>VendBankAccount</c> record.</param>
    /// <param name = "_forUpdate">A boolean value indicating whether the record should be selected for updating.</param>
    /// <returns>The found record.</returns>
    [Hookable(false)]
    public static VendBankAccountChangeProposal findByVendBankAccountRecId(
        VendBankAccountRefRecId _vendBankAccountRecId, 
        boolean _forUpdate = false)
    {
        VendBankAccountChangeProposal proposal;

        if (_vendBankAccountRecId)
        {
            proposal.selectForUpdate(_forUpdate);

            select firstonly proposal 
                where proposal.VendBankAccount == _vendBankAccountRecId;
        }

        return proposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existVendBankAccountRefRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean existVendBankAccountRefRecId(VendBankAccountRefRecId _recId)
    {
        return (select firstonly RecId from vendBankAccountChangeProposal
            where vendBankAccountChangeProposal.VendBankAccount == _recId
            ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFlagsForChangedFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the flags marking a change for each field that has been modified.
    /// </summary>
    protected void setFlagsForChangedFields()
    {
        if (this.Name != this.orig().Name)
        {
            this.IsChangedName = NoYes::Yes;
        }
        if (this.AccountID != this.orig().AccountID)
        {
            this.IsChangedAccountID = NoYes::Yes;
        }
        if (this.AccountNum != this.orig().AccountNum)
        {
            this.IsChangedAccountNum = NoYes::Yes;
        }
        if (this.ActiveDate != this.orig().ActiveDate)
        {
            this.IsChangedActiveDate = NoYes::Yes;
        }
        if (this.BankGroupID != this.orig().BankGroupID)
        {
            this.IsChangedBankGroupID = NoYes::Yes;
        }
        if (this.BankIBAN != this.orig().BankIBAN)
        {
            this.IsChangedBankIBAN = NoYes::Yes;
        }
        if (this.CurrencyCode != this.orig().CurrencyCode)
        {
            this.IsChangedCurrencyCode = NoYes::Yes;
        }
        if (this.ExpiryDate != this.orig().ExpiryDate)
        {
            this.IsChangedExpiryDate = NoYes::Yes;
        }
        if (this.RegistrationNum != this.orig().RegistrationNum)
        {
            this.IsChangedRegistrationNum = NoYes::Yes;
        }
        if (this.SWIFTNo != this.orig().SWIFTNo)
        {
            this.IsChangedSWIFTNo = NoYes::Yes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFlagForChangedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the flag marking a change for a specific field.
    /// </summary>
    /// <param name = "_controlledField">The field that needs to be marked as changed.</param>
    public void setFlagForChangedField(VendBankAccountChangeProposalFields _controlledField)
    {
        switch (_controlledField)
        {
            case VendBankAccountChangeProposalFields::AccountID :
                this.IsChangedAccountID = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::AccountNum :
                this.IsChangedAccountNum = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::ActiveDate :
                this.IsChangedActiveDate = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::ExpiryDate :
                this.IsChangedExpiryDate = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::BankGroupID :
                this.IsChangedBankGroupID = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::CurrencyCode :
                this.IsChangedCurrencyCode = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::BankIBAN :
                this.IsChangedBankIBAN = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::Name :
                this.IsChangedName = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::RegistrationNum :
                this.IsChangedRegistrationNum = NoYes::Yes;
                break;
            case VendBankAccountChangeProposalFields::SWIFTNo :
                this.IsChangedSWIFTNo = NoYes::Yes;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts values to keep track of changes and executes the update.
    /// </summary>
    public void update()
    {
        this.setFlagsForChangedFields();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRecordUnchanged</Name>
				<Source><![CDATA[
    public boolean isRecordUnchanged()
    {
        return
            !( this.IsChangedAccountID
            || this.IsChangedAccountNum
            || this.IsChangedActiveDate
            || this.IsChangedExpiryDate
            || this.IsChangedBankGroupID
            || this.IsChangedCurrencyCode
            || this.IsChangedBankIBAN
            || this.IsChangedName
            || this.IsChangedRegistrationNum
            || this.IsChangedSWIFTNo
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteIfRecordUnchanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record if it does not contain any active changes to apply.
    /// </summary>
    [Hookable(false)]
    public void deleteIfRecordUnchanged()
    {
        if (this.isRecordUnchanged())
        {
            this.delete();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsChangedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value to the isChanged fields of a <c>VendBankAccountChangeProposal</c> record
    /// </summary>
    /// <param name = "_isChangedField">The flag that will be updated.</param>
    /// <param name = "_isChanged">The value of the flag.</param>
    public void setIsChangedField(
        FieldId _isChangedField, 
        VendTableChangeProposalIsFieldChanged _isChanged)
    {
        ttsbegin;
        if(this.RecId)
        {
            this.(_isChangedField) = _isChanged;
            this.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:VendBankAccountProposal_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@AccountsPayable:TableTitle_VendorBankAccountChangeProposal</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Worksheet</TableGroup>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Vendor</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedAccountNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendBankAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegistrationNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SWIFTNo</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SWIFTNo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankIBAN</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>BankIBAN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankGroupID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ActiveDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountActiveDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpiryDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountExpiryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedAccountID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedRegistrationNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedSWIFTNo</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedBankIBAN</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedCurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedBankGroupID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedActiveDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsChangedExpiryDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountChangeProposalIsFieldChanged</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsAutogenerated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasic</ConfigurationKey>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendBankAccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendBankAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendBankAccount</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendBankAccount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendBankAccount</Name>
					<SourceEDT>VendBankAccountRefRecId</SourceEDT>
					<Field>VendBankAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>