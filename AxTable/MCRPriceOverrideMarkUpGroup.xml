<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPriceOverrideMarkUpGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRPriceOverrideMarkUpGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>roleName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the related role.
    /// </summary>
    /// <returns>
    /// The name of the related role.
    /// </returns>
    public display name roleName()
    {
        SecurityRole securityRole;

        select firstonly Name from securityRole
            where securityRole.AotName == this.Role;

        return securityRole.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = ret && MCRPriceOverrideMarkUpGroup::validateMiscChargeDecreasePercent(
           this.MiscChargeOverrideDecreasePercent);

        ret = ret && MCRPriceOverrideMarkUpGroup::validateMiscChargeIncreasePercent(
            this.MiscChargeOverrideIncreasePercent);

        ret = ret && MCRPriceOverrideMarkUpGroup::validateDiscPercent(
            this.DiscPercentOverride);

        ret = ret && MCRPriceOverrideMarkUpGroup::validateCostMarkupPercent(
            this.CostMarkUpPercent);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRoleValidForOverride</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if user is authorized for the override.
    /// </summary>
    /// <param name="_roleRefRecId">
    /// The role to which the user is assigned.
    /// </param>
    /// <param name="_percent">
    /// The override percentage.
    /// </param>
    /// <param name="_fieldID">
    /// The <c>FieldID</c> that the override is related to.
    /// </param>
    /// <param name="_marginPrice">
    /// The margin price of the override.
    /// </param>
    /// <returns>
    /// true if the override is valid; otherwise, false.
    /// </returns>
    public static boolean isRoleValidForOverride(SysSecurityRoleRecId   _roleRefRecId,
                                                    real                _percent,
                                                    FieldID             _fieldID,
                                                    real                _marginPrice = 0)
    {
        boolean percentIsValid = true;
        boolean marginPriceIsValid = true;
        MCRPriceOverrideMarkUpGroup  mcrPriceOverrideMarkupGroups;

        percentIsValid = MCRPriceOverrideMarkUpGroup::validatePercent(_percent);

        if (percentIsValid)
        {
            if (_fieldId == fieldNum(MCRPriceOverrideMarkUpGroup,DiscPercentOverride))
            {
                select firstonly RecId from mcrPriceOverrideMarkupGroups
                    where mcrPriceOverrideMarkupGroups.RoleRefRecID == _roleRefRecId
                        && mcrPriceOverrideMarkupGroups.(_fieldId) >= _percent;
            }
            else if (_fieldId == fieldNum(MCRPriceOverrideMarkUpGroup,CostMarkUpPercent))
            {
                marginPriceIsValid = MCRPriceOverrideMarkUpGroup::validatePercent(_marginPrice);
                if (marginPriceIsValid)
                {
                    select firstonly PriceOverrideCost, CostMarkUpPercent, RecId from mcrPriceOverrideMarkupGroups
                        where mcrPriceOverrideMarkupGroups.RoleRefRecID == _roleRefRecId
                        && (mcrPriceOverrideMarkupGroups.PriceOverrideCost == MCRPriceOverrideCosts::ItemCost
                            && mcrPriceOverrideMarkupGroups.CostMarkUpPercent <= _percent)
                        || (mcrPriceOverrideMarkupGroups.PriceOverrideCost == MCRPriceOverrideCosts::MarginCost
                            && mcrPriceOverrideMarkupGroups.CostMarkUpPercent <= _marginPrice);
                }
            }
        }
        return percentIsValid && mcrPriceOverrideMarkupGroups.RecId != 0 && marginPriceIsValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUserAllowedModifyMiscCharge</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds PriceOverrideMarkupGroup based on auth group fields.
    /// </summary>
    /// <param name="_percent">
    /// The cost markup percent associated with the price override markup group
    /// </param>
    /// <param name="_roleRefRecId">
    /// User role associated to the price override markup group.
    /// </param>
    /// <returns>
    /// true if user is allowed to modify a miscellaneous charge; otherwise, false,
    /// </returns>
    /// <remarks>
    /// The <c>MiscChargeOverridePercent</c> is the value that the user may go up to;
    /// as in the percent value that can be taken off the miscellaneous charge.
    /// </remarks>
    public static boolean isUserAllowedModifyMiscCharge(MCRCostMarkUpPercent _percent, SysSecurityRoleRecId _roleRefRecId)
    {
        boolean ret = false;
        MCRPriceOverrideMarkUpGroup  mcrPriceOverrideMarkUpGroup;

        if (_roleRefRecId)
        {
            //misc charge is being decreased
            if (_percent >= 0)
            {
                //See if a price override mark up group record exist for misc charge percent and auth group
                select firstonly RecId from mcrPriceOverrideMarkUpGroup
                    where mcrPriceOverrideMarkUpGroup.MiscChargeOverrideDecreasePercent >= _percent
                        && mcrPriceOverrideMarkUpGroup.RoleRefRecID == _roleRefRecId;
            }
            else if (_percent < 0)
            {
                //increase misc charge
                //See if a price override mark up group record exist for misc charge percent and auth group
                select firstonly RecId from mcrPriceOverrideMarkUpGroup
                    where mcrPriceOverrideMarkUpGroup.MiscChargeOverrideIncreasePercent >= abs(_percent)
                        && mcrPriceOverrideMarkUpGroup.RoleRefRecID == _roleRefRecId;
            }
        }

        if (mcrPriceOverrideMarkUpGroup)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCostMarkupPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed <c>MCRCostMarkupPercent</c> is valid.
    /// </summary>
    /// <param name="_pct">
    /// The <c>MCRCostMarkupPercent</c> value to be validated.
    /// </param>
    /// <returns>
    /// true if the <c>MCRCostMarkupPercent</c> value is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The <c>MCRCostMarkupPercent</c> value is not allowed to be negative.
    /// </remarks>
    public static boolean validateCostMarkupPercent(MCRCostMarkupPercent _pct)
    {
        boolean ret;

        if (_pct < 0)
        {
            ret = checkFailed("@MCR12083");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed <c>SalesEndDiscPct</c> is valid.
    /// </summary>
    /// <param name="_discPct">
    /// The <c>SalesEndDiscPct</c> value to be validated.
    /// </param>
    /// <returns>
    /// true if the <c>SalesEndDiscPct</c> value is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The <c>SalesEndDiscPct</c> value is not allowed to be negative.
    /// </remarks>
    public static boolean validateDiscPercent(SalesEndDiscPct _discPct)
    {
        boolean ret;

        if (_discPct < 0)
        {
            ret = checkFailed("@MCR11962");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMiscChargeDecreasePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed <c>MCRMiscChargeOverridePercent</c> is valid.
    /// </summary>
    /// <param name="_pct">
    /// The <c>MCRMiscChargeOverridePercent</c> value to be validated.
    /// </param>
    /// <returns>
    /// true if the <c>MCRMiscChargeOverridePercent</c> value is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The <c>MCRMiscChargeOverridePercent</c> value is not allowed to be negative.
    /// The <c>MCRMiscChargeOverridePercent</c> value can not be greater than 100%.
    /// </remarks>
    public static boolean validateMiscChargeDecreasePercent(MCRMiscChargeOverridePercent _pct)
    {
        boolean ret;

        if (_pct < 0)
        {
            ret = checkFailed("@MCR11962");
        }
        else if (_pct > 100)
        {
            ret = checkFailed("@MCR24032");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMiscChargeIncreasePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed <c>MCRMiscChargeOverridePercent</c> is valid.
    /// </summary>
    /// <param name="_pct">
    /// The <c>MCRMiscChargeOverridePercent</c> value to be validated.
    /// </param>
    /// <returns>
    /// true if the <c>MCRMiscChargeOverridePercent</c> value is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The <c>MCRMiscChargeOverridePercent</c> value is not allowed to be negative.
    /// The <c>MCRMiscChargeOverridePercent</c> value can not be greater than 100%.
    /// </remarks>
    public static boolean validateMiscChargeIncreasePercent(MCRMiscChargeOverridePercent _pct)
    {
        boolean ret;

        if (_pct < 0)
        {
            ret = checkFailed("@MCR11962");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the passed percentage is valid.
    /// </summary>
    /// <param name="_percent">
    /// The percentage value to be validated.
    /// </param>
    /// <returns>
    /// true if the percentage value is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The percentage value is not allowed to be negative.
    /// </remarks>
    public static boolean validatePercent(real _percent)
    {
        boolean ret;

        if (_percent < 0)
        {
            ret = checkFailed("@MCR11962");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@MCR10740</DeveloperDocumentation>
	<FormRef>MCRPriceOverrideMarkUpGroup</FormRef>
	<Label>@MCR10740</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Role</TitleField1>
	<TitleField2>CostMarkUpPercent</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>MCRPriceOverrideMarkUpGroup</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>MCRPriceOverrideMarkUpGroup</PrimaryIndex>
	<ReplacementKey>MCRPriceOverrideMarkUpGroup</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostMarkUpPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideDecreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddMiscCharges</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscPercentOverride</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Role</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoleRefRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AddMiscCharges</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostMarkUpPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscPercentOverride</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideDecreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideIncreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceOverrideCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Role</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoleRefRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MiscChargeOverridePercent</Name>
			<Label>@MCR11193</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideDecreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideIncreasePercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PriceOverrideMarkUpGroup</Name>
			<Label>@MCR11961</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostMarkUpPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideDecreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddMiscCharges</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscPercentOverride</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeOverrideIncreasePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Role</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoleRefRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AddMiscCharges</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR11196</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostMarkUpPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRCostMarkupPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscPercentOverride</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRSalesEndDiscPctOverride</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MiscChargeOverrideDecreasePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMiscChargeOverridePercent</ExtendedDataType>
			<Label>@MCR24024</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MiscChargeOverrideIncreasePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMiscChargeOverridePercent</ExtendedDataType>
			<Label>@MCR24026</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceOverrideCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceOverrideCosts</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Role</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS75182</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RoleRefRecID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysSecurityRoleRecId</ExtendedDataType>
			<Label>@MCR35892</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MCRPriceOverrideMarkUpGroup</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Role</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RoleRefRecID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SecurityRole</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SecurityRole</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoleRefRecID</Name>
					<Field>RoleRefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>