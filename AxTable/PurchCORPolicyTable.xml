<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCORPolicyTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchCORPolicyTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchCORPolicyTable, LegalEntityCode) :
                if (this.LegalEntityCode == TableAll::All)
                {
                    this.LegalEntityRelation = '';
                }
                break;

            case fieldNum(PurchCORPolicyTable, CategoryCode) :
                if (this.CategoryCode == TableAll::All)
                {
                    this.CategoryRelation = 0;
                }
                break;

            case fieldNum(PurchCORPolicyTable, VendorCode) :
                if (this.VendorCode == TableAll::All)
                {
                    this.VendorRelation             = '';
                    this.VendorRelationDataAreaId   = '';
                }
                break;

            case fieldNum(PurchCORPolicyTable, VendorRelation) :
                this.VendorRelationDataAreaId = this.VendorRelation ? appl.company().dataArea(tableNum(VendTable)) : '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.LegalEntityCode == TableAll::Table && this.LegalEntityRelation == '')
            {
                ret = checkFailed(strFmt("@SYS116347", fieldId2pname(tableNum(PurchCORPolicyTable), fieldNum(PurchCORPolicyTable, LegalEntityRelation))));
            }

            if (this.CategoryCode == TableAll::Table && this.CategoryRelation == 0)
            {
                ret = checkFailed(strFmt("@SYS116347", fieldId2pname(tableNum(PurchCORPolicyTable), fieldNum(PurchCORPolicyTable, CategoryRelation))));
            }

            if (this.VendorCode == TableAll::Table && this.VendorRelation == '')
            {
                ret = checkFailed(strFmt("@SYS116347", fieldId2pname(tableNum(PurchCORPolicyTable), fieldNum(PurchCORPolicyTable, VendorRelation))));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>decentralized</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Check if the purchase order line should be central or decentralized delivered.
    /// </summary>
    /// <param name="_purchLine">
    ///    A <c>PurchLine</c> record to check.
    /// </param>
    /// <returns>
    ///    <c>true</c> if the purchase order should be decentralized delivered; otherwise false.
    /// </returns>
    static boolean decentralized(PurchLine  _purchLine)
    {
        if (_purchLine.PurchaseType != PurchaseType::Purch)
        {
            return false;
        }

        if (!_purchLine.Requester || !DirPersonUserEx::findWorker(_purchLine.Requester).RecId)
        {
            return false;
        }

        if (PurchParameters::find().Include3wayMatch == NoYes::Yes &&
            _purchLine.MatchingPolicy != PurchMatchingPolicyOption::ThreeWayMatch)
        {
            return false;
        }

        if (PurchCORPolicyTable::findPolicy(_purchLine))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record from the <c>PurchCORPolicyTable</c> table using the record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The unique identifier for which to search.
    /// </param>
    /// <param name="_update">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record from the <c>PurchCORPolicyTable</c> table.
    /// </returns>
    static PurchCORPolicyTable find(RecId _recId, boolean _update = false)
    {
        PurchCORPolicyTable policyTable;

        policyTable.selectForUpdate(_update);

        select firstonly policyTable
            where policyTable.RecId == _recId;

        return policyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDecentralizedDeliveryLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a logistic location ID from the <c>PurchReqLine</c> or <c>HcmWorkerTitle</c> table that is
    /// based on the actual PO line.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> record with a requestor and delivery date.
    /// </param>
    /// <returns>
    /// A record from the <c>Address</c> table.
    /// </returns>
    static LogisticsLocationRecId findDecentralizedDeliveryLocation(PurchLine _purchLine)
    {
        // PurchReqLine location is the highest priority
        LogisticsLocationRecId location = PurchCORPolicyTable::findPurchReqLocation(_purchLine);

        if (!location)
        {
            // If PurchReqLine location doesn't exist then use Requester location
            location = PurchCORPolicyTable::findRequesterLocation(_purchLine);
        }

        return location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>PurchCORPolicyTable</c> table by using a record in a table that is mapped
    /// to the <c>SalesPurchLine</c> map.
    /// </summary>
    /// <param name="_salesPurchLine">
    /// A record in a table that is mapped to the <c>SalesPurchLine</c> map that has a <c>VendAccount</c>
    /// value and an optional <c>ProcurementCategory</c> value.
    /// </param>
    /// <returns>
    /// A record from the <c>PurchCORPolicyTable</c> table.
    /// </returns>
    /// <remarks>
    /// The sort order is important because it makes sure that the table relation is found first.
    /// </remarks>
    static PurchCORPolicyTable findPolicy(SalesPurchLine _salesPurchLine)
    {
        SalesPurchLineInterface salesPurchLineInterface = _salesPurchLine.salesPurchLineInterface();
        PurchCORPolicyTable policyTable;
        SelectableDataArea  legalEntityDataAreaId    = salesPurchLineInterface.legalEntityDataAreaId();
        SelectableDataArea  vendorRelationDataAreaId = appl.company(legalEntityDataAreaId).dataArea(tableNum(VendTable));

        select firstonly policyTable
            order by LegalEntityCode, CategoryCode, VendorCode
            where ( policyTable.LegalEntityCode                == TableAll::Table
                    && policyTable.CategoryCode                == TableAll::Table
                    && policyTable.VendorCode                  == TableAll::Table
                    && policyTable.LegalEntityRelation         == legalEntityDataAreaId
                    && policyTable.CategoryRelation            == salesPurchLineInterface.parmCategoryId()
                    && policyTable.VendorRelation              == salesPurchLineInterface.parmVendorOrderAccount()
                    && policyTable.VendorRelationDataAreaId    == vendorRelationDataAreaId)

                  || ( policyTable.LegalEntityCode       == TableAll::Table
                    && policyTable.CategoryCode          == TableAll::Table
                    && policyTable.LegalEntityRelation   == legalEntityDataAreaId
                    && policyTable.CategoryRelation      == salesPurchLineInterface.parmCategoryId()
                    && policyTable.VendorCode            == TableAll::All)

                  || ( policyTable.LegalEntityCode             == TableAll::Table
                    && policyTable.LegalEntityRelation         == legalEntityDataAreaId
                    && policyTable.CategoryCode                == TableAll::All
                    && policyTable.VendorCode                  == TableAll::Table
                    && policyTable.VendorRelation              == salesPurchLineInterface.parmVendorOrderAccount()
                    && policyTable.VendorRelationDataAreaId    == vendorRelationDataAreaId)

                  || ( policyTable.LegalEntityCode       == TableAll::Table
                    && policyTable.LegalEntityRelation   == legalEntityDataAreaId
                    && policyTable.CategoryCode          == TableAll::All
                    && policyTable.VendorCode            == TableAll::All)

                  || ( policyTable.LegalEntityCode             == TableAll::All
                    && policyTable.CategoryCode                == TableAll::Table
                    && policyTable.VendorCode                  == TableAll::Table
                    && policyTable.CategoryRelation            == salesPurchLineInterface.parmCategoryId()
                    && policyTable.VendorRelation              == salesPurchLineInterface.parmVendorOrderAccount()
                    && policyTable.VendorRelationDataAreaId    == vendorRelationDataAreaId)

                  || ( policyTable.LegalEntityCode       == TableAll::All
                    && policyTable.CategoryCode          == TableAll::Table
                    && policyTable.CategoryRelation      == salesPurchLineInterface.parmCategoryId()
                    && policyTable.VendorCode            == TableAll::All)

                  || ( policyTable.LegalEntityCode             == TableAll::All
                    && policyTable.CategoryCode                == TableAll::All
                    && policyTable.VendorCode                  == TableAll::Table
                    && policyTable.VendorRelation              == salesPurchLineInterface.parmVendorOrderAccount()
                    && policyTable.VendorRelationDataAreaId    == vendorRelationDataAreaId)

                  || ( policyTable.LegalEntityCode       == TableAll::All
                    && policyTable.CategoryCode          == TableAll::All
                    && policyTable.VendorCode            == TableAll::All);

        return policyTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchReqLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record ID from the <c>PurchReqLine</c> table that is based on the actual PO line.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> record with a requestor and delivery date.
    /// </param>
    /// <returns>
    /// A record from the <c>Address</c> table.
    /// </returns>
    static LogisticsLocationRecId findPurchReqLocation(PurchLine _purchLine)
    {
        PurchReqLine purchReqLine;

        if (_purchLine.PurchReqLineRefId)
        {
            select firstonly DeliveryPostalAddress from purchReqLine
            where purchReqLine.LineRefId == _purchLine.PurchReqLineRefId;
        }

        return LogisticsPostalAddress::locationRecIdFromAddressRecId(purchReqLine.DeliveryPostalAddress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRequesterLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record ID from the <c>HcmWorkerTitle</c> table that is based on the actual PO line.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> record with a requestor and delivery date.
    /// </param>
    /// <returns>
    /// A record from the <c>Address</c> table.
    /// </returns>
    static LogisticsLocationRecId findRequesterLocation(PurchLine _purchLine)
    {
        HcmWorker hcmWorker = HcmWorker::find(_purchLine.Requester);
        return HcmWorkerTitle::findByWorker(hcmWorker.RecId).Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCentralizedDeliveryLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the location on the purchase order line using centralized delivery.
    /// </summary>
    /// <param name="_purchLine">
    ///    A <c>PurchLine</c> record of which to update the address.
    /// </param>
    static void setCentralizedDeliveryLocation(PurchLine _purchLine)
    {
        if (_purchLine.InventDimId)
        {
            _purchLine.setAddressFromInventDim(_purchLine.inventDim());
        }
        else
        {
            _purchLine.setAddressFromPurchTable(_purchLine.purchTable());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the location on the purchase order line, depending on the purchase of central or
    ///    decentralized delivery.
    /// </summary>
    /// <param name="_purchLine">
    ///    A <c>PurchLine</c> record of which to update the address.
    /// </param>
    /// <param name="_decentralized">
    ///    A Boolean value that indicates whether the purchase order line should be central or decentralized
    ///    delivered.
    /// </param>
    static void setLocation(PurchLine _purchLine, boolean _decentralized)
    {
        LogisticsLocationRecId decentralizedLocation;

        if (_decentralized)
        {
            decentralizedLocation = PurchCORPolicyTable::findDecentralizedDeliveryLocation(_purchLine);
        }

        if (decentralizedLocation)
        {
            _purchLine.setLocation(decentralizedLocation);
        }
        else
        {
            PurchCORPolicyTable::setCentralizedDeliveryLocation(_purchLine);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS325273</DeveloperDocumentation>
	<FormRef>PurchCORPolicyTable</FormRef>
	<Label>@SYS301319</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>VendorRelation</TitleField1>
	<TitleField2>LegalEntityRelation</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PolicyIdx</ClusteredIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>PolicyIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CategoryCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCORCategoryCode</ExtendedDataType>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCategory</ExtendedDataType>
			<Label>@SYS11718</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LegalEntityCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCORLegalEntityCode</ExtendedDataType>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LegalEntityRelation</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PurchCORLegalEntityRelation</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendorCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCORVendorCode</ExtendedDataType>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCORVendorRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorRelationDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendorRelationDataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LegalEntityIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LegalEntityCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendorIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PolicyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LegalEntityCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntityRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelationDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CategoryRelation_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategory_PurchCORPolicyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryRelation</Name>
					<Field>CategoryRelation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LegalEntityDataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LegalEntityDataArea</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchCORPolicyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntityRelation</Name>
					<Field>LegalEntityRelation</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorRelationDataAreaId</Name>
					<Field>VendorRelationDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorRelation</Name>
					<SourceEDT>PurchCORVendorRelation</SourceEDT>
					<Field>VendorRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>