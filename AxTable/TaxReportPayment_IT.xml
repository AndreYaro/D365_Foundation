<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportPayment_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxReportPayment_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
public static boolean checkExist(TaxPeriod _taxPeriod, EndDate _endDate )
    {
        boolean ret = true;

        if (!TaxReportPayment_IT::exist(_taxPeriod, _endDate))
        {
            ret = checkFailed(strfmt(TaxReportPayment_IT::txtNotExist(), _taxPeriod, _endDate));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
public static boolean exist(TaxPeriod _taxPeriod, EndDate _endDate )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxReportPayment_IT
                 where
                     taxReportPayment_IT.TaxPeriod == _taxPeriod &&
                    taxReportPayment_IT.EndDate == _endDate).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxReportPayment_IT</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>TaxReportPayment_IT</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxReportPayment_IT</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxReportPayment_IT find(
        RecId              _recId,
        boolean            _forUpdate        = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReportPayment_IT taxReportPayment;

        taxReportPayment.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReportPayment.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxReportPayment
            where taxReportPayment.RecId == _recId;

        return taxReportPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxPeriod</Name>
				<Source><![CDATA[
        public static TaxReportPayment_IT findByTaxPeriod(
        TaxPeriod        _taxPeriod,
        EndDate          _endDate,
        boolean          _forupdate        = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReportPayment_IT taxReportPayment;

        taxReportPayment.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReportPayment.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxReportPayment
            where
            taxReportPayment.TaxPeriod == _taxPeriod &&
                    taxReportPayment.EndDate == _endDate;

        return taxReportPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrevious</Name>
				<Source><![CDATA[
static TaxReportPayment_IT  findPrevious(TaxPeriod  _taxPeriod,
                                             EndDate    _endDate)
    {
        TaxReportPayment_IT  taxReportPayment_IT;

        if (_taxPeriod && _endDate)
        {
            select firstonly taxReportPayment_IT
               order by EndDate desc
               where taxReportPayment_IT.TaxPeriod  == _taxPeriod  &&
                      taxReportPayment_IT.EndDate    < _endDate;
        }
        return taxReportPayment_IT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS103308";
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the next period record in the <c>TaxReportPayment_IT</c> table.
    /// </summary>
    /// <param name = "_taxPeriod">
    /// The tax period of the <c>TaxReportPayment_IT</c> record to find.
    /// </param>
    /// <param name = "_endDate">
    /// The end date of the <c>TaxReportPayment_IT</c> record to find.
    /// </param>
    /// <param name = "_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A next period record in the <c>TaxReportPayment_IT</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxReportPayment_IT findNext(TaxPeriod  _taxPeriod,
                                         EndDate    _endDate,
                                         boolean    _forupdate = false)
    {
        TaxReportPayment_IT taxReportPayment_IT;

        taxReportPayment_IT.selectForUpdate(_forupdate);

        if (_taxPeriod && _endDate)
        {
            select firstonly taxReportPayment_IT
               order by EndDate asc
               where taxReportPayment_IT.TaxPeriod == _taxPeriod &&
                     taxReportPayment_IT.EndDate > _endDate;
        }
        return taxReportPayment_IT;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>IT</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123547</DeveloperDocumentation>
	<Label>@SYS79254</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>EndDate</TitleField1>
	<TitleField2>TaxPeriod</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DateIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVATCredit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATCompensation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVATDebit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPrePayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPaymentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankRef1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankRef2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVATCredit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATCompensation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVATDebit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPrePayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPaymentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankRef1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankRef2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankRef1</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>BankReference_IT</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankRef2</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>BankReference_IT</ExtendedDataType>
			<Label>@SYS76500</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PaymentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS16653</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrevVATCredit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75094</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrevVATDebit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75101</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxPeriod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75104</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATCompensation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75102</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATPaymentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75096</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATPrePayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS75103</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EndDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxPeriod</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>BankAccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxPeriodHead</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxPeriodHead</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxPeriod</Name>
					<SourceEDT>TaxPeriod</SourceEDT>
					<Field>TaxPeriod</Field>
					<RelatedField>TaxPeriod</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxPeriodIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>