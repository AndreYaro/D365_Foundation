<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInfocodeTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInfocodeTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>infocodeDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves a description of the reason code.
    /// </summary>
    /// <param name="_languageId">
    ///     The ID of a language for which a description is retrieved.
    /// </param>
    /// <returns>
    ///     A description of the reason code.
    /// </returns>
    display public client server Description infocodeDescription(LanguageId _languageId = SystemParameters::getSystemLanguageId())
    {
        return RetailInfocodeTranslation::getDescriptionOrDefaultDescription(this.RecId, _languageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>infocodePrompt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a Prompt of the reason code.
    /// </summary>
    /// <param name="_languageId">
    /// The ID of a language for which a description is retrieved.
    /// </param>
    /// <returns>
    /// A Prompt of the reason code.
    /// </returns>
    display public client server RetailInfocodePrompt infocodePrompt(LanguageId _languageId = SystemParameters::getSystemLanguageId())
    {
        return RetailInfocodeTranslation::findByInfocodeLanguage(this.RecId, _languageId).prompt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the value for the field <c>RandomFactor</c> for the new record of <c>RetailInfocodeTable</c>.
    /// </summary>
    public void initValue()
    {
        super();

        this.RandomFactor = 100.00;
    }

]]></Source>
			</Method>
			<Method>
				<Name>infocode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the reference to the base table.
    /// </summary>
    /// <returns>Returns the reference to the base table.</returns>
    public RetailInfocode infocode()
    {
        return RetailInfocode::findByInfocodeId(this.infocodeId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSubCodeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>InputType</c> field is <c>RetailInfocodeInputType::SubCode</c> or <c>RetailInfocodeInputType::SubcodeButtons</c>.
    /// </summary>
    /// <returns>
    /// true when <c>InputType</c> is <c>RetailInfocodeInputType::SubCode</c> or <c>RetailInfocodeInputType::SubcodeButtons</c>; otherwise, false.
    /// </returns>
    public boolean isSubCodeType()
    {
        return (this.inputType == RetailInfocodeInputType::SubCode ||
                this.inputType == RetailInfocodeInputType::SubcodeButtons);
    }

]]></Source>
			</Method>
			<Method>
				<Name>randomTrue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the value of the <c>RandomCounter</c> field.
    /// </summary>
    /// <returns>
    /// A Boolean value which indicates whether the value has been reset.
    /// </returns>
    /// <remarks>
    /// Updates the value of the <c>RandomCounter</c> field.
    /// </remarks>
    public boolean randomTrue()
    {
        RetailInfocodeTable    infocodeTable;
        boolean ret;

        ttsbegin;

        infocodeTable = RetailInfocodeTable::find(this.InfocodeId, true);
        infocodeTable.RandomCounter += infocodeTable.RandomFactor;

        if (infocodeTable.RandomCounter > 99)
        {
            infocodeTable.RandomCounter -= 100;
            ret = true;
        }

        infocodeTable.doUpdate();
        this.RandomCounter = infocodeTable.RandomCounter;

        ttscommit;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a record in <c>RetailInfocodeTable</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is updated into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// Throws an error if minimum value is greater than maximum value.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// Throws an error if minimum length is greater than maximum length.
    /// </exception>
    public void update()
    {
        if (this.MinimumValue > this.MaximumValue)
        {
            throw error("@RET3964");
        }

        if (this.MinimumLength > this.MaximumLength)
        {
            throw error("@RET3965");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id which is to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Calls methods <c>validateInputType</c>, <c>validateRandomFactor</c> to validate fields <c>InputType</c>, <c>Randomfactor</c> respectively.
    /// Also checks if the value for field <c>MaximumLength</c> is greater than 100, if yes throws an error.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldNum(RetailInfocodeTable, InputType):
                ret = this.validateInputType();
                break;
            case fieldNum(RetailInfocodeTable, RandomFactor):
                ret = this.validateRandomFactor();
                break;
            case fieldNum(RetailInfocodeTable, MaximumLength):
                if (this.MaximumLength > 100)
                {
                    ret = checkFailed("@RET5248");
                } else if ((this.InputType == RetailInfocodeInputType::Numeric) 
                    && (this.MaximumLength > 10))
                {
                    ret = checkFailed(strFmt("@Retail:RetailInfoCodeMaxLength", '10'));
				}
                break;
            case fieldNum(RetailInfocodeTable, maximumValue):
                // Max value for numeric should <= intMax, mPOS only accept int32.
                if ((this.InputType == RetailInfocodeInputType::Numeric)
                    && (this.maximumValue > intMax()))
                {
                    ret = checkFailed(strFmt("@Retail:RetailInfoCodeMaxValue", int2Str(intMax())));
                }
                break;
            case fieldNum(RetailInfocode, Activity):
                ret = this.validateActivity();
                break;

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInputType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the field <c>InputType</c> is valid.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If the <c>InputType</c> is not of type SubCode and if some subcodes exists for the same, then checks that the value cannot be changed.
    /// </remarks>
    public boolean validateInputType()
    {
        RetailInformationSubcodeTable  subcodeTable;
        boolean ret = true;

        if (!this.isSubCodeType())
        {
            select firstonly subcodeTable
            where subcodeTable.InfocodeId == this.InfocodeId;

            if (subcodeTable)
            {
                ret = checkFailed(strFmt("@RET4226", fieldPName(RetailInfocodeTable, InputType)));
            }
        }

        if ( !(this.InputType == RetailInfocodeInputType::None || this.InputType == RetailInfocodeInputType::Numeric) )
        {
            this.MinimumValue = 0;
            this.MinimumLength = 0;
            this.MaximumValue = 0;
            this.MaximumLength = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRandomFactor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>RandomFactor</c> field.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Checks if the value of the field is between 0 and 100.
    /// </remarks>
    public boolean validateRandomFactor()
    {
        boolean ret = true;

        if (this.RandomFactor < 0 || this.RandomFactor > 100)
        {
            ret = checkFailed("@RET4475");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>RetailInfocodeTable</c> table exists.
    /// </summary>
    /// <param name="_infocodeId">
    ///    The info code number.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RetailInfocodeId _infocodeId)
    {
        RetailInfocodeTable retailInfocodeTable;

        return  _infocodeId
            &&  (select firstonly RecId
                    from retailInfocodeTable
                    where retailInfocodeTable.infocodeId == _infocodeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInfocodeTable</c> table.
    /// </summary>
    /// <param name="_infocodeId">
    /// The info code number.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInfocodeTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInfocodeTable find(RetailInfocodeId _infocodeId, boolean _forUpdate = false)
    {
        RetailInfocodeTable    infocodeTable;

        if (_infocodeId)
        {
            infocodeTable.selectForUpdate(_forUpdate);

            select firstonly infocodeTable
                index hint infocodeIdx
                where infocodeTable.InfocodeId == _infocodeId;
        }

        return infocodeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the field <c>Activity</c> is valid.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    private boolean validateActivity()
    {
        RetailInformationSubcodeTable  subcodeTable;
        boolean ret = true;

        if (this.infocode().Activity == RetailInfocodeActivityType::OrderFulfillment)
        {
            this.MinimumValue = 0;
            this.MinimumLength = 0;
            this.MaximumValue = 0;
            this.MaximumLength = 0;
            this.RandomCounter = 0;
            this.RandomFactor = 100;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260689</DeveloperDocumentation>
	<FormRef>RetailInfocodeTable</FormRef>
	<Label>@RET3089</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>infocodeId</TitleField1>
	<TitleField2>description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>infocodeIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>infocodeIdx</PrimaryIndex>
	<ReplacementKey>infocodeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailInfocodeGroupSpecific</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>
      </Relation>
			<Table>RetailInfocodeGroupSpecific</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailInfocodeTableSpecific</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>
      </Relation>
			<Table>RetailInfocodeTableSpecific</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailInformationSubcodeTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>
      </Relation>
			<Table>RetailInformationSubcodeTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inputType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>infocodeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>printPromptOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>printInputOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>printInputNameOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>randomCounter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@RET4777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Handheld</Name>
			<Label>@RET1575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailUseInfocode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET4778</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Input</Name>
			<Label>@RET4779</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inputType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inputRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>oncePerTransaction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>prompt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isMultiLineText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Interval</Name>
			<Label>@RET4780</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>randomFactor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Linking</Name>
			<Label>@RET3091</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>linkedInfocodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prompt</Name>
			<Label>@RET3092</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>prompt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Values</Name>
			<Label>@RET4781</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>minimumValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maximumValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>minimumLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maximumLength</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>infocodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>inputRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInputRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>inputType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailInfocodeInputType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>linkedInfocodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeIdBase</ExtendedDataType>
			<Label>@RET3090</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>maximumLength</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maximumValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaximumValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>minimumLength</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MinimumLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>minimumValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMinimumValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>oncePerTransaction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOncePerTransaction</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>printInputNameOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPrintInputNameOnReceipt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>printInputOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPrintInputOnReceipt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>printPromptOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPrintPromptOnReceipt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>prompt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodePrompt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>randomCounter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRandomCounter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>randomFactor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRandomFactorPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailUseInfocode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailUseInfocode</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintDescriptionOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPrintDescriptionOnReceipt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>isMultiLineText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@KB4346809:InfoCodeMultilineInput</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>infocodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>infocodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInfocode</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailInfocode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>infocodeId</Name>
					<Field>infocodeId</Field>
					<RelatedField>infocodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InfocodeIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInfocodeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailInfocode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InfocodeTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InfocodeTable_RetailInfocodeTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>linkedInfocodeId</Name>
					<SourceEDT>RetailInfocodeIdBase</SourceEDT>
					<Field>linkedInfocodeId</Field>
					<RelatedField>infocodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InfocodeIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>