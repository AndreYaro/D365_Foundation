<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDiscountValidationPeriod</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailDiscountValidationPeriod extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isMondayEnabled</Name>
				<Source><![CDATA[
    internal boolean isMondayEnabled()
    {
        return this.mondayStartingTime || this.mondayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTuesdayEnabled</Name>
				<Source><![CDATA[
    internal boolean isTuesdayEnabled()
    {
        return this.thuesdayStartingTime || this.thuesdayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWednesdayEnabled</Name>
				<Source><![CDATA[
    internal boolean isWednesdayEnabled()
    {
        return this.wednesdayStartingTime || this.wednesdayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isThursdayEnabled</Name>
				<Source><![CDATA[
    internal boolean isThursdayEnabled()
    {
        return this.thursdayStartingTime || this.thursdayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFridayEnabled</Name>
				<Source><![CDATA[
    internal boolean isFridayEnabled()
    {
        return this.fridayStartingTime || this.fridayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSaturdayEnabled</Name>
				<Source><![CDATA[
    internal boolean isSaturdayEnabled()
    {
        return this.saturdayStartingTime || this.saturdayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSundayEnabled</Name>
				<Source><![CDATA[
    internal boolean isSundayEnabled()
    {
        return this.sundayStartingTime || this.sundayEndingTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFridayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if friday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if friday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailFridayBound isFridayBound()
    {
        boolean ret;

        if (this.FridayStartingTime || this.FridayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMondayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if monday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if monday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailMondayBound isMondayBound()
    {
        boolean ret;

        if (this.MondayStartingTime || this.MondayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSaturdayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if saturday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if saturday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailSaturdayBound isSaturdayBound()
    {
        boolean ret;

        if (this.SaturdayStartingTime || this.SaturdayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSundayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if sunday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if sunday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailSundayBound isSundayBound()
    {
        boolean ret;

        if (this.SundayStartingTime || this.SundayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isThuesdayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if tuesday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if tuesday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailThuesdayBound isThuesdayBound()
    {
        boolean ret;

        if (this.ThuesdayStartingTime || this.ThuesdayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isThursdayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if thursday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if thursday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailThursdayBound isThursdayBound()
    {
        boolean ret;

        if (this.ThursdayStartingTime || this.ThursdayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWednesdayBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if wednesday-specific discount validation period data is filled in.
    /// </summary>
    /// <returns>
    /// True if wendesday-specific discount validation period data is filled in.
    /// </returns>
    [SysObsolete('This display method is no longer used. RetailDiscountValidationPeriod is using isXXXEnabled() from the data source.', false, 09\01\2024)]
    display RetailWednesdayBound isWednesdayBound()
    {
        boolean ret;

        if (this.WednesdayStartingTime || this.WednesdayEndingTime)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the start date is on or before the end date.
    /// </summary>
    /// <returns>True if start date is before end date or either start or end date is not set; false otherwise</returns>
    private boolean validateDate()
    {
        boolean ret = true;
        if (this.ValidFrom && this.ValidTo)
        {
            if (this.ValidFrom > this.ValidTo)
            {
                ret = checkFailed("@RetailPricing:DiscountPeriodEndDateBeforeStartDateErrorMessage");
            }
            if (this.validFrom == this.validTo && this.endingTimeAfterMidnight)
            {
                ret = checkFailed("@RetailPricing:DiscountPeriodEndDateOnStartDateWhenEndsAfterMidnightErrorMessage");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean recordExist;

        recordExist = (select firstonly retailPeriodicDiscount
               where retailPeriodicDiscount.ValidationPeriodId == this.periodId).RecId != 0;

        if (recordExist)
        {
            return checkFailed("@RET5814"); // Cannot delete the record
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the startTime and endTime are well formed. If they are both populated, i.e. nonzero, then they should not be equal,
    /// as that is meaningless for specifying some time range for which a discount should apply. Start time is allowed to be after end time
    /// in the case of an end time after midnight.
    /// </summary>
    /// <param name = "startTime">Starting time to validate.</param>
    /// <param name = "endTime">Ending time to validate.</param>
    /// <returns>True if at least one of start and end time is zero, or if both are nonzero and non equal. False otherwise</returns>
    private boolean validateTime(TimeOfDay startTime, TimeOfDay endTime)
    {
        boolean ret = true;
        if (startTime && endTime)
        {
            if (startTime == endTime)
            {
                ret = checkFailed("@Retail:BoundsMustBeUnique");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTimeForBounds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates time within bounds in the context of start and end times.
    /// </summary>
    /// <param name = "timeWithinBounds">Value of Time Within bounds to validate.</param>
    /// <param name = "startTime">Start time to validate.</param>
    /// <param name = "endTime">End time to validate.</param>
    /// <returns>True if time within bounds is false, or if it is true and start and end time are not equal. False otherwise.</returns>
    private boolean validateTimeForBounds(boolean timeWithinBounds, TimeOfDay startTime, TimeOfDay endTime)
    {
        boolean ret = true;
        if (timeWithinBounds)
        {
            if (startTime == endTime)
            {
                if (startTime == 0)
                {
                    ret = checkFailed("@Retail:DiscountPeriodInvalid");
                }
                else
                {
                    // This should not be reached if data is only manipulated via UI, as validateTime should have been triggered.
                    // Nevertheless it is good to ensure the well formedness of data enforced by this check.
                    ret = checkFailed("@Retail:BoundsMustBeUnique");
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAfterMidnight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the end time and start time.
    /// </summary>
    /// <param name="_startingTime">
    /// The starting time of the discount.
    /// </param>
    /// <param name="_endingTime">
    /// The ending time of the discount.
    /// </param>
    /// <param name="_endingTimeAfterMidnight">
    /// A Boolean value which indicates whether the ending time is after midnight.
    /// </param>
    /// <returns>
    /// true if start time occurs before end time with the ending time is before midnight, or
    /// if start time occurs after end time and the ending time is after midnight; otherwise, false.
    /// </returns>
    boolean validateAfterMidnight(RetailStartingTime _startingTime, RetailEndingTime _endingTime, boolean _endingTimeAfterMidnight)
    {
        boolean ret = true;

        if ((_startingTime > _endingTime) && !_endingTimeAfterMidnight && hasGUI() && Box::yesNo("@RET3959",DialogButton::No) == DialogButton::No)
        {
            ret = checkFailed("@RET3960");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the start time and end time of the discount for each day.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id value of the field to be validated.
    /// </param>
    /// <returns>
    /// true if the start and end date of discounts are valid for all the discount periods; otherwise, false.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldNum(RetailDiscountValidationPeriod, ValidFrom):
            case fieldNum(RetailDiscountValidationPeriod, ValidTo):
                ret = this.validateDate();
                break;
            case fieldNum(RetailDiscountValidationPeriod, TimeWithinBounds):
                ret = this.validateTimeForBounds(this.TimeWithinBounds, this.StartingTime, this.EndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, StartingTime):
            case fieldNum(RetailDiscountValidationPeriod, EndingTime):
                ret = this.validateTime(this.StartingTime, this.EndingTime) && this.validateAfterMidnight(this.StartingTime, this.EndingTime, this.EndingTimeAfterMidnight);
                if (ret)
                {
                    this.endingTimeAfterMidnight = this.startingTime > this.endingTime;
                    ret = this.validateDate();
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, MondayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.MondayTimeWithinBounds, this.MondayStartingTime, this.MondayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, ThuesdayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.ThuesdayTimeWithinBounds, this.ThuesdayStartingTime, this.ThuesdayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, WednesdayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.WednesdayTimeWithinBounds, this.WednesdayStartingTime, this.WednesdayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, ThursdayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.ThursdayTimeWithinBounds, this.ThursdayStartingTime, this.ThursdayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, FridayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.FridayTimeWithinBounds, this.FridayStartingTime, this.FridayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, SaturdayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.SaturdayTimeWithinBounds, this.SaturdayStartingTime, this.SaturdayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, SundayTimeWithinBounds):
                ret = this.validateTimeForBounds(this.SundayTimeWithinBounds, this.SundayStartingTime, this.SundayEndingTime);
                break;
            case fieldNum(RetailDiscountValidationPeriod, MondayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, MondayEndingTime):
                // Check if time is well formed, and then check if time after midnight should be set.
                ret = this.validateTime(this.MondayStartingTime, this.MondayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.MondayStartingTime, this.MondayEndingTime, this.MondayEndingTimeAfterMidnight);
                    this.mondayEndingTimeAfterMidnight = ret ? this.mondayStartingTime > this.mondayEndingTime : this.mondayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, ThuesdayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, ThuesdayEndingTime):
                ret = this.validateTime(this.ThuesdayStartingTime, this.ThuesdayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.ThuesdayStartingTime, this.ThuesdayEndingTime, this.ThuesdayEndingTimeAfterMidnight);
                    this.thuesdayEndingTimeAfterMidnight = ret ? this.thuesdayStartingTime > this.thuesdayEndingTime : this.thuesdayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, WednesdayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, WednesdayEndingTime):
                ret = this.validateTime(this.WednesdayStartingTime, this.WednesdayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.WednesdayStartingTime, this.WednesdayEndingTime, this.WednesdayEndingTimeAfterMidnight);
                    this.wednesdayEndingTimeAfterMidnight = ret ? this.wednesdayStartingTime > this.wednesdayEndingTime : this.wednesdayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, ThursdayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, ThursdayEndingTime):
                ret = this.validateTime(this.ThursdayStartingTime, this.ThursdayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.ThursdayStartingTime, this.ThursdayEndingTime, this.ThursdayEndingTimeAfterMidnight);
                    this.thursdayEndingTimeAfterMidnight = ret ? this.thursdayStartingTime > this.thursdayEndingTime : this.thursdayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, FridayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, FridayEndingTime):
                ret = this.validateTime(this.FridayStartingTime, this.FridayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.FridayStartingTime, this.FridayEndingTime, this.FridayEndingTimeAfterMidnight);
                    this.fridayEndingTimeAfterMidnight = ret ? this.fridayStartingTime > this.fridayEndingTime : this.fridayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, SaturdayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, SaturdayEndingTime):
                ret = this.validateTime(this.SaturdayStartingTime, this.SaturdayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.SaturdayStartingTime, this.SaturdayEndingTime, this.SaturdayEndingTimeAfterMidnight);
                    this.saturdayEndingTimeAfterMidnight = ret ? this.saturdayStartingTime > this.saturdayEndingTime : this.saturdayEndingTimeAfterMidnight;
                }
                break;
            case fieldNum(RetailDiscountValidationPeriod, SundayStartingTime):
            case fieldNum(RetailDiscountValidationPeriod, SundayEndingTime):
                ret = this.validateTime(this.SundayStartingTime, this.SundayEndingTime);
                if (ret)
                {
                    ret = this.validateAfterMidnight(this.SundayStartingTime, this.SundayEndingTime, this.SundayEndingTimeAfterMidnight);
                    this.sundayEndingTimeAfterMidnight = ret ? this.sundayStartingTime > this.sundayEndingTime : this.sundayEndingTimeAfterMidnight;
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailDiscountValidationPeriod</c> table.
    /// </summary>
    /// <param name="_periodId">
    /// The discount period number of the discount validation period.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailDiscountValidationPeriod</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailDiscountValidationPeriod find(RetailDiscountValidationPeriodId _periodId, boolean _forUpdate = false)
    {
        RetailDiscountValidationPeriod discountValidationPeriod;

        if (_periodId)
        {
            discountValidationPeriod.selectForUpdate(_forUpdate);

            select firstonly discountValidationPeriod
                index hint periodIdx
                where discountValidationPeriod.PeriodId == _periodId;
        }

        return discountValidationPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the discount validation period.
    /// </summary>
    /// <param name="_periodId">
    /// The discount period number.
    /// </param>
    /// <returns>
    /// The name of the discount validation period.
    /// </returns>
    public static Description name(RetailDiscountValidationPeriodId _periodId)
    {
        return RetailDiscountValidationPeriod::find(_periodId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriodValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editPeriodValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.timeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.timeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.timeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMondayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editMondayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.mondayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.mondayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.mondayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editTuesdayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editTuesdayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.thuesdayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.thuesdayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.thuesdayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editWednesdayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editWednesdayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.wednesdayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.wednesdayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.wednesdayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editThursdayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editThursdayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.thursdayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.thursdayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.thursdayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFridayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editFridayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.fridayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.fridayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.fridayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSaturdayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editSaturdayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.saturdayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.saturdayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.saturdayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSundayValidityPeriod</Name>
				<Source><![CDATA[
    internal edit RetailDiscountValidityPeriodType editSundayValidityPeriod(boolean _set, RetailDiscountValidityPeriodType value)
    {
        if (_set)
        {
            switch (value)
            {
                case RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange:
                    this.sundayTimeWithinBounds = NoYes::Yes;
                    break;
                case RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange:
                    this.sundayTimeWithinBounds = NoYes::No;
                    break;
            }
        }

        switch (this.sundayTimeWithinBounds)
        {
            case NoYes::No:
                return RetailDiscountValidityPeriodType::OutsideSpecifiedTimeRange;
            default:
                return RetailDiscountValidityPeriodType::WithinSpecifiedTimeRange;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040255</DeveloperDocumentation>
	<FormRef>RetailDiscountValidationPeriod</FormRef>
	<Label>@RET3075</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>periodId</TitleField1>
	<TitleField2>name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>periodIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>periodIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailPeriodicDiscount</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RetailPeriodicDiscount</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>periodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DatesWithinBounds</Name>
			<Label>@RET3076</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>isMondayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isThuesdayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isWednesdayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isThursdayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isFridayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isSaturdayBound</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>isSundayBound</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DiscountPeriod</Name>
			<Label>@RET3077</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>periodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FridayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fridayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fridayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fridayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fridayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MondayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>mondayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mondayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mondayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mondayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>startingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>endingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>timeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>endingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SaturdayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>saturdayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>saturdayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>saturdayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>saturdayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SundayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sundayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sundayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sundayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sundayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThuesdayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>thuesdayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thuesdayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thuesdayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thuesdayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThursdayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>thursdayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thursdayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thursdayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>thursdayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>validFromTo</Name>
			<Label>@SYS124336</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>validFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>validTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WednesdayPeriod</Name>
			<Label>@RET3078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>wednesdayStartingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wednesdayEndingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wednesdayTimeWithinBounds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wednesdayEndingTimeAfterMidnight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>endingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>endingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>fridayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>fridayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>fridayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>fridayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>mondayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>mondayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>mondayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>mondayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>periodId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountValidationPeriodId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>saturdayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>saturdayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>saturdayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>saturdayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>startingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>sundayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>sundayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>sundayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>sundayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>thuesdayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>thuesdayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>thuesdayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>thuesdayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>thursdayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>thursdayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>thursdayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>thursdayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>timeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>validFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>validTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>wednesdayEndingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>wednesdayEndingTimeAfterMidnight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTimeAfterMidnight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>wednesdayStartingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>wednesdayTimeWithinBounds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWithinBounds</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>periodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>periodId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>