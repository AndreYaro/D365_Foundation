<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WorkPeriodTemplateLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WorkPeriodTemplateLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether there is a next <c>WorkPeriodTemplateLine</c> record for the same period
    /// template.
    /// </summary>
    /// <returns>
    /// true if there is a next line; otherwise, false.
    /// </returns>
    public boolean hasNext()
    {
        WorkPeriodTemplateLine  workPeriodTemplateLine;

        select firstonly RecId from workPeriodTemplateLine
            where workPeriodTemplateLine.PeriodTemplate == this.PeriodTemplate
               && workPeriodTemplateLine.LineNumber     >  this.LineNumber;

        return workPeriodTemplateLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasPrev</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether there is a previous <c>WorkPeriodTemplateLine</c> record for the same period
    /// template.
    /// </summary>
    /// <returns>
    /// true if there is a previous line; otherwise, false.
    /// </returns>
    public boolean hasPrev()
    {
        WorkPeriodTemplateLine  workPeriodTemplateLine;

        select firstonly RecId from workPeriodTemplateLine
            where workPeriodTemplateLine.PeriodTemplate == this.PeriodTemplate
               && workPeriodTemplateLine.LineNumber     <  this.LineNumber;

        return workPeriodTemplateLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPeriodDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>periodDescription</c> field to a proposed text which the user later can modify.
    /// </summary>
    public void initPeriodDescription()
    {
        if (this.RecId)
        {
            return;
        }

        switch (this.Period)
        {
            case DayWeekMonthQuarterYear::Day :
                if (! this.ExplodePeriods && this.NumberOfPeriods >1)
                {
                    this.PeriodDescription = "@SYS53184";
                }
                else
                {
                    this.PeriodDescription = "@SYS82282";
                }
                break;

            case DayWeekMonthQuarterYear::Week :
                if (! this.ExplodePeriods && this.NumberOfPeriods >1)
                {
                    this.PeriodDescription = "@SYS132201";
                }
                else
                {
                    this.PeriodDescription = "@SYS132202";
                }
                break;

            case DayWeekMonthQuarterYear::Month :
                if (! this.ExplodePeriods && this.NumberOfPeriods >1)
                {
                    this.PeriodDescription = "@SYS132203";
                }
                else
                {
                    this.PeriodDescription = "@SYS132204";
                }
                break;

            case DayWeekMonthQuarterYear::Quarter :
                this.PeriodDescription = "@SYS132203";
                break;

            case DayWeekMonthQuarterYear::Year :
                if (! this.ExplodePeriods && this.NumberOfPeriods >1)
                {
                    this.PeriodDescription = "@SYS132205";
                }
                else
                {
                    this.PeriodDescription = "@SYS132206";
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.NumberOfPeriods = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return new SysTableExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WorkPeriodTemplateLine, PeriodDescription):
                this.initPeriodDescription();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
        [fieldNum(WorkPeriodTemplateLine, PeriodDescription),
                [fieldNum(WorkPeriodTemplateLine, Period), fieldNum(WorkPeriodTemplateLine, ExplodePeriods), fieldNum(WorkPeriodTemplateLine, NumberOfPeriods)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Replaces all placeholders in the <c>periodDescription</c> text field to actual text.
    /// </summary>
    /// <param name="_startDate">
    ///    A date that contains a start date.
    /// </param>
    /// <param name="_endDate">
    ///    A date that contains an end date.
    /// </param>
    /// <param name="_startDateOrEndDate">
    ///    A date that contains a start date or an end date.
    /// </param>
    /// <returns>
    ///    A string with all of the placeholders converted to real values.
    /// </returns>
    /// <remarks>
    ///    Example: The field <c>periodDescription</c> contains the text "Week %3". The placeholder %3 will be
    ///    replaced with the actual week number based on the start date. If the week number is 33 then this
    ///    method will return the string "Week 33".
    /// </remarks>
    public Description periodDescription(
        date _startDate,
        date _endDate,
        date _startDateOrEndDate)
    {
        PreferredLocale preferredLocale = (new xSession()).PreferredLocale();
        return strFmt(this.PeriodDescription,
                      dayName(dayOfWk(_startDate)),                 // %1 start day name
                      dayName(dayOfWk(_endDate)),                   // %2 end day name
                      dayName(dayOfWk(_startDateOrEndDate)),        // %3 direction-based day name
                      int2str(DateTimeUtil::getWeekOfYear(preferredLocale, _startDate)),              // %4 start week number
                      int2str(DateTimeUtil::getWeekOfYear(preferredLocale, _endDate)),                // %5 end week number
                      mthName(mthOfYr(_startDate)),                 // %6 start month name
                      mthName(mthOfYr(_endDate)),                   // %7 end month name
                      year(_startDate),                             // %8 start year name
                      year(_endDate));                              // %9 end year name
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates a field in a form or Web form when super is called.
    /// </summary>
    /// <param name="_fieldName">
    ///    A string value that contains the field name.
    /// </param>
    /// <param name="_arrayIndex">
    ///    An integer that contains the array index, applies only if the field has array elements.
    /// </param>
    /// <returns>
    ///    true if validation succeeded; otherwise false.
    /// </returns>
    /// <remarks>
    ///    System defined method provided as an event to apply logic before and after a field is modified.
    /// </remarks>
    public boolean validateFieldValue(
        fieldName _fieldName,
        int       _arrayIndex = 1)
    {
        #define.minNumberOfPeriods(1)
        #define.maxNumberOfPeriods(1000)

        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(WorkPeriodTemplateLine, NumberOfPeriods):
            if (   this.NumberOfPeriods < #minNumberOfPeriods
                || this.NumberOfPeriods > #maxNumberOfPeriods)
                {
                    ret = checkFailed(strFmt("@SYS95262",fieldId2pname(this.TableId,fieldName2id(this.TableId,_fieldName)),#minNumberOfPeriods,#maxNumberOfPeriods));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>WorkPeriodTemplateLine</c> table exists.
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _refRecId)
    {
        return    _refRecId
               && (select firstonly RecId from workPeriodTemplate
                      where workPeriodTemplate.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WorkPeriodTemplateLine</c> table.
    /// </summary>
    /// <param name="_refRecId">
    /// A value that contains the period template line record ID.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WorkPeriodTemplateLine</c> table; otherwise, an empty record.
    /// </returns>
    public static WorkPeriodTemplateLine find(
        RefRecId    _refRecId,
        boolean     _forupdate = false)
    {
        WorkPeriodTemplateLine  workPeriodTemplateLine;

        workPeriodTemplateLine.selectForUpdate(_forupdate);

        if (_refRecId)
        {
            select firstonly workPeriodTemplateLine
                where workPeriodTemplateLine.RecId == _refRecId;
        }

        return workPeriodTemplateLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS131676</DeveloperDocumentation>
	<Label>@SYS131130</Label>
	<SingularLabel>@SYS131677</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>PeriodTemplate</TitleField1>
	<TitleField2>Period</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>MasterPlanning</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>LineIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberOfPeriods</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExplodePeriods</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS80470</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberOfPeriods</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExplodePeriods</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExplodePeriods</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PeriodTemplateExplodePeriods</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfPeriods</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PeriodTemplateNumberOfPeriods</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Period</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PeriodTemplatePeriod</ExtendedDataType>
			<EnumType>DayWeekMonthQuarterYear</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PeriodDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PeriodTemplateDescription</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PeriodTemplate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PeriodTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkPeriodTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WorkPeriodTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PeriodTemplateHeader</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PeriodTemplateLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodTemplate</Name>
					<Field>PeriodTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>