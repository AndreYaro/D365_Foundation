<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStyleGroupTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailStyleGroupTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkStyleLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the number in bar code if the length differs from all codes in the current style group.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    /// The maximum length in bar code has been exceeded.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// A number mismatch in the bar code.
    /// </exception>
    void checkStyleLength()
    {
        RetailStyleGroupTrans   styleGroupTrans,styleGroupTrans2;
        int newLength, lengthOfOthers;
        str newNumber;

        select firstonly styleGroupTrans
        where   styleGroupTrans.StyleGroup == this.StyleGroup
        &&      styleGroupTrans.Style != this.Style;

        if (styleGroupTrans)
        {
            newLength = strLen(this.NoInBarcode);
            lengthOfOthers = strLen(styleGroupTrans.NoInBarcode);
            if ((newLength > lengthOfOthers) && (lengthOfOthers != 0))
            {
                if (Box::yesNo("@RET4068"
                + "@RET3935",
                DialogButton::Yes,"@RET4029","@RET3936") == DialogButton::Yes)
                {
                    ttsbegin;
                    while select forupdate styleGroupTrans2
                    where   styleGroupTrans2.StyleGroup == this.StyleGroup
                    &&      styleGroupTrans2.Style != this.Style
                    {
                        newNumber = strIns(styleGroupTrans2.NoInBarcode,subStr('0000000000',1,(newLength - strLen(styleGroupTrans2.NoInBarcode))),1);
                        styleGroupTrans2.NoInBarcode = newNumber;
                        styleGroupTrans2.update();
                        ttscommit;
                    }
                }
                else
                {
                    throw error(strFmt("@RET3937",lengthOfOthers));
                }
            }
            else
            {
                if (newLength < lengthOfOthers)
                {
                    throw error(strFmt("@RET4069",lengthOfOthers));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateVariantDescriptions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the variant descriptions for all variants of product masters in the StyleGroup.
    /// </summary>
    /// <remarks>
    ///     All existing variant descriptions related to the style group will be replaced.
    /// </remarks>
    public void generateVariantDescriptions()
    {
        EcoResProductMaster ecoResProductMaster;

        while select RecId from ecoResProductMaster
                where ecoResProductMaster.RetailStyleGroupId == this.StyleGroup
        {
            EcoResProductMaster::updateVariantDescriptions(ecoResProductMaster.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUpdateInventStyle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts or updates a record into the <c>EcoResProductMasterStyle</c> table.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    public boolean insertUpdateInventStyle()
    {
        EcoResProductMaster         ecoResProductMaster;
        EcoResStyle                 ecoResStyle;
        EcoResProduct               ecoResProduct;
        EcoResProductMasterStyle    ecoResProductMasterStyle;

        ttsbegin;

        while select RecId from ecoResProductMaster
                where ecoResProductMaster.RetailStyleGroupId == this.StyleGroup
        {
            // To check whether Style is existing or not into table EcoResProductMasterStyle for particular product.
            select firstonly RecId from ecoResProduct
                where ecoResProduct.RecId == ecoResProductMaster.RecId
                 join forupdate ecoResProductMasterStyle
                    where ecoResProductMasterStyle.StyleProductMaster == ecoResProduct.RecId
                 join Name, RecId from ecoResStyle
                    where ecoResStyle.RecId == ecoResProductMasterStyle.Style
                    &&    ecoResStyle.Name  == this.Style;

            if (ecoResProductMasterStyle.RecId)
            {
                this.populateStyleGroupProperties(ecoResProductMasterStyle);
                ecoResProductMasterStyle.update();
            }
            else
            {
                // to check whether style exist.
                select firstonly Name from ecoResStyle
                    where ecoResStyle.Name == this.Style;
                if (ecoResStyle)
                {
                    ecoResProductMasterStyle.clear();
                    RetailStyleGroupTrans::populateInventStyleProperties(ecoResProductMasterStyle, ecoResStyle, ecoResProductMaster);
                    this.populateStyleGroupProperties(ecoResProductMasterStyle);
                    ecoResProductMasterStyle.insert();
                }
            }
        }

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateStyleGroupProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the given <c>EcoResProductMasterStyle</c> record with the properties from <c>RetailStyleGroupTrans</c>.
    /// </summary>
    /// <param name = "_ecoResProductMasterStyle">The <c>EcoResProductMasterStyle</c> record to be updated.</param>
    public void populateStyleGroupProperties(EcoResProductMasterStyle _ecoResProductMasterStyle)
    {
        _ecoResProductMasterStyle.RetailWeight          = this.Weight;
        _ecoResProductMasterStyle.RetailDisplayOrder    = this.DisplayOrder;

        if (!_ecoResProductMasterStyle.noInBarcode)
        {
            _ecoResProductMasterStyle.noInBarcode = this.noInBarcode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInventStyleProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates an uninitialized <c>EcoResProductMasterStyle</c> record.
    /// </summary>
    /// <param name = "_ecoResProductMasterStyle">The <c>EcoResProductMasterStyle</c> record to be updated.</param>
    /// <param name = "_ecoResStyle">The <c>EcoResStyle</c> that referenced by the style group.</param>
    /// <param name = "_ecoResProductMaster">The <c>EcoResProductMaster</c> that the style belongs to.</param>
    public static void populateInventStyleProperties(
        EcoResProductMasterStyle    _ecoResProductMasterStyle,
        EcoResStyle                 _ecoResStyle,
        EcoResProductMaster         _ecoResProductMaster)
    {
        _ecoResProductMasterStyle.StyleProductDimensionAttribute    = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldNum(InventDim, InventStyleId));
        _ecoResProductMasterStyle.Style                             = _ecoResStyle.RecId;
        _ecoResProductMasterStyle.StyleProductMaster                = _ecoResProductMaster.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </summary>
    /// <remarks>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </remarks>
    public void renamePrimaryKey()
    {
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        System.Text.RegularExpressions.Match regExMatch;
        str expectedFormat = '^#[a-fA-F0-9]{6}$';

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailStyleGroupTrans, NoInBarcode))
        {
            ret = ret && this.validateNoInBarcode();
        }

        if (this.HexCode)
        {
            regExMatch = System.Text.RegularExpressions.Regex::Match(this.HexCode, expectedFormat);
            ret = regExMatch.get_Success();

            if (!ret)
            {
                ret = checkFailed("@Retail:RetailHexCodeValidationError");
            }

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNoInBarcode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the number in the bar code.
    /// </summary>
    /// <returns>
    /// true if the same <c>NoInBarcode</c> value is used for two different colors; otherwise, false.
    /// </returns>
    boolean validateNoInBarcode()
    {
        RetailStyleGroupTrans   styleGroupTrans;

        if (this.NoInBarcode != "")
        {
            select firstonly styleGroupTrans
            where   styleGroupTrans.StyleGroup == this.StyleGroup
            &&      styleGroupTrans.Style != this.Style
            &&      styleGroupTrans.NoInBarcode == this.NoInBarcode;

            if (styleGroupTrans)
            {
                return checkFailed(strfmt("@RET4070", this.Style));
            }

            this.checkStyleLength();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordHasChanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the record has changes.
    /// </summary>
    /// <returns>True if there are changes; otherwise, false.</returns>
    public boolean recordHasChanges()
    {
        return this.weight != this.orig().weight
            || this.DisplayOrder != this.orig().DisplayOrder
            || this.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInventStyle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a record from the <c>EcoResProductMasterColor</c> table for all products using the given color group.
    /// </summary>
    /// <param name="_styleGroupId">
    /// The <c>RetailStyleGroupId</c> value of the record to find.
    /// </param>
    /// <param name="_styleId">
    /// The <c>RetailStyleId</c> value of the record to find.
    /// </param>
    /// <returns>
    /// true if record found; otherwise false.
    /// </returns>
    public static boolean deleteInventStyle(RetailStyleGroupId _styleGroupId, RetailStyleId _styleId)
    {
        EcoResProductMaster         ecoResProductMaster;
        EcoResProduct               ecoResProduct;
        EcoResProductMasterStyle    ecoResProductMasterStyle;
        EcoResStyle                 ecoResStyle;

        while select RecId from ecoResProductMaster
            where ecoResProductMaster.RetailStyleGroupId == _styleGroupId
        {
            select firstonly RecId from ecoResProduct
                where ecoResProduct.RecId == ecoResProductMaster.RecId
                 join forupdate ecoResProductMasterStyle
                    where ecoResProductMasterStyle.StyleProductMaster == ecoResProduct.RecId
                 join Name, RecId from ecoResStyle
                    where ecoResStyle.RecId == ecoResProductMasterStyle.Style
                    &&    ecoResStyle.Name  == _styleId;

            if (ecoResProductMasterStyle)
            {
                if (ecoResProductMasterStyle.validateDelete())
                {
                    ecoResProductMasterStyle.delete();
                }
                else
                {
                    return false;
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>RetailStyleGroupTrans</c> table.
    /// </summary>
    /// <param name="_groupId">
    /// The <c>RetailStyleGroupId</c> value of the record to find.
    /// </param>
    /// <param name="_style">
    /// The <c>RetailStyleId</c> value of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailStyleGroupTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailStyleGroupTrans find(RetailStyleGroupId   _groupId,
                                          RetailStyleId _style,
                                          boolean _forUpdate = false)
    {
        RetailStyleGroupTrans  styleGroupTrans;

        if (_groupId && _style)
        {
            styleGroupTrans.selectForUpdate(_forUpdate);

            select firstonly styleGroupTrans
                index hint styleGroupIdIdx
                where   styleGroupTrans.StyleGroup == _groupId
                &&      styleGroupTrans.Style == _style;
        }

        return styleGroupTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailStyleGroupTrans</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The reference record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailStyleGroupTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailStyleGroupTrans findByRecId(RefRecId _recId,
                                                    boolean  _forUpdate = false)
    {
        RetailStyleGroupTrans    retailStyleGroupTrans;

        if (_recId)
        {
            retailStyleGroupTrans.selectForUpdate(_forUpdate);

            select firstOnly retailStyleGroupTrans
                where retailStyleGroupTrans.RecId == _recId;
        }

        return retailStyleGroupTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the record in <c>RetailStyleGroupTrans</c> table
    /// </summary>
    public void insert()
    {
        super();
    
        if (RetailMerchandisingKillSwitch::enableUpdateProductDimensionsInBatchJob())
        {
            RetailUpdateProductDimensionsWithVariantGroupsController::runFromStyleGroupTransTable(this.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailStyleGroupTrans</c> table
    /// </summary>
    public void update()
    {
        if (RetailMerchandisingKillSwitch::enableUpdateProductDimensionsInBatchJob() && this.recordHasChanges())
        {
            RetailUpdateProductDimensionsWithVariantGroupsController::runFromStyleGroupTransTable(this.RecId);
        }
    
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EcoResProductStyle</ConfigurationKey>
	<DeveloperDocumentation>@RET260904</DeveloperDocumentation>
	<Label>@RET3275</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>styleGroup</TitleField1>
	<TitleField2>style</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>styleGroupIdIdx</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>styleGroupIdIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>styleGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>style</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>styleGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>style</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>styleGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>style</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>noInBarcode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Barcode</Name>
			<Label>@RET3053</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>noInBarcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>styleGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>style</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Weight</Name>
			<Label>@RET3055</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DisplayOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDisplayOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>noInBarcode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNoInBarcode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>style</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStyleId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>styleGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStyleGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>RetailShortName</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Url</Name>
			<ExtendedDataType>MediaUrl</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HexCode</Name>
			<ExtendedDataType>RetailHexCode</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefinerGroup</Name>
			<ExtendedDataType>RetailRefinerGroup</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>styleGroupIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>styleGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>style</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>RetailDimensionGroupTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Dimension</MapField>
					<MapFieldTo>style</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DimensionGroup</MapField>
					<MapFieldTo>styleGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DisplayOrder</MapField>
					<MapFieldTo>DisplayOrder</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>noInBarcode</MapField>
					<MapFieldTo>noInBarcode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResStyle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>EcoResStyle</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>style</Name>
					<SourceEDT>RetailStyleId</SourceEDT>
					<Field>style</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStyleGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStyleGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>styleGroup</Name>
					<SourceEDT>RetailStyleGroupId</SourceEDT>
					<Field>styleGroup</Field>
					<RelatedField>styleGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>groupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>