<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanBoardTmpMessageBoard</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanBoardTmpMessageBoard extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addMessage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a new message to the message board, and deletes the oldest if the maximum number of messages
    ///    was reached.
    /// </summary>
    /// <param name="_type">
    ///    The type of the message to show: <c>KanbanBoardMessageType::Error</c>,
    ///    <c>KanbanBoardMessageType::Info</c>, or <c>Warning</c>.
    /// </param>
    /// <param name="_message">
    ///    The text to display to the user.
    /// </param>
    private void addMessage(KanbanBoardMessageType _type, str _message)
    {
        KanbanBoardTmpMessageBoard  kanbanBoardTmpMessageBoard;

        kanbanBoardTmpMessageBoard.setTmpData(this);
        // Insert the new message
        kanbanBoardTmpMessageBoard.MessageType = _type;
        kanbanBoardTmpMessageBoard.MessageText = _message;
        kanbanBoardTmpMessageBoard.insert();

        // If we went over the maximum of messages, delete the oldest
        select count(RecId) from kanbanBoardTmpMessageBoard;

        if (kanbanBoardTmpMessageBoard.RecId > kanbanBoardTmpMessageBoard.maxMessages())
        {
            select firstonly kanbanBoardTmpMessageBoard
                order by kanbanBoardTmpMessageBoard.CreatedDateTime;

            kanbanBoardTmpMessageBoard.delete();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears all existing messages.
    /// </summary>
    public void clearAll()
    {
        ttsBegin;
        delete_from this;
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>error</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a new error message to the message board.
    /// </summary>
    /// <param name="_message">
    ///    The text to display to the user.
    /// </param>
    public void error(str _message)
    {
        this.addMessage(KanbanBoardMessageType::Error, _message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>info</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a new information message to the message board.
    /// </summary>
    /// <param name="_message">
    ///    The text to display to the user.
    /// </param>
    public void info(str _message)
    {
        this.addMessage(KanbanBoardMessageType::Info, _message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxMessages</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the maximum number of messages that can be stored in the table without deleting old ones.
    /// </summary>
    /// <returns>
    ///    The maximum number of messages that can be stored in the table.
    /// </returns>
    public int maxMessages()
    {
        #define.MaxMessages(100)

        return #MaxMessages;
    }

]]></Source>
			</Method>
			<Method>
				<Name>messageTypeIcon</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Translates the message type of the row to an icon element resource.
    /// </summary>
    /// <returns>
    ///    An icon element that identifies the message type.
    /// </returns>
    display ImageRes messageTypeIcon()
    {
        ImageRes iconResource;

        #ResAppl

        switch (this.MessageType)
        {
            case KanbanBoardMessageType::Info:
                iconResource = #ImageInfo;
                break;

            case KanbanBoardMessageType::Warning:
                iconResource = #ImageWarning;
                break;

            case KanbanBoardMessageType::Error:
                iconResource = #ImageError;
                break;
        }

        return iconResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>warning</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a new warning message to the message board.
    /// </summary>
    /// <param name="_message">
    ///    The text to display to the user.
    /// </param>
    public void warning(str _message)
    {
        this.addMessage(KanbanBoardMessageType::Warning, _message);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<Label>@SYS134590</Label>
	<CreatedDateTime>Yes</CreatedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MessageText</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EventMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MessageType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>KanbanBoardMessageType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>