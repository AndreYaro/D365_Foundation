<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendReviewCriterionGroupRating</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendReviewCriterionGroupRating extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>VendReviewCriterionGroupRating</c> table.
    /// </summary>
    /// <param name="_criterionGroupRating">
    ///    The ID of the <c>VendReviewCriterionGroupRating</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _criterionGroupRating)
    {
        if (_criterionGroupRating && VendReviewCriterionGroupRating::exist(_criterionGroupRating))
            return true;

        return checkFailed(strfmt(VendReviewCriterionGroupRating::txtNotExist(), _criterionGroupRating));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>VendReviewCriterionGroupRating</c> table.
    /// </summary>
    /// <param name="_criterionGroupRating">
    ///    The ID of the <c>VendReviewCriterionGroupRating</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _criterionGroupRating)
    {
        return (VendReviewCriterionGroupRating::find(_criterionGroupRating).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendReviewCriterionGroupRating</c> table.
    /// </summary>
    /// <param name="_criterionGroupRating">
    ///    The ID of the <c>VendReviewCriterionGroupRating</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendReviewCriterionGroupRating</c> table; otherwise, an empty record.
    /// </returns>
    public static VendReviewCriterionGroupRating find(RefRecId _criterionGroupRating, boolean _forUpdate = false)
    {
        VendReviewCriterionGroupRating    vendReviewCriterionGroupRating = null;

        if (_criterionGroupRating)
        {
            vendReviewCriterionGroupRating.selectForUpdate(_forUpdate);
            select firstonly vendReviewCriterionGroupRating
                        where vendReviewCriterionGroupRating.RecId == _criterionGroupRating;
        }

        return vendReviewCriterionGroupRating;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendorCriterionGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified vendor and criterion group record in the <c>VendReviewCriterionGroupRating</c>
    ///    table.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    ///    The vendor account number of the <c>VendTable</c> record that is used as a filter.
    /// </param>
    /// <param name="_vendorDataAreaId">
    ///    The vendor company of the <c>VendTable</c> record that is used as a filter.
    /// </param>
    /// <param name="_criterionGroup">
    ///    The ID of the <c>VendReviewCriterionGroup</c> record that is used as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendReviewCriterionGroupRating</c> table; otherwise, an empty record.
    /// </returns>
    public static VendReviewCriterionGroupRating  findByVendorCriterionGroup(VendAccount _vendorAccountNumber, dataAreaId _vendorDataAreaId, RefRecId _criterionGroup, boolean _forUpdate = false)
    {
        VendReviewCriterionGroupRating    vendReviewCriterionGroupRating = null;

        vendReviewCriterionGroupRating.selectForUpdate(_forUpdate);
        select firstonly vendReviewCriterionGroupRating
            where vendReviewCriterionGroupRating.VendorAccountNumber == _vendorAccountNumber
                    && vendReviewCriterionGroupRating.VendorDataAreaId == _vendorDataAreaId
                        && vendReviewCriterionGroupRating.CriterionGroup == _criterionGroup;

        return vendReviewCriterionGroupRating;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS302890";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAverage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the average rating value for this criterion group.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    ///    The vendor account number of the <c>VendTable</c> record that is used as a filter.
    /// </param>
    /// <param name="_vendorDataAreaId">
    ///    The vendor company of the <c>VendTable</c> record that is used as a filter.
    /// </param>
    /// <param name="_criterionGroup">
    ///    The ID of the <c>VendReviewCriterionGroup</c> record that is used as a filter.
    /// </param>
    /// <remarks>
    ///    The average rating for the criterion group will be calculated by using the latest ratings that have
    ///    been provided for each criteria in the criterion group.Not Applicable and Unknown criterion ratings
    ///    will not be included for calculating the average.
    /// </remarks>
    public static void updateAverage(VendAccount _vendorAccountNumber, dataAreaId _vendorDataAreaId, RefRecId _criterionGroup)
    {
        VendReviewCriterionGroupRating vendReviewCriterionGroupRating;
        VendReviewCriterionRating      vendReviewCriterionRating;
        VendReviewCriterion            vendReviewCriterion;
        int64                          sumRating, totalRating;
        real                           averageRating = 0.0;
        utcdatetime                    transDateTime = DateTimeUtil::utcNow();

        vendReviewCriterionGroupRating = VendReviewCriterionGroupRating::findByVendorCriterionGroup(_vendorAccountNumber, _vendorDataAreaId, _criterionGroup, true);

        vendReviewCriterionGroupRating.VendorAccountNumber  = _vendorAccountNumber;
        vendReviewCriterionGroupRating.VendorDataAreaId     = _vendorDataAreaId;
        vendReviewCriterionGroupRating.CriterionGroup       = _criterionGroup;

        select validtimestate(transDateTime) sum(Rating), count(RecId) from vendReviewCriterionRating
            join RecId from vendReviewCriterion
                where vendReviewCriterionRating.Criterion == vendReviewCriterion.RecId
                    && vendReviewCriterionRating.VendorAccountNumber == _vendorAccountNumber
                    && vendReviewCriterionRating.VendorDataAreaId == _vendorDataAreaId
                    && vendReviewCriterionRating.Rating != VendReviewRatingScore::Unknown
                    && vendReviewCriterionRating.Rating != VendReviewRatingScore::NotApplicable
                    && vendReviewCriterion.CriterionGroup == _criterionGroup;

        sumRating   = vendReviewCriterionRating.Rating;
        totalRating = vendReviewCriterionRating.RecId;

        if (totalRating)
        {
            averageRating = (sumRating * 1.0)/totalRating;
            averageRating = round(averageRating, 0.5); //round it to nearest 0.5
        }

        ttsbegin;
            vendReviewCriterionGroupRating.AverageRating = averageRating;
            vendReviewCriterionGroupRating.write();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendReview</ConfigurationKey>
	<DeveloperDocumentation>@SYS312604</DeveloperDocumentation>
	<Label>@SYS312122</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>VendorAccountNumber</TitleField1>
	<TitleField2>CriterionGroup</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>VendorCriterionGroupIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AverageRating</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rating</Name>
			<Label>@SYS312090</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AverageRating</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AverageRating</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RealBase</ExtendedDataType>
			<Label>@SYS312093</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CriterionGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorAccountNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendorCriterionGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CriterionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendReviewCriterionGroupRating</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataAreaId</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>VendorDataAreaId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendReviewCriterionGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendReviewCriterionGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendReviewCriterionGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendReviewCriterionGroup_VendReviewCriterionGroupRating</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CriterionGroup</Name>
					<Field>CriterionGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendTable_VendReviewCriterionGroupRating</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataAreaId</Name>
					<Field>VendorDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorAccountNumber</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendorAccountNumber</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>