<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResAttributeValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResAttributeValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pcToXML</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Generates the XML representation of this record that is compatible with the product configuration.
    /// </summary>
    /// <param name="_xmlWriter">
    ///    The XML writer to use to store the XML representation of this record.
    /// </param>
    public void pcToXML(PCXmlWriter _xmlWriter)
    {
        #PC
        EcoResValue value;
        str         strValue;

        value = EcoResValue::find(this.Value);
        strValue = value.pcGetStringValue();
        if (strValue != '')
        {
            _xmlWriter.writeAttributeString(#valueAttribute, strValue);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueText</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the value data.
    /// </summary>
    /// <returns>
    ///    An instance of the attribute value text that represents the value.
    /// </returns>
    public display AttributeValueText valueText()
    {
        EcoResValue ecoResValue = EcoResValue::find(this.Value);
        AttributeValueText returnValue = ecoResValue.value();

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a record in the <c>EcoResAttributeValue</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if a record with the provided ID exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return (EcoResAttributeValue::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResAttributeValue</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A <c>EcoResAttributeValue</c> table record or an empty buffer.
    /// </returns>
    public static EcoResAttributeValue find(RefRecId _recId, boolean _forupdate = false)
    {
        EcoResAttributeValue record;

        if (!_recId)
        {
            return record;
        }
        record.selectForUpdate(_forupdate);
        select firstonly record where record.RecId == _recId;
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInstanceAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds EcoResAttributeValue for given EcoResInstanceValue and EcoResAttribute
    /// </summary>
    /// <param name="_instanceRecId">
    /// Instance record id value.
    /// </param>
    /// <param name="_attributeRecId">
    /// Attribute record id value.
    /// </param>
    /// <param name="_forupdate">
    /// Boolean value for update.
    /// </param>
    /// <returns>
    /// Requested EcoResAttributeValue record.
    /// </returns>
    public static EcoResAttributeValue findByInstanceAttribute(RefRecId _instanceRecId, RefRecId _attributeRecId, boolean _forupdate = false)
    {
        EcoResAttributeValue record;

        if (_instanceRecId && _attributeRecId)
        {
            record.selectForUpdate(_forupdate);
            select firstonly record where record.InstanceValue == _instanceRecId && record.Attribute == _attributeRecId;
        }

        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or initializes default EcoResAttributeValue for given EcoResInstanceValue and EcoResAttribute
    /// </summary>
    /// <param name="_instanceRecId">EcoResInstanceValue RecId</param>
    /// <param name="_attributeRecId">EcoResAttribute RecId</param>
    /// <param name="_attributeGroupAttribute">EcoResAttributeGroupAttribute; optional</param>
    /// <returns>RecId of requested EcoResAttributeValue</returns>
    public static EcoResAttributeValue findOrCreateDefault(RefRecId _instanceRecId, RefRecId _attributeRecId, EcoResAttributeGroupAttribute _attributeGroupAttribute = null)
    {
        EcoResAttributeValue attributeValue;
        RefRecId ecoResValueRecId;
        EcoResValue defaultGroupValue;

        select firstonly attributeValue
            where attributeValue.InstanceValue == _instanceRecId
               && attributeValue.Attribute == _attributeRecId
               && attributeValue.Value != 0;

        if (!attributeValue.RecId)
        {
            defaultGroupValue = EcoResValue::find(_attributeGroupAttribute.DefaultValue);

            if (defaultGroupValue.RecId)
            {
                ecoResValueRecId = defaultGroupValue.pcDuplicate();
            }
            else
            {
                ecoResValueRecId = ecoResValue::createDefaultValue(_attributeRecId);
            }

            if (ecoResValueRecId)
            {
                ttsBegin;
                attributeValue.InstanceValue = _instanceRecId;
                attributeValue.Attribute = _attributeRecId;
                attributeValue.Value = ecoResValueRecId;
                attributeValue.insert();
                ttsCommit;
            }
        }

        return attributeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefaultAttributeValueFromAttributeGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an attribute value record for the given product/attribute pair based on the default value specified in the attribute group if any.
    /// </summary>
    /// <param name = "_attributeRecId">The record ID of the attribute</param>
    /// <param name = "_productRecId">The record ID of the product</param>
    /// <returns>true if a default attribute value was found in an associated attribute group; otherwise, false.</returns>
    [Hookable(false)]
    internal static boolean createDefaultAttributeValueFromAttributeGroup(EcoResAttributeRecId _attributeRecId, EcoResProductRecId _productRecId)
    {
        EcoResCategory localEcoResCategory;
        ecoResProductCategory localEcoResProductCategory;
        EcoResCategoryAttributeLookup localEcoResCategoryAttributeLookup;
        EcoResCategoryHierarchyRole localEcoResCategoryHierarchyRole;

        select attributeGroupAttribute from localEcoResCategoryAttributeLookup
            join localEcoResCategory
                where localEcoResCategory.RecId == localEcoResCategoryAttributeLookup.Category
                    && localEcoResCategoryAttributeLookup.Attribute == _attributeRecId
            exists join localEcoResCategoryHierarchyRole
                where localEcoResCategoryHierarchyRole.CategoryHierarchy == localEcoResCategory.CategoryHierarchy
            exists join localEcoResProductCategory
                where localEcoResProductCategory.Category == localEcoResCategory.RecId
                    && localEcoResProductCategory.Product == _productRecId;

        if (localEcoResCategoryAttributeLookup.AttributeGroupAttribute)
        {
            EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute = EcoResAttributeGroupAttribute::find(localEcoResCategoryAttributeLookup.AttributeGroupAttribute);
            if (ecoResAttributeGroupAttribute.DefaultValue)
            {
                var newEcoResProductInstanceValue = EcoResProductInstanceValue::findByProduct(_productRecId);
                if (!newEcoResProductInstanceValue.RecId)
                {
                    newEcoResProductInstanceValue.Product = _productRecId;
                    newEcoResProductInstanceValue.insert();
                }

                EcoResAttributeValue::findOrCreateDefault(newEcoResProductInstanceValue.RecId, _attributeRecId, ecoResAttributeGroupAttribute);
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createValue</Name>
				<Source><![CDATA[
    internal static void createValue(
        EcoResValue     _newEcoResValue, 
        EcoResAttribute _ecoResAttribute, 
        EcoResProduct   _ecoResProduct)
    {
        ttsbegin;

        if (!_newEcoResValue)
        {
            // Create new EcoResValue record
            _newEcoResValue.insert();
        }

        if (!_ecoResProduct
            || !_ecoResAttribute)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        // Create EcoResProductInstanceValue record
        EcoResProductInstanceValue newEcoResProductInstanceValue = EcoResProductInstanceValue::findByProduct(_ecoResProduct.RecId);

        if (!newEcoResProductInstanceValue)
        {
            newEcoResProductInstanceValue.clear();
            newEcoResProductInstanceValue.Product = _ecoResProduct.RecId;
            newEcoResProductInstanceValue.insert();
        }

        // Create EcoResAttributeValue record
        EcoResAttributeValue newEcoResAttributeValue = EcoResAttributeValue::findByInstanceAttribute(newEcoResProductInstanceValue.RecId, _ecoResAttribute.RecId);
        if (!newEcoResAttributeValue)
        {
            newEcoResAttributeValue.clear();
            newEcoResAttributeValue.Value = _newEcoResValue.RecId;
            newEcoResAttributeValue.InstanceValue = newEcoResProductInstanceValue.RecId;
            newEcoResAttributeValue.Attribute = _ecoResAttribute.RecId;
            newEcoResAttributeValue.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS152875</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>EcoResAttributeValue</FormRef>
	<Label>@SYS127123</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Attribute</TitleField1>
	<TitleField2>InstanceValue</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EcoResValue</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EcoResValue</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstanceValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstanceValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Attribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS77030</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS152871</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS40283</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AttributeInstanceValue</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InstanceValue</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Attribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Value</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Value</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Value</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Attribute</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InstanceValue</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Attribute</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Attribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InstanceValue</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Value</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Attribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Attribute</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>Attribute_EcoResAttributeValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Attribute</Name>
					<Field>Attribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InstanceValue</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResInstanceValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InstanceValue</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>InstanceValue_EcoResAttributeValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InstanceValue</Name>
					<Field>InstanceValue</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Value</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Value</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>Value_EcoResAttributeValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Value</Name>
					<Field>Value</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>