<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAdvancedRuleItem_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetAdvancedRuleItem_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the item value.
    /// </summary>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// true if successed to set new value. Otherwise, return false.
    /// </returns>
    public boolean setValue(anytype _value)
    {
        boolean     ret  = true;
        Types       type = typeOf(_value);

        switch (type)
        {
            case Types::String:
                this.ValueStr = _value;
                break;

            case Types::Real:
            case Types::Integer:
                this.ValueNum = _value;
                break;

            case Types::Enum:
                this.ValueNum = enum2int(_value);
                break;

            default:
                ret = false;
                break;
        }

        if (ret)
        {
            this.ValueType = type;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>value</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current item value.
    /// </summary>
    /// <returns>
    /// The current item value.
    /// </returns>
    public anytype value()
    {
        anytype     ret;

        switch (this.ValueType)
        {
            case Types::String:
                ret = this.ValueStr;
                break;

            case Types::Real:
                ret = this.ValueNum;
                break;

            case Types::Integer:
            case Types::Enum:
                ret = real2int(this.ValueNum);
                break;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetAdvancedRuleItem_JP</c> table.
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID of the <c>AssetAdvancedRuleItem_JP</c> record.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_userConnection">
    /// An instance of <C>UserConnection</C> which can be used to connect with datebase; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>AssetAdvancedRuleItem_JP</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetAdvancedRuleItem_JP find(
        RefRecId                    _refRecId,
        boolean                     _forupdate              = false,
        UserConnection              _userConnection         = null,
        ConcurrencyModel            _concurrencyModel       = ConcurrencyModel::Auto)
    {
        AssetAdvancedRuleItem_JP   assetAdvancedRuleItem;

        if (_refRecId)
        {
            if (_userConnection)
            {
                assetAdvancedRuleItem.setConnection(_userConnection);
            }

            assetAdvancedRuleItem.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetAdvancedRuleItem.concurrencyModel(_concurrencyModel);
            }

            select firstonly assetAdvancedRuleItem
                where assetAdvancedRuleItem.RecId == _refRecId;
        }

        return assetAdvancedRuleItem;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findByKeys</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetAdvancedRuleItem_JP</c> table.
    /// </summary>
    /// <param name="_ruleRecId">
    /// The record ID of the <c>AssetAdvancedRule_JP</c> record.
    /// </param>
    /// <param name="_ID">
    /// The ID of rule item.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_userConnection">
    /// An instance of <C>UserConnection</C> which can be used to connect with datebase; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>AssetAdvancedRuleItem_JP</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetAdvancedRuleItem_JP findByKeys(
        RefRecId                    _ruleRecId,
        Integer                     _ID,
        boolean                     _forupdate              = false,
        UserConnection              _userConnection         = null,
        ConcurrencyModel            _concurrencyModel       = ConcurrencyModel::Auto)
    {
        AssetAdvancedRuleItem_JP   assetAdvancedRuleItem;

        if (_ruleRecId && _ID)
        {
            if (_userConnection)
            {
                assetAdvancedRuleItem.setConnection(_userConnection);
            }

            assetAdvancedRuleItem.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetAdvancedRuleItem.concurrencyModel(_concurrencyModel);
            }

            select firstonly assetAdvancedRuleItem
                where assetAdvancedRuleItem.AssetAdvancedRule_JP    == _ruleRecId
                    && assetAdvancedRuleItem.ID                     == _ID;
        }

        return assetAdvancedRuleItem;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4881449</DeveloperDocumentation>
	<TableGroup>Reference</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>IdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetAdvancedRule_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetAdvancedRule_JP</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ID</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ValueNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RealBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValueStr</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>String20</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValueType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>Types</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetAdvancedRule_JP</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetAdvancedRule_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AssetAdvancedRule_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetAdvancedRule_JP</Name>
					<Field>AssetAdvancedRule_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>