<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductVariantNomenclature</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductVariantNomenclature extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isInUse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the nomenclature is in use.
    /// </summary>
    /// <returns>True if the nomenclature is in use; otherwise, false.</returns>
    /// <remarks>Overriding method on parent table.</remarks>
    public boolean isInUse()
    {
        EcoResProductMasterProductVariantNomenclature masterNomenclature;

        select firstonly RecId from masterNomenclature
            where masterNomenclature.ProductVariantNomenclature == this.RecId;

        if (masterNomenclature.RecId)
        {
            return true;
        }

        EcoResProductDimensionGroupProductVariantNomenclature groupNomenclature;

        select firstonly RecId from groupNomenclature
            where groupNomenclature.ProductVariantNomenclature == this.RecId;

        return groupNomenclature.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResProductVariantNomenclature</c> table based on it's name.
    /// </summary>
    /// <param name="_nomenclatureName">
    ///    The string name of the <c>EcoResProductVariantNomenclature</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResProductVariantNomenclature</c> table; otherwise, an empty record.
    /// </returns>
    public static EcoResProductVariantNomenclature findByName(Name _nomenclatureName, boolean _forUpdate = false)
    {
        EcoResProductVariantNomenclature nomenclature;

        nomenclature.selectForUpdate(_forUpdate);

        if (_nomenclatureName != '')
        {
            select firstonly nomenclature
                where nomenclature.Name == _nomenclatureName;
        }

        return nomenclature;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:EcoResProductVariantNomenclatureDevDoc</DeveloperDocumentation>
	<Label>@SCM:EcoResProductVariantNomenclature</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Extends>EcoResNomenclature</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields />
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResNomenclature</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResNomenclature</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>