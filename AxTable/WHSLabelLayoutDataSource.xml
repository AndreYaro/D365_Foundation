<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLabelLayoutDataSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLabelLayoutDataSource extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isDataSourceLinkedToAnyLabelLayout</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean isDataSourceLinkedToAnyLabelLayout()
    {
        WHSLabelLayout labelLayout;
        select firstonly labelLayout
            where labelLayout.LabelLayoutDataSource == this.LabelLayoutDataSourceId;

        return labelLayout.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WHSLabelLayoutDataSource find(WHSLabelLayoutDataSourceId _labelLayoutDataSourceId, boolean _forUpdate = false)
    {
        WHSLabelLayoutDataSource labelLayoutDataSource;

        if (_forUpdate)
        {
            labelLayoutDataSource.selectForUpdate(_forUpdate);
        }

        select firstonly labelLayoutDataSource where labelLayoutDataSource.LabelLayoutDataSourceId == _labelLayoutDataSourceId;

        return labelLayoutDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(WHSLabelLayoutDataSource, LayoutType):
                this.DataSourceQuery = this.getDefaultDataSourceQuery(this.LayoutType);
                this.clearCustomLabelDataSourceTableIfNeeded();
                break;

            case fieldStr(WHSLabelLayoutDataSource, CustomLabelRootDataSourceTable):
                this.initCustomLabelDataSourceQuery();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCustomLabelDataSourceTableIfNeeded</Name>
				<Source><![CDATA[
    private void clearCustomLabelDataSourceTableIfNeeded()
    {
        if (this.LayoutType != WHSLabelLayoutType::CustomLabel && this.CustomLabelRootDataSourceTable)
        {
            this.CustomLabelRootDataSourceTable = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initValue()
    {
        super();

        this.DataSourceQuery = this.getDefaultDataSourceQuery(this.LayoutType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDataSourceQuery</Name>
				<Source><![CDATA[
    internal PackedQueryRun getDefaultDataSourceQuery(WHSLabelLayoutType _layoutType)
    {
        QueryRun queryRun = this.defaultLabelLayoutDataSourceQuery(_layoutType);
        return queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLabelLayoutDataSourceQuery</Name>
				<Source><![CDATA[
    internal QueryRun defaultLabelLayoutDataSourceQuery(WHSLabelLayoutType _layoutType)
    {
        Query query;

        if (_LayoutType != WHSLabelLayoutType::CustomLabel || !WHSLabelLayoutDataSourceCustomLabelLayoutDataSourceQueryFlight::instance().isEnabled())
        {
            query = WHSLabelLayoutDataSourceProviderFactory::createInstanceFromParameters(_layoutType).getRootDataSourceQuery();
        }
        else if (this.CustomLabelRootDataSourceTable)
        {
            query = WHSLabelLayoutDataSource::initCustomLabelDataSourceQueryForTableName(this.CustomLabelRootDataSourceTable);
        }

        return new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustomLabelDataSourceQuery</Name>
				<Source><![CDATA[
    private void initCustomLabelDataSourceQuery()
    {       
        this.DataSourceQuery = new QueryRun(WHSLabelLayoutDataSource::initCustomLabelDataSourceQueryForTableName(this.CustomLabelRootDataSourceTable)).pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustomLabelDataSourceQueryForTableName</Name>
				<Source><![CDATA[
    internal static Query initCustomLabelDataSourceQueryForTableName(WhsLabelLayoutCustomLabelRootDataSourceTableName _tableName)
    {
        DictTable customLabelRootTable = SysDictTable::newName(_tableName);
        if (!customLabelRootTable)
        {
            throw error(strFmt("@SYS70693", _tableName));
        }

        Query customLabelRootDataSourceQuery = new Query();
        customLabelRootDataSourceQuery.addDataSource(customLabelRootTable.id());

        return customLabelRootDataSourceQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        if (this.LayoutType == WHSLabelLayoutType::CustomLabel)
        {
            this.flushCustomLabelFormButtonsCache();
        }    
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        if (this.LayoutType == WHSLabelLayoutType::CustomLabel)
        {
            this.flushCustomLabelFormButtonsCache();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>flushCustomLabelFormButtonsCache</Name>
				<Source><![CDATA[
    private void flushCustomLabelFormButtonsCache()
    {
        WhsCustomLabelsMetadataCache::resetCustomLabelLayoutDataSourcesForTableName(this.CustomLabelRootDataSourceTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<Label>@WAX:WHSLabelLayoutDataSource</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>LabelLayoutDataSourceId</TitleField1>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>LabelLayoutDataSourceIdIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>LabelLayoutDataSourceIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelLayoutDataSourceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelLayoutDataSourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataSourceQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LayoutType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LayoutType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSLabelLayoutType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LabelLayoutDataSourceId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>WHSLabelLayoutDataSourceId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>DataSourceQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomLabelRootDataSourceTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsLabelLayoutCustomLabelRootDataSourceTableName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JoinType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>WHSLabelLayoutDataSourceJoinTypeFlight</FeatureClass>
			<EnumType>WHSLabelLayoutDataSourceJoinType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LabelLayoutDataSourceIdIdx</Name>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelLayoutDataSourceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustomLabelRootDataSourceTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LayoutType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustomLabelRootDataSourceTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>