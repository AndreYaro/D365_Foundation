<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginAssemblyComponent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginAssemblyComponent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteAssemblyRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the record related to the inventory transaction originator.
    /// </summary>
    /// <param name="_componentInventTransOriginId">
    ///    The ID of the component inventory transaction originator that specifies the record to delete.
    /// </param>
    public static void deleteAssemblyRef(InventTransOriginId _componentInventTransOriginId)
    {
        InventTransOriginAssemblyComponent   inventTransOriginAssemblyComponent;

        if (!_componentInventTransOriginId)
        {
            return;
        }

        ttsbegin;
        delete_from inventTransOriginAssemblyComponent
            where inventTransOriginAssemblyComponent.ComponentInventTransOrigin == _componentInventTransOriginId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified assembly inventory transaction originator in the <c>InventTransOriginAssemblyComponent</c> table exists.
    /// </summary>
    /// <param name="_assemblyInventTransOriginId">
    /// The identifier of an assembly inventory transaction originator assembly.
    /// </param>
    /// <returns>
    /// true if the specified assembly inventory transaction originator record exists; otherwise, false.
    /// </returns>
    static public boolean exist(InventTransOriginId _assemblyInventTransOriginId)
    {
        InventTransOriginAssemblyComponent   inventTransOriginAssemblyComponent;

        if (_assemblyInventTransOriginId)
        {
            select firstonly RecId from inventTransOriginAssemblyComponent
                where inventTransOriginAssemblyComponent.AssemblyInventTransOrigin == _assemblyInventTransOriginId;
        }

        return inventTransOriginAssemblyComponent.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAssemblyRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the identifier of the assembly inventory transaction originator for a given inventory
    ///    transaction originator.
    /// </summary>
    /// <param name="_componentInventTransOriginId">
    ///    The identifier of a component inventory transaction originator assembly.
    /// </param>
    /// <returns>
    ///    An identifier of the assembly inventory transaction originator if a related record exists;
    ///    otherwise, an empty <c>InventTransOriginId</c> value.
    /// </returns>
    static public InventTransOriginId findAssemblyRefId(InventTransOriginId _componentInventTransOriginId)
    {
        InventTransOriginAssemblyComponent   inventTransOriginAssemblyComponent;

        select firstonly AssemblyInventTransOrigin from inventTransOriginAssemblyComponent
            where inventTransOriginAssemblyComponent.ComponentInventTransOrigin == _componentInventTransOriginId;

        return inventTransOriginAssemblyComponent.AssemblyInventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeAssemblyRefId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new record or updates an existing one for assembly relation between inventory transaction
    ///    originators.
    /// </summary>
    /// <param name="_componentInventTransOriginId">
    ///    The identifier of a component inventory transaction originator.
    /// </param>
    /// <param name="_assemblyInventTransOriginId">
    ///    The identifier of an assembly inventory transaction originator.
    /// </param>
    public static void writeAssemblyRefId(InventTransOriginId _componentInventTransOriginId, InventTransOriginId _assemblyInventTransOriginId)
    {
        InventTransOriginAssemblyComponent   inventTransOriginAssemblyComponent;

        if (!_assemblyInventTransOriginId)
        {
            InventTransOriginAssemblyComponent::deleteAssemblyRef(_componentInventTransOriginId);
            return;
        }

        ttsbegin;
        select forupdate inventTransOriginAssemblyComponent
            where inventTransOriginAssemblyComponent.ComponentInventTransOrigin == _componentInventTransOriginId;

        if ((inventTransOriginAssemblyComponent.ComponentInventTransOrigin != _componentInventTransOriginId) ||
            (inventTransOriginAssemblyComponent.AssemblyInventTransOrigin  != _assemblyInventTransOriginId))
        {
            inventTransOriginAssemblyComponent.ComponentInventTransOrigin   = _componentInventTransOriginId;
            inventTransOriginAssemblyComponent.AssemblyInventTransOrigin    = _assemblyInventTransOriginId;

            inventTransOriginAssemblyComponent.write();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS323955</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS127541</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ComponentInventTransOrigin</TitleField1>
	<TitleField2>AssemblyInventTransOrigin</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ComponentInventTransOriginIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ComponentInventTransOriginIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ComponentInventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssemblyInventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ComponentInventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ComponentInventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssemblyInventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssemblyInventTransOrigin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Label>@SYS129747</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ComponentInventTransOrigin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Label>@SYS129746</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ComponentInventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ComponentInventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssemblyInventTransOriginIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AssemblyInventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AssemblyInventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssemblyInventTransOrigin</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>InventTransOriginAssemblyComponent</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssemblyInventTransOrigin</Name>
					<Field>AssemblyInventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOriginAssemblyComponent</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ComponentInventTransOrigin</Name>
					<Field>ComponentInventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>