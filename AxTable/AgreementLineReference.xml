<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementLineReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AgreementLineReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRelationShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a link between two <c>AgreementLine</c> records.
    /// </summary>
    /// <param name="_sourceAgreementLine">
    /// The source agreement line record for which to create the link.
    /// </param>
    /// <param name="_derivedAgreementLine">
    /// The derived agreement line record for which to create the link.
    /// </param>
    /// <param name="_isIntraCompany_RU">
    /// The intracompany flag.
    /// </param>
    /// <remarks>
    /// The purpose of this method is to create a link between intercompany sales agreement lines and
    /// intercompany purchase agreement lines.
    /// </remarks>
    public static void createRelationShip(AgreementLineRecId _sourceAgreementLine,
                                         AgreementLineRecId _derivedAgreementLine
                                          , boolean _isIntraCompany_RU = false
                                         )
    {
        AgreementLineReference  agreementLineReference;
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        ttsbegin;
        agreementLineReference.SourceAgreementLine  = _sourceAgreementLine;
        agreementLineReference.DerivedAgreementLine = _derivedAgreementLine;
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            agreementLineReference.IsIntraCompany_RU    = _isIntraCompany_RU;
        }
        // </GEERU>
        agreementLineReference.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existDerivedAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the agreement line is derived.
    /// </summary>
    /// <param name="_agreementLineRecId">
    /// The record ID for the agreement line record to check.
    /// </param>
    /// <param name="_isIntraCompany_RU">
    /// The intracompany flag.
    /// </param>
    /// <returns>
    /// true if the agreement line is derived; otherwise, false.
    /// </returns>
    public static boolean existDerivedAgreementLine(AgreementLineRecId _agreementLineRecId
                                                , boolean _isIntraCompany_RU = false
    )
    {
        // <GEERU>
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return (select firstonly RecId from agreementLineReference
                where agreementLineReference.DerivedAgreementLine == _agreementLineRecId
                    && agreementLineReference.IsIntraCompany_RU == _isIntraCompany_RU).RecId != 0;
        }
        // </GEERU>
        return (select firstonly RecId from agreementLineReference where agreementLineReference.DerivedAgreementLine == _agreementLineRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSourceAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the agreement line is source.
    /// </summary>
    /// <param name="_agreementLineRecId">
    /// The record ID for the agreement line record to check.
    /// </param>
    /// <param name="_isIntraCompany_RU">
    /// The intracompany flag.
    /// </param>
    /// <returns>
    /// true if the agreement line is source; otherwise, false.
    /// </returns>
    public static boolean existSourceAgreementLine(AgreementLineRecId _agreementLineRecId
                                                , boolean _isIntraCompany_RU = false
    )
    {
        // <GEERU>
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return (select firstonly RecId from agreementLineReference
                where agreementLineReference.SourceAgreementLine == _agreementLineRecId
                    && agreementLineReference.IsIntraCompany_RU == _isIntraCompany_RU).RecId != 0;
        }
        // </GEERU>
        return (select firstonly RecId from agreementLineReference where agreementLineReference.SourceAgreementLine == _agreementLineRecId).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeInterCompany</ConfigurationKey>
	<DeveloperDocumentation>@SYS332498</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS332497</Label>
	<TableGroup>Worksheet</TableGroup>
	<Visible>No</Visible>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DerivedAgreementLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsIntraCompany_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IsIntraCompany_RU</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceAgreementLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DerivedAgreementLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DerivedAgreementLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceAgreementLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceAgreementLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DerivedAgreementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DerivedAgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AgreementLineReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DerivedAgreementLine</Name>
					<Field>DerivedAgreementLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceAgreementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SourceAgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AgreementLineReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceAgreementLine</Name>
					<Field>SourceAgreementLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>