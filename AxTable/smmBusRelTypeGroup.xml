<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmBusRelTypeGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmBusRelTypeGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.TableType = smmBusRelTypeSourceTable::Relation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if ((this.TableType == smmBusRelTypeSourceTable::Customer && smmBusRelTypeGroup::existCustomer()) ||
           (this.TableType == smmBusRelTypeSourceTable::Vendor && smmBusRelTypeGroup::existVendor()))
        {
            // Cannot create additional records of type customer or vendor
            error("@SYS80529");

            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        switch (this.TableType)
        {
            case smmBusRelTypeSourceTable::Customer:
                // Customer and vendor types cannot be deleted
                error("@SYS80530");
                return false;

            case smmBusRelTypeSourceTable::Vendor:
                // Customer and vendor types cannot be deleted
                error("@SYS80530");
                return false;
        }

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existCustomer</Name>
				<Source><![CDATA[
    public static boolean existCustomer()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly smmBusRelTypeGroup where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::Customer;

        if (smmBusRelTypeGroup)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existVendor</Name>
				<Source><![CDATA[
    public static boolean existVendor()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly smmBusRelTypeGroup where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::Vendor;

        if (smmBusRelTypeGroup)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existB2BProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the B2B prospect type is already configured in the database.
    /// </summary>
    /// <returns>True if the B2B prospect type is already configured in the database; otherwise, false.</returns>
    public static boolean existB2BProspect()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly smmBusRelTypeGroup where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::B2BProspect;

        if (smmBusRelTypeGroup)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static smmBusRelTypeGroup find(smmBusRelTypeId  smmBusRelTypeId, boolean _forupdate = false)
    {
        smmBusRelTypeGroup smmBusRelTypeGroup = null;

        if (smmBusRelTypeId)
        {
            smmBusRelTypeGroup.selectForUpdate(_forupdate);

            select firstonly smmBusRelTypeGroup
                index hint TypeIdx
                where smmBusRelTypeGroup.TypeId == smmBusRelTypeId;
        }

        return smmBusRelTypeGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomerType</Name>
				<Source><![CDATA[
    public static smmBusRelTypeId getCustomerType()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly @TypeId from smmBusRelTypeGroup
            index hint TypeIdx
            where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::Customer;

        return smmBusRelTypeGroup.TypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendorType</Name>
				<Source><![CDATA[
    public static smmBusRelTypeId getVendorType()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly @TypeId from smmBusRelTypeGroup
            index hint TypeIdx
            where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::Vendor;

        return smmBusRelTypeGroup.TypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getB2BProspectType</Name>
				<Source><![CDATA[
    public static smmBusRelTypeId getB2BProspectType()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        select firstonly @TypeId from smmBusRelTypeGroup
            index hint TypeIdx
            where smmBusRelTypeGroup.TableType == smmBusRelTypeSourceTable::B2BProspect;

        return smmBusRelTypeGroup.TypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCustomerVendor</Name>
				<Source><![CDATA[
    public static void insertCustomerVendor()
    {
        smmBusRelTypeGroup  smmBusRelTypeGroup = null;

        ttsbegin;

        // If types for customer and vendor do not exist, they need to be inserted.
        if (!smmBusRelTypeGroup::existCustomer())
        {
            smmBusRelTypeGroup.clear();
            smmBusRelTypeGroup.TypeId           = "@SYS80104"; // Customer
            smmBusRelTypeGroup.TypeDescription  = "@SYS80104"; // Customer
            smmBusRelTypeGroup.TableType        = smmBusRelTypeSourceTable::Customer;
            smmBusRelTypeGroup.insert();
        }

        if (!smmBusRelTypeGroup::existVendor())
        {
            smmBusRelTypeGroup.clear();
            smmBusRelTypeGroup.TypeId           = "@SYS80105"; // Vendor
            smmBusRelTypeGroup.TypeDescription  = "@SYS80105"; // Vendor
            smmBusRelTypeGroup.TableType        = smmBusRelTypeSourceTable::Vendor;
            smmBusRelTypeGroup.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertB2BProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert the B2B prospect type if it does not exit in the database.
    /// </summary>
    public static void insertB2BProspect()
    {
        smmBusRelTypeGroup smmBusRelTypeGroup;

        // If type for B2B prospect does not exist, it should be inserted.
        if (!smmBusRelTypeGroup::existB2BProspect())
        {
            smmBusRelTypeGroup.clear();
            smmBusRelTypeGroup.TypeId           = "@Retail:B2BProspectLabel";
            smmBusRelTypeGroup.TypeDescription  = "@Retail:B2BProspectLabel";
            smmBusRelTypeGroup.TableType        = smmBusRelTypeSourceTable::B2BProspect;
            smmBusRelTypeGroup.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124739</DeveloperDocumentation>
	<FormRef>smmBusRelTypeGroup</FormRef>
	<Label>@SYS80427</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TypeId</TitleField1>
	<TitleField2>TypeDescription</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TypeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>TypeIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>smmBusRelTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>smmBusRelTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmParametersTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>smmParametersTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DelBusRelTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DelBusRelTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DelBusRelTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Table</Name>
			<Label>@SYS8868</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TableType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@SYS22564</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DelBusRelTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmDelBusRelTable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TableType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>smmBusRelTypeSourceTable</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TypeDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmBusRelTypeDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TypeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmBusRelTypeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>