<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransPaymTransCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerJournalTransPaymTransCode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initLvTransCodesForLedger</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initalize <c>lvPaynTransCodes</c> based on RCashDocRepresType.
    /// </summary>
    /// <param name = "_personId">
    ///    Person identifier that corresponds to <c>lvPaynTransCodes</c>.
    /// </param>
    /// <param name = "_represType">
    ///    <c>RCashDocRepresType</c> based on which the values are selected.
    /// </param>
    public void initLvTransCodesForLedger(RCashDocRepresPersonId _personId, RCashDocRepresType _represType)
    {
        switch (_represType)
        {
            case RCashDocRepresType::Customer:
                this.LvPaymTransCodes = CustTable::find(_personId).LvPaymTransCodes;
                break;

            case RCashDocRepresType::Vendor:
                this.LvPaymTransCodes = VendTable::find(_personId).LvPaymTransCodes;
                break;

            case RCashDocRepresType::Other:
                this.LvPaymTransCodes = LvOtherClients::find(_personId).LvPaymTransCodes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>LedgerJournalTransPaymTransCode</c> record.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// The <c>LedgerJournalTrans</c> record.
    /// </param>
    public void initFromLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        switch (_ledgerJournalTrans.OffsetAccountType)
        {
            case LedgerJournalACType::Cust:
                this.LvPaymTransCodes = CustTable::find(_ledgerJournalTrans.parmOffsetAccount()).LvPaymTransCodes;
                break;

            case LedgerJournalACType::Vend:
                this.LvPaymTransCodes = VendTable::find(_ledgerJournalTrans.parmOffsetAccount()).LvPaymTransCodes;
                break;

            case LedgerJournalACType::Ledger:
                if (_ledgerJournalTrans.rCashDocRepresPersonId != '')
                {
                    this.initLvTransCodesForLedger(_ledgerJournalTrans.rCashDocRepresPersonId, _ledgerJournalTrans.rCashDocRepresType);
                }
                break;

            case LedgerJournalACType::Project:
                this.LvPaymTransCodes = CustTable::find(ProjTable::find(_ledgerJournalTrans.parmOffsetAccount()).CustAccount).LvPaymTransCodes;
                break;

            default:
                break;
        }

        this.LedgerJournalTrans = _ledgerJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLedgerJournalTransRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>LedgerJournalTransPaymTransCode</c> record using a journal lines record.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// The <c>LedgerJournalTrans</c> record.
    /// </param>
    /// <param name="_selectForUpdate">
    /// A value that indicates whether to select for update; optional.
    /// </param>
    /// <returns>
    /// A <c>LedgerJournalTransPaymTransCode</c> record.
    /// </returns>
    public static LedgerJournalTransPaymTransCode findByLedgerJournalTransRecId(RefRecId _ledgerJournalTrans, boolean _selectForUpdate = false)
    {
        LedgerJournalTransPaymTransCode     ledgerJournalTransPaymTransCode;

        if (_ledgerJournalTrans)
        {
            ledgerJournalTransPaymTransCode.selectForUpdate(_selectForUpdate);

            select firstOnly ledgerJournalTransPaymTransCode
                where ledgerJournalTransPaymTransCode.LedgerJournalTrans == _ledgerJournalTrans;
        }

        return ledgerJournalTransPaymTransCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>LV</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223083</DeveloperDocumentation>
	<Label>@GLS223084</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>LvPaymTransCodes</TitleField1>
	<TitleField2>LedgerJournalTrans</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Ledger</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalTrans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LvPaymTransCodes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalTrans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LvPaymTransCodes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerJournalTrans</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LvPaymTransCodes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymTransCodeRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerJournalTransIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerJournalTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LvPaymTransCodesIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LvPaymTransCodes</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalTrans</Name>
					<Field>LedgerJournalTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LvPaymTransCodes</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LvPaymTransCodes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LvPaymTransCodes</Name>
					<Field>LvPaymTransCodes</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>