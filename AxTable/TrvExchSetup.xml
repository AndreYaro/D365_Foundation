<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvExchSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvExchSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountName</Name>
				<Source><![CDATA[
    display AccountName accountName()
    {
        RecId                                   dimAttributeId;
        DimensionAttributeValue                 dimAttributeValue;
        DimensionAttributeLevelValue            dimAttributeLevelValue;
        DimensionAttributeValueCombination      dimAttributeValueCombo;
        DimensionAttributeValueGroup            dimAttributeValueGroup;
        DimensionAttributeValueGroupCombination dimAttributeValueGroupCombo;

        dimAttributeId = DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount);

        select firstonly RecId from dimAttributeValueCombo where dimAttributeValueCombo.RecId == this.AdvanceAccountLedgerDimension
            join RecId from dimAttributeValueGroupCombo
                where dimAttributeValueGroupCombo.DimensionAttributeValueCombination == dimAttributeValueCombo.RecId &&
                    dimAttributeValueGroupCombo.Ordinal == 1
            join RecId from dimAttributeValueGroup
                where dimAttributeValueGroup.RecId == dimAttributeValueGroupCombo.DimensionAttributeValueGroup
            join RecId from dimAttributeLevelValue
                where dimAttributeLevelValue.DimensionAttributeValueGroup == dimAttributeValueGroup.RecId
                    && dimAttributeLevelValue.Ordinal == 1
            join dimAttributeValue
                where dimAttributeValue.RecId == dimAttributeLevelValue.DimensionAttributeValue;

        if (dimAttributeValue.RecId != 0)
        {
            return dimAttributeValue.getName();
        }
        else
        {
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldnum(TrvExchSetup, AccountType))
        {
            if (this.orig().AccountType != this.AccountType)
            {
                this.AdvanceAccountLedgerDimension = 0;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TrvExchSetup find(CurrencyCode _code)
    {
        TrvExchSetup    trvExchSetup;

        if (_code)
        {
            select firstonly trvExchSetup
                where trvExchSetup.ExchangeCode == _code;
        }
        return trvExchSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in <c>TrvExchSetup</c> for every currency in the system that doesn't already have a record.
    /// </summary>
    public static void initialize()
    {
        TrvExchSetup    exchSetup, exchSetupExisting;
        Currency        currency;

        insert_recordset exchSetup(ExchangeCode)
            select CurrencyCode from currency
                notexists join exchSetupExisting
                    where exchSetupExisting.ExchangeCode == currency.CurrencyCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<DeveloperDocumentation>@SYS124835</DeveloperDocumentation>
	<Label>@SYS120457</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>ExchangeCode</TitleField1>
	<TitleField2>AccountType</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TrvExchCodeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Expense</Modules>
	<PrimaryIndex>TrvExchCodeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExchangeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdvanceAccountLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>currency</Name>
			<Label>@SYS101485</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExchangeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdvanceAccountLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerJournalACType</EnumType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AdvanceAccountLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDynamicDefaultAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExchangeCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TrvExchCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ExchangeCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AdvanceAccountLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IsAccountedVia</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>AccountsFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExchangeCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>ExchangeCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IstheDefaultAccountFor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ByDefaultAccountedThrough</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AdvanceAccountLedgerDimension</Name>
					<Field>AdvanceAccountLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>