<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionGeneralLedgerTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JournalizingDefinitionGeneralLedgerTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(JournalizingDefinitionGeneralLedgerTrans, JournalizingDefinition):
                if (JournalizingDefinition::findByRecId(this.JournalizingDefinition).JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::GeneralLedger)
                {
                    ret = checkFailed(strFmt("@SPS451", JournalizingDefinition::findByRecId(this.JournalizingDefinition).JournalizingDefinitionCode));
                }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified RecId exists in the table and reports an error if it does not exist.
    /// </summary>
    /// <param name="_recId">
    /// The posting definition code to find.
    /// </param>
    /// <returns>
    /// true if the RecId exists in the table; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExist(recId _recId)
    {
        boolean ret = true;

        if (!JournalizingDefinitionGeneralLedgerTrans::exist(_recId))
        {
            ret = checkFailed(strFmt(JournalizingDefinitionGeneralLedgerTrans::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified RecId exists in the table.
    /// </summary>
    /// <param name="_recId">
    /// The RecId to find.
    /// </param>
    /// <returns>
    /// true if the RecId exists in the table; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _recId)
    {
        boolean found;

        found = (select firstonly RecId from journalizingDefinitionGeneralLedgerTrans
                    where
                        journalizingDefinitionGeneralLedgerTrans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches the JournalizingDefinitionGeneralLedgerTrans table for the specified RecId.
    /// </summary>
    /// <param name="_recId">
    /// The RecId to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model to use.
    /// </param>
    /// <returns>
    /// A JournalizingDefinitionGeneralLedgerTrans table buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static JournalizingDefinitionGeneralLedgerTrans find(
        recId _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        JournalizingDefinitionGeneralLedgerTrans journalizingDefinitionGeneralLedgerTrans;

        journalizingDefinitionGeneralLedgerTrans.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            journalizingDefinitionGeneralLedgerTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly journalizingDefinitionGeneralLedgerTrans
            where journalizingDefinitionGeneralLedgerTrans.RecId == _recId;

        return journalizingDefinitionGeneralLedgerTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the JournalizingDefinitionGeneralLedgerTrans table does not exist.
    /// </summary>
    /// <returns>
    /// A message that indicates the record does not exist.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TxtNotExist txtNotExist()
    {
        return "@SYS128269";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS2220</DeveloperDocumentation>
	<FormRef>JournalizingDefinitionTrans</FormRef>
	<Label>@SPS629</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LedgerTransType</TitleField1>
	<TitleField2>JournalizingDefinition</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>AccountingFoundation</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FundClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FundClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GeneralLedger</Name>
			<Label>@SPS1124</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FundClass</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FundClass</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>FundClassValueAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalizingDefinition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalizingDefinitionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LedgerTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerOpenCloseTransType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalizingDefinitionGLTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerTransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FundClass</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JournalizingDefinition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JournalizingDefinition</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JournalizingDefinition</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>JournalizingDefinition_JournalizingDefinitionGeneralLedgerTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalizingDefinition</Name>
					<Field>JournalizingDefinition</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>