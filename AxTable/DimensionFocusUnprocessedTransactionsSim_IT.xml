<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionFocusUnprocessedTransactionsSim_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DimensionFocusUnprocessedTransactionsSim_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>DimensionFocusUnprocessedTransactions</c> table; if not, a warning message is displayed.
    /// </summary>
    /// <param name="_dimensionFocusUnprocessedTransRecId">
    /// The record ID of the <c>DimensionFocusUnprocessedTransactions</c> record.
    /// </param>
    /// <returns>
    /// True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(DimensionFocusUnprocessedTransRecId _dimensionFocusUnprocessedTransRecId)
    {
        boolean isExisting = true;

        if (!DimensionFocusUnprocessedTransactionsSim_IT::exist(_dimensionFocusUnprocessedTransRecId))
        {
            isExisting = checkFailed(strfmt(DimensionFocusUnprocessedTransactionsSim_IT::txtNotExist(), _dimensionFocusUnprocessedTransRecId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteWithState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes records with the specified calculation state.
    /// </summary>
    /// <param name="_dimensionFocusRecId">
    /// The dimension focus.
    /// </param>
    /// <param name="_calculationState">
    /// The calculation state.
    /// </param>
    /// <param name="_ledgerRecId">
    /// The ledger to process; optional.
    /// </param>
    /// <returns>
    /// true if at least one record was deleted; otherwise, false.
    /// </returns>
    /// <remarks>
    /// This method expects the caller to manage the database transaction.
    /// </remarks>
    public static boolean deleteWithState(
        DimensionFocusRecId _dimensionFocusRecId,
        DimensionFocusBalanceCalculationState _calculationState,
        LedgerRecId _ledgerRecId = 0)
    {
        DimensionFocusUnprocessedTransactionsSim_IT unprocessed;
        GeneralJournalEntrySim_IT generalJournalEntry;

        delete_from unprocessed
            where unprocessed.FocusDimensionHierarchy == _dimensionFocusRecId
                && unprocessed.State == _calculationState
        exists join generalJournalEntry
            where generalJournalEntry.RecId == unprocessed.GeneralJournalEntry
                && (generalJournalEntry.Ledger == _ledgerRecId
                    || !_ledgerRecId);

        return unprocessed.RowCount() > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>DimensionFocusUnprocessedTransactions</c> table exists.
    /// </summary>
    /// <param name="_dimensionFocusUnprocessedTransRecId">
    /// The record ID of the <c>DimensionFocusUnprocessedTransactions</c> record.
    /// </param>
    /// <returns>
    /// True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(DimensionFocusUnprocessedTransRecId _dimensionFocusUnprocessedTransRecId)
    {
        DimensionFocusUnprocessedTransactionsSim_IT dimensionFocusUnprocessedTransactionsSim;

        select firstonly RecId from dimensionFocusUnprocessedTransactionsSim
            where dimensionFocusUnprocessedTransactionsSim.RecId == _dimensionFocusUnprocessedTransRecId;

        return dimensionFocusUnprocessedTransactionsSim.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>DimensionFocusUnprocessedTransactionsSim_IT</c> table for the specified record id.
    /// </summary>
    /// <param name="_dimensionFocusUnprocessedTransRecId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing <c>DimensionFocusUnprocessedTransactionsSim_IT</c> table.
    /// </returns>
    public static DimensionFocusUnprocessedTransactionsSim_IT find(
        DimensionFocusUnprocessedTransRecId _dimensionFocusUnprocessedTransRecId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        dimensionFocusUnprocessedTransactionsSim_IT dimensionFocusUnprocessedTransactionsSim;

        dimensionFocusUnprocessedTransactionsSim.selectForUpdate(_forUpdate);

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            dimensionFocusUnprocessedTransactionsSim.concurrencyModel(_concurrencyModel);
        }

        select firstonly dimensionFocusUnprocessedTransactionsSim
            where dimensionFocusUnprocessedTransactionsSim.RecId == _dimensionFocusUnprocessedTransRecId;

        return dimensionFocusUnprocessedTransactionsSim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the calculation state.
    /// </summary>
    /// <param name="_dimensionFocusRecId">
    /// The dimension focus.
    /// </param>
    /// <param name="_oldState">
    /// The old calculation state.
    /// </param>
    /// <param name="_newState">
    /// The new calculation state.
    /// </param>
    /// <returns>
    /// true if at least one record was updated; otherwise, false.
    /// </returns>
    /// <remarks>
    /// This method expects the caller to manage the database transaction.
    /// </remarks>
    public static boolean updateState(
        DimensionFocusRecId _dimensionFocusRecId,
        DimensionFocusBalanceCalculationState _oldState,
        DimensionFocusBalanceCalculationState _newState)
    {
        DimensionFocusUnprocessedTransactionsSim_IT unprocessedSim;

        update_recordset unprocessedSim
            setting State = _newState
        where unprocessedSim.FocusDimensionHierarchy == _dimensionFocusRecId
            && unprocessedSim.State == _oldState;

        return unprocessedSim.RowCount() > 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>IT</CountryRegionCodes>
	<DeveloperDocumentation>@SYS315715</DeveloperDocumentation>
	<Label>@SYS315714</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>FocusDimensionHierarchy</TitleField1>
	<Modules>Ledger</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FocusDimensionHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FocusDimensionHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>State</Name>
			<Label>@SYS21924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FocusDimensionHierarchy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DimensionFocusRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GeneralJournalEntry</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>GeneralJournalEntryRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>State</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>DimensionFocusBalanceCalculationState</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FocusDimensionHierarchyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FocusDimensionHierarchy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GeneralJournalEntryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FocusDimensionHierarchy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DimensionHierarchy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionFocus</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>UnprocessedTransactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FocusDimensionHierarchy</Name>
					<Field>FocusDimensionHierarchy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>GeneralJournalEntrySim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>GeneralJournalEntrySim_IT</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Entry</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>UnprocessedTransactions</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GeneralJournalEntry</Name>
					<Field>GeneralJournalEntry</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>