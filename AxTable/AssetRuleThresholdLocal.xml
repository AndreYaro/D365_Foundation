<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRuleThresholdLocal</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetRuleThresholdLocal extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buyingLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the buying legal entity in the record in the <c>AssetRuleLocal</c> table that is associated
    /// with the current record in the <c>AssetRuleThresholdLocal</c> table.
    /// </summary>
    /// <returns>
    /// The buying legal entity in the record in the <c>AssetRuleLocal</c> table that associated with the
    /// current record in the <c>AssetRuleThresholdLocal</c> table.
    /// </returns>
    public recId buyingLegalEntity()
    {
        return AssetRuleLocal::find(this.AssetRuleLocal).BuyingLegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAssetRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified active record in the <c>AssetRuleThresholdLocal</c> table.
    /// </summary>
    /// <param name="_assetRule">
    ///    A record ID of the record in the <c>AssetRule</c> table.
    /// </param>
    /// <param name="_buyingLegalEntity">
    ///    buying legal entity.
    /// </param>
    /// <param name="_validFrom">
    ///    A valid start date.
    /// </param>
    /// <param name="_validTo">
    ///    A valid end date.
    /// </param>
    /// <returns>
    ///    An active record in the <c>AssetRuleThresholdLocal</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetRuleThresholdLocal findByAssetRule(recId    _assetRule,
                                                          RefRecId _buyingLegalEntity,
                                                          date     _validFrom  = DateTimeUtil::date(DateTimeUtil::utcNow()),
                                                          date     _validTo    = DateTimeUtil::date(DateTimeUtil::utcNow()))
    {
        AssetRuleThresholdLocal     assetRuleThresholdLocal;
        recId                       assetRuleLocal;

        assetRuleLocal = AssetRuleLocal::findByAssetRule(_assetRule, _buyingLegalEntity).RecId;

        select validTimeState(_validFrom, _validTo) * from  assetRuleThresholdLocal
            where assetRuleThresholdLocal.AssetRuleLocal == assetRuleLocal;

        return assetRuleThresholdLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalAmountInSharedCur</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Converts the local threshold amount into the shared currency.
    /// </summary>
    /// <param name="_assetRule">
    ///    A record ID of the record in the <c>AssetRule</c> table.
    /// </param>
    /// <param name="_buyingLegalEntity">
    ///    buying legal entity.
    /// </param>
    /// <param name="_validFrom">
    ///    A valid start date.
    /// </param>
    /// <param name="_validTo">
    ///    A valid end date.
    /// </param>
    /// <returns>
    ///    The converted local threshold amount in the shared currency.
    /// </returns>
    public static Price getLocalAmountInSharedCur(recId     _assetRule,
                                                  RefRecId  _buyingLegalEntity,
                                                  date      _validFrom  = DateTimeUtil::date(DateTimeUtil::utcNow()),
                                                  date      _validTo    = DateTimeUtil::date(DateTimeUtil::utcNow()))
    {
        AssetRuleThresholdLocal assetRuleThresholdLocal = AssetRuleThresholdLocal::findByAssetRule(_assetRule, _buyingLegalEntity, _validFrom, _validTo);
        CurrencyCode            currencyCode;
        Price                   price;

        currencyCode    = AssetRuleThreshold::findByAssetRule(_assetRule, _validFrom, _validTo).Currency;
        price           = ExchangeRateHelper::curPrice2CurPrice(assetRuleThresholdLocal.ThresholdAmount, Ledger::accountingCurrency(assetRuleThresholdLocal.buyingLegalEntity()), currencyCode);

        return price;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@SYS315700</DeveloperDocumentation>
	<FormRef>AssetRule</FormRef>
	<Label>@SYS134793</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssetRuleLocal</TitleField1>
	<TitleField2>ThresholdAmount</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRuleLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRuleLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRuleLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRuleLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetRuleLocal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ThresholdAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetCapitalizationPriceThreshold</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetRuleLocal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CurrencyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AssetRuleLocal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetRuleLocal</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetRuleLocal</Name>
					<Field>AssetRuleLocal</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>Currency_AssetRuleThresholdLocal</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>