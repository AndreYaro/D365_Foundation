<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayModuleTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayModuleTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();

        this.SourceDate = RPayParameters::payPeriod();
        this.TransDate  = RPayParameters::payPeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>payCalculate</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public RPayCalculate payCalculate()
    {
        RPayCalculate payCalculate;
        ;
        switch (this.ConfigurationKeyId)
        {
            case configurationKeyNum(RPayTbl):
                payCalculate = new RPayCalculate_Tbl(this);
                break;
            case configurationKeyNum(RPaySickList):
                payCalculate = new RPayCalculate_SickList(this);
                break;
            case configurationKeyNum(RPayVacation):
                payCalculate = new RPayCalculate_Vacation(this);
                break;
            case configurationKeyNum(RPayBusinessTrip):
                payCalculate = new RPayCalculate_BusinessTrip(this);
                break;
            case configurationKeyNum(RPayBorrowingGain):
                payCalculate = new RPayCalculate_BorrowingGain(this);
                break;
            case configurationKeyNum(RPayDeduction):
                payCalculate = new RPayCalculate_StandardDeduction(this);
                break;
            case configurationKeyNum(RPayTax):
                payCalculate = new RPayCalculate_Tax(this);
                break;
            case configurationKeyNum(RPayEmplPeriod):
                payCalculate = new RPayCalculate_EmplPeriod(this);
                break;
            case configurationKeyNum(RPayBorrowingGain):
                payCalculate = new RPayCalculate_BorrowingGain(this);
                break;
            case configurationKeyNum(RPayDeduction):
                payCalculate = new RPayCalculate_StandardDeduction(this);
                break;
            case configurationKeyNum(RPayCivilContract):
                payCalculate = new RPayCalculate_CivilContract(this);
                break;
            case configurationKeyNum(RPayByWorker):
                   payCalculate = new RPayCalculate_ByWorker(this);
                   break;
            default :
                payCalculate = new RPayCalculate(this);
        }

        return payCalculate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payCounterCalcEngine</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public RPayCounterCalcEngine payCounterCalcEngine(FormRun _formRun)
    {
        RPayCounterCalcEngine payCounterCalcEngine;

        switch (this.ConfigurationKeyId)
        {
            case configurationKeyNum(RPayTbl):
                payCounterCalcEngine = new RPayCounterCalcEngine_Tbl(_formRun, this);
                break;
            case configurationKeyNum(RPaySickList):
                payCounterCalcEngine = new RPayCounterCalcEngine_SickList(_formRun, this);
                break;
            case configurationKeyNum(RPayVacation):
                payCounterCalcEngine = new RPayCounterCalcEngine_Vacation(_formRun, this);
                break;
            case configurationKeyNum(RPayBusinessTrip):
                payCounterCalcEngine = new RPayCounterCalcEngine_BusinessTrip(_formRun, this);
                break;
            case configurationKeyNum(RPayDeduction):
                payCounterCalcEngine = new RPayCounterCalcEngine_StandardDeduction(_formRun, this);
                break;
            case configurationKeyNum(RPayBorrowingGain):
                payCounterCalcEngine = new RPayCounterCalcEngine_BorrowingGain(_formRun, this);
                break;
            case configurationKeyNum(RPayDeduction):
                payCounterCalcEngine = new RPayCounterCalcEngine_StandardDeduction(_formRun, this);
                break;
            case configurationKeyNum(RPayBorrowingGain):
                payCounterCalcEngine = new RPayCounterCalcEngine_BorrowingGain(_formRun, this);
                break;
            case configurationKeyNum(RPayTax):
               payCounterCalcEngine = new RPayCounterCalcEngine_Tax(_formRun, this);
               break;
            case configurationKeyNum(RPayByWorker):
                payCounterCalcEngine = new RPayCounterCalcEngine_ByWorker(_formRun, this);
                break;
            case configurationKeyNum(RPayEmplPeriod):
               payCounterCalcEngine = new RPayCounterCalcEngine_EmplPeriod(_formRun, this);
               break;
            case configurationKeyNum(RPayCivilContract):
               payCounterCalcEngine = new RPayCounterCalcEngine_CivilContract(_formRun, this);
               break;

            default :
                payCounterCalcEngine = new RPayCounterCalcEngine(_formRun, this);
        }

        return payCounterCalcEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payModuleControl</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public RPayModuleControl payModuleControl()
    {
        RPayModuleControl payModuleControl;

        switch (this.ConfigurationKeyId)
        {
            case configurationKeyNum(RPayTbl):
               payModuleControl = new RPayModuleControl_Tbl(this);
               break;
            case configurationKeyNum(RPaySickList):
               payModuleControl = new RPayModuleControl_SickList(this);
               break;
            case configurationKeyNum(RPayVacation):
               payModuleControl = new RPayModuleControl_Vacation(this);
               break;
            case configurationKeyNum(RPayBusinessTrip):
               payModuleControl = new RPayModuleControl_BusinessTrip(this);
               break;
            case configurationKeyNum(RPayDeduction):
               payModuleControl = new RPayModuleControl_StandardDeduction(this);
               break;
            case configurationKeyNum(RPayBorrowingGain):
               payModuleControl = new RPayModuleControl_BorrowingGain(this);
               break;
            case configurationKeyNum(RPayByWorker):
               payModuleControl = new RPayModuleControl_ByWorker(this);
               break;
            case configurationKeyNum(RPayEmplPeriod):
               payModuleControl = new RPayModuleControl_EmplPeriod(this);
               break;
            case configurationKeyNum(RPayCivilContract):
               payModuleControl = new RPayModuleControl_CivilContract(this);
               break;
            case configurationKeyNum(RPayTax):
               payModuleControl = new RPayModuleControl_Tax(this);
               break;
            default :
               payModuleControl = new RPayModuleControl(this);
        }
        return payModuleControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;

        ret = super();
        if (ret)
        {
            if (this.ConfigurationKeyId)
            {
                ret = false;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldId)
    {
        boolean           ret;
        RPayModuleControl rPayModuleControl;
        ;
        ret = super(_fieldId);
        if (ret)
        {
            if (_fieldId == fieldNum(RPayModuleTable,ParentModuleCode) && this.ParentModuleCode)
            {
                this.PayModuleGroupId = RPayModuleTable::find(this.ParentModuleCode).PayModuleGroupId;
            }
            if (_fieldId == fieldNum(RPayModuleTable,PayModuleSost))
            {
                ttsbegin;
                rPayModuleControl = this.payModuleControl();
                ret = rPayModuleControl.moduleSostModified(this);
                if (ret)
                {
                    ttscommit;
                }
                else
                {
                    ttsabort;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
        public void write()
    {
        this.SourceDate = endmth(this.SourceDate);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateModule</Name>
				<Source><![CDATA[
        private static void activateModule(DictConfigurationKey _dictConfigurationKey, boolean _activate = true)
    {
        RPayModuleTable         payModuleTable;
        RPayModuleGroupTable    defaultGroupTable = RPayModuleGroupTable::getFirstGroup();

        ttsbegin;
        select firstonly forupdate ConfigurationKeyId from payModuleTable
            where payModuleTable.ConfigurationKeyId == _dictConfigurationKey.id();

        if (payModuleTable.ConfigurationKeyId && ! _activate)
        {
            payModuleTable.delete();
        }
        if (! payModuleTable.ConfigurationKeyId && _activate)
        {
            payModuleTable.PayModuleCode        = _dictConfigurationKey.name();
            payModuleTable.PayModuleName        = _dictConfigurationKey.label();
            payModuleTable.PayModuleGroupId     = defaultGroupTable.PayModuleGroupId;
            payModuleTable.ConfigurationKeyId   = _dictConfigurationKey.id();
            payModuleTable.SourceDate           = RPayParameters::payPeriod();
            payModuleTable.TransDate            = RPayParameters::payPeriod();
            payModuleTable.NeedDeleteBeforeCalc = NoYes::Yes;
            payModuleTable.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayModuleTable find(RPayModuleCode _moduleCode, boolean _forupdate = false)
    {
        RPayModuleTable payModuleTable;
        ;

        payModuleTable.selectForUpdate(_forupdate);

        if (_moduleCode)
        {
            select firstonly payModuleTable
                   where payModuleTable.PayModuleCode == _moduleCode;
        }

        return payModuleTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payModuleInit</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static void payModuleInit()
    {
        int                     counter;
        SysDictConfigurationKey dictConfigurationKey;
        ConfigurationKeySet     configurationKeySet = new ConfigurationKeySet();
        Set                     parentKeySet;

        for (counter = 1; counter <= configurationKeySet.cnt(); counter++)
        {
            dictConfigurationKey = new SysDictConfigurationKey(configurationKeySet.cnt2Id(counter));
            parentKeySet         = dictConfigurationKey.getSetOfParentConfigurationKeyId();

            if (parentKeySet.in(configurationKeyNum(RPayModule)))
            {
                RPayModuleTable::activateModule(dictConfigurationKey, isConfigurationkeyEnabled(dictConfigurationKey.id()));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayModule</ConfigurationKey>
	<DeveloperDocumentation>@RUP6084</DeveloperDocumentation>
	<FormRef>RPayModuleTable</FormRef>
	<Label>@RUP1009</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>PayModuleCode</TitleField1>
	<TitleField2>PayModuleName</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PayModuleGroupIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>PayModuleGroupIdx</PrimaryIndex>
	<ReplacementKey>PayModuleGroupIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayModuleCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayModuleName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayModuleGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayModuleCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayModuleGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>configurationKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayModuleCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayModuleName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS14598</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetTransDateToCalcDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@GLS101418</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayModuleSost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NeedDeleteBeforeCalc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentModuleCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayModuleCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayModuleCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>configurationKeyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConfigurationKeyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NeedDeleteBeforeCalc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RUP399</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentModuleCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayModuleCode</ExtendedDataType>
			<Label>@RUP804</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PayModuleGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayModuleGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayModuleName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayModuleName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PayModuleSost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayModuleSost</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PayModuleType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RUP791</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Query</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SetTransDateToCalcDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@RUP2531</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SourceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@RUP393</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS105982</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PayModuleGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PayModuleGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PayModuleCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RParentModuleCode</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>RPayModuleTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RParentModuleCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayModuleTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentModuleCode</Name>
					<SourceEDT>RPayModuleCode</SourceEDT>
					<Field>ParentModuleCode</Field>
					<RelatedField>PayModuleCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayModuleGroupTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayModuleGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayModuleGroupTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RPayModuleTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayModuleGroupId</Name>
					<SourceEDT>RPayModuleGroupId</SourceEDT>
					<Field>PayModuleGroupId</Field>
					<RelatedField>PayModuleGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PayModuleGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>