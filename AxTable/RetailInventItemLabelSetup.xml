<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInventItemLabelSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInventItemLabelSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRetailReportingRoot</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get retail reporting root information.
    /// </summary>
    /// <returns>
    /// Return the hierarchy type and root organization for Retail Reporting..
    /// </returns>
    private container getRetailReportingRoot()
    {
        OMHierarchyType hierarchyType;
        OMHierarchyPurpose  hierarchyPurpose;
        OMHierarchyRelationship hierarchyRelationship;

        select HierarchyType, RecId from hierarchyPurpose
            where hierarchyPurpose.HierarchyPurpose == HierarchyPurpose::RetailReporting
            join RecId from hierarchyType
                where hierarchyType.RecId == hierarchyPurpose.HierarchyType
            join HierarchyType, ChildOrganization from hierarchyRelationship
                where hierarchyRelationship.HierarchyType == hierarchyType.RecId
                 && hierarchyRelationship.ParentOrganization == 0 ;

        return [hierarchyRelationship.HierarchyType, hierarchyRelationship.ChildOrganization];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the field values in new <c>RetailInventItemLabel</c> record.
    /// </summary>
    /// <remarks>
    /// The OMHierarchyType and OMInternalOrganization values are initilized.
    /// </remarks>
    public void initValue()
    {
        RefRecId hierarchyType;
        RefRecId orgId;

        // Initilaize to the reporting root
        [hierarchyType, orgId] = this.getRetailReportingRoot();
        this.OMHierarchyType = hierarchyType;
        this.OMInternalOrganization = orgId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when renaming the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailInventItemLabelSetup, Text1IsItemDescription))
        {
            this.validateText1ItemDescription();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateText1ItemDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the item description of the current item.
    /// </summary>
    void validateText1ItemDescription()
    {
        if (this.Text1IsItemDescription == true)
            this.Text1 = InventTable::find(this.ItemId).defaultProductName();
        else
            this.Text1 = "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailInventItemLabelSetup</c> table exists.
    /// </summary>
    /// <param name="_labelType">
    /// The value of the label type.
    /// </param>
    /// <param name="_itemId">
    /// The ID of the item.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(RetailLabelType _labelType, ItemId _itemId)
    {
        return _labelType && _itemId && (select retailInventItemLabelSetup
                    index hint TypeItemPriceGroupIdx
                    where retailInventItemLabelSetup.LabelType == _labelType
                    &&    retailInventItemLabelSetup.ItemId == _itemId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailInventItemLabelSetup</c> table.
    /// </summary>
    /// <param name="labelType">
    /// The type of the label.
    /// </param>
    /// <param name="itemId">
    /// The ID of the item.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInventItemLabelSetup</c> table; otherwise, an empty record.
    /// </returns>
    static RetailInventItemLabelSetup find(RetailLabelTypeBase    labelType,
                                        ItemId              itemId,
                                        boolean             update = false)
    {
        RetailInventItemLabelSetup  rboInventItemLabelSetup;
        ;

        rboInventItemLabelSetup.selectForUpdate(update);

        if (itemId)
        {
            select firstonly rboInventItemLabelSetup
                index hint TypeItemPriceGroupIdx
                where rboInventItemLabelSetup.LabelType == labelType
                &&    rboInventItemLabelSetup.ItemId == itemId;
        }

        return rboInventItemLabelSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByOmHierarchyTypeAndInternalOrg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailInventItemLabelSetup</c> table.
    /// </summary>
    /// <param name="_labelType">
    /// The type of the label.
    /// </param>
    /// <param name="_itemId">
    /// The ID of the item.
    /// </param>
    /// <param name="_omHierarchyType">
    /// The hiearchy type
    /// </param>
    /// <param name="_omInternalOrganization">
    /// The internal organization
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInventItemLabelSetup</c> table; otherwise, an empty record.
    /// </returns>
    static RetailInventItemLabelSetup findByOmHierarchyTypeAndInternalOrg(
                                                    RetailLabelTypeBase _labelType,
                                                    ItemId              _itemId,
                                                    RefRecId            _omHierarchyType,
                                                    RefRecId            _omInternalOrganization,
                                                    boolean             _update = false)
    {
        RetailInventItemLabelSetup  retailInventItemLabelSetup;

        retailInventItemLabelSetup.selectForUpdate(_update);

        if (_itemId)
        {
            select firstonly retailInventItemLabelSetup
                index hint TypeItemPriceGroupIdx
                where retailInventItemLabelSetup.LabelType              == _labelType
                &&    retailInventItemLabelSetup.ItemId                 == _itemId
                &&    retailInventItemLabelSetup.OMHierarchyType        == _omHierarchyType
                &&    retailInventItemLabelSetup.OMInternalOrganization == _omInternalOrganization;
        }

        return retailInventItemLabelSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailInventItemLabelSetup</c> table by specified Report name.
    /// </summary>
    /// <param name="labelType">
    /// The type of the label.
    /// </param>
    /// <param name="itemId">
    /// The ID of the item.
    /// </param>
    /// <param name="reportName">
    /// Name of the report.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInventItemLabelSetup</c> table; otherwise, an empty record.
    /// </returns>

    static RetailInventItemLabelSetup findReportName(  RetailLabelTypeBase    labelType,
                                                    ItemId              itemId,
                                                    RetailReportName       reportName,
                                                    boolean             update = false)
    {
        RetailInventItemLabelSetup  rboInventItemLabelSetup;
        ;

        rboInventItemLabelSetup.selectForUpdate(update);

        if (itemId)
        {
            select firstonly rboInventItemLabelSetup
                index hint TypeItemPriceGroupIdx
                where rboInventItemLabelSetup.LabelType     == labelType
                &&    rboInventItemLabelSetup.ItemId        == itemId
                &&    rboInventItemLabelSetup.ReportName    == reportName;
        }

        return rboInventItemLabelSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040270</DeveloperDocumentation>
	<Label>@RET3134</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LabelType</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TypeItemPriceGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>TypeItemPriceGroupIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OMHierarchyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OMInternalOrganization</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Report</Name>
			<Label>@RET3130</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text1IsItemDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LabelType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLabelType</ExtendedDataType>
			<EnumType>RetailLabelTypeBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OMHierarchyType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OMInternalOrganization</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReportName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Text1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDescription</ExtendedDataType>
			<Label>@RET3124</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Text1IsItemDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailText1IsItemDescription</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Text2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDescription</ExtendedDataType>
			<Label>@RET3123</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeItemPriceGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReportName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OMHierarchyType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OMInternalOrganization</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OMHierarchyType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMHierarchyType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OMHierarchyType</Name>
					<Field>OMHierarchyType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OMInternalOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OMInternalOrganization</Name>
					<Field>OMInternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OMOperatingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OMInternalOrganization</Name>
					<Field>OMInternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInventItemLabelReportSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailInventItemLabelReportSetup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LabelType</Name>
					<SourceEDT>RetailLabelType</SourceEDT>
					<Field>LabelType</Field>
					<RelatedField>type</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReportName</Name>
					<SourceEDT>RetailReportName</SourceEDT>
					<Field>ReportName</Field>
					<RelatedField>ReportName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailInventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>itemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>