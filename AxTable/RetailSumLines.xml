<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSumLines</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailSumLines extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDetailLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the details from the item variants and creates the purchase order lines.
    /// </summary>
    void createDetailLines()
    {
        RetailSumLineManagement ofshSumLineManagement = new RetailSumLineManagement();

       ofshSumLineManagement.createDetailsFromVariants(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the purchase order lines.
    /// </summary>
    /// <returns>
    /// true if the purchase order lines are deleted successfully; otherwise, false.
    /// </returns>
    boolean deleteDetails()
    {
        PurchLine       tPurchLine;

        if (!this.PurchId || !this.LineNum)
            return false;

        delete_from tPurchLine
            index hint ItemIdx
            where tPurchLine.PurchId    == this.PurchId
               && tPurchLine.RetailLineNumEx1 == this.LineNum;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInventTransferLine</Name>
				<Source><![CDATA[
    private void deleteInventTransferLine(PurchLine _purchLine)
    {
        InventTransferLine  inventTransferLine;
        ;

        while select forupdate inventTransferLine
            where inventTransferLine.RetailReplenishRefTableId == _purchLine.TableId &&
                  inventTransferLine.RetailReplenishRefRecId   == _purchLine.RecId
        {
            if (inventTransferLine.validateDelete())
            {
                inventTransferLine.delete();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailsExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for the existence of a purchase line record.
    /// </summary>
    /// <returns>
    /// true if a purchase line exists for the given purchase ID and line number; otherwise, false.
    /// </returns>
    boolean detailsExist()
    {
        PurchLine       tPurchLine;

            select firstonly RecId from tPurchLine
                where tPurchLine.PurchId    ==  this.PurchId
                   && tPurchLine.RetailLineNumEx1 ==  this.LineNum;

        if (tPurchLine.RecId)
            return true;
        else
            return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the purchase quantity and purchase unit values from the <c>InventTable</c> table.
    /// </summary>
    void initFromInventTable()
    {
        InventTable     tInventTable = InventTable::find(this.ItemId);

        if (!this.InventLocationId)
            this.InventLocationId   = tInventTable.purchInventLocationId();

        this.PurchUnit          = tInventTable.purchUnitId();
        this.PurchQty           = tInventTable.purchStandardQty();
        //this.name = PurchParameters::nameAndOrDescription(inventTable, this.purchTable().languageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDisc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the inventory and price details.
    /// </summary>
    void initFromPriceDisc()
    {
        PriceDisc  priceDisc = this.createPriceDiscInstance(this.createAndInitPriceDiscParameters());

        if (priceDisc.findPrice(PurchTable::find(this.PurchId).PriceGroupId))
        {
            this.PurchPrice = priceDisc.price();
        }

        if (priceDisc.findLineDisc(InventTableModule::find(this.ItemId,ModuleInventPurchSales::Purch).LineDisc, PurchTable::find(this.PurchId).LineDisc))
        {
            this.LinePercent    = priceDisc.lineDiscPct();
        }
        else
        {
            this.LinePercent = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAndInitPriceDiscParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes an instance of the <c>PriceDiscParameters</c> class.
    /// </summary>
    /// <returns>An instance of the <c>PriceDiscParameters</c> class.</returns>
    protected PriceDiscParameters createAndInitPriceDiscParameters()
    {
        PriceDiscParameters parameters = PriceDiscParameters::construct();
        InventTableModule   tInventTableModule;
        PriceDisc           priceDisc;
        InventDim           tInventDim;

        tInventTableModule          = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Purch);
        tInventDim.InventLocationId = this.InventLocationId;
        tInventDim.InventSiteId     = InventLocation::find(this.InventLocationId).InventSiteId;
        tInventDim                  = InventDim::findDim(tInventDim);

        parameters.parmModuleType(ModuleInventPurchSales::Purch);
        parameters.parmItemId(this.ItemId);
        parameters.parmInventDim(tInventDim);
        parameters.parmUnitID(this.PurchUnit);
        parameters.parmPriceDiscDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        parameters.parmQty(this.PurchQty);
        parameters.parmAccountNum(PurchTable::find(this.PurchId).OrderAccount);
        parameters.parmCurrencyCode(PurchTable::find(this.PurchId).CurrencyCode);

        return parameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPriceDiscInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>PriceDisc</c> class.
    /// </summary>
    /// <param name = "_parameters">An instance of the <c>PriceDiscParameters</c> class.</param>
    /// <returns>An instance of the <c>PriceDisc</c> class.</returns>
    protected PriceDisc createPriceDiscInstance(PriceDiscParameters _parameters)
    {
        return PriceDisc::newFromPriceDiscParameters(_parameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initialises the item and purchase details from purchase line.
    /// </summary>
    /// <param name="_tPurchLine">
    ///     An instance of <c>PurchLine</c> table.
    /// </param>
    /// <returns>
    ///     true if the <c>RetailSumLines</c> table buffer has been changed; otherwise, false.
    /// </returns>
    boolean initFromPurchLine(PurchLine _tPurchLine)
    {
        boolean             ret;
        PurchQty            localPurchQty           = RetailSumLines::totalQty(_tPurchLine.PurchId, _tPurchLine.RetailLineNumEx1) + _tPurchLine.PurchQty - _tPurchLine.orig().PurchQty;
        InventLocationId    localInventLocationId   = _tPurchLine.inventDim().InventLocationId;

        ret = this.ItemId                != _tPurchLine.ItemId
              || this.InventLocationId      != localInventLocationId
              || this.PurchUnit             != _tPurchLine.PurchUnit
              || this.PurchQty              != localPurchQty
              || this.PurchPrice            != _tPurchLine.PurchPrice
              || this.LinePercent           != _tPurchLine.LinePercent
              || this.PurchId               != _tPurchLine.PurchId;

        if (ret)
        {
            this.ItemId             = _tPurchLine.ItemId;
            this.InventLocationId   = localInventLocationId;
            this.PurchUnit          = _tPurchLine.PurchUnit;

            this.PurchQty           = localPurchQty;

            this.PurchPrice         = _tPurchLine.PurchPrice;
            this.LinePercent        = _tPurchLine.LinePercent;

            this.PurchId            = _tPurchLine.PurchId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialises the inventory, price and purchase details .
    /// </summary>
    /// <param name="_fieldId">
    /// Field value that is modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailSumLines, ItemId):
                this.initFromInventTable();
                this.initFromPriceDisc();
            case fieldNum(RetailSumLines, PurchQty), fieldNum(RetailSumLines, PurchUnit),fieldNum(RetailSumLines, InventLocationId):
                this.initFromPriceDisc();
        }

        if (this.InventLocationId)
        {
            this.createDetailLines();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean         ret;

        ret = super();

        if (ret)
        {
            if ( this.detailsExist() )
                ret = checkFailed("@RET778");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLineFromPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in the <c>RetailSumLines</c> table.
    /// </summary>
    /// <param name="_tPurchLine">
    /// A <c>PurchLine</c> record.
    /// </param>
    /// <returns>
    /// A <c>RetailSumLines</c> record.
    /// </returns>
    static RetailSumLines createLineFromPurch(PurchLine   _tPurchLine)
    {
        RetailSumLines     tfshSumLines;

        tfshSumLines.initFromPurchLine(_tPurchLine);

        tfshSumLines.LineNum = RetailSumLines::lastLineNum(_tPurchLine.PurchId) + 1.0;
        tfshSumLines.insert();

        return tfshSumLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLineFromPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates or deletes a record from the <c>RetailSumLines</c> table.
    /// </summary>
    /// <param name="_tPurchLine">
    /// A <c>PurchLine</c> record.
    /// </param>
    /// <remarks>
    /// This method updates the sum lines record if a purchase quantity is present; otherwise, it deletes
    /// the record.
    /// </remarks>
    static void deleteLineFromPurch(PurchLine   _tPurchLine)
    {
        RetailSumLines     tfshSumLines;
        ;

        ttsbegin;

        tfshSumLines = RetailSumLines::find(_tPurchLine.PurchId, _tPurchLine.RetailLineNumEx1, true);

        if (!tfshSumLines.RecId)
        {
            ttscommit;
            return;
        }

        tfshSumLines.PurchQty = tfshSumLines.PurchQty - _tPurchLine.PurchQty;

        if (tfshSumLines.PurchQty)
        {
            tfshSumLines.update();
        }
        else
        {
            tfshSumLines.delete();
            tfshSumLines.deleteInventTransferLine(_tPurchLine);
        }

        ttscommit;

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailSumLines</c> table.
    /// </summary>
    /// <param name="purchId">
    /// The identification value of the purchase order.
    /// </param>
    /// <param name="lineNum">
    /// The line number of the sum lines record.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailSumLines</c> record if found; otherwise, an empty record.
    /// </returns>
    static RetailSumLines find(PurchId      purchId,
                            LineNum      lineNum,
                            boolean      update      = false)
    {
        RetailSumLines   fshSumLines;
        ;

        if (purchId && lineNum )
        {
            fshSumLines.selectForUpdate(update);

                select firstonly fshSumLines
                    index hint PurchLineIdx
                    where fshSumLines.PurchId == purchId     &&
                          fshSumLines.LineNum == lineNum;
        }

        return fshSumLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the maximum line number.
    /// </summary>
    /// <param name="purchId">
    /// The identification of the purchase order.
    /// </param>
    /// <returns>
    /// The maximum line number of the sum lines record.
    /// </returns>
    static LineNum  lastLineNum(PurchId  purchId)
    {
        return (select maxof(LineNum) from retailSumLines
                    index hint PurchLineIdx
                    where retailSumLines.PurchId == purchId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total purchase quantity.
    /// </summary>
    /// <param name="_sPurchId">
    /// The identification value of the purchase order.
    /// </param>
    /// <param name="_rLineNum">
    /// The line number of the sum lines.
    /// </param>
    /// <returns>
    /// The total purchase quantity of the purchase lines.
    /// </returns>
    static PurchQty totalQty(PurchId _sPurchId, LineNum _rLineNum)
    {
        PurchLine       tPurchLine;

        select sum(PurchQty) from tPurchLine
            where tPurchLine.PurchId    == _sPurchId
               && tPurchLine.RetailLineNumEx1 == _rLineNum;

        return tPurchLine.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLineFromCopyPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in the <c>RetailSumLines</c> table if not found with the given purchase ID.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> record.
    /// </param>
    /// <param name="_addQty">
    /// The value of a purchase quantity to be added.
    /// </param>
    /// <returns>
    /// A <c>RetailSumLines</c> record.
    /// </returns>
    static RetailSumLines updateLineFromCopyPurch(PurchLine    _purchLine,
                                                         PurchQty     _addQty = 0)
    {
        RetailSumLines     tfshSumLines;
        ;

        ttsbegin;

        tfshSumLines = RetailSumLines::find(_purchLine.PurchId, _purchLine.RetailLineNumEx1, true);

        tfshSumLines.initFromPurchLine(_purchLine);
        tfshSumLines.PurchQty += _addQty;

        if (tfshSumLines)
        {
            tfshSumLines.doUpdate();
        }
        else
        {
            tfshSumLines.LineNum = _purchLine.RetailLineNumEx1;
            tfshSumLines.doInsert();
        }

        ttscommit;

        return tfshSumLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLineFromPurch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates sum line records from the purchase line record.
    /// </summary>
    /// <param name="_tPurchLine">
    /// An instance of <c>PurchLine</c> table.
    /// </param>
    /// <param name="_bCreate">
    /// Boolean value which indicates whether to insert the record; optional.
    /// </param>
    /// <param name="_tfshSumLines">
    ///     An instance of <c>RetailsSumLines</c> table; optional.
    /// </param>
    /// <returns>
    /// Line number of the sum lines record.
    /// </returns>
    static LineNum updateLineFromPurch(
        PurchLine       _tPurchLine,
        boolean         _bCreate        = false,
        RetailSumLines  _tfshSumLines   = null)
    {
        RetailSumLines     tfshSumLines;

        ttsbegin;

        if (_tfshSumLines && _tfshSumLines.selectForUpdate())
        {
            tfshSumLines = _tfshSumLines;
        }
        else
        {
            tfshSumLines = RetailSumLines::find(_tPurchLine.PurchId, _tPurchLine.RetailLineNumEx1, true);
        }

        if (!_bCreate && !tfshSumLines.RecId)
        {
            ttscommit;
            return 0;
        }

        if (_bCreate && !tfshSumLines.RecId)
            tfshSumLines = RetailSumLines::createLineFromPurch(_tPurchLine);
        else
        {
            if (tfshSumLines.initFromPurchLine(_tPurchLine))
            {
                tfshSumLines.update();
            }
        }

        ttscommit;

        return tfshSumLines.LineNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260412</DeveloperDocumentation>
	<Label>@RET1266</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>PurchId</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>PurchLineIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>PurchLineIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Information</Name>
			<Label>@SYS60385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLinePercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS11770</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchOrderedQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchUnit</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>