<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveStepCodeTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveStepCodeTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the table.
    /// </summary>
    /// <param name = "_waveStepCode">
    /// The wave step code used to find the record.
    /// </param>
    /// <param name = "_forUpdate">
    /// If true the record will be selected for update.
    /// </param>
    /// <returns>
    /// A <c>WHSWaveStepCodeTable</c> record.
    /// </returns>
    [Hookable(false)]
    internal static WHSWaveStepCodeTable find(WHSWaveStepCode _waveStepCode, boolean _forUpdate = false)
    {
        WHSWaveStepCodeTable waveStepCodeTable;

        if (_waveStepCode)
        {
            if (_forUpdate)
            {
                waveStepCodeTable.selectForUpdate(true);
            }

            select firstOnly waveStepCodeTable
                where waveStepCodeTable.WaveStepCode == _waveStepCode;
        }

        return waveStepCodeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean exist(WHSWaveStepCode _waveStepCode)
    {
        return _waveStepCode
            && (WHSWaveStepCodeTable::find(_waveStepCode)).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performTemplateFormJumpRef</Name>
				<Source><![CDATA[
	[Hookable(false)]
	internal static boolean performTemplateFormJumpRef()
    {
        MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(WHSWaveStepCode), MenuItemType::Display);
        menuFunction.run();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWaveStepCodeValueUpdateValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the wave step code value is valid for the template.
    /// </summary>
    /// <param name = "_waveStepCode">Wave step code to be validated.</param>
    /// <param name = "_tableId">Table where the wave step code value is applied.</param>
    /// <returns>true if the wave step code is valid; otherwise false</returns>
    [Hookable(false)]
    internal static boolean isWaveStepCodeValueUpdateValid(WHSWaveStepCode  _waveStepCode, TableId _tableId)
    {
        boolean ret = true;

        if (!WHSWaveStepCodeTable::exist(_waveStepCode))
        {
            ret = checkFailed(strFmt("@WAX:Error_WaveStepCodeNotExisting", _waveStepCode));
        }
        else
        {
            WHSWaveStepTypeTableLinking waveStepTypeTableLinking = WHSWaveStepTypeTableLinking::newFromTableId(_tableId);
        
            if (!waveStepTypeTableLinking.hasWaveStepCode())
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            ret = waveStepTypeTableLinking.validateWaveStepCodeEligbleByWaveStepType(_waveStepCode);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();

        if (ret)
        {
            WHSWaveStepTypeTableLinking waveStepTypeTableLinking = WHSwaveStepTypeTableLinking::newFromWaveStepType(this.WaveStepType);

            if (waveStepTypeTableLinking.hasWaveStepCode())
            {
                if (waveStepTypeTableLinking.waveStepCodeExistsOnWaveStepTypeTemplate(this.WaveStepCode))
                {
                    ret = checkFailed(strFmt("@WAX:Error_UnableToDeleteWaveStepCode", this.WaveStepCode, tableId2PName(waveStepTypeTableLinking.waveStepTemplateTableId())));
                }
                else if (this.doesWaveStepCodeExistsOnWaveTemplateLine())
                {
                    ret = checkFailed(strFmt("@WAX:Error_UnableToDeleteWaveStepCode", this.WaveStepCode, tablePName(WHSWaveTemplateLine)));
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doesWaveStepCodeExistsOnWaveTemplateLine</Name>
				<Source><![CDATA[
    private boolean doesWaveStepCodeExistsOnWaveTemplateLine()
    {
        WHSWaveTemplateLine waveTemplateLine;

        select firstonly RecId from waveTemplateLine
            where waveTemplateLine.WaveStepCode == this.WaveStepCode;

        return waveTemplateLine.RecId != 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WaveStepCodeTable_DevDoc</DeveloperDocumentation>
	<FormRef>WHSWaveStepCode</FormRef>
	<Label>@WAX:WaveStepCodeTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>WaveStepCode</TitleField1>
	<TitleField2>WaveStepDescription</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WaveStepCodeIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveStepCodeIdx</PrimaryIndex>
	<ReplacementKey>WaveStepCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveStepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveStepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveStepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveStepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveStepType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSWaveStepType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveStepCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveStepCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveStepDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveStepDescription</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveStepCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveStepCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>