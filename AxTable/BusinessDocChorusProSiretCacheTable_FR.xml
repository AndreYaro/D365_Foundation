<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocChorusProSiretCacheTable_FR</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
using Newtonsoft.Json.Linq;

public class BusinessDocChorusProSiretCacheTable_FR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertFromJObjectIfDoesNotExist</Name>
				<Source><![CDATA[
    internal static BusinessDocChorusProSiretCacheTable_FR insertFromJObjectIfDoesNotExist(str _siret, JObject _structure)
    {
        if (_structure == null)
        {
            throw error("@BusinessDocumentSubmissionService:StructureWithSiretNotFoundChorusPro");
        }

        int structureId = BusinessDocChorusProJObjectUtils::retrieveIdFromStructure(_structure, true);
        
        BusinessDocChorusProSiretCacheTable_FR siretCacheTable;
        select firstonly siretCacheTable
            where siretCacheTable.Siret == _siret;

        if (siretCacheTable.RecId == 0)
        {
            siretCacheTable.StructureId = structureId;
            siretCacheTable.Siret = _siret;
            siretCacheTable.insert();
        }

        return siretCacheTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySiret</Name>
				<Source><![CDATA[
    internal static BusinessDocChorusProSiretCacheTable_FR findBySiret(str _siret, boolean _forUpdate = false)
    {
        BusinessDocChorusProSiretCacheTable_FR ret;
        if (_forUpdate)
        {
            ret.selectForUpdate(_forUpdate);
        }
        if (_siret)
        {
            select ret where ret.Siret == _siret;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>FR</CountryRegionCodes>
	<DeveloperDocumentation>@BusinessDocumentSubmissionService:ChorusProSiretCacheDevDoc</DeveloperDocumentation>
	<Label>@BusinessDocumentSubmissionService:ChorusProSiretCacheTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Siret</TitleField1>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>EInvoice</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Siret</Name>
			<ExtendedDataType>BusinessDocInvoiceAccountSiret_FR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>StructureId</Name>
			<Label>@BusinessDocumentSubmissionService:StructureId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ServiceCodesHashSum</Name>
			<ExtendedDataType>HashInt</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SiretIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Siret</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>