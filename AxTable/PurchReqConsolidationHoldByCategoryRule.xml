<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqConsolidationHoldByCategoryRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqConsolidationHoldByCategoryRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryDescription</Name>
				<Source><![CDATA[
    display Description categoryDescription()
    {
        return EcoResCategoryTranslation::find(EcoResCategory::find(this.ProcurementCategory).RecId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates records in the <c>PurchReqConsolidationHoldByCategoryRule</c> from specified Category.
    /// </summary>
    /// <param name="_purchReqConsolidationHoldByCategoryRuleDS">
    ///     The <c>PurchReqConsolidationHoldByCategoryRule</c> data source from <c>PurchReqConsolidationHoldByCategoryRule</c> form.
    /// </param>
    public void createFromCategory(FormDataSource _purchReqConsolidationHoldByCategoryRuleDS)
    {
        EcoResCategory category;

        category = EcoResCategory::find(this.ProcurementCategory);

        if (!category.isLeaf())
        {
            _purchReqConsolidationHoldByCategoryRuleDS.delete();
            PurchReqConsolidationHoldByCategoryRule::addFromCategory(this.PurchReqConsolidationRule,
                                                                     this.PurchReqSourcingItemType,
                                                                     category);
            _purchReqConsolidationHoldByCategoryRuleDS.executeQuery();
        }
        else
        {
            ttsbegin;
            this.selectForUpdate();
            this.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFromCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates leaf nodes for a category node.
    /// </summary>
    /// <param name="_purchReqConsolidationRule">
    ///    The record ID in the <c>PurchReqConsolidationRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_ecoResCategory">
    ///    A record of the <c>EcoResCategory</c> table.
    /// </param>
    public static void addFromCategory(RefRecId         _purchReqConsolidationRule,
                                       PurchReqLineType _purchReqSourcingItemType,
                                       EcoResCategory   _ecoResCategory)
    {
        EcoResCategory                          ecoResCategory;
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule;

        ecoResCategory = _ecoResCategory.getDescendants(false,true);

        ttsbegin;

        while (ecoResCategory)
        {
            if (!PurchReqConsolidationHoldByCategoryRule::existsByCategory(_purchReqConsolidationRule,
                                                                           _purchReqSourcingItemType,
                                                                           ecoResCategory))
            {
                purchReqConsolidationHoldByCategoryRule.selectForUpdate(false);
                purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule = _purchReqConsolidationRule;
                purchReqConsolidationHoldByCategoryRule.PurchReqSourcingItemType  = _purchReqSourcingItemType;
                purchReqConsolidationHoldByCategoryRule.ProcurementCategory       = ecoResCategory.RecId;
                purchReqConsolidationHoldByCategoryRule.insert();
            }

            next ecoResCategory;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether the specified record exists in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationHoldByCategoryRuleId">
    ///     The record ID in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _purchReqConsolidationHoldByCategoryRuleId)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule = null;

        select  RecId from purchReqConsolidationHoldByCategoryRule
            where   purchReqConsolidationHoldByCategoryRule.RecId == _purchReqConsolidationHoldByCategoryRuleId;

        return _purchReqConsolidationHoldByCategoryRuleId && purchReqConsolidationHoldByCategoryRule.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationRuleId">
    ///    The record ID in the <c>PurchReqSConsolidationRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the item type for a purchase order creation.
    /// </param>
    /// <param name="_ecoResCategory">
    ///    A record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <returns>
    ///    A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty
    ///    buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule existsByCategory(RefRecId         _purchReqConsolidationRuleId,
                                                                           PurchReqLineType _purchReqSourcingItemType,
                                                                           EcoResCategory   _ecoResCategory)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule;

        select firstonly purchReqConsolidationHoldByCategoryRule
        where purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule == _purchReqConsolidationRuleId
           && purchReqConsolidationHoldByCategoryRule.PurchReqSourcingItemType  == _purchReqSourcingItemType
           && purchReqConsolidationHoldByCategoryRule.ProcurementCategory       == _ecoResCategory.RecId;

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByItemType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule existsByItemType(RefRecId         _purchReqConsolidationRuleId,
                                                                           PurchReqLineType _purchReqSourcingItemType)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule;

        select firstonly purchReqConsolidationHoldByCategoryRule
        where purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule == _purchReqConsolidationRuleId
           && purchReqConsolidationHoldByCategoryRule.PurchReqSourcingItemType  == _purchReqSourcingItemType;

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationHoldByCategoryRuleId">
    ///     The record ID in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule find(RefRecId _purchReqConsolidationHoldByCategoryRuleId, boolean _forUpdate = false)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule = null;

        if (_purchReqConsolidationHoldByCategoryRuleId)
        {
            purchReqConsolidationHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqConsolidationHoldByCategoryRule where purchReqConsolidationHoldByCategoryRule.RecId == _purchReqConsolidationHoldByCategoryRuleId;
        }

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationRuleId">
    ///    The record ID in the <c>PurchReqConsolidationRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the item type for a purchase order creation.
    /// </param>
    /// <param name="_procurementCategory">
    ///    The record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty
    ///    buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule findByCategory(RefRecId         _purchReqConsolidationRuleId,
                                                                         PurchReqLineType _purchReqSourcingItemType,
                                                                         RefRecId         _procurementCategory,
                                                                         boolean          _forUpdate = false)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule = null;

        if (_purchReqConsolidationRuleId)
        {
            purchReqConsolidationHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqConsolidationHoldByCategoryRule
             where purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule == _purchReqConsolidationRuleId
                && purchReqConsolidationHoldByCategoryRule.PurchReqSourcingItemType  == _purchReqSourcingItemType
                && purchReqConsolidationHoldByCategoryRule.ProcurementCategory       == _procurementCategory;
        }

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHoldRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationRuleId">
    ///     The record ID in the <c>PurchReqConsolidationRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule findByHoldRule(RefRecId         _purchReqConsolidationRuleId,
                                                                         PurchReqLineType _purchReqSourcingItemType,
                                                                         boolean          _forUpdate = false)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule = null;

        if (_purchReqConsolidationRuleId)
        {
            purchReqConsolidationHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqConsolidationHoldByCategoryRule
             where purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule == _purchReqConsolidationRuleId
                && purchReqConsolidationHoldByCategoryRule.PurchReqSourcingItemType  == _purchReqSourcingItemType;
        }

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHoldRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqConsolidationHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqConsolidationHoldRuleId">
    ///     The record ID in the <c>PurchReqConsolidationRule</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqConsolidationHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqConsolidationHoldByCategoryRule findByHoldRuleId(RefRecId  _purchReqConsolidationHoldRuleId,
                                                                           boolean   _forUpdate = false)
    {
        PurchReqConsolidationHoldByCategoryRule purchReqConsolidationHoldByCategoryRule = null;

        if (_purchReqConsolidationHoldRuleId)
        {
            purchReqConsolidationHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqConsolidationHoldByCategoryRule
             where purchReqConsolidationHoldByCategoryRule.PurchReqConsolidationRule == _purchReqConsolidationHoldRuleId;
        }

        return purchReqConsolidationHoldByCategoryRule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReqConsolidation</ConfigurationKey>
	<DeveloperDocumentation>@SYS315409</DeveloperDocumentation>
	<Label>@SYS313474</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PurchReqConsolidationRule</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PurchReqConsolidationHoldByVendorRule</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PurchReqConsolidationHoldByVendorRule</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqConsolidationRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqConsolidationRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HoldByCategoryRule</Name>
			<Label>@SYS313476</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqConsolidationRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchReqConsolidationRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PurchReqSourcingItemType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS300596</Label>
			<EnumType>PurchReqLineType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchReqConsolidationRuleIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchReqConsolidationRule</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResCategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProcurementCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategory_PurchReqConsolidationHoldByCategoryRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchReqConsolidationRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchReqConsolidationRule</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchReqConsolidationRule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchReqConsolidationRule_PurchReqConsolidationHoldByCategoryRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchReqConsolidationRule</Name>
					<Field>PurchReqConsolidationRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>