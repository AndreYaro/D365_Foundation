<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqSourcingPolicyRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqSourcingPolicyRule extends SysPolicyRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the specified Purchase Requisition to PO Creation Policy Rule Table record exists in
    /// the <c>PurchReqSourcingPolicyRule</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID in the <c>PurchReqSourcingPolicyRule</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId  _recId)
    {
        return _recId
            && (select firstonly RecId from purchReqSourcingPolicyRule
                where purchReqSourcingPolicyRule.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified Purchase Requisition to PO Creation Policy Rule Table record in the
    /// <c>PurchReqSourcingPolicyRule</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID in the <c>PurchReqSourcingPolicyRule</c> table to retrieve.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>PurchReqSourcingPolicyRule</c> table; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingPolicyRule find(recId _recId, boolean _forUpdate = false)
    {
        PurchReqSourcingPolicyRule  purchReqSourcingPolicyRule;

        if (_recId)
        {
            purchReqSourcingPolicyRule.selectForUpdate(_forUpdate);

            select firstonly purchReqSourcingPolicyRule where purchReqSourcingPolicyRule.RecId == _recId;
        }

        return purchReqSourcingPolicyRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchReqSourcingPolicyRuleContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a container holding the two settings used from <c>PurchReqSourcingPolicyRule</c>: Price/discount transfer setting and AllowPriceDiscountTransferOverride.
    /// The query is based on business legal entity and receiving operating unit.
    /// </summary>
    /// <param name="_businessLegalEntity">
    /// Business legal entity to be used in the query.
    /// </param>
    /// <param name="_receivingOperatingUnit">
    /// Receiving operating unit to be used in the query,
    /// </param>
    /// <returns>
    /// Container holding the two settings used from <c>PurchReqSourcingPolicyRule</c>: Price/discount transfer setting and AllowPriceDiscountTransferOverride.
    /// It uses fixed positions for holding the two settings.
    /// </returns>
    public static container getPurchReqSourcingPolicyRuleContainer(LegalEntityRecId  _businessLegalEntity, OMOperatingUnitRefRecId _receivingOperatingUnit)
    {
        #PurchReqPriceDiscountTransferPolicyRule
        PurchReqSourcingPolicyRule  purchReqRule;
        RefRecId                    orgArray[2];
        RecId                       purchReqRuleRecId;
        container                   c;

        orgArray[1] = _businessLegalEntity;
        orgArray[2] = _receivingOperatingUnit;

        purchReqRuleRecId = SysPolicies::getPolicyRuleID(
                                        orgArray,
                                        SysPolicyRuleType::findByRuleTypePolicyType(
                                                SysPolicyRuleTypeEnum::RequisitionToPOCreationRule,
                                                SysPolicyTypeEnum::PurchasingPolicy
                                            ).RecId,
                                        SysPolicyTypeEnum::PurchasingPolicy);
        purchReqRule = PurchReqSourcingPolicyRule::find(purchReqRuleRecId);

        c = conIns(c, #PosPriceDiscountTransfer, purchReqRule.PriceDiscountTransfer);
        c = conIns(c, #PosAllowPriceDiscountTransferOverride, purchReqRule.AllowPriceDiscountTransferOverride);

        return c;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the record based on the input parameters.
    /// </summary>
    /// <param name="_policy">
    /// The policy that relates to this record.
    /// </param>
    /// <param name="_policyType">
    /// The policy type.
    /// </param>
    public void initValues(RefRecId _policyIndex, RefRecId _policyRuleTypeIndex)
    {
        date                                beginDate = dateNull();
        date                                endDate = maxDate();
        PurchReqSourcingPolicyRule          nextPurchReqSourcingPolicyRule;

        this.initValue();
        this.Policy                  = _policyIndex;
        this.PolicyRuleType          = _policyRuleTypeIndex;
        this.ValidFrom               = SysPolicyRule::getDefaultStartDate(_policyIndex, _policyRuleTypeIndex);
        this.PriceDiscountTransfer   = PurchReqPolicyPriceDiscountTransfer::OnlyIfNoTradeAgreements;
        this.ItemDescriptionTransfer = PurchReqItemDescriptionTransfer::FromProductDefinition;
        this.IsInherited             = NoYes::No;

        select firstonly validtimestate(beginDate, endDate) nextPurchReqSourcingPolicyRule order by ValidFrom where
                nextPurchReqSourcingPolicyRule.Policy    == _policyIndex &&
                nextPurchReqSourcingPolicyRule.ValidFrom >  this.ValidFrom;

        if (nextPurchReqSourcingPolicyRule)
        {
            this.ValidTo = DateTimeUtil::addSeconds(nextPurchReqSourcingPolicyRule.ValidFrom, -1);
        }
        else
        {
            this.ValidTo = DateTimeUtil::maxValue();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS315415</DeveloperDocumentation>
	<Label>@SYS300289</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>RecId</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>SysPolicyRule</Extends>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsBatchGenerationEnabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PolicyRule</Name>
			<Label>@SYS300289</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsBatchGenerationEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorOption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowPriceDiscountTransferOverride</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchReqAllowPriceDiscTransferOverride</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ErrorOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchReqPurchOrderGenerationErrorOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBatchGenerationEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS342739</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceDiscountTransfer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchReqPolicyPriceDiscountTransfer</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemDescriptionTransfer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchReqItemDescriptionTransfer</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PurchReqOverrideItemDescription</Name>
			<ExtendedDataType>PurchReqOverrideItemDescription</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysPolicyRule1_6332</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SysPolicyRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SysPolicyRule</RelatedTableRole>
			<RelationshipType>Specialization</RelationshipType>
			<Role>SysPolicyRule_PurchReqSourcingPolicyRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>