<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConsolidationProposedShipment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSShipConsolidationProposedShipment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromProposedShipmentContent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a record based on the record of the <c>WHSShipConsolidationProposedShipmentContent</c> table.
    /// </summary>
    /// <param name = "_shipConsolidationProposedShipmentContent">Proposed shipment content.</param>
    internal void initFromProposedShipmentContent(WHSShipConsolidationProposedShipmentContent _shipConsolidationProposedShipmentContent)
    {
        this.ShipConsolidationSession = _shipConsolidationProposedShipmentContent.ShipConsolidationSession;
        this.ProposedGroup            = _shipConsolidationProposedShipmentContent.ProposedGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBaseShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a record based on the consolidated shipment.
    /// </summary>
    /// <param name = "_shipmentTable">Consolidated shipment.</param>
    internal void initFromBaseShipment(WHSShipmentTable _shipmentTable)
    {
        this.ShipmentId               = _shipmentTable.ShipmentId;
        this.LoadId                   = _shipmentTable.LoadId;
        this.LoadTemplateId           = WHSLoadTable::find(_shipmentTable.LoadId).LoadTemplateId;
        this.ShipConsolidationPolicy  = _shipmentTable.ShipConsolidationPolicy;
        this.ShipmentStatus           = _shipmentTable.ShipmentStatus;
        this.AccountNum               = _shipmentTable.AccountNum;
        this.DeliveryName             = _shipmentTable.DeliveryName;
        this.DeliveryPostalAddress    = _shipmentTable.DeliveryPostalAddress;
        this.InventLocationId         = _shipmentTable.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainingVolume</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the remaining volume of a proposed shipment based on the Load Template
    /// </summary>
    /// <returns>
    /// The remaining volume of a proposed shipment.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    internal display Volume remainingVolume()
    {
        return WHSLoadTemplate::find(this.LoadTemplateId).LoadMaxVolume - this.totalVolume();
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainingWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the remaining weight of a proposed shipment based on the Load Template
    /// </summary>
    /// <returns>
    /// The remaining weight of a proposed shipment.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    internal display Weight remainingWeight()
    {
        return WHSLoadTemplate::find(this.LoadTemplateId).LoadMaxWeight - this.totalWeight();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalVolume</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the total volume of a proposed shipment.
    /// </summary>
    /// <returns>
    /// The total volume of a proposed shipment.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    internal display Volume totalVolume()
    {
        WHSShipConsolidationProposedShipmentContent contentLine;

        select sum(TotalVolume) from contentLine
            where contentLine.ProposedShipment == this.RecId;

        return contentLine.TotalVolume;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the total weight of a proposed shipment.
    /// </summary>
    /// <returns>
    /// The total weight of a proposed shipment.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    internal display Weight totalWeight()
    {
        WHSShipConsolidationProposedShipmentContent contentLine;

        select sum(TotalWeight) from contentLine
            where contentLine.ProposedShipment == this.RecId;

        return contentLine.TotalWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>WHSShipConsolidationProposedShipment</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The RecId of the <c>WHSShipConsolidationProposedShipment</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return _recId &&
            (select firstonly RecId from WHSShipConsolidationProposedShipment
                where WHSShipConsolidationProposedShipment.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a proposed shipment with the RecId provided.
    /// </summary>
    /// <param name="_recId">
    /// The recId to search for.
    /// </param>
    /// <param name="_forupdate">
    /// A flag indicating whether to open the record for update; optional.
    /// </param>
    /// <returns>
    /// A proposed shipment with the RecId provided, or null if no such proposed shipment is found.
    /// </returns>
    public static WHSShipConsolidationProposedShipment find(RecId _recId, boolean _forupdate = false)
    {
        WHSShipConsolidationProposedShipment shipConsolidationProposedShipment;

        if (_recId)
        {
            shipConsolidationProposedShipment.selectForUpdate(_forupdate);

            select firstonly shipConsolidationProposedShipment
                where shipConsolidationProposedShipment.RecId == _recId;
        }

        return shipConsolidationProposedShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>WHSShipConsolidationProposedShipment</c> table exists for a given shipment consolidation session.
    /// </summary>
    /// <param name = "_shipConsolidationSessionId">Shipment consolidation session ID.</param>
    /// <param name = "_shipmentId">The Shipment ID to search for.</param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByShipment(WHSShipConsolidationSessionRecId _shipConsolidationSessionId, WHSShipmentId _shipmentId)
    {
        return _shipConsolidationSessionId && _shipmentId &&
            (select firstonly RecId from WHSShipConsolidationProposedShipment
                where WHSShipConsolidationProposedShipment.ShipConsolidationSession == _shipConsolidationSessionId
                &&    WHSShipConsolidationProposedShipment.ShipmentId               == _shipmentId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a proposed shipment with the Shipment ID provided.
    /// </summary>
    /// <param name = "_shipConsolidationSessionId">Shipment consolidation session ID.</param>
    /// <param name = "_shipmentId">The Shipment ID to search for.</param>
    /// <param name = "_forUpdate">A flag indicating whether to open the record for update; optional.</param>
    /// <returns>A proposed shipment with the shipment ID provided, or null if no such proposed shipment is found.</returns>
    public static WHSShipConsolidationProposedShipment findByShipment(WHSShipConsolidationSessionRecId _shipConsolidationSessionId, WHSShipmentId _shipmentId, boolean _forUpdate = false)
    {
        WHSShipConsolidationProposedShipment shipConsolidationProposedShipment;

        if (_shipConsolidationSessionId && _shipmentId)
        {
            shipConsolidationProposedShipment.selectForUpdate(_forupdate);

            select firstonly shipConsolidationProposedShipment
                where shipConsolidationProposedShipment.ShipConsolidationSession == _shipConsolidationSessionId
                &&    shipConsolidationProposedShipment.ShipmentId               == _shipmentId;
        }

        return shipConsolidationProposedShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupShipmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a lookup of proposed shipment IDs for a given shipment consolidation session.
    /// </summary>
    /// <param name="_shipmentIdControl">
    /// The control to build lookup for.
    /// </param>
    /// <param name = "_sessionId">Shipment consolidation session ID.</param>
    internal static void lookupShipmentId(
        FormControl                   _shipmentIdControl,
        WHSShipConsolidationSessionRecId _sessionId)
    {
        Query proposedShipmentQuery = new Query();
        QueryBuildDataSource proposedShipmentDataSource =  proposedShipmentQuery.addDataSource(tableNum(WHSShipConsolidationProposedShipment));
        QueryBuildRange sessionRange = proposedShipmentDataSource.addRange(fieldNum(WHSShipConsolidationProposedShipment, ShipConsolidationSession));
        sessionRange.value(queryValue(_sessionId));

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(WHSShipConsolidationProposedShipment), _shipmentIdControl);
        sysTableLookup.parmQuery(proposedShipmentQuery);

        sysTableLookup.addLookupfield(fieldNum(WHSShipConsolidationProposedShipment, ShipmentId));

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfValidationErrors</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if validation errors exist.
    /// </summary>
    /// <returns>
    ///    A <c>container</c> type with a warning symbol (exclamation mark) if there are validation errors.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    internal display container checkIfValidationErrors()
    {
        WHSShipConsolidationError shipConsolidationError;
        str                       text;
        Set                       errors = new Set(Types::String);
        boolean                   errorHardStop;

        #xppTexts

        while select shipConsolidationError
            where shipConsolidationError.ProposedShipment == this.RecId
            &&   !shipConsolidationError.ErrorOverride
        {
            str curError = shipConsolidationError.labelDescription();

            if (!errors.in(curError))
            {
                text += (text ? #newline : '') + curError;
                errors.add(curError);
            }

            if (shipConsolidationError.ErrorHardStop)
            {
                errorHardStop = true;
            }
        }

        if (!errors.empty())
        {
            if (errorHardStop)
            {
                return ImageReference::constructForSymbol(ImageReferenceSymbol::Cancel, text).pack();
            }
            else
            {
                return ImageReference::constructForSymbol(ImageReferenceSymbol::HighPriority, text).pack();
            }
        }

        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSShipConsolidationProposedShipment_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:ProposedShipment</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ShipmentId</TitleField1>
	<TitleField2>AccountNum</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>ShipConsolidationSessionShipmentIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipConsolidationSession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipConsolidationSession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProposedGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipConsolidationPolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@WAX1461</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDeliveryName</ExtendedDataType>
			<Label>@WAX5408</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadTemplateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ProposedGroup</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ShipConsolidationPolicy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WHSShipConsolidationPolicyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ShipConsolidationSession</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WHSShipConsolidationSessionRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipmentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSShipmentId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShipmentStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSShipmentStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ShipConsolidationSessionShipmentIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ShipConsolidationSession</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ShipmentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSShipConsolidationSession</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSShipConsolidationSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipConsolidationSession</Name>
					<Field>ShipConsolidationSession</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSShipmentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSShipmentTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipmentId</Name>
					<Field>ShipmentId</Field>
					<RelatedField>ShipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ShipmentIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLoadTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSLoadTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadId</Name>
					<SourceEDT>WHSLoadId</SourceEDT>
					<Field>LoadId</Field>
					<RelatedField>LoadId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSShipConsolidationPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSShipConsolidationPolicy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipConsolidationPolicy</Name>
					<Field>ShipConsolidationPolicy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddress_WHSShipmentTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>