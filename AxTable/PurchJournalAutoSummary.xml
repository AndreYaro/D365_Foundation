<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchJournalAutoSummary</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchJournalAutoSummary extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    void initFromPurchTable(PurchTable _purchTable)
    {
        this.ModuleType     = ModuleVendPurch::Purch;
        this.VendAccount    = '';
        this.PurchId        = _purchTable.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    void initFromVendTable(VendTable _vendTable)
    {
        this.ModuleType     = ModuleVendPurch::Vend;
        this.VendAccount    = _vendTable.AccountNum;
        this.PurchId        = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendDefaultAutoSummary</Name>
				<Source><![CDATA[
    PurchAutoSummary vendDefaultAutoSummary(PurchTable _purchTable)
    {
        PurchSummaryFields purchSummaryFields = PurchSummaryFields::construct(this.DocumentStatus);

        return purchSummaryFields.autoSummary(_purchTable, ModuleVendPurch::Vend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoSummary</Name>
				<Source><![CDATA[
    static PurchAutoSummary autoSummary(DocumentStatus   _documentStatus,
                                        ModuleVendPurch  _moduleType,
                                        VendAccount      _vendAccount,
                                        PurchId          _purchId)
    {
        return PurchJournalAutoSummary::find(_documentStatus, _moduleType, _vendAccount, _purchId).AutoSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoSummaryJournals</Name>
				<Source><![CDATA[
    static container autoSummaryJournals()
    {
        //<GEERU>
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        {
            return [ DocumentStatus::PurchaseOrder,
                     DocumentStatus::ReceiptsList,
                     DocumentStatus::PackingSlip,
                     DocumentStatus::Invoice,
                     DocumentStatus::Invoice4Paym_RU ];
        }
        // </GEERU>

        return [DocumentStatus::PurchaseOrder,
                DocumentStatus::ReceiptsList,
                DocumentStatus::PackingSlip,
                DocumentStatus::Invoice];
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAllFromVendTable</Name>
				<Source><![CDATA[
    static Counter checkAllFromVendTable(VendTable _vendTable)
    {
        //<GEERU>
        #ISOCountryRegionCodes
        //</GEERU>

        Counter counter = 0;

        if (!PurchJournalAutoSummary::exist(DocumentStatus::PurchaseOrder, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            warning(strFmt("@SYS70756", DocumentStatus::PurchaseOrder));
            counter++;
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::ReceiptsList, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            warning(strFmt("@SYS70756", DocumentStatus::ReceiptsList));
            counter++;
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::PackingSlip, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            warning(strFmt("@SYS70756", DocumentStatus::PackingSlip));
            counter++;
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::Invoice, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            warning(strFmt("@SYS70756", DocumentStatus::Invoice));
            counter++;
        }

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) &&
            ! PurchJournalAutoSummary::exist(DocumentStatus::Invoice4Paym_RU, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            warning(strFmt("@SYS70756", DocumentStatus::Invoice4Paym_RU));
            counter++;
        }
        // </GEERU>

        return counter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromVendTable</Name>
				<Source><![CDATA[
    static void createFromVendTable(DocumentStatus _documentStatus, VendTable _vendTable)
    {
        PurchJournalAutoSummary purchJournalAutoSummary;

        ttsbegin;

        purchJournalAutoSummary.clear();
        purchJournalAutoSummary.initValue();
        purchJournalAutoSummary.DocumentStatus = _documentStatus;
        purchJournalAutoSummary.initFromVendTable(_vendTable);
        purchJournalAutoSummary.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(DocumentStatus   _documentStatus,
                         ModuleVendPurch  _moduleType,
                         VendAccount      _vendAccount,
                         PurchId          _purchId)
    {
        PurchJournalAutoSummary purchJournalAutoSummary;
        VendAccount             vendAccount;
        PurchId                 purchId;

        vendAccount = _vendAccount;
        purchId     = _purchId;

        if (_moduleType == ModuleVendPurch::Vend)
        {
            purchId = '';
        }
        else
        {
            vendAccount = '';
        }

        return (select firstonly purchJournalAutoSummary
                    where purchJournalAutoSummary.DocumentStatus    == _documentStatus  &&
                          purchJournalAutoSummary.ModuleType        == _moduleType      &&
                          purchJournalAutoSummary.VendAccount       == vendAccount      &&
                          purchJournalAutoSummary.PurchId           == purchId).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchJournalAutoSummary find(DocumentStatus   _documentStatus,
                                        ModuleVendPurch  _moduleType,
                                        VendAccount      _vendAccount,
                                        PurchId          _purchId,
                                        boolean          _update = false)
    {
        PurchJournalAutoSummary purchJournalAutoSummary;
        VendAccount             vendAccount;
        PurchId                 purchId;

        vendAccount = _vendAccount;
        purchId     = _purchId;

        if (_moduleType == ModuleVendPurch::Vend)
        {
            purchId = '';
        }
        else
        {
            vendAccount = '';
        }

        purchJournalAutoSummary.selectForUpdate (_update);

        select firstonly purchJournalAutoSummary
            where purchJournalAutoSummary.DocumentStatus    == _documentStatus  &&
                  purchJournalAutoSummary.ModuleType        == _moduleType      &&
                  purchJournalAutoSummary.VendAccount       == vendAccount      &&
                  purchJournalAutoSummary.PurchId           == purchId;

        return purchJournalAutoSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAllFromPurchTable</Name>
				<Source><![CDATA[
    static void initAllFromPurchTable(PurchTable _purchTable)
    {
        PurchJournalAutoSummary purchJournalAutoSummary;
        boolean                 writeAll = false;
        container               autoSummaryJournal = PurchJournalAutoSummary::autoSummaryJournals();
        int                     journal;
        DocumentStatus          documentStatus;
        int                     journalLen = conLen(autoSummaryJournal);

        for (journal = 1; journal <= journalLen && !writeAll; journal++)
        {
            documentStatus = conPeek(autoSummaryJournal, journal);

            purchJournalAutoSummary = PurchJournalAutoSummary::find(documentStatus, ModuleVendPurch::Purch, '', _purchTable.PurchId);
            if (!purchJournalAutoSummary || purchJournalAutoSummary.AutoSummary != purchJournalAutoSummary.vendDefaultAutoSummary(_purchTable))
            {
                writeAll = true;
            }
        }

        if (writeAll)
        {
            PurchJournalAutoSummary::writeAllFromPurchTable(_purchTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAllFromVendTable</Name>
				<Source><![CDATA[
    static void initAllFromVendTable(VendTable _vendTable)
    {
        //<GEERU>
        #ISOCountryRegionCodes
        //</GEERU>

        ttsbegin;

        if (!PurchJournalAutoSummary::exist(DocumentStatus::PurchaseOrder, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            PurchJournalAutoSummary::createFromVendTable(DocumentStatus::PurchaseOrder, _vendTable);
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::ReceiptsList, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            PurchJournalAutoSummary::createFromVendTable(DocumentStatus::ReceiptsList, _vendTable);
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::PackingSlip, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            PurchJournalAutoSummary::createFromVendTable(DocumentStatus::PackingSlip, _vendTable);
        }

        if (!PurchJournalAutoSummary::exist(DocumentStatus::Invoice, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            PurchJournalAutoSummary::createFromVendTable(DocumentStatus::Invoice, _vendTable);
        }

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) &&
            ! PurchJournalAutoSummary::exist(DocumentStatus::Invoice4Paym_RU, ModuleVendPurch::Vend, _vendTable.AccountNum, ''))
        {
            PurchJournalAutoSummary::createFromVendTable(DocumentStatus::Invoice4Paym_RU, _vendTable);
        }
        // </GEERU>

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeAllFromPurchTable</Name>
				<Source><![CDATA[
    static void writeAllFromPurchTable(PurchTable _purchTable)
    {
        container   autoSummaryJournal = PurchJournalAutoSummary::autoSummaryJournals();
        int         journal;
        int         journalLen = conLen(autoSummaryJournal);

        ttsbegin;

        for (journal = 1; journal <= journalLen; journal++)
        {
            PurchJournalAutoSummary::writeFromPurchTable(conPeek(autoSummaryJournal, journal), _purchTable);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeFromPurchTable</Name>
				<Source><![CDATA[
    static void writeFromPurchTable(DocumentStatus _documentStatus, PurchTable _purchTable)
    {
        ttsbegin;

        PurchJournalAutoSummary purchJournalAutoSummary = PurchJournalAutoSummary::find(_documentStatus,
                                                            ModuleVendPurch::Purch, '', _purchTable.PurchId, true);

        if (!purchJournalAutoSummary)
        {
            purchJournalAutoSummary.clear();
            purchJournalAutoSummary.initValue();
            purchJournalAutoSummary.DocumentStatus = _documentStatus;
            purchJournalAutoSummary.initFromPurchTable(_purchTable);
        }

        purchJournalAutoSummary.AutoSummary = purchJournalAutoSummary.vendDefaultAutoSummary(_purchTable);
        purchJournalAutoSummary.write();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124515</DeveloperDocumentation>
	<Label>@SYS58095</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>DocumentStatus</TitleField1>
	<TitleField2>ModuleType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PurchJournalAutoSummaryIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>PurchJournalAutoSummaryIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoSummary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentStatus</Name>
			<Label>@SYS22101</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoSummary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoSummary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchAutoSummary</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8008</Label>
			<EnumType>DocumentStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ModuleVendPurch</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchJournalAutoSummaryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModuleType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchJournalAutoSummaryPurchIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModuleType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>ModuleVendPurch::Purch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>ModuleVendPurch::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>