<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorProductCandidateDefaultOrderSettings</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatVendorProductCandidateDefaultOrderSettings extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNewLeadTime</Name>
				<Source><![CDATA[
    display CatVendorProductPriceNewValue getNewLeadTime()
    {
        return CatVendorProductCandidateDefaultOrderSettings::getNewValue(this.VendorProductCandidate,
                                                        fieldNum(CatVendorProductCandidateDefaultOrderSettings, LeadTime)
                                                        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewMinimumOrderQty</Name>
				<Source><![CDATA[
    display CatVendorProductPriceNewValue getNewMinimumOrderQty()
    {
        return CatVendorProductCandidateDefaultOrderSettings::getNewValue(this.VendorProductCandidate,
                                                        fieldNum(CatVendorProductCandidateDefaultOrderSettings, LowestQty)
                                                        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewMaximumOrderQty</Name>
				<Source><![CDATA[
    display CatVendorProductPriceNewValue getNewMaximumOrderQty()
    {
        return CatVendorProductCandidateDefaultOrderSettings::getNewValue(this.VendorProductCandidate,
                                                        fieldNum(CatVendorProductCandidateDefaultOrderSettings, HighestQty)
                                                        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewMultipleValue</Name>
				<Source><![CDATA[
    display CatVendorProductPriceNewValue getNewMultipleValue()
    {
        return CatVendorProductCandidateDefaultOrderSettings::getNewValue(this.VendorProductCandidate,
                                                            fieldNum(CatVendorProductCandidateDefaultOrderSettings, MultipleQty)
                                                            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewStandardQty</Name>
				<Source><![CDATA[
    display CatVendorProductPriceNewValue getNewStandardQty()
    {
        return CatVendorProductCandidateDefaultOrderSettings::getNewValue(this.VendorProductCandidate,
                                                        fieldNum(CatVendorProductCandidateDefaultOrderSettings, StandardQty)
                                                        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewValue</Name>
				<Source><![CDATA[
    static public CatVendorProductPriceNewValue getNewValue(RefRecId       _catVendorProductCandidateID,
                                                             FieldId    _fieldId)
    {
        CatVendorProductCandidate   catVendorProductCandidate;
        CatVendorProductCandidateDefaultOrderSettings  catVendorProductCandidateDefaultOrderSettings;
        CatVendorProductPriceNewValue newValue;

        select firstonly ActionType, Status from catVendorProductCandidate
                where catVendorProductCandidate.RecId == _catVendorProductCandidateID
            join catVendorProductCandidateDefaultOrderSettings
                where catVendorProductCandidateDefaultOrderSettings.VendorProductCandidate == catVendorProductCandidate.RecId;

        if (catVendorProductCandidate)
        {
            if (catVendorProductCandidate.ActionType == CatProductActionType::Delete)
            {
                if (catVendorProductCandidate.Status == CatVendorProductStatus::Approved)
                {
                    newValue = "@SYS311898";
                }
                else if (catVendorProductCandidate.Status == CatVendorProductStatus::Rejected)
                {
                    newValue = "@SYS311899";
                }
                else
                {
                    newValue = "@SYS311897";
                }
            }
            else
            {
                newValue = strFmt('%1',catVendorProductCandidateDefaultOrderSettings.(_fieldId));
            }
        }

        return newValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProductCandidateDefaultOrderSettingsCurrentValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current value of the product prices.
    /// </summary>
    /// <param name="_catVendorCatalogMaintenanceRequestId">
    /// The record ID of a <c>CatVendorCatalogMaintenanceRequest</c> record.
    /// </param>
    /// <returns>
    /// A <c>CatVendorProductCandidateDefaultOrderSettings</c> table buffer.
    /// </returns>
    public static CatVendorProductCandidateDefaultOrderSettings getProductCandidateDefaultOrderSettingsCurrentValues(RefRecId _catVendorCatalogMaintenanceRequestId)
    {
        CatVendorCatalogMaintenanceRequest                  catVendorCatalogMaintenanceRequest;
        CatVendorProductCandidateDefaultOrderSettings       catVendorProductCandidateDefaultOrderSettingsTmp;
        CatVendorProductCandidate                           catVendorProductCandidate;
        CatVendorApprovedProduct                            catVendorApprovedProduct;
        InventItemPurchSetup                                inventItemPurchSetup;
        InventTableModule                                   inventTableModule;
        CatVendorCatalog                                    catVendorCatalog;
        InventTable                                         inventTable;
        UnitOfMeasure                                       unitOfMeasure;
        TransDate                                           now = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) ;

        catVendorProductCandidateDefaultOrderSettingsTmp.setTmp();
        while select VendorCatalog from catVendorCatalogMaintenanceRequest
            where catVendorCatalogMaintenanceRequest.RecId == _catVendorCatalogMaintenanceRequestId

            join VendorParty from catVendorCatalog
                    where catVendorCatalog.RecId == catVendorCatalogMaintenanceRequest.VendorCatalog

            join VendorProductCode from catVendorProductCandidate
                    where catVendorProductCandidate.CatalogMaintenanceRequest == _catVendorCatalogMaintenanceRequestId
        {
            select VendorProductCode, DirPartyTable, EcoResProduct from catVendorApprovedProduct
                    where catVendorApprovedProduct.VendorProductCode == catVendorProductCandidate.VendorProductCode
                            && catVendorApprovedProduct.DirPartyTable == catVendorCatalog.VendorParty

            join Product, ItemId from inventTable
                    where inventTable.Product == catVendorApprovedProduct.EcoResProduct

            // Get purchase order default settings
            outer join firstonly UnitId, ItemId from inventTableModule
                    where inventTableModule.ItemId == inventTable.ItemId
                          && inventTableModule.ModuleType == ModuleInventPurchSales::Purch

            outer join RecId from unitOfMeasure
                where inventTableModule.UnitId == unitOfMeasure.Symbol

            outer join inventItemPurchSetup
                where inventItemPurchSetup.ItemId == inventTableModule.ItemId;

            if (inventItemPurchSetup)
            {
                catVendorProductCandidateDefaultOrderSettingsTmp.VendorProductCandidate = catVendorProductCandidate.RecId;
                catVendorProductCandidateDefaultOrderSettingsTmp.UnitOfMeasure          = unitOfMeasure.RecId;
                catVendorProductCandidateDefaultOrderSettingsTmp.LowestQty              = inventItemPurchSetup.LowestQty;
                catVendorProductCandidateDefaultOrderSettingsTmp.HighestQty             = inventItemPurchSetup.HighestQty;
                catVendorProductCandidateDefaultOrderSettingsTmp.StandardQty            = inventItemPurchSetup.StandardQty;
                catVendorProductCandidateDefaultOrderSettingsTmp.MultipleQty            = inventItemPurchSetup.MultipleQty;
                catVendorProductCandidateDefaultOrderSettingsTmp.LeadTime               = inventItemPurchSetup.LeadTime;
                catVendorProductCandidateDefaultOrderSettingsTmp.insert();
            }
            else
            {
                CatVendorProductCandidateDefaultOrderSettings catVendorProductCandidateDefaultOrderSettings;
                select UnitOfMeasure from catVendorProductCandidateDefaultOrderSettings
                    where   catVendorProductCandidateDefaultOrderSettings.VendorProductCandidate == catVendorProductCandidate.RecId;

                catVendorProductCandidateDefaultOrderSettingsTmp.VendorProductCandidate = catVendorProductCandidate.RecId;
                catVendorProductCandidateDefaultOrderSettingsTmp.UnitOfMeasure          = catVendorProductCandidateDefaultOrderSettings.UnitOfMeasure;
                catVendorProductCandidateDefaultOrderSettingsTmp.insert();
            }
        }

        return catVendorProductCandidateDefaultOrderSettingsTmp;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendCatalogImport</ConfigurationKey>
	<DeveloperDocumentation>@SCM:CatVendorProductCandidateDefaultOrderSettingsTableDevDoc</DeveloperDocumentation>
	<Label>@SCM:CatVendorProductCandidateDefaultOrderSettingsTableLabel</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>VendorProductCandidate</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>VendorProductCandidateIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorProductCandidate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorProductCandidate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultipleQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>QtyMultiples</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LowestQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>QtyLowest</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StandardQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>QtyStandard</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>HighestQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>QtyHighest</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LeadTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeadTimePurchDefault</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendorProductCandidateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorProductCandidate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatVendorProductCandidate</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CatVendorProductCandidate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatVendorProductCandidate</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CatVendorProductCandidate_CatVendorProductCandidatePrice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorProductCandidate</Name>
					<Field>VendorProductCandidate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>UnitOfMeasure_CatVendorProductCandidateDefaultOrderSettings</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>