<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSLocationLoad</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WMSLocationLoad extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromLocationCurrentAdjusted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>WmsLocationLoad</c> record from location and adjustments to current weight and volume
    /// </summary>
    /// <param name="_wmsLocation">
    /// The <c>WMSLocation</c> location for which the adjustments are made
    /// </param>
    /// <param name="_currentWeightAdjusted">
    /// The adjustment to the current weight
    /// </param>
    /// <param name="_currentVolumeAdjusted">
    /// The adjustment to the current volume
    /// </param>
    public void initFromLocationCurrentAdjusted(
        WMSLocation _wmsLocation,
        WMSWeight   _currentWeightAdjusted,
        WMSVolume   _currentVolumeAdjusted)
    {
        this.initFromWMSLocation(_wmsLocation);

        this.CurrentWeightAdjusted = _currentWeightAdjusted;        
        this.CurrentVolumeAdjusted = _currentVolumeAdjusted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWMSLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this buffer based on a <c>WMSLocation</c> buffer.
    /// </summary>
    /// <param name="_wmsLocation">
    /// A <c>WMSLocation</c> location to use to initialize this buffer.
    /// </param>
    public void initFromWMSLocation(WMSLocation _wmsLocation)
    {
        //relation to wmsLocation
        this.wmsLocationID                  = _wmsLocation.wmsLocationId;
        this.InventLocationID               = _wmsLocation.InventLocationId;
        this.wmsLocationDataAreaID          = _wmsLocation.DataAreaId;

        //redundant information from wmsLocation, used to optimize searches
        this.wmsLocationType                = _wmsLocation.LocationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAllLoadFieldsEmpty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether all load fields are empty for the <c>WMSLocationLoad</c> buffer.
    /// </summary>
    /// <returns>
    /// true if all load fields are empty for <c>WMSLocationLoad</c> buffer; otherwise, false.
    /// </returns>
    public boolean isAllLoadFieldsEmpty()
    {
        return  (this.CurrentWeightAdjusted == 0)
            &&  (this.CurrentVolumeAdjusted == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all the <c>WMSLocationLoad</c> records that are related to a <c>WMSLocation</c> record.
    /// </summary>
    /// <param name="_wmsLocationId">
    /// The <c>WMSLocationId</c> record ID of the <c>WMSLocation</c> location for which the to delete the
    /// load.
    /// </param>
    /// <param name="_inventLocationId">
    /// The <c>InventLocationId</c> ID of the <c>InventLocation</c> warehouse for which the load should be
    /// deleted.
    /// </param>
    /// <param name="_wmsLocationDataAreaId">
    /// The <c>dataAreaId</c> ID of the <c>WMSLocation</c> location for which to delete the load.
    /// </param>
    public static void deleteLoad(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId)
    {
        WMSLocationLoad::deleteLoadFromParameters(_wmsLocationId,_inventLocationId,_wmsLocationDataAreaId,DateTimeUtil::utcNow());
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLoadCreatedBeforeDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all the <c>WMSLocationLoad</c> records that are related to a <c>WMSLocation</c> record and
    /// were created before the specified date and time.
    /// </summary>
    /// <param name="_wmsLocationId">
    /// The <c>WMSLocationId</c> ID of the <c>WMSLocation</c> location for which to delete the load.
    /// </param>
    /// <param name="_inventLocationId">
    /// The <c>InventLocationId</c> ID of the <c>InventLocation</c> warehouse for which to delete the load.
    /// </param>
    /// <param name="_wmsLocationDataAreaId">
    /// The <c>dataAreaId</c> ID of the <c>WMSLocation</c> location for which to delete the load.
    /// </param>
    /// <param name="_utcDateTimeDeleteCreatedBefore">
    /// The <c>UTCDateTime</c> value before which to delete records.
    /// </param>
    public static void deleteLoadCreatedBeforeDate(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId,
        utcdatetime             _utcDateTimeDeleteCreatedBefore)
    {
        WMSLocationLoad::deleteLoadFromParameters(_wmsLocationId,_inventLocationId,_wmsLocationDataAreaId,_utcDateTimeDeleteCreatedBefore);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLoadFromParameters</Name>
				<Source><![CDATA[
    private static void deleteLoadFromParameters(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId,
        utcdatetime             _utcDateTimeDeleteCreatedBefore)
    {
        WMSLocationLoad     wmsLocationLoad;
        ttsbegin;
        //this is intended to go setbased
        wmsLocationLoad.skipDeleteMethod(true);
        delete_from wmsLocationLoad
            where wmsLocationLoad.wmsLocationID         == _wmsLocationId
            &&    wmsLocationLoad.InventLocationID      == _inventLocationId
            &&    wmsLocationLoad.wmsLocationDataAreaID == _wmsLocationDataAreaId
            &&    wmsLocationLoad.CreatedDateTime       <= _utcDateTimeDeleteCreatedBefore;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSummedLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>WMSLocationLoad</c> buffer that has aggregated values for the load fields.
    /// </summary>
    /// <param name="_wmsLocationId">
    /// The <c>WMSLocationId</c> value of the <c>WMSLocation</c> location to use to find the load.
    /// </param>
    /// <param name="_inventLocationId">
    /// The <c>InventLocationId</c> value of the <c>InventLocation</c> warehouse to use to find the load.
    /// </param>
    /// <param name="_wmsLocationDataAreaId">
    /// The <c>dataAreaId</c> value of the <c>WMSLocation</c> location for which to find the load.
    /// </param>
    /// <returns>
    /// A <c>WMSLocationLoad</c> buffer that has aggregated values for the load fields.
    /// </returns>
    public static WMSLocationLoad selectSummedLoad(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId)
    {
        return WMSLocationLoad::selectSummedLoadFromParameters(_wmsLocationId,_inventLocationId,_wmsLocationDataAreaId,DateTimeUtil::utcNow());
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSummedLoadCreatedBeforeDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>WMSLocationLoad</c> buffer that has aggregated values for the load fields and was
    /// created before the specified date and time.
    /// </summary>
    /// <param name="_wmsLocationId">
    /// The <c>WMSLocationId</c> value of the <c>WMSLocation</c> location to use to find the load.
    /// </param>
    /// <param name="_inventLocationId">
    /// The <c>InventLocationId</c> value of the <c>InventLocation</c> warehouse for which to find the load.
    /// </param>
    /// <param name="_wmsLocationDataAreaId">
    /// The <c>dataAreaId</c> value of the <c>WMSLocation</c> location for which to find the load.
    /// </param>
    /// <param name="_utcDateTimeDeleteCreatedBefore">
    /// The <c>UTCDateTime</c> value before which to delete records.
    /// </param>
    /// <returns>
    /// A <c>WMSLocationLoad</c> buffer that has aggregated values for the load fields.
    /// </returns>
    public static WMSLocationLoad selectSummedLoadCreatedBeforeDate(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId,
        utcdatetime             _utcDateTimeDeleteCreatedBefore)
    {
        return WMSLocationLoad::selectSummedLoadFromParameters(_wmsLocationId, _inventLocationId, _wmsLocationDataAreaId, _utcDateTimeDeleteCreatedBefore);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSummedLoadFromParameters</Name>
				<Source><![CDATA[
    private static WMSLocationLoad selectSummedLoadFromParameters(
        WMSLocationId           _wmsLocationId,
        InventLocationId        _inventLocationId,
        DataAreaId              _wmsLocationDataAreaId,
        utcdatetime             _utcDateTimeDeleteCreatedBefore)
    {
        WMSLocationLoad wmsLocationLoad;

        select sum(CurrentVolumeAdjusted),
               sum(CurrentWeightAdjusted) from wmsLocationLoad
        where wmsLocationLoad.wmsLocationID         == _wmsLocationId
        &&    wmsLocationLoad.InventLocationID      == _inventLocationId
        &&    wmsLocationLoad.wmsLocationDataAreaID == _wmsLocationDataAreaId
        &&    wmsLocationLoad.CreatedDateTime       <= _utcDateTimeDeleteCreatedBefore;

        return wmsLocationLoad;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnWMSLocationChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>WMSLocationLoad</c> records that are related to the <c>WMSLocation</c> record if the
    /// specified values of the <c>WMSLocation</c> record has changed.
    /// </summary>
    /// <param name="_wmsLocationUpdated">
    /// The updated <c>WMSLocation</c> record.
    /// </param>
    /// <param name="_wmsLocationOrig">
    /// The Orig version of the <c>WMSLocation</c> record.
    /// </param>
    public static void updateOnWMSLocationChange(
        WMSLocation _wmsLocationUpdated,
        WMSLocation _wmsLocationOrig)
    {
        WMSLocationLoad wmsLocationLoad;

        if (!_wmsLocationUpdated.RecId)
        {
            throw error(Error::missingRecord(tableId2name(tableNum(WMSLocation))));
        }

        //some of the redundant fields have changed and we need to update related WMSLocationLoad records
        if (_wmsLocationUpdated.LocationType   != _wmsLocationOrig.LocationType)
        {
            //this should be done setbased
            wmsLocationLoad.skipDataMethods(true);

            ttsbegin;

            update_recordset wmsLocationLoad
                setting wmsLocationType = _wmsLocationUpdated.LocationType
            where wmsLocationLoad.wmsLocationID         == _wmsLocationUpdated.wmsLocationId
            &&    wmsLocationLoad.InventLocationID      == _wmsLocationUpdated.InventLocationId
            &&    wmsLocationLoad.wmsLocationDataAreaID == _wmsLocationUpdated.DataAreaId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WMSBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS324586</DeveloperDocumentation>
	<Label>@SYS324585</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>WMSLocationID</TitleField1>
	<TitleField2>InventLocationID</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationDataAreaID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentWeightAdjusted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentVolumeAdjusted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Load</Name>
			<Label>@SYS3370</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrentWeightAdjusted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentVolumeAdjusted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LocationIdentification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationDataAreaID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CurrentPalletCountAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSPalletCount</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentVolumeAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCurrentVolume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentWeightAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCurrentWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReservedPalletCountAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSPalletCount</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS324587</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservedVolumeAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WmsPallet</ConfigurationKey>
			<ExtendedDataType>WMSVolume</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS324589</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservedWeightAdjusted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WmsPallet</ConfigurationKey>
			<ExtendedDataType>WMSWeight</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS324588</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationDataAreaID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WMSLocationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSLocationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSStoreAreaID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSStoreAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WMSLocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WMSLocationID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationDataAreaID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>createdDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FreeLocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>WMSPallet</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WMSLocationDataAreaID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSStoreAreaID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrentPalletCountAdjusted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservedPalletCountAdjusted</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>WMSLocation</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>WMSLocationLoad</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSLocationDataAreaID</Name>
					<Field>WMSLocationDataAreaID</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSLocationID</Name>
					<Field>WMSLocationID</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationID</Name>
					<Field>InventLocationID</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>LocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>