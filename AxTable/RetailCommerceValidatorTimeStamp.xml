<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorTimeStamp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCommerceValidatorTimeStamp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a record based on the given parameters.
    /// </summary>
    /// <param name = "_metricId">The Metric Id.</param>
    /// <param name = "_validationId">The Validation Id.</param>
    /// <param name = "_testId">The Test id.</param>
    /// <param name = "_ruleId">The Rule id.</param>
    /// <param name = "_contextRecId">The <c>RetailCommerceValidatorLogContext</c> record id.</param>
    /// <param name = "_forUpdate">Boolean value, 'true' if the record needs to be updated, otherwise false.</param>
    /// <returns>Created/found buffer of <c>RetailCommerceValidatorTimeStamp</c> table.</returns>
    public static RetailCommerceValidatorTimeStamp findOrCreate(
        RetailCommerceValidatorMetricId _metricId,
        RetailCommerceValidatorId _validationId = '',
        RetailCommerceValidatorTestId _testId = '',
        RetailCommerceValidatorRuleId _ruleId = '',
        RefRecId _contextRecId = 0,
        boolean _forUpdate = false)
    {
        System.Exception exception;
        RetailCommerceValidatorTimeStamp timeStamp;
        RetailCommerceValidatorParameters parameters = retailCommerceValidatorParameters::find();

        try
        {
            if (_metricId)
            {
                if (_forUpdate && !parameters.UsePessimisticLocks)
                {
                    select forupdate firstonly timeStamp
                        where timeStamp.MetricId == _metricId
                            && timeStamp.ValidationId == _validationId
                            && timeStamp.TestId == _testId
                            && timeStamp.RuleId == _ruleId
                            && timeStamp.ContextRecId == _contextRecId;
                }
                else if (_forUpdate && parameters.UsePessimisticLocks)
                {
                    select pessimisticlock firstonly timeStamp
                        where timeStamp.MetricId == _metricId
                            && timeStamp.ValidationId == _validationId
                            && timeStamp.TestId == _testId
                            && timeStamp.RuleId == _ruleId
                            && timeStamp.ContextRecId == _contextRecId;
                }
                else
                {
                    select firstonly timeStamp
                        where timeStamp.MetricId == _metricId
                            && timeStamp.ValidationId == _validationId
                            && timeStamp.TestId == _testId
                            && timeStamp.RuleId == _ruleId
                            && timeStamp.ContextRecId == _contextRecId;
                }
            }
        }
        catch (exception)
        {
            if (xSession::currentRetryCount() >= parameters.MaxRetryCount)
            {
                RetailCommerceValidatorExceptions::logRetry(_validationId, tableStr(RetailCommerceValidatorTimeStamp), xSession::currentRetryCount(), false, exception);
            }
            else
            {
                RetailCommerceValidatorExceptions::logRetry(_validationId, tableStr(RetailCommerceValidatorTimeStamp), xSession::currentRetryCount(), true, exception);
                retry;
            }
        }
        finally
        {
            if (!timeStamp)
            {
                timeStamp.clear();
                timeStamp.MetricId = _metricId;
                timeStamp.ValidationId = _validationId;
                timeStamp.TestId = _testId;
                timeStamp.RuleId = _ruleId;
                timeStamp.ContextRecId = _contextRecId;
                timeStamp.insert();
            }
        }

        return timeStamp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStartTimeStamp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs the start time of an operation.
    /// </summary>
    /// <param name = "_metricId">The Metric Id.</param>
    /// <param name = "_validationId">The Validation ID.</param>
    /// <param name = "_testId">The Test id.</param>
    /// <param name = "_ruleId">The Rule id.</param>
    /// <param name = "_contextRecId">The <c>RetailCommerceValidatorLogContext</c> record id.</param>
    internal static void addStartTimeStamp(
        RetailCommerceValidatorMetricId _metricId,
        RetailCommerceValidatorId _validationId = '',
        RetailCommerceValidatorTestId _testId = '',
        RetailCommerceValidatorRuleId _ruleId = '',
        RefRecId _contextRecId = 0)
    {
        ttsbegin;
        RetailCommerceValidatorTimeStamp timeStamp = RetailCommerceValidatorTimeStamp::findOrCreate(_metricId,_validationId,_testId,_ruleId,_contextRecId, true);

        timeStamp.StartTimeStamp = DateTimeUtil::utcNow();

        timestamp.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEndTimeStamp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs the end time of an operation.
    /// </summary>
    /// <param name = "_metricId">The Metric Id.</param>
    /// <param name = "_validationId">The Validation ID.</param>
    /// <param name = "_testId">The Test id.</param>
    /// <param name = "_ruleId">The Rule id.</param>
    /// <param name = "_contextRecId">The <c>RetailCommerceValidatorLogContext</c> record id.</param>
    internal static void addEndTimeStamp(
        RetailCommerceValidatorMetricId _metricId,
        RetailCommerceValidatorId _validationId = '',
        RetailCommerceValidatorTestId _testId = '',
        RetailCommerceValidatorRuleId _ruleId = '',
        RefRecId _contextRecId = 0)
    {
        ttsbegin;
        RetailCommerceValidatorTimeStamp timeStamp = RetailCommerceValidatorTimeStamp::findOrCreate(_metricId,_validationId,_testId,_ruleId,_contextRecId, true);

        timeStamp.EndTimeStamp = DateTimeUtil::utcNow();

        timestamp.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Retail:RetailCommerceValidatorTimeStampDevDoc</DeveloperDocumentation>
	<Label>@Retail:RetailCommerceValidatorTimeStampLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>MetricId</TitleField1>
	<TitleField2>RuleId</TitleField2>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValidationId</Name>
			<ExtendedDataType>RetailCommerceValidatorId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TestId</Name>
			<ExtendedDataType>RetailCommerceValidatorTestId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<ExtendedDataType>RetailCommerceValidatorRuleId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MetricId</Name>
			<ExtendedDataType>RetailCommerceValidatorMetricId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StartTimeStamp</Name>
			<ExtendedDataType>SysUtcDateTime</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorStartTimeStamp</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EndTimeStamp</Name>
			<ExtendedDataType>SysUtcDateTime</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorEndTimeStamp</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContextRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@Retail:RetailCommerceValidatorContextRecId</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ValidationMetricIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MetricId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TestMetricIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TestId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MetricId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RuleMetricIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MetricId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RuleId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailCommerceValidator</Name>
			<RelatedTable>RetailCommerceValidator</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ValidationId</Name>
					<Field>ValidationId</Field>
					<RelatedField>ValidationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorTests</Name>
			<RelatedTable>RetailCommerceValidatorTests</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TestId</Name>
					<Field>TestId</Field>
					<RelatedField>TestId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorRules</Name>
			<RelatedTable>RetailCommerceValidatorRules</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RuleId</Name>
					<Field>RuleId</Field>
					<RelatedField>RuleId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorMetrics</Name>
			<RelatedTable>RetailCommerceValidatorMetrics</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MetricId</Name>
					<Field>MetricId</Field>
					<RelatedField>MetricId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailCommerceValidatorLogContext</Name>
			<RelatedTable>RetailCommerceValidatorLogContext</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContextRecId</Name>
					<Field>ContextRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>