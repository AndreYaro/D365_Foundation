<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductRelationType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductRelationType extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record matching the given <paramref>_name</paramref> of type <c>Name</c> exists.
    /// </summary>
    /// <param  name='_name'>
    /// An instance of the <c>Name</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean checkExist(Name _name)
    {
        if (!EcoResProductRelationType::exist(_name))
        {
            return checkFailed(strfmt(EcoResProductRelationType::txtNotExist(), _name));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record matching the given <paramref>_name</paramref> of type <c>Name</c> exists.
    /// </summary>
    /// <param  name='_name'>
    /// An instance of the <c>Name</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean exist(Name _name)
    {
        return (EcoResProductRelationType::find(_name).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record that matches the given <c>Name</c> of type _name.
    /// </summary>
    /// <param  name='_name'>
    /// An instance of the <c>Name</c> data type.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An instance of the <c>boolean</c> data type.
    /// </param>
    /// <returns>
    /// An instance of the <c>EcoResProductRelationType</c> data type.
    /// </returns>
    public static EcoResProductRelationType find(Name _name, boolean _forUpdate = false)
    {
        EcoResProductRelationType tblEcoResProductRelationType;

        if (_name)
        {
            tblEcoResProductRelationType.selectForUpdate(_forUpdate);

            select firstonly * from tblEcoResProductRelationType
                index hint NameIdx
                where tblEcoResProductRelationType.Name == _name;
        }

        return tblEcoResProductRelationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the product relation type by the record ID.
    /// </summary>
    /// <param name = "_recId">The record ID of the product relation type.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>EcoResProductRelationType</c> table; otherwise, an empty record.</returns>
    public static EcoResProductRelationType findRecId(EcoResProductRelationTypeRecId _recId, boolean _forUpdate = false)
    {
        EcoResProductRelationType productRelationType;

        if (_recId)
        {
            productRelationType.selectForUpdate (_forUpdate);

            select firstonly productRelationType
                where productRelationType.RecId == _recId;
        }

        return productRelationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static str txtNotExist()
    {
        return "@SYS131170";
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS131005</DeveloperDocumentation>
	<FormRef>EcoResProductRelationType</FormRef>
	<Label>@SYS131004</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EcoResProductRelationTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EcoResProductRelationTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>