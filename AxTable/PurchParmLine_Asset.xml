<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmLine_Asset</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchParmLine_Asset extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>PurchParmLine_Asset</c> table field values.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> table buffer which will be used to set <c>PurchParmLine_Asset</c> field values.
    /// </param>
    public void initFromPurchLine(PurchLine _purchLine)
    {
        boolean assetParamAllowCreate;

        assetParamAllowCreate = AssetParameters::find().AssetAllowCreate;
        if (assetParamAllowCreate)
        {
            this.CreateFixedAsset = _purchLine.CreateFixedAsset;
            this.AssetGroup       = _purchLine.AssetGroup;
        }

        this.AssetId     = _purchLine.AssetId;
        this.AssetBookId = _purchLine.AssetBookId;

        // If AllowCreate is false, but they assigned an Asset, copy group in.
        if ((!assetParamAllowCreate) && (this.AssetId))
        {
            this.AssetGroup  = _purchLine.AssetGroup;
        }

        if (_purchLine.invoicedInTotal() > 0)
        {
            if (AssetParameters::find().MultiAcquisition == NoYes::No)
            {
                this.AssetTransTypePurch = AssetTransTypePurch::AcquisitionAdj;
            }
            else
            {
                this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
            }
        }
        else
        {
           this.AssetTransTypePurch = _purchLine.AssetTransTypePurch;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the PurchParmLineRecId field value.
    /// </summary>
    /// <param name="_purchParmLine">
    /// A <c>PurchParmLine</c> table buffer from which the RecId is used to set the PurchParmLineRecId field value.
    /// </param>
    public void initFromPurchParmLine(PurchParmLine _purchParmLine)
    {
        this.VendDocumentLineAssetMap::initFromLine(_purchParmLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSavedLine_Asset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>PurchParmLine_Asset</c> field values.
    /// </summary>
    /// <param name="_vendInvoiceInfoLine_Asset">
    /// A <c>VendInvoiceInfoLine_Asset</c> buffer that will be used to set the <c>PurchParmLine_Asset</c>
    /// field values.
    /// </param>
    public void initFromSavedLine_Asset(VendInvoiceInfoLine_Asset _vendInvoiceInfoLine_Asset)
    {
        this.CreateFixedAsset    = _vendInvoiceInfoLine_Asset.CreateFixedAsset;
        this.AssetGroup          = _vendInvoiceInfoLine_Asset.AssetGroup;
        this.AssetId             = _vendInvoiceInfoLine_Asset.AssetId;
        this.AssetTransTypePurch = _vendInvoiceInfoLine_Asset.AssetTransTypePurch;
        this.AssetBookId         = _vendInvoiceInfoLine_Asset.AssetBookId;
        this.AssetAcquired       = _vendInvoiceInfoLine_Asset.AssetAcquired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether extra logic must be performed when a field value changes.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of a <c>PurchParmLine_Asset</c> field.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchParmLine_Asset, AssetId):
                this.modifyAssetId();
                break;
            case fieldNum(PurchParmLine_Asset, CreateFixedAsset):
                this.modifyCreateFixedAsset();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the values of <c>PurchParmLine_Asset</c> fields based on the value of the <c>AssetId</c> field.
    /// </summary>
    /// <remarks>
    /// When the <c>AssetId</c> field value changes, the values of the <c>AssetGroup</c> and
    /// <c>AssetBookId</c> fields may need to be updated.
    /// </remarks>
    public void modifyAssetId()
    {
        AssetTable  assetTable;
        AssetBook   assetBook;
        AssetBookTable  assetBookTable;
        AssetBookId bookIdDefault;

        assetTable = AssetTable::find(this.AssetId);
        if (assetTable)
        {
            this.AssetGroup = assetTable.AssetGroup;
        }
        else
        {
            this.AssetGroup = "";
        }

        bookIdDefault = AssetParameters::find().BookIdDefault;
        assetBook     = AssetBook::find(this.AssetId, bookIdDefault);

        if (assetBook
            && AssetBookTable::find(bookIdDefault).CurrentOperationsTax == CurrentOperationsTax::Current
            && ((assetBook.Status == AssetStatus::NoAcquisition) || (assetBook.Status == AssetStatus::Open)))
        {
            this.AssetBookId = bookIdDefault;
        }
        else
        {
            assetBook = AssetBook::findOpenOrNotAcquiredAssetBookByAssetIdLayer(this.AssetId, CurrentOperationsTax::Current);
            this.AssetBookId = assetBook.BookId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyCreateFixedAsset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the values of <c>PurchParmLine_Asset</c> fields based on the value of the
    /// <c>CreateFixedAsset</c> field.
    /// </summary>
    /// <remarks>
    /// If the value of the <c>CreateFixedAsset</c> field is changed, clear out the values in the
    /// <c>AssetId</c>, <c>AssetGroup</c>, and <c>AssetTransTypePurch</c> fields.
    /// </remarks>
    public void modifyCreateFixedAsset()
    {
        if (this.CreateFixedAsset == NoYes::Yes)
        {
            this.AssetId = "";
        }

        this.AssetGroup = "";
        this.AssetBookId = "";
        this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the value in the AssetGroup field is valid if the value in CreateFixedAsset field is
    ///    set to Yes.
    /// </summary>
    /// <returns>
    ///    true if the asset field values are acceptable; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the value in CreateFixedAsset field is Yes, the user must set a value in the AssetGroup field.
    /// </remarks>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if ((ret) && (this.CreateFixedAsset == NoYes::Yes) && (this.AssetGroup == ""))
        {
            ret = checkFailed("@SYS71123");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchParmLine_Asset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a new <c>PurchParmLine_Asset</c> table record, based on a <c>VendInvoiceInfoLine_Asset</c>
    ///    table record and connected to a particular <c>PurchParmLine</c> table record.
    /// </summary>
    /// <param name="_purchParmLine">
    ///    The parent <c>PurchParmLine</c> table record for the new <c>PurchParmLine_Asset</c> record.
    /// </param>
    /// <param name="_vendInvoiceInfoLine_Asset">
    ///    The <c>VendInfoInfoLine_Asset</c> table record to use to create the <c>PurchParmLine_Asset</c>
    ///    table record.
    /// </param>
    /// <returns>
    ///    The new <c>PurchParmLine_Asset</c> table record.
    /// </returns>
    public static PurchParmLine_Asset createPurchParmLine_Asset(PurchParmLine _purchParmLine, VendInvoiceInfoLine_Asset _vendInvoiceInfoLine_Asset)
    {
        PurchParmLine_Asset     purchParmLine_Asset;

        purchParmLine_Asset.clear();
        purchParmLine_Asset.initValue();
        purchParmLine_Asset.initFromPurchParmLine(_purchParmLine);
        purchParmLine_Asset.initFromSavedLine_Asset(_vendInvoiceInfoLine_Asset);

        return purchParmLine_Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a <c>PurchParmLine_Asset</c> line is in the table for a particular <c>RecId</c>
    /// field.
    /// </summary>
    /// <param name="_recId">
    /// The RecId value to check.
    /// </param>
    /// <returns>
    /// true if at least one record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return (select firstonly RecId from purchParmLine_Asset
                    where purchParmLine_Asset.RecId == _recId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns the <c>PurchParmLine_Asset</c> line for the given <c>RecId</c> field, if a line
    /// exists.
    /// </summary>
    /// <param name="_recId">
    /// The RecId value to check.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A ConcurrencyModel value that specifies the locking scheme; optional.
    /// </param>
    /// <returns>
    /// A <c>PurchParmLine_Asset</c> table record with the specified RecId.
    /// </returns>
    /// <remarks>
    /// If the record does not exist, an empty <c>PurchParmLine_Asset</c> table record is returned.
    /// </remarks>
    public static PurchParmLine_Asset find(RecId            _recId,
                                           boolean          _forUpdate = false,
                                           ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        PurchParmLine_Asset purchParmLine_Asset;

        if (_recId != 0)
        {
            if (_forUpdate)
            {
                purchParmLine_Asset.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    purchParmLine_Asset.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly purchParmLine_Asset
                where purchParmLine_Asset.RecId == _recId;
        }

        return purchParmLine_Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPurchParmLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns the <c>PurchParmLine_Asset</c> line for the given <c>PurchLineRefRecId</c> field,
    /// if a line exists.
    /// </summary>
    /// <param name="_purchParmLineRefRecId">
    /// The <c>PurchLineRefRecId</c> value to check.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A   value that specifies the locking scheme; optional.
    /// </param>
    /// <returns>
    /// The <c>PurchParmLine_Asset</c> table record.
    /// </returns>
    /// <remarks>
    /// If the record does not exist, an empty <c>PurchParmLine_Asset</c> table record is returned.
    /// </remarks>
    public static PurchParmLine_Asset findByPurchParmLineRecId(PurchLineRefRecId _purchParmLineRefRecId,
                                           boolean          _forUpdate = false,
                                           ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        PurchParmLine_Asset purchParmLine_Asset;

        if (_purchParmLineRefRecId != 0)
        {
            if (_forUpdate)
            {
                purchParmLine_Asset.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    purchParmLine_Asset.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly purchParmLine_Asset
                where purchParmLine_Asset.PurchParmLineRecId == _purchParmLineRefRecId;
        }

        return purchParmLine_Asset;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124593</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS120363</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>AssetGroup</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>PurchParmLineRecIdIdx</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>PurchParmLineRecIdIdx</PrimaryIndex>
	<ReplacementKey>PurchParmLineRecIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateFixedAsset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchParmLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetAcquired</Name>
			<Label>@SYS120365</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetAcquired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FixedAssets</Name>
			<Label>@SYS12578</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateFixedAsset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchParmLineRecId</Name>
			<Label>@SYS120366</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchParmLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetAcquired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetBookId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBookIdPurchSalesInvent</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetIdOpen</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetTransTypePurch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTransTypePurchEDT</ExtendedDataType>
			<EnumType>AssetTransTypePurch</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreateFixedAsset</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS115671</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchParmLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchParmLineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmTableRefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetAcquired</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchParmLineRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchParmLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>VendDocumentLineAssetMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CreateFixedAsset</MapField>
					<MapFieldTo>CreateFixedAsset</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetGroup</MapField>
					<MapFieldTo>AssetGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetId</MapField>
					<MapFieldTo>AssetId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetTransTypePurch</MapField>
					<MapFieldTo>AssetTransTypePurch</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetBookId</MapField>
					<MapFieldTo>AssetBookId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetAcquired</MapField>
					<MapFieldTo>AssetAcquired</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendDocumentLineRecId</MapField>
					<MapFieldTo>PurchParmLineRecId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetBookId</Name>
					<Field>AssetBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetBookId</Name>
					<Field>AssetBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BookIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetGroup</Name>
					<Field>AssetGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchParmLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchParmLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchParmLineRecId</Name>
					<Field>PurchParmLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>