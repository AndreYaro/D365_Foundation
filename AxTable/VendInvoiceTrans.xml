<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendInvoiceTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accDistributionTemplateRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>AccountingDistributionTemplateRecId</c> value that is associated with an invoice
    /// line.
    /// </summary>
    /// <returns>
    /// The <c>AccountingDistributionTemplateRecId</c> value that is associated with the invoice line.
    /// </returns>
    public AccountingDistributionTemplateRecId accDistributionTemplateRecId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a posting account for the invoice line.
    /// </summary>
    /// <param name="_inventAccountType">
    /// The posting account type.
    /// </param>
    /// <returns>
    /// The posting account number of the account type for the invoice line.
    /// </returns>
    LedgerDimensionDefaultAccount accountItem(InventAccountType _inventAccountType)
    {
        return InventPosting::accountItemLedgerDimensionFromParameters(
            this.buildAccountItemLedgerDimensionParameter(
                _inventAccountType,
                InventTable::itemGroupIdByItemId(this.ItemId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAccountItemLedgerDimensionParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a parameter for searching an inventory posting account ledger dimension for an item.
    /// </summary>
    /// <param name="_inventAccountType">An inventory account type.</param>
    /// <param name="_itemGroupId">An item group Id.</param>
    /// <returns>The built parameter instance.</returns>
    protected InventPostingAccountItemLedgerDimensionParameters buildAccountItemLedgerDimensionParameter(InventAccountType _inventAccountType, ItemGroupId _itemGroupId)
    {
        return InventPostingAccountItemLedgerDimensionParameters::newFromParameters(
            _inventAccountType,
            this.ItemId,
            _itemGroupId,
            this.ProcurementCategory,
            this.vendInvoiceJour().InvoiceAccount,
            this.vendTable_InvoiceAccount().VendGroup,
            this.TaxGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>address</Name>
				<Source><![CDATA[
    display Addressing address()
    {
        return this.vendTable_InvoiceAccount().postalAddress().Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExclTax</Name>
				<Source><![CDATA[
    public AmountCur amountExclTax(AmountCur _amountCur, Qty _qty, TransDate _transDate, Tax _tax = null, boolean _skipRounding = false)
    {
        return this.lineAmountExclTax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>costValue</Name>
				<Source><![CDATA[
    display CostAmount costValue()
    {
        return this.inventCostAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defltDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>DefaultDimension</c> value that is associated with this invoice line.
    /// </summary>
    /// <returns>
    /// The <c>DefaultDimension</c> value that is associated with this invoice line.
    /// </returns>
    public DimensionDefault defltDimension()
    {
        return this.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the delivery address for the posted invoice.
    /// </summary>
    /// <returns>
    /// The delivery address of the invoice.
    /// </returns>
    public display LogisticsAddressing deliveryAddress()
    {
        if (!this.DeliveryPostalAddress)
        {
            return '';
        }

        return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the delivery date of the <c>VendPackingSlipTrans</c> table.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    /// A <c>VendInvoiceTrans</c> record.
    /// </param>
    /// <returns>
    /// The delivery date of the <c>VendPackingSlipTrans</c> table.
    /// </returns>
    public display TransDate deliveryDate(VendInvoiceTrans _vendInvoiceTrans)
    {
        TransDate deliveryDate;
        VendPackingSlipTrans vendPackingSlipTrans;
        NumberOfRecords oneSubLines = 1;

        if (VendPackingSlipTrans::subLines(_vendInvoiceTrans) == oneSubLines)
        {
            select firstonly vendPackingSlipTrans
                where vendPackingSlipTrans.InvoiceTransRefRecId == _vendInvoiceTrans.RecId;

            deliveryDate = vendPackingSlipTrans.vendPackingslipJour().DeliveryDate;
        }

        return deliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    public DiscPct discPercent()
    {
        return this.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    public DiscPct discAmount()
    {
        return this.DiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCompanyCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays current accounting currency.
    /// </summary>
    /// <returns>
    /// The accounting currency code.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display CurrencyCode displayCompanyCurrencyCode()
    {
        return Ledger::accountingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the delivery date for the invoice line from the associated packing slip.
    /// </summary>
    /// <returns>
    /// The delivery date for the invoice line.
    /// </returns>
    public display TransDate displayDeliveryDate()
    {
        return this.getPackingSlip().DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and returns the total tax amount for this invoice line.
    /// </summary>
    /// <returns>
    /// Returns the total tax amount for this invoice line.
    /// </returns>
    public display TaxAmount displayTaxAmount()
    {
        TaxAmount taxAmount = 0;
        TaxTrans taxTrans;
        VendInvoiceJour vendInvoiceJour = this.vendInvoiceJour();

        if (this.InvoiceId)
        {
            // Use the source regulate tax amount from TaxTrans for posted invoice
            select sum(SourceRegulateAmountCur) from taxTrans
                where taxTrans.SourceRecId == this.RecId &&
                      taxTrans.TransDate == vendInvoiceJour.InvoiceDate &&
                      taxTrans.Voucher == vendInvoiceJour.LedgerVoucher;

            taxAmount = taxTrans.SourceRegulateAmountCur;
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the packing slip ID of the <c>VendPackingSlipTrans</c> table.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    /// A <c>VendInvoiceTrans</c> record.
    /// </param>
    /// <returns>
    /// The packing slip ID of the <c>VendPackingSlipTrans</c> table.
    /// </returns>
    public Num documentId(VendInvoiceTrans _vendInvoiceTrans)
    {
        Num documentId;
        VendPackingSlipTrans vendPackingSlipTrans;
        NumberOfRecords oneSubLines = 1;
        NumberOfRecords zeroSubLines = 0;

        switch (VendPackingSlipTrans::subLines(this))
        {
            case zeroSubLines:
                documentId = '';
                break;

            case oneSubLines:
                select firstonly PackingSlipId from vendPackingSlipTrans
                    where vendPackingSlipTrans.InvoiceTransRefRecId == _vendInvoiceTrans.RecId;
                documentId = vendPackingSlipTrans.PackingSlipId;
                break;

            //More than one journal line attached to the parm line
            default:
                documentId = '*';
                break;
        }

        return documentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason code by using a <c>ReasonCodeMap</c> object.
    /// </summary>
    /// <param name="_set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonCode">
    /// The new reason code when the <paramref name="_set" /> parameter is true.
    /// </param>
    /// <returns>
    /// The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonCode editReasonCode(boolean _set, ReasonCode _reasonCode)
    {
        return this.ReasonCodeMap::editReasonCode(_set, _reasonCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason comment using a <c>ReasonCodeMap</c> object.
    /// </summary>
    /// <param name="_set">
    /// A Boolean value that indicates whether the reason comment is set.
    /// </param>
    /// <param name="_reasonComment">
    /// The new reason comment when the <paramref name="_set" /> parameter is true.
    /// </param>
    /// <returns>
    /// The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonComment editReasonComment(boolean _set, ReasonComment _reasonComment)
    {
        return this.ReasonCodeMap::editReasonComment(_set, _reasonComment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    display VendExchRate exchRate()
    {
        return this.vendInvoiceJour().ExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsCorrLink_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if there is link between this record and corrected record, e.g. this record is corrected record.
    /// </summary>
    /// <returns>
    /// True if link exists; Otherwise, false.
    /// </returns>
    public boolean existsCorrLink_RU()
    {
        return this.RecId &&
            (select firstonly RecId from vendInvoiceTransCorrLink_RU
                where vendInvoiceTransCorrLink_RU.TransRecId == this.RecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentLine_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the <c>FiscalDocumentLine_BR</c> table record related to the <c>VendInvoiceTrans</c> table.
    /// </summary>
    /// <returns>
    ///     A record of <c>FiscalDocumentLine_BR</c> table.
    /// </returns>
    public FiscalDocumentLine_BR fiscalDocumentLine_BR()
    {
        FiscalDocumentLine_BR fiscalDocumentLine;

        select fiscalDocumentLine
            where fiscalDocumentLine.RefTableId == this.TableId &&
                  fiscalDocumentLine.RefRecId == this.RecId;

        return fiscalDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fullyFactured_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true, if all lines of invoice fully factured(factures created for each line)
    /// </summary>
    /// <returns>
    /// True, if all lines of invoice fully factured(factures created for each line), otherwise false
    /// </returns>
    display FacturedFully_RU fullyFactured_RU()
    {
        return this.Qty ? this.FacturedQty_RU == this.Qty : this.FacturedFully_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventQty</Name>
				<Source><![CDATA[
    display InventQty getInventQty()
    {
        InventTransOriginId inventTransOriginId = InventTransOrigin::findByInventTransId(this.InventTransId).RecId;

        return InventTransInvoice::qtySold(inventTransOriginId, this.InvoiceId, this.InvoiceDate) +
            InventTransInvoice::qtyPurchased(inventTransOriginId, this.InvoiceId, this.InvoiceDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>ItemType</c> value for the item.
    /// </summary>
    /// <returns>
    /// The <c>ItemType</c> value for the item.
    /// </returns>
    display ItemType getItemType()
    {
        return InventTable::find(this.ItemId).ItemType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getName</Name>
				<Source><![CDATA[
    display VendName getName()
    {
        return this.vendTable_InvoiceAccount().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPackingSlip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the packing slip associated with the invoice line.
    /// </summary>
    /// <returns>
    /// The packing slip associated with the invoice line.
    /// </returns>
    public VendPackingSlipTrans getPackingSlip()
    {
        VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;
        VendPackingSlipTrans vendPackingSlipTrans;

        select firstonly vendPackingSlipTrans
            exists join vendInvoicePackingSlipQuantityMatch
                where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == this.SourceDocumentLine &&
                      vendPackingSlipTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine;

        return vendPackingSlipTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcurementCategoryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>ProcurementCategory</c> value that is associated with the invoice line.
    /// </summary>
    /// <returns>
    /// The <c>ProcurementCategory</c> value that is associated with the invoice line.
    /// </returns>
    public EcoResCategoryName getProcurementCategoryName()
    {
        return EcoResCategory::find(this.ProcurementCategory).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjId</Name>
				<Source><![CDATA[
    display ProjId getProjId(VendInvoiceTrans _vendInvoiceTrans)
    {
        return ProjItemTrans::findByVendInvoiceTransRecId(_vendInvoiceTrans.RecId).ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchCommitmentLine_PSN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the commitment line that is associated with the current posted invoice line.
    /// </summary>
    /// <returns>
    /// The commitment line that is associated with the posted invoice line.
    /// </returns>
    public PurchCommitmentLine_PSN getPurchCommitmentLine_PSN()
    {
        PurchCommitmentLine_PSN purchCommitmentLine_PSN;

        select firstonly purchCommitmentLine_PSN
            where purchCommitmentLine_PSN.RecId == this.PurchCommitmentLine_PSN;

        return purchCommitmentLine_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grossAmount</Name>
				<Source><![CDATA[
    display AmountCur grossAmount()
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        Percent cashDiscPercent;
        AmountCur grossAmount = 0;

        if (this.Qty)
        {
            grossAmount = PriceDisc::price2Amount(this.PurchPrice, this.PriceUnit,
                                                  0.0, this.Qty, // sales deliver now
                                                  this.Qty, // sales qty
                                                  this.PurchMarkup,
                                                  0.0, this.CurrencyCode, this.LineAmount);
        }

        if (this.vendInvoiceJour().InclTax)
        {
            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) &&
                this.inventDim().inventProfile_RU().taxUpdateIncoming() == TaxUpdateMode_RU::NoCalc)
            {
                return grossAmount;
            }
            // </GEERU>
            if (TaxCashDiscountParametersHelper::isCashDiscDeductedBeforeTaxCalculation(this.vendInvoiceJour().TableId, this.vendInvoiceJour().RecId))
            {
                cashDiscPercent = CashDisc::find(this.vendInvoiceJour().CashDiscCode).Percent;
            }

            grossAmount = Tax::baseAmountExclTax(this.TaxGroup, this.TaxItemGroup, this.InvoiceDate, this.CurrencyCode, grossAmount, TaxModuleType::Purch, this.Qty, this.PurchUnit, this.ItemId, TaxDirection::OutgoingTax, cashDiscPercent);
        }

        return grossAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grossAmountMST</Name>
				<Source><![CDATA[
    display AmountMST grossAmountMST()
    {
        return this.vendInvoiceJour().amountMST(this.grossAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an invoice line includes tax in the line amount.
    /// </summary>
    /// <param name="_purchTable">
    /// Corresponding purchase order header record; optional.
    /// </param>
    /// <param name="_invoiceHeader">
    /// Corresponding invoice header record; optional.
    /// </param>
    /// <returns>
    /// true if the line is tax included; otherwise, false.
    /// </returns>
    public boolean includeTax(PurchTable _purchTable = null, Common _invoiceHeader = null)
    {
        return this.VendInvoiceLineMap::includeTax(_purchTable, _invoiceHeader);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoiceJour_RU</Name>
				<Source><![CDATA[
    public void initFromInvoiceJour_RU(VendInvoiceJour _jour)
    {
        this.InvoiceId = _jour.InvoiceId;
        this.InvoiceDate = _jour.InvoiceDate;
        this.CurrencyCode = _jour.CurrencyCode;
        this.PartDelivery = NoYes::No;
        this.PurchMarkup = 0;
        this.TaxAutogenerated = NoYes::Yes;
        this.InternalInvoiceId = _jour.InternalInvoiceId;
        this.NumberSequenceGroup = _jour.NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    public void initFromLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        this.LineNum = _ledgerJournalTrans.LineNum;
        this.Qty = _ledgerJournalTrans.Qty;
        this.Name = _ledgerJournalTrans.Txt;
        this.TaxGroup = _ledgerJournalTrans.TaxGroup;
        this.DefaultDimension = _ledgerJournalTrans.DefaultDimension;
        this.TaxItemGroup = _ledgerJournalTrans.TaxItemGroup;
        this.TaxWriteCode = TaxTable::find(_ledgerJournalTrans.TaxCode).PrintCode;

        LedgerJournalTransTaxExtension ledgerJournalTransTaxExtension = _ledgerJournalTrans.ledgerJournalTransTaxExtension();
        if (ledgerJournalTransTaxExtension)
        {
            this.OverrideSalesTax = ledgerJournalTransTaxExtension.OverrideSalesTax;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans_GB</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize and set VendInvoiceTrans parameters from LedgerJournalTrans.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// Record of LedgerJournalTrans.
    /// </param>
    /// <param name="_amountInclTax">
    /// InclTax. Have we included tax or not.
    /// </param>
    /// <param name="_debCred">
    /// Type of amount. Positive for debet and negative for credit.
    /// </param>
    public void initFromLedgerJournalTrans_GB(LedgerJournalTrans _ledgerJournalTrans, NoYes _amountInclTax, DebitCredit _debCred)
    {
        TaxCalculation taxCalculation;

        Sign sign = _debCred == DebitCredit::Credit ? -1 : 1;
        TaxAmount lineAmountTax;
        TaxAmount taxAmountAdd;
        TaxTrans  taxTrans;

        this.LineAmount = _ledgerJournalTrans.amount() * sign;
        this.PriceUnit = 1;
        this.Qty = abs(_ledgerJournalTrans.Qty ? _ledgerJournalTrans.Qty : 1) * sign(this.LineAmount);
        this.PurchPrice = CurrencyExchangeHelper::price(this.LineAmount / this.Qty, this.CurrencyCode);
        this.QtyPhysical = this.Qty;
        this.PurchUnit = InventParameters::find().DefaultUnitId;
        this.DefaultDimension = _ledgerJournalTrans.DefaultDimension;

        this.Name = _ledgerJournalTrans.Txt;
        this.TaxGroup = _ledgerJournalTrans.TaxGroup;
        this.TaxItemGroup = _ledgerJournalTrans.TaxItemGroup;
        this.DiscAmount = _ledgerJournalTrans.CashDiscAmount;

        LedgerJournalTransTaxExtension ledgerJournalTransTaxExtension = _ledgerJournalTrans.ledgerJournalTransTaxExtension();
        if (ledgerJournalTransTaxExtension)
        {
            this.OverrideSalesTax = ledgerJournalTransTaxExtension.OverrideSalesTax;
        }

        if (this.TaxGroup && this.TaxItemGroup)
        {
            taxTrans = TaxTrans::findByLedgerJournalTrans(_ledgerJournalTrans);

            if (taxTrans.RecId)
            {
                lineAmountTax = Tax::taxTotalVoucherDateRecId_RU(_ledgerJournalTrans.Voucher, _ledgerJournalTrans.TransDate, _ledgerJournalTrans.RecId);
                if (_amountInclTax == NoYes::No)
                {
                    taxAmountAdd = lineAmountTax;
                    lineAmountTax = 0;
                }

                this.TaxAmount = lineAmountTax + taxAmountAdd;
                this.LineAmountTax = lineAmountTax;

                this.LineAmount = this.LineAmount - lineAmountTax;
            }
        }

        if (_debCred == DebitCredit::Debit)
        {
            this.LedgerDimension = LedgerJournalEngine::getDefaultAccount(_ledgerJournalTrans, LedgerJournalTrans_Asset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RAsset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RDeferrals::find(_ledgerJournalTrans.RecId));
        }
        else
        {
            this.LedgerDimension = LedgerJournalEngine::offsetLedgerDimension_RU(_ledgerJournalTrans, LedgerJournalTrans_Asset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RAsset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RDeferrals::find(_ledgerJournalTrans.RecId));
        }

        if (_ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
        {
            if (_debCred == DebitCredit::Debit)
            {
                this.DefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_ledgerJournalTrans.LedgerDimension);
            }
            else
            {
                this.DefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_ledgerJournalTrans.OffsetLedgerDimension);
            }
        }

        if (_ledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::Allocation || !_ledgerJournalTrans.isCompanyIntercompany(_ledgerJournalTrans.company()))
        {
            this.LineAmountMST = CurrencyExchangeHelper::mstAmount(this.LineAmount, _ledgerJournalTrans.CurrencyCode, _ledgerJournalTrans.TransDate, Currency::noYes2UnknownNoYes(_ledgerJournalTrans.Triangulation), _ledgerJournalTrans.ExchRate, _ledgerJournalTrans.ExchRateSecond);
        }
        else
        {
            this.LineAmountMST = CurrencyExchangeHelper::mstAmount(this.LineAmount, _ledgerJournalTrans.CurrencyCode, _ledgerJournalTrans.TransDate);
        }
        this.InventDimId = InventDim::findOrCreateBlank().InventDimId;
        this.TaxWithholdItemGroupHeading_TH = _ledgerJournalTrans.TaxWithholdItemGroupHeading_TH;
        this.TaxWithholdGroup_TH = TaxWithholdItemGroupHeading_TH::find(_ledgerJournalTrans.TaxWithholdItemGroupHeading_TH).TaxWithholdItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans_RU</Name>
				<Source><![CDATA[
    public void initFromLedgerJournalTrans_RU(LedgerJournalTrans _ledgerJournalTrans, UnknownNoYes _amountInclTax, DebitCredit _debCred)
    {
        Sign sign = _debCred == DebitCredit::Credit ? -1 : 1;
        TaxAmount lineAmountTax;
        TaxAmount taxAmountAdd;
        TaxTrans taxTrans;

        this.LineAmount = _ledgerJournalTrans.amount() * sign;
        this.PriceUnit = 1;
        this.Qty = abs(_ledgerJournalTrans.Qty ? _ledgerJournalTrans.Qty : 1) * sign(this.LineAmount);
        this.QtyPhysical = this.Qty;
        this.PurchUnit = InventParameters::find().DefaultUnitId;
        this.DefaultDimension = _ledgerJournalTrans.DefaultDimension;

        this.Name = _ledgerJournalTrans.Txt;
        this.TaxGroup = _ledgerJournalTrans.TaxGroup;
        this.TaxItemGroup = _ledgerJournalTrans.TaxItemGroup;
        this.DiscAmount = _ledgerJournalTrans.CashDiscAmount;

        if (this.TaxGroup && this.TaxItemGroup)
        {
            taxTrans = TaxTrans::findByLedgerJournalTrans(_ledgerJournalTrans);

            if (taxTrans.RecId)
            {
                lineAmountTax = Tax::taxTotalVoucherDateRecId_RU(_ledgerJournalTrans.Voucher, _ledgerJournalTrans.TransDate, _ledgerJournalTrans.RecId);

                if (lineAmountTax)
                {
                    this.initFromTaxTrans_RU(taxTrans);
                }
                else
                {
                    TaxCalculation taxCalculation = LedgerJournalTrans::getTaxInstance(_ledgerJournalTrans.JournalNum, _ledgerJournalTrans.Voucher, _ledgerJournalTrans.Invoice, false, _ledgerJournalTrans);
                    lineAmountTax = sign * taxCalculation.totalTaxAmountSingleLineIncludeUseTax(_ledgerJournalTrans.TableId, _ledgerJournalTrans.RecId, false);
                    this.initFromTaxWorkTrans_RU(taxCalculation.tmpTaxWorkTrans(), _ledgerJournalTrans.TableId, _ledgerJournalTrans.RecId);
                }

                if (_amountInclTax == UnknownNoYes::No)
                {
                    taxAmountAdd = lineAmountTax;
                    lineAmountTax = 0;
                }

                if (sign(lineAmountTax) != sign(this.vatAmount_RU))
                {
                    this.vatAmount_RU = -this.vatAmount_RU;
                    this.vatAmountMST_RU = -this.vatAmountMST_RU;
                    this.ExciseAmount_RU = -this.ExciseAmount_RU;
                    this.ExciseAmountMST_RU = -this.ExciseAmountMST_RU;
                }

                this.TaxAmount = lineAmountTax + taxAmountAdd;
                this.LineAmountTax = lineAmountTax;

                this.LineAmount = this.LineAmount - lineAmountTax;
            }
        }

        if (_debCred == DebitCredit::Debit)
        {
            this.LedgerDimension = LedgerJournalEngine::getDefaultAccount(_ledgerJournalTrans, LedgerJournalTrans_Asset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RAsset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RDeferrals::find(_ledgerJournalTrans.RecId));
        }
        else
        {
            this.LedgerDimension = LedgerJournalEngine::offsetLedgerDimension_RU(_ledgerJournalTrans, LedgerJournalTrans_Asset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RAsset::find(_ledgerJournalTrans.RecId), LedgerJournalTrans_RDeferrals::find(_ledgerJournalTrans.RecId));
        }

        if (_ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
        {
            if (_debCred == DebitCredit::Debit)
            {
                this.DefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_ledgerJournalTrans.LedgerDimension);
            }
            else
            {
                this.DefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_ledgerJournalTrans.OffsetLedgerDimension);
            }
        }

        this.InventDimId = InventDim::findOrCreateBlank().InventDimId;
        this.PurchPrice = CurrencyExchangeHelper::price(this.LineAmount / this.Qty, this.CurrencyCode);
        this.MarkupCode_RU = _ledgerJournalTrans.MarkupCode_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromParmLine</Name>
				<Source><![CDATA[
    public void initFromParmLine(VendInvoiceInfoLine _parmLine)
    {
        boolean found;
        LogisticsPostalAddress postalAddress;
        VendInvoiceInfoLine_W vendInvoiceInfoLine_W;
        // <GIN>
        VendInvoiceTrans_IN vendInvoiceTrans_IN;
        // </GIN>

        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>

        if (_parmLine.isNonPO() || _parmLine.isAdvance() || (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && _parmLine.isDirectInvoice()))
        {
            if (_parmLine.isAdvance())
            {
                this.OrigPurchId = _parmLine.OrigPurchId;
            }
            else
            {
                this.OrigPurchId = '';
            }

            this.InventTransId = '';
            this.InventDimId = _parmLine.InventDimId;
            this.ItemId = _parmLine.ItemId;
            this.ProcurementCategory= _parmLine.ProcurementCategory;
            this.StockedProduct = NoYes::No;
            this.LineNum = any2real(_parmLine.PurchaseLineLineNumber);
            [found, this.ExternalItemId] = CustVendExternalItemDescription::findExternalItemDescription(ModuleCustVend::Vend, _parmLine.ItemId, _parmLine.inventDim(), _parmLine.InvoiceAccount, VendTable::find(_parmLine.InvoiceAccount).VendItemGroupId);
            this.Name = _parmLine.Description;
            this.TaxGroup = _parmLine.TaxGroup;
            this.TaxItemGroup = _parmLine.TaxItemGroup;
            this.OverrideSalesTax = _parmLine.OverrideSalesTax;
            this.Tax1099Fields = _parmLine.Tax1099Fields;
            this.CurrencyCode = _parmLine.CurrencyCode;
            this.PurchUnit = _parmLine.PurchUnit;

            this.Tax1099Amount = _parmLine.Tax1099Amount;
            this.Tax1099State = _parmLine.Tax1099State;
            this.Tax1099StateAmount = _parmLine.Tax1099StateAmount;
            this.QtyPhysical = 0;
            this.PartDelivery = 0;

            this.DefaultDimension = _parmLine.DefaultDimension;
            this.TransactionCode = _parmLine.TransactionCode;
            this.Transport = _parmLine.Transport;
            this.Port = _parmLine.Port;
            this.StatProcId = _parmLine.StatProcId;
            this.IntrastatCommodity = _parmLine.IntrastatCommodity;
            this.OrigCountryRegionId = _parmLine.OrigCountryRegionId;
            this.OrigStateId = _parmLine.OrigStateId;

            this.InventRefType = InventRefType::None;

            if (isConfigurationkeyEnabled(configurationKeyNum(TradeMultiShipTo)))
            {
                postalAddress = LogisticsPostalAddress::findRecId(_parmLine.DeliveryPostalAddress);
            }
            else
            {
                postalAddress = LogisticsPostalAddress::findRecId(_parmLine.vendInvoiceInfoTable().DeliveryPostalAddress);
            }

            this.DestState = postalAddress.State;
            this.DestCountryRegionId= postalAddress.CountryRegionId;
            this.DestCounty = postalAddress.County;

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                this.AgreementLine_PSN = _parmLine.AgreementLine_PSN;
                this.PurchCommitmentLine_PSN = _parmLine.PurchCommitmentLine_PSN;
                this.VendDirective_PSN = _parmLine.VendDirective_PSN;
            }

            this.BudgetReservationLine_PSN = _parmLine.BudgetReservationLine_PSN;
        }

        this.LineAmount = _parmLine.LineAmount;
        this.DiscAmount = _parmLine.discAmount();
        this.DiscPercent = _parmLine.discPercent();
        this.PurchMarkup = _parmLine.PurchMarkup;
        this.PurchPrice = _parmLine.PurchPrice;
        this.PriceUnit = _parmLine.PriceUnit;
        this.LineDisc = _parmLine.LineDisc;
        this.LinePercent = _parmLine.LinePercent;
        this.MultiLnDisc = _parmLine.MultiLnDisc;
        this.MultiLnPercent = _parmLine.MultiLnPercent;
        this.Qty = _parmLine.ReceiveNow;
        this.ReasonTableRef = _parmLine.ReasonTableRef;

        this.SourceDocumentLine = _parmLine.SourceDocumentLine;

        vendInvoiceInfoLine_W = _parmLine.vendInvoiceInfoLine_W();

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            vendInvoiceTrans_IN = this.vendInvoiceTrans_IN();
        }

        if (TaxParameters::checkTaxParameters_IN())
        {
            this.AssessableValue_IN = vendInvoiceInfoLine_W.AssessableValue_IN;
            vendInvoiceTrans_IN.AssessableValueAccountingCurrency = vendInvoiceInfoLine_W.AssessableValueAccountingCurrency_IN;
            this.packVendInvoiceTrans_IN(vendInvoiceTrans_IN);
        }
        // </GIN>
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.MarkupCode_RU = vendInvoiceInfoLine_W.MarkupCode_RU ? vendInvoiceInfoLine_W.MarkupCode_RU : _parmLine.purchLine().purchLine_W().MarkupCode_RU;
            this.CountryRegionName_RU = vendInvoiceInfoLine_W.CountryRegionName_RU;
            this.InvoiceGTDId_RU = vendInvoiceInfoLine_W.InvoiceGTDId_RU;
            this.AlcoholLicenseSeriesNum_RU = vendInvoiceInfoLine_W.AlcoholLicenseSeriesNum_RU;
        }
        // </GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            VendInvoiceTrans_W vendInvoiceTrans_W = this.vendInvoiceTrans_W();

            vendInvoiceTrans_W.WithholdingTypeCode_MX = vendInvoiceInfoLine_W.WithholdingTypeCode_MX;
            vendInvoiceTrans_W.CFDIInterestRealAmount_MX = vendInvoiceInfoLine_W.CFDIInterestRealAmount_MX;
            vendInvoiceTrans_W.CFDIInterestNominalAmount_MX = vendInvoiceInfoLine_W.CFDIInterestNominalAmount_MX;
            vendInvoiceTrans_W.CFDIInterestLossAmount_MX = vendInvoiceInfoLine_W.CFDIInterestLossAmount_MX;
            vendInvoiceTrans_W.CFDIInterestCashedInTheCurrentPeriod_MX = vendInvoiceInfoLine_W.CFDIInterestCashedInTheCurrentPeriod_MX;
            vendInvoiceTrans_W.CFDIInterestBelongsDerivedFinOp_MX = vendInvoiceInfoLine_W.CFDIInterestBelongsDerivedFinOp_MX;
            vendInvoiceTrans_W.CFDIFinancialSystem_MX = vendInvoiceInfoLine_W.CFDIFinancialSystem_MX;
            vendInvoiceTrans_W.CFDIBeneficiaryRetains_MX = vendInvoiceInfoLine_W.CFDIBeneficiaryRetains_MX;

            this.packVendInvoiceTrans_W(vendInvoiceTrans_W);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromParmTable</Name>
				<Source><![CDATA[
    public void initFromParmTable(VendInvoiceInfoTable _parmTable)
    {
        this.InventDate = _parmTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    public void initFromPurchLine(PurchLine _purchLine, VendInvoiceInfoLine _parmLine) // this parameter is assumed mandatory, by the code
    {
        PurchTable purchTable;
        LogisticsPostalAddress postalAddress;
        // <GIN>
        PurchLine_IN purchLine_IN;
        // </GIN>
        // <GEERU>
        PurchLine_W purchLine_W;
        // </GEERU>
        #ISOCountryRegionCodes

        VendInvoiceTrans_Intrastat vendInvoiceTrans_Intrastat;

        // <GMY>
        VendInvoiceTrans_W vendInvoiceTrans_W;
        // </GMY>

        if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(VendInvoiceTrans_Intrastat)))
        {
            vendInvoiceTrans_Intrastat = this.vendInvoiceTrans_Intrastat();
        }

        this.OrigPurchId = _purchLine.PurchId;
        this.InventTransId = _purchLine.InventTransId;
        this.InventDimId = _purchLine.InventDimId;
        this.ItemId = _purchLine.ItemId;
        this.ProcurementCategory = _purchLine.ProcurementCategory;
        this.StockedProduct = _purchLine.StockedProduct;
        this.LineNum = any2real(_purchLine.LineNumber);
        this.PurchaseLineLineNumber = _purchLine.LineNumber;
        this.ExternalItemId = _purchLine.ExternalItemId;
        this.Name = _purchLine.Name;
        this.TaxGroup = _purchLine.TaxGroup;
        this.TaxItemGroup = _purchLine.TaxItemGroup;
        this.OverrideSalesTax = _purchLine.OverrideSalesTax;
        this.Tax1099Fields = _purchLine.Tax1099Fields;
        this.CurrencyCode = _purchLine.CurrencyCode;
        this.PurchUnit = _purchLine.PurchUnit;
        this.LedgerDimension = _purchLine.LedgerDimension;
        this.Tax1099Amount = _purchLine.Tax1099Amount;
        this.Tax1099State = _purchLine.Tax1099State;
        this.Tax1099StateAmount = _purchLine.Tax1099StateAmount;
        this.QtyPhysical = 0;
        this.PartDelivery = 0;

        this.DefaultDimension = _purchLine.DefaultDimension;
        this.TransactionCode = _purchLine.TransactionCode;
        this.Transport = _purchLine.Transport;
        this.Port = _purchLine.Port;
        this.StatProcId = _purchLine.StatProcId;
        this.IntrastatCommodity = _purchLine.IntrastatCommodity;
        this.OrigCountryRegionId = _purchLine.OrigCountryRegionId;
        this.OrigStateId = _purchLine.OrigStateId;

        this.InventRefType = _purchLine.ItemRefType;
        this.InventRefId = _purchLine.InventRefId;
        this.InventRefTransId = _purchLine.InventRefTransId;

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            this.PurchCommitmentLine_PSN = _purchLine.PurchCommitmentLine_PSN;
        }

        this.BudgetReservationLine_PSN = _purchLine.BudgetReservationLine_PSN;

        if (ReverseChargeParameters_W::find().Enabled &&
            this.TaxGroup == ReverseChargeParameters_W::find().PurchTaxGroup)
        {
            this.ReverseCharge_W = NoYes::Yes;
        }

        this.InterCompanyInventTransId = _purchLine.InterCompanyInventTransId;

        // <GIN>
        if (TaxWithholdParameters_IN::checkTaxParameters())
        {
            purchLine_IN = _purchLine.purchLine_IN();
            this.tdsGroup_IN = purchLine_IN.tdsGroup;
            this.tcsGroup_IN = purchLine_IN.tcsGroup;
            this.CreditNoteDate_IN = purchLine_IN.CreditNoteDate;
            this.TaxWithholdVoucher_IN = purchLine_IN.TaxWithholdVoucher;
            this.TaxWithholdLineNum_IN = purchLine_IN.TaxWithholdLineNum;
        }
        // </GIN>

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            purchLine_W = _purchLine.purchLine_W();
            this.RefReturnInvoiceTrans_W = purchLine_W.RefReturnInvoiceTrans_W;
            if (_purchLine.isMarkupCodeEnabled_RU())
            {
                this.MarkupCode_RU = purchLine_W.MarkupCode_RU;
            }
            this.CountryRegionName_RU = purchLine_W.CountryRegionName_RU;
            this.InvoiceGTDId_RU = purchLine_W.InvoiceGTDId_RU;
        }
        // </GEERU>

        if (isConfigurationkeyEnabled(configurationKeyNum(TradeMultiShipTo)))
        {
            postalAddress = _purchLine.deliveryAddress();
        }
        else
        {
            purchTable = _purchLine.purchTable();
            postalAddress = purchTable.deliveryAddress();
        }
        this.DestState = postalAddress.State;
        this.DestCountryRegionId= postalAddress.CountryRegionId;
        this.DestCounty = postalAddress.County;

        if (TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled() || BrazilParameters::isEnabled())
        {
            this.TaxWithholdGroup_TH = _purchLine.TaxWithholdGroup_TH;
            this.TaxWithholdItemGroupHeading_TH = _purchLine.TaxWithholdItemGroupHeading_TH;
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            this.RetailPackageId = _purchLine.RetailPackageId;
            this.rboPackageLineNum = _purchLine.rboPackageLineNum;
        }

        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            this.MaximumRetailPrice_IN = purchLine_IN.MaximumRetailPrice;
        }
        // </GIN>

        // <GEELT>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        {
            this.StatisticValue_LT = _purchLine.StatisticValue_LT;
        }
        // </GEELT>

        // <GEEHU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        {
            this.IntrastatFulfillmentDate_HU = _purchLine.IntrastatFulfillmentDate_HU;
            this.RefReturnInvoiceTrans_W = _purchLine.purchLine_W().RefReturnInvoiceTrans_W;
        }
        // </GEEHU>

        // <GEECZ>
        if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(VendInvoiceTrans_Intrastat)))
        {
            vendInvoiceTrans_Intrastat.SpecialMovement_CZ = _purchLine.purchLine_Intrastat().SpecialMovement_CZ;
            this.packVendInvoiceTrans_Intrastat(vendInvoiceTrans_Intrastat);
        }
        // </GEECZ>

        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        {
            vendInvoiceTrans_W = this.vendInvoiceTrans_W();

            purchLine_W = _purchLine.purchLine_W();
            vendInvoiceTrans_W.RefInvoiceId_MY = purchLine_W.RefInvoiceId_MY;
            vendInvoiceTrans_W.RefInvoiceDate_MY = purchLine_W.RefInvoiceDate_MY;

            this.packVendInvoiceTrans_W(vendInvoiceTrans_W);
        }
        // </GMY>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLineForeignTradeCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>VendInvoiceTrans</c> record from the <c>PurchLineForeignTradeCategory</c> record.
    /// </summary>
    /// <param name="_purchLineForeignTradeCategory">
    /// The <c>PurchLineForeignTradeCategory</c> record from which to initialize the
    /// <c>VendInvoiceTrans</c> record.
    /// </param>
    public void initFromPurchLineForeignTradeCategory(PurchLineForeignTradeCategory _purchLineForeignTradeCategory)
    {
        this.ngpCodesTable_FR = _purchLineForeignTradeCategory.ngpCodesTable_FR;
        this.Weight = _purchLineForeignTradeCategory.UnitWeight * this.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxTrans_RU</Name>
				<Source><![CDATA[
    public void initFromTaxTrans_RU(TaxTrans _taxTrans)
    {
        this.CustVendInvoiceTrans::initFromTaxTrans_RU(_taxTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxWorkTrans_RU</Name>
				<Source><![CDATA[
    public void initFromTaxWorkTrans_RU(TmpTaxWorkTrans _taxWorkTrans, RefTableId _sourceTableId, RefRecId _sourceRecId = 0, InventTransId _inventTransId = "")
    {
        this.CustVendInvoiceTrans::initFromTaxWorkTrans_RU(_taxWorkTrans, _sourceTableId, _sourceRecId, _inventTransId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceInfoLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current <c>VendInvoiceTrans</c> record based on the data in the provided
    /// <c>VendInvoiceInfoLine</c> record.
    /// </summary>
    /// <param name="_vendInvoiceInfoLine">
    /// The <c>VendInvoiceInfoLine</c> record that contains the data to be copied.
    /// </param>
    void initFromVendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine)
    {
        // <GIN>
        VendInvoiceInfoLineTaxExtension_IN vendInvoiceInfoLineTaxExt;
        #ISOcountryRegionCodes
        // </GIN>

        this.Description = _vendInvoiceInfoLine.Description;

        this.DeliveryPostalAddress = _vendInvoiceInfoLine.DeliveryPostalAddress;
        this.DeliveryName = _vendInvoiceInfoLine.DeliveryName;
        this.LineType = _vendInvoiceInfoLine.LineType;

        if (FinTagConfiguration::isFinTagConfigurationSet(_vendInvoiceInfoLine.DataAreaId) && PurchaseOrderFinTagFeature::isEnabled())
        {
            this.FinTag = _vendInvoiceInfoLine.FinTag;
        }

        //Below lines code will initializes the India Tax fields of VendInvoiceTrans for a non Po line before posting.
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && _vendInvoiceInfoLine.isNonPO())
        {
            vendInvoiceInfoLineTaxExt = VendInvoiceInfoLineTaxExtension_IN::findByVendInvoiceInfoLineRecId(_vendInvoiceInfoLine.RecId);

            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                this.tdsGroup_IN = vendInvoiceInfoLineTaxExt.tdsGroup;
                this.tcsGroup_IN = vendInvoiceInfoLineTaxExt.tcsGroup;
            }

            if (TaxParameters::checkTaxParameters_IN())
            {
                this.MaximumRetailPrice_IN = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().MaximumRetailPrice_IN;
            }
        }
        // </GIN>

        // <GEEHU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        {
            this.IntrastatFulfillmentDate_HU = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().IntrastatFulfillmentDate_HU;
        }
        // </GEEHU>

        this.psaReleaseAmount = _vendInvoiceInfoLine.psaReleaseAmount;
        this.psaRetainageAmount = _vendInvoiceInfoLine.psaRetainageAmount;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            this.OperationType_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().DiotOperationType;

            VendInvoiceTrans_W vendInvoiceTrans_W = this.vendInvoiceTrans_W();

            vendInvoiceTrans_W.WithholdingTypeCode_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().WithholdingTypeCode_MX;
            vendInvoiceTrans_W.CFDIInterestRealAmount_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIInterestRealAmount_MX;
            vendInvoiceTrans_W.CFDIInterestNominalAmount_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIInterestNominalAmount_MX;
            vendInvoiceTrans_W.CFDIInterestLossAmount_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIInterestLossAmount_MX;
            vendInvoiceTrans_W.CFDIInterestCashedInTheCurrentPeriod_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIInterestCashedInTheCurrentPeriod_MX;
            vendInvoiceTrans_W.CFDIInterestBelongsDerivedFinOp_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIInterestBelongsDerivedFinOp_MX;
            vendInvoiceTrans_W.CFDIFinancialSystem_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIFinancialSystem_MX;
            vendInvoiceTrans_W.CFDIBeneficiaryRetains_MX = _vendInvoiceInfoLine.vendInvoiceInfoLine_W().CFDIBeneficiaryRetains_MX;

            this.packVendInvoiceTrans_W(vendInvoiceTrans_W);
        }
        
        this.ReasonTableRef = _vendInvoiceInfoLine.ReasonTableRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceJour</Name>
				<Source><![CDATA[
    public void initFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
    {
        this.PurchID = _vendInvoiceJour.PurchId;
        this.InvoiceId = _vendInvoiceJour.InvoiceId;
        this.InvoiceDate = _vendInvoiceJour.InvoiceDate;
        this.NumberSequenceGroup = _vendInvoiceJour.NumberSequenceGroup;
        this.CurrencyCode = _vendInvoiceJour.CurrencyCode;
        this.InternalInvoiceId = _vendInvoiceJour.InternalInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceLineForeignTrade</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>VendInvoiceTrans</c> record from the <c>VendInvoiceLineForeignTradeCategory</c>
    /// record.
    /// </summary>
    /// <param name="_vendInvoiceLineForeignTradeCategory">
    /// The <c>VendInvoiceLineForeignTradeCategory</c> record from which to initialize the
    /// <c>VendInvoiceTrans</c> record.
    /// </param>
    public void initFromVendInvoiceLineForeignTrade(VendInvoiceLineForeignTradeCategory _vendInvoiceLineForeignTradeCategory)
    {
        this.ngpCodesTable_FR = _vendInvoiceLineForeignTradeCategory.ngpCodesTable_FR;
        this.Weight = _vendInvoiceLineForeignTradeCategory.UnitWeight * this.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        // <GEECZ> <GIN>
        this.SysExtensionSerializerMap::postInsert();
        // </GEECZ> </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanySourceTable</Name>
				<Source><![CDATA[
    public Common interCompanySourceTable(boolean interCompanySource = true)
    {
        if (interCompanySource)
        {
            return SalesLine::findInventTransId(this.InterCompanyInventTransId).salesTable();
        }
        else
        {
            return SalesLine::findInventTransId(this.InventRefTransId).salesTable();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventCostAmount</Name>
				<Source><![CDATA[
    display CostAmount inventCostAmount()
    {
        InventTransOriginId inventTransOriginId = InventTransOrigin::findByInventTransId(this.InventTransId).RecId;

        return InventTransInvoice::costAmount(inventTransOriginId, this.InvoiceId, this.InventDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean update = false)
    {
        return InventDim::find(this.InventDimId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQty</Name>
				<Source><![CDATA[
    // <returns>
    // this.Qty in inventory units of measure.
    // </returns>
    public display ProductQuantity inventQty()
    {
        Qty ret = this.Qty;

        if (this.ItemId && this.PurchUnit)
        {
            ret = InventTableModule::unitConvert(this.ItemId, 
                                                 ModuleInventPurchSales::Invent, 
                                                 this.PurchUnit, 
                                                 ret,
                                                 this.InventDimId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQtyPhysical</Name>
				<Source><![CDATA[
    display InventQty inventQtyPhysical()
    {
        InventTransOriginId inventTransOriginId = InventTransOrigin::findByInventTransId(this.InventTransId).RecId;

        return InventTransInvoice::qtySoldWithoutPackingSlip(inventTransOriginId, this.InvoiceId, this.InvoiceDate) +
               InventTransInvoice::qtyPurchasedWithoutPackingSlip(inventTransOriginId, this.InvoiceId, this.InvoiceDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    public InventTable inventTable(ItemId _itemId = this.ItemId, boolean _update = false)
    {
        return InventTable::find(_itemId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdvance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an invoice is of advance type.
    /// </summary>
    /// <returns>
    /// true if the invoice is advance type; otherwise, false.
    /// </returns>
    public boolean isAdvance()
    {
        return this.LineType == PurchInvoiceLineType::Advance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdvanceApplication</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an invoice line is of advance type.
    /// </summary>
    /// <returns>
    /// true if an invoice line is advance type; otherwise, false.
    /// </returns>
    public boolean isAdvanceApplication()
    {
        return this.VendInvoiceLineMap::isAdvanceApplication();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCategoryBased</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the journal line is category based.
    /// </summary>
    /// <returns>
    ///    true if the journal line is category based; otherwise, false.
    /// </returns>
    boolean isCategoryBased()
    {
        return !this.ItemId && this.ProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the current record has been initialized.
    /// </summary>
    /// <returns>
    /// true, if the record has been initialized; otherwise, false
    /// </returns>
    public boolean isInitialized()
    {
        return (this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNonPO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether this invoice line is associated with a purchase order.
    /// </summary>
    /// <returns>
    /// true if the line is not associated with a purchase order; otherwise, false.
    /// </returns>
    public boolean isNonPO()
    {
        return (this.PurchID == '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStocked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the order line is tracked in inventory.
    /// </summary>
    /// <returns>
    /// true if the order line is tracked in inventory; otherwise, false.
    /// </returns>
    boolean isStocked()
    {
        return this.InterCompanyTrans::isStocked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransferFromCurrentCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the items are transferred from the current company or from the intercompany
    /// company.
    /// </summary>
    /// <returns>
    /// true if the transfer is from the current company; otherwise, false.
    /// </returns>
    boolean isTransferFromCurrentCompany()
    {
        return this.Qty >= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    display ItemNameDisplay itemName()
    {
        return InventTable::find(this.ItemId).itemName(this.inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns item name for current line
    /// </summary>
    /// <returns>
    /// Item name for current line
    /// </returns>
    /// <remarks>
    /// If item id not specified, procurement category name used instead
    /// </remarks>
    display ItemNameDisplay itemName_RU()
    {
        if (this.ItemId)
        {
            return this.itemName();
        }
        else if (this.ProcurementCategory)
        {
            return EcoResCategory::find(this.ProcurementCategory).Name;
        }
        else
        {
            return this.Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>LedgerDimension</c> value that is associated with an invoice.
    /// </summary>
    /// <returns>
    /// The <c>LedgerDimension</c> value that is associated with the invoice.
    /// </returns>
    public LedgerDimensionDefaultAccount ledgerDim()
    {
        return this.LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a posting account for the invoice line.
    /// </summary>
    /// <param name="_inventAccountType">
    /// The posting account type.
    /// </param>
    /// <returns>
    /// The posting account number for the account type for the invoice line.
    /// </returns>
    LedgerDimensionDefaultAccount ledgerDimensionItem(InventAccountType _inventAccountType)
    {
        return InventPosting::accountItemLedgerDimensionFromParameters(
            this.buildAccountItemLedgerDimensionParameter(
                _inventAccountType,
                this.inventTable().itemGroupId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountExclTax</Name>
				<Source><![CDATA[
    display LineAmount lineAmountExclTax()
    {
        return this.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountInclTax</Name>
				<Source><![CDATA[
    display LineAmount lineAmountInclTax()
    {
        return this.LineAmount + this.LineAmountTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountTaxMST_MY</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the line amount tax in account currency.
    /// </summary>
    /// <returns>
    /// The line amount tax in account currency.
    /// </returns>
    public display AmountMST lineAmountTaxMST_MY()
    {
        return CurrencyExchangeHelper::amountCur2MST(this.LineAmountTax, this.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupAmountNotAlloc_RU</Name>
				<Source><![CDATA[
    display MarkupAmountNotAlloc_RU markupAmountNotAlloc_RU()
    {
        CostAllocationHistory_RU costAllocationHistory;

        select sum(AmountPosted) from costAllocationHistory
            where costAllocationHistory.AllocatedInvoiceTransRecId == this.RecId &&
                !costAllocationHistory.CostAllocationHistoryRecId;

        return this.LineAmount - costAllocationHistory.AmountPosted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            switch (_fieldId)
            {
                case fieldNum(VendInvoiceTrans, IsPwp):
                    if (this.IsPwp)
                    {
                        this.ReadyForPayment = NoYesCombo::No;
                    }
                    else
                    {
                        this.ReadyForPayment = NoYesCombo::Yes;
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>packingSlipIdAndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a container that contains the packing slip ID and the delivery date of the
    /// <c>VendPackingSlipTrans</c> table.
    /// </summary>
    /// <param name="_vendInvoiceJour">
    /// A <c>VendInvoiceJour</c> record.
    /// </param>
    /// <returns>
    /// A container that contains the packing slip ID and delivery date of the <c>VendPackingSlipTrans</c>
    /// table.
    /// </returns>
    public container packingSlipIdAndDate(VendInvoiceJour _vendInvoiceJour)
    {
        Num documentId;
        VendPackingSlipTrans vendPackingSlipTrans;
        NumberOfRecords oneSubLines = 1;
        NumberOfRecords zeroSubLines = 0;
        TransDate deliveryDate;
        container conPackingSlipIdDate;
        VendInvoiceTrans vendInvoicetransLoc;

        while select vendInvoicetransLoc
            where vendInvoicetransLoc.PurchID == _vendInvoiceJour.PurchId
        {
            switch (VendPackingSlipTrans::subLines(vendInvoicetransLoc))
            {
                case zeroSubLines:
                    documentId = '';
                    deliveryDate = dateNull();
                    break;

                case oneSubLines:
                    select firstonly vendPackingSlipTrans
                        where vendPackingSlipTrans.InvoiceTransRefRecId == vendInvoicetransLoc.RecId;
                    documentId = vendPackingSlipTrans.PackingSlipId;
                    deliveryDate = vendPackingSlipTrans.vendPackingslipJour().DeliveryDate;
                    break;

                default:
                    documentId = '*'; //More than one journal line attached to the parm line
                    deliveryDate = dateNull();
                    break;
            }

            conPackingSlipIdDate += [vendInvoicetransLoc.RecId, documentId, deliveryDate];
        }

        return conPackingSlipIdDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packVendInvoiceTrans_Intrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs <c>VendInvoiceTrans_Intrastat</c> extension table record.
    /// </summary>
    /// <param name="_vendInvoiceTrans_Intrastat">
    /// The extension table record to pack.
    /// </param>
    public void packVendInvoiceTrans_Intrastat(VendInvoiceTrans_Intrastat _vendInvoiceTrans_Intrastat)
    {
        this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceTrans_Intrastat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchangeRateDate</Name>
				<Source><![CDATA[
    public AccountingDate parmExchangeRateDate()
    {
        return this.vendInvoiceJour().InvoiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParentSourceDocumentLine</Name>
				<Source><![CDATA[
    public SourceDocumentLine parmParentSourceDocumentLine()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocLineTypeEnumName</Name>
				<Source><![CDATA[
    public EnumName parmSourceDocLineTypeEnumName()
    {
        return enumStr(SourceDocumentLine_VendorInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocLineTypeEnumValue</Name>
				<Source><![CDATA[
    public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
    {
        return SourceDocumentLine_VendorInvoice::VendorInvoiceLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeader</Name>
				<Source><![CDATA[
    public SourceDocumentHeader parmSourceDocumentHeader()
    {
        return SourceDocumentHeader::find(this.vendInvoiceJour().SourceDocumentHeader);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWInventQtyPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves physical quantity in catch weight unit.
    /// </summary>
    /// <returns>
    /// A physical quantity in catch weight unit.
    /// </returns>
    public display PdsCWInventQty pdsCWInventQtyPhysical()
    {
        InventTransOriginId inventTransOriginId = InventTransOrigin::findByInventTransId(this.InventTransId).RecId;

        return InventTransInvoice::pdsCWQtySoldWithoutPackingSlip(inventTransOriginId, this.InvoiceId, this.InvoiceDate)
             + InventTransInvoice::pdsCWQtyPurchasedWithoutPackingSlip(inventTransOriginId, this.InvoiceId, this.InvoiceDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the catch weight unit for the item.
    /// </summary>
    /// <returns>
    /// The catch weight unit for the item.
    /// </returns>
    public display PdsCWUnitId pdsCWUnitId()
    {
        return PdsCatchWeight::cwUnitId(this.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsPurchPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the effective unit purchase price for the line.
    /// </summary>
    /// <returns>
    /// The effective unit purchase price for the line.
    /// </returns>
    public PurchPrice pdsPurchPrice()
    {
        return this.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productReceiptId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the packing slip ID of the <c>VendPackingSlipTrans</c> table.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    /// A <c>VendInvoiceTrans</c> record.
    /// </param>
    /// <returns>
    /// The packing slip ID of the <c>VendPackingSlipTrans</c> table.
    /// </returns>
    public display ProductReceiptId productReceiptId(VendInvoiceTrans _vendInvoiceTrans)
    {
        return this.documentId(_vendInvoiceTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLine</Name>
				<Source><![CDATA[
    public PurchLine purchLine(boolean _forUpdate = false)
    {
        return PurchLine::findInventTransId(this.InventTransId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable_RU</Name>
				<Source><![CDATA[
    public PurchTable purchTable_RU()
    {
        PurchTable purchTable;

        select firstonly purchTable
            where purchTable.PurchId == this.PurchID;

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchUnitTxt</Name>
				<Source><![CDATA[
    display UnitOfMeasureReportingText purchUnitTxt()
    {
        VendInvoiceJour vendInvoiceJour = this.vendInvoiceJour();
        PurchTable purchTable;
        VendTable vendTable;

        if (vendInvoiceJour.LanguageId)
        {
            return UnitOfMeasureReportingTranslation::unitOfMeasureReportingText(UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit), vendInvoiceJour.LanguageId);
        }

        purchTable = PurchTable::find(this.PurchID);
        if (purchTable.LanguageId)
        {
            return UnitOfMeasureReportingTranslation::unitOfMeasureReportingText(UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit), purchTable.LanguageId);
        }
        vendTable = VendTable::find(this.vendInvoiceJour().InvoiceAccount);

        if (vendTable.languageId())
        {
            return UnitOfMeasureReportingTranslation::unitOfMeasureReportingText(UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit), vendTable.languageId());
        }

        return UnitOfMeasureReportingTranslation::unitOfMeasureReportingText(UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit), CompanyInfo::languageId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>refAdjustedTransRecId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns record Id of corrected invoice trans.
    /// </summary>
    /// <returns>
    /// Record Id of corrected invoice trans.
    /// </returns>
    public RefRecId refAdjustedTransRecId_RU()
    {
        return VendInvoiceTransCorrLink_RU::findVendInvoiceTrans(this.RecId).CorrTransRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnLineAmount</Name>
				<Source><![CDATA[
    public LineAmount returnLineAmount(Qty _qtyNow)
    {
        LineAmount returnAmount;
        PurchMarkup purchMarkup;
        PurchDiscAmount purchDiscAmount;

        purchMarkup = _qtyNow >= 0 ? this.PurchMarkup : -this.PurchMarkup;

        if (this.PurchPrice)
        {
            if (this.PriceUnit)
            {
                returnAmount = _qtyNow * (this.PurchPrice / this.PriceUnit);
            }
            else
            {
                returnAmount = _qtyNow * (this.PurchPrice / 1);
            }
        }
        else if (this.vendInvoiceJour().InclTax)
        {
            returnAmount = this.LineAmount + this.LineAmountTax;
        }
        else
        {
            returnAmount = this.LineAmount;
        }

        purchDiscAmount = _qtyNow * (this.DiscAmount/1);
        returnAmount = (returnAmount + purchMarkup - purchDiscAmount) * (1-(this.DiscPercent/100));

        returnAmount = CurrencyExchangeHelper::amount(returnAmount, this.CurrencyCode);

        return returnAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    public void setLineNum(LineNum lineNum)
    {
        this.LineNum = lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tax1099FieldNum</Name>
				<Source><![CDATA[
    display Tax1099FieldNum tax1099FieldNum()
    {
        return Tax1099Fields::find(this.Tax1099Fields).Tax1099FieldNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tax1099RegNum</Name>
				<Source><![CDATA[
    display VATNum tax1099RegNum()
    {
        VATNum vatNum;

        if (this.vendTable_InvoiceAccount().fieldAccessRight(fieldStr(VendTable, Tax1099RegNum)))
        {
            vatNum = this.vendTable_InvoiceAccount().Tax1099RegNum;
        }

        return vatNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmountMST_MY</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the tax amount in account currency.
    /// </summary>
    /// <returns>
    /// The tax amount in account currency.
    /// </returns>
    public display AmountMST taxAmountMST_MY()
    {
        return CurrencyExchangeHelper::amountCur2MST(this.TaxAmount, this.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        this.SysExtensionSerializerMap::postUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceJour</Name>
				<Source><![CDATA[
    public VendInvoiceJour vendInvoiceJour()
    {
        return VendInvoiceJour::findFromVendInvoiceTrans(this.PurchID, this.InvoiceId, this.InvoiceDate, this.NumberSequenceGroup, this.InternalInvoiceId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceTrans_Intrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves <c>VendInvoiceTrans_Intrastat</c> extension table record.
    /// </summary>
    /// <returns>
    /// The extension table record related to current record.
    /// </returns>
    public VendInvoiceTrans_Intrastat vendInvoiceTrans_Intrastat()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceTrans_Intrastat));
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable_InvoiceAccount</Name>
				<Source><![CDATA[
    public VendTable vendTable_InvoiceAccount()
    {
        return this.vendInvoiceJour().vendTable_InvoiceAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TradeInventTransId inventTransId)
    {
        boolean ret = true;

        if (!VendInvoiceTrans::exist(inventTransId))
        {
            ret = checkFailed(strFmt(VendInvoiceTrans::txtNotExist(), inventTransId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TradeInventTransId inventTransId)
    {
        VendInvoiceTrans vendInvoiceTrans;

        select firstonly RecId from vendInvoiceTrans
            where vendInvoiceTrans.InventTransId == inventTransId;

        return vendInvoiceTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForPurchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether there is any standard invoice posted for a specified purchase order.
    /// </summary>
    /// <param name="_purchId">
    /// The purchase order ID.
    /// </param>
    /// <returns>
    /// true if there is any standard invoice posted for the specified purchase order; otherwise, false.
    /// </returns>
    public static boolean existForPurchId(PurchId _purchId)
    {
        VendInvoiceTrans vendInvoiceTrans;

        select firstonly RecId from vendInvoiceTrans
            where vendInvoiceTrans.LineType == PurchInvoiceLineType::Standard
                && vendInvoiceTrans.OrigPurchID == _purchId;

        return vendInvoiceTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>VendInvoiceTrans</c> table exist by using the specified
    /// <c>SourceDocumentLine</c> value.
    /// </summary>
    /// <param name="_sourceDocumentLineRecId">
    /// The <c>SourceDocumentLine</c> record ID used to find the <c>VendInvoiceTrans</c> record.
    /// </param>
    /// <returns>
    /// true if there is any invoice posted for the specified <c>SourceDocumentLine</c>; otherwise, false.
    /// </returns>
    public static boolean existSourceDocumentLine(SourceDocumentLineRecId _sourceDocumentLineRecId)
    {
        VendInvoiceTrans vendInvoiceTrans;

        select firstonly crossCompany RecId from vendInvoiceTrans
            where vendInvoiceTrans.SourceDocumentLine == _sourceDocumentLineRecId;

        return vendInvoiceTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static VendInvoiceTrans find(TradeInventTransId _inventTransId, boolean _forupdate = false, ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendInvoiceTrans vendInvoiceTrans;

        vendInvoiceTrans.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendInvoiceTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly vendInvoiceTrans where vendInvoiceTrans.InventTransId == _inventTransId;

        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFacture_RU</Name>
				<Source><![CDATA[
    public static VendInvoiceTrans findFacture_RU(FactureTrans_RU _trans, boolean _forupdate = false)
    {
        VendInvoiceTrans ret;

        if (_trans && _trans.Module == FactureModule_RU::Vend && _trans.FactureLineType == FactureLineType_RU::InvoiceLine)
        {
            ret.selectForUpdate(_forupdate);

            select firstonly ret
                where ret.LineNum == _trans.InvoiceLineNum &&
                    ret.InternalInvoiceId == _trans.InternalInvoiceId &&
                    ret.InvoiceDate == _trans.InvoiceDate &&
                    ret.InvoiceId == _trans.InvoiceId &&
                    ret.PurchID == _trans.SalesPurchId &&
                    ret.NumberSequenceGroup == _trans.NumberSequenceGroup;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransId</Name>
				<Source><![CDATA[
    public static VendInvoiceTrans findInventTransId(TradeInventTransId _inventTransId, boolean _update = false)
    {
        VendInvoiceTrans vendInvoiceTrans;

        vendInvoiceTrans.selectForUpdate(_update);

        select vendInvoiceTrans
               where vendInvoiceTrans.InventTransId == _inventTransId;

        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOriginalTrans_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills container with chain of correction invoice lines.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    /// Source <c>VendInvoiceTrans</c> record corrections are looked for.
    /// </param>
    /// <returns>
    /// Container with chain of correction invoice lines.
    /// </returns>
    static container findOriginalTrans_RU(VendInvoiceTrans _vendInvoiceTrans)
    {
        VendInvoiceTrans vendInvoiceTransOriginal;
        VendInvoiceTransCorrLink_RU corrLink;

        if (!_vendInvoiceTrans.existsCorrLink_RU())
        {
            return conNull();
        }

        select firstonly vendInvoiceTransOriginal
            join TableId from corrLink
            where vendInvoiceTransOriginal.RecId == corrLink.CorrTransRecId &&
                corrLink.TransRecId == _vendInvoiceTrans.RecId;

        return [vendInvoiceTransOriginal] + VendInvoiceTrans::findOriginalTrans_RU(vendInvoiceTransOriginal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static VendInvoiceTrans findRecId(RecId _recId, boolean _forUpdate = false)
    {
        VendInvoiceTrans vendInvoiceTrans;

        if (_recId)
        {
            vendInvoiceTrans.selectForUpdate(_forUpdate);

            select vendInvoiceTrans where vendInvoiceTrans.RecId == _recId;
        }
        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>VendInvoiceTrans</c> table by using the specified
    /// <c>SourceDocumentLine</c> value.
    /// </summary>
    /// <param name="_sourceDocumentLine">
    /// The <c>SourceDocumentLine</c> record ID of the <c>VendInvoiceTrans</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>VendInvoiceTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static VendInvoiceTrans findSourceDocumentLine(SourceDocumentLineRecId _sourceDocumentLine,boolean _forUpdate = false)
    {
        VendInvoiceTrans vendInvoiceTrans;

        vendInvoiceTrans.selectForUpdate(_forUpdate);

        select firstonly crossCompany vendInvoiceTrans
            where vendInvoiceTrans.SourceDocumentLine == _sourceDocumentLine;

        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVendInvoiceTrans</Name>
				<Source><![CDATA[
    static VendInvoiceTrans findVendInvoiceTrans(PurchId _purchId, InvoiceId _invoiceId, InvoiceDate _invoiceDate, NumberSequenceGroupId _numberSeqGrp, PurchInternalInvoiceId _internalInvoiceId, TradeInventTransId _inventTransId)
    {
        VendInvoiceTrans vendInvoiceTrans;

        select vendInvoiceTrans
            where vendInvoiceTrans.PurchID == _purchId &&
                vendInvoiceTrans.InvoiceId == _invoiceId &&
                vendInvoiceTrans.InvoiceDate == _invoiceDate &&
                vendInvoiceTrans.NumberSequenceGroup == _numberSeqGrp &&
                vendInvoiceTrans.InternalInvoiceId == _internalInvoiceId &&
                vendInvoiceTrans.InventTransId == _inventTransId;

        return vendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102262";
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            this.TransitDocumentTransactionMap_IN::deleteTransitDocuments();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssessableValueAccountingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to return value of AssessableValueAccountingCurrency field
    /// </summary>
    /// <returns>
    /// AssessableValueAccountingCurrency field of VendInvoiceTrans_IN table
    /// </returns>
    public AmountMST getAssessableValueAccountingCurrency()
    {
        return this.vendInvoiceTrans_IN().AssessableValueAccountingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packVendInvoiceTrans_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs an extension table record to the container field <C>PackedExtensions</C>.
    /// </summary>
    /// <param name="_vendInvoiceTrans_IN">
    /// The extension table record.
    /// </param>
    public void packVendInvoiceTrans_IN(VendInvoiceTrans_IN _vendInvoiceTrans_IN)
    {
        _vendInvoiceTrans_IN.VendInvoiceTrans = this.RecId;
        this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceTrans_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>packVendInvoiceTrans_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the <c>VendInvoiceTrans_W</c> record associated with the current record.
    /// </summary>
    /// <param name="_vendInvoiceTrans_W">
    /// The <c>VendInvoiceTrans_W</c> record.
    /// </param>
    public void packVendInvoiceTrans_W(VendInvoiceTrans_W _vendInvoiceTrans_W)
    {
        _vendInvoiceTrans_W.VendInvoiceTrans = this.RecId;

        this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceTrans_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tamVendRebateVendInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the corresponding <c>TAMVendRebateVendInvoiceTrans</c> record to current record.
    /// If missing, the record is created.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>TAMVendRebateVendInvoiceTrans</c> table record.
    /// </returns>
    public TAMVendRebateVendInvoiceTrans tamVendRebateVendInvoiceTrans(boolean _forUpdate = false)
    {
        TAMVendRebateVendInvoiceTrans TAMVendRebateVendInvoiceTrans;
        PurchLine purchLine;
        PurchTable purchTable;

        TAMVendRebateVendInvoiceTrans = TAMVendRebateVendInvoiceTrans::findByVendInvoiceTransRecId(this.RecId, _forUpdate);

        if (!TAMVendRebateVendInvoiceTrans)
        {
            purchLine = this.purchLine();

            if (purchLine)
            {
                purchTable = purchLine.purchTable();
            }

            if (purchTable && purchLine)
            {
                TAMVendRebateVendInvoiceTrans.initFromPurchTablePurchLine(purchTable, purchLine);
            }

            TAMVendRebateVendInvoiceTrans.VendInvoiceTransRecId = this.RecId;

            ttsBegin;

            TAMVendRebateVendInvoiceTrans.insert();

            ttsCommit;
        }

        return TAMVendRebateVendInvoiceTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceTrans_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the <c>VendInvoiceTrans_IN</c> table.
    /// </summary>
    /// <returns>
    /// The table <c>VendInvoiceTrans_IN</c> associated with the current record.
    /// </returns>
    public VendInvoiceTrans_IN vendInvoiceTrans_IN()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceTrans_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceTrans_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>VendInvoiceTrans_W</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>VendInvoiceTrans_W</c> record associated with the current record.
    /// </returns>
    public VendInvoiceTrans_W vendInvoiceTrans_W()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceTrans_W));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxDocumentRowDisplayString</Name>
				<Source><![CDATA[
    /// <summary>
    /// The callback method on tax engine tax document display
    /// </summary>
    /// <returns>The tax document display string.</returns>
    public TaxDocumentDisplayString getTaxDocumentRowDisplayString()
    {
        return strFmt("@ApplicationSuiteTaxEngineIntegration:VendInvoiceTransTaxDocumentRowDisplayFormat", this.LineNum, this.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendInvoiceTransInterface</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CustVendInvoiceTransInterface</c> object associated with the current table record.
    /// </summary>
    /// <returns>
    /// The <c>CustVendInvoiceTransInterface</c> object.
    /// </returns>
    public CustVendInvoiceTransInterface custVendInvoiceTransInterface()
    {
        return this.CustVendInvoiceTrans::CustVendInvoiceTransInterface();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIntercompanyCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to get customer invoice of intercompany posted pending vendor invoice.
    /// </summary>
    /// <param name = "_vendInvoiceTransRecId">
    /// RecId of VendInvoiceTrans table.
    /// </param>
    /// <param name = "_projId">
    /// project Id of current record.
    /// </param>
    /// <param name = "_dataAreaId">
    /// dataAreaId of current record.
    /// </param>
    /// <returns>
    /// The <c>CustInvoiceTable</c> records.
    /// </returns>
    internal static CustInvoiceTable getIntercompanyCustInvoiceTable(RecId _vendInvoiceTransRecId, ProjId _projId, DataAreaId _dataAreaId)
    {
        CustInvoiceTable custInvoiceTable;
        VendInvoiceTrans vendInvoiceTrans = VendInvoiceTrans::findRecId(_vendInvoiceTransRecId);

        if (vendInvoiceTrans)
        {
            CustInvoiceLine custInvoiceLine;
            CustInvoiceLineInterProj custInvoiceLineInterProj;
            select firstonly crosscompany custInvoiceTable
               where custInvoiceTable.InvoiceId == vendInvoiceTrans.InvoiceId
                  && custInvoiceTable.InvoiceDate == vendInvoiceTrans.InvoiceDate
            exists join custInvoiceLine
               where custInvoiceLine.ParentRecId == custInvoiceTable.RecId
            exists join custInvoiceLineInterProj
               where custInvoiceLineInterProj.CustInvoiceLine == custInvoiceLine.RecId
                  && custInvoiceLineInterProj.ProjId == _projId
                  && custInvoiceLineInterProj.ProjDataArea == _dataAreaId;
        }
        return custInvoiceTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126046</DeveloperDocumentation>
	<Label>@SYS27199</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustVendCreditInvoicingTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustVendCreditInvoicingTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>MarkupTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>MarkupTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SourceDocumentLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SourceDocumentLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberSequenceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalInvoiceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Advance</Name>
			<Label>@SYS7604</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdvanceApplicationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AlcoholDeclaration_RU</Name>
			<Label>@SYS4002797</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AlcoholLicenseSeriesNum_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RBOPackageLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailPackageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllocSource_General_RU</Name>
			<Label>@SYS27472</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllocSource_RU</Name>
			<Label>@SYS27472</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmountTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AmountMST</Name>
			<Label>@SYS84859</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AmountsMST_W</Name>
			<Label>@GLS111602</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmountMST_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATAmountMST_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExciseAmountMST_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CaseMoreInformation</Name>
			<Label>@SYS314356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayDeliveryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompanyLocation_IN</Name>
			<Label>@SYS81121</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyLocation_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationPostalAddress_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customs_IN</Name>
			<Label>@GLS5007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomsTariffCodeTable_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>deliveryAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension_RU</Name>
			<Label>@SYS14926</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DiotInformation_MX</Name>
			<Label>@SYS312478</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationType_MX</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiscPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultiLnPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultiLnDisc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Excise_IN</Name>
			<Label>@GLS5005</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExciseType_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DSA_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Factured_RU</Name>
			<Label>@GLS104546</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacturedQty_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FacturedFully_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Port</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatProcId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatDispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatCommodity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceGTDId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatisticValue_LT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompany</Name>
			<Label>@SYS74106</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterCompanyInventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StockedProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Measurement</Name>
			<Label>@SYS2021</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS130398</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MiscCharges</Name>
			<Label>@SYS8371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchMarkup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartDelivery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PayWhenPaid</Name>
			<Label>@PSA3342</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsPwp</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReadyForPayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsCW</Name>
			<Label>@PDS72</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQtyPhysical</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrecalculatedTaxes_RU</Name>
			<Label>@GLS102674</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATAmount_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATValue_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExciseAmount_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExciseValue_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prices</Name>
			<Label>@SYS12983</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseLineInvoice</Name>
			<Label>@SYS128446</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchCommitment_PSN</Name>
			<Label>@SPS1834</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchCommitmentLine_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS14578</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QtyPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventRefType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventRefTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReverseCharge</Name>
			<Label>@SYS118818</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReverseCharge_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAutogenerated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWriteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideSalesTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax_IN</Name>
			<Label>@GLS5536</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonRecoverablePercent_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceTax_IN</Name>
			<Label>@GLS5006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GTAServiceCategory_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceDocumentLine</Name>
			<Label>@sys127863</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax1099</Name>
			<Label>@SYS24226</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tax1099Date</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Num</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Fields</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099StateAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099StateAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VAT_IN</Name>
			<Label>@GLS5004</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATAmount_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATDeferred_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATExpense_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATGoodsType_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATDocumentType_RU</Name>
			<Label>@GLS110908</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATDocumentType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorInformation_IN</Name>
			<Label>@SYS71494</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorLocation_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorInvoiceLines</Name>
			<Label>@SYS27199</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchaseLineLineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorRetention</Name>
			<Label>@PSA11209</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PSAReleaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PSARetainageAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VSSTax1099</Name>
			<Label>@SYS24226</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tax1099Fields</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099StateAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WithholdingTax</Name>
			<Label>@SYS7372</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdBaseCur_TH</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WithholdingTax_IN</Name>
			<Label>@SYS33817</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TDSGroup_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSGroup_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetReservationLine_PSN</Name>
			<Label>@Budgeting_BudgetReservationPS:BudgetReservation</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestCountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<Label>@SYS17952</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AdvanceApplicationId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AgreementLine_PSN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AlcoholLicenseSeriesNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholLicenseSeriesNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessableValue_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CompanyLocation_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionName_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsAddressCountryRegionShortName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CreditNoteDate_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustomsTariffCodeTable_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5100</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendName</ExtendedDataType>
			<GroupPrompt>@SYS22058</GroupPrompt>
			<Label>@SYS22058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceLineDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestCounty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchDiscPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DSA_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<Label>@GLS5341</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExciseAmount_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountExcise_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExciseAmountMST_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountExciseMST_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExciseRecordType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ExciseRecordType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExciseTariffCodes_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5102</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExciseType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ExciseType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExciseValue_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValueExcise_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExternalItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchExternalItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FacturedFully_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FacturedFully_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FacturedQty_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FacturedQty_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GTAServiceCategory_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>GTAServiceCategory_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InterCompanyInventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InternalInvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchInternalInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntrastatDispatchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatDispatchId</ExtendedDataType>
			<FeatureClass>IntrastatDispatchIdToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>IntrastatFulfillmentDate_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatFulfillmentDate_HU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InventDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS54350</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventRefId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventRefTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventRefTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventRefType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventRefType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceGTDId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustFreeInvoiceGTDId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendInvoiceId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPwp</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@PSA3342</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IntrastatCommodity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCommodityId</ExtendedDataType>
			<FeatureClass>IntrastatCommodityToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@SYS7407</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS6928</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS84859</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmountMST_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS84859</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmountTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineAmountTax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLineDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLinePercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LineType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchInvoiceLineType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarkupCode_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCodeVend_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMultiLnDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMultiLnPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemFreeTxtBase</ExtendedDataType>
			<Label>@SYS6303</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NGPCodesTable_FR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NGPCodesTableFRId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NonRecoverablePercent_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@GLS5534</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>numberSequenceGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberSequenceGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OperationType_MX</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendorOperationType_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigCountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemOrigCountryRegionId</ExtendedDataType>
			<FeatureClass>ItemOrigCountryRegionIdToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigPurchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdOrig</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigStateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemOrigStateId</ExtendedDataType>
			<FeatureClass>ItemOrigStateIdToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartDelivery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PartDelivery</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQtyPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Port</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatPortId</ExtendedDataType>
			<FeatureClass>IntrastatPortToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchCategory</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PSAReleaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@PSA2725</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PSARetainageAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@PSA2723</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchaseLineLineNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TradeLineNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchCommitmentLine_PSN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SPS1834</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMarkup</ExtendedDataType>
			<Label>@SYS8371</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS11770</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS14578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS22017</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RBOPackageLineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@RET4403</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReadyForPayment</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<Label>@PSA11218</Label>
			<EnumType>NoYesCombo</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonTableRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReasonRefRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefReturnInvoiceTrans_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefReturnInvoiceTrans_W</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RegistrationPostalAddress_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailPackageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPackageId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseCharge_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReverseCharge</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxFormTypes_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesTaxFormTypesRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ServiceCodeTable_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleTax1099Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SettleTax1099Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleTax1099StateAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SettleTax1099StateAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SourceDocumentLineRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticValue_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LtIntrastatStatisticValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatProcId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatProcId</ExtendedDataType>
			<FeatureClass>IntrastatProcToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StockedProduct</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeStockedProduct</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Tax1099Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Tax1099Date</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099Date</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Tax1099Fields</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Tax1099FieldsRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099Num</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099Num</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Tax1099RecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099State</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099State</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Tax1099StateAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099StateAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountMST_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@SYS60764</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxAutogenerated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAutoGenerated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxWithholdBaseCur_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>TH,SA,GB,IE</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdBaseCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdGroup_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>TH,SA,GB,IE,BR</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdItemGroupHeading_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdItemGroupId_TH</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxWithholdLineNum_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdVoucher_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWriteCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWriteCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TCSGroup_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TDSGroup_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransactionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTransactionCodeId</ExtendedDataType>
			<FeatureClass>IntrastatTransactionCodeToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Transport</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTransport</ExtendedDataType>
			<FeatureClass>IntrastatTransportToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATAmount_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@sys79746</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATAmount_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountVAT_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATAmountMST_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountVATMST_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATDeferred_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@GLS5585</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VATDocumentType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchBookVATDocumentType_Invoice_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATExpense_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@GLS5586</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VATGoodsType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VATGoodsType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATValue_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValueVAT_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendDirective_PSN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustVendDirectiveRecId_PSN</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorLocation_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>DEL_IntrastatItemCodeId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetReservationLine_PSN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetReservationLineRecId_PSN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefCommReportTrans_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideSalesTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationOverrideSalesTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FinTag</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FinTagRecId</ExtendedDataType>
			<FeatureClass>PurchaseOrderFinTagFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InvoiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>numberSequenceGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InternalInvoiceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Qty</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QtyPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueSet_VendInvoic</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Ve</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Tax1099FieldsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Tax1099Fields</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceDocumentLine</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdItemGroupHeading_THIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AgreementLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementLine_PSN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendDirective_PSNIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendDirective_PSN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LineTypeAdvanceApplicationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LineType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AdvanceApplicationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchLineInvoice</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OrigPurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchaseLineLineNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceDate</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CurrencyCodeMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendInvoiceTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Category_RU</MapField>
					<MapFieldTo>ProcurementCategory</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension_RU</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Dimension_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscAmount_JP</MapField>
					<MapFieldTo>DiscAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent_JP</MapField>
					<MapFieldTo>DiscPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EmplLineType_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseAmountMST_RU</MapField>
					<MapFieldTo>ExciseAmountMST_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseAmount_RU</MapField>
					<MapFieldTo>ExciseAmount_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseValue_RU</MapField>
					<MapFieldTo>ExciseValue_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExternalItemId_RU</MapField>
					<MapFieldTo>ExternalItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FacturedFully_RU</MapField>
					<MapFieldTo>FacturedFully_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FacturedQty_RU</MapField>
					<MapFieldTo>FacturedQty_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureModule</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntrastatFulfillmentDate_HU</MapField>
					<MapFieldTo>IntrastatFulfillmentDate_HU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventQty</MapField>
					<MapFieldTo>InventQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceNum</MapField>
					<MapFieldTo>InvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmountMST</MapField>
					<MapFieldTo>LineAmountMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmountMST_JP</MapField>
					<MapFieldTo>LineAmountMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmountMST_W</MapField>
					<MapFieldTo>LineAmountMST_W</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum_RU</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineType_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name_JP</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name_RU</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroupId_RU</MapField>
					<MapFieldTo>numberSequenceGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>PriceUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price_RU</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchInternalInvoiceId_RU</MapField>
					<MapFieldTo>InternalInvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>QtyPhysical</MapField>
					<MapFieldTo>QtyPhysical</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefCommReportTrans_RU</MapField>
					<MapFieldTo>RefCommReportTrans_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId_RU</MapField>
					<MapFieldTo>PurchID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchOrigId_JP</MapField>
					<MapFieldTo>OrigPurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchPrice_JP</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDocumentLine</MapField>
					<MapFieldTo>SourceDocumentLine</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StockedProduct</MapField>
					<MapFieldTo>StockedProduct</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmountMST_JP</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmountMST_W</MapField>
					<MapFieldTo>TaxAmountMST_W</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount_JP</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount_RU</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup_RU</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup_RU</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionCode</MapField>
					<MapFieldTo>TransactionCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Unit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Unit_RU</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATAmountMST_RU</MapField>
					<MapFieldTo>VATAmountMST_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATAmount_RU</MapField>
					<MapFieldTo>VATAmount_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATValue_RU</MapField>
					<MapFieldTo>VATValue_RU</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>FormletterJournalTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Category</MapField>
					<MapFieldTo>ProcurementCategory</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InternalJournalId</MapField>
					<MapFieldTo>InternalInvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>InvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroup</MapField>
					<MapFieldTo>numberSequenceGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderId</MapField>
					<MapFieldTo>PurchID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigOrderId</MapField>
					<MapFieldTo>OrigPurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InterCompanyTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InterCompanyInventTransId</MapField>
					<MapFieldTo>InterCompanyInventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefId</MapField>
					<MapFieldTo>InventRefId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefTransId</MapField>
					<MapFieldTo>InventRefTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefType</MapField>
					<MapFieldTo>InventRefType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StockedProduct</MapField>
					<MapFieldTo>StockedProduct</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransQty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>IntrastatTransferMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>IntrastatCommodity</MapField>
					<MapFieldTo>IntrastatCommodity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntrastatExclude</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntrastatTransferMap</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntraUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceId</MapField>
					<MapFieldTo>InvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MarkupPct</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NetWeightByUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NGPCodesTable_FR</MapField>
					<MapFieldTo>NGPCodesTable_FR</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigCountryRegionId</MapField>
					<MapFieldTo>OrigCountryRegionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigState</MapField>
					<MapFieldTo>OrigStateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Port</MapField>
					<MapFieldTo>Port</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatProcId</MapField>
					<MapFieldTo>StatProcId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionCode</MapField>
					<MapFieldTo>TransactionCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Transport</MapField>
					<MapFieldTo>Transport</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Weight</MapField>
					<MapFieldTo>Weight</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>ReasonCodeMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ReasonTableRef</MapField>
					<MapFieldTo>ReasonTableRef</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
					<MapFieldTo>AssessableValue_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
					<MapFieldTo>CompanyLocation_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditNoteDate</MapField>
					<MapFieldTo>CreditNoteDate_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsMaxRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
					<MapFieldTo>CustomsTariffCodeTable_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
					<MapFieldTo>DSA_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
					<MapFieldTo>ExciseRecordType_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
					<MapFieldTo>ExciseTariffCodes_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
					<MapFieldTo>ExciseType_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MaximumRetailPrice</MapField>
					<MapFieldTo>MaximumRetailPrice_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
					<MapFieldTo>SalesTaxFormTypes_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAsPerOriginalInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
					<MapFieldTo>TCSGroup_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
					<MapFieldTo>TDSGroup_IN</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SourceDocumentLineImplementation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceDocumentLine</MapField>
					<MapFieldTo>SourceDocumentLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>VendInvoiceLineMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AdvanceApplicationId</MapField>
					<MapFieldTo>AdvanceApplicationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDisc</MapField>
					<MapFieldTo>LineDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineType</MapField>
					<MapFieldTo>LineType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MultiLnDisc</MapField>
					<MapFieldTo>MultiLnDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>PriceUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProcurementCategory</MapField>
					<MapFieldTo>ProcurementCategory</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PSAReleaseAmount</MapField>
					<MapFieldTo>PSAReleaseAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchID</MapField>
					<MapFieldTo>OrigPurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchMarkup</MapField>
					<MapFieldTo>PurchMarkup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchPrice</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchUnit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDocumentLine</MapField>
					<MapFieldTo>SourceDocumentLine</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TransitDocumentTransactionMap_IN</MappingTable>
			<Connections />
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
					<MapFieldTo>ProcurementCategory</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchQty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchUnit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
					<MapFieldTo>InvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TaxReportDomesticCustVendInvoiceTrans_IT</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceId</MapField>
					<MapFieldTo>InvoiceId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmountCur</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmountMST</MapField>
					<MapFieldTo>LineAmountMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParentRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId</MapField>
					<MapFieldTo>PurchID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Weight</MapField>
					<MapFieldTo>Weight</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AgreementLine_PSN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementLine_PSN</Name>
					<Field>AgreementLine_PSN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AlcoholLicenseTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>AlcoholLicenseTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AlcoholLicenseSeriesNum_RU</Name>
					<SourceEDT>AlcoholLicenseSeriesNum_RU</SourceEDT>
					<Field>AlcoholLicenseSeriesNum_RU</Field>
					<RelatedField>LicenseSeriesNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>LicenseSeriesNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyLocation_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsLocation_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CompanyLocation_IN</Name>
					<Field>CompanyLocation_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>VendCurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceTrans_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefReturnInvoiceTrans_W</Name>
					<Field>RefReturnInvoiceTrans_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustomsTariffCodeTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustomsTariffCodeTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustomsTariffCodeTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomsTariffCodeTable_IN_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustomsTariffCodeTable_IN</Name>
					<Field>CustomsTariffCodeTable_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DeliveryPostalAddress_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryPostalAddress_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceInfoLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ExciseTariffCodes_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ExciseTariffCodes_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ExciseTariffCodes_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ExciseTariffCodes_IN_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExciseTariffCodes_IN</Name>
					<Field>ExciseTariffCodes_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatCommodity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IntrastatCommodity</Name>
					<Field>IntrastatCommodity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatPort</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatPort</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Port</Name>
					<SourceEDT>IntrastatPortId</SourceEDT>
					<Field>Port</Field>
					<RelatedField>PortId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PortIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatStatProc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatStatProc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StatProcId</Name>
					<SourceEDT>IntrastatProcId</SourceEDT>
					<Field>StatProcId</Field>
					<RelatedField>StatProcId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatProcIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatTransactionCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatTransactionCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransactionCode</Name>
					<SourceEDT>IntrastatTransactionCodeId</SourceEDT>
					<Field>TransactionCode</Field>
					<RelatedField>TransactionCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatTransportMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatTransportMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Transport</Name>
					<SourceEDT>IntrastatTransport</SourceEDT>
					<Field>Transport</Field>
					<RelatedField>TransPortCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransPortCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim_InventDimId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventDim_InventDimId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin_InterCompanyInventTran</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin_InterCompanyInventTran</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyInventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InterCompanyInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion_DestCountr</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestCountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>DestCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion_OrigCountr</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion_OrigCountr</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigCountryRegionId</Name>
					<SourceEDT>ItemOrigCountryRegionId</SourceEDT>
					<Field>OrigCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressCountryRegion_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegionTranslation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionName_RU</Name>
					<Field>CountryRegionName_RU</Field>
					<RelatedField>ShortName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MarkupCodeVend</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ModuleType_Extern</Name>
					<RelatedField>ModuleType</RelatedField>
					<ValueStr>MarkupModuleType::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MarkupCode_RU</Name>
					<Field>MarkupCode_RU</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NGPCodesTable_FR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NGPCodesTable_FR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>NGPCodesTable_FR</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NGPCodesTable_FR</Name>
					<Field>NGPCodesTable_FR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>NumberSequenceGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>numberSequenceGroup</Name>
					<SourceEDT>NumberSequenceGroupId</SourceEDT>
					<Field>numberSequenceGroup</Field>
					<RelatedField>numberSequenceGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>groupId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProcurementCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProcurementCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchCommitmentLine_PSN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchCommitmentLine_PSN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchCommitmentLine_PSN</Name>
					<Field>PurchCommitmentLine_PSN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable_OrigPurchId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchTable_OrigPurchId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigPurchId</Name>
					<SourceEDT>PurchIdOrig</SourceEDT>
					<Field>OrigPurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable_PurchID</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchID</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>PurchID</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchUnit</Name>
					<Field>PurchUnit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonTableRef</Name>
					<SourceEDT>ReasonRefRecID</SourceEDT>
					<Field>ReasonTableRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RegistrationPostalAddress_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddress_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RegistrationPostalAddress_IN</Name>
					<Field>RegistrationPostalAddress_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailPackageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailPackageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailPackageId</Name>
					<SourceEDT>RetailPackageId</SourceEDT>
					<Field>RetailPackageId</Field>
					<RelatedField>PackageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxFormTypes_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTaxFormTypes_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxFormTypes_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesTaxFormTypes_IN_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxFormTypes_IN</Name>
					<Field>SalesTaxFormTypes_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ServiceCodeTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ServiceCodeTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceCodeTable_IN</Name>
					<Field>ServiceCodeTable_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SourceDocumentLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SourceDocumentLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentLine</Name>
					<Field>SourceDocumentLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>SourceRelationType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Tax1099Detail</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>Tax1099BoxDetail</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Tax1099Detail</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Tax1099Detail_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099RecId</Name>
					<Field>Tax1099RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Tax1099Fields</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Tax1099Fields</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Tax1099Fields</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099Fields</Name>
					<Field>Tax1099Fields</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Tax1099State</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Tax1099State</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099State</Name>
					<SourceEDT>Tax1099State</SourceEDT>
					<Field>Tax1099State</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdGroup_TH</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TaxWithholdGroup_TH</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTCS_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeading_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeading_1_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TCSGroup_IN</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TCSGroup_IN</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTDS_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeading_2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeading_2_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TDSGroup_IN</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TDSGroup_IN</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdItemGroupHeading_TH</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdItemGroupHeading_TH</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdItemGroupHeading_TH</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdItemGroupHeading_TH_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdItemGroupHeading_TH</Name>
					<Field>TaxWithholdItemGroupHeading_TH</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendDirective_PSN</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendDirective_PSN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendDirective_PSN</Name>
					<Field>VendDirective_PSN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126047</EntityRelationshipRole>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceJour_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchID</Name>
					<Field>PurchID</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceId</Name>
					<Field>InvoiceId</Field>
					<RelatedField>InvoiceId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceDate</Name>
					<Field>InvoiceDate</Field>
					<RelatedField>InvoiceDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>numberSequenceGroup</Name>
					<Field>numberSequenceGroup</Field>
					<RelatedField>numberSequenceGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalInvoiceId</Name>
					<Field>InternalInvoiceId</Field>
					<RelatedField>InternalInvoiceId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceJourAdvanceApplication</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AdvanceApplicationId</Name>
					<Field>AdvanceApplicationId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendorLocation_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsLocation_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsLocation_1_VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorLocation_IN</Name>
					<Field>VendorLocation_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetReservationLine_PSN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetReservationLine_PSN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetReservationLine_PSN</Name>
					<Field>BudgetReservationLine_PSN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CommReportTransItem_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CommReportTransItem_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefCommReportTrans_RU</Name>
					<Field>RefCommReportTrans_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FinTag</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FinTag</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FinTag</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FinTag</Name>
					<Field>FinTag</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>