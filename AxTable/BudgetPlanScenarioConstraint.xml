<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanScenarioConstraint</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanScenarioConstraint extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>BudgetPlanScenarioConstraint</c> table; if not,
    /// an error message is displayed.
    /// </summary>
    /// <param name="_budgetPlanScenarioConstraintRecId">
    /// The record ID of the <c>BudgetPlanScenarioConstraint</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(BudgetPlanScenarioConstraintRecId _budgetPlanScenarioConstraintRecId)
    {
        boolean doesExist = true;

        if (!BudgetPlanScenarioConstraint::exist(_budgetPlanScenarioConstraintRecId))
        {
            doesExist = checkFailed(strFmt(BudgetPlanScenarioConstraint::txtNotExist(), _budgetPlanScenarioConstraintRecId));
        }

        return doesExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>BudgetPlanScenarioConstraint</c> table exists.
    /// </summary>
    /// <param name='_budgetPlanScenarioConstraintRecId'>
    /// The record ID of the <c>BudgetPlanScenarioConstraint</c> record.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(BudgetPlanScenarioConstraintRecId _budgetPlanScenarioConstraintRecId)
    {
        return (BudgetPlanScenarioConstraint::find(_budgetPlanScenarioConstraintRecId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanScenarioConstraint</c> table.
    /// </summary>
    /// <param name='_budgetPlanScenarioConstraintRecId'>
    /// The record ID of the <c>BudgetPlanScenarioConstraint</c> record.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanScenarioConstraint</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanScenarioConstraint find(
        BudgetPlanScenarioConstraintRecId   _budgetPlanScenarioConstraintRecId,
        boolean                             _forUpdate = false,
        ConcurrencyModel                    _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanScenarioConstraint budgetPlanScenarioConstraint;

        if (_budgetPlanScenarioConstraintRecId)
        {
            budgetPlanScenarioConstraint.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                 budgetPlanScenarioConstraint.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanScenarioConstraint
                where budgetPlanScenarioConstraint.RecId == _budgetPlanScenarioConstraintRecId;
        }

        return budgetPlanScenarioConstraint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByScenarioAccessLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanScenarioConstraint</c> table on the basis of budget plan scenario and access level.
    /// </summary>
    /// <param name="_budgetPlanScenarioRecId">
    /// The record ID of the <c>BudgetPlanScenario</c> record.
    /// </param>
    /// <param name="_budgetPlanScenarioAccessLevel">
    /// The <c>AccessLevel</c> field of <c>BudgetPlanScenarioConstraint</c> table.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanScenarioConstraint</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanScenarioConstraint findByScenarioAccessLevel(
        BudgetPlanScenarioRecId         _budgetPlanScenarioRecId,
        BudgetPlanScenarioAccessLevel   _budgetPlanScenarioAccessLevel)
    {
        BudgetPlanScenarioConstraint budgetPlanScenarioConstraintLocal;

        if (_budgetPlanScenarioRecId)
        {
            select firstonly budgetPlanScenarioConstraintLocal
                where budgetPlanScenarioConstraintLocal.BudgetPlanScenario == _budgetPlanScenarioRecId
                    && budgetPlanScenarioConstraintLocal.AccessLevel == _budgetPlanScenarioAccessLevel;
        }

        return budgetPlanScenarioConstraintLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS150055</DeveloperDocumentation>
	<Label>@GLS150052</Label>
	<SingularLabel>@GLS150129</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>BudgetPlanScenario</TitleField1>
	<TitleField2>BudgetPlanningWorkflowStage</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>BudgetPlanScenarioConstraintIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Budget</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningWorkflowStage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanScenario</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccessLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningWorkflowStage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanScenario</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccessLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccessLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetPlanScenarioAccessLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanningWorkflowStage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanningWorkflowStageRecId</ExtendedDataType>
			<Label>@GLS150338</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanScenario</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanScenarioRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetPlanScenarioConstraintIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetPlanScenario</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetPlanningWorkflowStage</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanningWorkflowStage</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanningWorkflowStage</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanningWorkflowStage</Name>
					<Field>BudgetPlanningWorkflowStage</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanScenario</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>BudgetPlanScenario</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanScenario</Name>
					<Field>BudgetPlanScenario</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>