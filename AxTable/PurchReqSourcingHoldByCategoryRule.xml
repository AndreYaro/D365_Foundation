<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqSourcingHoldByCategoryRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqSourcingHoldByCategoryRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryDescription</Name>
				<Source><![CDATA[
    display Description categoryDescription()
    {
        return EcoResCategoryTranslation::find(EcoResCategory::find(this.ProcurementCategory).RecId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates records in the <c>PurchReqSourcingHoldByCategoryRule</c> from specified Category.
    /// </summary>
    /// <param name="_purchReqSourcingHoldByCategoryRuleDS">
    ///     The <c>PurchReqSourcingHoldByCategoryRule</c> data source from <c>PurchReqSourcingHoldByCategoryRule</c> form.
    /// </param>
    public void createFromCategory(FormDataSource _purchReqSourcingHoldByCategoryRuleDS)
    {
        EcoResCategory category;

        category = EcoResCategory::find(this.ProcurementCategory);

        if (!category.isLeaf())
        {
            _purchReqSourcingHoldByCategoryRuleDS.delete();
            PurchReqSourcingHoldByCategoryRule::addFromCategory(this.PurchReqSourcingHoldRule,
                                                                this.PurchReqSourcingItemType,
                                                                category);
            _purchReqSourcingHoldByCategoryRuleDS.executeQuery();
        }
        else
        {
            ttsbegin;
            this.selectForUpdate();
            this.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFromCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the leaf nodes for a category node.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRule">
    ///    The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_ecoResCategory">
    ///    A record of the <c>EcoResCategory</c> table.
    /// </param>
    public static void addFromCategory(RefRecId                 _purchReqSourcingHoldRule,
                                       PurchReqLineType         _purchReqSourcingItemType,
                                       EcoResCategory           _ecoResCategory)
    {
        EcoResCategory                      ecoResCategory;
        PurchReqSourcingHoldByCategoryRule  purchReqSourcingHoldByCategoryRule;

        ecoResCategory = _ecoResCategory.getDescendants(false,true);

        ttsbegin;

        while (ecoResCategory)
        {
            if (!PurchReqSourcingHoldByCategoryRule::existsByCategory(_purchReqSourcingHoldRule,
                                                                      _purchReqSourcingItemType,
                                                                      ecoResCategory))
            {
                purchReqSourcingHoldByCategoryRule.selectForUpdate(false);
                purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule = _purchReqSourcingHoldRule;
                purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType = _purchReqSourcingItemType;
                purchReqSourcingHoldByCategoryRule.ProcurementCategory      = ecoResCategory.RecId;
                purchReqSourcingHoldByCategoryRule.insert();
            }

            next ecoResCategory;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether the specified record exists in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldByCategoryRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _purchReqSourcingHoldByCategoryRuleId)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule = null;

        select firstonly recId from purchReqSourcingHoldByCategoryRule where purchReqSourcingHoldByCategoryRule.RecId == _purchReqSourcingHoldByCategoryRuleId;

        return _purchReqSourcingHoldByCategoryRuleId && purchReqSourcingHoldByCategoryRule.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_ecoResCategory">
    ///     A record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule existsByCategory(RefRecId                 _purchReqSourcingHoldRuleId,
                                                                      PurchReqLineType         _purchReqSourcingItemType,
                                                                      EcoResCategory           _ecoResCategory)
    {
        PurchReqSourcingHoldByCategoryRule  purchReqSourcingHoldByCategoryRule;

        select firstonly purchReqSourcingHoldByCategoryRule
        where purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId
           && purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType
           && purchReqSourcingHoldByCategoryRule.ProcurementCategory      == _ecoResCategory.RecId;

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByItemType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule existsByItemType(RefRecId         _purchReqSourcingHoldRuleId,
                                                                      PurchReqLineType _purchReqSourcingItemType)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule;

        select firstonly purchReqSourcingHoldByCategoryRule
        where purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId
           && purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType;

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldByCategoryRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule find(RefRecId _purchReqSourcingHoldByCategoryRuleId, boolean _forUpdate = false)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule = null;

        if (_purchReqSourcingHoldByCategoryRuleId)
        {
            purchReqSourcingHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByCategoryRule where purchReqSourcingHoldByCategoryRule.RecId == _purchReqSourcingHoldByCategoryRuleId;
        }

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_procurementCategory">
    ///     The record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule findByCategory(RefRecId         _purchReqSourcingHoldRuleId,
                                                                    PurchReqLineType _purchReqSourcingItemType,
                                                                    RefRecId         _procurementCategory,
                                                                    boolean          _forUpdate = false)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule = null;

        if (_purchReqSourcingHoldRuleId)
        {
            purchReqSourcingHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByCategoryRule
             where purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId
                && purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType
                && purchReqSourcingHoldByCategoryRule.ProcurementCategory      == _procurementCategory;
        }

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHoldRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule findByHoldRule(RefRecId         _purchReqSourcingHoldRuleId,
                                                                    PurchReqLineType _purchReqSourcingItemType,
                                                                    boolean          _forUpdate = false)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule = null;

        if (_purchReqSourcingHoldRuleId)
        {
            purchReqSourcingHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByCategoryRule
             where purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId
                && purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType;
        }

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHoldRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByCategoryRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByCategoryRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByCategoryRule findByHoldRuleId(RefRecId  _purchReqSourcingHoldRuleId,
                                                                      boolean   _forUpdate = false)
    {
        PurchReqSourcingHoldByCategoryRule purchReqSourcingHoldByCategoryRule = null;

        if (_purchReqSourcingHoldRuleId)
        {
            purchReqSourcingHoldByCategoryRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByCategoryRule
             where purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId;
        }

        return purchReqSourcingHoldByCategoryRule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS315405</DeveloperDocumentation>
	<Label>@SYS300524</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PurchReqSourcingHoldRule</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>ProcurementCategoryIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PurchReqSourcingHoldByVendorRule</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PurchReqSourcingHoldByVendorRule</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HoldByCategoryRule</Name>
			<Label>@SYS300599</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchReqSourcingHoldRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PurchReqSourcingItemType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS300596</Label>
			<EnumType>PurchReqLineType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProcurementCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchReqSourcingHoldRule</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchReqSourcingItemType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProcurementCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategory_PurchReqSourcingHoldByCategoryRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchReqSourcingHoldRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchReqSourcingHoldRule</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchReqSourcingHoldRule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchReqSourcingHoldRule_PurchReqSourcingHoldByCategoryRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchReqSourcingHoldRule</Name>
					<Field>PurchReqSourcingHoldRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>