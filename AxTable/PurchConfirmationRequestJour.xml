<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchConfirmationRequestJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchConfirmationRequestJour extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>CompanyInfo</c> record that is associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findRecId(this.LegalEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        PurchTableVersion purchTableVersion;

        //Remove the associated version, if it is a proforma version
        ttsbegin;

        delete_from purchTableVersion
            where   purchTableVersion.Proforma  == NoYes::Yes
            &&      purchTableVersion.RecId     == this.PurchTableVersion;

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the related <c>LogisticsPostalAddress</c> table record if the current journal entry has a value in the <c>DeliveryPostalAddress</c> field.
    ///     Otherwise finds the related <c>LogisticsPostalAddress</c> table record to the <c>VendTable</c> table record.
    /// </summary>
    /// <returns>
    ///     The related Logistics Postal Address record of the current journal entry.
    /// </returns>
    public LogisticsPostalAddress deliveryAddress()
    {
        return (this.DeliveryPostalAddress ? LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress) : this.vendTable().postalAddress());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchaseOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PurchId</c> field value related to the <c>PurchTableVersion</c> of the current record.
    /// </summary>
    /// <returns>
    /// The <c>PurchId</c> field value.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    public display PurchId getPurchaseOrderId()
    {
        return PurchTableVersion::find(this.PurchTableVersion).PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchPrepayTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>IsPrepay</c> and <c>AmountPrepay</c> fields of the <c>PurchConfirmationRequestJour</c>
    /// table from the <c>PurchPrepayTable</c> table by checking the existence of the records in the
    /// <c>PurchPrepayTable</c> table and by calling the <c>amountPrepay</c> method of the
    /// <c>PurchPrepayTable</c> table to calculate the prepay amount.
    /// </summary>
    /// <param name="_purchPrepayTable">
    /// The <c>PurchPrepayTable</c> record.
    /// </param>
    public void initFromPurchPrepayTable(PurchPrepayTable _purchPrepayTable)
    {
        this.IsPrepay       = (_purchPrepayTable ? NoYes::Yes: NoYes::No);

        if (this.IsPrepay == NoYes::Yes)
        {
            this.AmountPrepay   = _purchPrepayTable.amountPrepay();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the record based on a <c>PurchTable</c> record.
    /// </summary>
    /// <param name="_purchTable">
    /// A <c>PurchTable</c> record to initialize based on.
    /// </param>
    public void  initFromPurchTable(PurchTable _purchTable)
    {
        this.LegalEntity            = _purchTable.companyInfo().RecId;
        this.OrderAccount           = _purchTable.OrderAccount;
        this.DeliveryName           = _purchTable.DeliveryName;

        this.DeliveryPostalAddress  = _purchTable.DeliveryPostalAddress;

        this.Qty                    = 0;
        this.Volume                 = 0;
        this.Weight                 = 0;
        this.SumLineDisc            = 0;
        this.SumMarkup              = 0;
        this.OrderBalance           = 0;
        this.EndDisc                = 0;
        this.RoundOff               = 0;

        this.Triangulation          = Currency::triangulation(_purchTable.CurrencyCode,this.DocumentDate);
        this.ExchRate               = ExchangeRateHelper::exchRate(_purchTable.CurrencyCode, this.DocumentDate);
        this.ExchRateSecondary      = ExchangeRateHelper::exchRateSecond(_purchTable.CurrencyCode, this.DocumentDate);

        this.initFromVendTable(_purchTable.vendTable_OrderAccount());
        // initializes the prepay fields from PurchPrepayTable table methods
        this.initFromPurchPrepayTable(PurchPrepayTable::findPurchId(this.getPurchaseOrderId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>AmountPurchaseOrder</c> field of the <c>PurchConfirmationRequestJour</c>
    /// table based on a <c>VendTable</c> record.
    /// </summary>
    /// <param name="_vendTable">
    /// A <c>VendTable</c> record to initialize based on.
    /// </param>
    public void  initFromVendTable(VendTable _vendTable)
    {
        this.AmountPurchaseOrder         = _vendTable.PurchAmountPurchaseOrder;
        this.VendVendorCollaborationType = _vendTable.VendVendorCollaborationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates and displays the netAmount of the current journal record.
    /// </summary>
    /// <returns>
    ///     The current netAmount of the journal record.
    /// </returns>
    public display AmountCurNet netAmount()
    {
        return this.OrderBalance - this.EndDisc + this.SumMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printJournal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Prints the Purchase Order Confirmation Request journal document.
    /// </summary>
    /// <param name="_purchConfirmationRequestPrint">
    ///     The instance of the PurchConfirmationRequestPrint class
    /// </param>
    /// <param name="_journalList">
    ///     The instance of the RecordSortedList class for the current journal.
    /// </param>
    public void  printJournal(PurchConfirmationRequestPrint _purchConfirmationRequestPrint = null, RecordSortedList _journalList = null)
    {
        Args            parameters = new Args();
        MenuFunction    purchConfirmationRequestMenuRun;

        purchConfirmationRequestMenuRun = PurchConfirmationRequestJour::reportMenuToRun();
        parameters.caller(_purchConfirmationRequestPrint);
        if (_journalList)
        {
            parameters.object(_journalList);
        }
        else
        {
            parameters.record(this);
        }

        purchConfirmationRequestMenuRun.run(parameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PurchTable</c> record related to the current record.
    /// </summary>
    /// <param name="_update">
    /// Indicates if record is selected for update; default is false.
    /// </param>
    /// <returns>
    /// The <c>PurchTable</c> record.
    /// </returns>
    public PurchTable purchTable(boolean _update = false)
    {
        return PurchTable::find(this.getPurchaseOrderId(), _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTableHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the related <c>PurchTableHistory</c> record.
    /// </summary>
    /// <returns>
    /// The related record.
    /// </returns>
    public PurchTableHistory purchTableHistory()
    {
        PurchTableHistory purchTableHistory;
        PurchTableVersion purchTableVersion = PurchTableVersion::find(this.PurchTableVersion);

        if (purchTableVersion.IsArchived)
        {
            purchTableHistory = PurchTableHistory::find(purchTableVersion.PurchId, purchTableVersion.VersionDateTime);
        }
        else
        {
            purchTableHistory.initFromPurchTable(this.purchTable());
        }

        return purchTableHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryTaxJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a query where the <c>TaxJournalTrans</c> table is specified as a data source
    ///     and updates the related record if needed.
    /// </summary>
    /// <param name="_update">
    ///     True if the TaxJournalTrans table is needed for update.
    /// </param>
    /// <returns>
    ///     A query with the required actions on the TaxJournalTrans table.
    /// </returns>
    public Query queryTaxJournalTrans(boolean _update = false)
    {
        DictRelation    dictRelation;
        DictField       externdictField;
        DictField       dictField;
        Query           query = new Query();
        Counter         c;

        query.addDataSource(tableNum(TaxJournalTrans));

        dictRelation = new DictRelation(tableNum(TaxJournalTrans));
        dictRelation.loadTableRelation(this.TableId);

        if (dictRelation.lines())
        {
            for (c=1; c <= dictRelation.lines(); c++)
            {
                externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
                dictField   = new DictField(tableNum(TaxJournalTrans),dictRelation.lineTableValue(c));
                query.dataSourceTable(tableNum(TaxJournalTrans)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
            }
        }
        query.dataSourceTable(tableNum(TaxJournalTrans)).update(_update);
        query.dataSourceTable(tableNum(TaxJournalTrans)).addRange(fieldNum(TaxJournalTrans, TaxOrigin)).value(strFmt('!%1',queryValue(TaxOrigin::TaxReversed)));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryTmpTaxWorkTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a query where the <c>TmpTaxWorkTrans</c> table is specified as a data source
    ///     and updates the related record if needed.
    /// </summary>
    /// <param name="_update">
    ///     True if the TmpTaxWorkTrans table is needed for update.
    /// </param>
    /// <returns>
    ///     A query with the required actions on the TmpTaxWorkTrans table.
    /// </returns>
    public Query queryTmpTaxWorkTrans(boolean _update = false)
    {
        Query           query = new Query();

        query.addDataSource(tableNum(TmpTaxWorkTrans));

        query.dataSourceTable(tableNum(TmpTaxWorkTrans)).update(_update);
        query.dataSourceTable(tableNum(TmpTaxWorkTrans)).addRange(fieldNum(TmpTaxWorkTrans, TaxOrigin)).value(strFmt('!%1',queryValue(TaxOrigin::TaxReversed)));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>DocumentNumber</c> field on the record.
    /// The <c>DocumentNumber</c> field is constructed as the PurchId of the related purchase order plus a counter showing the version number.
    /// </summary>
    /// <param name="_source">
    /// The specified purchase order.
    /// </param>
    public void  setDocNum(PurchTable _source)
    {
        this.DocumentNumber = strFmt('%1-%2', this.getPurchaseOrderId(), PurchConfirmationRequestJour::numberOfPurchaseOrderVersions(_source));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxableBalance</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the tax balance amount related to the current record.
    /// </summary>
    /// <param name="_tmpTaxWorkTrans">
    ///     The cursor of the temporary <c>TmpTaxWorkTrans</c> table.
    /// </param>
    /// <returns>
    ///     The value of the tax amount.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display TaxTaxableAmountCur taxableBalance(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        TaxJournalTrans taxJournalTrans;
        TmpTaxWorkTrans tmpTaxWorkTrans;
        QueryRun        queryRun;
        TaxBaseCur      taxBaseCur;
        TaxBaseCur      sourceBaseAmountCur;
        TaxExemptTax    taxExemptTax;

        if (_tmpTaxWorkTrans)
        {
            queryRun = new QueryRun(this.queryTmpTaxWorkTrans());
            queryRun.setCursor(_tmpTaxWorkTrans);
        }
        else
        {
            queryRun = new QueryRun(this.queryTaxJournalTrans());
        }
        while (queryRun.next())
        {
            if (_tmpTaxWorkTrans)
            {
                tmpTaxWorkTrans = queryRun.get(tableNum(TmpTaxWorkTrans));
                if (tmpTaxWorkTrans)
                {
                    taxExemptTax        = tmpTaxWorkTrans.ExemptTax;
                    sourceBaseAmountCur = tmpTaxWorkTrans.SourceBaseAmountCur;
                }
            }
            else
            {
                taxJournalTrans = queryRun.get(tableNum(TaxJournalTrans));
                if (taxJournalTrans)
                {
                    taxExemptTax        = taxJournalTrans.ExemptTax;
                    sourceBaseAmountCur = taxJournalTrans.SourceBaseAmountCur;
                }
            }

            if (taxExemptTax == NoYes::No)
            {
                taxBaseCur += sourceBaseAmountCur;
            }
        }

        return taxBaseCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the related <c>VendTable</c> table record.
    /// </summary>
    /// <param name="_update">
    ///     A <c>Boolean</c> value indicating whether to select the record for update.
    /// </param>
    /// <returns>
    ///     A record of the vendor table related to the current order account.
    /// </returns>
    public VendTable vendTable(boolean _update = false)
    {
        return VendTable::find(this.OrderAccount, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a <c>PurchConfirmationRequestJour</c> record exists for the given purchase order.
    /// </summary>
    /// <param name="_purchId">
    /// The purchase order Id.
    /// </param>
    /// <param name="_purchDataAreaId">
    /// The purchDataAreaId of the current Purchase Order.
    /// </param>
    /// <returns>
    /// True if a record exists; Otherwise false.
    /// </returns>
    public static boolean exist(PurchId _purchId, DataAreaId _purchDataAreaId)
    {
        PurchTableVersion            purchTableVersion;
        PurchConfirmationRequestJour purchConfirmationRequestJour;

        if (!_purchId || !_purchDataAreaId)
        {
            return false;
        }

        select firstOnly RecId from purchConfirmationRequestJour
            exists join TableId from purchTableVersion
        where   purchConfirmationRequestJour.PurchTableVersion == purchTableVersion.RecId
            &&  purchTableVersion.PurchIdDataAreaId            == _purchDataAreaId
            &&  purchTableVersion.PurchId                      == _purchId;

        return purchConfirmationRequestJour.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>PurchConfirmationRequestJour</c> record with specific RecId.
    /// </summary>
    /// <param name = "_recId">
    /// Id of the record.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// <c>PurchConfirmationRequestJour</c> record.
    /// </returns>
    internal static PurchConfirmationRequestJour find(RecId _recId, boolean _forUpdate = false)
    {
        PurchConfirmationRequestJour purchConfirmationRequestJour;

        if (_forUpdate)
        {
            purchConfirmationRequestJour.selectForUpdate(true);
        }

        select firstonly purchConfirmationRequestJour
            where purchConfirmationRequestJour.RecId == _recId;

        return purchConfirmationRequestJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfPurchaseOrderVersions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number of <c>PurchTableVersion</c> records related to the PurchId of the current record.
    /// </summary>
    /// <param name="_purchTable">
    /// The related purchase order.
    /// </param>
    /// <returns>
    /// The number of <c>PurchTableVersion</c> records which have same PurchId as the purchase order related to the current record.
    /// </returns>
    private static NumberOfRecords numberOfPurchaseOrderVersions(PurchTable _purchTable)
    {
        PurchTableVersion purchTableVersion;

        select count (RecId) from purchTableVersion
            where purchTableVersion.PurchId           == _purchTable.PurchId
            &&    purchTableVersion.PurchIdDataAreaId == _purchTable.dataAreaId;

        return purchTableVersion.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportMenuToRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the menu function to call to run the purchase order confirmation request report.
    /// </summary>
    /// <returns>
    /// The <c>MenuFunction</c> object that corresponds to the report to run.
    /// </returns>
    /// <remarks>
    /// This method is used to find the report menu. It is useful for customization of reports.
    /// </remarks>
    public static MenuFunction reportMenuToRun()
    {
        return new MenuFunction(menuitemOutputStr(PurchConfirmationRequest), MenuItemType::Output);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS4004820</DeveloperDocumentation>
	<FormRef>VendConfirmationRequestJournal</FormRef>
	<Label>@SYS4004797</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DocumentNumber</TitleField1>
	<TitleField2>OrderAccount</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PurchTableVersion</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchTableVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS9362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPurchaseOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterCompanyPosted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchTableVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumLineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Triangulation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SumLineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPurchaseOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Triangulation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateSecondary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Data</Name>
			<Label>@SYS7403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Intercompany</Name>
			<Label>@SYS74106</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterCompanyPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prepay</Name>
			<Label>@SYS183647</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPrepay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Purchase</Name>
			<Label>@SYS9283</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@SYS9455</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendVendorCollaborationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountPrepay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AmountPurchaseOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchAmountPurchaseOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendName</ExtendedDataType>
			<Label>@SYS22058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchaseOrderId</ExtendedDataType>
			<Label>@SYS4194</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchEndDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRateSecondary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchrateSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InterCompanyPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPrepay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS183649</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LegalEntity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OrderBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchTableVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchOrderedQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundOff</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RoundOff</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumLineDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchSumLineDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumPurch</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<Label>@SYS5878</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Triangulation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EUROTriangulation</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Volume</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendVendorCollaborationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendVendorCollaborationType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DocumentNumberInLE</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchTableVersion</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchTableVersion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendAccountMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Num</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>FormletterJournal</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDisc</MapField>
					<MapFieldTo>EndDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
					<MapFieldTo>ExchRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchrateSecondary</MapField>
					<MapFieldTo>ExchRateSecondary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InternalJournalId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RoundOff</MapField>
					<MapFieldTo>RoundOff</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Triangulation</MapField>
					<MapFieldTo>Triangulation</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTableVersion</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>PurchTableVersion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchTableVersion</Name>
					<Field>PurchTableVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderAccount</Name>
					<Field>OrderAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>