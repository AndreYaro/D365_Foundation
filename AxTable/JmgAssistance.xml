<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgAssistance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgAssistance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assistantName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the name of the assistant.
    /// </summary>
    /// <returns>
    /// The name of the assistant.
    /// </returns>
    display JmgPersonName assistantName()
    {
        return HcmWorker::worker2Name(this.WorkerAssistant);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pilotName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the name of the pilot.
    /// </summary>
    /// <returns>
    /// The name of the pilot.
    /// </returns>
    display JmgPersonName pilotName()
    {
        return HcmWorker::worker2Name(this.WorkerPilot);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateAssistance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets all the relations on a given assistant.
    /// </summary>
    /// <param name="termreg">
    /// A <c>Termreg</c> record that is issued when an employee registers as an assistant.
    /// </param>
    /// <remarks>
    /// This method deletes all the assistance records where an employee is both an assistant and a pilot,
    /// as well as all records where the current pilot of the employee is an assistant. This is done as
    /// general maintenance of the records.After that it finds all the <c>jmgAssistance</c> records that
    /// corresponds to the pilot and assistant of the <c>Termreg</c> record, and activates them.
    /// </remarks>
    static void activateAssistance(JmgTermReg  termreg)
    {
        // SaveTeams : Reset all relations on this co-assistant
        JmgAssistance   jmgAssistance;

        if (termreg.RegType                     != JmgTermRegType::TeamStart)
            return;

        delete_from jmgAssistance
                where jmgAssistance.WorkerAssistant == termreg.Worker       ||
                      jmgAssistance.WorkerPilot     == termreg.Worker;

        if (termreg.WorkerPilot)
        {
            delete_from jmgAssistance
                where jmgAssistance.WorkerAssistant == termreg.WorkerPilot;
        }

        if (termreg.WrkCtrIdPilot)
        {
            delete_from jmgAssistance
                where jmgAssistance.WrkCtrIdPilot == termreg.WrkCtrIdPilot;
        }

        select firstonly forupdate jmgAssistance
                where jmgAssistance.WorkerAssistant == termreg.Worker           &&
                      (jmgAssistance.WorkerPilot    == termreg.WorkerPilot      ||
                       jmgAssistance.WrkCtrIdPilot  == termreg.WrkCtrIdPilot)   &&
                      jmgAssistance.Active          == NoYes::Yes;

        jmgAssistance.WorkerAssistant   = termreg.Worker;
        jmgAssistance.WorkerPilot       = termreg.WorkerPilot;
        jmgAssistance.WrkCtrIdPilot     = termreg.WrkCtrIdPilot;
        jmgAssistance.Active            = NoYes::Yes;
        jmgAssistance.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deactivateAssistance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deactivates all the team relations on a given assistant.
    /// </summary>
    /// <param name="termreg">
    /// A <c>Termreg</c> record that is issued when an employee stops as an assistant by registering on
    /// something else.
    /// </param>
    /// <param name="regOrigActive">
    /// <c>NoYes</c> enumeration value that indicates whether originally active registrations should be
    /// deactivated.
    /// </param>
    /// <remarks>
    /// This method finds all the <c>jmgAssistance</c> records that correspond to the pilot and assistant
    /// of the <c>Termreg</c> record and deactivates them.
    /// </remarks>
    static void deactivateAssistance(JmgTermReg  termreg, boolean regOrigActive)
    {
        // SaveTeams : When StopTeam is inserted, deactivate team relation.
        JmgAssistance   jmgAssistance;

        if ((termreg.RegType    == JmgTermRegType::TeamStart)   &&
            (termreg.JobActive  == NoYes::No)                   &&
            (regOrigActive))
        {
            select forupdate firstonly jmgAssistance
                where jmgAssistance.WorkerAssistant == termreg.Worker           &&
                      (jmgAssistance.WorkerPilot    == termreg.WorkerPilot      ||
                       jmgAssistance.WrkCtrIdPilot  == termreg.WrkCtrIdPilot)   &&
                      jmgAssistance.Active          == NoYes::Yes;
            if (jmgAssistance)
            {
                jmgAssistance.Active    = NoYes::No;
                jmgAssistance.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgRegistrationEmployees</ConfigurationKey>
	<DeveloperDocumentation>@SYS317247</DeveloperDocumentation>
	<Label>@SYS38408</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>WorkerPilot</TitleField1>
	<TitleField2>Active</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>WorkerPilotIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkerPilot</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerAssistant</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Employee</Name>
			<Label>@SYS4705</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkerPilot</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerAssistant</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Properties</Name>
			<Label>@SYS10344</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrIdPilot</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24676</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerAssistant</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWorkerRecId</ExtendedDataType>
			<Label>@SYS38408</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerPilot</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWorkerRecId_JobPilot</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WrkCtrIdPilot</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWrkCtrIdPilot</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkerAssistantIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkerAssistant</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkerPilotIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkerPilot</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WrkCtrTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WrkCtrIdPilot</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorkerAssistant</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_JmgAssistance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerAssistant</Name>
					<Field>WorkerAssistant</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorkerPilot</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_1_JmgAssistance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerPilot</Name>
					<Field>WorkerPilot</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WrkCtrTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>JmgAssistance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WrkCtrIdPilot</Name>
					<Field>WrkCtrIdPilot</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsIndividualResource_Extern</Name>
					<RelatedField>IsIndividualResource</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>