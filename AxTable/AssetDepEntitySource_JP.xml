<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepEntitySource_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetDepEntitySource_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>assetDepEntitySource</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>assetDepEntitySource</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>assetDepEntitySource</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetDepEntitySource_JP find(
        RefRecId            _recId,
        boolean             _forupdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        AssetDepEntitySource_JP   assetDepEntitySource;

        if (_recId)
        {
            assetDepEntitySource.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetDepEntitySource.concurrencyModel(_concurrencyModel);
            }

            select firstonly assetDepEntitySource
                where assetDepEntitySource.RecId == _recId;
        }

        return assetDepEntitySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the specified record in the <C>assetDepEntitySource</C> table.
    /// </summary>
    /// <param name="_assetDepEntitySourceImplementation">
    /// A record of the source.
    /// </param>
    /// <returns>
    /// A record in the <c>assetDepEntitySource</c> table.
    /// </returns>
    public static AssetDepEntitySource_JP findOrCreate(AssetDepEntitySourceImplementation_JP _assetDepEntitySourceImplementation)
    {
        AssetDepEntitySource_JP                 assetDepEntitySource;
        AssetDepEntitySourceImplementation_JP   assetDepEntitySourceImplementationLoc;

        if (_assetDepEntitySourceImplementation.EntitySource)
        {
            assetDepEntitySource = AssetDepEntitySource_JP::find(_assetDepEntitySourceImplementation.EntitySource);
        }

        if (assetDepEntitySource.RecId == 0 && _assetDepEntitySourceImplementation.RecId != 0)
        {
            ttsBegin;

            assetDepEntitySource.SourceRelationType = _assetDepEntitySourceImplementation.TableId;
            assetDepEntitySource.insert();

            if (_assetDepEntitySourceImplementation.selectForUpdate())
            {
                _assetDepEntitySourceImplementation.EntitySource = assetDepEntitySource.RecId;
                _assetDepEntitySourceImplementation.update();
            }
            else
            {
                assetDepEntitySourceImplementationLoc = _assetDepEntitySourceImplementation.data();
                select forUpdate firstOnly assetDepEntitySourceImplementationLoc
                    where assetDepEntitySourceImplementationLoc.RecId == _assetDepEntitySourceImplementation.RecId;

                assetDepEntitySourceImplementationLoc.EntitySource = assetDepEntitySource.RecId;
                assetDepEntitySourceImplementationLoc.update();
                _assetDepEntitySourceImplementation.data(assetDepEntitySourceImplementationLoc);
            }

            ttsCommit;
        }

        return assetDepEntitySource;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4881441</DeveloperDocumentation>
	<TableGroup>Group</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>FixedAssets</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceRelationType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Label>@SYS2720</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>