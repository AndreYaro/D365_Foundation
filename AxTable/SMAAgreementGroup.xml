<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAAgreementGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAAgreementGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>serviceLevelAgreementId</Name>
				<Source><![CDATA[
        public SMAServiceLevelAgreementId serviceLevelAgreementId()
    {
        SMAServiceLevelAgreementTable   slaTable;
        SMAServiceLevelAgreementId      slaId = '';

        if (this.ServiceLevelAgreementId)
        {
            slaTable = SMAServiceLevelAgreementTable::find((this.ServiceLevelAgreementId));

            if (slaTable && slaTable.Suspended == NoYes::No)
            {
                slaId = this.ServiceLevelAgreementId;
            }
        }
        return slaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;
        SMAServiceLevelAgreementTable   serviceLevelAgreement;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldnum(SMAAgreementGroup, ServiceLevelAgreementId):
                    serviceLevelAgreement = SMAServiceLevelAgreementTable::find(this.ServiceLevelAgreementId);
                    if (serviceLevelAgreement && serviceLevelAgreement.Suspended)
                    {
                        // The selected service level agreement is suspended
                        ret = checkFailed("@SYS105661");
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistServiceLevelAgreementId</Name>
				<Source><![CDATA[
        public static boolean checkExistServiceLevelAgreementId(SMAServiceLevelAgreementId  _serviceLevelAgreementId)
    {
        SMAAgreementGroup   agreementGroup;

        select firstonly RecId, ServiceLevelAgreementId from agreementGroup where agreementGroup.ServiceLevelAgreementId == _serviceLevelAgreementId;

        return (agreementGroup.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(SMAAgreementGroupId _agreementGroupId)
    {
        // Find agreement group using agreement group id
        return _agreementGroupId && (select RecId from smaAgreementGroup where smaAgreementGroup.AgreementGroup == _agreementGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static SMAAgreementGroup find(SMAAgreementGroupId _agreementGroupId, boolean _forupdate = false)
    {
        SMAAgreementGroup agreementGroup = null;

        if (_agreementGroupId)
        {
            agreementGroup.selectForUpdate(_forupdate);

            // Find agreement group using agreement group id
            select firstonly agreementGroup where agreementGroup.AgreementGroup == _agreementGroupId;
        }

        return agreementGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122692</DeveloperDocumentation>
	<FormRef>smaagreementgroup</FormRef>
	<Label>@SYS89169</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>AgreementGroup</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>AgreementGroupIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>AgreementGroupIdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAAgreementTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAAgreementTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SMAParameters</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAParameters</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceLevelAgreement</Name>
			<Label>@SYS102596</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgreementGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAAgreementGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceLevelAgreementId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceLevelAgreementId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AgreementGroupIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ServiceLevelAgreement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceLevelAgreementTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceLevelAgreement</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ServiceAgreementGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceLevelAgreementId</Name>
					<Field>ServiceLevelAgreementId</Field>
					<RelatedField>ServiceLevelAgreementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>