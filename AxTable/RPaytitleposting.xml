<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPaytitleposting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPaytitleposting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the modified field event.
    /// </summary>
    /// <param name="_fieldId">
    /// The modified field id.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RPayTitlePosting, AccountType):
                this.LedgerDimension = 0;
                if (this.AccountType == LedgerJournalACType::Ledger)
                {
                    this.DefaultDimension = 0;
                }
                break;

            case fieldnum(RPayTitlePosting, CostTypeCode):
                this.CostTypeRelation = '';
                break;

            case fieldnum(RPayTitlePosting, EmplCode):
                this.EmplRelation = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the ledger account.
    /// </summary>
    /// <param name="_account">
    /// The ledger account.
    /// </param>
    /// <param name="_accountType">
    /// The ledger account type.
    /// </param>
    /// <returns>
    /// The ledger account.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerJournalAC parmAccount(LedgerJournalAC _account = '', LedgerJournalACType _accountType = this.AccountType)
    {
        DimensionAttributeValueCombination  ledgerDimension;
        LedgerJournalAC                     account;

        if (!prmisDefault(_accountType))
        {
            this.AccountType = _accountType;
        }

        // If account has been changed, update the backing ledger dimension value
        if (!prmisDefault(_account))
        {
            if (_account)
            {
                this.LedgerDimension = LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumber(_account, _accountType);
                account = _account;
            }
            else
            {
                account = '';
                this.LedgerDimension = 0;
            }
        }
        else if (this.LedgerDimension)
        {
            // If the account has not been changed, then pull the value from ledger dimension as the master
            select DisplayValue from ledgerDimension where ledgerDimension.RecId == this.LedgerDimension;
            account = ledgerDimension.DisplayValue;
        }

        return account;
    }

]]></Source>
			</Method>
			<Method>
				<Name>titleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the title.
    /// </summary>
    /// <returns>
    /// The title.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display public HcmTitleId titleId()
    {
        return HcmTitle::find(this.HcmTitle).TitleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if ((this.CostTypeCode == TableGroupAll::Table    ||
                 this.CostTypeCode == TableGroupAll::GroupId) &&
                 ! this.CostTypeRelation)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(RPayTitlePosting, CostTypeRelation)));
            }

            if ((this.EmplCode == TableGroupAll::Table    ||
                 this.EmplCode == TableGroupAll::GroupId) &&
                 ! this.EmplRelation)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(RPayTitlePosting, EmplRelation)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayTitlePosting find(RPayPostingProfile      _postingProfile,
                                        TableGroupAll           _costTypeCode,
                                        RPayCostTypeRelation    _costTypeRelation,
                                        TableGroupAll           _emplCode,
                                        RPayEmplRelation        _emplRelation,
                                        RPayHRMOrganizationId   _rPayHRMOrganizationId,
                                        HcmTitleRecId           _titleId,
                                        boolean                 _forUpdate = false)
    {
        RPayTitlePosting payTitlePosting;

        payTitlePosting.selectForUpdate(_forupdate);

        select firstonly payTitlePosting
                where payTitlePosting.PostingProfile    == _postingProfile        &&
                      payTitlePosting.CostTypeCode      == _costTypeCode          &&
                      payTitlePosting.CostTypeRelation  == _costTypeRelation      &&
                      payTitlePosting.EmplCode          == _emplCode              &&
                      payTitlePosting.EmplRelation      == _emplRelation          &&
                      payTitlePosting.HrmOrganizationId == _rPayHRMOrganizationId &&
                      payTitlePosting.HcmTitle          == _titleId;

        return payTitlePosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAccount</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayTitlePosting findAccount(RPayPostingProfile    _postingProfile,
                                                      RPayCostType          _costType,
                                                      RHRMEmplId            _emplId,
                                                      RPayHRMOrganizationId _rPayHRMOrganizationId,
                                                      HcmTitleRecId         _titleId)
    {
        RPayTitlePosting    rPayTitlePosting,
                            rPayTitlePosting1,
                            rPayTitlePosting2,
                            rPayTitlePosting3;
        RPayGroupMember     rPayGroupMember;
        RPayFundMember      rPayFundMember;
        RPayCounterTable    rPayCounterTable;

        rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                    _rPayHRMOrganizationId,
                                                                    _titleId,
                                                                    TableGroupAll::Table,
                                                                    _costType,
                                                                    TableGroupAll::Table,
                                                                    _emplId);
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        while select PayGroup from rPayGroupMember
            order by PayGroup, FromDate, ToDate
            where rPayGroupMember.PersonEmplId       == _emplId                      &&
                  (! rPayGroupMember.FromDate                                        ||
                   rPayGroupMember.FromDate          <= RPayParameters::payPeriod()) &&
                  (! rPayGroupMember.ToDate                                          ||
                   rPayGroupMember.ToDate            >= RPayParameters::payPeriod())
        exists join rPayTitlePosting1
            where rPayTitlePosting1.EmplRelation     == rPayGroupMember.PayGroup     &&
                  rPayTitlePosting1.EmplCode         == TableGroupAll::GroupId       &&
                  rPayTitlePosting1.CostTypeRelation == _costType                    &&
                  rPayTitlePosting1.CostTypeCode     == TableGroupAll::Table         &&
                  rPayTitlePosting1.PostingProfile   == _postingProfile
        {
            rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                        _rPayHRMOrganizationId,
                                                                        _titleId,
                                                                        TableGroupAll::Table,
                                                                        _costType,
                                                                        TableGroupAll::GroupId,
                                                                        rPayGroupMember.PayGroup);
            if (rPayTitlePosting)
            {
                return rPayTitlePosting;
            }
        }

        rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                    _rPayHRMOrganizationId,
                                                                    _titleId,
                                                                    TableGroupAll::Table,
                                                                    _costType,
                                                                    TableGroupAll::All,
                                                                    '');
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        select firstonly CounterUnit from rPayFundMember
            order by CounterUnit
            where rPayFundMember.PayCostType        == _costType
        join RecId from rPayCounterTable
            where rPayCounterTable.CounterUnit      == rPayFundMember.CounterUnit &&
                  rPayCounterTable.LineType         == RPayCTypeType::BaseTotal   &&
                  rPayCounterTable.CounterType      == RPayCounterType::Fund
        exists join rPayTitlePosting1
            where rPayTitlePosting1.CostTypeRelation == rPayFundMember.CounterUnit &&
                  rPayTitlePosting1.CostTypeCode     == TableGroupAll::GroupId     &&
                  rPayTitlePosting1.EmplRelation     == _emplId                    &&
                  rPayTitlePosting1.EmplCode         == TableGroupAll::Table       &&
                  rPayTitlePosting1.PostingProfile   == _postingProfile;

        if (rPayFundMember)
        {
            rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                        _rPayHRMOrganizationId,
                                                                        _titleId,
                                                                        TableGroupAll::GroupId,
                                                                        rPayFundMember.CounterUnit,
                                                                        TableGroupAll::Table,
                                                                        _emplId);
            if (rPayTitlePosting)
            {
                return rPayTitlePosting;
            }
        }

        while select rPayTitlePosting1
            where rPayTitlePosting1.PostingProfile == _postingProfile        &&
                  rPayTitlePosting1.CostTypeCode   == TableGroupAll::GroupId &&
                  rPayTitlePosting1.EmplCode       == TableGroupAll::GroupId
        {
            while select PayGroup from rPayGroupMember
                order by PayGroup, FromDate, ToDate
                where rPayGroupMember.PersonEmplId       == _emplId                            &&
                      (! rPayGroupMember.FromDate                                              ||
                       rPayGroupMember.FromDate          <= RPayParameters::payPeriod())       &&
                      (! rPayGroupMember.ToDate                                                ||
                       rPayGroupMember.ToDate            >= RPayParameters::payPeriod())
            exists join rPayTitlePosting2
                where rPayTitlePosting2.EmplRelation     == rPayGroupMember.PayGroup           &&
                      rPayTitlePosting2.EmplCode         == TableGroupAll::GroupId             &&
                      rPayTitlePosting2.CostTypeRelation == rPayTitlePosting1.CostTypeRelation &&
                      rPayTitlePosting2.CostTypeCode     == rPayTitlePosting1.CostTypeCode     &&
                      rPayTitlePosting2.PostingProfile   == _postingProfile
            {
                select firstonly CounterUnit from rPayFundMember
                    order by CounterUnit
                    where rPayFundMember.PayCostType        == _costType
                join RecId from rPayCounterTable
                    where rPayCounterTable.CounterUnit      == rPayFundMember.CounterUnit &&
                          rPayCounterTable.LineType         == RPayCTypeType::BaseTotal   &&
                          rPayCounterTable.CounterType      == RPayCounterType::Fund
                exists join rPayTitlePosting3
                    where rPayTitlePosting3.CostTypeRelation == rPayFundMember.CounterUnit &&
                          rPayTitlePosting3.CostTypeCode     == TableGroupAll::GroupId     &&
                          rPayTitlePosting3.EmplRelation     == rPayGroupMember.PayGroup   &&
                          rPayTitlePosting3.EmplCode         == TableGroupAll::GroupId     &&
                          rPayTitlePosting3.PostingProfile   == _postingProfile;

                if (rPayFundMember)
                {
                    rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                                _rPayHRMOrganizationId,
                                                                                _titleId,
                                                                                TableGroupAll::GroupId,
                                                                                rPayFundMember.CounterUnit,
                                                                                TableGroupAll::GroupId,
                                                                                rPayGroupMember.PayGroup);
                    if (rPayTitlePosting)
                    {
                        return rPayTitlePosting;
                    }
                }
            }
        }

        select firstonly CounterUnit from rPayFundMember
            order by CounterUnit
            where rPayFundMember.PayCostType        == _costType
        join RecId from rPayCounterTable
            where rPayCounterTable.CounterUnit      == rPayFundMember.CounterUnit &&
                  rPayCounterTable.LineType         == RPayCTypeType::BaseTotal   &&
                  rPayCounterTable.CounterType      == RPayCounterType::Fund
        exists join rPayTitlePosting
            where rPayTitlePosting.CostTypeRelation == rPayFundMember.CounterUnit &&
                  rPayTitlePosting.CostTypeCode     == TableGroupAll::GroupId     &&
                  rPayTitlePosting.EmplRelation     == ''                         &&
                  rPayTitlePosting.EmplCode         == TableGroupAll::All         &&
                  rPayTitlePosting.PostingProfile   == _postingProfile;

        if (rPayFundMember)
        {
            rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                        _rPayHRMOrganizationId,
                                                                        _titleId,
                                                                        TableGroupAll::GroupId,
                                                                        rPayFundMember.CounterUnit,
                                                                        TableGroupAll::All,
                                                                        '');
            if (rPayTitlePosting)
            {
                return rPayTitlePosting;
            }
        }

        rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                    _rPayHRMOrganizationId,
                                                                    _titleId,
                                                                    TableGroupAll::All,
                                                                    '',
                                                                    TableGroupAll::Table,
                                                                    _emplId);
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        while select PayGroup from rPayGroupMember
            order by PayGroup, FromDate, ToDate
            where rPayGroupMember.PersonEmplId       == _emplId                      &&
                  (! rPayGroupMember.FromDate                                        ||
                   rPayGroupMember.FromDate          <= RPayParameters::payPeriod()) &&
                  (! rPayGroupMember.ToDate                                          ||
                   rPayGroupMember.ToDate            >= RPayParameters::payPeriod())
        exists join rPayTitlePosting1
            where rPayTitlePosting1.EmplRelation     == rPayGroupMember.PayGroup     &&
                  rPayTitlePosting1.EmplCode         == TableGroupAll::GroupId       &&
                  rPayTitlePosting1.CostTypeRelation == ''                           &&
                  rPayTitlePosting1.CostTypeCode     == TableGroupAll::All           &&
                  rPayTitlePosting1.PostingProfile   == _postingProfile
        {
            rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                        _rPayHRMOrganizationId,
                                                                        _titleId,
                                                                        TableGroupAll::All,
                                                                        '',
                                                                        TableGroupAll::GroupId,
                                                                        rPayGroupMember.PayGroup);
            if (rPayTitlePosting)
            {
                return rPayTitlePosting;
            }
        }

        rPayTitlePosting = RPayTitlePosting::findByCostTypeEmployee(_postingProfile,
                                                                    _rPayHRMOrganizationId,
                                                                    _titleId,
                                                                    TableGroupAll::All,
                                                                    '',
                                                                    TableGroupAll::All,
                                                                    '');

        return rPayTitlePosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCostTypeEmployee</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayTitlePosting findByCostTypeEmployee(RPayPostingProfile      _postingProfile,
                                                          RPayHRMOrganizationId   _rPayHRMOrganizationId,
                                                          HcmTitleRecId           _titleId,
                                                          TableGroupAll           _costTypeCode,
                                                          RPayCostTypeRelation    _costTypeRelation,
                                                          TableGroupAll           _emplCode,
                                                          RPayEmplRelation        _emplRelation)
    {
        RPayTitlePosting rPayTitlePosting;

        rPayTitlePosting = RPayTitlePosting::find(_postingProfile, _costTypeCode, _costTypeRelation, _emplCode, _emplRelation, _rPayHRMOrganizationId, _titleId);
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        rPayTitlePosting = RPayTitlePosting::find(_postingProfile, _costTypeCode, _costTypeRelation, _emplCode, _emplRelation, _rPayHRMOrganizationId, 0);
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        rPayTitlePosting = RPayTitlePosting::find(_postingProfile, _costTypeCode, _costTypeRelation, _emplCode, _emplRelation, '', _titleId);
        if (rPayTitlePosting)
        {
            return rPayTitlePosting;
        }

        rPayTitlePosting = RPayTitlePosting::find(_postingProfile, _costTypeCode, _costTypeRelation,  _emplCode, _emplRelation, '', 0);

        return rPayTitlePosting;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayroll</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6200</DeveloperDocumentation>
	<FormRef>RPayTitlePosting</FormRef>
	<Label>@RUP2647</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>HrmOrganizationId</TitleField1>
	<TitleField2>HcmTitle</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>OrganizationTitleid</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>OrganizationTitleid</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostTypeRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HrmOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimensions</Name>
			<Label>@SYS53632</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostTypeRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HrmOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@GLS105293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerJournalACType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostTypeCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RUP2648</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostTypeRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayCostTypeRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EmplCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RUP2650</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayEmplRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmTitle</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RHRMTitleRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HrmOrganizationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RpayHRMOrganizationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDynamicDefaultAccount</ExtendedDataType>
			<Label>@SYS24500</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayPostingProfile</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OrganizationTitleid</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostTypeCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostTypeRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EmplCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EmplRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HrmOrganizationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HcmTitle</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<SourceEDT>DimensionDefault</SourceEDT>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<NavigationPropertyMethodNameOverride>RPaytitleposting</NavigationPropertyMethodNameOverride>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmTitle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmTitle</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmTitle</Name>
					<Field>HcmTitle</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMEmplTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RHRMEmplTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>EmplCode</Name>
					<Field>EmplCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplRelation</Name>
					<Field>EmplRelation</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayCalcBase</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayCounterTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayCalcBase</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CounterType_Extern</Name>
					<RelatedField>CounterType</RelatedField>
					<ValueStr>RPayCounterType::Fund</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LineType_Extern</Name>
					<RelatedField>LineType</RelatedField>
					<ValueStr>RPayCtypeType::BaseTotal</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CostTypeCode</Name>
					<Field>CostTypeCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostTypeRelation</Name>
					<Field>CostTypeRelation</Field>
					<RelatedField>CounterUnit</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayGroupTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>EmplCode</Name>
					<Field>EmplCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplRelation</Name>
					<Field>EmplRelation</Field>
					<RelatedField>PayGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayHRMOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayHRMOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HrmOrganizationId</Name>
					<SourceEDT>RpayHRMOrganizationId</SourceEDT>
					<Field>HrmOrganizationId</Field>
					<RelatedField>hrmOrganizationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayLedger</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RPayLedger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayLedger</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<SourceEDT>RPayPostingProfile</SourceEDT>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPaytitleposting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CostTypeCode</Name>
					<Field>CostTypeCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostTypeRelation</Name>
					<Field>CostTypeRelation</Field>
					<RelatedField>PayCtype</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>