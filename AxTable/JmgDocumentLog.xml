<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgDocumentLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgDocumentLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasReadDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a worker has read a particular document.
    /// </summary>
    /// <param name="_worker">
    /// The ID of the worker
    /// </param>
    /// <param name="_recId">
    /// The ID of the <c>DocuRef</c> record to check.
    /// </param>
    /// <returns>
    /// true if the specified document has been read by an employee; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Use this method to query whether a worker has read a particular document.
    /// </remarks>
    [SysObsolete("This method is no longer used. Please use hasReadDocumentByModuleRefId instead", false, 23\5\2024)]
    static boolean hasReadDocument(JmgWorkerRecId _worker, RefRecId _recId)
    {
        return (select firstonly jmgDocumentLog where jmgDocumentLog.Worker == _worker && jmgDocumentLog.RefRecId == _recId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReadDocumentByJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a worker has read a particular document.
    /// </summary>
    /// <param name="_worker">
    /// The ID of the worker
    /// </param>
    /// <param name="_recId">
    /// The ID of the <c>DocuRef</c> record to check.
    /// </param>
    /// <param name="_jobId">
    /// The JobId of the <c>JmgJobTable</c> record to check.
    /// </param>
    /// <returns>
    /// true if the specified document has been read by an employee; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Use this method to query whether a worker has read a particular document.
    /// </remarks>
    [Hookable(false)]
    internal static boolean hasReadDocumentByJobId(JmgWorkerRecId _worker, RefRecId _recId, JmgJobId _jobId)
    {
        JmgDocumentLog jmgDocumentLog;
        JmgJobTable jmgJobTable;

        select firstonly jmgDocumentLog
            where jmgDocumentLog.Worker         == _worker &&
                  jmgDocumentLog.RefRecId       == _recId 
            exists join jmgJobTable
                  where jmgJobTable.ModuleRefId == jmgDocumentLog.ModuleRefId &&
                        jmgJobTable.JobId       == _jobId;     

        return jmgDocumentLog.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    internal void init(JmgRecId _docRefId, JmgWorkerRecId _worker, JmgModuleRefId _moduleRefId)
    {
        this.RefRecId = _docRefId;
        this.Worker = _worker;
        this.ModuleRefId = _moduleRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgJob</ConfigurationKey>
	<DeveloperDocumentation>@SYS317237</DeveloperDocumentation>
	<Label>@SYS92848</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Worker</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProductionControl</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllFields</Name>
			<Label>@SYS92848</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>JmgRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWorkerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModuleRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgModuleRefId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Worker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_JmgDocumentLog</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JmgJobDocuRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgJobDocuRef</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JmgJobDocuRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>JmgJobDocuRef_JmgDocumentLog</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JmgJobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgJobTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModuleRefId</Name>
					<Field>ModuleRefId</Field>
					<RelatedField>ModuleRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>