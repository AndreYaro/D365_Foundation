<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPAssetTrans_OtherCredits_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBCIAPAssetTrans_OtherCredits_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkInterval</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks the overlapping of fromDate and toDate fields.
    /// </summary>
    /// <returns>
    ///     True if there's an overlap, otherwise false.
    /// </returns>

    boolean checkInterval()
    {
        if ((this.FromDate && ! this.ToDate) || (! this.FromDate && this.ToDate))
            return checkFailed("@SYS22087");

        if (this.FromDate > this.ToDate)
            return checkFailed("@SYS16982");

        if (this.ToDate >= this.FBBookingPeriod_BR().periodFrom())
            return checkFailed("@SYS4006861");

        if (!FBCIAPAssetTrans_OtherCredits_BR::existSamePeriod(this.FromDate,
                                                              this.ToDate,
                                                              this.RecId))
        {
            if (FBCIAPAssetTrans_OtherCredits_BR::existPeriodOverlap(this.FBCIAPAssetTrans_BR,
                                                                     this.FromDate,
                                                                     this.ToDate,
                                                                     this.RecId))
                return checkFailed("@SYS94867");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>factor</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the factor taxable issues and issues for export with totaling outputs
    /// </summary>
    /// <returns>
    ///     The factor
    /// </returns>

    public display FBCIAPFactor factor()
    {
        FBCIAPFactor factor;

        if (!this.TotalOutgoingOperationsAmount)
        {
            return 0;
        }

        factor = this.TotalTaxableOutgoingAmount / this.TotalOutgoingOperationsAmount;

        return roundDownDec(factor, 8);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FBBookingPeriod_BR</Name>
				<Source><![CDATA[
        private FBBookingPeriod_BR FBBookingPeriod_BR()
    {
        FBBookingPeriod_BR  bookingPeriod;
        FBTaxAssessment_BR  taxAssessment;
        FBCIAPAssessment_BR ciapAssessment;
        FBCIAPAssetTrans_BR ciapAssetTrans;

        select bookingPeriod
            exists join taxAssessment
                where bookingPeriod.RecId == taxAssessment.FBBookingPeriod_BR
            exists join ciapAssessment
                where taxAssessment.RecId == ciapAssessment.FBTaxAssessment_BR
            exists join ciapAssetTrans
                where ciapAssessment.RecId == ciapAssetTrans.FBCIAPAssessment_BR
                        && ciapAssetTrans.RecId == this.FBCIAPAssetTrans_BR;

        return bookingPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>icmsAmountRecoverable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the ICMS amount to be recevered
    /// </summary>
    /// <returns>
    ///     ICMS amount to be recevered
    /// </returns>

    public display AmountMST icmsAmountRecoverable()
    {
        return roundDownDec(this.InstallmentAmount * this.factor(), 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInstallmentNumber</Name>
				<Source><![CDATA[
        private boolean validateInstallmentNumber()
    {
        FBCIAPAssetTable_BR                 ciapAssetTable;
        FBCIAPAssetTrans_BR                 ciapAssetTrans;
        FBCIAPAssetTrans_OtherCredits_BR    ciapAssetTransOtherCredits;

        boolean ok = true;

        select InstallmentNum from ciapAssetTransOtherCredits
            where ciapAssetTransOtherCredits.FBCIAPAssetTrans_BR == this.FBCIAPAssetTrans_BR
                && ciapAssetTransOtherCredits.InstallmentNum == this.InstallmentNum;

        if (ciapAssetTrans)
        {
            ok = checkFailed("@SYS4006719");
        }

        select Installments from ciapAssetTable
            join InstallmentNum from ciapAssetTrans
                where ciapAssetTrans.FBCIAPAssetTable_BR == ciapAssetTable.RecId
                    && ciapAssetTrans.RecId == this.FBCIAPAssetTrans_BR;

        if (ciapAssetTable.Installments < this.InstallmentNum)
        {
            ok = checkFailed("@SYS4006711");
        }

        if (this.InstallmentNum > ciapAssetTrans.InstallmentNum)
        {
            ok = checkFailed("@SYS4006816");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.TotalOutgoingOperationsAmount < this.TotalTaxableOutgoingAmount)
        {
            ret = checkFailed("@SYS4006712");
        }

        ret = this.validateInstallmentNumber() && ret;

        ret = this.checkInterval() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existPeriodOverlap</Name>
				<Source><![CDATA[
        static private boolean existPeriodOverlap(RecID        _ciapAssetTransRecId,
                                                     TaxValidDate _fromDate,
                                                     TaxValidDate _toDate,
                                                     RecId        _recId)
    {
        FBCIAPAssetTrans_OtherCredits_BR otherCredits;
        boolean ret = false;

        if (_ciapAssetTransRecId)
        {
            while select FromDate, ToDate
                  from otherCredits
                  where otherCredits.FBCIAPAssetTrans_BR == _ciapAssetTransRecId &&
                        otherCredits.RecId               != _recId
            {
                if (!_fromDate || !_toDate)
                    ret = true;
                if (_fromDate   >= otherCredits.FromDate  &&
                    _fromDate   <= otherCredits.ToDate    ||
                    _toDate     >= otherCredits.FromDate  &&
                    _toDate     <= otherCredits.ToDate)
                    ret = true;
                if (otherCredits.FromDate >= _fromDate    &&
                    otherCredits.FromDate <= _toDate      ||
                    otherCredits.ToDate   >= _fromDate    &&
                    otherCredits.ToDate   <= _toDate)
                    ret = true;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSamePeriod</Name>
				<Source><![CDATA[
        static private boolean existSamePeriod(FromDate _fromDate,
                                                  ToDate   _toDate,
                                                  RecId    _recId)
    {
        return (select RecId from FBCIAPAssetTrans_OtherCredits_BR
                where FBCIAPAssetTrans_OtherCredits_BR.FromDate       == _fromDate    &&
                        FBCIAPAssetTrans_OtherCredits_BR.ToDate       == _toDate      &&
                        FBCIAPAssetTrans_OtherCredits_BR.RecId        != _recId).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4001744</DeveloperDocumentation>
	<Label>@SYS4001743</Label>
	<TitleField1>FBCIAPAssetTrans_BR</TitleField1>
	<TitleField2>InstallmentNum</TitleField2>
	<Modules>FiscalBooksBrazil</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssetTrans_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalTaxableOutgoingAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalOutgoingOperationsAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@SYS75670</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstallmentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalOutgoingOperationsAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalTaxableOutgoingAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBCIAPAssetTrans_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FBCIAPAssetTrans_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InstallmentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS4001707</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InstallmentNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ICMSCreditInstallments_BR</ExtendedDataType>
			<Label>@SYS4001709</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalOutgoingOperationsAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS4001726</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalTaxableOutgoingAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS4001728</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FromToDateIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>FBCIAPAssetTrans_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FBCIAPAssetTrans_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>FBCIAPAssetTrans_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FBCIAPAssetTrans_BR</Name>
					<Field>FBCIAPAssetTrans_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>