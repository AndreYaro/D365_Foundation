<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankClientPayment_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankClientPayment_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountCur</Name>
				<Source><![CDATA[
    AmountCur amountCur()
    {
        return this.PaymentDirection == BankClientPaymentDirection_RU::Outgoing ? -1 * this.AmountCur : this.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAgreement</Name>
				<Source><![CDATA[
    private boolean checkAgreement()
    {
        SalesAgreementHeader salesAgreementHeader;
        PurchAgreementHeader purchAgreementHeader;
        boolean ok = true;

        if (this.AgreementHeaderExt)
        {
            switch (this.PartnerType)
            {
                case ModuleCustVend::Cust:
                    salesAgreementHeader = SalesAgreementHeaderExt_RU::salesAgreementHeader(this.AgreementHeaderExt);

                    if (!salesAgreementHeader.canReleaseAgreement())
                    {
                        ok = checkFailed("@SYS103075");
                    }

                    if (salesAgreementHeader.CustAccount != this.CustVendAC)
                    {
                        ok = checkFailed(strFmt("@SYS112224",
                            salesAgreementHeader.SalesNumberSequence, "@SYS309959", tableId2pname(tableNum(SalesAgreementHeader))));
                    }
                    break;
                case ModuleCustVend::Vend:
                    purchAgreementHeader = PurchAgreementHeaderExt_RU::purchAgreementHeader(this.AgreementHeaderExt);

                    if (!purchAgreementHeader.canReleaseAgreement(this.TransDate))
                    {
                        ok = checkFailed("@SYS103075");
                    }

                    if (purchAgreementHeader.VendAccount != this.CustVendAC)
                    {
                        ok = checkFailed(strFmt("@SYS112224",
                            purchAgreementHeader.PurchNumberSequence, "@SYS309960", tableId2pname(tableNum(PurchAgreementHeader))));
                    }
                    break;
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearReconciliation</Name>
				<Source><![CDATA[
    public void clearReconciliation()
    {
        BankAccountTrans        bankAccountTrans;
        LedgerJournalTrans      ledgerJournalTransFees;
        CustVendPaymJournalFee  custVendPaymJournalFee;
        LedgerJournalTrans      ledgerJournalTrans;

        CustVendPaymReconciliationSetStatus setStatus;
        CustVendPaymStatus  paymStatus;

        if (!this.RefRecId)
            return;

        ttsbegin;
        switch (this.RefTableId)
        {
            case tableNum(LedgerJournalTrans):
                ledgerJournalTrans = LedgerJournalTrans::findRecId(this.RefRecId, false);
                if (ledgerJournalTrans)
                {
                    paymStatus = ((ledgerJournalTrans.AccountType == LedgerJournalACType::Cust &&
                                   !ledgerJournalTrans.BankChequeNum)                          ?
                                   CustVendPaymStatus::Recieved :
                                   CustVendPaymStatus::Sent);

                    setStatus = new CustVendPaymReconciliationSetStatus();
                    setStatus.parmStatus(paymStatus);
                    setStatus.parmRecid(ledgerJournalTrans.RecId);

                    while select RecId from custVendPaymJournalFee
                        where   custVendPaymJournalFee.RefRecId == ledgerJournalTrans.RecId
                        join    ledgerJournalTransFees
                            where   ledgerJournalTransFees.RecId == custVendPaymJournalFee.FeeTransRecId
                    {
                        setStatus.parmRecid(ledgerJournalTransFees.RecId);
                    }

                    setStatus.runOperation();
                }
                break;

            case tableNum(BankAccountTrans):
                select firstonly forupdate bankAccountTrans
                    where bankAccountTrans.RecId == this.RefRecId;
                if (bankAccountTrans)
                {
                    bankAccountTrans.Included   = NoYes::No;
                    bankAccountTrans.update();
                }
                break;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ttsbegin;
        this.clearBalance();
        super();
        this.clearReconciliation();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymentOrderJour</Name>
				<Source><![CDATA[
    public BankPaymentOrderJour_RU findPaymentOrderJour()
    {
        BankPaymentOrderJour_RU     paymentOrderJour;
        BankCurrencyTransferLog_RU  currencyTransferLog;
        LedgerJournalTrans          ledgerJournalTransLocal;

        boolean                 result;

        select firstonly paymentOrderJour
            where   paymentOrderJour.PaymentOrderNum  == this.DocumentNumber &&
                    paymentOrderJour.PaymentTransDate == this.DocumentDate   &&
                    (! this.CurrencyCode ||
                    paymentOrderJour.CurrencyCode == this.CurrencyCode);

        if (paymentOrderJour.RecId != 0)
        {
            result =   (paymentOrderJour.inn_Recipient()        == this.PayeeINN         ||
                        paymentOrderJour.AccountNumRecipient    == this.CustVendAC)      &&
                        paymentOrderJour.bankAccountPayer()     == this.PayerAccount     &&
                        paymentOrderJour.bankAccountRecipient() == this.PayeeAccount     &&
                        abs(paymentOrderJour.AmountCur)         == this.AmountCur;
        }

        if (!result)
        {
            currencyTransferLog = BankCurrencyTransferLog_RU::findByTransferId(this.DocumentNumber);

            if (currencyTransferLog)
            {
                 paymentOrderJour.setTmp();
                 ledgerJournalTransLocal = currencyTransferLog.ledgerJournalTrans();
                 paymentOrderJour.initFromLedgerJournalTrans(ledgerJournalTransLocal);
                 paymentOrderJour.initFromPaymentOrderBudgetTrans_RU(ledgerJournalTransLocal.paymentOrderBudgetTrans_RU());
                 paymentOrderJour.initFromCurrencyTransferLog(currencyTransferLog);
                 paymentOrderJour.doInsert();

                 result = currencyTransferLog.payerINN()            == this.PayeeINN     &&
                          CompanyInfo::find().partyINNasOfDate_RU() == this.PayeeINN     &&
                          currencyTransferLog.paymentOrderDate()    == this.DocumentDate &&
                          currencyTransferLog.bankAccountPayer()    == this.PayerAccount &&
                          ledgerJournalTransLocal.amount()          == this.AmountCur;
            }
        }

        if (result)
        {
            return paymentOrderJour;
        }
        else
        {
            return null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustVendDimension</Name>
				<Source><![CDATA[
    void initCustVendDimension()
    {
        CustVendTable   custVendTable;

        if (this.PartnerType == ModuleCustVend::Cust)
            custVendTable  = CustTable::find(this.CustVendAC);
        else
            custVendTable  = VendTable::find(this.CustVendAC);

        //this.Dimension = custVendTable.Dimension;
        this.DefaultDimension = custVendTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDimension</Name>
				<Source><![CDATA[
    void initDimension()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPostingProfile</Name>
				<Source><![CDATA[
    void initPostingProfile()
    {
        AgreementHeaderExt_RU      agreementHeaderExt;
        SalesAgreementHeaderExt_RU salesAgreementHeaderExt;
        PurchAgreementHeaderExt_RU purchAgreementHeaderExt;
        BankTransType              bankTransType = BankTransType::find(this.BankTransactionType);

        if (bankTransType.BankAdvancedTransType_RU != BankAdvancedTransType_RU::None)
        {
            this.PostingProfile = bankTransType.PostingProfile_RU;
        }
        else
        {
            agreementHeaderExt = AgreementHeaderExt_RU::find(this.AgreementHeaderExt);

            if (this.PartnerType == ModuleCustVend::Cust)
            {
                salesAgreementHeaderExt = agreementHeaderExt as salesAgreementHeaderExt_RU;
                if (this.Prepayment)
                {
                    if (salesAgreementHeaderExt.CustPrepaymentPostingProfile)
                    {
                        this.PostingProfile = salesAgreementHeaderExt.CustPrepaymentPostingProfile;
                    }
                    else
                    {
                        this.PostingProfile = CustParameters::find().PrepaymentPostingProfile;
                    }

                    if (isConfigurationkeyEnabled(configurationkeynum(CustVendJournalizeSettlementTrans_W)))
                    {
                        this.TaxGroup     = CustParameters::find().TaxGroup_RU;
                        this.TaxItemGroup = CustParameters::find().TaxItemGroup_RU;
                    }
                }
                else
                {
                    if (salesAgreementHeaderExt.CustPostingProfile)
                    {
                        this.PostingProfile = salesAgreementHeaderExt.CustPostingProfile;
                    }
                    else
                    {
                        this.PostingProfile = CustParameters::find().PostingProfile;
                    }

                    if (isConfigurationkeyEnabled(configurationkeynum(CustVendJournalizeSettlementTrans_W)))
                    {
                        this.TaxGroup     = '';
                        this.TaxItemGroup = '';
                    }
                }
            }
            else
            {
                purchAgreementHeaderExt = agreementHeaderExt as purchAgreementHeaderExt_RU;
                if (this.Prepayment)
                {
                    if (purchAgreementHeaderExt.VendPrepaymentPostingProfile)
                    {
                        this.PostingProfile = purchAgreementHeaderExt.VendPrepaymentPostingProfile;
                    }
                    else
                    {
                        this.PostingProfile = VendParameters::find().PrepaymentPostingProfile;
                    }

                    if (isConfigurationkeyEnabled(configurationkeynum(CustVendJournalizeSettlementTrans_W)))
                    {
                        this.TaxGroup     = VendParameters::find().TaxGroup_W;
                        this.TaxItemGroup = VendParameters::find().TaxItemGroup_W;
                    }
                }
                else
                {
                    if (purchAgreementHeaderExt.VendPostingProfile)
                    {
                        this.PostingProfile = purchAgreementHeaderExt.VendPostingProfile;
                    }
                    else
                    {
                        this.PostingProfile = VendParameters::find().PostingProfile;
                    }

                    if (isConfigurationkeyEnabled(configurationkeynum(CustVendJournalizeSettlementTrans_W)))
                    {
                        this.TaxGroup     = '';
                        this.TaxItemGroup = '';
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.CurrencyCode && this.ExchRate == 0.0)
        {
            this.ExchRate = ExchangeRateHelper::exchRate(this.CurrencyCode, this.WriteoffDate ? this.WriteoffDate : this.TransDate);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCurrencyExchange</Name>
				<Source><![CDATA[
    public boolean isCurrencyExchange()
    {
        BankTransType   bankTransType;
        boolean         ret;
        ;

        bankTransType = BankTransType::find(this.BankTransactionType);

        ret = bankTransType.BankAdvancedTransType_RU != BankAdvancedTransType_RU::None;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump to the the agreements.
    /// </summary>
    public void jumpRefAgreement()
    {
        switch (this.PartnerType)
        {
            case ModuleCustVend::Cust:
                SalesAgreementHeaderExt_RU::salesAgreementJumpRef(this.AgreementHeaderExt);
                break;
            case ModuleCustVend::Vend:
                PurchAgreementHeaderExt_RU::purchAgreementJumpRef(this.AgreementHeaderExt);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalACType</Name>
				<Source><![CDATA[
    public LedgerJournalACType ledgerJournalACType()
    {
        if (this.PartnerType == ModuleCustVend::Cust)
        {
            return LedgerJournalACType::Cust;
        }
        else
        {
            return LedgerJournalACType::Vend;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the agreements lookup.
    /// </summary>
    /// <param name="_callingControl">
    ///     The control for which lookup will be created.
    /// </param>
    /// <returns>
    ///     A record in the <c>AgreementHeaderExt_RU</c> table.
    /// </returns>
    public AgreementHeaderExt_RU lookupAgreement(FormReferenceControl _callingControl)
    {
        AgreementHeaderExt_RU selectedRecord;

        switch (this.PartnerType)
        {
            case ModuleCustVend::Cust:
                selectedRecord = SalesAgreementHeaderExt_RU::salesAgreementReferenceLookup(_callingControl, this.CustVendAC);
                break;
            case ModuleCustVend::Vend:
                selectedRecord = PurchAgreementHeaderExt_RU::purchAgreementReferenceLookup(_callingControl, this.CustVendAC);
                break;
        }

        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(BankClientPayment_RU, BankCurrencyDealCourse) :
                this.validateFields();
                break;

            case fieldNum(BankClientPayment_RU, CustVendAC)      :
                this.AgreementHeaderExt = 0;
            case fieldNum(BankClientPayment_RU, AgreementHeaderExt) :
                this.setAgreement();
                this.initPostingProfile();
                break;

            case fieldNum (BankClientPayment_RU, Prepayment)     :
                this.initPostingProfile();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes client bank data from the associated agreement.
    /// </summary>
    public void setAgreement()
    {
        if (this.AgreementHeaderExt)
        {
            this.DefaultDimension = AgreementHeaderExt_RU::agreementHeader(this.AgreementHeaderExt).DefaultDimension;
        }
        else
        {
            this.DefaultDimension = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(BankClientPayment_RU, AgreementHeaderExt):
                ret = this.checkAgreement();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFields</Name>
				<Source><![CDATA[
    boolean validateFields()
    {
        BankClientDocumentType_RU   documentType;
        str     errTxt;
        boolean ret = true;

        if (! this.CustVendAC)
        {
            errTxt = strFmt("@SYS84378", fieldId2pname(tableNum(BankClientPayment_RU), fieldNum(BankClientPayment_RU, CustVendAC)));
            ret    = false;
        }

        if (! this.AmountCur)
        {
            errTxt = strFmt("@SYS84378", fieldId2pname(tableNum(BankClientPayment_RU), fieldNum(BankClientPayment_RU, AmountCur)));
            ret    = false;
        }

        if (! this.CurrencyCode)
        {
            errTxt = strFmt("@SYS84378", fieldId2pname(tableNum(BankClientPayment_RU), fieldNum(BankClientPayment_RU, CurrencyCode)));
            ret    = false;
        }

        documentType = BankClientDocumentType_RU::find(this.DocumentTypeId);
        if ((documentType.Category == BankClientDocumentTypeCategory_RU::CurrencyPurchase   ||
            documentType.Category == BankClientDocumentTypeCategory_RU::CurrencySell)       &&
            !this.BankCurrencyDealCourse)
        {
            errTxt = strFmt("@SYS84378", fieldId2pname(tableNum(BankClientPayment_RU), fieldNum(BankClientPayment_RU, BankCurrencyDealCourse)));
            ret    = false;
        }

        this.Unrecognized       = !ret;
        this.UnrecognitionCause = errTxt;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        BankClientPaymentDirection_RU   _paymentDirection,
        DocumentDate                    _documentDate,
        BankPaymentOrderBase_RU         _documentNumber,
        BankAccount                     _payerBankAccount,
        BankAccount                     _payeeBankAccount,
        AmountCur                       _amountCur,
        CurrencyCode                    _currencyCode)
    {
        BankClientPayment_RU bankClientPayment_RU;
        ;
        if (_documentDate && _documentNumber && _payerBankAccount && _payeeBankAccount && _amountCur && _currencyCode)
        {
            select firstonly RecId from bankClientPayment_RU
                index hint UniqueIdx
                where bankClientPayment_RU.PaymentDirection == _paymentDirection
                    && bankClientPayment_RU.DocumentDate == _documentDate
                    && bankClientPayment_RU.DocumentNumber == _documentNumber
                    && bankClientPayment_RU.PayerAccount == _payerBankAccount
                    && bankClientPayment_RU.PayeeAccount == _payeeBankAccount
                    && bankClientPayment_RU.AmountCur == _amountCur
                    && bankClientPayment_RU.CurrencyCode == _currencyCode;
        }
        return bankClientPayment_RU.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existBasic</Name>
				<Source><![CDATA[
    public static boolean existBasic(
        BankClientPaymentDirection_RU   _paymentDirection,
        DocumentDate                    _documentDate,
        BankPaymentOrderBase_RU         _documentNumber,
        BankAccount                     _payerBankAccount,
        BankAccount                     _payeeBankAccount)
    {
        BankClientPayment_RU bankClientPayment_RU;
        ;

        if (   _documentDate
            && _documentNumber
            && _payerBankAccount
            && _payeeBankAccount)
        {
            select firstonly RecId from bankClientPayment_RU
                where bankClientPayment_RU.PaymentDirection == _paymentDirection
                    && bankClientPayment_RU.DocumentDate == _documentDate
                    && bankClientPayment_RU.DocumentNumber == _documentNumber
                    && bankClientPayment_RU.PayerAccount == _payerBankAccount
                    && bankClientPayment_RU.PayeeAccount == _payeeBankAccount;
        }

        return bankClientPayment_RU.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BankClientPayment_RU find(
        BankClientPaymentDirection_RU   _paymentDirection,
        DocumentDate                    _documentDate,
        BankPaymentOrderBase_RU         _documentNumber,
        BankAccount                     _payerBankAccount,
        BankAccount                     _payeeBankAccount,
        AmountCur                       _amountCur,
        CurrencyCode                    _currencyCode,
        boolean                         _forUpdate = false,
        ConcurrencyModel                _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankClientPayment_RU bankClientPayment_RU;
        ;

        if (   _documentDate
            && _documentNumber
            && _payerBankAccount
            && _payeeBankAccount
            && _amountCur
            && _currencyCode)
        {
            if (_forUpdate)
            {
                bankClientPayment_RU.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    bankClientPayment_RU.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly bankClientPayment_RU
                index hint UniqueIdx
                where bankClientPayment_RU.PaymentDirection == _paymentDirection
                    && bankClientPayment_RU.DocumentDate == _documentDate
                    && bankClientPayment_RU.DocumentNumber == _documentNumber
                    && bankClientPayment_RU.PayerAccount == _payerBankAccount
                    && bankClientPayment_RU.PayeeAccount == _payeeBankAccount
                    && bankClientPayment_RU.AmountCur == _amountCur
                    && bankClientPayment_RU.CurrencyCode == _currencyCode;
        }

        return bankClientPayment_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static BankClientPayment_RU findRecId(
        recId   _recId,
        boolean _forUpdate = false              )
    {
        BankClientPayment_RU    bankClientPayment;
        ;

        if (_recId)
        {
            bankClientPayment.selectForUpdate(_forUpdate);

            select firstonly bankClientPayment
                where bankClientPayment.RecId == _recId;
        }

        return bankClientPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>joinWithSource</Name>
				<Source><![CDATA[
    static void joinWithSource(RefRecId _refRecId = 0)
    {
        BankClientPayment_RU     bankClientPayment;
        BankPaymentOrderJour_RU  paymentOrderJour;

        ttsbegin;
        while select forupdate bankClientPayment
            where bankClientPayment.Posted           == NoYes::No    &&
                  bankClientPayment.JournalNum       == ''           &&
                  bankClientPayment.Voucher          == ''           &&
                  bankClientPayment.PaymentDirection == BankClientPaymentDirection_RU::Outgoing &&
                  bankClientPayment.Unrecognized     == NoYes::No    &&
                 (bankClientPayment.RecId            == _refRecId || !_refRecId)
        {
            paymentOrderJour = bankClientPayment.findPaymentOrderJour();

            if (paymentOrderJour)
            {
                bankClientPayment.JournalNum = paymentOrderJour.JournalNum;
                bankClientPayment.Voucher    = paymentOrderJour.Voucher;
                bankClientPayment.update();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recIdByRef</Name>
				<Source><![CDATA[
    public static recId recIdByRef(Common _rec)
    {
        BankClientPayment_RU bankClientPayment;
        ;

        select firstonly RecId from bankClientPayment
            where bankClientPayment.RefTableId == _rec.TableId &&
                  bankClientPayment.RefRecId   == _rec.RecId;
        return bankClientPayment.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefByRecId</Name>
				<Source><![CDATA[
    public static void setRefByRecId(recId _recId, Common _rec)
    {
        BankClientPayment_RU bankClientPayment;
        ;

        update_recordset bankClientPayment
            setting RefTableId = _rec.TableId, RefRecId = _rec.RecId
            where bankClientPayment.RecId == _recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnTransDelete</Name>
				<Source><![CDATA[
    public static void updateOnTransDelete(LedgerJournalTrans _ledgerJournalTrans)
    {
        BankClientPayment_RU paymentTable;
        ;
        ttsbegin;
        update_recordset paymentTable
            setting JournalNum = "", Voucher = ""
            where   paymentTable.JournalNum == _ledgerJournalTrans.JournalNum &&
                    paymentTable.Voucher    == _ledgerJournalTrans.Voucher;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearBalance</Name>
				<Source><![CDATA[
    private void clearBalance()
    {
        BankClientAccountBalance_RU bankClientAccountBalance;

        delete_from bankClientAccountBalance
            where bankClientAccountBalance.FromDate <= this.DocumentDate &&
                (bankClientAccountBalance.ToDate >= this.DocumentDate || !bankClientAccountBalance.ToDate) &&
                bankClientAccountBalance.AccountID == this.AccountID;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS115244</DeveloperDocumentation>
	<FormRef>bankclientimportedStatement_RU</FormRef>
	<Label>@GLS115244</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DocumentNumber</TitleField1>
	<TitleField2>DocumentDate</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Bank</Modules>
	<PrimaryIndex>UniqueIdx</PrimaryIndex>
	<ReplacementKey>UniqueIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymentDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS62867</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCurrencyDealCourse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferCurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS5951</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerINN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankCorrAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankBIC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeINN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankCorrAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankBIC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WriteoffDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipContents</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IndirectPayment</Name>
			<Label>@GLS115484</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayerBankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerJournal</Name>
			<Label>@SYS23060</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WriteoffDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SlipContents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UIN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS30289</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Include</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Unrecognized</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnrecognitionCause</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartnerType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementHeaderExt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementBlocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentPurpose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payee</Name>
			<Label>@GLS101010</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayeeAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeINN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeRRC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PayeeBank</Name>
			<Label>@GLS101006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayeeBankName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankCorrAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayeeBankBIC</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payer</Name>
			<Label>@GLS100924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerINN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerRRC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PayerBank</Name>
			<Label>@GLS101005</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayerBankName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankCorrAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayerBankBIC</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prepayment</Name>
			<Label>@SYS59473</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Prepayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UnidentifiedText</Name>
			<Label>@GLS115262</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnidentifiedText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AgreementBlocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS115247</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AgreementHeaderExt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementHeaderExtRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS62867</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankCurrencyDealCourse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCurrencyDealCourse_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankTransactionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransactionType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendAC</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<Label>@GLS103215</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankPaymentOrderBase_RU</ExtendedDataType>
			<Label>@SYS8434</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentTypeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankClientDocumentTypeId_RU</ExtendedDataType>
			<Label>@SYS54213</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Include</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS40540</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartnerType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS111888</Label>
			<EnumType>ModuleCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeBankAccount</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeBankAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeBankBIC</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankBIC_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeBankCorrAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCorrAccount_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeBankName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeINN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>INN_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendName</ExtendedDataType>
			<Label>@SYS4466</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayeeRRC</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KPPU_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerBankAccount</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerBankAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerBankBIC</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankBIC_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerBankCorrAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCorrAccount_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerBankName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerINN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>INN_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustName</ExtendedDataType>
			<Label>@GLS107283</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayerRRC</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KPPU_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymentDirection</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankClientPaymentDirection_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymentPurpose</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCentralBankPurposeText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Posted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PostingProfile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Prepayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Label>@SYS59473</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReceiptDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS101391</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SlipContents</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCentralBankPurposeText</ExtendedDataType>
			<Label>@GLS114921</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SlipDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS114919</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>SlipTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankClientSlipTime_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS110044</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransferCurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Label>@GLS115261</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnidentifiedText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankClientUnidentifiedText_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnrecognitionCause</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankClientUnrecognitionCause_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Unrecognized</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8500</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WriteoffDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS114925</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UIN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UIN_RU</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UniqueIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymentDirection</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PayerAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PayeeAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AmountCur</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AgreementHeaderExtIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementHeaderExt</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementHeaderExt</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementHeaderExt</Name>
					<Field>AgreementHeaderExt</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountID</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>AccountID</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BankAccountTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankAccountTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankAccountTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankClientDocumentType_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankClientDocumentType_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentTypeId</Name>
					<SourceEDT>BankClientDocumentTypeId_RU</SourceEDT>
					<Field>DocumentTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BankPaymentOrderJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankPaymentOrderJour_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankPaymentOrderJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Voucher</Name>
					<Field>Voucher</Field>
					<RelatedField>Voucher</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentDate</Name>
					<Field>DocumentDate</Field>
					<RelatedField>PaymentTransDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentNumber</Name>
					<Field>DocumentNumber</Field>
					<RelatedField>PaymentOrderNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankTransType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankTransType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankTransactionType</Name>
					<SourceEDT>BankTransactionType</SourceEDT>
					<Field>BankTransactionType</Field>
					<RelatedField>BankTransType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransType</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPostingProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustLedger</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPostingProfile</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
					<ValueStr>ModuleCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendAC</Name>
					<Field>CustVendAC</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
					<ValueStr>ModuleCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<SourceEDT>LedgerJournalId</SourceEDT>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Voucher</Name>
					<Field>Voucher</Field>
					<RelatedField>Voucher</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransDate</Name>
					<Field>TransDate</Field>
					<RelatedField>TransDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentNumber</Name>
					<Field>DocumentNumber</Field>
					<RelatedField>PaymReference</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTransRefRec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalTransRefRec</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransferCurrency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TransferCurrency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferCurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>TransferCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPostingProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendLedger</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPostingProfile</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
					<ValueStr>ModuleCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendAC</Name>
					<Field>CustVendAC</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
					<ValueStr>ModuleCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>