<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjRevRecContractLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjRevRecContractLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByRevenueRecognitionIdContractLineNum</Name>
				<Source><![CDATA[
    public static ProjRevRecContractLine findByRevenueRecognitionIdContractLineNum(PSAContractLineNum _psaContractLineNum, ProjWipId _revRecID , boolean _forUpdate = false)
    {
        ProjRevRecContractLine projRevRecContractLine;        

        if (_psaContractLineNum && _revRecID)
        {
            projRevRecContractLine.selectForUpdate(_forUpdate);
            select firstonly projRevRecContractLine
                where projRevRecContractLine.ContractLineNum == _psaContractLineNum
                && projRevRecContractLine.RevenueRecognitionId == _revRecID;
        }
        return projRevRecContractLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjRevRecContractLine find(RecId _recId, boolean _forUpdate = false)
    {
        ProjRevRecContractLine projRevRecContractLine;

        if(_recId)
        {
            projRevRecContractLine.selectForUpdate(_forUpdate);
            select firstonly projRevRecContractLine
                where projRevRecContractLine.RecId == _recId;
        }

        return projRevRecContractLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByContractLineNum</Name>
				<Source><![CDATA[
    public static ProjRevRecContractLine findByContractLineNum(PSAContractLineNum _psaContractLineNum, boolean _forUpdate = false)
    {
        ProjRevRecContractLine projRevRecContractLine;

        if(_psaContractLineNum)
        {
            projRevRecContractLine.selectForUpdate(_forUpdate);
            select firstonly projRevRecContractLine
                where projRevRecContractLine.ContractLineNum == _psaContractLineNum;
        }

        return projRevRecContractLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRevenueRecognitionId</Name>
				<Source><![CDATA[
    public static ProjRevRecContractLine findByRevenueRecognitionId(ProjWIPId _projWIPId, boolean _forUpdate = false)
    {
        ProjRevRecContractLine projRevRecContractLine;

        if(_projWIPId)
        {
            projRevRecContractLine.selectForUpdate(_forUpdate);
            select firstonly projRevRecContractLine
                where projRevRecContractLine.RevenueRecognitionId == _projWIPId;
        }

        return projRevRecContractLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByContractLineNum</Name>
				<Source><![CDATA[
    public static void deleteByContractLineNum(PSAContractLineNum _psaContractLineNum)
    {
        ProjRevRecContractLine projRevRecContractLine;

        if(_psaContractLineNum)
        {
            ProjItemTrans projItemTrans;
            ProjItemTransCost projItemTransCost;
            ProjEmplTrans       projEmplTrans;
            ProjEmplTransCost   projEmplTransCost;
            ProjCostTrans       projCostTrans;
            ProjCostTransCost   projCostTransCost;
            ProjOnAccTrans  onAccTrans;

            select firstonly projItemTransCost
                where projItemTransCost.WIPPeriod != dateNull()
                exists join projItemTrans
                where projItemTrans.PSAContractLineNum == _psaContractLineNum
                && projItemTrans.ProjAdjustRefId == projItemTransCost.ProjAdjustRefId
                && projItemTrans.InventTransId == projItemTransCost.InventTransId;

            if(projItemTransCost.RecId)
            {
                info(strFmt("@Proj::ProjRevRecContractLineNoDelete",_psaContractLineNum,  tableId2pname(tableNum(ProjItemTrans))));
                return;
            }

            select firstonly projEmplTransCost
                where projEmplTransCost.WIPPeriod != dateNull()
                exists join projEmplTrans
                where projEmplTrans.PSAContractLineNum == _psaContractLineNum
                && projEmplTrans.TransId == projEmplTransCost.TransId;

            if(projEmplTransCost.RecId)
            {
                info(strFmt("@Proj::ProjRevRecContractLineNoDelete",_psaContractLineNum, tableId2pname(tableNum(ProjEmplTrans))));
                return;
            }

            select firstonly projCostTransCost
                where projCostTransCost.WIPPeriod != dateNull()
                exists join projCostTrans
                where projCostTrans.PSAContractLineNum == _psaContractLineNum
                && projCostTrans.TransId == projCostTransCost.TransId;

            if(projCostTransCost.RecId)
            {
                info(strFmt("@Proj::ProjRevRecContractLineNoDelete",_psaContractLineNum,  tableId2pname(tableNum(ProjCostTrans))));
                return;
            }

            select firstonly onAccTrans
                where onAccTrans.PSAContractLineNum == _psaContractLineNum;

            if(onAccTrans.RecId)
            {
                info(strFmt("@Proj::ProjRevRecContractLineNoDelete",_psaContractLineNum,  tableId2pname(tableNum(ProjOnAccTrans))));
                return;
            }

            ttsbegin;
            delete_from projRevRecContractLine
                where projRevRecContractLine.ContractLineNum == _psaContractLineNum;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if(ret)
        {
            if(this.RevenueRecognitionId == '' || this.ContractLineNum == '' || !ProjWIPTable::find(this.RevenueRecognitionId).RecId)
            {
                ret = false;
            }
        
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjRevRecContractLineDevDoc</DeveloperDocumentation>
	<Label>@Proj:ProjRevRecContractLine</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>RevenueRecognitionId</TitleField1>
	<TitleField2>ContractLineNum</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueRecognitionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevenueRecognitionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PSAContractLineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RevenueRecognitionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjWipId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjRevRecContractLinePrimaryIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RevenueRecognitionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RevenueRecognitionID</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjWIPTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RevenueRecognitionId</Name>
					<Field>RevenueRecognitionId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContractLineNum</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PSAContractLineItems</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractLineNum</Name>
					<Field>ContractLineNum</Field>
					<RelatedField>ContractLineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>