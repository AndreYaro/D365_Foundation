<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostPeriodTopVariancesListDataSetTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostPeriodTopVariancesListDataSetTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the cost calculation top variances data cache in a format consumable by a list control.
    /// </summary>
    /// <param name="_costPeriodCompareArgs">Cost calculation comparison data.</param>
    /// <param name="_contextId">The context id for the cached data.</param>
    public static void updateCache(
                CostPeriodCompareArgs _costPeriodCompareArgs,
                SysDataCacheContextId _contextId)
    {
        CostCalculationPeriodCompareView            costCalculationCompareView;
        CostCalculationPeriodCompareTmp             calculationCompareData;

        ttsbegin;
        CostPeriodTopVariancesListDataSetTable::clearCache(_contextId);

        insert_recordset calculationCompareData (CostRollupId, CostRollupSourceId, CostDifference)
        select CostRollupId, ProcessId, CostDifference from costCalculationCompareView
            order by CostDifference desc
            where  costCalculationCompareView.date >= _costPeriodCompareArgs.parmFromDate() && costCalculationCompareView.date <= _costPeriodCompareArgs.parmToDate()
                && costCalculationCompareView.CostDifference > 0;

        while select calculationCompareData
        {
            CostPeriodTopVariancesListDataSetTable::insertRecord(_contextId, calculationCompareData.CostDifference, calculationCompareData.CostRollupId, calculationCompareData.CostRollupSourceId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecord</Name>
				<Source><![CDATA[
    private static void  insertRecord(
                SysDataCacheContextId   _contextId,
                CostAmount              _costDifference,
                ProdId                  _costRollupId,
                ItemId                  _costRollupSourceId)
    {
        CostPeriodTopVariancesListDataSetTable listData;

        listData.SysDataCacheContextId = _contextId;
        listData.CostDifference        = CurrencyExchangeHelper::amount(_costDifference);
        listData.CostRollupId          = _costRollupId;
        listData.CostRollupSourceId    = _costRollupSourceId;
        listData.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cleans up the cache based on context.
    /// </summary>
    /// <param name="_contextId">The context id for the cached data to be removed from the cache.</param>
    public static void clearCache(SysDataCacheContextId _contextId)
    {
        CostPeriodTopVariancesListDataSetTable dataSetTable;

        ttsbegin;

        delete_from dataSetTable
            where dataSetTable.SysDataCacheContextId == _contextId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costDifferenceDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a string that describes the cost difference between estimated and realized cost.
    /// </summary>
    /// <returns>
    /// A string that describes the cost difference between estimated and realized cost.
    /// </returns>
    public display str costDifferenceDescription()
    {
        return strFmt('%1: %2', fieldPName(CostPeriodTopVariancesListDataSetTable, CostDifference), this.CostDifference);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostDifference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<Label>@CostManagement:EstimatedVsRealizedStateComparison</Label>
	<Modules>Inventory</Modules>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SysDataCacheContextId</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostRollupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostRollupSourceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysDataSetCacheTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SysDataCacheContextId</MapField>
					<MapFieldTo>SysDataCacheContextId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostRollupSourceId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>CostRollupSourceId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>