<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostStatementLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostStatementLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name formatted according to the level on the statement.
    /// </summary>
    /// <returns>
    /// The name formatted according to the level on the statement.
    ///</returns>
    display Name displayName()
    {
        const   str indent = '  ';
        Name    displayName;

        for (int i = 0; i < this.Level; i++)
        {
            displayName += indent;
        }
        displayName += this.Name;

        return displayName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the quantity to display on the statement.
    /// </summary>
    /// <returns>The cost statement line quantity.</returns>
    /// <remarks>
    /// This method is used to disable filtering and sorting.
    /// </remarks>
    display InventQty displayQuantity()
    {
        return this.Quantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the amount to display on the statement.
    /// </summary>
    /// <returns>
    /// The amount to display on the statement.
    /// </returns>
    /// <remarks>
    /// This method is used to disable filtering and sorting.
    /// </remarks>
    display Amount displayAmount()
    {
        return this.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkImageReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the report icon.
    /// </summary>
    /// <returns>A container containing the report icon image.</returns>
    public display container linkImageReport()
    {
        ImageReference imgRef;
        container imageContainer;
        if (this.Name == "@SCM:CostStatementVariances")
        {
            imgRef = ImageReference::constructForSymbol('Report');
            imageContainer = imgRef.pack();
        }
        else
        {
            imageContainer = conNull();
        }
        return imageContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkImageGraph</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the graph icon.
    /// </summary>
    /// <returns>A container containing the graph icon image.</returns>
    public display container linkImageGraph()
    {
        container imageContainer;
        if (this.Name == "@SCM:CostStatementVariances")
        {
            var imgRef = ImageReference::constructForSymbol('LineChart');
            imageContainer = imgRef.pack();
        }
        else
        {
            imageContainer = conNull();
        }
        return imageContainer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:CostStatementLineDoc</DeveloperDocumentation>
	<ClusteredIndex>LineNumber</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>LineNumber</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LineNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Level</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Level</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LineNumber</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>