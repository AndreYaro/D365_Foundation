<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionLetterTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustCollectionLetterTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(CollectionLetterCourseId _collectionLetterCourse)
    {
        boolean ret = true;

        if (!CustCollectionLetterTable::exist(_collectionLetterCourse))
        {
            ret = checkFailed(strfmt(CustCollectionLetterTable::txtNotExist(), _collectionLetterCourse));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(CollectionLetterCourseId _collectionLetterCourse)
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     custCollectionLetterTable
                 where
                     custCollectionLetterTable.CollectionLetterCourse == _collectionLetterCourse).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CustCollectionLetterTable find(
        CollectionLetterCourseId _collectionLetterCourse,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustCollectionLetterTable custCollectionLetterTable;

        custCollectionLetterTable.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custCollectionLetterTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            custCollectionLetterTable
            where
            custCollectionLetterTable.CollectionLetterCourse == _collectionLetterCourse;

        return custCollectionLetterTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS27831";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean isValid;

        isValid = super(_fieldIdToCheck);

        if (isValid
            && _fieldIdToCheck == fieldNum(CustCollectionLetterTable, PaymTermId)
            && PaymTerm::isCashAccount(this.PaymTermId))
        {
            isValid = checkFailed("@AccountsReceivable:CollectionLetterCanNotBeSetupWithTermsOfPaymentUsingCashAccount");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CustCollectionLetter</ConfigurationKey>
	<DeveloperDocumentation>@SYS125054</DeveloperDocumentation>
	<FormRef>CollectionLetterCourse</FormRef>
	<Label>@SYS24212</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CollectionLetterCourse</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CourseIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>CourseIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustCollectionLetterLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustCollectionLetterLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustLedgerAccounts</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>CustLedgerAccounts</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LanguageTxt</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LanguageTxt</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymTermId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymTermId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CollectionLetterCourse</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CollectionLetterCourseId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymTermId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymTermId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CourseIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm_PaymTermId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymTerm_PaymTermId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustCollectionLetterTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymTermId</Name>
					<SourceEDT>PaymTermId</SourceEDT>
					<Field>PaymTermId</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>