<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceTableExtension_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceTableExtension_CN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the CustInvoiceTableExtensionCN table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the CustInvoiceTableExtensionCN record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean isExisting = true;

        if (!CustInvoiceTableExtension_CN::exist(_recId))
        {
            isExisting = checkFailed(strfmt(CustInvoiceTableExtension_CN::txtNotExist(), _recId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the CustInvoiceTableExtensionCN table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the CustInvoiceTableExtensionCN record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly RecId
                    from CustInvoiceTableExtension_CN
                    where CustInvoiceTableExtension_CN.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CustInvoiceTableExtensionCN</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>CustInvoiceTableExtensionCN</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustInvoiceTableExtensionCN</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceTableExtension_CN find(
        RecId            _recId,
        boolean          _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceTableExtension_CN   custInvoiceTableExtension;

        custInvoiceTableExtension.selectForUpdate(_forUpdate);
        if (_forUpdate
            && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceTableExtension.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceTableExtension
            where custInvoiceTableExtension.RecId == _recId;

        return custInvoiceTableExtension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CustInvoiceTableExtensionCN</c> table.
    /// </summary>
    /// <param name="_custInvoiceTableRecId">
    /// The record ID of the <c>CustInvoiceTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustInvoiceTableExtensionCN</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceTableExtension_CN findByCustInvoiceTable(
        RecId            _custInvoiceTableRecId,
        boolean          _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceTableExtension_CN   custInvoiceTableExtension;

        custInvoiceTableExtension.selectForUpdate(_forUpdate);
        if (_forUpdate
            && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceTableExtension.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceTableExtension
            where custInvoiceTableExtension.CustInvoiceTable == _custInvoiceTableRecId;

        return custInvoiceTableExtension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the CustInvoiceTableExtensionCN table does not exist.
    /// </summary>
    /// <returns>
    /// The message that indicates a record does not exists.
    /// </returns>
    static TxtNotExist txtNotExist()
    {
        return "@SYS9779";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>CN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS221495</DeveloperDocumentation>
	<Label>@GLS221492</Label>
	<SingularLabel>@SYS98630</SingularLabel>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>CustInvoiceTable</TitleField1>
	<TitleField2>VATInvoiceDescTable</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsReceivable</Modules>
	<ReplacementKey>CustInvoiceTableIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATInvoiceDescTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATInvoiceDescTable</Name>
			<Label>@GLS60703</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATInvoiceDescTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VATInvoiceDescTable</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VATInvoiceDescIdRef_CN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustInvoiceTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustInvoiceTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VATInvoiceDescTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VATInvoiceDescTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceTable</Name>
					<Field>CustInvoiceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VATInvoiceDescTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VATInvoiceDescTable_CN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATInvoiceDescTable</Name>
					<Field>VATInvoiceDescTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>