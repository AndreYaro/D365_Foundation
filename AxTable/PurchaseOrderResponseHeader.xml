<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchaseOrderResponseHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchaseOrderResponseHeader extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>PurchaseOrderResponseHeader</c> record based on the RecId passed.
    /// </summary>
    /// <param name = "_responseHeaderRecId">The RecId to find.</param>
    /// <param name = "_update">If the select is for updating.</param>
    /// <returns>A <c>PurchaseOrderResponseHeader</c> record based on the RecId passed</returns>
    public static PurchaseOrderResponseHeader find(PurchaseOrderResponseHeaderRecId _responseHeaderRecId, boolean _update = false)
    {
        PurchaseOrderResponseHeader purchaseOrderResponseHeader;

        if (_responseHeaderRecId)
        {
            purchaseOrderResponseHeader.selectForUpdate(_update);

            select purchaseOrderResponseHeader
                where purchaseOrderResponseHeader.RecId == _responseHeaderRecId;
        }

        return purchaseOrderResponseHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByResponseId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>PurchaseOrderResponseHeader</c> record based on the ResponseId passed.
    /// </summary>
    /// <param name = "_responseId">The ResponseId to find.</param>
    /// <param name = "_update">If the select is for updating.</param>
    /// <returns>A <c>PurchaseOrderResponseHeader</c> record based on the ResponseId passed</returns>
    public static PurchaseOrderResponseHeader findByResponseId(PurchaseOrderResponseId _responseId, boolean _update = false)
    {
        PurchaseOrderResponseHeader purchaseOrderResponseHeader;

        if (_responseId)
        {
            purchaseOrderResponseHeader.selectForUpdate(_update);

            select purchaseOrderResponseHeader
                where purchaseOrderResponseHeader.ResponseId == _responseId;
        }

        return purchaseOrderResponseHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTableLastVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchaseOrderResponseHeader</c> record from the parameter record.
    /// </summary>
    /// <param name = "_purchTable">A <c>PurchTable</c> record.</param>
    public void initFromPurchTableLastVersion(PurchTable _purchTable)
    {
        PurchaseOrderResponseHeaderMap responseHeaderMap;

        responseHeaderMap.data(_purchTable.data());
        this.data(responseHeaderMap.data());

        this.setResponseId(_purchTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchaseOrderResponseHeaderHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchaseOrderResponseHeader</c> record from the parameter record.
    /// </summary>
    /// <param name = "_responseHeaderHistory">A <c>PurchaseOrderResponseHeaderHistory</c> record.</param>
    public void initFromPurchaseOrderResponseHeaderHistory(PurchaseOrderResponseHeaderHistory _responseHeaderHistory)
    {
        PurchaseOrderResponseHeaderMap  responseHeaderMap;
        responseHeaderMap.data(_responseHeaderHistory.data());
        this.data(responseHeaderMap.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderAccountName</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display VendName orderAccountName()
    {
        return VendTable::find(this.OrderAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccountName</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display VendName invoiceAccountName()
    {
        return VendTable::find(this.InvoiceAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResponseId</Name>
				<Source><![CDATA[
    private void setResponseId(PurchTable _purchTable)
    {
        this.ResponseId = strFmt('%1-R%2', _purchTable.PurchId, PurchaseOrderResponseHeader::getRequestNumber(_purchTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRequestNumber</Name>
				<Source><![CDATA[
    private static NumberOfRecords getRequestNumber(PurchTable _purchTable)
    {
        PurchaseOrderResponseHeader responseHeader;

        select count (RecId) from responseHeader
            where responseHeader.PurchId == _purchTable.PurchId;

        return responseHeader.RecId + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLatestResponseVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the latest purchase order response version for the currrent purchase order response.
    /// </summary>
    /// <param name = "_forUpdate">Determines if the record should be selected for update.</param>
    /// <returns><c>PurchaseOrderResponseVersion</c> record for the current purchase order response.</returns>
    public PurchaseOrderResponseVersion findLatestResponseVersion(boolean _forUpdate = false)
    {
        PurchaseOrderResponseVersion responseVersion;

        responseVersion.selectForUpdate(_forUpdate);

        select firstonly responseVersion order by VersionDateTime desc
            where responseVersion.PurchaseOrderResponseHeader == this.RecId;

        return responseVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        this.createResponseVersion();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createResponseVersion</Name>
				<Source><![CDATA[
    private void createResponseVersion()
    {
        PurchTableVersion purchTableVersion = PurchTableVersion::findLatest(this.PurchId, this.DataAreaId);

        VersioningDocument versioningPurchaseOrderResponse =
            VersioningPurchaseOrderResponse::newFromResponse(this.RecId,
                                                             purchTableVersion.RecId);

        versioningPurchaseOrderResponse.sendToVendor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareForEditing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does the necessary steps needed before an update happens on a Purchase Order Response.
    /// e.g. archiving the current version if necessary.
    /// </summary>
    public void prepareForEditing()
    {
        PurchaseOrderResponseVersion responseVersion
            = this.findLatestResponseVersion();

        if (responseVersion.ResponseState == PurchaseOrderResponseState::Pending)
        {
            ttsbegin;
            this.archiveExistingAndCreateNewVersion(responseVersion.PurchTableVersion);

            responseVersion = this.findLatestResponseVersion(true);
            responseVersion.ResponseState = PurchaseOrderResponseState::Editing;
            responseVersion.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>archiveExistingAndCreateNewVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Archives the current Purchase Order Response version and creates a new one.
    /// </summary>
    public void archiveExistingAndCreateNewVersion(PurchTableVersionRecId _purchTableVersionRecId)
    {
        PurchaseOrderResponseVersion responseVersion;

        VersioningDocument versioningPurchaseOrderResponse =
            VersioningPurchaseOrderResponse::newFromResponse(this.RecId,
                                                             _purchTableVersionRecId);

        versioningPurchaseOrderResponse.createApprovedVersion();
    }

]]></Source>
			</Method>
			<Method>
				<Name>originalVersionHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the first response version with the same PurchTableVersion as the current record.
    /// </summary>
    /// <returns>
    /// <c>PurchaseOrderResponseHeaderAllVersions</c> record for the first response version.
    /// </returns>
    /// <remarks>
    /// This will be the original purchase order version received from the purchaser.
    /// </remarks>
    public PurchaseOrderResponseHeaderAllVersions originalVersionHeader()
    {
        PurchaseOrderResponseHeaderAllVersions originalResponseHeader;

        select firstonly originalResponseHeader
            where originalResponseHeader.PurchTableVersion == this.findLatestResponseVersion().PurchTableVersion;

        return originalResponseHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExistingLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all existing lines related to the current header.
    /// </summary>
    public void deleteExistingLines()
    {
        PurchaseOrderResponseLine purchaseOrderResponseLine;

        delete_from purchaseOrderResponseLine
            where purchaseOrderResponseLine.PurchaseOrderResponseHeader == this.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rejectExistingLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reject all existing lines related to the current header.
    /// </summary>
    public void rejectExistingLines()
    {
        PurchaseOrderResponseLine purchaseOrderResponseLine;

        ttsbegin;
        update_recordset purchaseOrderResponseLine
           setting LineState = PurchaseOrderResponseLineState::Rejected
            where purchaseOrderResponseLine.PurchaseOrderResponseHeader == this.RecId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExistingAttachedDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all existing attached documents for the header and lines
    /// </summary>
    public void deleteExistingAttachedDocument()
    {
        this.deleteExistingAttachedDocumentOnHeader();
        this.deleteExistingAttachedDocumentOnLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExistingAttachedDocumentOnHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all existing attached documents for the header
    /// </summary>
    public void deleteExistingAttachedDocumentOnHeader()
    {
        DocuRef docuRef;

        ttsbegin;
        delete_from docuRef
            where docuRef.RefRecId == this.RecId
                && docuRef.RefTableId == tableNum(PurchaseOrderResponseHeader);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteExistingAttachedDocumentOnLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete all existing attached documents for the lines
    /// </summary>
    public void deleteExistingAttachedDocumentOnLines()
    {
        PurchaseOrderResponseLine purchaseOrderResponseLine;
        DocuRef docuRef;

        ttsbegin;
        delete_from docuRef
            exists join purchaseOrderResponseLine
                where purchaseOrderResponseLine.PurchaseOrderResponseHeader == this.RecId
                    && docuRef.RefTableId == tableNum(PurchaseOrderResponseLine)
                    && docuRef.RefRecId == purchaseOrderResponseLine.RecId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>revertToPreviousVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reverts the current response header to the previous version if it exists.
    /// </summary>
    public void revertToPreviousVersion()
    {
        PurchaseOrderResponseVersion responseVersion;

        select firstonly responseVersion order by VersionDateTime desc
            where
                responseVersion.PurchaseOrderResponseHeader == this.RecId;

        if (!responseVersion)
        {
            throw error("@SCM:PurchRespVersionMissing");
        }

        ttsbegin;

        VersioningDocument versioningPurchaseOrderResponse =
            VersioningPurchaseOrderResponse::newFromResponse(this.RecId,
                                                             responseVersion.PurchTableVersion);

        versioningPurchaseOrderResponse.revertToPreviousVersion();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateConfirmDlvDateInLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates Confirmed Delivery Date in lines that are being delivered.
    /// </summary>
    public void updateConfirmDlvDateInLines()
    {
        PurchaseOrderResponseLine responseLine;

        update_recordset responseLine
            setting ConfirmedDlv = this.ConfirmedDlv
                where responseLine.PurchaseOrderResponseHeader == this.RecId
                   && responseLine.Delivering                  == NoYesCombo::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowEdit_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Documents attached to response header can be edited if the response is in Editing state
    /// otherewise attachments are read only
    /// </summary>
    /// <returns>True if attachments should be editable otherwise false.</returns>
    public boolean docuAllowEdit_W()
    {
        PurchaseOrderResponseVersion responseVersion = this.findLatestResponseVersion();
        if (responseVersion.ResponseState == PurchaseOrderResponseState::Editing)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfLinesHaveAttachments</Name>
				<Source><![CDATA[
    private boolean checkIfLinesHaveAttachments()
    {
        boolean ret;
        PurchaseOrderResponseLine purchaseOrderResponseLine;
        DocuRef docuRef;

        select count(RecId) from purchaseOrderResponseLine
            where purchaseOrderResponseLine.PurchaseOrderResponseHeader == this.RecId
            exists join docuRef
                where docuRef.RefTableId == purchaseOrderResponseLine.TableId
                    && docuRef.RefRecId == purchaseOrderResponseLine.RecId;

        return purchaseOrderResponseLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasAttachments</Name>
				<Source><![CDATA[
    /// <summary>
    /// A Cached display method to return whether the record has attachments.
    /// </summary>
    /// <returns>True if the record has attachments; otherwise false.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display boolean hasAttachments()
    {
        return DocuRef::findTableIdRecId(this.DataAreaId, this.TableId, this.RecId).RecId != 0 || this.checkIfLinesHaveAttachments();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateResponseHeaderAndLinesConsumptionStateToConsumed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the consumption state of <c>PurchaseOrderResponseHeader</c> and its related <c>PurchaseOrderResponseLine</c> to consumed.
    /// </summary>
    public void updateResponseHeaderAndLinesConsumptionStateToConsumed()
    {
        ttsbegin;
        this.ConsumptionState = ConsumptionState::Consumed;
        this.update();

        PurchaseOrderResponseLine purchaseOrderResponseLine;
        update_recordset purchaseOrderResponseLine
        setting
            ConsumptionState = ConsumptionState::Consumed
        where purchaseOrderResponseLine.PurchaseOrderResponseHeader == this.RecId
            && purchaseOrderResponseLine.ConsumptionState == ConsumptionState::NotConsumed
            && (purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::Accepted
            || purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::AcceptedWithChanges);
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:PurchaseOrderResponseHeaderDevDoc</DeveloperDocumentation>
	<FormRef>PurchVendorPortalResponses</FormRef>
	<Label>@SCM:PurchaseOrderResponse</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>PurchId</TitleField1>
	<TitleField2>OrderAccount</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>ResponseIdx</PrimaryIndex>
	<ReplacementKey>ResponseIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchTable</Name>
			<Label>@SYS1653</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@SYS9455</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiscPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS25587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS9362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExternalReference</Name>
			<Label>@SYS21697</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendDlvModeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PurchIdVendor</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchEndDiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymMode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymMode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PurchStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendDlvTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EarliestDlvDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchTableConfirmedReceiptEarliestDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ConfirmedDlv</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchTableConfirmedReceiptDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ResponseId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchaseOrderResponseId</ExtendedDataType>
			<Label>@SCM:PurchaseOrderResponseId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorRef</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConsumptionState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ConsumptionState</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ResponseIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ResponseId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>PurchaseOrderResponseHeaderMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ConfirmedDlv</MapField>
					<MapFieldTo>ConfirmedDlv</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConsumptionState</MapField>
					<MapFieldTo>ConsumptionState</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>DeliveryPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent</MapField>
					<MapFieldTo>DiscPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DlvMode</MapField>
					<MapFieldTo>DlvMode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DlvTerm</MapField>
					<MapFieldTo>DlvTerm</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentDate</MapField>
					<MapFieldTo>DocumentDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EarliestDlvDate</MapField>
					<MapFieldTo>EarliestDlvDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceAccount</MapField>
					<MapFieldTo>InvoiceAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Payment</MapField>
					<MapFieldTo>Payment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymMode</MapField>
					<MapFieldTo>PaymMode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchId</MapField>
					<MapFieldTo>PurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchStatus</MapField>
					<MapFieldTo>PurchStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ResponseId</MapField>
					<MapFieldTo>ResponseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendorRef</MapField>
					<MapFieldTo>VendorRef</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymMode</Name>
					<Field>PaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Currency_PurchTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OrderVendor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>OrderAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InvoiceVendor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_PurchTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAccount</Name>
					<SourceEDT>VendInvoiceAccount</SourceEDT>
					<Field>InvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymTerm</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PaymTerm_PurchTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>CascadeRestricted</OnDelete>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchIdBase</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>