<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCORRejectsTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchCORRejectsTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    display ItemId itemId()
    {
        return PurchLine::findInventTransId(this.InventTransId).ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    display ItemName itemName()
    {
        return PurchLine::findInventTransId(this.InventTransId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveReject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the reject status to the <c>Resolved</c> status.
    /// </summary>
    void resolveReject()
    {
        ttsbegin;
        this.RejectStatus = PurchCORRejectStatus::Resolved;
        this.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record in the <c>PurchCORRejectsTable</c> table that is based on the specified
    /// parameters.
    /// </summary>
    /// <param name="_inventTransId">
    /// A unique identifier of the purchase line for which the reject will be created.
    /// </param>
    /// <param name="_rejectQty">
    /// The <c>Qty</c> field.
    /// </param>
    /// <param name="_notes">
    /// The <c>Notes</c> field.
    /// </param>
    static void createReject(TradeInventTransId _inventTransId,
                                    Qty                _rejectQty,
                                    Notes              _notes)
    {
        PurchCORRejectsTable    rejectsTable;
        PurchLine               purchLine = PurchLine::findInventTransId(_inventTransId);

        ttsbegin;
        rejectsTable.initValue();

        rejectsTable.PurchId        = purchLine.PurchId;
        rejectsTable.LineNum        = any2real(purchLine.LineNumber);
        rejectsTable.Qty            = _rejectQty;
        rejectsTable.Comment        = _notes;
        rejectsTable.RejectStatus   = PurchCORRejectStatus::Rejected;
        rejectsTable.InventTransId  = purchLine.InventTransId;
        rejectsTable.insert();
        ttscommit;

        if (rejectsTable.RecId)
        {
            PurchCORRejectsWorkflow::activatePurchCORRejectsTableWorkflow(rejectsTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record in the <c>PurchCORRejectsTable</c> table exists by using a
    /// <c>InventTransId</c> value.
    /// </summary>
    /// <param name="_inventTransId">
    /// The identifier of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    static boolean exist(InventTransId _inventTransId)
    {
        return (select firstonly RecId from purchCORRejectsTable
                    where purchCORRejectsTable.InventTransId == _inventTransId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRejectedPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a record with the <c>RejectStatus</c> field set to the <c>Rejected</c> enumeration
    /// value exists in the <c>PurchCORRejectsTable</c> table that is based on the <c>PurchLine</c> buffer.
    /// </summary>
    /// <param name="_purchLine">
    /// The associated <c>PurchLine</c> record of which to search.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    static boolean existRejectedPurchLine(PurchLine _purchLine)
    {
        return _purchLine.InventTransId
            && PurchCORPolicyTable::decentralized(_purchLine)
            && (select firstonly RecId from purchCORRejectsTable
                    where purchCORRejectsTable.InventTransId == _purchLine.InventTransId
                       && purchCORRejectsTable.RejectStatus  == PurchCORRejectStatus::Rejected).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record from the <c>PurchCORRejectsTable</c> table that is based on the record ID.
    /// </summary>
    /// <param name="_recId">
    /// The unique identifier for which to search.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>PurchCORRejectsTable</c> table.
    /// </returns>
    static PurchCORRejectsTable find(recId       _recId,
                                     boolean     _forUpdate = false )
    {
        PurchCORRejectsTable purchCORRejectsTable;

        purchCORRejectsTable.selectForUpdate(_forUpdate);

        select purchCORRejectsTable
            where purchCORRejectsTable.RecId == _recId;

        return purchCORRejectsTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record from the <c>PurchCORRejectsTable</c> table that is based on the <c>InventTransId</c>
    /// field.
    /// </summary>
    /// <param name="_inventTransId">
    /// The identifier for which to search.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>PurchCORRejectsTable</c> table.
    /// </returns>
    static PurchCORRejectsTable findTransId(InventTransId    _inventTransId,
                                            boolean          _forUpdate = false)
    {
        PurchCORRejectsTable  purchCORRejectsTable;

        purchCORRejectsTable.selectForUpdate(_forUpdate);

        select firstonly purchCORRejectsTable
            where purchCORRejectsTable.InventTransId == _inventTransId;

        return purchCORRejectsTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>PurchCORRejectsTable</c> workflow state for the COR: rejected line items resolve
    /// workflow.
    /// </summary>
    /// <param name="_purchCORRejectsRecId">
    /// The record ID of the <c>PurchCORRejectsTable</c> table.
    /// </param>
    /// <param name="_purchCORRejectsWorkflowState">
    /// A workflow state enumeration value to set on the <c>PurchCORRejectsTable</c> table.
    /// </param>
    static void setWorkflowState(recId                  _purchCORRejectsRecId,
                                 TradeWorkflowState     _purchCORRejectsWorkflowState)
    {
        PurchCORRejectsTable purchCORRejectsTable;

        ttsbegin;

        purchCORRejectsTable                = PurchCORRejectsTable::find(_purchCORRejectsRecId, true);
        purchCORRejectsTable.WorkflowState  = _purchCORRejectsWorkflowState;

        switch (_purchCORRejectsWorkflowState)
        {
            case TradeWorkflowState::Completed:
                purchCORRejectsTable.RejectStatus = PurchCORRejectStatus::Resolved;
                break;
        }

        purchCORRejectsTable.doUpdate();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS322892</DeveloperDocumentation>
	<FormRef>PurchCORRejectsListPage</FormRef>
	<Label>@SYS301752</Label>
	<ListPageRef>PurchCORRejectsListPage</ListPageRef>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>RejectStatus</TitleField1>
	<TitleField2>Qty</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>InventTransIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RejectStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchLine</Name>
			<Label>@SYS22957</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rejected</Name>
			<Label>@SYS784</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RejectStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Workflow</Name>
			<Label>@SYS103643</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkflowState</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PurchCORRejectComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ProductQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RejectStatus</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>PurchCORRejectStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowState</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>TradeWorkflowState</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RejectStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TransIdRel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>