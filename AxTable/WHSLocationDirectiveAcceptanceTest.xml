<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationDirectiveAcceptanceTest</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLocationDirectiveAcceptanceTest extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>duplicate</Name>
				<Source><![CDATA[
    internal WHSLocationDirectiveAcceptanceTest duplicate(WHSLocationDirectiveAcceptanceTestName _newName)
    {
        ttsbegin;

        WHSLocationDirectiveAcceptanceTest newAcceptanceTest;

        newAcceptanceTest.data(this);
        newAcceptanceTest.Name = _newName;
        newAcceptanceTest.RecId = 0;
        newAcceptanceTest.insert();

        WHSLocationDirectiveAcceptanceTestInventAdjustment inventAdjustment;
        while select inventAdjustment
            where inventAdjustment.AcceptanceTestRecId == this.RecId
        {
            WHSLocationDirectiveAcceptanceTestInventAdjustment inventAdjustmentNew;
            inventAdjustmentNew.data(inventAdjustment);
            inventAdjustmentNew.AcceptanceTestRecId = newAcceptanceTest.RecId;
            inventAdjustmentNew.insert();
        }

        ttscommit;

        return newAcceptanceTest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByName</Name>
				<Source><![CDATA[
    public static boolean existByName(WHSLocationDirectiveAcceptanceTestName _name)
    {
        return _name &&
               (select firstonly RecId from WHSLocationDirectiveAcceptanceTest
                    where WHSLocationDirectiveAcceptanceTest.Name == _name).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestContract</Name>
				<Source><![CDATA[
    internal WHSLocationDirectiveAcceptanceTestResultContract latestContract()
    {
        WHSLocationDirectiveAcceptanceTestResult result = this.latestResult();

        if (result)
        {                
            return WHSLocationDirectiveAcceptanceTestResultContract::createFromResult(result);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestResult</Name>
				<Source><![CDATA[
    internal WHSLocationDirectiveAcceptanceTestResult latestResult()
    {
        WHSLocationDirectiveAcceptanceTestResult result;

        select firstonly result
            order by CreatedDateTime desc
            where result.AcceptanceTestRecId == this.RecId;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestLog</Name>
				<Source><![CDATA[
    public display WHSLocationDirectiveAcceptanceTestLog latestLog()
    {
        WHSLocationDirectiveAcceptanceTestResult result = this.latestResult();

        if (result)
        {
            return result.Log;
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestStatus</Name>
				<Source><![CDATA[
    public display WHSLocationDirectiveAcceptanceTestStatus latestStatus()
    {
        WHSLocationDirectiveAcceptanceTestResult result = this.latestResult();

        if (result)
        {
            return result.Result;
        }

        return WHSLocationDirectiveAcceptanceTestStatus::NotStarted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestStatusImage</Name>
				<Source><![CDATA[
    public display WHSLocationDirectiveAcceptanceTestResultImage latestStatusImage()
    {
        WHSLocationDirectiveAcceptanceTestResult result = this.latestResult();

        if (result)
        {
            return result.resultImage();
        }
        
        ImageReference imageReference = ImageReference::constructForSymbol('');
        return imageReference.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal void run()
    {
        WHSLocationDirectiveAcceptanceTestRunner::executeAcceptanceTest(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runAll</Name>
				<Source><![CDATA[
    internal static void runAll()
    {
        WHSLocationDirectiveAcceptanceTest acceptanceTest;

        while select acceptanceTest
        {
            acceptanceTest.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        switch (_fieldName)
        {
            case fieldStr(WHSLocationDirectiveAcceptanceTest, ExpectedWMSLocationId):
                this.ExpectedLocProfileId = '';
                this.ExpectedWMSLocationRegEx = '';
                this.ExpectedZoneId = '';
                break;

            case fieldStr(WHSLocationDirectiveAcceptanceTest, ExpectedLocProfileId):
                this.ExpectedWMSLocationId = '';
                this.ExpectedWMSLocationRegEx = '';
                this.ExpectedZoneId = '';
                break;

            case fieldStr(WHSLocationDirectiveAcceptanceTest, ExpectedWMSLocationRegEx):
                this.ExpectedLocProfileId = '';
                this.ExpectedWMSLocationId = '';
                this.ExpectedZoneId = '';
                break;

            case fieldStr(WHSLocationDirectiveAcceptanceTest, ExpectedZoneId):
                this.ExpectedLocProfileId = '';
                this.ExpectedWMSLocationId = '';
                this.ExpectedWMSLocationRegEx = '';
                break;

            case fieldStr(WHSLocationDirectiveAcceptanceTest, WorkTransType):
                this.OrderNum = '';
                break;
        }

        super(_fieldName, _arrayIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOrderNumSupported</Name>
				<Source><![CDATA[
    internal boolean isOrderNumSupported()
    {
        switch (this.WorkTransType)
        {
            case WHSWorkTransType::Sales:
            case WHSWorkTransType::Purch:
            case WHSWorkTransType::ProdPick:
            case WHSWorkTransType::ProdPut:
            case WHSWorkTransType::QualityOrder:
            case WHSWorkTransType::TransferIssue:
            case WHSWorkTransType::TransferReceipt:
                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransType</Name>
				<Source><![CDATA[
    internal InventTransType inventTransType()
    {
        switch (this.WorkTransType)
        {
            case WHSWorkTransType::Sales:
                return InventTransType::Sales;

            case WHSWorkTransType::Purch:
                return InventTransType::Purch;

            case WHSWorkTransType::ProdPick:
            case WHSWorkTransType::ProdPut:
                return InventTransType::Production;

            case WHSWorkTransType::QualityOrder:
                return InventTransType::QualityOrder;

            case WHSWorkTransType::TransferIssue:
                return InventTransType::TransferOrderShip;

            case WHSWorkTransType::TransferReceipt:
                return InventTransType::TransferOrderReceive;
        }

        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfExpectedConditions</Name>
				<Source><![CDATA[
    private int numberOfExpectedConditions()
    {
        int expectedConditions = 0;

        if (this.ExpectedLocProfileId)
        {
            expectedConditions++;
        }
        if (this.ExpectedWMSLocationId)
        {
            expectedConditions++;
        }
        if (this.ExpectedWMSLocationRegEx)
        {
            expectedConditions++;
        }
        if (this.ExpectedZoneId)
        {
            expectedConditions++;
        }

        return expectedConditions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExpectedConditions</Name>
				<Source><![CDATA[
    private boolean checkExpectedConditions()
    {
        int expectedConditions = this.numberOfExpectedConditions();

        if (expectedConditions > 1)
        {
            return checkFailed("@WAX:LocationDirectiveAcceptanceTestMoreThanOneExpectedResult");
        } 
        else if (expectedConditions == 0)
        {
            return checkFailed("@WAX:LocationDirectiveAcceptanceTestNoExpectedResult");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkOrderNum</Name>
				<Source><![CDATA[
    private boolean checkOrderNum()
    {
        int expectedConditions = this.numberOfExpectedConditions();

        if (this.OrderNum &&
            !this.isOrderNumSupported())
        {
            return checkFailed(strFmt("@WAX:LocationDirectiveAcceptanceTestOrderNumNotSupported", this.WorkTransType));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super() &&
            this.checkExpectedConditions() &&
            this.checkOrderNum();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isImmediateReplenishmentSupported</Name>
				<Source><![CDATA[
    internal boolean isImmediateReplenishmentSupported()
    {
        return WHSLocDirTable::supportImmediateReplenishment(this.WorkType, this.WorkTransType);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>WHSLocationDirectiveAcceptanceTest</FormRef>
	<Label>@WAX:LocationDirectiveAcceptanceTestTests</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ReplacementKey>NameIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>When</Name>
			<Label>@WAX:LocationDirectiveAcceptanceTestWhen</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DispositionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocDirHintCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Then</Name>
			<Label>@WAX:LocationDirectiveAcceptanceTestThen</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExpectedWMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedWMSLocationRegEx</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedLocProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedZoneId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInactive</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Given</Name>
			<Label>@WAX:LocationDirectiveAcceptanceTestGiven</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@WAX1461</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>latestStatusImage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>latestStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WhenItem</Name>
			<Label>@WAX:LocationDirectiveAcceptanceTestItemToLocation</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSWorkTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExpectedWMSLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Label>@WAX:LocationDirectiveAcceptanceTestExactLocation</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocationDirectiveAcceptanceTestName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocationDirectiveAcceptanceTestDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSWorkType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LocDirHintCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocDirHintCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DispositionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDispositionCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsInactive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocationDirectiveAcceptanceTestInactive</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSLocationDirectiveAcceptanceTestInventLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExpectedLocProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocProfileId</ExtendedDataType>
			<Label>@WAX:LocationDirectiveAcceptanceTestLocationProfile</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExpectedWMSLocationRegEx</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocationDirectiveAcceptanceTestLocationRegEx</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOrderNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExpectedZoneId</Name>
			<AssetClassification>CustomerContent</AssetClassification>
			<ExtendedDataType>WhsZoneId</ExtendedDataType>
			<Label>@WAX:LocationDirectiveAcceptanceTestLocationZone</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<EDTRelation>Yes</EDTRelation>
			<NavigationPropertyMethodNameOverride>InventDim</NavigationPropertyMethodNameOverride>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventQualityOrderTableByOrderNum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventQualityOrderTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::QualityOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>QualityOrderId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTablePick</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProdTablePick</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::ProdPick</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTablePut</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProdTablePut</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::ProdPut</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::Sales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TransferOrderIssue</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TransferOrderIssue</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::TransferIssue</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TransferOrderReciept</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TransferOrderReceipt</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::TransferReceipt</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNum</Name>
					<Field>OrderNum</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>