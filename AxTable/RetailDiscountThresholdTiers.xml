<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDiscountThresholdTiers</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailDiscountThresholdTiers extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls methods appropriate to modified fields.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the field that is modified.
    /// </param>
    /// <remarks>
    ///    This method executes when any field in the table is modified.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        if (_fieldId == fieldNum(RetailDiscountThresholdTiers, DiscountValue))
        {
            this.validateDiscountValue();
        }
        else if (_fieldId == fieldNum(RetailDiscountThresholdTiers, AmountThreshold))
        {
            this.validateAmountThreshold();
        }
        else if (_fieldId == fieldNum(RetailDiscountThresholdTiers,DiscountMethod))
        {
            if (this.DiscountMethod == RetailThresholdDiscountMethod::DiscountApplyingLines)
            {
                this.DiscountValue = 0;
            }
        }

        super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDiscountValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the discount value is between 0 to 100 when type is percent
    /// </summary>
    /// <returns>
    /// true if the range is valid; otherwise, false.
    /// </returns>
    private boolean validateDiscountValue()
    {
        boolean ret = true;

        if (this.DiscountMethod == RetailThresholdDiscountMethod::PercentOff)
        {
            ret = RetailPricingConfigurationValidator::isValidDiscountPercentage(this.DiscountValue);
        }
        else if (this.DiscountMethod == RetailThresholdDiscountMethod::AmountOff)
        {
            ret = RetailPricingConfigurationValidator::isValidDiscountAmount(this.DiscountValue);

            if (this.DiscountValue > this.AmountThreshold)
            {
                ret = checkFailed("@Retail:ThresholdDiscountAmountExceeded");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAmountThreshold</Name>
				<Source><![CDATA[
    private boolean validateAmountThreshold()
    {
        return RetailPricingConfigurationValidator::isPositiveAmount(this.AmountThreshold);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super() && this.validateDiscountValue() && this.validateAmountThreshold();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDiscountLineThresholdApplying</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy data from original RetailDiscountLineThresholdApplying into current RetailDiscountLineThresholdApplying.
    /// </summary>
    /// <param name = "_origDiscountThresholdTiers">The original RetailDiscountThresholdTiers</param>
    internal void copyDiscountLineThresholdApplying(RetailDiscountThresholdTiers _origDiscountThresholdTiers)
    {
        RetailDiscountLineThresholdApplying thresholdApplyingLine;
        RetailDiscountLineThresholdApplying thresholdApplyingLineNew;

        while select thresholdApplyingLine
            where thresholdApplyingLine.Tier == _origDiscountThresholdTiers.RecId
                && thresholdApplyingLine.OfferId == _origDiscountThresholdTiers.OfferId
                && thresholdApplyingLine.IsDiscountApplyingLine == NoYes::Yes
        {
            thresholdApplyingLineNew.clear();
            thresholdApplyingLineNew.data(thresholdApplyingLine);
            thresholdApplyingLineNew.initValue();
            thresholdApplyingLineNew.OfferId = this.OfferId;
            thresholdApplyingLineNew.Tier = this.RecId;
            thresholdApplyingLineNew.insert();

            thresholdApplyingLineNew.copyGroupMemberLineInternal(thresholdApplyingLine.groupMemberLine(), true);
            thresholdApplyingLineNew.copyRetailDiscountApplicabilityRuleInternal(thresholdApplyingLine);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@REX1164</DeveloperDocumentation>
	<Label>@REX1163</Label>
	<TitleField1>OfferId</TitleField1>
	<TitleField2>AmountThreshold</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Merchandising</Modules>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailDiscountLineThresholdApplying</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>RetailDiscountThresholdTiers</Relation>
			<Table>RetailDiscountLineThresholdApplying</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfferId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfferId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DiscountMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailThresholdDiscountMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscountValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfferId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOfferIdEx3</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OfferIdAmountThreshold</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OfferId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AmountThreshold</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPeriodicDiscount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailPeriodicDiscount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OfferId</Name>
					<Field>OfferId</Field>
					<RelatedField>OfferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>OfferIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>