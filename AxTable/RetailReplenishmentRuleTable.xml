<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailReplenishmentRuleTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailReplenishmentRuleTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPercentage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the percent based on the weight.
    /// </summary>
    /// <param name="_weightField">
    /// Field, which weight should be taken from.
    /// </param>
    /// <param name="_percentField">
    /// Field, where percent should be calculated.
    /// </param>
    private void calcPercentage(DictField _weightField, DictField _percentField)
    {
        RetailReplenishmentRuleLines    tReplenishmentLines;
        real                            rWeight;

        rWeight = this.GetWeight(_weightField);

        ttsbegin;
        while select forupdate tReplenishmentLines
            where tReplenishmentLines.RuleId == this.RuleId
        {
            if (tReplenishmentLines.(_weightField.id()))
            {
                if (rWeight)
                    tReplenishmentLines.(_percentField.id()) = (tReplenishmentLines.(_weightField.id()) / rWeight) * 100;
                else
                    tReplenishmentLines.(_percentField.id()) = 100;
            }
            else
            {
                tReplenishmentLines.(_percentField.id()) = 0.0;
            }

            tReplenishmentLines.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPercentages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the default percentage and updates the replenishment lines.
    /// </summary>
    void calcPercentages()
    {
        this.calcPercentage(new DictField(tableNum(RetailReplenishmentRuleLines), fieldNum(RetailReplenishmentRuleLines, DefaultWeight)),
                            new DictField(tableNum(RetailReplenishmentRuleLines), fieldNum(RetailReplenishmentRuleLines, DefaultPercent)));

        this.calcPercentage(new DictField(tableNum(RetailReplenishmentRuleLines), fieldNum(RetailReplenishmentRuleLines, QtyWeight)),
                            new DictField(tableNum(RetailReplenishmentRuleLines), fieldNum(RetailReplenishmentRuleLines, QtyPercent)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of weight for allocating quantities.
    /// </summary>
    /// <param name="_weightField">
    /// Field, which total weight should be calculated by.
    /// </param>
    /// <returns>
    /// Total weight for allocating quantities.
    /// </returns>
    private RetailWeightEx1 getWeight(DictField _weightField)
    {
        RetailReplenishmentRuleLines   tReplenishmentLines;

        if (_weightField.id() == fieldNum(RetailReplenishmentRuleLines, QtyWeight))
        {
            select sum(QtyWeight) from tReplenishmentLines
                group by RuleId
                where tReplenishmentLines.RuleId == this.RuleId;
        }
        else if (_weightField.id() == fieldNum(RetailReplenishmentRuleLines, DefaultWeight))
        {
            select sum(DefaultWeight) from tReplenishmentLines
            group by RuleId
            where tReplenishmentLines.RuleId == this.RuleId;
        }

        return tReplenishmentLines.(_weightField.id());
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailReplenishmentRuleTable</c> table.
    /// </summary>
    /// <param name="_sRuleId">
    /// The ID of a replenishment rule.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailReplenishmentRuleTable</c> record if found; otherwise, an empty record.
    /// </returns>
    public static RetailReplenishmentRuleTable find(RetailReplenishmentRuleId _sRuleId, boolean _forUpdate = false)
    {
        RetailReplenishmentRuleTable   tfshReplenishmentTable;

        if (_sRuleId)
        {
            tfshReplenishmentTable.selectForUpdate(_forUpdate);

            select firstonly tfshReplenishmentTable
                index hint RuleIdx
                where tfshReplenishmentTable.RuleId == _sRuleId;
        }

        return tfshReplenishmentTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET6131</DeveloperDocumentation>
	<Label>@RET773</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RuleId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RuleIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>RuleIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailReplenishmentRuleLines</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailReplenishmentRuleLines</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDescriptionEx1</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplenishmentRuleId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RuleIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RuleId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>