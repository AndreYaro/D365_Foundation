<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppFlowStep</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSMobileAppFlowStep extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSMobileAppFlowStep find(
        WHSMenuItemName      _menuItemName,
        WHSMobileAppStepId   _stepId,
        boolean              _update = false)
    {
        WHSMobileAppFlowStep mobileAppFlowStep;

        // By design, the menuItemName of default mobile step is empty.
        if (_stepId)
        {
            mobileAppFlowStep.selectForUpdate(_update);

            select firstonly mobileAppFlowStep
                where mobileAppFlowStep.MenuItemName == _menuItemName
                   && mobileAppFlowStep.StepId  == _stepId;
        }

        return mobileAppFlowStep;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static WHSMobileAppFlowStep findRecId(RecId _recId, boolean _forUpdate = false)
    {
        WHSMobileAppFlowStep mobileAppFlowStep;

        if (_recId)
        {
            mobileAppFlowStep.selectForUpdate(_forUpdate);

            select firstonly mobileAppFlowStep
                where mobileAppFlowStep.RecId == _recId;
        }

        return mobileAppFlowStep;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDefaultFlowStep</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean isDefaultFlowStep()
    {
        return !this.MenuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelatedTextTyps</Name>
				<Source><![CDATA[
    private container getRelatedTextTyps()
    {
        return [WHSMobileAppTextType::StepConfirmInstruction,
                WHSMobileAppTextType::StepConfirmTitle,
                WHSMobileAppTextType::StepEnterValueInstruction,
                WHSMobileAppTextType::StepEnterValueTitle,
                WHSMobileAppTextType::StepDescription];
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRelatedTexts</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void deleteRelatedTexts(LanguageId _languageId)
    {
        WHSMobileAppText mobileAppText;

        ttsbegin;

        delete_from mobileAppText
            where mobileAppText.RefRecId == this.RecId
                && (!_languageId || mobileAppText.LanguageId == _languageId)
                && mobileAppText.Type in this.getRelatedTextTyps();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRelatedTexts</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean existRelatedTexts(LanguageId _languageId)
    {
        WHSMobileAppText mobileAppText;

        select firstonly RecId from mobileAppText
            where mobileAppText.RefRecId == this.RecId
                && (!_languageId || mobileAppText.LanguageId == _languageId)
                && mobileAppText.Type in this.getRelatedTextTyps();

        return mobileAppText.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existOverridingSteps</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean existOverridingSteps()
    {
        if (!this.isDefaultFlowStep())
        {
            return false;
        }

        WHSMobileAppFlowStep mobileAppFlowStep;

        select firstonly RecId from mobileAppFlowStep
            where mobileAppFlowStep.StepId == this.StepId
               && mobileAppFlowStep.MenuItemName != '';

        return mobileAppFlowStep.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFlowStep</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSMobileAppFlowStep copyFlowStep(WHSMenuItemName _menuItemName, WHSMobileAppFlowStep _sourceFlowStep)
    {
        WHSMobileAppFlowStep flowStep = WHSMobileAppFlowStep::find(_menuItemName, _sourceFlowStep.StepId);
        if (!flowStep)
        {
            flowStep.MenuItemName = _menuItemName;
            flowStep.StepId = _sourceFlowStep.StepId;
            flowStep.StepIcon = _sourceFlowStep.StepIcon;
            flowStep.insert();
        }

        return flowStep;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllStepsRecIdForOneFlow</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static Set getAllStepsRecIdForOneFlow(WHSMenuItemName _menuItemName, LanguageId _languageId)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(WHSMobileAppFlowStep));

        if (_menuItemName)
        {
            qbds.addRange(fieldNum(WHSMobileAppFlowStep, MenuItemName)).value(queryValue(_menuItemName));
        }
        qbds.addRange(fieldNum(WHSMobileAppFlowStep, MenuItemName)).value(SysQuery::valueEmptyString());

        qbds.addOrderByField(fieldNum(WHSMobileAppFlowStep, MenuItemName), SortOrder::Ascending);

        WHSRFMenuItemTable menuItem = WHSRFMenuItemTable::find(_menuItemName);
        WHSWorkExecuteMode workExecuteMode = WHSRFMenuItemTable::getWHSWorkExecuteMode(menuItem);
        WHSMobileAppFlowTable mobileAppFlow = WHSMobileAppFlowTable::find(workExecuteMode);

        SetEnumerator stepsEnumerator = Set::create(mobileAppFlow.Steps).getEnumerator();
        while (stepsEnumerator.moveNext())
        {
            qbds.addRange(fieldNum(WHSMobileAppFlowStep, StepId)).value(stepsEnumerator.current());
        }

        QueryBuildDataSource qbdsMobileAppText = qbds.addDataSource(tableNum(WHSMobileAppText));
        qbdsMobileAppText.joinMode(JoinMode::ExistsJoin);
        qbdsMobileAppText.addLink(fieldNum(WHSMobileAppFlowStep, RecId), fieldNum(WHSMobileAppText, RefRecId));
        qbdsMobileAppText.addRange(fieldNum(WHSMobileAppText, LanguageId)).value(queryValue(_languageId));
        qbdsMobileAppText.addRange(fieldNum(WHSMobileAppText, Type)).value(queryValue(WHSMobileAppTextType::StepEnterValueTitle));

        Map stepIdRecIdMap = new Map(Types::String, Types::Int64);
        queryRun queryRun = new queryRun(query);
        while (queryRun.next())
        {
            WHSMobileAppFlowStep flowStep = queryRun.get(tableNum(WHSMobileAppFlowStep));
            stepIdRecIdMap.insert(flowStep.StepId, flowStep.RecId);
        }

        return stepIdRecIdMap.valueSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDetourMenuItems</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true), Hookable(false)]
    internal display str displayDetourMenuItems()
    {
        const str Separator = ', ';
        str detourMenuItemNames;
        WHSMobileAppFlowStepDetour mobileAppFlowStepsDetour;
        
        while select MenuItemName from mobileAppFlowStepsDetour
            where  mobileAppFlowStepsDetour.MobileAppFlowStep == this.RecId
        {
            if (detourMenuItemNames)
            {
                detourMenuItemNames += Separator;
            }

            detourMenuItemNames += mobileAppFlowStepsDetour.MenuItemName;
        }

        return detourMenuItemNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promotedFields</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal List promotedFields()
    {
        List promotedFields = new List(Types::Record);

        WHSMobileAppFlowStepPromotedFieldSetup promotedFieldSetup;

        while select promotedFieldSetup
            order by promotedFieldSetup.SeqNum asc
            where promotedFieldSetup.MobileAppFlowStep == this.RecId
        {
            promotedFields.addEnd(promotedFieldSetup);
        }

        return promotedFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPromotedFields</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true), Hookable(false)]
    internal display str displayPromotedFields()
    {
        const str Separator = ', ';
        str promotedFieldNames;
        WHSMobileAppFlowStepPromotedFieldSetup promotedFieldSetup;

        while select promotedFieldSetup
            order by promotedFieldSetup.SeqNum asc
            where  promotedFieldSetup.MobileAppFlowStep == this.RecId
        {
            if (promotedFieldNames)
            {
                promotedFieldNames += Separator;
            }
            
            promotedFieldNames += promotedFieldSetup.displayFieldName();
        }
        
        return promotedFieldNames;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>MenuItemName</TitleField1>
	<TitleField2>StepId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>MenuItemStepIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>MenuItemStepIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MenuItemName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>WHSMenuItemName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StepId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>WHSMobileAppStepId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StepIcon</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>WHSMobileAppStepIcon</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MenuItemStepIdx</Name>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MenuItemName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StepId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSRFMenuItemTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSRFMenuItemTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MenuItemName</Name>
					<SourceEDT>WHSMenuItemName</SourceEDT>
					<Field>MenuItemName</Field>
					<RelatedField>MenuItemName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>