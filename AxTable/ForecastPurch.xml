<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ForecastPurch</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ForecastPurch extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountClearingLedgerDimension</Name>
				<Source><![CDATA[
    LedgerDimensionDefaultAccount accountClearingLedgerDimension()
    {
        // <GEERU>
        #isoCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
            && this.postingProfile_RU())
        {
            return VendLedgerAccounts::clearingLedgerDimension(this.invoiceAccount(), this.postingProfile_RU());
        }
        // </GEERU>
        return VendLedgerAccounts::clearingLedgerDimension(this.invoiceAccount(), VendParameters::find().PostingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountItemLedgerDimensionParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>InventPostingAccountItemLedgerDimensionParameters</c> instance which is used for retrieving the ledger dimension.
    /// </summary>
    /// <returns>An <c>InventPostingAccountItemLedgerDimensionParameters</c> instance.</returns>
    protected InventPostingAccountItemLedgerDimensionParameters accountItemLedgerDimensionParameters(InventAccountType _inventAccountType)
    {
        InventPostingAccountItemLedgerDimensionParameters parameters = InventPostingAccountItemLedgerDimensionParameters::construct();

        parameters.AccountType = _inventAccountType;
        parameters.ItemId = this.ItemId;
        parameters.ItemGroup = this.ItemGroupId;
        parameters.ItemCategory = 0; // If a category relation is added to the table it can be supplied here
        parameters.AccountNum = this.VendAccountId;
        parameters.AccountGroup = this.VendGroupId;
        parameters.TaxGroup = this.TaxGroupId;

        return parameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountFromInventAccountType</Name>
				<Source><![CDATA[
    private LedgerDimensionDefaultAccount accountFromInventAccountType(InventAccountType _inventAccountType)
    {
        InventPostingAccountItemLedgerDimensionParameters parameters = this.accountItemLedgerDimensionParameters(_inventAccountType);
        // <GEERU>
        #isoCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            parameters.InventDim_RU = this.inventDim();
        }
        // </GEERU>

        return  InventPosting::accountItemLedgerDimensionFromParameters(parameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountConsumptionLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the default account for the purchase order consumption from the inventory posting profile.
    /// </summary>
    /// <returns>
    ///    The default account.
    /// </returns>
    public LedgerDimensionDefaultAccount accountConsumptionLedgerDimension()
    {
        return this.accountFromInventAccountType(InventAccountType::PurchConsump);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountDiscLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the default account for the purchase order discount from the inventory posting profile.
    /// </summary>
    /// <returns>
    ///    The default account.
    /// </returns>
    public LedgerDimensionDefaultAccount accountDiscLedgerDimension()
    {
        return this.accountFromInventAccountType(InventAccountType::PurchDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountReceiptLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the default account for the purchase order receipt from the inventory posting profile.
    /// </summary>
    /// <returns>
    ///    The default account.
    /// </returns>
    public LedgerDimensionDefaultAccount accountReceiptLedgerDimension()
    {
        // <GCN>
        if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        {
            InventPostingAccountItemLedgerDimensionParameters searchParameter = this.accountItemLedgerDimensionParameters(InventAccountType::PurchReceipt);
            searchParameter.SiteRelation = InventPostingExtendParm_CN::constructInventDim(this.inventDim()).parmInventSiteId();

            return InventPosting::accountItemExtendParmFromParameter_CN(searchParameter);
        }
        // </GCN>
        
        return  this.accountFromInventAccountType(InventAccountType::PurchReceipt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountVendLedgerDimension</Name>
				<Source><![CDATA[
    LedgerDimensionDefaultAccount accountVendLedgerDimension(PostingProfile postingProfile = '')
    {
        // <GEERU>
        #isoCountryRegionCodes
        // </GEERU>
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
            && this.postingProfile_RU())
        {
            return VendLedgerAccounts::summaryLedgerDimension(this.VendAccountId, this.postingProfile_RU());
        }
        // </GEERU>
        return VendLedgerAccounts::summaryLedgerDimension(this.VendAccountId,postingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcGrossAmount</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public Amount calcGrossAmount(Qty qty = this.PurchQty)
    {
        return this.salesPurchLineInterface().calcGrossAmount(qty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmount</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public Amount calcLineAmount(Qty qty = this.PurchQty)
    {
        return this.salesPurchLineInterface().calcLineAmount(qty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineDisc</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public DiscAmount calcLineDisc(Qty qty = this.PurchQty)
    {
        return this.salesPurchLineInterface().calcLineDisc(qty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPrice2LineAmount</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public AmountCur calcPrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation)
    {
        return this.salesPurchLineInterface().calcPrice2LineAmount(_qty, _forceLineAmountCalculation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcQtyOrdered</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public InventQty calcQtyOrdered(Qty   purchQty  = this.PurchQty)
    {
        return this.salesPurchLineInterface().calcQtyOrdered(purchQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditDisc</Name>
				<Source><![CDATA[
    // This method is called when setting disc fields
    boolean canEditDisc()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventDimCombination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the inventory dimension combination is correct.
    /// </summary>
    /// <returns>
    /// true if the combination is correct; otherwise, false.
    /// </returns>
    public boolean checkInventDimCombination()
    {
        if (this.ItemId)
        {
            return this.inventDim().validateWriteInventDimCombination(this.ItemId);
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the specified inventory status dimension value is valid.
    /// </summary>
    /// <returns>
    ///    true if the specified inventory status dimension value is valid; otherwise, false.
    /// </returns>
    public boolean checkInventStatus()
    {
        return WHSInventStatus::allowCreateForecast(this.inventDim().InventStatusId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkModel</Name>
				<Source><![CDATA[
    boolean checkModel()
    {
        return ForecastModel::checkModel(this.ModelId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProductDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks all the product dimensions.
    /// </summary>
    /// <returns>
    /// true if the product dimensions are correct; otherwise, false.
    /// </returns>
    boolean checkProductDim()
    {
        boolean ok = true;

        Enumerator enum = InventProductDimension::getEnumeratorForEnabledDimensions();
        while (enum.moveNext())
        {
            ok = ok && this.checkProductDimension(enum.current());
        }

        ok = ok && this.checkInventDimCombination();

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProductDimension</Name>
				<Source><![CDATA[
    private boolean checkProductDimension(InventProductDimension _productDimension)
    {
        if (this.ItemId)
        {
            InventTable inventTable = this.inventTable();
            if (_productDimension.isActiveForItem(inventTable))
            {
                InventDim inventDim = InventDim::find(this.InventDimId);
                anytype value = inventDim.(_productDimension.parmInventDimFieldId());
                if (value)
                {
                    return _productDimension.checkValueForItem(inventTable, value);
                }

                if (! this.ItemAllocateId)
                {
                    return checkFailed(strFmt("@SYS73929", _productDimension.label()));
                }
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingPeriod</Name>
				<Source><![CDATA[
    ClearingPeriod clearingPeriod()
    {
        VendTable       vendTable;
        VendGroup       vendGroup;

        if (this.VendAccountId)
        {
            vendTable= this.vendTable();

            return vendTable.clearingPeriod();
        }

        if (this.VendGroupId)
        {
            vendGroup = this.vendGroup();

            return vendGroup.clearingPeriod();
        }

        return VendParameters::find().Due2Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a dimension set that can be applied to the <c>ForecastPurch.dimension</c> field.
    /// </summary>
    /// <param name="_dimension">
    ///    A dimension set that should be applied to the <c>ForecastPurch.dimension</c> field.
    /// </param>
    /// <param name="_dimensionCopy">
    ///    A <c>dimensionCopy</c> object previously instantiated using the current <c>ForecastPurch</c>
    ///    buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that can be applied to the <c>ForecastPurch.dimension</c> field.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>
    public DimensionDefault copyDimension(DimensionDefault _dimension, DimensionCopy _dimensionCopy = DimensionCopy::newFromTable(this, CompanyInfo::findDataArea(curext()).RecId))
    {
        return _dimensionCopy.copy(_dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defBudget</Name>
				<Source><![CDATA[
    ForecastPurch defBudget()
    {
        ForecastPurch forecastPurch;

        return forecastPurch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.BudgetMap::deleting();

        super();

        this.BudgetMap::deleted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>derived</Name>
				<Source><![CDATA[
    display ForecastDerived derived()
    {
        return (this.ExpandId ? NoYes::Yes: NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    DiscAmount discAmount()
    {
        return this.DiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    DiscPct  discPercent()
    {
        return this.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grossAmount</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public edit ForecastGrossAmount grossAmount(boolean set = false, AmountCur grossAmount = 0)
    {
        return this.salesPurchLineInterface().grossAmount(set, grossAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inclTax</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public boolean inclTax()
    {
        return this.salesPurchLineInterface().inclTax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromForecastModel</Name>
				<Source><![CDATA[
    void initFromForecastModel()
    {
        ForecastModel   forecastModel   = ForecastModel::find(HeadingSub::Heading,this.ModelId);

        if (! forecastModel)
            return;

        this.Cov          = forecastModel.Cov;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    void initFromInventTable()
    {
        InventTable         inventTable         = InventTable::find(this.ItemId);
        InventTableModule   inventTableModule   = this.inventTableModule();

        if (!inventTable)
        {
            return;
        }

        this.ItemGroupId            = inventTable.itemGroupId();
        this.PurchUnitId            = inventTableModule.UnitId;
        this.TaxItemGroupId         = inventTableModule.TaxItemGroupId;
        this.Comment                = inventTable.defaultProductName();
        this.DefaultDimension       = this.mergeDimension(VendTable::find(this.VendAccountId).DefaultDimension, inventTable.DefaultDimension);

        this.initProductDimensions(inventTable);
        this.initDimensionsSpecificDefaulting(inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProductDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the product dimensions.
    /// </summary>
    /// <param name = "_inventTable">The item record; optional.</param>
    public void initProductDimensions(InventTable _inventTable = this.inventTable(this.ItemId))
    {
        if (_inventTable)
        {
            InventDim inventDimLocal = this.inventDim();
            inventDimLocal.initProductDimensionsFromInventTable(_inventTable, inventDimLocal);
            this.InventDimId = InventDim::findOrCreate(inventDimLocal).InventDimId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDimensionsSpecificDefaulting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes dimension dependent fields.
    /// </summary>
    /// <param name = "_inventTable">The item record; optional.</param>
    private void initDimensionsSpecificDefaulting(InventTable _inventTable = this.inventTable(this.ItemId))
    {
        InventDim   inventDim = InventDim::find(this.InventDimId);

        if (!InventDistinctProductValidator::construct().isDistinctProductFullySpecified(this.ItemId, inventDim))
        {
            return;
        }

        inventDim.initFromInventTable(_inventTable, InventItemOrderSetupType::Purch, inventDim);

        this.setInventDimIdFromInventDim(inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromItemGroup</Name>
				<Source><![CDATA[
    void initFromItemGroup()
    {
        InventItemGroup itemGroup   = InventItemGroup::find(this.ItemGroupId);

        if (! itemGroup)
            return;

        if (this.ItemGroupId != InventTable::find(this.ItemId).itemGroupId())
        {
            this.ItemId = '';
        }

        this.ItemAllocateId = itemGroup.StandardItemAllocateId;
        this.Comment        = itemGroup.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDisc</Name>
				<Source><![CDATA[
    void initFromPriceDisc(PriceDisc_Price priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy = null, boolean _initDateFields = true)
    {
        this.PurchPrice         = priceDisc.price();
        this.PriceUnit          = priceDisc.priceUnit();
        this.PurchMarkup        = priceDisc.priceMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendGroup</Name>
				<Source><![CDATA[
    void initFromVendGroup()
    {
        VendGroup vendGroup = VendGroup::find(this.VendGroupId);

        if (! vendGroup)
            return;

        if (this.VendGroupId != VendTable::find(this.VendAccountId).VendGroup)
            this.VendAccountId = '';

        this.Comment    = vendGroup.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    void initFromVendTable()
    {
        VendTable vendTable = this.vendTable();

        if (! vendTable)
            return;

        this.VendGroupId        = vendTable.VendGroup;
        this.TaxGroupId         = vendTable.TaxGroup;
        this.Comment            = vendTable.name();
        this.Currency           = vendTable.Currency;
        this.DefaultDimension   = this.mergeDimension(vendTable.DefaultDimension, InventTable::find(this.ItemId).DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();
        this.BudgetMap::initBudgetValues();

        this.initFromInventTable();
        this.initFromItemGroup();
        this.initFromVendTable();
        this.initFromVendGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void insert()
    {
        this.BudgetMap::inserting();

        super();

        this.BudgetMap::inserted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim(boolean _forUpdate = false)
    {
        return InventDim::find(this.InventDimId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventProfileType_RU</Name>
				<Source><![CDATA[
    InventProfileType_RU inventProfileType_RU()
    {
        InventProfileType_RU inventProfileType;
        inventProfileType = this.inventDim().inventProfile_RU().InventProfileType;
        if (inventProfileType == InventProfileType_RU::NotSpecified)
        {
            inventProfileType = InventProfileType_RU::General;
        }
        return inventProfileType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    InventTable inventTable(
        ItemId  _itemId     = this.ItemId,
        boolean _forUpdate  = false)
    {
        return InventTable::find(_itemId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableModule</Name>
				<Source><![CDATA[
    InventTableModule inventTableModule()
    {
        return InventTableModule::find(this.ItemId,ModuleInventPurchSales::Purch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount</Name>
				<Source><![CDATA[
    VendAccount invoiceAccount()
    {
        return this.vendTable().InvoiceAccount ? this.vendTable().InvoiceAccount : this.VendAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCategoryBased</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the order line is category based.
    /// </summary>
    /// <returns>
    ///    Always false.
    /// </returns>
    /// <remarks>
    ///    The category does not apply for forecast lines.
    /// </remarks>
    [Hookable(false), Wrappable(false)]
    public boolean isCategoryBased()
    {
        return this.salesPurchLineInterface().isCategoryBased();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemLineDisc</Name>
				<Source><![CDATA[
    LineDiscCode itemLineDisc()
    {
        return this.inventTable().purchLineDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    display ItemName itemName()
    {
        return InventTable::find(this.ItemId).itemName(InventDim::find(this.InventDimId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDisc</Name>
				<Source><![CDATA[
    LineDiscCode lineDisc()
    {
        return this.vendTable().LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInventDim2Dimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides default <c>ForecastPurch.dimension</c> values, depending on the <c>InventDim</c> record
    ///    buffer values.
    /// </summary>
    /// <param name="_newInventDim">
    ///    The <c>InventDim</c> record buffer linked to the current <c>ForecastPurch</c> record buffer.
    /// </param>
    /// <param name="_oldInventDim">
    ///    The <c>InventDim</c> record buffer that was previously linked to the current <c>ForecastPurch</c>
    ///    record buffer.
    /// </param>
    public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
    {
        _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    ///    field on this table and the specified dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    The first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    The second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was previously initialized by using the current buffer;
    ///    optional.
    /// </param>
    /// <returns>
    ///    A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    ///    this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when merging.
    ///    Additionally, the defaulting entity specifier will be considered.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ForecastPurch, AllocateMethod):
                this.BudgetMap::setAfterAllocateMethod();
                break;

            case fieldNum(ForecastPurch, ModelId):
                this.initFromForecastModel();
                break;

            case fieldNum(ForecastPurch, Amount):
                this.salesPurchLineInterface().lineAmountModified();
                break;

            case fieldNum(ForecastPurch, PurchUnitId):
            case fieldNum(ForecastPurch, PurchQty):
                this.InventQty  = this.calcQtyOrdered();
                break;

            case fieldNum(ForecastPurch, Currency):
                this.PurchPrice = 0;
                this.PurchMarkup= 0;
                break;

            case fieldNum(ForecastPurch, VendAccountId):
                this.initFromVendTable();
                break;

            case fieldNum(ForecastPurch, ItemGroupId):
                this.initFromItemGroup();
                break;

            case fieldNum(ForecastPurch, VendGroupId):
                this.initFromVendGroup();
                break;

            case fieldNum(ForecastPurch, StartDate):
                this.salesPurchLineInterface().setPriceAgreement(null);
                break;

            case fieldNum(ForecastPurch, ItemId):
                this.initFromInventTable();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedProductDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a price and discount according to agreements.
    /// </summary>
    /// <param name="_inventDim">
    /// A <c>InventDim</c> record that is used to find price agreements.
    /// </param>
    /// <param name="_dimFieldId">
    /// A <c>fieldId</c> value of an <c>InventDim</c> field that is used to determine whether price
    /// agreements must be used.
    /// </param>
    /// <param name="_inventDimGroupSetup">
    /// An instance of the <c>InventDimGroupSetup</c> class to provide information about the dimension
    /// setup.
    /// </param>
    /// <returns>
    /// true if the line was updated; otherwise, false.
    /// </returns>
    public boolean modifiedProductDim(
        InventDim                           _inventDim,
        fieldId                             _dimFieldId,
        InventDimGroupSetup                 _inventDimGroupSetup)
    {
        if (InventDim::mustUseFieldPurchPriceDisc(_dimFieldId, _inventDimGroupSetup))
        {
            this.salesPurchLineInterface().setPriceAgreement(_inventDim);
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moduleType</Name>
				<Source><![CDATA[
    ModuleInventPurchSales moduleType()
    {
        return ModuleInventPurchSales::Purch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeCovPlanned</Name>
				<Source><![CDATA[
    boolean  mustBeCovPlanned()
    {
        return this.Report      &&
               this.Active      &&
               this.Cov         &&
               ForecastModel::cov(this.ModelId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderAccount</Name>
				<Source><![CDATA[
    CustVendAC orderAccount()
    {
        return this.VendAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payment</Name>
				<Source><![CDATA[
    PaymTermId payment()
    {
        if (this.VendAccountId)
            return this.vendTable().PaymTermId;

        if (this.VendGroupId)
            return this.vendGroup().PaymTermId;

        return VendParameters::find().Invoice2Due;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfile_RU</Name>
				<Source><![CDATA[
    VendPostingProfile postingProfile_RU()
    {
        VendPostingProfile          postingProfile;

        if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldnum(InventDim, InventProfileId_RU)))
        {
            postingProfile = InventProfileCustVendLedger_RU::vendPostingProfile(this.inventDim().InventProfileId_RU);
        }

        if (! postingProfile)
        {
            postingProfile = VendParameters::find().PostingProfile;
        }
        return postingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the date for which a price must be calculated.
    /// </summary>
    /// <returns>
    /// The date for which to calculate a price.
    /// </returns>
    public PriceDate priceDate()
    {
        return this.StartDate ? this.StartDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceGroupId</Name>
				<Source><![CDATA[
    PriceGroupId  priceGroupId()
    {
        return this.vendTable().PriceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies the <c>InventDimId</c> parameter to the <c>ForecastPurch.inventDimId</c> field and provides
    ///    default values, depending on the new inventory dimensions.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The <c>InventDimId</c> value that should be applied to the <c>ForecastPurch.InventDimId</c> field.
    /// </param>
    /// <param name="_inventDim">
    ///    The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
    /// </param>
    public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
    {
        InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();
        this.InventDimId = _inventDimId;
        this.linkInventDim2Dimension(_inventDim, currentInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimIdFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
    ///    found <c>InventDimId</c> value to the <c>ForecastPurch.inventDimId</c> field.
    /// </summary>
    /// <param name="_inventDim">
    ///    An <c>InventDim</c> record buffer that should be referenced by the current <c>ForecastPurch</c>
    ///    record buffer.
    /// </param>
    public void setInventDimIdFromInventDim(InventDim _inventDim)
    {
        InventDim   inventDim;
        inventDim = InventDim::findOrCreate(_inventDim);
        this.setInventDimId(inventDim.InventDimId, inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        ForecastPurch this_Orig = this.orig();

        boolean isReqForecastPurchUpdateAddTransactionToggleEnabled = ReqForecastPurchUpdateAddTransactionToggle::instance().isEnabled();

        if (isReqForecastPurchUpdateAddTransactionToggleEnabled)
        {
            ttsbegin;
        }

        this.BudgetMap::updating();

        super();

        this.BudgetMap::updated(this_Orig);

        if (isReqForecastPurchUpdateAddTransactionToggleEnabled)
        {
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerCov</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates cash flow forecasts for the <c>ForecastSales</c> record.
    /// </summary>
    /// <param name = "_ledgerCoverage">The cash flow forecasting calculations.</param>
    public void updateLedgerCov(LedgerCoverage _ledgerCoverage)
    {
        LedgerCoverage      cov = _ledgerCoverage;
        AmountCur           invoiceAmount;
        AmountCur           lineValue;
        AmountCur           discValue;
        TaxBudget           taxBudget;
        TaxAmountCur        taxAmountCur;
        ForecastPurch       forecastPurchExpansion;
        // <GEERU>
        #isoCountryRegionCodes
        // </GEERU>

        cov.init(this);
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            cov.parmPostingProfile_RU(this.postingProfile_RU());
            cov.parmInventProfileType_RU(this.inventProfileType_RU());
        }
        // </GEERU>

        if (this.mustBeCovPlanned())
        {
            cov.setRemainPercent(this.StartDate,VendParameters::find().BudgetSettle);

            lineValue  = this.calcLineAmount();

            if (this.accountDiscLedgerDimension())
            {
                discValue   = this.calcLineDisc(this.PurchQty);
                lineValue   = lineValue  + discValue;
            }
            if (this.TaxGroupId)
            {
                taxBudget = new TaxBudget(
                    NoYes::Yes,
                    this,
                    cov);

                // pass null because it doesn't actually post to GL
                taxAmountCur = taxBudget.calcAndPost(null);
            }
            else
            {
                taxAmountCur = 0;
            }

            if (lineValue)
            {
                if (this.inventTable().ItemType == ItemType::Service)
                {
                    cov.updateSum(
                        this.StartDate,
                        LedgerPostingType::PurchConsump,
                        LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountConsumptionLedgerDimension()).RecId,
                        this.DefaultDimension,
                        this.Currency,
                        lineValue
                        );
                }
                else
                {
                    cov.updateSum(
                        this.StartDate,
                        LedgerPostingType::PurchReceipt,
                        LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountReceiptLedgerDimension()).RecId,
                        this.DefaultDimension,
                        this.Currency,
                        lineValue
                        );
                }
                invoiceAmount += cov.lastAmount();
            }

            if (discValue)
            {
                cov.updateSum(
                    this.StartDate,
                    LedgerPostingType::PurchDisc,
                    LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountDiscLedgerDimension()).RecId,
                    this.DefaultDimension,
                    this.Currency,
                    -discValue
                    );
                invoiceAmount += cov.lastAmount();
            }

            if (invoiceAmount)
            {
                VendTable vendTable = VendTable::find(this.VendAccountId);

                TransDate dueDate = cov.determineDueDate(this.StartDate, this.payment(), vendTable.PaymDayId);

                this.updateLedgerCovForInvoiceAndPayment(cov, this.StartDate, dueDate, -invoiceAmount - taxAmountCur);

            }
        }

        cov.endCov();

        if (this.BudgetMap::expansion().mustBeExploded())
        {
            while select forupdate forecastPurchExpansion
                where forecastPurchExpansion.ExpandId == this.RecId
            {
                forecastPurchExpansion.updateLedgerCov(cov);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerCovForInvoiceAndPayment</Name>
				<Source><![CDATA[
    private void updateLedgerCovForInvoiceAndPayment(
        LedgerCoverage _ledgerCoverage,
        TransDate _invoiceDate,
        DueDate _dueDate,
        AmountCur _invoiceAmount)
    {
        VendTable vendTable = VendTable::find(this.VendAccountId);

        //Invoice
        _ledgerCoverage.updateSum(
            _invoiceDate,
            LedgerPostingType::VendBalance,
            LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountVendLedgerDimension()).RecId,
            this.DefaultDimension,
            this.Currency,
            _invoiceAmount,
            0);

        TransDate paymentDueDate = _ledgerCoverage.determinePaymentDueDateWithAverages(LedgerCovAvgAverageDaysSelector::VendAverageDaysFromInvoiceToPayment,
            vendTable.AccountNum,
            _dueDate,
            this.clearingPeriod());

        //Payment summary
        _ledgerCoverage.updateSum(
            paymentDueDate,
            LedgerPostingType::VendBalance,
            LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountVendLedgerDimension()).RecId,
            vendTable.DefaultDimension,
            this.Currency,
            -_invoiceAmount,
            0);

        //Payment clearing
        _ledgerCoverage.updateSum(
            paymentDueDate,
            LedgerPostingType::VendBalance,
            LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.accountClearingLedgerDimension()).RecId,
            vendTable.DefaultDimension,
            this.Currency,
            _invoiceAmount,
            0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    boolean validateDelete()
    {
        boolean ret;

        ret = this.BudgetMap::validateDelete();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId p1)
    {
        ForecastModel   forecastModel;

        boolean ret;

        ret = super(p1);

        switch (p1)
        {
            case(fieldNum(ForecastPurch,ModelId)):
                if (this.ModelId != this.orig().ModelId)
                {
                    forecastModel  = ForecastModel::find(HeadingSub::Heading,this.orig().ModelId);
                    if (forecastModel.Blocked)
                        ret = checkFailed(strFmt("@SYS25943",forecastModel.ModelId));
                    else
                    {
                        forecastModel  = ForecastModel::find(HeadingSub::Heading,this.ModelId);
                        if (forecastModel.Blocked)
                            ret = checkFailed(strFmt("@SYS25943",forecastModel.ModelId));
                    }
                }
                break;
            case(fieldNum(ForecastPurch,PurchQty)):
                if (this.PurchQty < 0)
                    ret = checkFailed("@SYS50502");
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemInfo</Name>
				<Source><![CDATA[
    boolean validateItemInfo()
    {
        // Validate item allocation key information etc

        if (this.ItemId)
        {
            if (!InventTable::exist(this.ItemId))
                return false; // error message given elsewhere

            if (this.ItemAllocateId && !ForecastItemAllocationLine::existItem(this.ItemAllocateId, this.ItemId))
                warning(strFmt("@SYS85028", this.ItemAllocateId, this.ItemId));
            return true;
        }

        if (this.ItemGroupId)
        {
            if (!this.ItemAllocateId)
                return checkFailed("@SYS85029");

            if (!ForecastItemAllocationLine::existItemGroup(this.ItemAllocateId, this.ItemGroupId))
                warning(strFmt("@SYS85031", this.ItemAllocateId, this.ItemGroupId));
            return true;
        }

        if (!this.ItemAllocateId)
            return checkFailed("@SYS85030");

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ok = true;

        setPrefix(strFmt("@SYS14077", this.ItemId));

        if (this.ItemId && !InventTable::exist(this.ItemId))
        {
            ok = checkFailed(strFmt("@SYS5307", this.ItemId));
        }

        if (this.PurchQty < 0)
        {
            ok = checkFailed("@SYS50502");
        }
        ok = ok && this.validateItemInfo();
        ok = ok && this.checkProductDim();
        ok = ok && this.BudgetMap::validateWrite();
        ok = ok && this.checkInventStatus();

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendGroup</Name>
				<Source><![CDATA[
    VendGroup vendGroup()
    {
        return VendGroup::find(this.VendGroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    VendTable vendTable()
    {
        return VendTable::find(this.VendAccountId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles reinitialization if needed when an associated <c>InventDim</c> buffer is changed.
    /// </summary>
    /// <param name = "_inventDim">The <c>InventDim</c> buffer.</param>
    /// <param name = "_inventDimFieldId">The field that was changed.</param>
    public void modifiedInventDim(InventDim _inventDim, FieldId _inventDimFieldId)
    {
        boolean isFieldProductOrSiteDimension = _inventDim.siteOrProductDimFieldModified(_inventDimFieldId);
        this.InventDimId = _inventDim.inventDimId;

        if (isFieldProductOrSiteDimension)
        {
            this.initDimensionsSpecificDefaulting();
        }

        if (EcoResProductVariantItemSalesTaxGroupFeature::isFeatureEnabled()
            && InventDim::isFieldIdProductDimension(_inventDimFieldId))
        {
            this.TaxItemGroupId = InventTable::getTaxItemGroupId(ModuleInventPurchSales::Purch, this.ItemId, this.InventDimId);
        }

        _inventDim.refreshFormDataSource(this.inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchLineInterface</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>SalesPurchLineInterface</c> object associated with the current table record.
    /// </summary>
    /// <returns>
    /// The <c>SalesPurchLineInterface</c> object.
    /// </returns>
    public SalesPurchLineInterface salesPurchLineInterface()
    {
        return this.SalesPurchLine::salesPurchLineInterface();
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetMapDeleteExpansion</Name>
				<Source><![CDATA[
    internal void budgetMapDeleteExpansion()
    {
        ForecastPurch forecastPurch;
        
        while select forupdate forecastPurch 
            index ExpandIdx
            where forecastPurch.ExpandId == this.RecId
        {
            forecastPurch.delete();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Forecast</ConfigurationKey>
	<DeveloperDocumentation>@SYS124106</DeveloperDocumentation>
	<FormRef>ForecastPurch</FormRef>
	<Label>@SYS9646</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ModelId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>MasterPlanning</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Freq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreqCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemAllocateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Allocation</Name>
			<Label>@SYS12895</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllocateMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Freq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreqCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@Sys14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Report</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemAllocateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemBOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRouteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryQuantity</Name>
			<Label>@SYS21676</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsCatchWeight</Name>
			<Label>@PDS72</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchMarkup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseForecast</Name>
			<Label>@SYS9646</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cov</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseQuantity</Name>
			<Label>@SYS11187</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Sys14584</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocateMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetAllocateMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS12227</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Cov</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAppropriation</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CovStatus</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteLinkedDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitDiscountAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
			<Label>@SYS101261</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExpandId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ForecastPurchRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Sys21776</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Freq</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Periods</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FreqCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PeriodUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS981</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemAllocateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ForecastItemAllocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemBOMId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemBOMId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRouteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemRouteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KeyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAllocateKeyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ForecastModelHeadId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsCWUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWUnitId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS3987</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS14578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Report</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Sys16399</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<Label>@SYS7402</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccountId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModelIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccountId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendAccountId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ExpandIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ExpandId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CovIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CovStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BudgetMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Active</MapField>
					<MapFieldTo>Active</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocateMethod</MapField>
					<MapFieldTo>AllocateMethod</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocationId</MapField>
					<MapFieldTo>ItemAllocateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Amount</MapField>
					<MapFieldTo>Amount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Comment</MapField>
					<MapFieldTo>Comment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPaymDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CovStatus</MapField>
					<MapFieldTo>CovStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Currency</MapField>
					<MapFieldTo>Currency</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>defaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscAmount</MapField>
					<MapFieldTo>DiscAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent</MapField>
					<MapFieldTo>DiscPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EliminationDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDate</MapField>
					<MapFieldTo>EndDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExpandId</MapField>
					<MapFieldTo>ExpandId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Freq</MapField>
					<MapFieldTo>Freq</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FreqCode</MapField>
					<MapFieldTo>FreqCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventQty</MapField>
					<MapFieldTo>InventQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemGroupId</MapField>
					<MapFieldTo>ItemGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Key</MapField>
					<MapFieldTo>KeyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePropertyId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
					<MapFieldTo>PurchMarkup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ModelNum</MapField>
					<MapFieldTo>ModelId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PdsCWQty</MapField>
					<MapFieldTo>PdsCWQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>PurchQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Report</MapField>
					<MapFieldTo>Report</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Resource</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPaymDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitId</MapField>
					<MapFieldTo>PurchUnitId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Category</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConfirmedDlv</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExternalItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemBOMId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemRouteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDeliveryType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercent</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MCRCustVendAC</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MCROrderLine2PriceHistoryRef</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MCRReceiptDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MCRShipDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PDSCalculationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PdsCWSalesPurchQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchSalesUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>QtyOrdered</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RequiredDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RetailVariantId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDocumentLine</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StockedProduct</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitOfMeasure</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseForecast</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ExpandForecastPurch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastPurch</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExpandId</Name>
					<Field>ExpandId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ExpandIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ForecastItemAllocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastItemAllocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemAllocateId</Name>
					<Field>ItemAllocateId</Field>
					<RelatedField>AllocateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AllocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ForecastModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastModel</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModelId</Name>
					<Field>ModelId</Field>
					<RelatedField>ModelId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>HeadingSub::Heading</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemGroupId</Name>
					<Field>ItemGroupId</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerAllocateKey</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerAllocateKey</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KeyId</Name>
					<Field>KeyId</Field>
					<RelatedField>Key</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>KeyIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchUnitId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Unit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SupplyForecast</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchUnitId</Name>
					<Field>PurchUnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RouteTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RouteTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRouteId</Name>
					<Field>ItemRouteId</Field>
					<RelatedField>RouteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SubBOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemBOMId</Name>
					<Field>ItemBOMId</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupId</Name>
					<Field>TaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupId</Name>
					<Field>TaxItemGroupId</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendGroupId</Name>
					<Field>VendGroupId</Field>
					<RelatedField>VendGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccountId</Name>
					<Field>VendAccountId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>