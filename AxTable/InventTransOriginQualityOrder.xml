<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginQualityOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginQualityOrder extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOriginRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the inventory quality order.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void deleteOriginRelationship(InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginQualityOrder  inventTransOriginQualityOrder;

        ttsbegin;

        delete_from inventTransOriginQualityOrder
            where inventTransOriginQualityOrder.InventTransOrigin == _inventTransOriginId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the inventory quality order.
    /// </summary>
    /// <param name="_qualityOrderDataAreaId">
    /// The value of the <c>dataAreaId</c> field of the <c>InventQualityOrderTable</c> table. It is a part of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    /// <param name="_qualityOrderId">
    /// The value of the <c>QualityOrderId</c> field of the <c>InventQualityOrderTable</c> table. It is a part of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    public static void deleteOwnerRelationship(DataAreaId _qualityOrderDataAreaId, InventQualityOrderId _qualityOrderId)
    {
        InventTransOriginQualityOrder  inventTransOriginQualityOrder;

        ttsbegin;

        delete_from inventTransOriginQualityOrder
            where inventTransOriginQualityOrder.QualityOrderId         == _qualityOrderId
               && inventTransOriginQualityOrder.QualityOrderDataAreaId == _qualityOrderDataAreaId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the inventory transactions originator for the inventory quality order.
    /// </summary>
    /// <param name="_qualityOrderDataAreaId">
    ///    The value of the <c>dataAreaId</c> field of the <c>InventQualityOrderTable</c> table. It is a part
    ///    of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    /// <param name="_qualityOrderId">
    ///    The value of the <c>QualityOrderId</c> field of the <c>InventQualityOrderTable</c> table. It is a
    ///    part of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    /// <returns>
    ///    The ID of the inventory transactions originator.
    /// </returns>
    public static InventTransOriginId findInventTransOriginId(DataAreaId _qualityOrderDataAreaId, InventQualityOrderId _qualityOrderId)
    {
        InventTransOriginQualityOrder  inventTransOriginQualityOrder;

        select firstonly InventTransOrigin from inventTransOriginQualityOrder
            where inventTransOriginQualityOrder.QualityOrderId         == _qualityOrderId
               && inventTransOriginQualityOrder.QualityOrderDataAreaId == _qualityOrderDataAreaId;

        return inventTransOriginQualityOrder.InventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQualityOrderTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the quality order related to the ID of the inventory transactions originator.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///    The ID of the inventory transactions originator. It is the primary key on the
    ///    <c>InventTransOrigin</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the buffer should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A related record in the <c>InventQualityOrderTable</c> table, if one exists; otherwise, an empty
    ///    record.
    /// </returns>
    public static InventQualityOrderTable inventQualityOrderTable(
        InventTransOriginId     _inventTransOriginId,
        boolean                 _forUpdate = false)
    {
        InventQualityOrderTable         inventQualityOrderTable;
        InventTransOriginQualityOrder   inventTransOriginQualityOrder;

        inventQualityOrderTable.selectForUpdate(_forUpdate);

        select firstonly inventQualityOrderTable
            exists join inventTransOriginQualityOrder
            where inventTransOriginQualityOrder.QualityOrderDataAreaId == inventQualityOrderTable.DataAreaId
               && inventTransOriginQualityOrder.QualityOrderId         == inventQualityOrderTable.QualityOrderId
               && inventTransOriginQualityOrder.InventTransOrigin      == _inventTransOriginId;

        return inventQualityOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the relationship between the inventory transactions originator and the inventory quality order.
    /// </summary>
    /// <param name="_qualityOrderDataAreaId">
    /// The value of the <c>dataAreaId</c> field of the <c>InventQualityOrderTable</c> table. It is a part of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    /// <param name="_qualityOrderId">
    /// The value of the <c>QualityOrderId</c> field of the <c>InventQualityOrderTable</c> table. It is a part of the primary key on the <c>InventQualityOrderTable</c> table.
    /// </param>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void writeOriginOwnerRelationship(DataAreaId _qualityOrderDataAreaId, InventQualityOrderId _qualityOrderId, InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginQualityOrder  inventTransOriginQualityOrder;
        Counter                        logCount = infologLine();

        ttsbegin;

        try
        {
            inventTransOriginQualityOrder.QualityOrderDataAreaId  = _qualityOrderDataAreaId;
            inventTransOriginQualityOrder.QualityOrderId          = _qualityOrderId;
            inventTransOriginQualityOrder.InventTransOrigin       = _inventTransOriginId;

            inventTransOriginQualityOrder.insert();
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == inventTransOriginQualityOrder.TableId)
            {
                update_recordset inventTransOriginQualityOrder
                setting InventTransOrigin = _inventTransOriginId
                where inventTransOriginQualityOrder.QualityOrderId         == _qualityOrderId
                   && inventTransOriginQualityOrder.QualityOrderDataAreaId == _qualityOrderDataAreaId
                   && inventTransOriginQualityOrder.InventTransOrigin      != _inventTransOriginId;
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
            infolog.clear(logCount);
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventQualityManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS325112</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS133335</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventTransOrigin</TitleField1>
	<TitleField2>QualityOrderId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>QualityOrderIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>QualityOrderIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QualityOrderId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityOrderDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QualityOrderDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QualityOrderId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityOrderDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QualityOrderDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QualityOrderId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQualityOrderId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>QualityOrderIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>QualityOrderDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QualityOrderId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventQualityOrderTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventQualityOrderTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventQualityOrderTable_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventQualityOrderTable_InventTransOriginQualityOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QualityOrderDataAreaId</Name>
					<Field>QualityOrderDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QualityOrderId</Name>
					<Field>QualityOrderId</Field>
					<RelatedField>QualityOrderId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>QualityOrderIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_InventTransOriginQualityOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>