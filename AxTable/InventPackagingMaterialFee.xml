<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackagingMaterialFee</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventPackagingMaterialFee extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDate</Name>
				<Source><![CDATA[
    boolean  checkDate()
    {
        boolean  ok = true;

        if (this.ToDate && this.ToDate  < this.FromDate)
        {
            ok = checkFailed("@SYS16982");
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDuplicate_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method checks for duplicates in the <c>InventPackagingMaterialFee</c> table on fields Packing material code, Tariff category and period.
    /// </summary>
    /// <returns>
    /// True if no duplicates are found; otherwise, false.
    /// </returns>
    public boolean checkDuplicate_W()
    {
        boolean ret = true;
        InventPackagingMaterialFee packagingMaterialFee;

        select firstonly RecId from packagingMaterialFee
            where packagingMaterialFee.RecId              != this.RecId
               && packagingMaterialFee.PackMaterialCode   == this.PackMaterialCode
               && packagingMaterialFee.TariffCategoryId_W == this.TariffCategoryId_W
               && packagingMaterialFee.FromDate           <= this.ToDate
               && packagingMaterialFee.ToDate             >= this.FromDate;

        if (packagingMaterialFee.RecId)
        {
            ret = checkFailed(strFmt("@PackingMaterial:InventPackingMaterialFee", this.PackMaterialCode, this.TariffCategoryId_W, this.FromDate, this.ToDate));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialName</Name>
				<Source><![CDATA[
    display Name packagingMaterialName()
    {
        return InventPackagingMaterialCode::find(this.PackMaterialCode).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packagingMaterialUnit</Name>
				<Source><![CDATA[
    display UnitOfMeasureSymbol packagingMaterialUnit()
    {
        return InventPackagingMaterialCode::find(this.PackMaterialCode).Unit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean  validateField(FieldId  _fieldId)
    {
        boolean  ret;

        ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventPackagingMaterialFee, FromDate):
                ret = this.checkDate();
                break;

            case fieldNum(InventPackagingMaterialFee, ToDate):
                ret = this.checkDate();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (! this.checkDate())
        {
            ret = false;
        }

        if (InventParameters::isPackingMaterialTariffCatEnabled_W())
        {
            if (! this.TariffCategoryId_W)
            {
                ret = checkFailed(strFmt("@SYS84378", "@PackingMaterial:InventTariffCategory"));
            }

            ret = this.checkDuplicate_W() && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPeriod</Name>
				<Source><![CDATA[
    static boolean checkPeriod(TransDate fromDate,
                               TransDate toDate)
    {
        InventPackagingMaterialFee inventPackagingMaterialFee;

        select firstonly RecId from inventPackagingMaterialFee
              where inventPackagingMaterialFee.FromDate <= fromDate &&
                    inventPackagingMaterialFee.ToDate   >= toDate;
        return inventPackagingMaterialFee.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForDate</Name>
				<Source><![CDATA[
    static InventPackagingMaterialFee findForDate(
        InventPackingMaterialCode    packMaterialCode,
        TransDate                    transDate,
        boolean                      _forUpdate = false)
    {
        InventPackagingMaterialFee inventPackagingMaterialFee;

        if (packMaterialCode && transDate)
        {
            inventPackagingMaterialFee.selectForUpdate(_forUpdate);

            select firstonly inventPackagingMaterialFee
                where inventPackagingMaterialFee.PackMaterialCode == packMaterialCode &&
                      inventPackagingMaterialFee.FromDate <= transDate &&
                      inventPackagingMaterialFee.ToDate >= transDate;
        }
        return inventPackagingMaterialFee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForDate_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventPackagingMaterialFee</c> table
    /// </summary>
    /// <param name="packMaterialCode">
    /// The packing material code.
    /// </param>
    /// <param name="tariffCategory">
    /// The tariff category identifier.
    /// </param>
    /// <param name="transDate">
    /// The date a packing material fee is searched on.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventPackagingMaterialFee</c> table; otherwise, an empty record.
    /// </returns>
    public static InventPackagingMaterialFee findForDate_W(
        InventPackingMaterialCode    packMaterialCode,
        ItemPackagingTariffCatId_W   tariffCategory,
        TransDate                    transDate,
        boolean                      _forUpdate = false)
    {
        InventPackagingMaterialFee inventPackagingMaterialFee;

        if (packMaterialCode && tariffCategory && transDate)
        {
            inventPackagingMaterialFee.selectForUpdate(_forUpdate);

            select firstonly inventPackagingMaterialFee
                where inventPackagingMaterialFee.PackMaterialCode == packMaterialCode &&
                      inventPackagingMaterialFee.TariffCategoryId_W == tariffCategory &&
                      inventPackagingMaterialFee.FromDate <= transDate &&
                      inventPackagingMaterialFee.ToDate >= transDate;
        }

        return inventPackagingMaterialFee;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<DeveloperDocumentation>@SYS123994</DeveloperDocumentation>
	<Label>@SYS72996</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PackMaterialCode</TitleField1>
	<TitleField2>FromDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PackagingMaterialFeeIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>PackagingMaterialFeeIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TariffCategoryId_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Fee</Name>
			<Label>@SYS9154</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TariffCategoryId_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackMaterialCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingMaterialCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingMaterialFeePriceCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TariffCategoryId_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemPackagingTariffCatId_W</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackagingMaterialFeeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PackMaterialCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TariffCategoryId_W</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventPackagingMaterialCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingMaterialCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackMaterialCode</Name>
					<Field>PackMaterialCode</Field>
					<RelatedField>PackMaterialCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PackagingMaterialCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventPackagingTariffCat_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingTariffCat_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TariffCategoryId_W</Name>
					<Field>TariffCategoryId_W</Field>
					<RelatedField>TariffCategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>