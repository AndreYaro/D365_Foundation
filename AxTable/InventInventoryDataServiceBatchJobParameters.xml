<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDataServiceBatchJobParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class InventInventoryDataServiceBatchJobParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    internal static InventInventoryDataServiceBatchJobParameters find(str _jobName, boolean _forupdate = false)
    {
        InventInventoryDataServiceBatchJobParameters parameters;

        if (_forupdate)
        {
            parameters.selectForUpdate(_forupdate);
        }

        select firstOnly parameters
            index JobNameIndex
            where parameters.JobName == _jobName;

        return parameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    internal static InventInventoryDataServiceBatchJobParameters findOrCreate(str _jobName, boolean _forupdate = false)
    {
        InventInventoryDataServiceBatchJobParameters parameters;

        if (_forupdate)
        {
            parameters.selectForUpdate(_forupdate);
        }

        select firstOnly parameters
            index JobNameIndex
            where parameters.JobName == _jobName;

        if (!parameters.RecId)
        {
            InventInventoryDataServiceBatchJobParameters::insertNewRecordByJobName(_jobName);

            select firstOnly parameters
                index JobNameIndex
                where parameters.JobName == _jobName;
        }

        return parameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeJobParameters</Name>
				<Source><![CDATA[
    internal static void initializeJobParameters(str _jobName)
    {
        ttsbegin;

        InventInventoryDataServiceBatchJobParameters parameters;
        select forupdate firstonly parameters
            index JobNameIndex
            where parameters.JobName == _jobName;

        if (parameters.RecId)
        {
            parameters.CumulativeFailedCount = 0;
            parameters.JobRecurrenceInMinutes = 1;
            parameters.update();
        }
        else
        {
            InventInventoryDataServiceBatchJobParameters::insertNewRecordByJobName(_jobName);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJobParameters</Name>
				<Source><![CDATA[
    internal static void updateJobParameters(str _jobName, int _failedCount, int _jobRecurrenceInMinutes)
    {
        InventInventoryDataServiceBatchJobParameters parameters = InventInventoryDataServiceBatchJobParameters::findOrCreate(_jobName, true);
        parameters.CumulativeFailedCount = _failedCount;
        parameters.JobRecurrenceInMinutes =_jobRecurrenceInMinutes;
        parameters.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertNewRecordByJobName</Name>
				<Source><![CDATA[
    internal static void insertNewRecordByJobName(str _jobName)
    {
        InventInventoryDataServiceBatchJobParameters parameters;

        parameters.JobName = _jobName;
        parameters.CumulativeFailedCount = 0;
        parameters.JobRecurrenceInMinutes = 1;

        parameters.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<ClusteredIndex>JobNameIndex</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>JobNameIndex</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>JobRecurrenceInMinutes</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CumulativeFailedCount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JobName</Name>
			<StringSize>100</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JobNameIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>JobName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>