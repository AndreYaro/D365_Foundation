<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AifEndPointActionValueMapExt_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AifEndPointActionValueMapExt_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkInventProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check inventory profile.
    /// </summary>
    /// <returns>
    /// true if inventory profile correct.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean checkInventProfile()
    {
        boolean ok = true;

        if (!this.InventProfileExtCodeId
        &&   this.xmlMapInventProfile == XMLMapExternalCode::ExternalCode)
        {
            ok = checkFailed("@GLS221831");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.setDataArea();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>AifEndPointActionValueMapExt_RU</c> records.
    /// </summary>
    public void insert()
    {
        this.removeUnusedValues();
        this.setDataArea();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeUnusedValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Temove unused values.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void removeUnusedValues()
    {
        if (this.xmlMapInventProfile != XMLMapExternalCode::ExternalCode)
        {
            this.InventProfileExtCodeId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataArea</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set data area for current record.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setDataArea()
    {
        AifEndpointActionValueMap   aifEndpointActionValueMap = AifEndpointActionValueMap::findRecId(this.AifEndpointActionValueMap);
        EventHandlerResult eventHandlerResult = new EventHandlerResult();

        this.setDataAreaDelegate(aifEndpointActionValueMap, eventHandlerResult);

        this.DataArea = eventHandlerResult.result();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>AifEndPointActionValueMapExt_RU</c> table.
    /// </summary>
    public void update()
    {
        this.removeUnusedValues();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (!this.checkInventProfile())
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AifEndPointActionValueMapExt_RU</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The reference record Id for the document setup record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>AifEndPointActionValueMapExt_RU</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AifEndPointActionValueMapExt_RU find(RecId _recId, boolean _forUpdate = false)
    {
        AifEndPointActionValueMapExt_RU aifEndPointActionValueMapExt_RU;

        if (_recId)
        {
            aifEndPointActionValueMapExt_RU.selectForUpdate(_forUpdate);

            select firstonly aifEndPointActionValueMapExt_RU
                where aifEndPointActionValueMapExt_RU.RecId == _recId;
        }

        return aifEndPointActionValueMapExt_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAifEndPointActionValueMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the record of <c>AifEndPointActionValueMapExt_RU</c> table.
    /// </summary>
    /// <param name="_aifEndpointActionValueMap">
    /// The reference record Id to <c>AifEndpointActionValueMap</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The record of <c>AifEndPointActionValueMapExt_RU</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AifEndPointActionValueMapExt_RU findAifEndPointActionValueMap(RefRecId _aifEndpointActionValueMap, boolean _forUpdate = false)
    {
        AifEndPointActionValueMapExt_RU aifEndPointActionValueMapExt_RU;

        if (_aifEndpointActionValueMap)
        {
            aifEndPointActionValueMapExt_RU.selectForUpdate(_forUpdate);

            select firstonly aifEndPointActionValueMapExt_RU
                where aifEndPointActionValueMapExt_RU.AifEndpointActionValueMap == _aifEndpointActionValueMap;
        }

        return aifEndPointActionValueMapExt_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>AifEndpointActionValueMap</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AifEndpointActionValueMap AifEndpointActionValueMap(AifEndpointActionValueMap _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('AifEndpointActionValueMap');
            }
            else
            {
                return this.setLink('AifEndpointActionValueMap', _relatedTable);
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>setDataAreaDelegate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    delegate void setDataAreaDelegate(AifEndpointActionValueMap   aifEndpointActionValueMap, EventHandlerResult eventHandlerResult)
    {}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<CountryRegionContextField>DataArea</CountryRegionContextField>
	<DeveloperDocumentation>@SYS125201</DeveloperDocumentation>
	<Label>@SYS72146</Label>
	<TitleField1>AifEndpointActionValueMap</TitleField1>
	<TitleField2>DataArea</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>APARShared</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>XMLMapInventProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileExtCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryProfile</Name>
			<Label>@GLS113769</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>XMLMapInventProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileExtCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AifEndpointActionValueMap</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DataArea</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventProfileExtCodeId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventProfileExtCodeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>XMLMapInventProfile</Name>
			<EnumType>XMLMapExternalCode</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AifEndpointActionValueMapIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AifEndpointActionValueMap</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AifEndpointActionValueMap</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AifEndpointActionValueMap</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AifEndpointActionValueMap</Name>
					<Field>AifEndpointActionValueMap</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>