<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatCartLineState</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatCartLineState extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified reference exists in the <c>CatCartLineState</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record in the <c>CatCartLineState</c> table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(CatCartLineStateRecId _refRecId)
    {
        if (_refRecId && CatCartLineState::exist(_refRecId))
        {
            return true;
        }

        return checkFailed(strfmt("@SYS94719", _refRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <c>_RefRecId</c> of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_refRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean exist(CatCartLineStateRecId _refRecId)
    {
        return _refRecId && (select firstonly RecId from catCartLineState
                                    where catCartLineState.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatCartLineState</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatCartLineState</c> table; otherwise, an empty buffer.
    /// </returns>
    public static CatCartLineState find(CatCartLineStateRecId _refRecId, boolean _forUpdate = false)
    {
        CatCartLineState catCartLineState;

        if (_refRecId)
        {
            catCartLineState.selectForUpdate(_forUpdate);
            select catCartLineState where catCartLineState.RecId == _refRecId;
        }
        return catCartLineState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCartLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatCartLineState</c> table.
    /// </summary>
    /// <param name="_cartLineRefRecId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatCartLineState</c> table; otherwise, an empty buffer.
    /// </returns>
    public static CatCartLineState findByCartLine(CatCartLineRecId _cartLineRefRecId, boolean _forUpdate = false)
    {
        CatCartLineState catCartLineState;

        if (_cartLineRefRecId)
        {
            catCartLineState.selectForUpdate(_forUpdate);
            select catCartLineState where catCartLineState.CartLine == _cartLineRefRecId;
        }
        return catCartLineState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createForCatCartLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new <c>CatCartLineState</c> record for the specific <c>CatCartLine</c>.
    /// </summary>
    /// <param name="_cartLine">
    /// The <c>CatCartLine</c> record.
    /// </param>
    /// <param name="_isSelected">
    /// The selection state of the new <c>CatCartLineState</c> record.
    /// </param>
    /// <param name="_invalidityReason">
    /// The invalidity reason of the new <c>CatCartLineState</c> record.
    /// </param>
    /// <returns>
    /// The <c>CatCartLineState</c> record.
    /// </returns>
    public static CatCartLineState createForCatCartLine(
        CatCartLine                 _cartLine,
        boolean                     _isSelected,
        CatCartLineInvalidityReason _invalidityReason)
    {
        CatCartLineState lineState;

        ttsbegin;

        lineState.CartLine          = _cartLine.RecId;
        lineState.IsSelected        = _isSelected;
        lineState.IsValidProduct    = (_invalidityReason == CatCartLineInvalidityReason::IsValid);
        lineState.InvalidityReason  = _invalidityReason;
        lineState.insert();

        ttscommit;

        return lineState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateForCatCartLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates <c>CatCartLineState</c> record for the specific <c>CatCartLine</c>.
    /// </summary>
    /// <param name="_cartLine">
    /// The <c>CatCartLine</c> record.
    /// </param>
    /// <param name="_isSelected">
    /// The selection state of the new <c>CatCartLineState</c> record.
    /// </param>
    /// <param name="_invalidityReason">
    /// The invalidity reason of the new <c>CatCartLineState</c> record.
    /// </param>
    /// <returns>
    /// The <c>CatCartLineState</c> record.
    /// </returns>
    public static CatCartLineState createOrUpdateForCatCartLine(
        CatCartLine                 _cartLine,
        boolean                     _isSelected,
        CatCartLineInvalidityReason _invalidityReason)
    {
        ttsbegin;

        CatCartLineState lineState = CatCartLineState::findByCartLine(_cartLine.RecId, true);

        if (!lineState)
        {
            lineState = CatCartLineState::createForCatCartLine(_cartLine, _isSelected, _invalidityReason);
        }
        else
        {
            lineState.IsSelected        = _isSelected;
            lineState.IsValidProduct    = (_invalidityReason == CatCartLineInvalidityReason::IsValid);
            lineState.InvalidityReason  = _invalidityReason;
            lineState.update();
        }

        ttscommit;

        return lineState;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS321202</DeveloperDocumentation>
	<Label>@SYS300235</Label>
	<SingularLabel>@SYS300235</SingularLabel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>IsSelected</TitleField1>
	<TitleField2>IsValidProduct</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>CartLine</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CartLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSelected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsValidProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvalidityReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CartLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSelected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsValidProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvalidityReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CartLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSelected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsValidProduct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CartLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CartLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatCartLineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InvalidityReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CatCartLineInvalidityReason</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSelected</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24159</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsValidProduct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8553</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CartLine</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CartLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CartLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CatCartLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatCartLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CartLine</Name>
					<Field>CartLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>