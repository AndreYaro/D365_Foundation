<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DefermentSchedule_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DefermentSchedule_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes field value in a new <c>DefermentSchedule_IN</c>
    /// </summary>
    public void initValue()
    {
        super();

        this.Change = min(100,max(1,this.Change));
        this.NumberOfDeferment = min(100,max(1,this.NumberOfDeferment));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates a field in a form when super is called.
    /// </summary>
    /// <param name="_fieldName">
    ///     A string that contains the field name.
    /// </param>
    /// <param name="_arrayIndex">
    ///     An integer that contains the array index, applies only if the field has array elements.
    /// </param>
    /// <remarks>
    ///     System defined method provided as an event for applying logic before and after a field is modified.
    /// </remarks>
    public void modifiedFieldValue(
        fieldName   _fieldName,
        int         _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(DefermentSchedule_IN, Change):
                this.Change = min(100,max(1,this.Change));
                break;

            case fieldstr(DefermentSchedule_IN, NumberOfDeferment):
                this.NumberOfDeferment = min(100,max(1,this.NumberOfDeferment));
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Verifies if records exist in the table for the current record.
    /// </summary>
    /// <param name="_registrationNumber">
    ///     The field used to find in a table.
    /// </param>
    /// <returns>
    ///     true if record exist; otherwise, false.
    /// </returns>
    public static boolean exist(TaxRegistrationNumberRecId_IN   _registrationNumber)
    {
        return _registrationNumber
               && (select firstonly RecId from defermentSchedule_IN
                       where defermentSchedule_IN.TaxRegistrationNumberTable == _registrationNumber).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Reads the DefermentSchedule_IN table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    ///     The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    ///     If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    ///     A buffer containing DefermentSchedule_IN table.
    /// </returns>
    public static DefermentSchedule_IN find(
        RefRecId            _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        DefermentSchedule_IN  defermentSchedule;

        defermentSchedule.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            defermentSchedule.concurrencyModel(_concurrencyModel);
        }

        select firstonly defermentSchedule
            where defermentSchedule.RecId == _recId;

        return defermentSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxRegistrationNumberTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Reads the DefermentSchedule_IN table for the specified record.
    /// </summary>
    /// <param name="_registrationNumber">
    ///     The field used to find in a table.
    /// </param>
    /// <param name="_forUpdate">
    ///     If true, then read the record for updating.
    /// </param>
    /// <returns>
    ///     A buffer containing DefermentSchedule_IN table.
    /// </returns>
    public static DefermentSchedule_IN findByTaxRegistrationNumberTable(
        TaxRegistrationNumberRecId_IN   _registrationNumber,
        boolean                         _forUpdate = false)
    {
        DefermentSchedule_IN defermentSchedule;

        if (_registrationNumber)
        {
            defermentSchedule.selectForUpdate(_forUpdate);

            select firstonly defermentSchedule
                where defermentSchedule.TaxRegistrationNumberTable == _registrationNumber;
        }
        return defermentSchedule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64180</DeveloperDocumentation>
	<FormRef>defermentSchedule_IN</FormRef>
	<Label>@GLS5212</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>TaxRegistrationNumberTable</TitleField1>
	<TitleField2>Allocation</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>APARShared</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TaxRegistrationNumberIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Allocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentPer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Change</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberOfDeferment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Minimum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Schedule</Name>
			<Label>@SYS6793</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Allocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentPer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Change</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberOfDeferment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Minimum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Allocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>Allocation_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS860</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Change</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS54158</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Minimum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS5330</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfDeferment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@GLS5223</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymentPer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PaymentPer_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxRegistrationNumberTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegistrationNumberRecId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxType_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxRegistrationNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefermentSchedule</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistrationNumbers_IN_DefermentSchedule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxType</Name>
					<Field>TaxType</Field>
					<ValueStr>TaxType_IN::VAT</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxRegistrationNumberTable</Name>
					<Field>TaxRegistrationNumberTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistrationNumberTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistrationNumbers_IN</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TaxRegistrationNumbers_IN_DefermentSchedule_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxRegistrationNumberTable</Name>
					<Field>TaxRegistrationNumberTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>