<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceJourPrint</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceJourPrint extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInvoiceCopySequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>CustInvoiceJourPrint</c> table to track the number of sales invoice
    /// report copies.
    /// </summary>
    /// <param name="_custInvoiceJourRecId">
    /// The <c>RecId</c> value of the <c>CustInvoiceJour</c> record.
    /// </param>
    /// <param name="_printCopyOriginal">
    /// The type of the sales invoice document that is being printed.
    /// </param>
    /// <returns>
    /// The number of copies the sales invoice document has been printed.
    /// </returns>
    public static int createInvoiceCopySequence(RecId _custInvoiceJourRecId, PrintCopyOriginal _printCopyOriginal)
    {
        CustInvoiceJourPrint custInvoiceJourPrint;
        int copyNumber;

        ttsbegin;
        custInvoiceJourPrint = CustInvoiceJourPrint::findFromCustInvoiceJour(_custInvoiceJourRecId, true);

        if (_printCopyOriginal == PrintCopyOriginal::Original || _printCopyOriginal == PrintCopyOriginal::OriginalPrint)
        {
            // If original document is being printed, update the HasOriginalBeenPrinted flag.
            // HU allows the original to be printed once.
            if (!custInvoiceJourPrint.HasOriginalBeenPrinted)
            {
                custInvoiceJourPrint.HasOriginalBeenPrinted = true;
                copyNumber = 0;
            }
        }
        else
        {
            custInvoiceJourPrint.NumberOfCopiesPrinted = custInvoiceJourPrint.NumberOfCopiesPrinted + 1;
            copyNumber = custInvoiceJourPrint.NumberOfCopiesPrinted;
        }

        if (custInvoiceJourPrint.RecId)
        {
            custInvoiceJourPrint.update();
        }
        else
        {
            custInvoiceJourPrint.CustInvoiceJour = _custInvoiceJourRecId;
            custInvoiceJourPrint.insert();
        }

        ttscommit;

        return copyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromCustInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>CustInvoiceJourPrint</c> record by using a specified record ID of a
    /// <c>CustInvoiceJour</c> record.
    /// </summary>
    /// <param name="_custInvoiceJourRecId">
    /// The record ID of a <c>CustInvoiceJour</c> record.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A <c>CustInvoiceJourPrint</c> record.
    /// </returns>
    public static CustInvoiceJourPrint findFromCustInvoiceJour(RecId _custInvoiceJourRecId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceJourPrint custInvoiceJourPrint;

        custInvoiceJourPrint.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceJourPrint.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceJourPrint
            where custInvoiceJourPrint.CustInvoiceJour == _custInvoiceJourRecId;

        return custInvoiceJourPrint;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>HU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS221791</DeveloperDocumentation>
	<TableGroup>Transaction</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceJour</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<RelationContext>CustInvoiceJour</RelationContext>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasOriginalBeenPrinted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfCopiesPrinted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberOfCopiesPrinted</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceJour</Name>
					<Field>CustInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InvoiceNumIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>