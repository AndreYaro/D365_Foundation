<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEPropertyCells_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEPropertyCells_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void add(Common _source, LedgerRRGCellCode_RU _cell, boolean _clearBeforeAdd = false)
    {
        LedgerRRGEPropertyCells_W   propertyCells;
        const str                   Semicolon	        = ';';
        container                   cellsCon            = str2con_RU(_cell, Semicolon);
        RecordInsertList            recordInsertList;
        int                         i;
        LineNum                     lineNum;
        boolean                     cellsAdded;

        ttsbegin;

        if (_clearBeforeAdd)
        {
            delete_from propertyCells
                where propertyCells.RefTableId          == _source.TableId   &&
                      propertyCells.PropertyRefRecId    == _source.RecId;
        }

        lineNum             = LedgerRRGEPropertyCells_W::lastLineNum(_source);
        recordInsertList    = new RecordInsertList(tableNum(LedgerRRGEPropertyCells_W));

        for (i = 1; i <= conLen(cellsCon); i++)
        {
            propertyCells.ExcelCell = conPeek(cellsCon, i);
            if (propertyCells.ExcelCell)
            {
                lineNum++;
                propertyCells.RefTableId        = _source.TableId;
                propertyCells.PropertyRefRecId  = _source.RecId;
                propertyCells.LineNum           = lineNum;
                recordInsertList.add(propertyCells);
                cellsAdded = true;
            }
        }

        if (cellsAdded)
        {
            recordInsertList.insertDatabase();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cellsCon</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static container cellsCon(Common _source)
    {
        LedgerRRGEPropertyCells_W   propertyCells;
        container                   res;

        while select ExcelCell from propertyCells order by LineNum
            where propertyCells.RefTableId          == _source.TableId  &&
                  propertyCells.PropertyRefRecId    == _source.RecId
        {
            res += propertyCells.ExcelCell;
        }

        return res;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cellsCount</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static int64 cellsCount(Common _source)
    {
        return (select count(RecId) from ledgerRRGEPropertyCells_W
                        where ledgerRRGEPropertyCells_W.RefTableId          == _source.TableId &&
                              ledgerRRGEPropertyCells_W.PropertyRefRecId    == _source.RecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cellsStr</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static str cellsStr(Common _source)
    {
        const str Semicolon	= ';';
        return con2Str(LedgerRRGEPropertyCells_W::cellsCon(_source), Semicolon);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMultiCell</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean isMultiCell(Common _source)
    {
        return LedgerRRGEPropertyCells_W::cellsCount(_source) > 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LineNum lastLineNum(Common _source)
    {
        return (select maxof(LineNum) from ledgerRRGEPropertyCells_W
                        where ledgerRRGEPropertyCells_W.RefTableId          == _source.TableId &&
                              ledgerRRGEPropertyCells_W.PropertyRefRecId    == _source.RecId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>propertyCellsList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static List propertyCellsList(Common _source)
    {
        LedgerRRGEPropertyCells_W   propertyCells;
        List                        res = new List(Types::Record);

        while select propertyCells order by LineNum
            where propertyCells.RefTableId          == _source.TableId  &&
                  propertyCells.PropertyRefRecId    == _source.RecId
        {
            res.addEnd(propertyCells);
        }

        return res;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@LedgerRRG:LedgerRRG_RequisiteCells</Label>
	<TitleField1>ExcelCell</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExcelCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionalValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IdLineNumGroup</Name>
			<Label>@SYS15682</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PropertyRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExcelCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionalValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionalValue</Name>
			<ExtendedDataType>LedgerRRGEPropertyValue_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExcelCell</Name>
			<ExtendedDataType>LedgerRRGCellCode_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Postfix</Name>
			<ExtendedDataType>LedgerRRGEExpressionStr_W</ExtendedDataType>
			<Label>@GLS112308</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Prefix</Name>
			<ExtendedDataType>LedgerRRGEExpressionStr_W</ExtendedDataType>
			<Label>@SYS22501</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PropertyRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefLineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PropertyRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerRRGEPropertyVersions_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEPropertyVersions_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEPropertyVersions_W</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>LedgerRRGEPropertyCells_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PropertyRefRecId</Name>
					<Field>PropertyRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerRRGESectionProperties_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGESectionProperties_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGESectionProperties_W</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LedgerRRGEPropertyCells_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PropertyRefRecId</Name>
					<Field>PropertyRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>