<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentExternalAgents</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BusinessDocumentExternalAgents extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAgentIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get all agent ids.
    /// </summary>
    /// <returns>Container with all agents ids.</returns>
    internal static container getAgentIds()
    {
        BusinessDocumentExternalAgents businessDocumentExternalAgents;
        container agentIds;
        
        while select businessDocumentExternalAgents
            where businessDocumentExternalAgents.LegalEntityId == curExt()
        {
            agentIds += businessDocumentExternalAgents.AgentId;
        }

        return agentIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgenIdsByType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get all agent ids with specific type.
    /// </summary>
    /// <param name = "_channelType">Type of channel.</param>
    /// <returns>Container with all agents ids.</returns>
    internal static container getAgenIdsByType(BusinessDocumentChannelType _channelType)
    {
        BusinessDocumentExternalAgents businessDocumentExternalAgents;
        container agentIds;
        
        while select businessDocumentExternalAgents
            where businessDocumentExternalAgents.ChannelType == _channelType
            && businessDocumentExternalAgents.LegalEntityId == curExt()
        {
            agentIds += businessDocumentExternalAgents.AgentId;
        }

        return agentIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAgentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>BusinessDocumentExternalAgents</c> table.
    /// </summary>
    /// <param name = "_agentId">Agent id to search by.</param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns> A record in the <c>BusinessDocumentExternalAgents</c> table; otherwise, an empty record.</returns>
    public static BusinessDocumentExternalAgents findByAgentId(str _agentId, boolean _forUpdate = false)
    {
        BusinessDocumentExternalAgents businessDocumentExternalAgents;
        
        if (_agentId)
        {
            businessDocumentExternalAgents.selectForUpdate(_forUpdate);
            select firstonly businessDocumentExternalAgents
                where businessDocumentExternalAgents.AgentId == _agentId
                && businessDocumentExternalAgents.LegalEntityId == curExt();
        }
        
        return businessDocumentExternalAgents;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BusinessDocumentExternalAgents</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BusinessDocumentExternalAgents</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BusinessDocumentExternalAgents</c> table; otherwise, an empty record.
    /// </returns>
    public static BusinessDocumentExternalAgents find(
        RecId _recId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BusinessDocumentExternalAgents businessDocumentExternalAgents;

        businessDocumentExternalAgents.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            businessDocumentExternalAgents.concurrencyModel(_concurrencyModel);
        }

        select firstonly businessDocumentExternalAgents 
            where businessDocumentExternalAgents.RecId == _recId;

        return businessDocumentExternalAgents;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>BusinessDocumentExternalAgents</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BusinessDocumentExternalAgents</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return (select firstonly RecId from BusinessDocumentExternalAgents
            where BusinessDocumentExternalAgents.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@BusinessDocumentSubmissionService:ExternalConnectorsDevDoc</DeveloperDocumentation>
	<Label>@BusinessDocumentSubmissionService:ExternalConnectors</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>AgentId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>AgentIdIdx</ClusteredIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BusinessDocumentImportSource</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS4004250</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ElectronicReporting</Name>
			<Label>@ElectronicReporting:ElectronicReporting</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ERModelMappingContext</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BusinessDocumentAgentId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LegalEntityId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Label>@SYS13342</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ERModelMappingContext</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ERModelMappingID</ExtendedDataType>
			<Label>@BusinessDocumentSubmissionService:BusDocContext</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ChannelType</Name>
			<FeatureClass>EInvoicingExportChannelFeature</FeatureClass>
			<EnumType>BusinessDocumentChannelType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AgentIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AgentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DataArea_Company</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea_Company</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntityId</Name>
					<SourceEDT>SelectableDataArea</SourceEDT>
					<Field>LegalEntityId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<SourceEDT>SelectableDataArea</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ERModelMappingTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERModelMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ERModelMappingContext</Name>
					<Field>ERModelMappingContext</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>