<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTemplateGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesQuotationTemplateGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(SalesQuotationTemplateGroupId  _salesQuotationTemplateGroupId)
    {
        return _salesQuotationTemplateGroupId &&
               (select RecId from salesQuotationTemplateGroup
                    index hint TemplateGroupIdIdx
                    where salesQuotationTemplateGroup.TemplateGroupId == _salesQuotationTemplateGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static SalesQuotationTemplateGroup find(SalesQuotationTemplateGroupId   _salesQuotationTemplateGroupId,
                                            boolean                         _update                         = false)
    {
        SalesQuotationTemplateGroup  salesQuotationTemplateGroup;

        salesQuotationTemplateGroup.selectForUpdate(_update);

        if (_salesQuotationTemplateGroupId)
        {
            select firstonly salesQuotationTemplateGroup
                index hint TemplateGroupIdIdx
                where salesQuotationTemplateGroup.TemplateGroupId == _salesQuotationTemplateGroupId;
        }

        return salesQuotationTemplateGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasActiveTemplates</Name>
				<Source><![CDATA[
    public static boolean hasActiveTemplates(
        SalesQuotationTemplateGroupId   _templateGroupId,
        QuotationType                   _quotationType = QuotationType::Sales)
    {
        SalesQuotationTable templateTable;

        if (!_templateGroupId)
        {
            return false;
        }

        select firstonly RecId from templateTable
            where  templateTable.TemplateGroupId    == _templateGroupId
                && templateTable.TemplateActive     == NoYes::Yes
                && templateTable.QuotationType      == _quotationType;

        return (templateTable && templateTable.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>QuotationBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124576</DeveloperDocumentation>
	<Label>@SYS84522</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TemplateGroupId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TemplateGroupIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>TemplateGroupIdIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SalesQuotationTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SalesQuotationTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQuotationTemplateGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TemplateGroupIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TemplateGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>