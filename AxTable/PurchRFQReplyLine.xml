<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQReplyLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQReplyLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcMiscChargesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates the charges amount for the current line. The amount does not include charges which should
    ///     not affect the order total (Debit/Credit is a combination of Ledger and Item)
    /// </summary>
    /// <returns>
    ///     The calculated charges amount for the current line.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display MarkupAmount calcMiscChargesAmount()
    {
        MarkupAmount  sumCharges;
        MarkupTrans   markupTrans;
        AmountCur     lineAmountExclTax;

        PurchRFQLine    purchRFQLine = this.initializePurchRFQLine();

        lineAmountExclTax = purchRFQLine.calcLineAmountExclTax();

        SetEnumerator markupSetEnumerator = MarkupTrans::getMarkupRecIdsBySource(purchRFQLine.TableId, this.RecId);
        while (markupSetEnumerator.moveNext())
        {
            markupTrans = MarkupTrans::findRecId(markupSetEnumerator.current());
            if (!markupTrans.markupTable().isMarkupOfTypeItemLedger())
            {
                sumCharges += Markup::calcMarkupAmount(markupTrans, this.PurchQty, lineAmountExclTax, 0, purchRFQLine.inclTax());
            }
        }

        return sumCharges;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMiscChargesSalesTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates the tax amount for the charges for the current RFQ reply line.
    /// </summary>
    /// <returns>
    ///     The calculated charges tax amount for the current RFQ reply line.
    /// </returns>
    private TaxAmountCur calcMiscChargesSalesTaxAmount()
    {
        MarkupAmount    markupAmountExclTax;
        TaxAmountCur    markupTax;
        MarkupTrans     markupTrans;
        AmountCur       purchRFQReplyLineAmountExclTax;

        PurchRFQLine    purchRFQLine = this.initializePurchRFQLine();

        purchRFQReplyLineAmountExclTax = purchRFQLine.calcLineAmountExclTax();

        SetEnumerator markupSetEnumerator = MarkupTrans::getMarkupRecIdsBySource(purchRFQLine.TableId, this.RecId);
        while (markupSetEnumerator.moveNext())
        {
            markupTrans = MarkupTrans::findRecId(markupSetEnumerator.current());
            markupAmountExclTax = Markup::calcMarkupAmount(markupTrans, this.PurchQty, purchRFQReplyLineAmountExclTax, 0, purchRFQLine.inclTax());

            markupTax += Tax::calcTaxAmount(markupTrans.TaxGroup,
                                            markupTrans.TaxItemGroup,
                                            DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                            markupTrans.CurrencyCode,
                                            markupAmountExclTax,
                                            TaxModuleType::Purch);
        }

        return markupTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmountExclTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates line amount excluding sales tax.
    /// </summary>
    /// <returns>
    ///     Returns line amount excluding sales tax
    /// </returns>
    private AmountCur calcLineAmountExclTax()
    {
        AmountCur     lineAmountExclTax;
        PurchRFQLine  purchRFQLine = this.initializePurchRFQLine();

        lineAmountExclTax = purchRFQLine.calcLineAmountExclTax();

        return lineAmountExclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcNetLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns line net amount.

    /// </summary>
    /// <returns>
    ///     Returns line net amount.

    /// </returns>
    public display PurchLineAmount calcNetLineAmount()
    {
        return this.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalGrossLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates line total amount for a RFQ Reply line, including charges and tax.
    /// </summary>
    /// <returns>
    ///     Returns RFQ reply line total amount, including charges and tax.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display PurchLineAmount calcTotalGrossLineAmount()
    {
        return this.calcLineAmountExclTax()
             + this.calcSalesTaxAmount()
             + this.calcMiscChargesAmount()
             + this.calcMiscChargesSalesTaxAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcSalesTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the tax amount for the current line.
    /// </summary>
    /// <returns>
    /// The calculated tax amount for the current line.
    /// </returns>
    private PurchLineAmount calcSalesTaxAmount()
    {
        PurchRFQLine    purchRFQLine  = this.initializePurchRFQLine();
        AmountCur       taxBaseAmount = purchRFQLine.calcLineAmountExclTax(this.PurchQty, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        return Tax::calcTaxAmount(  purchRFQLine.TaxGroup,
                                    purchRFQLine.TaxItemGroup,
                                    DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                    purchRFQLine.CurrencyCode,
                                    taxBaseAmount,
                                    TaxModuleType::Purch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePurchRFQLine</Name>
				<Source><![CDATA[
    private PurchRFQLine initializePurchRFQLine()
    {
        PurchRFQLine purchRFQLine  = PurchRFQLine::find(this.rfqId, this.LineNum);
        purchRFQLine.initFromPurchRFQReplyLine(this);

        return purchRFQLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalLineSalesTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates the tax amount for the current RFQ reply line incl. taxes for charges on the line.
    /// </summary>
    /// <returns>
    ///     The calculated tax amount for the current line RFQ reply line incl. taxes for charges on the line.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display TaxAmountCur calcTotalLineSalesTaxAmount()
    {
        return this.calcSalesTaxAmount() + this.calcMiscChargesSalesTaxAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertCurrencyCode</Name>
				<Source><![CDATA[
    void convertCurrencyCode(CurrencyCode currencyCode, CurrencyCode oldCurrencyCode, TradeCurencyConversion tradeCurencyConversion = TradeCurencyConversion::ExchRate)
    {
        ttsbegin;

        this.PurchPrice   = ExchangeRateHelper::curPrice2CurPrice(this.PurchPrice, oldCurrencyCode, currencyCode);
        this.LineDisc     = ExchangeRateHelper::curPrice2CurPrice(this.LineDisc, oldCurrencyCode, currencyCode);
        this.MultiLnDisc  = ExchangeRateHelper::curPrice2CurPrice(this.MultiLnDisc, oldCurrencyCode, currencyCode);
        this.PurchMarkup  = ExchangeRateHelper::curPrice2CurPrice(this.PurchMarkup, oldCurrencyCode, currencyCode);
        this.LineAmount   = CurrencyExchangeHelper::curAmount2CurAmount(this.LineAmount, oldCurrencyCode, currencyCode);

        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            this.MaximumRetailPrice_IN = ExchangeRateHelper::curPrice2CurPrice(this.MaximumRetailPrice_IN, oldCurrencyCode, currencyCode);
        }
        // </GIN>

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAlternateLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an alternate for the current line.
    /// </summary>
    /// <returns>
    /// The record ID of the new line.
    /// </returns>
    /// <param name="_mainPurchRFQLine">
    /// The <c>PurchRFQLine</c> record that represents the RFQ line that the alternate is being created from.
    /// </param>
    /// <param name="_alternatePurchRFQLine">
    /// The alternate RFQ line that the RFQ reply line will be related to.
    /// </param>
    /// <param name="_bidType">
    /// The bid type of the RFQ case.
    /// </param>
    /// <remarks>
    /// This is a helper method for the <c>createAlternateLine</c> method on the <c>PurchRFQLine</c> table.  Alternates should be created from the <c>createAlternateLine</c> method on the <c>PurchRFQLine</c> table.
    /// </remarks>
    [Hookable(false), Wrappable(false)]
    internal PurchRFQReplyLineRecId createAlternateLine(
        PurchRFQLine _mainPurchRFQLine, 
        PurchRFQLine _alternatePurchRFQLine, 
        PurchRFQBidType _bidType)
    {
        PurchRFQReplyLine   purchRFQReplyLine;

        // copy the reply line values from the original line
        purchRFQReplyLine.initFromPurchRFQLine(_mainPurchRFQLine);

        if (this.RecId)
        {
            purchRFQReplyLine.initFromPurchRFQReplyLine(this);
        }

        // clear the item ID
        purchRFQReplyLine.ExternalItemId    = "";

        // link the reply line to the RFQ line
        purchRFQReplyLine.RFQLineRecId      = _alternatePurchRFQLine.RecId;
        purchRFQReplyLine.LineNum           = _alternatePurchRFQLine.LineNum;
        purchRFQReplyLine.IsAlternate       = _alternatePurchRFQLine.IsAlternate;
        purchRFQReplyLine.RFQId             = _alternatePurchRFQLine.RFQId;

        // For sealed bid type alternate reply line is created during unseal at which point reply is already recieved.
        if (_bidType == PurchRFQBidType::Sealed)
        {
            purchRFQReplyLine.ReplyReceived = NoYes::Yes;
        }

        purchRFQReplyLine.insert();

        return purchRFQReplyLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDateDeviation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the delivery deviation for a <c>PurchRFQReplyLine</c> record.
    /// </summary>
    /// <returns>
    ///    The delivery deviation for a <c>PurchRFQReplyLine</c> record.
    /// </returns>
    public display PurchRFQDeliveryDateDeviation deliveryDateDeviation()
    {
        PurchRFQDeliveryDateDeviation deviation;

        deviation = this.DeliveryDate - PurchRFQLine::findRecId(this.rfqLineRecId).deliveryDate();

        if (deviation < 0)
        {
            deviation = 0;
        }

        return deviation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    DiscAmount  discAmount()
    {
        return PriceDisc::discAmount(PurchParameters::find().Disc, this.LineDisc, this.MultiLnDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    DiscPct   discPercent()
    {
        return PriceDisc::discPercent(PurchParameters::find().Disc, this.LinePercent, this.MultiLnPercent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNetPriceQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the net price quantity for a <c>PurchRFQReplyLine</c> record.
    /// </summary>
    /// <returns>
    ///    The net price quantity for a <c>PurchRFQReplyLine</c> record.
    /// </returns>
    public display PurchRFQNetPriceQty displayNetPriceQty()
    {
        if (this.PurchQty)
        {
            return this.LineAmount/this.PurchQty;
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowEdit_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether document attachments are editable for the current record.
    /// </summary>
    /// <returns>
    /// True, if editing of document attachments should be allowed, otherwise false.
    /// </returns>
    public boolean docuAllowEdit_W()
    {
        return this.purchRFQReplyTable().docuAllowEdit_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchRFQCaseTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the RFQ case for the current RFQ reply line.
    /// </summary>
    /// <param name="_selectForUpdate">
    /// true if the record should be selected for update; otherwise, false.
    /// </param>
    /// <returns>
    /// The RFQ case record for the current RFQ reply line.
    /// </returns>
    public PurchRFQCaseTable findPurchRFQCaseTable(boolean _selectForUpdate = false)
    {
        PurchRFQTable       purchRFQTable;
        PurchRFQCaseTable   purchRFQCaseTable;

        PurchRFQTable.selectForUpdate(_selectForUpdate);

        select firstonly purchRFQCaseTable
        exists join purchRFQTable
            where purchRFQTable.RFQId == this.RFQId
                && purchRFQCaseTable.RFQCaseId == purchRFQTable.RFQCaseId;

        return purchRFQCaseTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAgreementLineQuantity</Name>
				<Source><![CDATA[
    void initAgreementLineQuantity(AgreementLineQuantityCommitment _agreementLineQuantity)
    {
        _agreementLineQuantity.ProductUnitOfMeasure             = this.PurchUnit;
        _agreementLineQuantity.PriceUnit                        = this.PriceUnit;
        _agreementLineQuantity.CommitedQuantity                 = this.PurchQty;
        _agreementLineQuantity.PdsCWCommitedQuantity            = this.PdsCWQty;
        _agreementLineQuantity.PricePerUnit                     = this.PurchPrice;
        _agreementLineQuantity.LineDiscountAmount               = this.LineDisc;
        _agreementLineQuantity.LineDiscountPercent              = this.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAgreementLineVolume</Name>
				<Source><![CDATA[
    void initAgreementLineVolume(AgreementLineVolumeCommitment _agreementLineVolume)
    {
        // The following assignment converts a quantity order into a volume order.
        // Mandatory for Category Based Agreement Lines.
        _agreementLineVolume.CommitedAmount = this.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchRFQLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data from a <c>PurchRFQLine</c> record buffer to a <c>PurchRFQReplyLine</c> record buffer.
    /// </summary>
    /// <param name="_purchRFQLine">
    /// Passed in <c>PurchRFQLine</c> record buffer.
    /// </param>
    /// <param name="_doCopy">
    /// Determines whether or not to copy the select fields from the <c>PurchRFQLine</c> record buffer.
    /// </param>
    /// <param name="callerMenuItemName">
    /// Menuitem name of the caller form.
    /// </param>
    void initFromPurchRFQLine(PurchRFQLine  _purchRFQLine, boolean _doCopy = true, str callerMenuItemName = '')
    {   
        this.Name           = _purchRFQLine.Name;
        this.rfqId          = _purchRFQLine.rfqId;
        
        PurchRFQCaseTable rfqCaseLocal = this.findPurchRFQCaseTable();

        if (_purchRFQLine.purchRFQTable().BidType == PurchRFQBidType::Open
            || (rfqCaseLocal.BidType == PurchRFQBidType::Sealed && rfqCaseLocal.IsSealed == NoYes::No))
        {        
            this.DeliveryDate   = _purchRFQLine.DeliveryDate;
            this.ExternalItemId = _purchRFQLine.ExternalItemId;
            this.PurchUnit      = _purchRFQLine.PurchUnit;
            this.PriceUnit      = _purchRFQLine.PriceUnit;
            this.PurchQty       = _purchRFQLine.PurchQty;
            this.QtyOrdered     = _purchRFQLine.QtyOrdered;
            this.PurchPrice     = _purchRFQLine.PurchPrice;
            this.LineAmount     = _purchRFQLine.LineAmount;
            this.PurchMarkup    = _purchRFQLine.PurchMarkup;
            this.LineDisc       = _purchRFQLine.LineDisc;
            this.LinePercent    = _purchRFQLine.LinePercent;
            this.MultiLnDisc    = _purchRFQLine.MultiLnDisc;
            this.MultiLnPercent = _purchRFQLine.MultiLnPercent;
        }

        if (_doCopy)
        {
            this.LineNum        = _purchRFQLine.LineNum;
            this.rfqLineRecId   = _purchRFQLine.RecId;
        }

        this.PdsCWQty       = _purchRFQLine.PdsCWQty;
        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            this.MaximumRetailPrice_IN = _purchRFQLine.purchRFQLineTaxExtensionIN().MaximumRetailPrice;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchRFQReplyLine</Name>
				<Source><![CDATA[
    void initFromPurchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine)
    {//Don't set RFQId, LineNum and RFQLineRecId.
        this.CalendarDays   = _purchRFQReplyLine.CalendarDays;
        this.DeliveryDate   = _purchRFQReplyLine.DeliveryDate;
        this.ExternalItemId = _purchRFQReplyLine.ExternalItemId;
        this.IsAlternate    = _purchRFQReplyLine.IsAlternate;
        this.LeadTime       = _purchRFQReplyLine.LeadTime;
        this.LineAmount     = _purchRFQReplyLine.LineAmount;
        this.LineDisc       = _purchRFQReplyLine.LineDisc;
        this.LinePercent    = _purchRFQReplyLine.LinePercent;
        this.MultiLnDisc    = _purchRFQReplyLine.MultiLnDisc;
        this.MultiLnPercent = _purchRFQReplyLine.MultiLnPercent;
        this.Name           = _purchRFQReplyLine.Name;
        this.PriceUnit      = _purchRFQReplyLine.PriceUnit;
        this.PurchMarkup    = _purchRFQReplyLine.PurchMarkup;
        this.QtyOrdered     = _purchRFQReplyLine.QtyOrdered;
        this.PurchQty       = _purchRFQReplyLine.PurchQty;
        this.PurchUnit      = _purchRFQReplyLine.PurchUnit;
        this.rfqMark        = _purchRFQReplyLine.rfqMark;
        this.ValidFrom      = _purchRFQReplyLine.ValidFrom;
        this.ValidTo        = _purchRFQReplyLine.ValidTo;
        this.ReplyReceived  = _purchRFQReplyLine.ReplyReceived;
        this.PurchPrice     = _purchRFQReplyLine.PurchPrice;
        this.Comment        = _purchRFQReplyLine.Comment;

        this.PdsCWQty       = _purchRFQReplyLine.PdsCWQty;
        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            this.MaximumRetailPrice_IN = _purchRFQReplyLine.MaximumRetailPrice_IN;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchRFQTmpReplyLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PurchRFQReplyLine</c> table record from the <c>PurchRFQTmpSealedReplyLine</c> table record.
    /// </summary>
    /// <param name = "_PurchRFQTmpSealedReplyLine">The record of <c>PurchRFQTmpSealedReplyLine</c> table.</param>
    public void initFromPurchRFQTmpReplyLine(PurchRFQTmpSealedReplyLine _PurchRFQTmpSealedReplyLine)
    {
        this.DeliveryDate   = _PurchRFQTmpSealedReplyLine.DeliveryDate;
        this.PurchQty       = _PurchRFQTmpSealedReplyLine.PurchQty;
        this.PurchUnit      = _PurchRFQTmpSealedReplyLine.PurchUnit;
        this.PurchPrice     = _PurchRFQTmpSealedReplyLine.PurchPrice;
        this.LineDisc       = _PurchRFQTmpSealedReplyLine.LineDisc;
        this.LinePercent    = _PurchRFQTmpSealedReplyLine.LinePercent;
        this.PriceUnit      = _PurchRFQTmpSealedReplyLine.PriceUnit;
        this.LineAmount     = _PurchRFQTmpSealedReplyLine.LineAmount;
        this.ExternalItemId = _PurchRFQTmpSealedReplyLine.ExternalItemId;
        this.MultiLnDisc    = _PurchRFQTmpSealedReplyLine.MultiLnDisc;
        this.MultiLnPercent = _PurchRFQTmpSealedReplyLine.MultiLnPercent;
        this.PurchMarkup    = _PurchRFQTmpSealedReplyLine.PurchMarkup;
        this.Name           = _PurchRFQTmpSealedReplyLine.Name;
        this.PdsCWQty       = _PurchRFQTmpSealedReplyLine.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.IsAlternate = NoYes::No;
        this.DeliveryDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        // <GTE>
        PurchRFQReplyLine   purchRFQReplyLine_orig = this.orig();
        // </GTE>
        super();

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::IsCompanyEnabled()
            && this.SalesPurchJournalLine::taxRecalculationNeeded(purchRFQReplyLine_orig))
        {
            TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatus(this, TaxDocumentCalculationLevel::Dirty);
        }
        // </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAmountValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total invoice amount for an RFQ.
    /// </summary>
    /// <returns>
    /// The total invoice amount for an RFQ.
    /// </returns>
    /// <remarks>
    /// The calculated invoice amount will include currency conversion, line discount, total discount,
    /// miscellaneous charges, sales tax round-off, and any other costs that will influence the calculation
    /// the invoice total.
    /// </remarks>
    public display PurchLineAmount invoiceAmountValue()
    {
        PurchtotalsForm purchtotalsForm = PurchtotalsForm::newPurchTotalsForm(PurchRFQReplyTable::find(this.rfqId),0);

        purchtotalsForm.calctotals();

        return purchtotalsForm.invoiceAmountValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountModified</Name>
				<Source><![CDATA[
    void lineAmountModified()
    {
        this.PriceDiscLine::lineAmountModified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        PurchRFQLine    purchRFQLine;
        Object          callerForm;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(PurchRFQReplyLine, PurchUnit):
            case fieldnum(PurchRFQReplyLine, PdsCWQty):
                this.pdsCWQtyConversion();
                //fallthrough
            case fieldnum(PurchRFQReplyLine, PurchQty):
                purchRFQLine = PurchRFQLine::findRecId(this.rfqLineRecId);
                PurchRFQReplyLine::modifyPurchQty(this, purchRFQLine);
                purchRFQLine.initFromPurchRFQReplyLine(this);
                this.LineAmount = purchRFQLine.calcLineAmountForced();
                break;

            case fieldNum(PurchRFQReplyLine, PurchPrice):
            case fieldNum(PurchRFQReplyLine, LineDisc):
            case fieldNum(PurchRFQReplyLine, LinePercent):
            case fieldNum(PurchRFQReplyLine, PurchMarkup):
            case fieldNum(PurchRFQReplyLine, MultiLnDisc):
            case fieldNum(PurchRFQReplyLine, MultiLnPercent):
                purchRFQLine = PurchRFQLine::findRecId(this.rfqLineRecId);
                purchRFQLine.initFromPurchRFQReplyLine(this);
                this.LineAmount = purchRFQLine.calcLineAmountForced();
                break;

            case fieldNum(PurchRFQReplyLine, PriceUnit):
                purchRFQLine = PurchRFQLine::findRecId(this.rfqLineRecId);
                purchRFQLine.initFromPurchRFQReplyLine(this);
                this.LineAmount = purchRFQLine.calcLineAmount();
                break;

            case fieldNum(PurchRFQReplyLine, LineAmount):
                this.lineAmountModified();
                break;
        }

        //Update the RFQ status to received only if RFQ is in Sent status
        if (FormDataUtil::isFormDataSource(this) &&
            this.RecId &&
            _fieldId != fieldNum(PurchRFQReplyLine, rfqMark))
        {
            callerForm = FormDataUtil::getFormDataSource(this).formRun();            
            
            if (!formHasMethod(callerForm, 'shouldUpdateRFQStatus') || callerForm.shouldUpdateRFQStatus())
            {
                purchRFQLine = PurchRFQLine::findRecId(this.rfqLineRecId, true, ConcurrencyModel::Optimistic);
                if (purchRFQLine.Status == PurchRFQStatus::Sent)
                {
                    ttsbegin;

                    purchRFQLine.Status = PurchRFQStatus::Received;
                    purchRFQLine.update();

                    if (PurchRFQCaseAutoCreateUpdateHeaderStatusPerLineFlight::instance().isEnabled())
                    {
                        PurchRFQTable::find(purchRFQLine.RFQId, true).updateStatus();
                    }
                    ttscommit;                    
                }
            }
        }
        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::IsCompanyEnabled())
        {
            purchRFQLine = PurchRFQLine::findRecId(this.rfqLineRecId);

            if (purchRFQLine)
            {
                purchRFQLine.initFromPurchRFQReplyLine(this);
                ttsbegin;
                purchRFQLine.selectForUpdate(true);
                purchRFQLine.update();
                ttscommit;
            }
        }
        // </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQtyConversion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Recalculates the nominal inventory quantity from the catch weight quantity for catch weight items.
    /// </summary>
    private void pdsCWQtyConversion()
    {
        ItemId          itemId = PurchRFQLine::findRecId(this.rfqLineRecId).ItemId;
        ;

        if (PdsGlobal::pdsIsCWItem(itemId))
        {
            this.PurchQty = PdsCatchWeight::inventQty(
                                itemId,
                                this.PdsCWQty,
                                this.PurchUnit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the catch weight unit for the item.
    /// </summary>
    /// <returns>
    /// The catch weight unit for the item.
    /// </returns>
    public display PdsCWUnitId pdsCWUnitId()
    {
        return PdsCatchWeight::cwUnitId(PurchRFQLine::findRecId(this.rfqLineRecId).ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQReplyTable</Name>
				<Source><![CDATA[
    PurchRFQReplyTable purchRFQReplyTable(boolean  _update = false)
    {
        return PurchRFQReplyTable::find(this.rfqId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>rfqReplyCurrencyCode</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    /// <summary>
    ///    Retrieves the currency code for a <c>PurchRFQReplyLine</c> record.
    /// </summary>
    /// <returns>
    ///    The currency code for a <c>PurchRFQReplyLine</c> record.
    /// </returns>
    display CurrencyCode rfqReplyCurrencyCode()
    {
        return PurchRFQReplyTable::find(this.rfqId).CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        PurchRFQReplyLine   purchRFQReplyLine_orig = this.orig();

        super();

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::IsCompanyEnabled()
            && this.SalesPurchJournalLine::taxRecalculationNeeded(purchRFQReplyLine_orig))
        {
            TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatus(this, TaxDocumentCalculationLevel::Dirty);
        }
        // </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ok = super();
        ;
        // Prevent writing negative PurchQty.
        if (this.PurchQty < 0)
        {
            ok = checkFailed("@SYS53966");
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(PurchRFQId  _purchRFQId,
                                        LineNum     _lineNum = naReal())
    {
        if (_purchRFQId)
        {
            if (_lineNum == naReal())
                return (select firstonly RecId from purchRFQReplyLine
                            where purchRFQReplyLine.rfqId     == _purchRFQId
                       ).RecId     != 0;

            return (select firstonly RecId from purchRFQReplyLine
                            where purchRFQReplyLine.rfqId     == _purchRFQId      &&
                                  purchRFQReplyLine.LineNum     == _lineNum
                       ).RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the record exists for the specified record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of a <c>PurchRFQReplyTable</c> record.
    /// </param>
    /// <returns>
    /// A boolean value that indicates if the record exists for the specified record ID.
    /// </returns>
    public static boolean existsRecId(PurchRFQReplyLineRecId _recId)
    {
        PurchRFQReplyLine purchRFQReplyLine;

        if (_recId)
        {
            select firstonly RecId from  purchRFQReplyLine
                where purchRFQReplyLine.RecId  == _recId;
        }

        return purchRFQReplyLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchRFQReplyLine find(PurchRFQId  _purchRFQId,
                                                LineNum     _lineNum     = naReal(),
                                                boolean     _update      = false)
    {
        PurchRFQReplyLine  purchRFQReplyLine;
        ;

        if (_purchRFQId)
        {
            purchRFQReplyLine.selectForUpdate(_update);

            if (_lineNum == naReal())
            {
                select firstonly purchRFQReplyLine
                    where purchRFQReplyLine.rfqId == _purchRFQId;
            }
            else
            {
                select firstonly purchRFQReplyLine
                    where purchRFQReplyLine.rfqId == _purchRFQId     &&
                          purchRFQReplyLine.LineNum == _lineNum;
            }
        }

        return purchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record that is associated with the specified record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of a <c>PurchRFQReplyLine</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the record will be updated.
    /// </param>
    /// <returns>
    ///    The <c>PurchRFQReplyLine</c> record found by the record ID.
    /// </returns>
    public static PurchRFQReplyLine findRecId(recId   _recId, boolean _forUpdate = false)
    {
        PurchRFQReplyLine    purchRFQReplyLine;

        if (_recId)
        {
            purchRFQReplyLine.selectForUpdate(_forUpdate);

            select firstonly purchRFQReplyLine
                where purchRFQReplyLine.RecId  == _recId;
        }

        return purchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRFQLine</Name>
				<Source><![CDATA[
    static PurchRFQReplyLine findRFQLine(PurchRFQLineRefRecId    _purchRFQLineRecId,
                                                       boolean                 _update = false)
    {
        PurchRFQReplyLine  purchRFQReplyLine;
        ;

        if (_purchRFQLineRecId)
        {
            purchRFQReplyLine.selectForUpdate(_update);

            select firstonly purchRFQReplyLine
                where purchRFQReplyLine.rfqLineRecId == _purchRFQLineRecId;
        }

        return purchRFQReplyLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyPurchQty</Name>
				<Source><![CDATA[
    public static void  modifyPurchQty(PurchRFQReplyLine    _purchRFQReplyLine,
                                       PurchRFQLine         _purchRFQLine)
    {
        PurchRFQLine    purchRFQLine = _purchRFQLine.data();

        purchRFQLine.initFromPurchRFQReplyLine(_purchRFQReplyLine);
        InventMovement::setMinMaxQty(purchRFQLine);
        purchRFQLine.initPurchQty();
        InventMovement::bufferSetTransQtyUnit(purchRFQLine);
        _purchRFQReplyLine.initFromPurchRFQLine(purchRFQLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRFQMark</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the RFQMark for a <c>PurchRFQReplyTable</c> record.
    /// </summary>
    /// <param name="_replyLines">
    ///  The list of <c>PurchRFQLineRefRecId</c> records.
    /// </param>
    public static void updateRFQMark(List _replyLines)
    {
        ListEnumerator      enumerator;
        PurchRFQReplyLine   replyLine;

        if (_replyLines.elements()> 0)
        {
            enumerator = _replyLines.getEnumerator();

            ttsBegin;

            while (enumerator.moveNext())
            {
                replyLine = PurchRFQReplyLine::findRFQLine(conPeek(enumerator.current(),1),true);
                replyLine.RFQMark = conPeek(enumerator.current(),2);
                replyLine.doUpdate();
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();
        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::IsCompanyEnabled())
        {
            TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatus(this, TaxDocumentCalculationLevel::Dirty);
        }
        // </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatusDirty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status of <c> PurchRFQReplyLine </c> to dirty
    /// </summary>
    public void markCurrentTaxDocumentTaxStatusDirty()
    {
        TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatus(this, TaxDocumentCalculationLevel::Dirty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxRecalculationNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a change to the <c>PurchRFQReplyLine</c> table will update the Tax
    /// </summary>
    /// <param name="_origTransactionTable">
    /// The <c>PurchRFQReplyLine</c> record.
    /// </param>
    /// <returns>True if current line tax should be recalculated, otherwise false </returns>
    public boolean taxRecalculationNeeded(Common _origTransactionTable = null)
    {
        boolean             updateNeeded;
        PurchRFQReplyLine   purchRFQReplyLine_Orig;

        if (_origTransactionTable)
        {
            purchRFQReplyLine_Orig = _origTransactionTable as PurchRFQReplyLine;
        }
        else
        {
            purchRFQReplyLine_Orig = this.orig() as PurchRFQReplyLine;
        }

        updateNeeded =
        ((this.LineAmount   != purchRFQReplyLine_Orig.LineAmount) ||
        (this.LineDisc      != purchRFQReplyLine_Orig.LineDisc) ||
        (this.LinePercent   != purchRFQReplyLine_Orig.LinePercent) ||
        (this.Name          != purchRFQReplyLine_Orig.Name) ||
        (this.PriceUnit     != purchRFQReplyLine_Orig.PriceUnit) ||
        (this.PurchPrice    != purchRFQReplyLine_Orig.PurchPrice) ||
        (this.PurchQty      != purchRFQReplyLine_Orig.PurchQty) ||
        (this.PurchUnit     != purchRFQReplyLine_Orig.PurchUnit) ||
        (this.QtyOrdered    != purchRFQReplyLine_Orig.QtyOrdered) ||
        (this.RFQId         != purchRFQReplyLine_Orig.RFQId));

        return updateNeeded;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124582</DeveloperDocumentation>
	<Label>@SYS102786</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>LineNum</TitleField1>
	<TitleField2>RFQId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RFQReplyLineIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RFQReplyLineIdx</PrimaryIndex>
	<ReplacementKey>RFQReplyLineIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Accept</Name>
			<Label>@SYS57795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQMark</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Comment</Name>
			<Label>@EPR4460034</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultiLnDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultiLnPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExternalItem</Name>
			<Label>@SYS15183</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExternalItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LeadTime</Name>
			<Label>@SYS14679</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeadTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarDays</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsCWMain</Name>
			<Label>@PDS72</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>pdsCWUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PriceBasis_IN</Name>
			<Label>@GLS6628</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseLines</Name>
			<Label>@SYS9664</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RFQLines</Name>
			<Label>@SYS102858</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RFQQuantity</Name>
			<Label>@SYS102891</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Valid</Name>
			<Label>@SYS8553</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalendarDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQLineComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQRequestedDeliveryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DoSeal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQDoSeal</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExternalItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchExternalItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsAlternate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQIsAlternate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LeadTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeadTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLineAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLineDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLinePercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMultiLnDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMultiLnPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS58702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS23884</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchOrderedQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplyReceived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFQId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RFQLineRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchRFQLineRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RFQMark</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQMark</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQValidDate</ExtendedDataType>
			<Label>@SYS50168</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQValidDate</ExtendedDataType>
			<Label>@SYS102701</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RFQReplyLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RFQId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RFQLineRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RFQLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>PriceDiscLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Currency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Included</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDeliveryType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDisc</MapField>
					<MapFieldTo>LineDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercent</MapField>
					<MapFieldTo>LinePercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
					<MapFieldTo>PurchMarkup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MultiLnDisc</MapField>
					<MapFieldTo>MultiLnDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MultiLnPercent</MapField>
					<MapFieldTo>MultiLnPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>PriceUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>PurchQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Unit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>PurchRFQLineMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AddressRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AddressRefTableId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetBookId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetTransTypePurch</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConfirmedDlv</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddress</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryCity</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryCountryRegionId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryCounty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryStreet</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryZipCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExpiryDateTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExternalItemId</MapField>
					<MapFieldTo>ExternalItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventRefType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemName</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDisc</MapField>
					<MapFieldTo>LineDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercent</MapField>
					<MapFieldTo>LinePercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MultiLnDisc</MapField>
					<MapFieldTo>MultiLnDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MultiLnPercent</MapField>
					<MapFieldTo>MultiLnPercent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PdsCWQty</MapField>
					<MapFieldTo>PdsCWQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>PriceUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchMarkup</MapField>
					<MapFieldTo>PurchMarkup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchPrice</MapField>
					<MapFieldTo>PurchPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchQty</MapField>
					<MapFieldTo>PurchQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchUnit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>QtyOrdered</MapField>
					<MapFieldTo>QtyOrdered</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReqPlanIdSched</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReqPOId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RFQId</MapField>
					<MapFieldTo>RFQId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RFQType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Status</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatusHigh</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatusLow</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
					<MapFieldTo>LineAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchQty</MapField>
					<MapFieldTo>PurchQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchUnit</MapField>
					<MapFieldTo>PurchUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditNoteDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsMaxRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MaximumRetailPrice</MapField>
					<MapFieldTo>MaximumRetailPrice_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAsPerOriginalInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchRFQLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>PurchRFQLine_PurchRFQReplyLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFQLineRecId</Name>
					<SourceEDT>PurchRFQLineRefRecId</SourceEDT>
					<Field>RFQLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchRFQTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchRFQTable_PurchRFQReplyLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFQId</Name>
					<SourceEDT>PurchRFQId</SourceEDT>
					<Field>RFQId</Field>
					<RelatedField>RFQId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RFQIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>UnitOfMeasure_PurchRFQReplyLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchUnit</Name>
					<Field>PurchUnit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>