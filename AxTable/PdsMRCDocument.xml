<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsMRCDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.IO;
using System.IO.Compression;

public class PdsMRCDocument extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bomVersionExists</Name>
				<Source><![CDATA[
    private boolean bomVersionExists()
    {
        return (select bomVersion
            where bomVersion.ItemId == this.ItemId
                && bomVersion.bomId == this.bomid).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryRegionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the country or region in the current PdsMRCDocument record.
    /// </summary>
    /// <returns>
    /// The name of the country or region.
    /// </returns>
    public display LogisticsAddressCountryRegionShortName countryRegionName()
    {
        return LogisticsAddressCountryRegionTranslation::find(this.CountryId).ShortName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets inital values for the new record.
    /// </summary>
    public void initValue()
    {
        super();

        this.EffectiveDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>productName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the product name based on the item number and language of the current PdsMRCDocument record.
    /// </summary>
    /// <returns>
    /// The product name.
    /// </returns>
    public display EcoResProductName productName()
    {
        return InventTable::find(this.ItemId).productName(this.Language);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        #define.emptystr('')

        if (PdsMRCParameters::find().RequireReason
            && (!this.ModificationReason
                || strltrim(this.ModificationReason) == #emptystr))
        {
            throw error("@PDS802");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldnum(PdsMRCDocument, bomid):
                    if (this.bomid && !this.bomVersionExists())
                    {
                        ret = checkFailed(strfmt("@PDS1173", this.bomid,
                            this.ItemId));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean         ret;
        PdsMRCDocument  document;

        ret   = super();

        //Check effective date is before expiry.
        if (ret
            && this.ExpiryDate
            && this.EffectiveDate > this.ExpiryDate)
        {
            ret = checkFailed(strfmt("@PDS803", "@PDS804", "@PDS805"));
        }

        if (ret)
        {
            select firstonly document
                where  document.ItemId       == this.ItemId
                    && document.CountryId    == this.CountryId
                    && document.Language     == this.Language
                    && document.bomid        == this.bomid
                    && document.MajorVersion == this.MajorVersion
                    && document.MinorVersion == this.MinorVersion
                    && document.RecId        != this.RecId;

            if (document.RecId)
            {
                ret = checkFailed("@PDS806");
            }
        }
        if (ret && this.Active)
        {
            while select document
                where  document.ItemId     == this.ItemId
                    && document.CountryId  == this.CountryId
                    && document.Language   == this.Language
                    && document.bomid      == this.bomid
                    && document.Active
                    && document.RecId      != this.RecId
            {
                ret = PdsMRCDocument::checkDateOverlap(this, document);

                if (!ret)
                {
                    break;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDateOverlap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Compares the two documents to ensure that there is not date overlaps between the two.
    /// </summary>
    /// <param name="_curDoc">current docuemnt to compare.</param>
    /// <param name="_checkAgainstDoc">document to compare the current document to.</param>
    /// <returns>Returns false if there is a date overlap, and true if the dates don't overlap.</returns>
    public static boolean checkDateOverlap(
        PdsMRCDocument  _curDoc,
        PdsMRCDocument  _checkAgainstDoc)
    {
        if (_curDoc.ExpiryDate == _checkAgainstDoc.ExpiryDate)
        {
            return checkFailed(strfmt("@PDS807",_checkAgainstDoc.Document));
        }

        if (_curDoc.EffectiveDate == _checkAgainstDoc.EffectiveDate)
        {
            return checkFailed(strfmt("@PDS807",_checkAgainstDoc.Document));
        }

        if ((_curDoc.ExpiryDate  >= _checkAgainstDoc.EffectiveDate
                || !_curDoc.ExpiryDate)
            && (_curDoc.EffectiveDate <= _checkAgainstDoc.ExpiryDate
                || !_checkAgainstDoc.ExpiryDate))
        {
            return checkFailed(strfmt("@PDS807",_checkAgainstDoc.Document));
        }

        if (_checkAgainstDoc.ExpiryDate >= _curDoc.EffectiveDate
            && _checkAgainstDoc.EffectiveDate <= _curDoc.ExpiryDate)
        {
            return checkFailed(strfmt("@PDS807",_checkAgainstDoc.Document));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if a record exists with the same docId otherwise returns false and displays an error.
    /// </summary>
    /// <param name="_docId">docId to search for.</param>
    /// <returns>Result of search for record with corresponding docId.</returns>
    public static boolean checkExist(PdsMRCDocumentId _docId)
    {
        boolean ret = true;

        if (!PdsMRCDocument::exist(_docId))
        {
            ret = checkFailed(strfmt(PdsMRCDocument::txtNotExist(), _docId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(PdsMRCDocumentId _docId)
    {
        return _docId
            && (select pdsMRCDocument
                    where pdsMRCDocument.DocumentId == _docId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existDocIdItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns the check for a PdsMRCDocument
    /// with corresponding ItemID and DocuemntId.
    /// </summary>
    /// <param name="_docId">
    /// DocuemntId to check if exists
    /// </param>
    /// <param name="_itemId">
    /// ItemId to check if exists.
    /// </param>
    /// <returns>
    /// true if there is a corresponding document; otherwise false;
    /// </returns>
    public static boolean existDocIdItemId(
        PdsMRCDocumentId _docId,
        ItemId _itemId)
    {
        return _docId && _itemId
            && (select pdsMRCDocument
                    where pdsMRCDocument.ItemId == _itemId
                        && pdsMRCDocument.DocumentId == _docId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsMRCDocument find(
        PdsMRCDocumentId    _docId,
        boolean             _forUpdate = false)
    {
        PdsMRCDocument     document;

        if (_docId)
        {
            document.selectForUpdate(_forUpdate);
            select firstonly document
                where document.DocumentId == _docId;
        }

        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActiveDoc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the current active document.
    /// </summary>
    /// <param name="_itemId">Item to find the active document for.</param>
    /// <param name="_date">Date for which the document should be active.</param>
    /// <param name="_countryId">Country/region for which the document should be active.</param>
    /// <param name="_languageId">Language in which the active document should be composed.</param>
    /// <param name="_bomId">BOM for which the document exists.</param>
    /// <returns>Active document found.</returns>
    public static PdsMRCDocument findActiveDoc(
        ItemId                  _itemId,
        TransDate               _date,
        AddressCountryRegionId  _countryId,
        LanguageId              _languageId,
        PdsMRCBOMId             _bomId)
    {
        PdsMRCDocument  document;

        if (_countryId && _languageId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.Language        == _languageId
                    && document.bomid           == _bomId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate >= _date);
        }

        if (!document.RecId && _countryId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.bomid           == _bomId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate >= _date);
        }

        if (!document.RecId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.bomid           == _bomId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate >= _date);
        }

        if (!document.RecId && _countryId && _languageId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.Language        == _languageId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate  >= _date);
        }

        if (!document.RecId && _countryId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId      == _countryId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate  >= _date);
        }

        if (!document.RecId && _languageId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.Language        == _languageId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate  >= _date);
        }

        if (!document.RecId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.EffectiveDate   <= _date
                    && (!document.ExpiryDate
                        || document.ExpiryDate  >= _date);
        }

        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActiveDocNoDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the current active document.
    /// </summary>
    /// <param name="_itemId">Item to find the active document for.</param>
    /// <param name="_countryId">Country/region for which the document should be active.</param>
    /// <param name="_languageId">Language in which the active document should be composed.</param>
    /// <param name="_bomId">BOM for which the document exists.</param>
    /// <returns>Active document found.</returns>
    public static PdsMRCDocument findActiveDocNoDate(
        ItemId                  _itemId,
        AddressCountryRegionId  _countryId,
        LanguageId              _languageId,
        PdsMRCBOMId             _bomId)
    {
        PdsMRCDocument  document;

        if (_countryId && _languageId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.Language        == _languageId
                    && document.bomid           == _bomId;
        }

        if (!document.RecId && _countryId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.bomid           == _bomId;
        }

        if (!document.RecId && _bomId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.bomid           == _bomId;
        }

        if (!document.RecId && _countryId && _languageId)
        {
            select firstonly document
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId       == _countryId
                    && document.Language        == _languageId;
        }

        if (!document.RecId && _countryId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.CountryId      == _countryId;
        }

        if (!document.RecId && _languageId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId
                    && document.Language        == _languageId;
        }

        if (!document.RecId)
        {
            select firstonly document
                order by CountryId, Language, bomid desc
                where  document.Active
                    && document.ItemId          == _itemId;
        }

        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns default warning used in the checkExist method when record doens't exist.
    /// </summary>
    /// <returns>Static text used to display that a record doesn't exist.</returns>
    public static TxtNotExist txtNotExist()
    {
        return "@PDS808";
    }

]]></Source>
			</Method>
			<Method>
				<Name>printProductSafetyDataSheets</Name>
				<Source><![CDATA[
    internal static void printProductSafetyDataSheets(List _docuRefRecIdList)
    {
        if (_docuRefRecIdList.elements() > 1)
        {
            PdsMRCDocument::createProductSafetyDataSheetsZipFile(_docuRefRecIdList.getEnumerator());
        }
        else
        {
            PdsMRCDocument::printProductSafetyDataSheet(_docuRefRecIdList.getEnumerator());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>printProductSafetyDataSheet</Name>
				<Source><![CDATA[
    private static void printProductSafetyDataSheet(ListEnumerator _leRecIds)
    {
        if (_leRecIds.moveNext())
        {
            DocuRef         docuRef;

            // Print first document
            select firstonly docuRef
                    where  docuRef.RecId == _leRecIds.current();
            if (docuRef)
            {
                Args args = new Args();
                args.record(docuRef);
                args.parmEnum(DocuCode::Print);

                DocuAction::main(args);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProductSafetyDataSheetsZipFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates Zip-archive with product safety data sheets.
    /// </summary>
    /// <param name = "_docuRefRecIds"> List of DocuRef RecIds. </param>
    private static void createProductSafetyDataSheetsZipFile(ListEnumerator _docuRefRecIds)
    {
        DocuRef         docuRef;
        DocuValue       docuVal;

        // Key: the file name with file type; value: the DocuRef record
        Map storeData = new Map(Types::String, Types::Record);

        while (_docuRefRecIds.moveNext())
        {
            select firstonly docuRef
                        join docuVal
                    where  docuRef.RecId  == _docuRefRecIds.current()
                        && docuRef.ValueRecId   == docuVal.RecId;

            if (docuRef)
            {
                str fileName = strfmt("%1.%2", docuRef.Name, docuVal.FileType);
                if (storeData.exists(fileName))
                {
                    // Creating a new unique file name to eliminate the situation when there are files with the same name
                    fileName = strfmt("%1 [%2].%3", docuRef.Name, docuRef.RecId, docuVal.FileType);
                }
                storeData.insert(fileName, docuRef);
            }
        }

        PdsMRCDocument::createZipFile("@PDS797", storeData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createZipFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create zip-archive and send it to user.
    /// </summary>
    /// <param name = "_archiveName"> Name of zip archive. </param>
    /// <param name = "_cStoreData">
    /// This map contains
    ///      key: file name with file type;
    ///      value: DocuRef record. 
    /// </param>
    private static void createZipFile(str _archiveName, Map _cStoreData)
    {
        if (_cStoreData.elements() > 0)
        {
            using(MemoryStream zipStream  = new MemoryStream())
            {
                using(ZipArchive archive  = new ZipArchive(zipStream, ZipArchiveMode::Create, true))
                {
                    MapEnumerator mapEnumerator = _cStoreData.getEnumerator();

                    while(mapEnumerator.moveNext())
                    {
                        ZipArchiveEntry dataFileEntry = archive.CreateEntry(mapEnumerator.currentKey());

                        using (Stream dataFileEntryStream = dataFileEntry.Open())
                        {
                            Stream stream = DocumentManagement::getAttachmentStream(mapEnumerator.currentValue());
                            stream.CopyTo(dataFileEntryStream);
                        }
                    }
                }
                Dynamics.AX.Application.File::SendFileToUser(zipStream, _archiveName + '.zip');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpiryDateBasedOnApprovalDateAndMSDSInterval</Name>
				<Source><![CDATA[
    private void defaultExpiryDateBasedOnApprovalDateAndMSDSInterval()
    {
        PdsMRCMSDSInterval interval = PdsMRCParameters::find().MSDSInterval;

        if (this.isFieldSet(fieldNum(PdsMRCDocument, ApprovalDate))
            && interval 
            && this.ApprovalDate)
        {
            this.ExpiryDate = this.ApprovalDate + interval;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsMRCDocument, ExpiryDate):
                this.defaultExpiryDateBasedOnApprovalDateAndMSDSInterval();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies used for defaulting field values.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(PdsMRCDocument, ExpiryDate),
                [fieldNum(PdsMRCDocument, ApprovalDate)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting field values.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsMRC</ConfigurationKey>
	<DeveloperDocumentation>@PDS1080</DeveloperDocumentation>
	<FormRef>PdsMRCDocument</FormRef>
	<Label>@PDS797</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CountryId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>DocumentNumIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>DocumentNumIdx</PrimaryIndex>
	<ReplacementKey>DocumentNumIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Document</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Document</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Association</Name>
			<Label>@PDS799</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>productName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>countryRegionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>changelog</Name>
			<Label>@PDS800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModificationReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentDetail</Name>
			<Label>@PDS1990</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MajorVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinorVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentName</Name>
			<Label>@SYS92784</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Document</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentNum</Name>
			<Label>@SYS8434</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Effectivity</Name>
			<Label>@PDS801</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpiryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@PDS1147</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApprovalDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpiryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCActive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ApprovalDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCApprovalDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Approver</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@PDS668</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOMID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCBOMId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Document</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCDocumentName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCDocumentId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EffectiveDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCEffectiveDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ExpiryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCExpiryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Language</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCLanguageId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MajorVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMajorVersion</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinorVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMinorVersion</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModificationReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCModificationReason</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ActiveDocumentsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Active</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CountryId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Language</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BOMID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EffectiveDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExpiryDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DocumentNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Approver</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BOMIdRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS10785</EntityRelationshipRole>
			<RelatedTable>BOM</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMID</Name>
					<Field>BOMID</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123851</EntityRelationshipRole>
			<RelatedTable>BOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMID</Name>
					<SourceEDT>PdsMRCBOMId</SourceEDT>
					<Field>BOMID</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HCMWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS34368</EntityRelationshipRole>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS14428</EntityRelationshipRole>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PdsMRCDocument</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Language</Name>
					<Field>Language</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTableLookup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTableLookup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PdsMRCDocument</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Language</Name>
					<SourceEDT>PdsMRCLanguageId</SourceEDT>
					<Field>Language</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile_Extern</Name>
					<SourceEDT>PdsMRCLanguageId</SourceEDT>
					<RelatedField>LabelFile</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS120586</EntityRelationshipRole>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTableRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS10657</EntityRelationshipRole>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLineRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS53872</EntityRelationshipRole>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLineRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS37101</EntityRelationshipRole>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>