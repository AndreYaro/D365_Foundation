<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCycleCountPlanOverview</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSCycleCountPlanOverview extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayTotalCounts</Name>
				<Source><![CDATA[
	/// <summary>
	/// Display method for total count of work.
	/// </summary>
    public display WHSTotalCycleCounts displayTotalCounts()
    {
        WHSTotalCycleCounts     totalCounts;
        WHSWorkTable            workTable;

        select count(WorkPriority) from workTable
            where workTable.CycleCountPlanOverview == this.RecId;

        totalCounts = workTable.WorkPriority;

        return totalCounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endPlan</Name>
				<Source><![CDATA[
	/// <summary>
	/// Ends the cycle counting plan.
	/// </summary>
    void endPlan()
    {
        ttsbegin;
   
        this.CycleCountPlanStatus    = WHSCycleCountPlanStatus::Closed;
        this.ClosedDateTime          = DateTimeUtil::utcNow();
        this.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdate</Name>
				<Source><![CDATA[
	/// <summary>
	/// Creates or updates the record.
	/// </summary>
	/// <param name="_cycleCountPlanId">
	/// Plan id of the record.
	/// </param>
	/// <param name="_batchJobRecId">
	/// Batch job id.
	/// </param>
	/// <param name="_submitBatch">
	/// Determines whether the batch is submitted.
	/// </param>
	/// <returns>
	/// The record that is created or updated.
	/// </returns>
    public static WHSCycleCountPlanOverview createOrUpdate(WHSCycleCountPlanId  _cycleCountPlanId,
                                                           RefRecId             _batchJobRecId = 0,
                                                           boolean              _submitBatch = false)
    {
        WHSCycleCountPlanOverview   cycleCountPlanOverview;
        BatchJob                    batchJob;
        container                   con;

        ttsbegin;

        select firstonly forupdate cycleCountPlanOverview
            where cycleCountPlanOverview.CycleCountPlanId        == _cycleCountPlanId    &&
                  cycleCountPlanOverview.CycleCountPlanStatus    != WHSCycleCountPlanStatus::Closed;

        if (cycleCountPlanOverview.RecId == 0)
        {
            cycleCountPlanOverview.CycleCountPlanId      = _cycleCountPlanId;
            cycleCountPlanOverview.CycleCountPlanStatus  = WHSCycleCountPlanStatus::Open;
            cycleCountPlanOverview.SubmittedDateTime     = DateTimeUtil::utcNow();
        }

        if (_batchJobRecId > 0)
        {
            select firstonly batchJob
                where batchJob.RecId == _batchJobRecId;

            con = SysRecurrence::next(batchJob.RecurrenceData, BatchRun::getBatchJobHistoryCount(_batchJobRecId) + 1);

            cycleCountPlanOverview.LastRanDateTime = DateTimeUtil::utcNow();

            if (con != conNull() && conPeek(con, 1) != dateNull())
            {
                cycleCountPlanOverview.CycleCountPlanStatus     = WHSCycleCountPlanStatus::InProcess;
                cycleCountPlanOverview.BatchJobRecId            = _batchJobRecId;
            }
            else
            {
                cycleCountPlanOverview.CycleCountPlanStatus  = WHSCycleCountPlanStatus::Closed;
                cycleCountPlanOverview.ClosedDateTime        = DateTimeUtil::utcNow();
                cycleCountPlanOverview.BatchJobRecId         = _batchJobRecId;
            }
        }
        else if (!_submitBatch)
        {
            cycleCountPlanOverview.CycleCountPlanStatus  = WHSCycleCountPlanStatus::Closed;
            cycleCountPlanOverview.ClosedDateTime        = DateTimeUtil::utcNow();
            cycleCountPlanOverview.LastRanDateTime       = DateTimeUtil::utcNow();
        }

        cycleCountPlanOverview.write();

        ttscommit;

        return cycleCountPlanOverview;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4347</DeveloperDocumentation>
	<FormRef>WHSCycleCountPlanListPage</FormRef>
	<Label>@WAX4000</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CycleCountPlanId</TitleField1>
	<TitleField2>CycleCountPlanStatus</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CycleCountPlanIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CycleCountPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountPlanStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubmittedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastRanDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchJobRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CycleCountPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountPlanStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubmittedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastRanDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchJobRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchJobRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ClosedDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSClosedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CycleCountPlanId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCycleCountPlanId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CycleCountPlanStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSCycleCountPlanStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>LastRanDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLastRanDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SubmittedDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSubmittedDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CycleCountPlanIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CycleCountPlanId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SubmittedDateTime</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SubmittedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BatchJob</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BatchJob</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchJobRecId</Name>
					<Field>BatchJobRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSCycleCountPlan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSCycleCountPlan</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CycleCountPlanId</Name>
					<SourceEDT>WHSCycleCountPlanId</SourceEDT>
					<Field>CycleCountPlanId</Field>
					<RelatedField>CycleCountPlanId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>