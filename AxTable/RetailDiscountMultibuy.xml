<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDiscountMultibuy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailDiscountMultibuy extends RetailPeriodicDiscount
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method copies the data from the original record and updates the current record in the <c>RetailDiscountMultibuy</c> table.
    /// Updates record in the <c>RetailGroupMemberLine</c> and creates the new records in the <c>RetailMultibuyDiscountLine</c> and
    /// <c>RetailDiscountLineMultibuy</c> tables
    /// </summary>
    /// <param name="_original">
    /// Table buffer of the <c>RetailDiscountMultibuy</c>.
    /// </param>
    /// <exception cref="Exception::Error">
    /// Throws error if the record exists in <c>RetailDiscountLineMultibuy</c> table.
    /// </exception>
    public void copyFrom(RetailDiscountMultibuy _original)
    {
        RetailDiscountLineMultibuy    rboMultibuyDiscountItems;
        RetailDiscountLineMultibuy    rboMultibuyDiscountItemsNew;

        RetailMultibuyDiscountLine    rboRBOMultibuyDiscountLine;
        RetailMultibuyDiscountLine    rboRBOMultibuyDiscountLineNew;
        RetailDiscountLineMultibuy    retailDiscountLineMultibuy;

        ttsbegin;
        this.copyDiscountOfferInfo(_original);
        // update multibuy discount related field
        this.copyMultibuyDiscountInfo(_original);
        this.update();

        while select rboMultibuyDiscountItems
            where rboMultibuyDiscountItems.OfferId == _original.OfferId
        {
            rboMultibuyDiscountItemsNew.clear();
            rboMultibuyDiscountItemsNew.data(rboMultibuyDiscountItems);
            rboMultibuyDiscountItemsNew.initValue();
            rboMultibuyDiscountItemsNew.OfferId = this.OfferId;
            rboMultibuyDiscountItemsNew.insert();

            rboMultibuyDiscountItemsNew.copyGroupMemberLineInternal(rboMultibuyDiscountItems.groupMemberLine(), true);
            rboMultibuyDiscountItemsNew.copyRetailDiscountApplicabilityRuleInternal(rboMultibuyDiscountItems);
        }

        while select rboRBOMultibuyDiscountLine
            where rboRBOMultibuyDiscountLine.MultibuyId == _original.OfferId
        {
            rboRBOMultibuyDiscountLineNew.clear();
            rboRBOMultibuyDiscountLineNew.data(rboRBOMultibuyDiscountLine);
            rboRBOMultibuyDiscountLineNew.MultibuyId = this.OfferId;
            rboRBOMultibuyDiscountLineNew.insert();
        }

        this.copyDiscountPriceGroups(_original.OfferId);
        ttscommit;

        this.refreshDS();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyMultibuyDiscountInfo</Name>
				<Source><![CDATA[
    public void copyMultibuyDiscountInfo(RetailDiscountMultibuy _original)
    {
        this.MultibuyDiscountType = _original.MultibuyDiscountType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.PeriodicDiscountType = RetailDiscountOfferTypeBase::Multibuy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRBODiscountOfferTableEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the allow edit property for the data source fields.
    /// </summary>
    /// <param name="_enabled">
    /// A Boolean value that indicates whether the data source is editable.
    /// </param>
    public void setRBODiscountOfferTableEnabled(boolean _enabled)
    {
        if (FormDataUtil::isFormDataSource(this))
        {
            this.setTableFieldsEnabled(FormDataUtil::getFormDataSource(this), this.TableId, _enabled);
            this.setRBODiscountOfferParentTableEnabled(_enabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailDiscountMultibuy</c> table.
    /// </summary>
    /// <param name="_offerId">
    /// The mutibuy ID number of the <c>RetailDiscountMultibuy</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailMultibuyDiscountId</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailDiscountMultibuy find(RetailMultibuyDiscountId _offerId, boolean _forUpdate = false)
    {
        RetailDiscountMultibuy multibuyDiscount;

        if (_offerId)
        {
            multibuyDiscount.selectForUpdate(_forUpdate);

            select firstonly multibuyDiscount
                where multibuyDiscount.OfferId == _offerId;
        }

        return multibuyDiscount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEnable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the discount can be enabled.
    /// </summary>
    /// <returns>
    /// true if the discount can be enabled; otherwise, false.
    /// </returns>
    public boolean validateEnable()
    {
        RetailMultibuyDiscountLine multibuyDiscountLine;
        RetailPriceDiscPct         lowestValue = 0.00;
        boolean                    ret;

        ret = super();

        if (ret && this.Status == RetailDisabledEnabled::Enabled)
        {
            boolean isFirst = true;
            // higher qty higher discount, but lower price
            while select priceDiscPct from multibuyDiscountLine
                order by multibuyDiscountLine.qtyLowest
                where multibuyDiscountLine.multibuyId == this.OfferId
            {
                if (isFirst)
                {
                    isFirst = false;
                }
                else
                {
                    ret = this.isValidDiscountValue(lowestValue, multibuyDiscountLine);

                    if (!ret)
                    {
                        this.promptAndWriteValidationLog(
                            RetailPricingValidationMessageSeverity::Warning,
                            "@Retail:DiscountValueDecrease");
                        return ret;
                    }
                }

                lowestValue = multibuyDiscountLine.priceDiscPct;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDiscountValue</Name>
				<Source><![CDATA[
    public boolean isValidDiscountValue(
        RetailPriceDiscPct _lowestValue,
        RetailMultibuyDiscountLine _multibuyDiscountLine)
    {
        return this.MultibuyDiscountType == RetailDiscountTypeEnum::DiscPct ?
            _multibuyDiscountLine.priceDiscPct >= _lowestValue : _multibuyDiscountLine.priceDiscPct <= _lowestValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET6379</DeveloperDocumentation>
	<Label>@RET6381</Label>
	<CacheLookup>NotInTTS</CacheLookup>
	<Extends>RetailPeriodicDiscount</Extends>
	<Modules>Merchandising</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailMultibuyDiscountLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailMultibuyDiscountLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MultibuyDiscountType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MultibuyDiscountType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMultibuyDiscountType</ExtendedDataType>
			<EnumType>RetailDiscountTypeEnum</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPeriodicDiscount1_100523</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailPeriodicDiscount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>