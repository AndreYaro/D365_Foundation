<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SpecContext extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.validateWrite())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        this.validateCustVendTableId();
        this.validateCustVendTableRecId();

        this.validateSourceTableId();
        this.validateSourceRecIdExists();
        this.validateSourceRecIdIsEqualToCustVendRecId();
        this.validateSourceCompany();
        this.validateSourceCompanyIsEqualToCustVendCompany();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCustVendTableId</Name>
				<Source><![CDATA[
    private void validateCustVendTableId()
    {
        if (this.CustVendTableId != tableNum(CustTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCustVendTableRecId</Name>
				<Source><![CDATA[
    private void validateCustVendTableRecId()
    {
        if (this.CustVendRecId == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceTableId</Name>
				<Source><![CDATA[
    private void validateSourceTableId()
    {
        if (this.SourceTableId != tableNum(CustTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceCompany</Name>
				<Source><![CDATA[
    private void validateSourceCompany()
    {
        if (this.SourceCompany != this.DataAreaId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceCompanyIsEqualToCustVendCompany</Name>
				<Source><![CDATA[
    private void validateSourceCompanyIsEqualToCustVendCompany()
    {
        if (this.SourceCompany != this.CustVendCompany)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceRecIdExists</Name>
				<Source><![CDATA[
    private void validateSourceRecIdExists()
    {
        if (this.SourceRecId == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceRecIdIsEqualToCustVendRecId</Name>
				<Source><![CDATA[
    private void validateSourceRecIdIsEqualToCustVendRecId()
    {
        if (this.SourceRecId != this.CustVendRecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAndInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize and insert.
    /// </summary>
    /// <param name = "_custVendTable">The customer or vendor.</param>
    /// <param name = "_source">The source settlement group.</param>
    /// <returns>A <c>SpecContext</c> buffer. </returns>
    internal static SpecContext initAndInsert(CustVendTable _custVendTable, Common _source = _custVendTable)
    {
        SpecContext context;

        changecompany(_source.DataAreaId)
        {
            context.CustVendTableId = _custVendTable.TableId;
            context.CustVendCompany = _custVendTable.DataAreaId;
            context.CustVendRecId = _custVendTable.RecId;

            context.SourceTableId = _source.TableId;
            context.SourceCompany = _source.DataAreaId;
            context.SourceRecId = _source.RecId;

            context.insert();
        }

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>SpecContext</c> table.
    /// </summary>
    /// <param name = "_recId">The record ID of the <c>SpecContext</c> record to find.</param>
    /// <param name = "_company">The company of the <c>SpecContext</c> record to find.</param>
    /// <returns>A record from the <c>SpecContext</c> table; otherwise an empty record.</returns>
    internal static SpecContext find(RecId _recId, CompanyId _company)
    {
        SpecContext context;

        changecompany(_company)
        {
            select firstonly context
                where context.RecId == _recId;
        }

        return context;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:SpecContextDeveloperDocumentation</DeveloperDocumentation>
	<Label>@CashManagement:SpecContextLabel</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Bank</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceCompany</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CustVendTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustVendRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendCompany</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>SpecTransExecution</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendCompany</Name>
					<Field>CustVendCompany</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendTableId</Name>
					<Field>CustVendTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendRecId</Name>
					<Field>CustVendRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>