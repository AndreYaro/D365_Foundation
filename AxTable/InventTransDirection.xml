<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransDirection</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransDirection extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Controls the delete record action.
    /// </summary>
    /// <param name="_mustDelete">
    ///    A Boolean value that indicates whether to trigger the delete action.
    /// </param>
    public void delete(boolean _mustDelete = false)
    {
        if (_mustDelete)
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>InventTransTable</c> table.
    /// </summary>
    /// <param name="_inventDirection">
    ///    The <c>InventDirection</c> value of the record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>InventTransTable</c> table.
    /// </returns>
    public static InventTransDirection find(InventDirection _inventDirection)
    {
        InventTransDirection   inventTransDirection;

        select firstonly inventTransDirection
            where inventTransDirection.Direction   == _inventDirection;

        return inventTransDirection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAllRecords</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates two records in the table.
    /// </summary>
    /// <remarks>
    ///    This method only works the first time it is called.
    /// </remarks>
    static public void initAllRecords()
    {
        InventTransDirection   inventTransDirection   = InventTransDirection::find(InventDirection::Receipt);

        if (!inventTransDirection.RecId)
        {
            ttsbegin;
            inventTransDirection.Direction = InventDirection::Receipt;
            inventTransDirection.insert();

            inventTransDirection.Direction = InventDirection::Issue;
            inventTransDirection.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddGroupByDirection</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds an <c>InventTransDirection</c> table and enables grouping based on the <c>Direction</c> field.
    /// </summary>
    /// <param name="_qbdsTrans">
    ///    The query build data source that contains the <c>InventTrans</c> data source.
    /// </param>
    /// <returns>
    ///    The final extended query build data source.
    /// </returns>
    static public QueryBuildDataSource queryAddGroupByDirection(QueryBuildDataSource _qbdsTrans)
    {
        QueryBuildDataSource    qbdsDirection;
        QueryBuildRange         qbr;

        // Add InventTransDirection data source
        qbdsDirection   = _qbdsTrans.addDataSource(tableNum(InventTransDirection));
        qbdsDirection.joinMode(JoinMode::InnerJoin);

        // Add groupBy InventTransDirection.Direction field
        qbdsDirection.addGroupByField(fieldNum(InventTransDirection,Direction));

        //Build complex range condition to emulate the following  "where" condition
        //      while select SUM(Qty)  from InventTrans
        //              join InventTransDirection where ((InventTrans.Qty < 0 && 'Issue' == InventTransDirection.Direction)
        //                    || (InventTrans.Qty > 0 && 'Receipt' == InventTransDirection.Direction))
        //          group by InventTransDirection.Direction
        qbr = qbdsDirection.addRange(
                fieldNum(InventTrans,DataAreaId));

        qbr.value(strFmt('(((%7.%1 < 0) && (%3 == %6.%4)) || ((%7.%1 > 0) && (%5 == %6.%4)))',
        fieldStr(InventTrans, Qty),                 // %1   -   InventTrans.Qty
        0,                                          // %2   -   Zero value
        any2int(InventDirection::Issue),            // %3   -   Issue
        fieldStr(InventTransDirection, Direction),  // %4   -   TestDirection.Direction
        any2int(InventDirection::Receipt),          // %5   -   Receipt
        qbdsDirection.name(),                       // %6   -   TestDirection
        _qbdsTrans.name()));                        // %7   -   InventTrans

        // make range hidden, so it does not require additional access rights
        qbr.status(RangeStatus::Hidden);

        // Init all records in InventTransDirection table (it will happen first time only)
        InventTransDirection::initAllRecords();

        return qbdsDirection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS329558</DeveloperDocumentation>
	<Label>@SYS130669</Label>
	<TableGroup>Framework</TableGroup>
	<TitleField1>Direction</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>DirectionIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>DirectionIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Direction</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8350</Label>
			<EnumType>InventDirection</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DirectionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Direction</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>