<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholDeclarationJournalTrans_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AlcoholDeclarationJournalTrans_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allBranchesApproved</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows if all related records in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table are approved.
    /// </summary>
    /// <returns>
    ///    true if all related records in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table are approved;
    ///    false otherwise.
    /// </returns>
    display boolean allBranchesApproved()
    {
        return ((select firstonly AlcoholDeclarationJournalTransBranch_RU
                    where AlcoholDeclarationJournalTransBranch_RU.JournalId              == this.JournalId              &&
                          AlcoholDeclarationJournalTransBranch_RU.AlcoholDeclarationType == this.AlcoholDeclarationType).RecId &&
              ! (select firstonly AlcoholDeclarationJournalTransBranch_RU
                    where AlcoholDeclarationJournalTransBranch_RU.JournalId              == this.JournalId              &&
                          AlcoholDeclarationJournalTransBranch_RU.AlcoholDeclarationType == this.AlcoholDeclarationType &&
                          AlcoholDeclarationJournalTransBranch_RU.Approved               == NoYes::No).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>correctedFiscalYear</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows the corrected fiscal year from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <returns>
    ///    The corrected fiscal year from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>

    display AlcoholDeclarationFiscalYear_RU correctedFiscalYear()
    {
        return this.journalTable().CorrectedFiscalYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>correctedPeriodNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows the corrected period number from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <returns>
    ///    The corrected period number from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>

    display AlcoholDeclarationPeriodNum_RU correctedPeriodNum()
    {
        return this.journalTable().CorrectedPeriodNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by filling some field from the related <c>AlcoholDeclarationJournalTable_RU</c> record.
    /// </summary>
    /// <param name="_journalTable">
    ///    A table buffer instance relating to the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </param>
    public void initFromJournalTable(AlcoholDeclarationJournalTable_RU  _journalTable)
    {
        this.JournalId = _journalTable.JournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the corresponding record in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The corresponding record in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>
    public AlcoholDeclarationJournalTable_RU journalTable(boolean   _forUpdate = false)
    {
        return AlcoholDeclarationJournalTable_RU::find(this.JournalId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies field of the journal lines.
    /// </summary>
    /// <param name="_fieldId">
    /// The field id.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(AlcoholDeclarationJournalTrans_RU, Approved) :
                if (this.Approved)
                {
                    this.Approver = HcmWorker::userId2Worker(curUserId());
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows the calculation status of the current record based on the status of
    ///    <c>AlcoholDeclarationJournalTransBranch_RU</c> records.
    /// </summary>
    /// <returns>
    ///    true if corresponding records in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table exist and all of them are calculated;
    ///    false otherwise.
    /// </returns>

    display AlcoholDeclarationStatus_RU status()
    {
        return (select firstonly AlcoholDeclarationJournalTransBranch_RU
                    order by Status asc
                        where AlcoholDeclarationJournalTransBranch_RU.JournalId              == this.JournalId &&
                              AlcoholDeclarationJournalTransBranch_RU.AlcoholDeclarationType == this.AlcoholDeclarationType).Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the field modification was performed correctly.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    ///    The ID of the field to check.
    /// </param>
    /// <returns>
    ///    true if the field was modified correctly; false otherwise.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(AlcoholDeclarationJournalTrans_RU, Approved):
                if (this.Approved == NoYes::Yes && this.orig().Approved == NoYes::No)
                {
                    if (this.status() != AlcoholDeclarationStatus_RU::Calculated)
                        ret = checkFailed(strfmt("@SYS4002794", AlcoholDeclarationStatus_RU::Calculated));

                    if (ret && !this.allBranchesApproved())
                        ret = checkFailed("@SYS4002795");
                }
                break;

                default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the record can be saved.
    /// </summary>
    /// <returns>
    ///    true if the record can be saved; false otherwise.
    /// </returns>
    public boolean validateWrite()
    {
        boolean         ret;

        ret = super();

        if (ret)
        {
            if (this.Approved && ! this.Approver)
            {
                ret = checkFailed("@SYS67768");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>AlcoholDeclarationJournalTrans_RU</c> table.
    /// </summary>
    /// <param name="_journalId">
    ///    The ID of the alcohol journal table.
    /// </param>
    /// <param name="_alcoholDeclarationType">
    ///    The type of the alcohol declaration.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>AlcoholDeclarationJournalTrans_RU</c> table.
    /// </returns>
    public static AlcoholDeclarationJournalTrans_RU find(AlcoholDeclarationJournalId_RU   _journalId,
                                                         AlcoholDeclarationType_RU        _alcoholDeclarationType,
                                                         boolean                          _forUpdate = false)
    {
        AlcoholDeclarationJournalTrans_RU alcoholDeclarationJournalTrans;

        if (_journalId)
        {
            if (_forUpdate)
                alcoholDeclarationJournalTrans.selectForUpdate(_forUpdate);

            select firstonly alcoholDeclarationJournalTrans
                index hint JournalTypeIdx
                where alcoholDeclarationJournalTrans.JournalId              == _journalId
                   && alcoholDeclarationJournalTrans.AlcoholDeclarationType == _alcoholDeclarationType;
        }
        return alcoholDeclarationJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalTransBranchSet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns packed set with the RecIds of the <c>AlcoholDeclarationJournalTransBranch_RU</c> records
    ///    related to the current <c>AlcoholDeclarationJournalTrans_RU</c>.
    /// </summary>
    /// <returns>
    ///    Packed set with the RecIds of the <c>AlcoholDeclarationJournalTransBranch_RU</c> records
    ///    related to the current <c>AlcoholDeclarationJournalTrans_RU</c>.
    /// </returns>
    public container getJournalTransBranchSet()
    {
        Set     set = new Set(Types::Int64);
        AlcoholDeclarationJournalTransBranch_RU     journalTransBranch;

        while select RecId from journalTransBranch
            where journalTransBranch.JournalId              == this.journalId
               && journalTransBranch.AlcoholDeclarationType == this.AlcoholDeclarationType
        {
            set.add(journalTransBranch.RecId);
        }

        return set.pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4002782</DeveloperDocumentation>
	<FormRef>AlcoholDeclarationJournalTrans_RU</FormRef>
	<Label>@SYS4002781</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>AlcoholDeclarationType</TitleField2>
	<ClusteredIndex>JournalTypeIdx</ClusteredIndex>
	<Modules>EGAIS</Modules>
	<PrimaryIndex>JournalTypeIdx</PrimaryIndex>
	<ReplacementKey>JournalTypeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>correctedFiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>correctedPeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlcoholDeclarationType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AlcoholDeclarationType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Approved</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Approver</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CorrectionNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationCorrectionNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AlcoholDeclarationJournalId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AlcoholDeclarationJournalTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AlcoholDeclarationJournalTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<SourceEDT>AlcoholDeclarationJournalId_RU</SourceEDT>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AlcoholDeclarationJournalTrans_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>