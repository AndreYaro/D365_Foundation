<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileDeviceQueueMessageCollectionLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSMobileDeviceQueueMessageCollectionLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByBatchAffinity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSMobileDeviceQueueMessageCollectionLog</c> table.
    /// </summary>
    /// <param name="_batchAffinity">The batch affinity to find.</param>
    /// <param name="_forupdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>WHSMobileDeviceQueueMessageCollectionLog</c> table; otherwise, an empty record.</returns>
    [SysObsolete('Use WHSMobileDeviceQueueMessageCollectionLog::findByBatchAffinityCollectionRecId() instead.', false, 20\11\2023)]
    public static WHSMobileDeviceQueueMessageCollectionLog findByBatchAffinity(WHSMobileDeviceQueueBatchAffinity _batchAffinity, boolean _forupdate = false)
    {
        WHSMobileDeviceQueueMessageCollectionLog mobileDeviceQueueMessageCollectionLog;

        if (_batchAffinity)
        {
            mobileDeviceQueueMessageCollectionLog.selectForUpdate(_forupdate);

            select firstonly mobileDeviceQueueMessageCollectionLog
                where mobileDeviceQueueMessageCollectionLog.BatchAffinity == _batchAffinity;
        }

        return mobileDeviceQueueMessageCollectionLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByBatchAffinityCollectionRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSMobileDeviceQueueMessageCollectionLog</c> table.
    /// </summary>
    /// <param name="_batchAffinity">The batch affinity to find.</param>
    /// <param name="_messageCollectionRecId">The message collection RecId to find.</param>
    /// <param name="_forupdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>WHSMobileDeviceQueueMessageCollectionLog</c> table; otherwise, an empty record.</returns>
    public static WHSMobileDeviceQueueMessageCollectionLog findByBatchAffinityCollectionRecId(WHSMobileDeviceQueueBatchAffinity _batchAffinity, WHSMobileDeviceQueueMessageCollectionRecId _messageCollectionRecId, boolean _forupdate = false)
    {
        WHSMobileDeviceQueueMessageCollectionLog mobileDeviceQueueMessageCollectionLog;

        if (_batchAffinity)
        {
            mobileDeviceQueueMessageCollectionLog.selectForUpdate(_forupdate);

            select firstonly mobileDeviceQueueMessageCollectionLog
                where mobileDeviceQueueMessageCollectionLog.BatchAffinity == _batchAffinity
                    && mobileDeviceQueueMessageCollectionLog.QueueMessageCollectionRecId == _messageCollectionRecId;
        }

        return mobileDeviceQueueMessageCollectionLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSMobileDeviceQueueMessageCollectionLog_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:Table_WHSMobileDeviceQueueMessageCollectionLog_Label</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>QueueMessageCollectionRecId</TitleField1>
	<TitleField2>createdDateTime</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ErrorLog</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ErrorLog</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MessageProcessing</Name>
			<Label>@WAX:FieldGroup_WHSMobileDeviceQueueMessage_MessageProcessing</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QueueMessageCollectionRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchAffinity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ErrorLog</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMobileDeviceQueueMessageCollectionErrorLog</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>QueueMessageCollectionRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WHSMobileDeviceQueueMessageCollectionRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>BatchAffinity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WHSMobileDeviceQueueBatchAffinity</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MobileDeviceQueueEventIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>QueueMessageCollectionRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSMobileDeviceQueueMessageCollection</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSMobileDeviceQueueMessage</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>QueueMessageCollection</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>QueueMessageCollectionErrors</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QueueMessageCollectionRecId</Name>
					<Field>QueueMessageCollectionRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>