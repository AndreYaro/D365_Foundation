<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxBenefitCodeType_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxBenefitCodeType_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxBenefitCodeType_BR find(TypeName _type, boolean _forupdate = false)
    {
        TaxBenefitCodeType_BR taxBenefitCodeType;

        taxBenefitCodeType.selectForUpdate(_forupdate);

        select firstonly taxBenefitCodeType
            where taxBenefitCodeType.Type == _type;

        return taxBenefitCodeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static TaxBenefitCodeType_BR findRecId(TaxBenefitCodeTypeRef_BR _typeRef, boolean _forupdate = false)
    {
        TaxBenefitCodeType_BR taxBenefitCodeType;

        taxBenefitCodeType.selectForUpdate(_forupdate);

        select firstonly taxBenefitCodeType
            where taxBenefitCodeType.RecId == _typeRef;

        return taxBenefitCodeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBenefitCodeValidForTaxactionCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns if the benefit code order is valid for taxation code.
    /// </summary>
    /// <param name="_benefitCode">
    /// Benefit code.
    /// </param>
    /// <param name="_taxationCode">
    /// Taxation code.
    /// </param>
    /// <returns>
    /// True if a fiscal document can be created, otherwise false
    /// </returns>
    public static boolean isBenefitCodeValidForTaxactionCode(
        FBFiscalDocumentTaxSpedAdjustmentCode_BR _benefitCode,
        TaxationCode_BR _taxationCode)
    {
        boolean ret = true;

        if (_benefitCode && conFind(EFDocConstants_BR::CSTWithTaxBenefit, _taxationCode))
        {
            FBFiscalDocumentAdjustmentCodeICMS_BR fbFiscalDocumentAdjustmentCodeICMS;
            TaxBenefitCodeType_BR taxBenefitCodeType;

            select firstonly RecId from fbFiscalDocumentAdjustmentCodeICMS
                where fbFiscalDocumentAdjustmentCodeICMS.SpedAdjustmentCode == _benefitCode
            exists join taxBenefitCodeType
                where taxBenefitCodeType.RecId == fbFiscalDocumentAdjustmentCodeICMS.TaxBenefitCodeType
                    && taxBenefitCodeType.TaxationCode == _taxationCode;

            ret = fbFiscalDocumentAdjustmentCodeICMS.RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@NFE:TaxBenefitCodeType_DevDoc</DeveloperDocumentation>
	<FormRef>TaxBenefitCodeType_BR</FormRef>
	<Label>@NFE:TaxBenefitCodeType_Title</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Type</TitleField1>
	<TitleField2>TaxationCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>TypeName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description255</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxationCode</Name>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>