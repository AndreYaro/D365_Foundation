<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResCharacteristicRequirementLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Characteristic requirement line.
/// </summary>
public class ResCharacteristicRequirementLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findRequirementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a characteristic requirement line.
    /// </summary>
    /// <param name = "_characteristicRequirement">Characteristic requirement identifier.</param>
    /// <param name = "_characteristicSet">Characteristic set.</param>
    /// <param name = "_characteristicId">Characteristic identifier.</param>
    /// <returns>Characteristic requirement line.</returns>
    public static ResCharacteristicRequirementLine findRequirementLine(RecId _characteristicRequirement,
        ResCharacteristicSetEnum _characteristicSet, Name _characteristicId)
    {
        ResCharacteristicRequirementLine requirementLine;

        select firstonly requirementLine
            where requirementLine.CharacteristicRequirement == _characteristicRequirement
            && requirementLine.CharacteristicSet == _characteristicSet
            && requirementLine.CharacteristicId == _characteristicId;

        return requirementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateRequirementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find or create a characteristic requirement line.
    /// </summary>
    /// <param name = "_characteristicRequirement">Characteristic requirement identifier.</param>
    /// <param name = "_characteristicSet">Characteristic set.</param>
    /// <param name = "_characteristicId">Characteristic identifier.</param>
    /// <returns>Characteristic requirement line.</returns>
    public static ResCharacteristicRequirementLine findOrCreateRequirementLine(RecId _characteristicRequirement,
        ResCharacteristicSetEnum _characteristicSet, Name _characteristicId)
    {
        ResCharacteristicRequirementLine requirementLine;
        requirementLine = ResCharacteristicRequirementLine::findRequirementLine(
            _characteristicRequirement, _characteristicSet, _characteristicId);

        if (!requirementLine)
        {
            requirementLine.CharacteristicRequirement = _characteristicRequirement;
            requirementLine.CharacteristicSet = _characteristicSet;
            requirementLine.CharacteristicId = _characteristicId;
            requirementLine.Characteristic = ResCharacteristicRequirementLine::getCharacteristicValue(_characteristicSet, _characteristicId);
            requirementLine.insert();

            requirementLine = ResCharacteristicRequirementLine::findRequirementLine(
                _characteristicRequirement, _characteristicSet, _characteristicId);
        }

        return requirementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCharacteristicValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find and return characteristics based on <c>ResCharacteristicSetEnum</c> value.
    /// </summary>
    /// <param name = "_characteristicSet">
    /// Characteristic set.
    /// </param>
    /// <param name = "_characteristicId">
    /// Characteristic identifier.
    /// </param>
    /// <returns></returns>
    protected static RecId getCharacteristicValue(ResCharacteristicSetEnum _characteristicSet, Name _characteristicId)
    {
        RecId   characteristic;
        switch (_characteristicSet)
        {
            case ResCharacteristicSetEnum::Skill:
                        characteristic = HcmSkill::findBySkill(_characteristicId).RecId;
                break;

            case ResCharacteristicSetEnum::Certificate:
                        characteristic = HcmCertificateType::findByCertificateType(_characteristicId).RecId;
                break;

            case ResCharacteristicSetEnum::Project:
                        characteristic = ProjTable::find(_characteristicId).RecId;
                break;

            case ResCharacteristicSetEnum::Education:
                        characteristic = HcmEducationDiscipline::findByEducationDiscipline(_characteristicId).RecId;
                break;

            case ResCharacteristicSetEnum::Role:
                        characteristic = PSASchedRole::findById(_characteristicId).RecId;
                break;

        }
        return characteristic;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<TitleField1>CharacteristicRequirement</TitleField1>
	<TitleField2>Characteristic</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CharacteristicRequirement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Characteristic</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Required</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimalRating</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CharacteristicRequirement</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResCharacteristicRequirementRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CharacteristicSet</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ResCharacteristicSetEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Characteristic</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CharacteristicId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Required</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MinimalRating</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CharacteristicIdentifier</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CharacteristicIdentifier</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Requirement</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CharacteristicRequirement</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CharacteristicSet</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CharacteristicId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ResCharacteristicRequirement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResCharacteristicRequirement</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CharacteristicRequirement</Name>
					<Field>CharacteristicRequirement</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResRatingLevel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResRatingLevel</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MinimalRating</Name>
					<Field>MinimalRating</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>