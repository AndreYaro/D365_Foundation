<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentCGUAssets_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetImpairmentCGUAssets_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayFixedAssetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the asset group.
    /// </summary>
    /// <param name="_cguAsset">
    /// Source <c>AssetImpairmentCGUAssets_JP</c> record.
    /// </param>
    /// <returns>
    /// The asset group id.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display AssetGroupId displayFixedAssetGroup(AssetImpairmentCGUAssets_JP _cguAsset)
    {
        return AssetTable::find(_cguAsset.assetId).AssetGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFixedAssetName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the fixed asset name.
    /// </summary>
    /// <param name="_cguAsset">
    /// Source <c>AssetImpairmentCGUAssets_JP</c> record.
    /// </param>
    /// <returns>
    /// The fixed asset name.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display AssetName displayFixedAssetName(AssetImpairmentCGUAssets_JP _cguAsset)
    {
        return AssetTable::find(_cguAsset.assetId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFixedAssetNetBookValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the fixed asset NBV.
    /// </summary>
    /// <param name="_cguAsset">
    /// Source <c>AssetImpairmentCGUAssets_JP</c> record.
    /// </param>
    /// <returns>
    /// The NBV value.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display AssetNetBookValue displayFixedAssetNetBookValue(AssetImpairmentCGUAssets_JP _cguAsset)
    {
        AssetSumCalc sumCalc;

        sumCalc = AssetImpairmentAccountingHelper_JP::createAssetSumCalc(_cguAsset.assetId, _cguAsset.BookId);

        if (sumCalc != null)
        {
            return sumCalc.netBookValue();
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFixedAssetStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the fixed asset status.
    /// </summary>
    /// <param name="_cguAsset">
    /// Source <c>AssetImpairmentCGUAssets_JP</c> record.
    /// </param>
    /// <returns>
    /// The asset status.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display AssetStatus displayFixedAssetStatus(AssetImpairmentCGUAssets_JP _cguAsset)
    {
        return AssetBook::find(_cguAsset.assetId, _cguAsset.BookId).Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPostedImpairmentAdj</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the sum of all posted impairment adjustment trans amount.
    /// </summary>
    /// <param name="_cguAsset">
    /// Source <c>AssetImpairmentCGUAssets_JP</c> record.
    /// </param>
    /// <returns>
    /// The total of all posted impairment adjustment trans amount.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display AssetImpairmentAdjustment_JP displayPostedImpairmentAdj(AssetImpairmentCGUAssets_JP _cguAsset)
    {
        AssetDocumentSumCalcUtil_JP sumCalcUtil;
        AssetImpairmentSummary_JP   impairmentSum;
        AssetSumCalc_Trans          sumCalcTrans;
        AssetSumCalc                sumCalc;

        sumCalcUtil = AssetDocumentSumCalcUtil_JP::construct();

        sumCalcTrans = AssetSumCalc_Trans::newAssetYear(_cguAsset.assetId, _cguAsset.BookId);
        sumCalcTrans.parmDocSumCalcUtil_JP(sumCalcUtil);
        sumCalc = sumCalcTrans as AssetSumCalc;
        impairmentSum = AssetImpairmentSummary_JP::construct(_cguAsset.assetId, _cguAsset.BookId, AssetBookType::ValueModel, sumCalcTrans, sumCalcUtil, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        if (sumCalc != null)
        {
            sumCalc.calc();
            impairmentSum.init();
            return impairmentSum.impairmentValue();
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
        AssetImpairmentTestResultDocument_JP resultDoc;
        AssetImpairmentTestResultDocEntry_JP resultDocEntry;
        AssetDocumentEntry_JP                docEntry;

        ret = super();

        if (ret)
        {
            select firstOnly RecId from resultDocEntry
                exists join docEntry
                    where resultDocEntry.AssetDocumentEntry_JP == docEntry.RecId
                          && docEntry.AssetId == this.AssetId
                          && docEntry.BookId == this.BookId
                exists join resultDoc
                    where resultDoc.AssetDocumentTable_JP == docEntry.AssetDocumentTable_JP
                    && resultDoc.CGU == this.AssetImpairmentCGU;

            if (resultDocEntry)
            {
                ret = checkFailed("@SYP4880449");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean                           ret;
        AssetImpairmentCGUAssets_JP       cguAssets;
        AssetImpairmentCGUSharedAssets_JP cguSharedAssets;
        AssetImpairmentCGU_JP             cgu;
        AssetImpairmentCGU_JP             cguLoc;

        ret = super();

        if (ret)
        {
            AssetImpairmentCGUGroup_JP cguGroup = AssetImpairmentCGUGroup_JP::find(
                AssetImpairmentCGU_JP::find(this.AssetImpairmentCGU).CGUGroup);

            if (cguGroup.Status != AssetImpairmentCGUGroupStatus_JP::Draft)
            {
                ret = checkFailed("@FixedAssetsImpairementAccounting:CannotAddOrUpdatedFAForCGUUnderActiveOrDisabledCGUGroup");
            }
        }

        if (ret && !this.RecId)
        {
            //Validate fixed assets in source CGU are not exists in other cgu in current cgu group
            select firstOnly RecId from cguAssets
                where cguAssets.AssetId == this.AssetId
                      && cguAssets.BookId == this.BookId
                      && cguAssets.IsSharedAsset == NoYes::No
            exists join cguLoc
                where cguLoc.RecId == this.AssetImpairmentCGU
            exists join cgu
                where cgu.RecId == cguAssets.AssetImpairmentCGU
                        && cgu.CGUGroup == cguLoc.CGUGroup;
            if (cguAssets)
            {
                ret = checkFailed(strFmt("@SYP4880408", this.AssetId, this.BookId));
            }

            //Validate fixed assets in source CGU are not exists in the shared assets of current cgu group
            select firstOnly RecId from cguSharedAssets
                where cguSharedAssets.AssetId == this.AssetId
                        && cguSharedAssets.BookId == this.BookId
            exists join firstOnly cguLoc
                where cguLoc.RecId == this.AssetImpairmentCGU
                        && cguSharedAssets.CGUGroup == cguLoc.CGUGroup;
            if (cguSharedAssets)
            {
                ret = checkFailed(strFmt("@SYP4880493", this.AssetId, this.BookId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPriority</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the priority of a CGU asset book for method 2.
    /// </summary>
    /// <param name="_method">
    /// The impairment recognition test method.
    /// </param>
    /// <param name="_sharedAssetsHigher">
    /// If shared assets has higher priority than CGU asset.
    /// </param>
    /// <returns>
    /// The priority value as integer.
    /// </returns>
    public static int initPriority(AssetImpairmentSharedAssetsMethod_JP _method, boolean _sharedAssetsHigher = false)
    {
        int ret;

        // The rule for priority of goodwill, shared assets and assets in cgu is defined as below:
        // Method I : goodwill =1, shared asset = 2    cgu assets = always the lowest
        // Method II: if Shared asset has higher priority is checked, goodwill = 1, shared asset = 2, cgu fixed asset = 3
        //            else, goodwill = 1, shared asset = 2, cgu fixed asset = 2

        if (_method == AssetImpairmentSharedAssetsMethod_JP::Method2)
        {
            if (_sharedAssetsHigher)
            {
                ret = 3;
            }
            else
            {
                ret = 2;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4880454</DeveloperDocumentation>
	<Label>@SYP4880495</Label>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>BookId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>FixedAssets</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetImpairmentAllocationMethod_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllocationPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetImpairmentAllocationMethod_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ImpairmentHoldingAssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ImpairmentHoldingBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AllocationPriority</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetImpairmentAllocationPriority_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetImpairmentAllocationMethod_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetImpairmentAllocationMethod_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetImpairmentCGU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BookId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ImpairmentHoldingAssetId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<Label>@SYP4880331</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ImpairmentHoldingBookId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
			<Label>@SYP4880332</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSharedAsset</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetImpairmentCGU</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BookId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsSharedAsset</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IsSharedAsset</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetBookRole</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AssetIdBookIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetBookTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImpairmentHoldingBookId</Name>
					<SourceEDT>AssetBookId</SourceEDT>
					<Field>ImpairmentHoldingBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetImpairmentCGU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AssetImpairmentCGU_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetImpairmentCGU</Name>
					<Field>AssetImpairmentCGU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImpairmentHoldingAssetId</Name>
					<SourceEDT>AssetId</SourceEDT>
					<Field>ImpairmentHoldingAssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HoldingAssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HoldingAssetBookRole</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImpairmentHoldingAssetId</Name>
					<Field>ImpairmentHoldingAssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImpairmentHoldingBookId</Name>
					<Field>ImpairmentHoldingBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AssetIdBookIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HoldingAssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HoldingAssetBookTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<SourceEDT>AssetBookId</SourceEDT>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HoldingAssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HoldingAssetTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>AssetId</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>