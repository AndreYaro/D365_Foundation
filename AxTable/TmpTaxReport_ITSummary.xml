<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpTaxReport_ITSummary</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpTaxReport_ITSummary extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public boolean create(TmpTaxReport_IT     _tmpTaxReport_IT,
                          TaxPeriod           _taxPeriod,
                          FromDate            _fromDate,
                          ToDate              _toDate,
                          TaxBookTypeJournal  _taxBookTypeJournal,
                          TaxBookId           _fromTaxBookId,
                          TaxBookId           _toTaxBookId)
    {
        boolean              ret = false;
        TaxBookSection       taxBookSection;
        TaxBook              taxBook;
        container            competencePeriodsCon;

        competencePeriodsCon = TaxReportERHelper_IT::useCompetencePeriod() ?
                                [TaxReportCompetencePeriod_IT::Default, TaxReportCompetencePeriod_IT::Previous, TaxReportCompetencePeriod_IT::Actual] :
                                [TaxReportCompetencePeriod_IT::Default];

        delete_from _tmpTaxReport_IT
            where _tmpTaxReport_IT.TaxAmount == 0
               && _tmpTaxReport_IT.TaxBaseAmount == 0
               && _tmpTaxReport_IT.InvoiceAmount == 0
               && _tmpTaxReport_IT.TaxInCostPrice == 0;

        if (!_toTaxBookId)
        {
            _toTaxBookId = (select firstonly TaxBookId from taxBook order by TaxBookId desc where taxBook.TaxPeriod == _taxPeriod).TaxBookId;
        }

        while select taxBook
            join  Name, RecId from taxBookSection
            where taxBook.RecId == taxBookSection.TaxBook
               && taxBook.TaxBookId >= _fromTaxBookId
               && taxBook.TaxBookId <= _toTaxBookId
               && taxBook.TaxPeriod == _taxPeriod
        {
            if (!taxBook.closedTo() || (taxBook.closedTo() && taxBook.closedTo() > _fromDate))
            {
                for (int i = 1; i <= conLen(competencePeriodsCon); i++)
                {
                    TaxReportCompetencePeriod_IT competencePeriod = conPeek(competencePeriodsCon,i);

                    select firstonly _tmpTaxReport_IT index VoucherIdx
                        where _tmpTaxReport_IT.TaxBookType      == taxBook.TaxBookType
                           && _tmpTaxReport_IT.TaxBook          == taxBook.RecId
                           && _tmpTaxReport_IT.TaxBookSection   == taxBookSection.RecId
                           && _tmpTaxReport_IT.CompetencePeriod == competencePeriod;

                    if (!_tmpTaxReport_IT
                    && TmpTaxReport_ITSummary::isTaxBookTypeIncluded(taxBook, _taxBookTypeJournal))
                    {
                        this.clear();
                        this.TaxBookType       = taxBook.TaxBookType;
                        this.TaxBook           = taxBook.RecId;
                        this.TaxBookSection    = taxBookSection.RecId;
                        this.TaxBookSectionName= taxBookSection.Name;
                        this.CompetencePeriod  = competencePeriod;
                        this.insert();
                        ret = true;
                    }
                }
            }
        }

        while select TaxBookType, TaxBook, TaxBookSection,
                        sum(TaxBaseAmount),
                        sum(TaxAmount),
                        sum(TaxBaseConditional),
                        sum(TaxConditional),
                        sum(TaxBaseInCostPrice),
                        sum(TaxInCostPrice)       from _tmpTaxReport_IT
                  group by TaxBookType, TaxBook, TaxBookSection, CompetencePeriod
        {
            this.clear();
            this.TaxBookType        = _tmpTaxReport_IT.TaxBookType;
            this.TaxBook            = _tmpTaxReport_IT.TaxBook;
            this.TaxBookSection     = _tmpTaxReport_IT.TaxBookSection;
            this.TaxBookSectionName = TaxBookSection::find(_tmpTaxReport_IT.TaxBookSection).Name;
            this.TaxBaseAmount      = _tmpTaxReport_IT.TaxBaseAmount;
            this.TaxAmount          = _tmpTaxReport_IT.TaxAmount;
            this.TaxBaseConditional = _tmpTaxReport_IT.TaxBaseConditional;
            this.TaxConditional     = _tmpTaxReport_IT.TaxConditional;
            this.TaxBaseInCostPrice = _tmpTaxReport_IT.TaxBaseInCostPrice;
            this.TaxInCostPrice     = _tmpTaxReport_IT.TaxInCostPrice;
            this.CompetencePeriod   = _tmpTaxReport_IT.CompetencePeriod;
            this.insert();

            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxBookIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks that validate TaxBook exists and corresponds to conditions
    /// </summary>
    /// <param name="_taxBook">
    ///     TaxBook for check
    /// </param>
    /// <param name="_taxPeriod">
    ///     Settlement period
    /// </param>
    /// <param name="_fromDate">
    ///     Beginning of the period of action TaxBook
    /// </param>
    /// <param name="_toDate">
    ///     Ending of the period of action TaxBook
    /// </param>
    /// <param name="_taxBookTypeJournal">
    ///     Type of report
    /// </param>
    /// <param name="_fromTaxBookId">
    ///     Beginning of the TaxBookId
    /// </param>
    /// <param name="_toTaxBookId">
    ///     Ending of the TaxBookId
    /// </param>
    /// <returns>
    ///     True, if TaxBook is included and corresponds to conditions
    /// </returns>
    public static boolean isTaxBookIncluded(
        TaxBook             _taxBook,
        TaxPeriod           _taxPeriod,
        FromDate            _fromDate,
        ToDate              _toDate,
        TaxBookTypeJournal  _taxBookTypeJournal,
        TaxBookId           _fromTaxBookId,
        TaxBookId           _toTaxBookId)
    {
        if (!_toTaxBookId)
        {
            _toTaxBookId = (select firstonly TaxBookId from TaxBook order by TaxBookId desc where TaxBook.TaxPeriod == _taxPeriod).TaxBookId;
        }

        return _taxBook.TaxPeriod == _taxPeriod
            && (!_taxBook.closedTo() || (_taxBook.closedTo() && _taxBook.closedTo() > _fromDate))
            && _taxBook.TaxBookId >= _fromTaxBookId
            && _taxBook.TaxBookId <= _toTaxBookId
            && TmpTaxReport_ITSummary::isTaxBookTypeIncluded(_taxBook, _taxBookTypeJournal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxBookTypeIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks that the type of the record TaxBook corresponds to the specified type of journal
    /// </summary>
    /// <param name="_taxBook">
    ///     The tax book buffer
    /// </param>
    /// <param name="_taxBookTypeJournal">
    ///     The tax book journal type for Italian
    /// </param>
    /// <returns>
    ///     True if TaxBookType correspond tax book type journal
    /// </returns>
    public static boolean isTaxBookTypeIncluded(TaxBook _taxBook, TaxBookTypeJournal _taxBookTypeJournal)
    {
        return
            (_taxBookTypeJournal == TaxBookTypeJournal::Empty &&
                _taxBook.TaxBookType != TaxBookType::NotIncluded)            ||

            (_taxBookTypeJournal == TaxBookTypeJournal::NotIncluded &&
                _taxBook.TaxBookType == TaxBookType::NotIncluded)            ||

            (_taxBookTypeJournal == TaxBookTypeJournal::Sales &&
                _taxBook.TaxBookType == TaxBookType::Sales)                  ||

            (_taxBookTypeJournal == TaxBookTypeJournal::Purchase &&
                _taxBook.TaxBookType == TaxBookType::Purchase);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IT</CountryRegionCodes>
	<Label>@SYS85204</Label>
	<ClusteredIndex></ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS22646</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS79497</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseConditional</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS79499</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseInCostPrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS79500</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxBook</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBookRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxBookSection</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBookSectionRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxBookSectionName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxBookType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxBookType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxConditional</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS79498</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS79501</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxName</ExtendedDataType>
			<Label>@SYS79496</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxValue</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxValue</ExtendedDataType>
			<Label>@SYS79495</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CompetencePeriod</Name>
			<EnumType>TaxReportCompetencePeriod_IT</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxBookType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxBook</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxBookSectionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxBookSection</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxBookIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxBook</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxBook</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxBookJournals</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReportTableForItaly</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxBook</Name>
					<Field>TaxBook</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxBookSection</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxBookSection</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxBookSections</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReportSummaryTableForItaly</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxBookSection</Name>
					<Field>TaxBookSection</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxReport_ITSummary</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>