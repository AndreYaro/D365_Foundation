<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocumentReceivedXmlView_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EFDocumentReceivedXmlView_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createAdditionalInformationFrom</Name>
				<Source><![CDATA[
    private void createAdditionalInformationFrom(EFDocumentIncomingXmlDocument_BR _efDocumentIncomingXmlDoc)
    {
        EFDocumentReceivedXmlViewAddInfo_BR additionalInformation;

        EFDocRecXmlAddInf_BR  addInfo = _efDocumentIncomingXmlDoc.getAdditionalInformation();
        EFDocRecXmlCompInf_BR complementaryInfo = _efDocumentIncomingXmlDoc.getComplementaryInformation();

        if (addInfo || complementaryInfo)
        {
            additionalInformation.AdditionalInformation = addInfo;
            additionalInformation.ComplementaryInformation = complementaryInfo;
            additionalInformation.EFDocumentReceivedXmlView_BR = this.RecId;
            additionalInformation.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFrom</Name>
				<Source><![CDATA[
/// <summary>
    /// Creates a new register of EFDocumentReceivedXmlView_BR based on the parser class that
    /// is able to retrieve the contents of the NF-e xml
    /// </summary>
    /// <param name="_efdocumentReceivedXmlRecId">
    /// RecId of the EFDocumentReceivedXml_BR register that contains the information about the received xml
    /// </param>
    /// <param name="_efDocumentIncomingXmlDoc">
    /// Parser class that is able to return the content of the xml
    /// </param>
    public void createFrom(RefRecId _efdocumentReceivedXmlRecId, EFDocumentIncomingXmlDocument_BR _efDocumentIncomingXmlDoc)
    {
        this.ICMSAmount                 = _efDocumentIncomingXmlDoc.getIcmsTotalAmount();
        this.ICMSBaseAmount             = _efDocumentIncomingXmlDoc.getIcmsBaseAmount();
        this.ICMSSTAmount               = _efDocumentIncomingXmlDoc.getIcmsStTotalAmount();
        this.ICMSSTBaseAmount           = _efDocumentIncomingXmlDoc.getIcmsStBaseAmount();
        this.IPIAmount                  = _efDocumentIncomingXmlDoc.getIpiTotalAmount();

        this.TotalMarkupFreightAmount   =  _efDocumentIncomingXmlDoc.getTotalMarkupFreightAmount();
        this.TotalMarkupInsuranceAmount =  _efDocumentIncomingXmlDoc.getTotalMarkupInsuranceAmount();
        this.TotalMarkupOtherAmount     = _efDocumentIncomingXmlDoc.getTotalMarkupOtherAmount();

        this.TotalProductAmount         = _efDocumentIncomingXmlDoc.getTotalProductAmount();
        this.TotalAmount                = _efDocumentIncomingXmlDoc.getTotalAmount();
        this.TotalDiscount              = _efDocumentIncomingXmlDoc.getTotalDiscount();

        this.ThirdPartyCNPJ             = FiscalInformationUtil_BR::formatCNPJ(_efDocumentIncomingXmlDoc.getVendorCnpj());
        this.ThirdPartyName             = _efDocumentIncomingXmlDoc.getVendorName();
        this.ThirdPartyIE               = _efDocumentIncomingXmlDoc.getVendorIe();
        this.ThirdPartyIEST             = _efDocumentIncomingXmlDoc.getVendorIeTributarySubstitute();

        this.IssueDate                  = _efDocumentIncomingXmlDoc.getIssueDate();
        this.IssueTime                  = _efDocumentIncomingXmlDoc.getIssueTime();
        this.IssueTimezone              = _efDocumentIncomingXmlDoc.getIssueTimezone();

        this.EFDocumentReceivedXML_BR   = _efdocumentReceivedXmlRecId;

        ttsBegin;

        this.insert();

        this.createIssuerAddress(_efDocumentIncomingXmlDoc);

        this.createAdditionalInformationFrom(_efDocumentIncomingXmlDoc);

        this.createLinesFrom(_efDocumentIncomingXmlDoc);

        ttsCommit;
    }
]]></Source>
			</Method>
			<Method>
				<Name>createIssuerAddress</Name>
				<Source><![CDATA[
    private void createIssuerAddress(EFDocumentIncomingXmlDocument_BR _efDocumentIncomingXmlDoc)
    {
        EFDocumentReceivedXmlViewAddress_BR issuerAddress;

        issuerAddress.initFromIssuerAddress(this.RecId, _efDocumentIncomingXmlDoc.getIssuerAddress());

        issuerAddress.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLinesFrom</Name>
				<Source><![CDATA[
    private void createLinesFrom(EFDocumentIncomingXmlDocument_BR _efDocumentIncomingXmlDoc)
    {
        EFDocumentIncomingXmlDocumentLine_BR line;
        EFDocumentReceivedXmlViewLine_BR     newLine;
        RecordInsertList                     linesToBeCreated = new RecordInsertList(tableNum(EFDocumentReceivedXmlViewLine_BR));
        List                                 lines = _efDocumentIncomingXmlDoc.getLines();
        ListEnumerator                       linesEnumerator = lines.getEnumerator();

        while (linesEnumerator.moveNext())
        {
            line = linesEnumerator.current();

            newLine.clear();
            newLine.initFrom(this.RecId, line);
            linesToBeCreated.add(newLine);
        }

        linesToBeCreated.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total number of lines for the current received xml record.
    /// </summary>
    /// <returns>
    /// A number representing the number of lines.
    /// </returns>
    public RecId getLineCount()
    {
        EFDocumentReceivedXmlViewLine_BR receivedXmlViewLine;

        select count(RecId) from receivedXmlViewLine
            where receivedXmlViewLine.EFDocumentReceivedXmlView_BR == this.recId;

        return receivedXmlViewLine.recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinesItemIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a list with the names of the items associated with the current received xml view
    /// </summary>
    /// <returns>
    /// A list of strings containing the names of the items (itemId field).
    /// </returns>
    /// <remarks>
    /// The list can contain duplicated elements
    /// </remarks>
    public List getLinesItemIds()
    {
        List                             linesItemsNames = new List(Types::String);
        EFDocumentReceivedXmlViewLine_BR receivedXmlViewLine;

        while select ItemId from receivedXmlViewLine
            where receivedXmlViewLine.EFDocumentReceivedXmlView_BR == this.RecId
        {
            linesItemsNames.addEnd(receivedXmlViewLine.ItemId);
        }

        return linesItemsNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMappingToVendorInvoiceItemsIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a mapping between the item codes of the lines of the xml to the item codes used at vendor invoice
    /// </summary>
    /// <param name="_vendInvoiceAccount">
    /// The external item codes being searched must belong to this vendor account
    /// </param>
    /// <returns>
    /// A mapping between the item codes of the lines of the xml to the item codes used at vendor invoice
    /// </returns>
    public Map getMappingToVendorInvoiceItemsIds(VendInvoiceAccount _vendInvoiceAccount)
    {
        EFDocumentReceivedXmlViewLine_BR receivedXmlViewLine;
        ExternalItemId                   externalCodeId;
        Map                              mapping = new Map(Types::String, Types::String);

        while select ItemId from receivedXmlViewLine
            where receivedXmlViewLine.EFDocumentReceivedXmlView_BR == this.RecId
        {
            externalCodeId = CustVendExternalItem::getItemIdForInvoiceAccount_BR(receivedXmlViewLine.ItemId, _vendInvoiceAccount);

            if (mapping.exists(receivedXmlViewLine.ItemId) == false)
            {
                mapping.insert(receivedXmlViewLine.ItemId, externalCodeId);
            }
        }

        return mapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAccessKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EFDocumentReceivedXmlView_BR record related to the given access key
    /// </summary>
    /// <param name="_accessKey">
    /// The access key related to the received xml
    /// </param>
    /// <returns>
    /// The record that was found, if any, or empty buffer
    /// </returns>
    public static EFDocumentReceivedXmlView_BR findByAccessKey(EFDocAccessKey_BR _accessKey)
    {
        EFDocumentReceivedXML_BR                receivedXml;
        EFDocumentReceivedXmlView_BR            xmlView;

        select xmlView
            exists join receivedXml
                where receivedXml.RecId      == xmlView.EFDocumentReceivedXML_BR
                    && receivedXml.Accesskey == _accessKey;

        return xmlView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EFDocumentReceivedXmlView_BR register related to the EFDocumentReceivedXml_BR.
    /// This table contains the fields extracted from the NF-e xml received from a vendor.
    /// If the register is not found, then, the method will create it in case there is a xml.
    /// </summary>
    /// <param name="_receivedXmlRecId">
    /// RecId of the EFDocumentReceivedXml_BR
    /// </param>
    /// <returns>
    /// EFDocumentReceivedXmlView_BR register that is related to the EFDocumentReceivedXml_BR
    /// </returns>
    public static EFDocumentReceivedXmlView_BR findOrCreate(RefRecId _receivedXmlRecId)
    {
        EFDocumentReceivedXmlView_BR     xmlView;
        EFDocumentReceivedXMLData_BR     xmlData;
        EFDocumentIncomingXmlDocument_BR incomingXmlDocument;

        select firstOnly xmlView
            where xmlView.EFDocumentReceivedXML_BR == _receivedXmlRecId;

        if (!xmlView)
        {
            xmlData = EFDocumentReceivedXMLData_BR::findByXmlType(_receivedXmlRecId, EFDocReceivedXMLDataType_BR::Received);

            if (xmlData)
            {
                incomingXmlDocument = EFDocumentIncomingXmlDocument_BR::construct(xmlData.XMLDocument);

                xmlView.createFrom(_receivedXmlRecId, incomingXmlDocument);
            }
        }

        return xmlView;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4010083</DeveloperDocumentation>
	<Label>@SYS4003089</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>IssueDate</TitleField1>
	<TitleField2>ThirdPartyName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>FiscalBooksBrazil</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EFDocumentReceivedXML_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyCNPJ</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EFDocumentReceivedXML</Name>
			<Label>@SYS4003089</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EFDocumentReceivedXML_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Header</Name>
			<Label>@SYS114611</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalProductAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupFreightAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupInsuranceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupOtherAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IPIAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssueTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssueTimezone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Markup</Name>
			<Label>@SYS11466</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupOtherAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupInsuranceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalMarkupFreightAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Taxes</Name>
			<Label>@GLS94619</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ICMSAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSSTBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IPIAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThirdParty</Name>
			<Label>@SYS50697</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyCNPJ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyIE</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyIEST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TotalAmounts</Name>
			<Label>@SYS114611</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalProductAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ElectronicInvoice</Name>
			<Label>@SYS341996</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BusinessDocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EFDocumentReceivedXML_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS893</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSBaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Label>@SYS4006822</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSSTAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@SYS4082237</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ICMSSTBaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Label>@SYS4006823</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>IPIAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS894</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>IssueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EFDocRecXmlIssueDate_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyCNPJ</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CNPJNum_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyIE</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>IENum_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyIEST</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>IENum_BR</ExtendedDataType>
			<Label>@GLS50735</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EFDocRecXmlThirdPartyName_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS340849</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmountMST</ExtendedDataType>
			<Label>@SYS6465</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalMarkupFreightAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumFreight_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalMarkupInsuranceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumInsurance_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalMarkupOtherAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumOthers_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalProductAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS220721</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>IssueTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EFDocRecXmlIssueTime_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IssueTimezone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EFDocRecXmlIssueTimezone_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>BusinessDocumentId</Name>
			<ExtendedDataType>SysGuid</ExtendedDataType>
			<HelpText>@BusinessDocumentSubmissionService:BusDocID</HelpText>
			<Label>@SYS5468</Label>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EFDocumentReceivedXmlIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>EFDocumentReceivedXML_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EFDocumentReceivedXml_BR</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EFDocumentReceivedXML_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EFDocumentReceivedXML_BR</Name>
					<Field>EFDocumentReceivedXML_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>