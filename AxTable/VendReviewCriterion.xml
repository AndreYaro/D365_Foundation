<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendReviewCriterion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendReviewCriterion extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        VendReviewCriterion             originalVendReviewCriterion;
        VendReviewCriterionGroupRating  vendReviewCriterionGroupRating;

        originalVendReviewCriterion.data(this.orig());

        super();

        // If we are changing the CriterionGroup for a Criterion
        // then we need to update the average scores for these two CriterionGroups
        // and for all the vendors.
        if (originalVendReviewCriterion.CriterionGroup != this.CriterionGroup)
        {
            while select vendReviewCriterionGroupRating
                where vendReviewCriterionGroupRating.CriterionGroup == originalVendReviewCriterion.CriterionGroup
                    || vendReviewCriterionGroupRating.CriterionGroup == this.CriterionGroup
            {
                VendReviewCriterionGroupRating::updateAverage(  vendReviewCriterionGroupRating.VendorAccountNumber,
                                                                vendReviewCriterionGroupRating.VendorDataAreaId,
                                                                vendReviewCriterionGroupRating.CriterionGroup);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>VendReviewCriterion</c> table.
    /// </summary>
    /// <param name="_criterion">
    ///    The ID of the <c>VendReviewCriterion</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false, and an error message is displayed.
    /// </returns>
    public static boolean checkExist(RefRecId _criterion)
    {
        if (_criterion && VendReviewCriterion::exist(_criterion))
            return true;

        return checkFailed(strfmt(VendReviewCriterion::txtNotExist(), _criterion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>VendReviewCriterion</c> table.
    /// </summary>
    /// <param name="_criterion">
    ///    The ID of the <c>VendReviewCriterion</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _criterion)
    {
        return (VendReviewCriterion::find(_criterion).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendReviewCriterion</c> table.
    /// </summary>
    /// <param name="_criterion">
    ///    The ID of the <c>VendReviewCriterion</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendReviewCriterion</c> table; otherwise, an empty record.
    /// </returns>
    public static VendReviewCriterion find(RefRecId _criterion, boolean _forUpdate = false)
    {
        VendReviewCriterion    vendReviewCriterion = null;

        if (_criterion)
        {
            vendReviewCriterion.selectForUpdate(_forUpdate);
            select firstonly vendReviewCriterion
                    where vendReviewCriterion.RecId == _criterion;
        }

        return vendReviewCriterion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record with the specified name in the <c>VendReviewCriterion</c> table.
    /// </summary>
    /// <param name="_criterionName">
    ///    The name of the <c>VendReviewCriterion</c> record that is used as a filter.
    /// </param>
    /// <param name="_criterionGroupId">
    ///    The ID of the <c>VendReviewCriterionGroup</c> record that is used as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendReviewCriterion</c> table; otherwise, an empty record.
    /// </returns>
    public static VendReviewCriterion findByName(Name _criterionName, RefRecId _criterionGroupId, boolean _forUpdate = false)
    {
        VendReviewCriterion    vendReviewCriterion = null;

        if (_criterionName)
        {
            vendReviewCriterion.selectForUpdate(_forUpdate);
            select firstonly vendReviewCriterion
                    where vendReviewCriterion.Name == _criterionName
                        && vendReviewCriterion.CriterionGroup == _criterionGroupId;
        }

        return vendReviewCriterion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS302890";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendReview</ConfigurationKey>
	<DeveloperDocumentation>@SYS312602</DeveloperDocumentation>
	<FormRef>vendreviewCriterion</FormRef>
	<Label>@SYS312119</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>CriterionGroup</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>NameCriterionGroupIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>VendReviewCriterionTranslation</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>VendReviewCriterionTranslation</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CriterionName</Name>
			<Label>@SYS312133</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CriterionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CriterionGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendReviewCriterionGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CriterionGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameCriterionGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CriterionGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendReviewCriterionGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendReviewCriterionGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendReviewCriterionGroup</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendReviewCriterionGroup_VendReviewCriterion</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CriterionGroup</Name>
					<Field>CriterionGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>