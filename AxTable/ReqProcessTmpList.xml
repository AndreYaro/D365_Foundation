<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqProcessTmpList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqProcessTmpList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>absLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the BOM level in absolute value.
    /// </summary>
    /// <returns>
    /// The absolute value of the BOM level.
    /// </returns>
    public display BOMLevel absLevel()
    {
        if (this.Status == ReqProcessStatus::Ended ||
            this.Status == ReqProcessStatus::Error)
        {
            return 0;
        }

        return this.Level < 0 ? -this.Level : this.Level;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReqProcessList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Copies all fields to a temporary table.
    /// </summary>
    /// <param name="_reqProcessList">
    ///    The <c>ReqProcessList</c> from which to copy field values.
    /// </param>
    public void initFromReqProcessList(ReqProcessList _reqProcessList)
    {
        this.ProcessId          = _reqProcessList.ProcessId;
        this.Status             = _reqProcessList.Status;
        this.Level              = _reqProcessList.Level;
        this.MaxChildThreads    = _reqProcessList.MaxChildThreads;
        this.ClassId            = _reqProcessList.ClassId;
        this.ReqPlanId          = _reqProcessList.ReqPlanId;
        this.UsedChildThreads   = _reqProcessList.UsedChildThreads;
        this.Company            = _reqProcessList.DataAreaId;
        this.ReqCalcUpdate      = _reqProcessList.ReqCalcUpdate;
        this.UsedTodaysDate     = _reqProcessList.UsedTodaysDate;
        this.Cancelled          = _reqProcessList.Cancelled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a description of the class specified in the <c>ClassId</c> field.
    /// </summary>
    /// <returns>
    ///    Description of the scheduling process class.
    /// </returns>
    display className processName()
    {
        SysDictClass dict;
        if (this.ClassId)
        {
            dict = new SysDictClass(this.ClassId);
            return dict.callStatic(staticmethodstr(ReqCalc,description));
        }
        else
        {
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>progress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the progress within the current item level.
    /// </summary>
    /// <returns>
    /// returns the progress within the current item level.
    /// </returns>
    public display ReqProcessProgress progress()
    {
        ReqCalcTasksBundle      reqCalcTasksBundle;
        int64                   totalItems;
        int64                   processedItems;

        select count(RecId)
            from reqCalcTasksBundle
                where   reqCalcTasksBundle.ProcessId           == this.ProcessId
                &&      reqCalcTasksBundle.ProcessDataAreaId   == curExt2dataareaid(tableNum(ReqProcessList))
                &&      reqCalcTasksBundle.Level               == this.Level
                &&      reqCalcTasksBundle.Status              == this.Status;

        totalItems = reqCalcTasksBundle.RecId;

        select count(RecId)
            from reqCalcTasksBundle
                where   reqCalcTasksBundle.ProcessId           == this.ProcessId
                &&      reqCalcTasksBundle.ProcessDataAreaId   == curExt2dataareaid(tableNum(ReqProcessList))
                &&      reqCalcTasksBundle.Level               == this.Level
                &&      reqCalcTasksBundle.Status              == this.Status
                &&      reqCalcTasksBundle.ProcessingState     == ReqCalcTaskState::Ended;

        processedItems = reqCalcTasksBundle.RecId;

        return strfmt("@SYS329760", processedItems, totalItems);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<FormRef>ReqProcessList</FormRef>
	<Label>@SCMPlanning:UnfinishedPlanningProcesses</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ReqPlanId</TitleField1>
	<TitleField2>ProcessId</TitleField2>
	<ClusteredIndex></ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex></PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Company</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>processName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqCalcUpdate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsedTodaysDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS25532</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cancelled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Threads</Name>
			<Label>@SYS107555</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MaxChildThreads</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsedChildThreads</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Cancelled</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS107501</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ClassId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ClassId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Level</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BOMLevel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxChildThreads</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqProcessNumThreadsRequested</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProcessId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqProcessId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReqCalcUpdate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>ReqCalcUpdate</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReqPlanId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqPlanId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>ReqProcessStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>UsedChildThreads</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqProcessNumThreadsUsed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>UsedTodaysDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TodaysDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Company</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>Company</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPlan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReqPlan</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReqPlanId</Name>
					<Field>ReqPlanId</Field>
					<RelatedField>ReqPlanId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PlanIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>