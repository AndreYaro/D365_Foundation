<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupPeriodChargeRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MarkupPeriodChargeRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static MarkupPeriodChargeRule find(
        MarkupPeriodChargeRuleName  _ruleName,
        ValidFromDate               _validFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        ValidToDate                 _validTo   = _validFrom,
        boolean                     _forUpdate = false)
    {
        MarkupPeriodChargeRule  periodChargeRule;

        if (_ruleName)
        {
            periodChargeRule.selectForUpdate(_forUpdate);
          
            select firstonly validTimeState(_validFrom, _validTo) periodChargeRule
                where periodChargeRule.RuleName == _ruleName;
        }

        return periodChargeRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static MarkupPeriodChargeRule findRecId(RecId    _recId,
                                                     boolean  _forUpdate = false)
    {
        MarkupPeriodChargeRule  periodChargeRule;
        ValidFromDate           validFrom   = dateNull();
        ValidToDate             validTo     = dateMax();

        if (_recId)
        {
            periodChargeRule.selectForUpdate(_forUpdate);
            
            select firstonly validTimeState(validFrom, validTo) periodChargeRule
                where periodChargeRule.RecId == _recId;
        }

        return periodChargeRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean exist(
        MarkupPeriodChargeRuleName  _ruleName,
        ValidFromDate               _validFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        ValidToDate                 _validTo   = _validFrom)
    {
        return _ruleName &&
            (select firstonly validTimeState(_validFrom, _validTo) RecId from MarkupPeriodChargeRule
                where MarkupPeriodChargeRule.RuleName == _ruleName).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static TxtNotExist txtNotExist()
    {
        return "@SCM:MarkupPeriodChargeValueNotFoundDefaultMsg";
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    [Hookable(false)]    
    internal static boolean checkExist(
        MarkupPeriodChargeRuleName  _ruleName,
        ValidFromDate               _validFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        ValidToDate                 _validTo   = _validFrom)
    {
        boolean ret = true;
 
        if (!MarkupPeriodChargeRule::exist(_ruleName, _validFrom, _validTo))
        {
            ret = checkFailed(strfmt(MarkupPeriodChargeRule::txtNotExist(),
                    _ruleName,
                    fieldId2PName(tableNum(MarkupPeriodChargeRule), fieldNum(MarkupPeriodChargeRule, RuleName)),
                    tableId2PName(tableNum(MarkupPeriodChargeRule))));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch(_fieldId)
        {
            case fieldnum(MarkupPeriodChargeRule, AccountCode) :
                if (this.AccountCode == TableAll::All)
                {
                    this.AccountRelation = '';
                }
                break;

            case fieldnum(MarkupPeriodChargeRule, InventSiteId) :
                if (this.InventLocationId)
                {
                    this.InventLocationId = '';
                }
                break;

            case fieldNum(MarkupPeriodChargeRule, InventSiteId):
                this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventSiteId));
                break;

            case fieldNum(MarkupPeriodChargeRule, InventLocationId):
                this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventLocationId));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (this.AccountCode == TableAll::All && this.AccountRelation)
        {
            ret = checkFailed(strFmt("@SCM:MarkupPeriodChargeFieldCannotBeFilledMsg",
                    fieldPName(MarkupPeriodChargeRule, AccountRelation),
                    fieldPName(MarkupPeriodChargeRule, AccountCode),
                    TableAll::All));
        }
        else if (this.AccountCode == TableAll::Table && !this.AccountRelation)
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRule, AccountRelation)));
        }

        if(this.InventLocationId && !this.InventSiteId)
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRule, InventSiteId)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSiteAndWarehouseRelation</Name>
				<Source><![CDATA[
    private boolean checkSiteAndWarehouseRelation()
    {
        if (this.InventSiteId 
            && this.InventLocationId
            && InventLocation::find(this.InventLocationId).InventSiteId != this.InventSiteId)
        {
            return checkFailed(strFmt("@SYS104861", this.InventLocationId, this.InventSiteId));           
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(MarkupPeriodChargeRule, InventSiteId):
                ret = this.checkSiteAndWarehouseRelation();
                break;
            case fieldNum(MarkupPeriodChargeRule, InventLocationId):
                ret = this.checkSiteAndWarehouseRelation();
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Markup</ConfigurationKey>
	<DeveloperDocumentation>@SCM:MarkupPeriodChargeRuleDevDoc</DeveloperDocumentation>
	<Label>@SCM:MarkupPeriodChargeRule</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>RuleName</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PeriodChargeRuleIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>PeriodChargeRuleIdx</PrimaryIndex>
	<ReplacementKey>RuleNameIdx</ReplacementKey>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleName</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleDescription</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleValidFrom</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleValidTo</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleAccountCode</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleAccountRelation</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleInventSiteId</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleInventLocationId</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RuleNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RuleName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PeriodChargeRuleIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventStorageDimMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>InventLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventSiteId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<SourceEDT>InventSiteId</SourceEDT>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>