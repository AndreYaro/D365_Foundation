<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRBSLFactorTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetRBSLFactorTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        const int Month = 12;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(AssetRBSLFactorTable, AssetServiceLife):
                this.Months = this.AssetServiceLife * Month + this.AssetServiceLifeMonths;
                break;

            case fieldnum(AssetRBSLFactorTable, AssetServiceLifeMonths):
                this.Months = this.AssetServiceLife * Month + this.AssetServiceLifeMonths;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        const int MonthLimit = 11;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(AssetRBSLFactorTable, AssetServiceLifeMonths):
                if (this.AssetServiceLifeMonths > MonthLimit)
                    {
                        ret = checkFailed("@SYS99111");
                    }
                    break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(AssetRBSLFromDate _assetRBSLFromDate, AssetServiceLifeYears _assetServiceLife, AssetServiceLifeMonths _assetServiceLifeMonths )
    {
        boolean ret = true;

        if (!AssetRBSLFactorTable::exist(_assetRBSLFromDate, _assetServiceLife, _assetServiceLifeMonths))
        {
            ret = checkFailed(strfmt(AssetRBSLFactorTable::txtNotExist(), _assetRBSLFromDate, _assetServiceLife, _assetServiceLifeMonths));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(AssetRBSLFromDate _assetRBSLFromDate, AssetServiceLifeYears _assetServiceLife, AssetServiceLifeMonths _assetServiceLifeMonths )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     assetRBSLFactorTable
                 where
                     assetRBSLFactorTable.AssetRBSLFromDate == _assetRBSLFromDate &&
                    assetRBSLFactorTable.AssetServiceLife == _assetServiceLife &&
                    assetRBSLFactorTable.AssetServiceLifeMonths == _assetServiceLifeMonths).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>AssetRBSLFactorTable</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>AssetRBSLFactorTable</c> table.
    /// </returns>
    public static AssetRBSLFactorTable find(
        RecId               _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetRBSLFactorTable assetRBSLFactorTable;

        assetRBSLFactorTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetRBSLFactorTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly assetRBSLFactorTable
            where assetRBSLFactorTable.RecId == _recId;

        return assetRBSLFactorTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDateServiceLife</Name>
				<Source><![CDATA[
    public static AssetRBSLFactorTable findByDateServiceLife(
        AssetRBSLFromDate       _assetRBSLFromDate,
        AssetServiceLifeYears   _assetServiceLife,
        AssetServiceLifeMonths  _assetServiceLifeMonths,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetRBSLFactorTable assetRBSLFactorTable;

        assetRBSLFactorTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetRBSLFactorTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            assetRBSLFactorTable
            where
            assetRBSLFactorTable.AssetRBSLFromDate == _assetRBSLFromDate &&
                    assetRBSLFactorTable.AssetServiceLife == _assetServiceLife &&
                    assetRBSLFactorTable.AssetServiceLifeMonths == _assetServiceLifeMonths;

        return assetRBSLFactorTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFactor</Name>
				<Source><![CDATA[
    public static AssetRBSLFactorTable findFactor(AssetRBSLFromDate  _fromDate,
                                                  AssetLifeTime      _lifeTime,
                                                  boolean            _forupdate = false)
    {
        AssetRBSLFactorTable  assetRBSLFactorTable;

        if (_fromDate && _lifeTime)
        {
            assetRBSLFactorTable.selectForUpdate (_forupdate);
            assetRBSLFactorTable.selectLocked    (_forupdate);

            select firstonly assetRBSLFactorTable
                order by AssetRBSLFromDate desc, Months desc
                where assetRBSLFactorTable.AssetRBSLFromDate <= _fromDate &&
                      assetRBSLFactorTable.Months            <= _lifeTime;
        }

        return assetRBSLFactorTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS100079";
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow()
    {
        const int Month = 12;

        this.Months = this.AssetServiceLife * Month + this.AssetServiceLifeMonths;

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>FR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123463</DeveloperDocumentation>
	<FormRef>AssetRBSLFactorTable</FormRef>
	<Label>@SYS99109</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssetRBSLFactor</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DateServiceLifeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRBSLFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLife</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLifeMonths</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetRBSLFactor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRBSLFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLife</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLifeMonths</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS7523</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRBSLFactor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRBSLFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLife</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetServiceLifeMonths</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Months</Name>
			<Label>@SYS7077</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Months</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssetRBSLFactor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetRBSLFactor</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AssetRBSLFromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetRBSLFromDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AssetServiceLife</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetServiceLifeYears</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AssetServiceLifeMonths</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetServiceLifeMonths</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Months</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Months</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DateServiceLifeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetRBSLFromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetServiceLife</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetServiceLifeMonths</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>