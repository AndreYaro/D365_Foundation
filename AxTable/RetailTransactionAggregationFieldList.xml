<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionAggregationFieldList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailTransactionAggregationFieldList</c> class is the point of extensibility for Retail Transaction Aggregation during RetailEod Statement Posting.
/// </summary>
public class RetailTransactionAggregationFieldList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the <c>RetailTransactionAggregationFieldList</c> by RecID.
    /// </summary>
    /// <param name = "_recId">RecId of the record we are looking for.</param>
    /// <param name="_forUpdate"> A Boolean value that indicates whether the record should be selected for update; optional. </param>
    /// <returns>
    ///    A <c>RetailTransactionAggregationFieldList</c> if a record exists; otherwise, an empty buffer.
    /// </returns>
    public static RetailTransactionAggregationFieldList find(
        RefRecId _recId,
        boolean  _forupdate = false)
    {
        RetailTransactionAggregationFieldList fieldList;

        if (_recId)
        {
            if (_forupdate)
            {
                fieldList.selectForUpdate(_forupdate);
            }

            select firstonly fieldList
                where fieldList.RecId  == _recId;
        }

        return fieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the RecId of the record with _aggregationExtension1.
    /// </summary>
    /// <param name = "_agg">Instance of the class used to pass in parameters.</param>
    /// <returns>
    ///    RecId of the record with AggregationExtention1 equal to _aggregationExtension1.
    /// </returns>
    [Replaceable]
    public static RefRecId findOrCreate(
        RetailTransactionAggregationFieldList _fieldListToMatch)
    {
        RetailTransactionAggregationFieldList fieldList;

        if (_fieldListToMatch.hasValue())
        {
            select firstonly fieldList
                where fieldList.AggregationExtension1  == _fieldListToMatch.AggregationExtension1;
        
            if (!fieldList)
            {
                fieldList.AggregationExtension1 = _fieldListToMatch.AggregationExtension1;
                fieldList.insert();
            }
        }

        return fieldList.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if any values are non null.
    /// </summary>
    /// <returns>
    ///    True if any values are non null; otherwise false.
    /// </returns>
    [Replaceable]
    public boolean hasValue()
    {
        return this.AggregationExtension1 != null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<TableGroup>Transaction</TableGroup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>TransactionsAndOrders</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AggregationExtension1</Name>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AggregationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AggregationExtension1</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>