<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetDeprProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetDeprProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public server boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            if (this.DeprMethod == RAssetDeprMethod::TaxNonLinearGroup
                && (select firstonly RecId from rAssetDeprProfile
                    where rAssetDeprProfile.DeprMethod == RAssetDeprMethod::TaxNonLinearGroup
                        && rAssetDeprProfile.RecId != this.RecId).RecId)
            {
                ret = checkFailed("@GLS117110");
            }

            if (this.DeprPercentage < 0
                || this.DeprPercentage > 100)
            {
                ret = checkFailed(strFmt("@GLS106085", "@GLS116113"));
            }

            if ((this.DeprMethod == RAssetDeprMethod::ReducingBalance
                    || this.DeprMethod == RAssetDeprMethod::TaxLine)
                && !this.DeprPercentage)
            {
                ret = checkFailed("@GLS116269");
            }

            if (ret
                && this.DeprMethod == RAssetDeprMethod::TaxLine
                && (this.CostLimit <= 0
                    || this.CostLimit >= 100))
            {
                ret = checkFailed("@GLS116647");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks depreciation profile.
    /// </summary>
    /// <param name = "_assetDeprProfileRecId">An asset depreciation profile record Id.</param>
    /// <param name = "_assetLifeTime">An asset lifetime.</param>
    /// <param name = "_assetDeprPercentage">An asset percentage.</param>
    /// <param name = "_assetUse">An asset output/mileage.</param>
    /// <param name = "_assetFactor">An asset factor.</param>
    /// <param name = "_rate">A depreciation rate.</param>
    /// <returns>true, if validation is successful; otherwise false.</returns>
    public static boolean check(RecId _assetDeprProfileRecId,
        RAssetLifeTime _assetLifeTime,
        RAssetDeprPercentage _assetDeprPercentage = 0,
        real _assetUse = 0,
        RAssetFactor _assetFactor = 1,
        RAssetDepreciationRate _rate = 0)
    {
        RAssetDeprProfile assetDeprProfile = RAssetDeprProfile::find(_assetDeprProfileRecId);
        boolean ret = true;
        Percent percentage = _assetDeprPercentage;

        if (!assetDeprProfile.RecId)
        {
            ret = false;
        }
        else
        {
            if (!percentage)
            {
                percentage = assetDeprProfile.DeprPercentage;
            }

            ret = RAssetDeprProfile::checkDepreciationMethod(
                assetDeprProfile.DeprMethod,
                _assetLifeTime,
                percentage,
                _assetUse,
                _assetFactor,
                _rate);

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDepreciationMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks depreciation method.
    /// </summary>
    /// <param name = "_deprMethod">A depreciation method.</param>
    /// <param name = "_assetLifeTime">An asset lifetime.</param>
    /// <param name = "_percentage">An asset percentage.</param>
    /// <param name = "_assetUse">An asset output/mileage.</param>
    /// <param name = "_assetFactor">An asset factor.</param>
    /// <param name = "_rate">A depreciation rate.</param>
    /// <returns>true, if parameters are applicable for the method; otherwise false.</returns>
    protected static boolean checkDepreciationMethod(
        RAssetDeprMethod _deprMethod,
        RAssetLifeTime _assetLifeTime,
        Percent _percentage,
        real _assetUse,
        RAssetFactor _assetFactor,
        RAssetDepreciationRate _rate)
    {
        boolean ret;

        switch (_deprMethod)
        {
            case RAssetDeprMethod::StraightLine:
                ret = _assetLifeTime > 0;
                ret = ret && _assetFactor > 0;
                break;

            case RAssetDeprMethod::SumYears:
                ret = _assetLifeTime > 0;
                break;

            case RAssetDeprMethod::Value:
                ret = _assetUse > 0;
                break;

            case RAssetDeprMethod::ReducingBalance:
                ret = _percentage > 0;
                break;

            case RAssetDeprMethod::TaxLine:
                ret = _assetLifeTime > 0;
                ret = ret && _percentage > 0;
                ret = ret && _assetFactor > 0;
                break;

            case RAssetDeprMethod::Factor:
                ret = _assetLifeTime > 0;
                break;

            case RAssetDeprMethod::TaxNonLinearGroup:
                ret = _assetLifeTime > 0;
                ret = ret && _rate > 0;
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RAssetDeprProfile table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing RAssetDeprProfile table.
    /// </returns>
    public static RAssetDeprProfile find(
        RecId _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        RAssetDeprProfile assetDeprProfile;

        assetDeprProfile.selectForUpdate(_forupdate);
        if (_forupdate
            && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetDeprProfile.concurrencyModel(_concurrencyModel);
        }

        select firstonly assetDeprProfile
            where assetDeprProfile.RecId == _recId;

        return assetDeprProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDeprProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RAssetDeprProfile table for the specified depreciation profile id.
    /// </summary>
    /// <param name="_assetDeprProfileId">
    /// the specified depreciation profile id.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <returns>
    /// A buffer containing RAssetDeprProfile table.
    /// </returns>
    public static RAssetDeprProfile findByDeprProfile(
        RAssetDeprProfileId _assetDeprProfileId,
        boolean _forUpdate = false)
    {
        RAssetDeprProfile assetDeprProfile;

        if (_assetDeprProfileId)
        {
            assetDeprProfile.selectForUpdate(_forUpdate);

            select firstonly assetDeprProfile
                where assetDeprProfile.DeprProfile == _assetDeprProfileId;
        }
        return assetDeprProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDeprProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and displays lookup to select depreciation profile
    /// </summary>
    /// <param name="_formControl">
    /// instance of form control where the lookup is called out
    /// </param>
    /// <param name="_filterStr">
    /// sets filter by profile
    /// </param>
    /// <param name="_rAssetDeprProfileRecId">
    /// sets filter by profile record id
    /// </param>
    public static void lookupDeprProfileId(
        FormControl _formControl,
        str _filterStr,
        RecId _rAssetDeprProfileRecId)
    {
        FormStringControl formStringControl = _formControl as FormStringControl;

        // Construct arguments for the custom lookup
        Args e = new Args();
        e.name(formStr(RAssetDeprProfileLookup));
        e.lookupValue(_filterStr);
        e.caller(_formControl);

        RAssetDeprProfile rAssetDeprProfile = RAssetDeprProfile::find(_rAssetDeprProfileRecId);
        e.lookupField(fieldNum(RAssetDeprProfile, DeprProfile));
        e.record(rAssetDeprProfile);

        // Run the custom lookup and init the lookup form
        FormRun lookupFormRun = classfactory.formRunClass(e);
        lookupFormRun.init();

        // Do the lookup
        formStringControl.performFormLookup(lookupFormRun);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RAssetDeprProfile</FormRef>
	<Label>@GLS116268</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>DeprProfile</TitleField1>
	<TitleField2>DeprMethod</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DeprProfileIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RAssetDeprProfileTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetDeprProfileTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetGroup</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetGroup</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetLifeHist</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetLifeHist</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetStandards</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetStandards</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeprProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeprMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeprInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeprPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeprProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Depreciation</Name>
			<Label>@GLS116238</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeprMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeprInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeprPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Monthly</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeprSumBase</Name>
			<Label>@GLS117078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeprSumBase</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeprProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NonlinearMethod</Name>
			<Label>@GLS116631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostLimit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostLimit</Name>
			<ExtendedDataType>RAssetCostLimit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeprInterval</Name>
			<EnumType>RAssetDeprInterval</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeprMethod</Name>
			<EnumType>RAssetDeprMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DeprPercentage</Name>
			<ExtendedDataType>RAssetDeprPercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeprProfile</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAssetDeprProfileId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeprSumBase</Name>
			<EnumType>RAssetDeprSumBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Monthly</Name>
			<Label>@GLS116332</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>RAssetDeprProfileName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DeprProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DeprProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>