<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSDlvTerm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSDlvTerm extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isAddChargeToRetailOrderPolicyActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Evaluates whether the <c>AddChargeToRetailOrderPolicy</c> should be editable or not since this field
    /// being active is constrained by <c>TransferChargesToOrder</c> being <c>NoYes::Yes</c>
    /// </summary>
    /// <returns>
    /// true if the field <c>AddChargeToRetailOrderPolicy</c> should be editable; false, otherwise.
    /// </returns>
    public boolean isAddChargeToRetailOrderPolicyActive()
    {
        return this.TransferChargesToOrder == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(TMSDlvTerm, AddChargeToRetailOrderPolicy),
                [
                    fieldNum(TMSDlvTerm, TransferChargesToOrder)
                ]
            ]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TMSDlvTerm, AddChargeToRetailOrderPolicy):
                if (this.isFieldSet(fieldNum(TMSDlvTerm, TransferChargesToOrder)))
                {
                    if (!this.isAddChargeToRetailOrderPolicyActive())
                    {
                        this.AddChargeToRetailOrderPolicy = NoYes::No;
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>TMSDlvTerm</c> record for the specified <c>DlvTermId</c>.
    /// </summary>
    /// <param name="_dlvTermId">
    /// <c>DlvTermId</c> key to find.
    /// </param>
    /// <param name="_forUpdate">
    /// Whether to select the record for update or not.
    /// </param>
    /// <returns>
    /// The <c>TMSDlvTerm</c> record.
    /// </returns>
    public static TMSDlvTerm find(
        DlvTermId       _dlvTermId,
        boolean         _forUpdate = false)
    {
        TMSDlvTerm  tmsDlvTerm;

        if (_dlvTermId)
        {
            tmsDlvTerm.selectForUpdate(_forUpdate);

            select firstonly tmsDlvTerm
                where tmsDlvTerm.DlvTerm == _dlvTermId;
        }

        return tmsDlvTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Evaluates whether the combination of <c>AddChargeToRetailOrderPolicy</c> and <c>TransferChargesToOrder</c> is correct:
    /// The  <c>AddChargeToRetailOrderPolicy</c> can be set to Yes only if the <c>TransferChargesToOrder</c> field is also Yes.
    /// </summary>
    /// <returns>True if combination of <c>AddChargeToRetailOrderPolicy</c> and <c>TransferChargesToOrder</c> fields is valid;
    /// otherwise - false
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();
        if (ret && this.AddChargeToRetailOrderPolicy == NoYes::Yes)
        {
            if (!this.isAddChargeToRetailOrderPolicyActive())
            {
                ret = checkFailed("@TRX:TMSDeliveryTermsInvalidConfigurationError");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYS4001300</DeveloperDocumentation>
	<FormRef>DeliveryTerms</FormRef>
	<Label>@SYS4001299</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>DlvTerm</TitleField1>
	<TitleField2>TransferChargesToOrder</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TMSDlvTermIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Transportation</Modules>
	<ReplacementKey>TMSDlvTermIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferChargesToOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DlvTerm</Name>
			<Label>@SYS6576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transportation</Name>
			<Label>@TRX1</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AddChargeToRetailOrderPolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferChargesToOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>COD</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AddChargeToRetailOrderPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Label>@SYS4001301</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>COD</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCOD</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferChargesToOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS4001302</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TMSDlvTermIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DlvTerm</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTerm</Name>
					<Field>DlvTerm</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>