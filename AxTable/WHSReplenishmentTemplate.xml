<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReplenishmentTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSReplenishmentTemplate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks whether a specific <c>WHSReplenishmentTemplate</c> record exists.
	/// </summary>
	/// <param name="_whsReplenishTemplateId">
	/// Template id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(WHSReplenishTemplateId _whsReplenishTemplateId)
    {
        return (_whsReplenishTemplateId) &&
               (select firstonly WHSReplenishmentTemplate
                where whsReplenishmentTemplate.ReplenishTemplateId == _whsReplenishTemplateId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum (WHSReplenishmentTemplate, WaveStepCode):
                this.WaveStepCode = this.isWaveStepCodeApplicable() ? this.WaveStepCode : '';
                break;
            case fieldnum (WHSReplenishmentTemplate, UseWorkForWaveReplen):
                this.UseWorkForWaveReplen = this.isUseWorkForWaveReplenApplicable() ? this.UseWorkForWaveReplen : NoYes::No;
                break;
            case fieldnum (WHSReplenishmentTemplate, CancelReplenWhenDemandCanceled):
                this.CancelReplenWhenDemandCanceled = this.isCancelReplenWhenDemandCanceledApplicable() ? this.CancelReplenWhenDemandCanceled : NoYes::No;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return
        [
            // [field to default], [list of fields its default value depends on]
            [[fieldnum(WHSReplenishmentTemplate, WaveStepCode)], [fieldnum(WHSReplenishmentTemplate, ReplenishmentType)]],
            [[fieldnum(WHSReplenishmentTemplate, UseWorkForWaveReplen)], [fieldnum(WHSReplenishmentTemplate, ReplenishmentType)]],
            [[fieldnum(WHSReplenishmentTemplate, CancelReplenWhenDemandCanceled)], [fieldnum(WHSReplenishmentTemplate, ReplenishmentType)]]

        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    // required for the defaultField method to work
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSReplenishmentTemplate</c> record with given parameters.
	/// </summary>
	/// <param name="_whsReplenishTemplateId">
	/// Template id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSReplenishmentTemplate find(WHSReplenishTemplateId _whsReplenishTemplateId,
                                                boolean                _forupdate = false)
    {
        WHSReplenishmentTemplate    whsReplenishmentTemplate;

        if (_whsReplenishTemplateId)
        {
            whsReplenishmentTemplate.selectForUpdate(_forupdate);

            select firstonly whsReplenishmentTemplate
                where whsReplenishmentTemplate.ReplenishTemplateId == _whsReplenishTemplateId;
        }

        return whsReplenishmentTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForWaveStepCode</Name>
				<Source><![CDATA[
    internal static boolean existsForWaveStepCode(WHSWaveStepCode _waveStepCode)
    {
        WHSReplenishmentTemplate replenishmentTemplate;

        select firstonly RecId from replenishmentTemplate
            where replenishmentTemplate.WaveStepCode == _waveStepCode;

        return replenishmentTemplate.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWaveStepCodeApplicable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the wave step code field is applicable for the current replenishment template.
    /// </summary>
    /// <returns>true if the wave step code field is applicable; otherwise, false.</returns>
    public boolean isWaveStepCodeApplicable()
    {
        return this.ReplenishmentType == WHSReplenishmenttype::WaveDemand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUseWorkForWaveReplenApplicable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the work reuse for wave replenishment field is applicable for the current replenishment template.
    /// </summary>
    /// <returns>true if the field is applicable; otherwise, false.</returns>
    public boolean isUseWorkForWaveReplenApplicable()
    {
        return this.ReplenishmentType != WHSReplenishmenttype::LoadDemand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCancelReplenWhenDemandCanceledApplicable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the cancel replenishment when demand is canceled field is applicable for the current replenishment template.
    /// </summary>
    /// <returns>true if the field is applicable; otherwise, false.</returns>
    public boolean isCancelReplenWhenDemandCanceledApplicable()
    {
        return this.ReplenishmentType == WHSReplenishmenttype::WaveDemand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        if (ret
            && _fieldIdToCheck == fieldNum(WHSReplenishmentTemplate, WaveStepCode)
            && this.WaveStepCode) // the wave step code can always be blank
        {
            ret = WHSWaveStepCodeTable::isWaveStepCodeValueUpdateValid(this.WaveStepCode, this.TableId);
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4431</DeveloperDocumentation>
	<FormRef>whsreplenishmenttemplates</FormRef>
	<Label>@WAX1906</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ReplenishTemplateId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WHSReplenishmentTemplateIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WHSReplenishmentTemplateIdx</PrimaryIndex>
	<ReplacementKey>WHSReplenishmentTemplateIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>WHSReplenishmentTemplateLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WHSReplenishmentTemplateLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseWorkForWaveReplen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelReplenWhenDemandCanceled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseExistingImmediateReplenishmentWorkCrossUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSReplenishmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReplenishTemplateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseWorkForWaveReplen</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUseWorkForWaveReplen</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveStepCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveStepCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CancelReplenWhenDemandCanceled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCancelReplenWhenDemandCanceled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseExistingImmediateReplenishmentWorkCrossUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUseExistingImmediateReplenishmentWorkCrossUnit</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WHSReplenishmentTemplateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveStepCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveStepCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>