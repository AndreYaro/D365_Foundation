<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpRetailAssortmentExclusions</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpRetailAssortmentExclusions extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCategoryExclusion</Name>
				<Source><![CDATA[
        public void addCategoryExclusion(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        this.create(RetailAssortmentExclusionScope::Category, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPartialProductExclusion</Name>
				<Source><![CDATA[
        public void addPartialProductExclusion(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        this.create(RetailAssortmentExclusionScope::PartiallyExcludedProduct, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProductExclusion</Name>
				<Source><![CDATA[
        public void addProductExclusion(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        this.create(RetailAssortmentExclusionScope::Product, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addVariantExclusion</Name>
				<Source><![CDATA[
        public void addVariantExclusion(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        this.create(RetailAssortmentExclusionScope::Variant, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
        private void create(RetailAssortmentExclusionScope _scope, RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        ttsBegin;
        this.ExclusionScope = _scope;
        this.RefRecId = _refRecId;
        this.ValidFrom = _fromValidDate;
        this.ValidTo = _toValidDate;
        this.insert();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        private boolean exist(RetailAssortmentExclusionScope _scope, RefRecId _refRecId, ValidFromDate _fromDate, ValidToDate _toDate)
    {
        select firstOnly this
            where
                this.ExclusionScope == _scope &&
                this.RefRecId == _refRecId &&
                this.ValidFrom <= _fromDate &&
                this.ValidTo >= _toDate;

        if (!this.RecId)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAvailableDateRanges</Name>
				<Source><![CDATA[
        public ListEnumerator getAvailableDateRanges(
        RetailAssortmentExclusionScope _scope, RefRecId _recId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        List dateRanges = new List(Types::Class);
        List tempDateRanges = new List(Types::Class);
        ListEnumerator includeEnumerator;
        RetailAssortmentDateRange inputDateRange = new RetailAssortmentDateRange(_fromValidDate, _toValidDate);
        RetailAssortmentDateRange excludedDateRange;
        RetailAssortmentDateRange includedDateRange;

        dateRanges.addEnd(inputDateRange);

        while select this
            where
                this.ExclusionScope == _scope &&
                this.RefRecId == _recId
        {
            excludedDateRange = new RetailAssortmentDateRange(this.ValidFrom, this.ValidTo);

            includeEnumerator = dateRanges.getEnumerator();
            while (includeEnumerator.moveNext())
            {
                includedDateRange = includeEnumerator.current();
                tempDateRanges.appendList(includedDateRange.exclude(excludedDateRange));
            }

            dateRanges = tempDateRanges;
            tempDateRanges = new List(Types::Class);
        }

        return dateRanges.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCategoryExcluded</Name>
				<Source><![CDATA[
        public boolean isCategoryExcluded(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        return this.exist(RetailAssortmentExclusionScope::Category, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductCategoryExcluded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether or not the product category is present in the exclusion list
    /// </summary>
    /// <param name="_productRefRecId">
    /// Product recid
    /// </param>
    /// <param name="_fromValidDate">
    /// Assortment valid from date
    /// </param>
    /// <param name="_toValidDate">
    /// Assortment valid to date
    /// </param>
    /// <returns>
    /// True if the product category is found in the exclusion list, else false
    /// </returns>
    public boolean isProductCategoryExcluded(RefRecId _productRefRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        EcoResProductCategory ecoResProductCategory;
        TmpRetailAssortmentExclusions tmpRetailAssortmentExclusions;

        tmpRetailAssortmentExclusions.setTmpData(this);
        select firstOnly RecId from tmpRetailAssortmentExclusions
            where tmpRetailAssortmentExclusions.ExclusionScope == RetailAssortmentExclusionScope::Category
                && tmpRetailAssortmentExclusions.ValidFrom <= _fromValidDate
                && tmpRetailAssortmentExclusions.ValidTo >= _toValidDate
        exists join RecId from ecoResProductCategory
            where ecoResProductCategory.Category == tmpRetailAssortmentExclusions.RefRecId
                && ecoResProductCategory.Product == _productRefRecId;

        if (tmpRetailAssortmentExclusions.RecId)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductExcluded</Name>
				<Source><![CDATA[
        public boolean isProductExcluded(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        return this.exist(RetailAssortmentExclusionScope::Product, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductPartiallyExcluded</Name>
				<Source><![CDATA[
        public boolean isProductPartiallyExcluded(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        return this.exist(RetailAssortmentExclusionScope::PartiallyExcludedProduct, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVariantExcluded</Name>
				<Source><![CDATA[
        public boolean isVariantExcluded(RefRecId _refRecId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        return this.exist(RetailAssortmentExclusionScope::Variant, _refRecId, _fromValidDate, _toValidDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@RET260830</Label>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExclusionScope</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailAssortmentExclusionScope</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ExclusionScopeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExclusionScope</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>