<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPosBatchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailPosBatchTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addedAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the added amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total added amount of POS batch tender.
    /// </returns>
    public display Amount addedAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalAddedAmount;

        while select AddToTenderAmount, OverrideAddToTenderAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalAddedAmount += retailPosBatchTenderTrans.OverrideAddToTenderAmount;
            }
            else 
            {
                totalAddedAmount += retailPosBatchTenderTrans.AddToTenderAmount;
            }
        }

        return totalAddedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankDropAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the bank drop amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total bank drop amount of POS batch tender transaction.
    /// </returns>
    public display Amount bankDropAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalBankDropAmount;

        while select BankDropAmount, OverrideBankDropAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalBankDropAmount += retailPosBatchTenderTrans.OverrideBankDropAmount;
            }
            else
            {
                totalBankDropAmount += retailPosBatchTenderTrans.BankDropAmount;
            }
        }

        return totalBankDropAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the change amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total change amount of POS batch tender.
    /// </returns>
    public display Amount changeAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalChangeAmount;

        while select ChangeAmount, OverrideChangeAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalChangeAmount += retailPosBatchTenderTrans.OverrideChangeAmount;
            }
            else
            {
                totalChangeAmount += retailPosBatchTenderTrans.ChangeAmount;
            }
        }

        return totalChangeAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countedAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the counted amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total counted amount of POS batch tender.
    /// </returns>
    public display Amount countedAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalCountedAmount;

        while select DeclareTenderAmount, OverrideDeclareTenderAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalCountedAmount += retailPosBatchTenderTrans.OverrideDeclareTenderAmount;
            }
            else
            {
                totalCountedAmount += retailPosBatchTenderTrans.DeclareTenderAmount;
            }
        }

        return totalCountedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>expenseAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the expense amount of POS batch account transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total added amount of POS batch account transaction.
    /// </returns>
    public display Amount expenseAmountTotal()
    {
        return (select sum(Amount) from retailPosBatchAccountTrans
                    where retailPosBatchAccountTrans.BatchID == this.BatchID
                    && retailPosBatchAccountTrans.TerminalID == this.TerminalID
                    && retailPosBatchAccountTrans.StoreId == this.StoreId
                    && retailPosBatchAccountTrans.AccountType == RetailIncomeExpense::Expense).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>incomeAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the amount of POS batch account transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total amount of POS batch account transaction.
    /// </returns>
    public display Amount incomeAmountTotal()
    {
        return (select sum(Amount) from retailPosBatchAccountTrans
                    where retailPosBatchAccountTrans.BatchID == this.BatchID
                    && retailPosBatchAccountTrans.TerminalID == this.TerminalID
                    && retailPosBatchAccountTrans.StoreId == this.StoreId
                    && retailPosBatchAccountTrans.AccountType == RetailIncomeExpense::Income).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of counted, bank drop amounts.
    /// </summary>
    /// <returns>
    /// The total over amount of the transaction.
    /// </returns>
    public display Amount overAmountTotal()
    {
        RetailPosBatchTenderTrans  tenderTrans;
        Total                   overAmount;
        ;

        while select tenderTrans
            where tenderTrans.BatchID == this.BatchID
            && tenderTrans.TerminalId == this.TerminalId
            && tenderTrans.StoreId == this.StoreId
        {
            overAmount += tenderTrans.overAmount();
        }

        return overAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overShortAbsAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the absolute sum of counted bank drop amounts.
    /// </summary>
    /// <returns>
    /// The total over amount of the transaction.
    /// </returns>
    public display Amount overShortAbsAmountTotal()
    {
        ;
        return abs(this.overAmountTotal());
    }

]]></Source>
			</Method>
			<Method>
				<Name>overShortLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a message based on the total amount.
    /// </summary>
    /// <returns>
    /// A string message indicating whether the amount is short or over.
    /// </returns>
    public display LabelType overShortLabel()
    {
        ;
        if (this.overAmountTotal() >= 0)
        {
            return "@RET5413";
        }
        else
        {
            return "@RET5402";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>removedAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the remove Tender amount of POS batch tender transactions for the specified batch
    /// ID.
    /// </summary>
    /// <returns>
    /// The total remove tender amount of POS batch tender transaction.
    /// </returns>
    public display Amount removedAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalRemovedAmount;

        while select RemoveTenderAmount, OverrideRemoveTenderAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalRemovedAmount += retailPosBatchTenderTrans.OverrideRemoveTenderAmount;
            }
            else
            {
                totalRemovedAmount += retailPosBatchTenderTrans.RemoveTenderAmount;
            }
        }

        return totalRemovedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>safeDropAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the safe drop amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total safe drop amount of POS batch tender transaction.
    /// </returns>
    public display Amount safeDropAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalSafeDropAmount;

        while select SafeDropAmount, OverrideSafeDropAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalSafeDropAmount += retailPosBatchTenderTrans.OverrideSafeDropAmount;
            }
            else
            {
                totalSafeDropAmount += retailPosBatchTenderTrans.SafeDropAmount;
            }
        }

        return totalSafeDropAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startingAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the starting amount of pos batch tender transactions for the given batch Id.
    /// </summary>
    /// <returns>
    /// The total starting amount of pos batch tender transaction.
    /// </returns>
    public display Amount startingAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalStartingAmount;

        while select StartingAmount, OverrideStartingAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalStartingAmount += retailPosBatchTenderTrans.OverrideStartingAmount;
            }
            else
            {
                totalStartingAmount += retailPosBatchTenderTrans.StartingAmount;
            }
        }

        return totalStartingAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tenderedAmountTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the tendered amount of POS batch tender transactions for the specified batch ID.
    /// </summary>
    /// <returns>
    /// The total tendered amount of POS batch tender transaction.
    /// </returns>
    public display Amount tenderedAmountTotal()
    {
        RetailPosBatchTenderTrans retailPosBatchTenderTrans;
        Amount totalTenderedAmount;

        while select TenderedAmount, OverrideTenderedAmount, Overridden from retailPosBatchTenderTrans
            where retailPosBatchTenderTrans.BatchID == this.BatchID
            && retailPosBatchTenderTrans.TerminalID == this.TerminalID
            && retailPosBatchTenderTrans.StoreId == this.StoreId
        {
            if (retailPosBatchTenderTrans.Overridden == NoYes::Yes)
            {
                totalTenderedAmount += retailPosBatchTenderTrans.OverrideTenderedAmount;
            }
            else
            {
                totalTenderedAmount += retailPosBatchTenderTrans.TenderedAmount;
            }
        }

        return totalTenderedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailPosBatchTable</c> table exists.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_terminalId">
    /// The ID number of POS terminal.
    /// </param>
    /// <param name="_batchId">
    /// The ID number of POS batch.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RetailStoreId          _storeId,
                                RetailTerminalId       _terminalId,
                                RetailPosBatchID       _batchId)
    {
        return _storeId && _terminalId && _batchId && (select firstonly RecId from retailPosBatchTable
                                                            where retailPosBatchTable.StoreId      == _storeId     &&
                                                                  retailPosBatchTable.TerminalId   == _terminalId  &&
                                                                  retailPosBatchTable.BatchID      == _batchId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailPosBatchTable</c> table.
    /// </summary>
    /// <param name="_storeId">
    /// The ID number of the store.
    /// </param>
    /// <param name="_terminalId">
    /// The ID number of POS terminal.
    /// </param>
    /// <param name="_batchId">
    /// The ID of the POS batch.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailPosBatchTable</c> table; otherwise, an empty record.
    /// </returns>
    static RetailPosBatchTable find(RetailStoreId     _storeId,
                                 RetailTerminalId  _terminalId,
                                 RetailPosBatchID  _batchId,
                                 boolean        _forUpdate = false)
    {
        RetailPosBatchTable    rboPosBatchTable;
        ;

        rboPosBatchTable.selectForUpdate(_forUpdate);

        select firstonly rboPosBatchTable
            where rboPosBatchTable.StoreId      == _storeId &&
                  rboPosBatchTable.TerminalId   == _terminalId  &&
                  rboPosBatchTable.BatchID      == _batchId;

        return rboPosBatchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the lookup for POS batches.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// A <c>FormIntControl</c> object.
    /// </param>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of the transaction.
    /// </param>
    /// <param name="_fromTime">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_toTime">
    /// The ending time of the transaction.
    /// </param>
    public static void lookupBatch(FormIntControl       _lookupCtrl,
                                   RetailStoreId           _storeId,
                                   RetailStartingDate      _fromDate,
                                   RetailEndingDate        _toDate,
                                   RetailStartingTime      _fromTime,
                                   RetailEndingTime        _toTime)
    {
        SysTableLookup          sysTableLookup          = SysTableLookup::newParameters(tableNum(RetailPosBatchTable), _lookupCtrl);
        Query                   query                   = new Query();
        QueryBuildDataSource    rboPosBatchTable_qbds   = query.addDataSource(tableNum(RetailPosBatchTable));
        QueryBuildRange         storeId_qbr             = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, StoreId));
        QueryBuildRange         status_qbr              = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, Status));
        QueryBuildRange         posted_qbr              = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, Posted));
        QueryBuildRange         startDate_qbr           = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, StartDate));
        QueryBuildRange         startTime_qbr           = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, StartTime));
        QueryBuildRange         closeTime_qbr           = rboPosBatchTable_qbds.addRange(fieldNum(RetailPosBatchTable, CloseTime));
        ;

        storeId_qbr.value(_storeId);
        status_qbr.value(SysQuery::value(RetailPosBatchStatus::Closed));
        posted_qbr.value(SysQuery::value(NoYes::No));
        startDate_qbr.value(SysQuery::range(_fromDate, dateMax()));
        startTime_qbr.value(SysQuery::range(time2str(_fromTime,1,1), SysQuery::valueUnlimited()));
        closeTime_qbr.value(SysQuery::range(SysQuery::valueUnlimited(), time2str(_toTime,1,1)));

        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, StoreId));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, TerminalId));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, BatchID));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, StartDate));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, StartTime));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, CloseDate));
        sysTableLookup.addLookupfield(fieldNum(RetailPosBatchTable, CloseTime));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAsPosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the transactions with the entry status as posted.
    /// </summary>
    /// <param name="_rboStatementId">
    /// The value of the store number.
    /// </param>
    public static void markAsPosted(RetailStatementId  _rboStatementId)
    {
        RetailPosBatchTable::markAsPostedWithCount(_rboStatementId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAsPostedWithCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the transactions with the entry status as posted.
    /// </summary>
    /// <param name="_rboStatementId">
    /// The value of the store number.
    /// </param>
    /// <returns>The count of shifts updated.</returns>
    public static int markAsPostedWithCount(RetailStatementId  _rboStatementId)
    {
        RetailTransactionTable  rboTransactionTable;
        RetailPosBatchTable     rboPosBatchTable;
        RetailStatementJour     statementTable = RetailStatementJour::find(_rboStatementId);
        
        int shiftsUpdated = 0;

        // Get a list of BatchIds from the RetailPosBatchTable for a given statementId
        while select forupdate rboPosBatchTable
            index hint StatementIdPostedStatusIdx
            where
             rboPosBatchTable.Posted == NoYes::No &&
             rboPosBatchTable.Status == RetailPosBatchStatus::Closed &&
             rboPosBatchTable.StatementId == _rboStatementId
        {
            select firstonly RecId from rboTransactionTable
                where rboTransactionTable.Store == rboPosBatchTable.StoreId &&
                        rboTransactionTable.BatchTerminalId == rboPosBatchTable.TerminalId &&
                        rboTransactionTable.BatchID == rboPosBatchTable.BatchID &&
                        rboTransactionTable.EntryStatus == RetailEntryStatus::None;

            // All transactions are marked with a statementId and the entry status is 'posted'
            if (!rboTransactionTable.RecId || statementTable.StatementType == RetailStatementType::Financial)
            {
                ttsbegin;

                rboPosBatchTable.Posted = NoYes::Yes;
                rboPosBatchTable.update();
                
                shiftsUpdated++;

                ttscommit;
            }
        }

        return shiftsUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grandTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch grand total net, i.e., sales garnd total + returns grand total.
    /// </summary>
    /// <returns>
    /// Batch grand total net amount.
    /// </returns>
    public display Amount grandTotal()
    {
        return this.SalesGrandTotal + this.ReturnsGrandTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cumulativeGrandTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch cumulative grand total, i.e., sales grand total - returns grand total.
    /// </summary>
    /// <returns>
    /// Batch cumulative grand total amount.
    /// </returns>
    public display RetailCumulativeGrandTotal cumulativeGrandTotal()
    {
        return this.SalesGrandTotal - this.ReturnsGrandTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cumulativePerpetualGrandTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch cumulative grand perpetual total, i.e., sales grand total + returns grand total.
    /// </summary>
    /// <returns>
    /// Batch cumulative perpetual grand total amount.
    /// </returns>
    public display RetailCumulativePerpetualGrandTotal cumulativePerpetualGrandTotal()
    {
        return this.SalesGrandTotal + this.ReturnsGrandTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailPosBatchTable</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the shift.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailPosBatchTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailPosBatchTable findByRecId(RecId _recId, boolean _forUpdate = false)
    {
        RetailPosBatchTable postBatchTable;

        if (_recId)
        {
            postBatchTable.selectForUpdate(_forUpdate);

            select firstonly postBatchTable
                where postBatchTable.RecId == _recId;
        }

        return postBatchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cumulativeGrandTotalByShift</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch cumulative grand total by shift, i.e., sales grand total - returns grand total.
    /// </summary>
    /// <returns>
    /// Batch cumulative grand total amount by shift.
    /// </returns>
    public display RetailCumulativeGrandTotal cumulativeGrandTotalByShift()
    {
        return this.ShiftSalesTotal - this.ShiftReturnsTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cumulativePerpetualGrandTotalByShift</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch cumulative grand perpetual total by shift, i.e., sales grand total + returns grand total.
    /// </summary>
    /// <returns>
    /// Batch cumulative perpetual grand total amount by shift.
    /// </returns>
    public display RetailCumulativePerpetualGrandTotal cumulativePerpetualGrandTotalByShift()
    {
        return this.ShiftSalesTotal + this.ShiftReturnsTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grandTotalByShift</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the batch grand total by shift, i.e., sales grand total - returns grand total.
    /// </summary>
    /// <returns>
    /// Batch grand total amount by shift.
    /// </returns>
    public display RetailGrandTotal grandTotalByShift()
    {
        return this.ShiftSalesTotal - this.ShiftReturnsTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FiscalRegisterResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets fiscal register response for selected shift.
    /// </summary>
    /// <returns>
    /// Fiscal register response corresponding with selected shift.
    /// </returns>
    public display RetailFiscalRegisterResponse FiscalRegisterResponse()
    {
        RetailLogFiscalTransaction logFiscalTrans;
        RetailLog logTable;

        select firstOnly RegisterResponse from logFiscalTrans
                exists join logTable
                    where logTable.RetailLogId == logFiscalTrans.RetailLogId
                        && logTable.StoreId == this.StoreId
                        && logTable.terminalId == this.TerminalId
                        && logTable.BatchId == this.BatchID
                        && logTable.EventType == RetailAuditEventType::CloseShift;

        return logFiscalTrans.RegisterResponse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>acknowledgeError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Acknowledge the error on the shift if it exists, mark the user and time it was acknowledged.
    /// </summary>
    public void acknowledgeError()
    {
        if (this.ErrorCode == RetailEodShiftValidationErrorCode::Error)
        {
            this.ErrorCode = RetailEodShiftValidationErrorCode::Acknowledged;
            this.ErrorCodeDateTime = DateTimeUtil::utcNow();
            this.ErrorCodeEditUser = curUserId();
            this.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>markForFinancialStatement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks a given shift for financial statement.
    /// </summary>
    /// <returns>True if the shift can be marked in a financial statement; false, otherwise.</returns>
    internal boolean markForFinancialStatement()
    {
        if (!RetailEodTrickleFeedFeatureExposure::isEnabled())
        {
            return checkFailed(strFmt("@Retail:RetailTrickleFeedNotEnabled", "@Retail:RetailEodTrickleFeedConfigKey"));
        }

        if (this.Posted)
        {
            return checkFailed("@Retail:RetailShiftMarkForFinancialStatementAlreadyPosted");
        }

        RetailTransactionTable postedTransactionTable;
        RetailStatementJour statementJour;

        // Check for posted transactions on complete statements.
        select firstonly RecId from postedTransactionTable
            where   postedTransactionTable.BatchID == this.BatchID
                &&  postedTransactionTable.BatchTerminalId == this.TerminalId
                &&  postedTransactionTable.store == this.StoreId
                &&  postedTransactionTable.statementId != ''
            join statementJour
                where   postedTransactionTable.statementId == statementJour.statementId
                    &&  statementJour.StatementType == RetailStatementType::Complete;

        RetailTransactionTable openTransactionTable;
        RetailStatementTable statementTable;

        // Check for marked transactions on complete statements.
        select firstonly RecId from openTransactionTable
            where   openTransactionTable.BatchID == this.BatchID
                &&  openTransactionTable.BatchTerminalId == this.TerminalId
                &&  openTransactionTable.store == this.StoreId
                &&  openTransactionTable.statementId != ''
            join statementTable
                where   openTransactionTable.statementId == statementTable.statementId
                    &&  statementTable.StatementType == RetailStatementType::Complete;

        if (postedTransactionTable.RecId || openTransactionTable.RecId)
        {
            return checkFailed(strFmt("@Retail:RetailShiftMarkForFinancialStatementMarkedTransactions", "@Retail:RetailEodTrickleFeedConfigKey"));
        }

        ttsbegin;

        this.selectForUpdate(true);
        this.MarkForFinancialStatement = NoYes::Yes;
        this.update();

        ttscommit;

        info("@Retail:RetailShiftMarkForFinancialStatementSuccess");

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260577</DeveloperDocumentation>
	<FormRef>RetailPosBatchTable</FormRef>
	<Label>@RET5070</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>StoreId</TitleField1>
	<TitleField2>BatchID</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>StoreTerminalBatchIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>StoreTerminalBatchIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TerminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CloseDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CloseTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDateTimeUtc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CloseDateTimeUtc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnsTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaidToAccountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomersCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NoSaleCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TerminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@RET5236</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnsTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaidToAccountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptCopiesTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrainingTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceOverrideTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendedTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesGrandTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnsGrandTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>grandTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>incomeAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>expenseAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTotalIncludingTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTotalExcludingTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Close</Name>
			<Label>@SYS18742</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CloseDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CloseTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CloseDateTimeUtc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Counts</Name>
			<Label>@RET5237</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomersCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NoSaleCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogonsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoidsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrainingCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptCopiesCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendedCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GoodsSoldQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServicesSoldQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptsCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZeroSalesCount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TerminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Replication</Name>
			<Label>@RET3213</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplicationCounter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Report</Name>
			<Label>@SYS16399</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Staff</Name>
			<Label>@RET3312</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StaffId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Start</Name>
			<Label>@SYS53373</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDateTimeUtc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TenderTotals</Name>
			<Label>@RET5225</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>tenderedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>changeAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>addedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>removedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankDropAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>safeDropAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>countedAmountTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>overAmountTotal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShiftTotals</Name>
			<Label>@RetailXZReportsShiftTotals:RetailXZReportsShiftTotals</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShiftReturnsTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShiftSalesTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>cumulativeGrandTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>cumulativePerpetualGrandTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargeTotal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>grandTotalByShift</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TerminalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPosBatchID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CancellationCharges</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Channel</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CloseDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS22065</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>CloseDateTimeUtc</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@SYS30156</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ClosedAtTerminal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>CloseTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeOfDay</ExtendedDataType>
			<Label>@SYS30156</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CustomersCount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET5072</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomerOrdersCanceled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomerOrdersEdited</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomerOrdersPlaced</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomerOrdersVoidedLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DepositCollected</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DepositRedeemed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DepositRefunded</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscountTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET5073</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LogonsCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET5220</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NoSaleCount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET5074</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Origin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnDistributionLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PaidToAccountTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET5075</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Posted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReplicationCounter</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplicationCounter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnsTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET5076</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundedAmountTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET4325</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SalesCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET5218</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET5238</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StaffId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailStaffId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS35856</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StartDateTimeUtc</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@SYS39127</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>StartTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeOfDay</ExtendedDataType>
			<Label>@SYS39127</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatementId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStatementId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailPosBatchStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StoreId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET5217</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TransactionsCount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET4416</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>VoidsCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET5219</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GoodsSoldQty</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE,AT</CountryRegionCodes>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@SYP4860943</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceOverrideTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYP4861020</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReceiptCopiesCount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@SYP4860945</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReceiptCopiesTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYP4860945</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReturnsCount</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET3289</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnsGrandTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>E,FR</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYP4860941</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesGrandTotal</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE,FR</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYP4860940</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ServicesSoldQty</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE,AT</CountryRegionCodes>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@SYP4860944</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SuspendedCount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET2575</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SuspendedTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET2575</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TrainingCount</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RET2578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TrainingTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RET2578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GiftCardsTotal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GiftCardCashOutTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@Retail:GiftCardCashOutTotalLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReceiptsCount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@Retail:ReceiptsCount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTotalIncludingTax</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@Retail:SalesTotalIncludingTax</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTotalExcludingTax</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SE</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@Retail:SalesTotalExcludingTax</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VoidedSalesTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@Retail:VoidedAmount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShiftReturnsTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<CountryRegionCodes>FR</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RetailXZReportsShiftTotals:RetailPosBatchTableShiftReturnsTotal</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShiftSalesTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<CountryRegionCodes>FR</CountryRegionCodes>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RetailXZReportsShiftTotals:RetailPosBatchTableShiftSalesTotal</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ChargeTotal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@RetailXZReportsShiftTotals:RetailPosBatchTableChargesTotal</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ZeroSalesCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>AT</CountryRegionCodes>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Label>@RetailXZReport:ZeroSales</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasPendingOfflineTransactions</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RetailHasPendingOfflineTransactions</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Error</Name>
			<ExtendedDataType>RetailEodShiftValidationError</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ErrorCode</Name>
			<EnumType>RetailEodShiftValidationErrorCode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ErrorCodeDateTime</Name>
			<ExtendedDataType>RetailEodShiftValidationErrorCodeDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ErrorCodeEditUser</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RetailEodShiftValidationErrorCodeEditUser</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarkForFinancialStatement</Name>
			<HelpText>@Retail:RetailShiftMarkForFinancialStatementHelpText</HelpText>
			<Label>@Retail:RetailShiftMarkForFinancialStatementLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ClosedAtBatchId</Name>
			<AllowEdit>No</AllowEdit>
			<CountryRegionCodes>FR</CountryRegionCodes>
			<ExtendedDataType>RetailPosBatchID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>StoreTerminalBatchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TerminalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StatementCloseTimestampIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>StatementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CloseTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CloseDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TerminalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Origin</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReplicationCounter</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StatementIdPostedStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StatementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FinancialStatement</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StatementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CloseDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarkForFinancialStatement</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailChannelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<SourceEDT>RefRecId</SourceEDT>
					<Field>Channel</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStatementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStatementTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StatementId</Name>
					<SourceEDT>RetailStatementId</SourceEDT>
					<Field>StatementId</Field>
					<RelatedField>statementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>statementIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StoreId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>StoreId</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTerminalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TerminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>TerminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>terminalIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailTerminalTableClose</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RetailTerminalTableClose</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClosedAtTerminal</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>ClosedAtTerminal</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>