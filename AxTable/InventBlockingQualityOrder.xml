<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventBlockingQualityOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventBlockingQualityOrder extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByQualityOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventBlockingQualityOrder</c> table by the quality order ID.
    /// </summary>
    /// <param name="_qualityOrderId">
    /// The quality order ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventBlockingQualityOrder</c> table; otherwise, an empty record.
    /// </returns>
    public static InventBlockingQualityOrder findByQualityOrderId(InventQualityOrderId _qualityOrderId, boolean _forUpdate = false)
    {
        InventBlockingQualityOrder  inventBlockingQualityOrder;

        inventBlockingQualityOrder.selectForUpdate(_forUpdate);

        select firstonly inventBlockingQualityOrder
            where inventBlockingQualityOrder.InventQualityOrderId == _qualityOrderId;

        return inventBlockingQualityOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventBlockingByQualityOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventBlocking</c> table by the quality order ID.
    /// </summary>
    /// <param name="_inventQualityOrderId">
    /// The quality order ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventBlocking</c> table; otherwise, an empty record.
    /// </returns>
    public static InventBlocking findInventBlockingByQualityOrderId(InventQualityOrderId _inventQualityOrderId, boolean _forUpdate = false)
    {
        InventBlocking  inventBlocking;
        InventBlockingQualityOrder  inventBlockingQualityOrder;

        inventBlocking.selectForUpdate(_forUpdate);

        select firstonly inventBlocking
            exists join inventBlockingQualityOrder
            where       inventBlocking.RecId                            == inventBlockingQualityOrder.InventBlocking
            &&          inventBlockingQualityOrder.InventQualityOrderId == _inventQualityOrderId;

        return inventBlocking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findQualityOrderByItemBlocking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventQualityOrderTable</c> table by the quality order ID.
    /// </summary>
    /// <param name="_inventItemBlockingRecId">
    /// The inventory blocking ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventQualityOrderTable</c> table; otherwise, an empty record.
    /// </returns>
    public static InventQualityOrderTable findQualityOrderByItemBlocking(RefRecId _inventItemBlockingRecId, boolean _forUpdate = false)
    {
        InventQualityOrderTable     inventQualityOrderTable;
        InventBlockingQualityOrder  inventBlockingQualityOrder;

        inventBlockingQualityOrder.selectForUpdate(_forUpdate);

        select firstonly inventQualityOrderTable
            exists join inventBlockingQualityOrder
            where       inventQualityOrderTable.QualityOrderId    == inventBlockingQualityOrder.InventQualityOrderId
            &&          inventBlockingQualityOrder.InventBlocking == _inventItemBlockingRecId;

        return inventQualityOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reserveBlockingAtStatusLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reserve blocking at the Inventory Status level.
    /// </summary>
    /// <param name = "_inventBlocking">The <c>InventBlocking</c> record.</param>
    /// <param name = "_fullBlock">Whether or not this is a full block.</param>
    [Hookable(false)]
    internal static void reserveBlockingAtStatusLevel(InventBlocking _inventBlocking)
    {
        _inventBlocking.type().reserveBlockingAtStatusLevel();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventQualityManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS323953</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>inventblocking</FormRef>
	<Label>@SYS132040</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>InventQualityOrderId</TitleField1>
	<TitleField2>InventBlocking</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>InventQualityOrderIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>InventQualityOrderIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBlocking</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQualityOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBlocking</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQualityOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQualityOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBlocking</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQualityOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventBlocking</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventQualityOrderId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQualityOrderId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventQualityOrderIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventQualityOrderId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventBlockingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventBlocking</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventBlocking</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventBlocking</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventBlocking</Name>
					<Field>InventBlocking</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>QualityOrder</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventQualityOrderTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventQualityOrderId</Name>
					<Field>InventQualityOrderId</Field>
					<RelatedField>QualityOrderId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>
