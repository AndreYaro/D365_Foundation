<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMJournalOrgUnitList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CFMJournalOrgUnitList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Decription of record
    /// </summary>
    /// <returns>return Decription of record </returns>
    public display Description description()
    {
        return strFmt('%1 - %2', strRFix(this.DataArea, 4, ' '), CompanyInfo::findDataArea(this.DataArea).Name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init from source
    /// </summary>
    /// <param name = "_source"></param>
    public void initFromSource(Common _source)
    {
        this.SetupSourceType = CFMJournalName::tableIdToSourceType(_source.TableId);
        this.SourceRecId = _source.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySourceIds</Name>
				<Source><![CDATA[
    public static CFMJournalOrgUnitList findBySourceIds(RefTableId _sourceTableId, RefRecId _sourceRecId, boolean _forupdate = false)
    {
        CFMJournalOrgUnitList orgUnits;

        if (_sourceRecId && _sourceTableId)
        {
            orgUnits.selectForUpdate(_forupdate);

            select firstOnly orgUnits
                where orgUnits.SourceRecId == _sourceRecId
                   && orgUnits.SetupSourceType == CFMJournalName::tableIdToSourceType(_sourceTableId);
        }

        return orgUnits;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CFMJournalOrgUnitList find(RefRecId _recId, boolean _forupdate = false)
    {
        CFMJournalOrgUnitList orgUnits;

        if (_recId)
        {
            orgUnits.selectForUpdate(_forupdate);

            select firstOnly orgUnits
                where orgUnits.RecId == _recId;
        }

        return orgUnits;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RefRecId _recId)
    {
        CFMJournalOrgUnitList orgUnits;

        if (_recId)
        {
            select firstOnly RecId from orgUnits
                where orgUnits.RecId == _recId;
        }

        return orgUnits.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orgUnitNotSelectedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// List of CFMJournalOrgUnitList from source record
    /// </summary>
    /// <param name = "_source"></param>
    /// <returns>return List of CFMJournalOrgUnitList from source record</returns>
    public static List orgUnitNotSelectedList(Common _source)
    {
        List list = new List(Types::Record);

        Container con = CFMParameters::getCentralizedPaymentCompanies(curext());
        CFMJournalOrgUnitList record;

        while select DataArea from record
            where record.SetupSourceType == CFMJournalName::tableIdToSourceType(_source.TableId)
               && record.SourceRecId == _source.RecId
        {
            Int position = conFind(con, record.DataArea);

            if (position)
            {
                con = conDel(con, position, 1);
            }
        }

        for (int i = 1; i<= conLen(con); i++)
        {
            CFMJournalOrgUnitList newRecord;

            newRecord.clear();
            newRecord.initFromSource(_source);
            newRecord.DataArea = conPeek(con, i);
            list.addEnd(newRecord);
        }
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orgUnitSelectedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selected CFMJournalOrgUnitList list 
    /// </summary>
    /// <param name = "_source"></param>
    /// <returns>return Selected CFMJournalOrgUnitList list </returns>
    public static List orgUnitSelectedList(Common _source)
    {
        CFMJournalOrgUnitList record;
        List list = new List(Types::Record);

        while select record
            order by DataArea
            where record.SetupSourceType == CFMJournalName::tableIdToSourceType(_source.TableId)
               && record.SourceRecId == _source.RecId
        {
            list.addEnd(record);
        }

        return list;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CFMCashflowManagement</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@CashFlowManagement:JournalOrgUnitListTableDevDescription</DeveloperDocumentation>
	<Label>@CashFlowManagement:PaymSchedJourLegalEntities</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>DataArea</TitleField1>
	<TitleField2>SourceRecId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>RCashFlowManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataArea</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataArea</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataArea</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DataArea</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SetupSourceType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Visible>No</Visible>
			<EnumType>CFMJournalSetupSourceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UniqueIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SetupSourceType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataArea</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CFMRefRecIdMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>SourceRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceType</MapField>
					<MapFieldTo>SetupSourceType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>CFMJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CFMJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SetupSourceType</Name>
					<Field>SetupSourceType</Field>
					<ValueStr>CFMJournalSetupSourceType::JournalName</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CFMJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CFMJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SetupSourceType</Name>
					<Field>SetupSourceType</Field>
					<ValueStr>CFMJournalSetupSourceType::JournalTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>