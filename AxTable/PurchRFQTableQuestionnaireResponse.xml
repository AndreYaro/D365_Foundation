<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQTableQuestionnaireResponse</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQTableQuestionnaireResponse extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>PurchRFQTableQuestionnaireResponse</c> table exists.
    /// </summary>
    /// <param name='_recId'>
    /// The record ID of <c>PurchRFQTableQuestionnaireResponse</c> record.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        PurchRFQQuestionnaireResponseRecId  _recId)
    {
        return PurchRFQTableQuestionnaireResponse::find(_recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific record in the <c>PurchRFQTableQuestionnaireResponse</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of <c>PurchRFQTableQuestionnaireResponse</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PurchRFQTableQuestionnaireResponse</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchRFQTableQuestionnaireResponse find(
        PurchRFQQuestionnaireResponseRecId  _recId,
        boolean                             _forUpdate = false)
    {
        PurchRFQTableQuestionnaireResponse  purchRFQTableQuestionnaireResponse;

        if (_recId)
        {
            purchRFQTableQuestionnaireResponse.selectForUpdate(_forUpdate);

            select firstonly purchRFQTableQuestionnaireResponse
                where purchRFQTableQuestionnaireResponse.RecId  == _recId;
        }

        return purchRFQTableQuestionnaireResponse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRFQKMCollection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific record in the <c>PurchRFQTableQuestionnaireResponse</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of <c>PurchRFQTableKMCollection</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PurchRFQTableQuestionnaireResponse</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchRFQTableQuestionnaireResponse findByRFQKMCollection(
        PurchRFQKMCollectionRecId  _recId,
        boolean                    _forUpdate = false)
    {
        PurchRFQTableQuestionnaireResponse  purchRFQTableQuestionnaireResponse;

        if (_recId)
        {
            purchRFQTableQuestionnaireResponse.selectForUpdate(_forUpdate);

            select firstonly purchRFQTableQuestionnaireResponse
                where purchRFQTableQuestionnaireResponse.PurchRFQTableKMCollection == _recId;
        }

        return purchRFQTableQuestionnaireResponse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the questionnaire response in the <c>PurchRFQTableQuestionnaireResponse</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>PurchRFQTableKMCollection</c> record.
    /// </param>
    /// <param name="_kmVirtualNetworkAnswerTableId">
    /// The <c>kmVirtualNetworkAnswerTableId</c> to save.
    /// </param>
    public static void saveResponse(
        PurchRFQKMCollectionRecId      _recId,
        KMVirtualNetworkAnswerTableId  _kmVirtualNetworkAnswerTableId)
    {
        KMVirtualNetworkAnswerTable         kmVirtualNetworkAnswerTable;
        PurchRFQTableQuestionnaireResponse  purchRFQTableQuestionnaireResponse;

        if (_recId && _kmVirtualNetworkAnswerTableId)
        {
            purchRFQTableQuestionnaireResponse = PurchRFQTableQuestionnaireResponse::findByRFQKmCollection(_recId, true);

            ttsBegin;

            if (purchRFQTableQuestionnaireResponse)
            {
                // Delete the previous response from the <c>KmVirtualNetworkAnswerTable</c> table.
                delete_from kmVirtualNetworkAnswerTable
                    where kmVirtualNetworkAnswerTable.kmVirtualNetworkAnswerTableId == purchRFQTableQuestionnaireResponse.KMVirtualNetworkAnswerTableId;

                purchRFQTableQuestionnaireResponse.KMVirtualNetworkAnswerTableId = _kmVirtualNetworkAnswerTableId;
                purchRFQTableQuestionnaireResponse.update();
            }
            else
            {
                purchRFQTableQuestionnaireResponse.PurchRFQTableKMCollection     = _recId;
                purchRFQTableQuestionnaireResponse.KMVirtualNetworkAnswerTableId = _kmVirtualNetworkAnswerTableId;
                purchRFQTableQuestionnaireResponse.insert();
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>KMQuestionnaireBasic</ConfigurationKey>
	<DeveloperDocumentation>@EPR4460177</DeveloperDocumentation>
	<Label>@EPR4460182</Label>
	<TitleField1>KMVirtualNetworkAnswerTableId</TitleField1>
	<TitleField2>PurchRFQTableKMCollection</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>KMVirtualNetworkAnswerTableIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KMVirtualNetworkAnswerTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQTableKMCollection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KMVirtualNetworkAnswerTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQTableKMCollection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KMVirtualNetworkAnswerTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQTableKMCollection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KMVirtualNetworkAnswerTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQTableKMCollection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KMVirtualNetworkAnswerTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KMVirtualNetworkAnswerTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQTableKMCollection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQKMCollectionRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KMVirtualNetworkAnswerTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>KMVirtualNetworkAnswerTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchRFQTableKMCollection</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KMVirtualNetworkAnswerTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>KMVirtualNetworkAnswerTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KMVirtualNetworkAnswerTableId</Name>
					<SourceEDT>KMVirtualNetworkAnswerTableId</SourceEDT>
					<Field>KMVirtualNetworkAnswerTableId</Field>
					<RelatedField>kmVirtualNetworkAnswerTableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ExecutedByIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQTableKMCollection</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchRFQTableKMCollection</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQTableKMCollection</Name>
					<Field>PurchRFQTableKMCollection</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>