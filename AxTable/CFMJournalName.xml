<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMJournalName</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CFMJournalName extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CFMJournalName, JournalType):
                this.IncludeOverduePayment = NoYes::No;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>copySetupData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy setup data form source to target
    /// </summary>
    /// <param name = "_source"></param>
    /// <param name = "_target"></param>
    public static void copySetupData(Common _source, Common _target)
    {
        void copyRecords(CFMRefRecIdMap _recordMap)
        {
            while select _recordMap
                where _recordMap.SourceType == CFMJournalName::tableIdToSourceType(_source.TableId)
                   && _recordMap.SourceRecId == _source.RecId
            {
                _recordMap.SourceType  = CFMJournalName::tableIdToSourceType(_target.TableId);
                _recordMap.SourceRecId = _target.RecId;
                _recordMap.insert();
            }
        }

        Debug::assert(_target.RecId);
        Debug::assert(_source.RecId);

        ttsBegin;

        if (_source && _target)
        {
            CFMJournalAggregationField aggregationField;
            CFMJournalPaymAccountList paymAccounts;
            CFMJournalSourceList sources;
            CFMJournalOrgUnitList orgUnits;
            CFMCashBalanceControlTable cashBalanceControl;

            copyRecords(aggregationField);
            copyRecords(paymAccounts);
            copyRecords(sources);
            copyRecords(orgUnits);
            copyRecords(cashBalanceControl);
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CFMJournalName find(CFMJournalNameId _journalNameId, boolean _forUpdate = false)
    {
        CFMJournalName cfmJournalName;

        if (_journalNameId)
        {
            cfmJournalName.selectForUpdate(_forUpdate);

            select firstOnly cfmJournalName
                where cfmJournalName.JournalName == _journalNameId;
        }

        return cfmJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(CFMJournalNameId _journalNameId)
    {
        CFMJournalName cfmJournalName;

        if (_journalNameId)
        {
            select firstOnly RecId from cfmJournalName
                where cfmJournalName.JournalName == _journalNameId;
        }

        return cfmJournalName.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableIdToSourceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// source type by tableId
    /// </summary>
    /// <param name = "_tableId"></param>
    /// <returns>Return CFMJournalSetupSourceType from tableId</returns>
    public static CFMJournalSetupSourceType tableIdToSourceType(TableId _tableId)
    {
        CFMJournalSetupSourceType sourceType;

        switch (_tableId)
        {
            case tableNum(CFMJournalTable):
                sourceType = CFMJournalSetupSourceType::JournalTable;
                break;

            case tableNum(CFMJournalName):
                sourceType = CFMJournalSetupSourceType::JournalName;
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return sourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkWorkflowEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that an active <c>CFMJournalName</c> workflow configuration is enabled.
    /// </summary>
    /// <param name="_displayInfoLog">
    ///    A Boolean value that specifies whether to display the Infolog when an invalid state is detected;
    ///    optional.
    /// </param>
    /// <returns>
    ///    true if all of the validations are successful; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method will also validate the configuration information about the
    ///    <c>WorkflowConfigurationTable</c> table.Unless all validations are met the method will not return
    ///    true and the configuration will not be considered to have workflow.
    /// </remarks>
    public boolean checkWorkflowEnabled(boolean _displayInfoLog = false)
    {
        boolean isWorkflowApprovalEnabled = false;

        if (this.WorkflowApproval &&
            this.WorkflowConfiguration)
        {
            WorkflowVersionTable workflowVersionTable = WorkflowVersionTable::findSequenceNumber(this.WorkflowConfiguration);

            if (workflowVersionTable.RecId        != 0 &&
                workflowVersionTable.workflowTable().TemplateName == workFlowTypeStr(CFMJournal) &&
                workflowVersionTable.Enabled)
            {
                isWorkflowApprovalEnabled = true;
            }
            else if (_displayInfoLog)
            {
                info("@SYS112225");
            }
        }

        return isWorkflowApprovalEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkflowConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that an active and enabled configuration exists and uses the correct
    ///    workflow template for the specified journal type.
    /// </summary>
    /// <param name="_workFlowConfiguration">
    ///    A <c>WorkConfiguration</c> value to validate.
    /// </param>
    /// <returns>
    ///    true if all of the validations are successful; otherwise, false.
    /// </returns>
    public static boolean validateWorkflowConfiguration(WorkflowSequenceNumber _workFlowConfiguration)
    {
        boolean ret = true;

        if (_workFlowConfiguration)
        {
            WorkflowTable workflowTable = WorkflowTable::findSequenceNumber(_workFlowConfiguration);

            if (workflowTable.RecId == 0)
            {
                ret = checkFailed(strFmt("@SYS109579", _workFlowConfiguration));
            }
            else if (workflowTable.TemplateName != workFlowTypeStr(CFMJournal))
            {
                ret = checkFailed(strFmt("@SYS109580", _workFlowConfiguration));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (this.WorkflowApproval)
        {
            if (!this.WorkflowConfiguration)
            {
                ret = checkFailed(strFmt("@SYS109578"));
            }

            if (ret)
            {
                ret = CFMJournalName::validateWorkflowConfiguration(this.WorkflowConfiguration);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the default behavior of a lookup.
    /// </summary>
    /// <param name="_ctrl">
    /// An instance of the <c>FormStringControl</c> object.
    /// </param>
    public static void lookupWorkflow(FormStringControl _ctrl)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(WorkflowTable), _ctrl);

        sysTableLookup.addLookupfield(fieldNum(WorkflowTable, SequenceNumber));
        sysTableLookup.addLookupfield(fieldNum(WorkflowTable, Name));
        Query query = new query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(WorkflowTable));
        qbds.addRange(fieldNum(WorkflowTable, TemplateName)).value(workFlowTypeStr(CFMJournal));

        qbds = qbds.addDataSource(tableNum(WorkflowVersionTable));
        qbds.relations(true);
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.addRange(fieldNum(WorkflowVersionTable, Enabled)).value(queryValue(NoYes::Yes));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CFMCashflowManagement</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@CashFlowManagement:JournalNameTableDevDescription</DeveloperDocumentation>
	<FormRef>CFMJournalName</FormRef>
	<Label>@CashFlowManagement:PaymentScheduleJournalNames</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>JournalName</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>JournalNameIdx</ClusteredIndex>
	<Modules>RCashFlowManagement</Modules>
	<PrimaryIndex>JournalNameIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkflowApproval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Blocking</Name>
			<Label>@SYS50247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BlockUserGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentAccount</Name>
			<Label>@CashFlowManagement:PaymentAccounts</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncludeEmptyPaymAcc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS2186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalUseCashDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeOverduePayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Workflow</Name>
			<Label>@SYS103643</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkflowApproval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkflowConfiguration</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserGroupId</Name>
			<ExtendedDataType>JournalBlockUserGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeEmptyPaymAcc</Name>
			<ExtendedDataType>CFMIncludeEmptyPaymAcc</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeOverduePayment</Name>
			<ExtendedDataType>CFMJournalIncludeOverduePayment</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalName</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>CFMJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalType</Name>
			<EnumType>CFMJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalUseCashDisc</Name>
			<ExtendedDataType>CFMJournalUseCashDisc</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowApproval</Name>
			<ConfigurationKey>LedgerBasic</ConfigurationKey>
			<ExtendedDataType>CFMUseWorkFlow</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkflowConfiguration</Name>
			<ExtendedDataType>WorkflowSequenceNumber</ExtendedDataType>
			<HelpText>@CashFlowManagement:UseWorkflowWithJourTypeSelectWorkflowPaymSchedJournalType</HelpText>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalNameMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BlockUserGroupId</MapField>
					<MapFieldTo>BlockUserGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeletePostedLines</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DetailSummary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>JournalName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalType</MapField>
					<MapFieldTo>JournalType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherChange</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherDraw</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherNumberSeq</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherSeqId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>UserGroupInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserGroupId</Name>
					<Field>BlockUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WorkflowTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WorkflowTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkflowConfiguration</Name>
					<Field>WorkflowConfiguration</Field>
					<RelatedField>SequenceNumber</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>WorkflowConfigurationType::Definition</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleAxapta::Bank</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>