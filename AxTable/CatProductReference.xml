<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatProductReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class CatProductReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayDeleteButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the delete button can be displayed for the shopping cart line item.
    /// </summary>
    /// <returns>
    /// true if the delete button can be displayed; otherwise, false.
    /// </returns>
    boolean displayDeleteButton()
    {
        boolean ret = true;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productDescriptionShortened</Name>
				<Source><![CDATA[
    display ItemFreeTxt productDescriptionShortened()
    {
        int maxLength = 100;
        int maxLineLength = 70;
        int endPoint;

        int length = strlen(this.ProductDescription);

        if (length > maxLength)
        {
            // Go back from the end to find the last space
            endPoint = strfind(this.ProductDescription, ' ', maxLength, -maxLength);
            if (endPoint == 0)
            {
                //We found no space in the text we will cut the text.
                return strfmt("%1...",substr(this.ProductDescription, 0, maxLineLength));
            }
            else
            {
                //We found a space and will cut by the space
                return strfmt("%1...",substr(this.ProductDescription, 0, endPoint-1));
            }
        }
        return this.ProductDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productImageURL</Name>
				<Source><![CDATA[
    display URL productImageURL()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>selected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects a shopping cart line event that is handled by the product reference subtype entities.
    /// </summary>
    /// <param name="_isSelected">
    /// The cart line selected.
    /// </param>
    /// <remarks>
    /// This method can be overridden by product reference sub type entities to handle a shopping cart line
    /// selected event.
    /// </remarks>
    public void selected(boolean _isSelected)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCartLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// This will do cart line validation specific to the product reference type.
    /// </summary>
    /// <param name="_catCartLine">
    /// The <c>CatCartLine</c> to validate.
    /// </param>
    /// <param name="_dataAreaId">
    /// The data area identifier.
    /// </param>
    /// <param name="_useCheckFailed">
    /// A Boolean value that specifies whether any validation error will result in a call to the
    /// <c>checkFailed</c> method.
    /// </param>
    /// <returns>
    /// true if the record is valid, otherwise, false.
    /// </returns>
    CatCartLineInvalidityReason validateCartLine(CatCartLine _catCartLine, DataAreaId _dataAreaId,  boolean _useCheckFailed = true)
    {
        CatCartLineInvalidityReason invalidityReason = CatCartLineInvalidityReason::IsValid;

        // Ensure that the procurement category is filled in
        if (! this.ProcurementCategory)
        {
            invalidityReason = CatCartLineInvalidityReason::ProcurementCategoryNotSet;
            if (_useCheckFailed)
            {
                checkFailed("@SYS311720");
            }
        }

        return invalidityReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCartQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the cart line that is specific to the product reference type.
    /// </summary>
    /// <param name="_catCartLine">
    /// The cart line to be validated.
    /// </param>
    /// <param name="_dataAreaId">
    /// The data area identifier.
    /// </param>
    /// <param name="_useCheckFailed">
    /// A Boolean value that indicates whether to call the <c>checkFailed</c> method if a validation error
    /// occurs.
    /// </param>
    /// <returns>
    /// true if the record is validated; otherwise, false.
    /// </returns>
    boolean validateCartQuantity(CatCartLine _catCartLine, DataAreaId _dataAreaId, boolean _useCheckFailed = true)
    {
        boolean ret = true;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            //Use switch to prepare for other field validations
            switch (_fieldIdToCheck)
            {
                case fieldnum(CatProductReference, ProcurementCategory):
                    ret = this.validateProcurementCategory();
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProcurementCategory</Name>
				<Source><![CDATA[
    public boolean validateProcurementCategory()
    {
        if (this.orig().ProcurementCategory != this.ProcurementCategory)
        {
            return checkFailed("@SYS311042");
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>CatProductReference</c> table; if not, an
    ///    error message is displayed.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _refRecId)
    {
        if (_refRecId && CatProductReference::exist(_refRecId))
        {
            return true;
        }

        return checkFailed(strfmt("@SYS94719", _refRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <c>_RefRecId</c> of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_refRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    static boolean exist(RefRecId _refRecId)
    {
        return _refRecId && (select firstonly RecId from catProductReference
                                    where catProductReference.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatProductReference</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatProductReference</c> table; otherwise, an empty record.
    /// </returns>
    static CatProductReference find(RefRecId _refRecId, boolean _forUpdate = false)
    {
        CatProductReference catProductReference;

        if (_refRecId)
        {
            catProductReference.selectForUpdate(_forUpdate);
            select catProductReference where catProductReference.RecId == _refRecId;
        }
        return catProductReference;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS324159</DeveloperDocumentation>
	<Label>@SYS300240</Label>
	<SingularLabel>@SYS300240</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProductName</TitleField1>
	<TitleField2>ProductDescription</TitleField2>
	<Abstract>Yes</Abstract>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS136906</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS80470</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
			<Label>@SYS133866</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductNameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResCategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProcurementCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProcurementCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategory_CatProductReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>