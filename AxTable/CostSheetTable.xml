<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostSheetTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostSheetTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultCostSheetTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the default costing sheet.
    /// </summary>
    /// <returns>
    /// A record in the <c>CostSheetTable</c> table.
    /// </returns>
    public static CostSheetTable defaultCostSheetTable()
    {
        return CostSheetTable::findOrCreate(CostSheetTable::newSheetId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CostSheetTable find(
        CostSheetId _sheetId,
        boolean      _forUpdate = false
        )
    {
        CostSheetTable costSheetTable;

        if (_sheetId)
        {
            costSheetTable.selectForUpdate(_forUpdate);

            select firstonly costSheetTable
                where costSheetTable.SheetId == _sheetId;
        }
        return costSheetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    public static CostSheetTable findOrCreate(CostSheetId _sheetId)
    {
        CostSheetTable costSheetTable;

        costSheetTable = CostSheetTable::find(_sheetId);

        if (costSheetTable)
        {
            return costSheetTable;
        }

        ttsbegin;
        costSheetTable.clear();
        costSheetTable.SheetId = _sheetId;
        costSheetTable.insert();
        ttscommit;

        return costSheetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCostType</Name>
				<Source><![CDATA[
    static boolean hasCostType(CostPriceType _costType)
    {
        CostSheetNodeTable costSheetNodeTable;

        if (_costType == CostPriceType::Undefined)
            throw error(Error::wrongUseOfFunction(funcName()));

        select firstonly RecId from costSheetNodeTable
            where costSheetNodeTable.SheetId == CostSheetTable::defaultCostSheetTable().SheetId
               && costSheetNodeTable.PriceType == _costType;

        return costSheetNodeTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSheetId</Name>
				<Source><![CDATA[
    // When implementing costing sheet versions, the method should be rewritten
    public static CostSheetId newSheetId()
    {
        return 'Default';
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes default values.
    /// </summary>
    public void initValue()
    {
        super();

        this.SheetId = CostSheetTable::newSheetId();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOM</ConfigurationKey>
	<DeveloperDocumentation>@SYS123805</DeveloperDocumentation>
	<Label>@SYS104676</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>SheetId</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>SheetIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<OccEnabled>No</OccEnabled>
	<PrimaryIndex>SheetIdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CostSheetCache</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CostSheetCache</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CostSheetCostGroupImpact</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CostSheetCostGroupImpact</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CostSheetNodeTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CostSheetNodeTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SheetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SheetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SheetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SheetId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostSheetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionLoginDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SheetIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SheetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>