<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalPostControlUser</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerJournalPostControlUser extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>LedgerJournalPostControlUser</c> table exists and
    ///    displays an error if it does not exist.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userId">
    ///    The user ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(LedgerJournalNameId _ledgerJournalName, LedgerJournalPostControlUserId _userId)
    {
        boolean ret = true;

        if (!LedgerJournalPostControlUser::exist(_ledgerJournalName, _userId))
        {
            ret = checkFailed(strfmt(LedgerJournalPostControlUser::txtNotExist(), _ledgerJournalName, _userId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>LedgerJournalPostControlUser</c> table exists.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userId">
    ///    The user ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(LedgerJournalNameId _ledgerJournalName, LedgerJournalPostControlUserId _userId)
    {
        boolean found;

        found = (select firstonly
                    RecId
                from
                    ledgerJournalPostControlUser
                where
                    ledgerJournalPostControlUser.LedgerJournalName == _ledgerJournalName &&
                    ledgerJournalPostControlUser.UserId == _userId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LedgerJournalPostControlUser</c> table.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userId">
    ///    The user ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LedgerJournalPostControlUser</c> table; otherwise, an empty record.
    /// </returns>
    public static LedgerJournalPostControlUser find(
        LedgerJournalNameId _ledgerJournalName,
        LedgerJournalPostControlUserId _userId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerJournalPostControlUser ledgerJournalPostControlUser;

        ledgerJournalPostControlUser.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerJournalPostControlUser.concurrencyModel(_concurrencyModel);
        }

        if (_ledgerJournalName != '' && _userId != '')
        {
            select firstonly
                ledgerJournalPostControlUser
            where
                ledgerJournalPostControlUser.LedgerJournalName == _ledgerJournalName &&
                ledgerJournalPostControlUser.UserId == _userId;
        }

        return ledgerJournalPostControlUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>LedgerJournalPostControlUser</c> table
    ///    does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS114083";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126154</DeveloperDocumentation>
	<FormRef>LedgerJournalPostControl</FormRef>
	<Label>@SYS113958</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LedgerJournalName</TitleField1>
	<TitleField2>UserId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>LedgerJournalNameUserIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>AccountingFoundation</Modules>
	<PrimaryIndex>LedgerJournalNameUserIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journal</Name>
			<Label>@SYS24010</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>User</Name>
			<Label>@SYS16181</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnabledByUserGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnabledByUserGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114071</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerJournalName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LedgerJournalPostControlUserId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerJournalNameUserIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerJournalName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UserId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126155</EntityRelationshipRole>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalName</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>LedgerJournalPostControlUser</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalName</Name>
					<SourceEDT>LedgerJournalNameId</SourceEDT>
					<Field>LedgerJournalName</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserId</Name>
					<SourceEDT>LedgerJournalPostControlUserId</SourceEDT>
					<Field>UserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>