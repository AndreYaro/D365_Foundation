<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustPaymEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRCustPaymEvent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayAuthStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the status of the authorization.
    /// </summary>
    /// <returns>
    /// The <c>CreditCardProcessorStatus</c>
    /// </returns>
    public display CreditCardProcessorStatus displayAuthStatus()
    {
        return this.AuthStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySettleStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the status of the settlement.
    /// </summary>
    /// <returns>
    /// The <c>CreditCardProcessorStatus</c>
    /// </returns>
    public display CreditCardProcessorStatus displaySettleStatus()
    {
        return this.SettlementStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Logs events in the syslog based on PA-DSS requirements, and also logs the events
    ///     into the <c>MCRCustPaymEvent</c> table.
    /// </summary>
    /// <remarks>
    ///     The checkbox condition is to log only Credit Card Data Viewed.
    /// </remarks>
    public void insert()
    {
        System.Diagnostics.EventLog     eventLog;
        InteropPermission               interopPermission;
        str                             eventLogged;

        MCROrderParameters              mcrOrderParameters;

        mcrOrderParameters = MCROrderParameters::find();

        interopPermission = new InteropPermission(InteropKind::ClrInterop);
        interopPermission.assert();

        eventLog = new System.Diagnostics.EventLog("@MCR39930");
        eventLog.set_Source("@MCR39931");

        super();
        // log only if credit card and based on event type of card data viewed
        if (mcrOrderParameters.MCRPADSSLogging == NoYes::Yes)
        {
            if (this.CustPaymType == MCRCustPaymType::CreditCard && this.EventType == MCRPaymentEventType::CardDataViewed)
            {
                eventLogged = "@MCR37600" + "-" + enum2str(this.EventType) + "\n" +
                                "@SYS16181" + "-"+ this.ModifiedBy + "\n"+
                                "@MCR39932" + "-"+ tableId2name(this.RefTableID) + "\n" +
                                "@MCR39933" + "-"+ int642str(this.RefRecID);
                eventLog.WriteEntry(eventLogged, System.Diagnostics.EventLogEntryType::Information, enum2int(this.EventType));
            }
        }
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatPaymentReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Formats the payment reference field for information when a payment is deleted.
    /// </summary>
    /// <param name="_mcrCustPaymTable">
    ///     The <c>MCRCustPaymTable</c> for which this method formats the payment reference.
    /// </param>
    /// <returns>
    ///     The <c>paymReference</c> based on the passed <c>MCRCustPaymTable</c> customer payment type.
    /// </returns>
    public static PaymReference formatPaymentReference(MCRCustPaymTable _mcrCustPaymTable)
    {
        PaymReference returnReference;

        switch (_mcrCustPaymTable.CustPaymType)
        {
            case MCRCustPaymType::Check:
                returnReference = _mcrCustPaymTable.CheckNumber;
                break;
            case MCRCustPaymType::CreditCard:
                returnReference = _mcrCustPaymTable.getCCNumMasked();
                break;
            case MCRCustPaymType::GiftCard:
                returnReference = _mcrCustPaymTable.getGiftCardNumberMasked();
                break;
            default:
                returnReference = '';
                break;
        }
        return returnReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAuthChangeEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the record when a payment authorization change has occurred.
    /// </summary>
    /// <param name="_creditCardAuthTransBefore">
    ///     The <c>CreditCardAuthTrans</c> record with values before the insert.
    /// </param>
    /// <param name="_creditCardAuthTrans">
    ///     The current <c>CreditCardAuthTrans</c> record.
    /// </param>
    /// <param name="_mcrCustPaymTable">
    ///     The <c>MCRCustPaymTable</c> record used to check and pass along.
    /// </param>
    public static void insertAuthChangeEvent(
                CreditCardAuthTrans _creditCardAuthTransBefore,
                CreditCardAuthTrans _creditCardAuthTrans,
                MCRCustPaymTable _mcrCustPaymTable = null)
    {
        MCRPaymentEventType     eventType;
        MCRCustPaymTable        mcrCustPaymTable = _mcrCustPaymTable;

        // Checks the type of event to generate.
        if (_creditCardAuthTrans.ProcessorStatus != _creditCardAuthTransBefore.ProcessorStatus)
        {
            switch (_creditCardAuthTrans.ProcessorStatus)
            {
                case CreditCardProcessorStatus::Approved:
                    eventType = MCRPaymentEventType::Authorized;
                    break;
                case CreditCardProcessorStatus::Declined:
                    eventType = MCRPaymentEventType::Declined;
                    break;
                default:
                    eventType = MCRPaymentEventType::StatusChange;
                    break;
            }
        }
        else if (_creditCardAuthTrans.ApprovalAmountCur != _creditCardAuthTransBefore.ApprovalAmountCur)
        {
            eventType = MCRPaymentEventType::AmountChange;
        }
        else
        {
            eventType = MCRPaymentEventType::AuthChange;
        }
        // Get the payment record if not passed.
        if (!mcrCustPaymTable.RecId)
        {
            mcrCustPaymTable = MCRCustPaymTable::findByRecID(_creditCardAuthTrans.MCRPaymRecID);
        }
        // Write the event.
        MCRCustPaymEvent::insertPaymEvent(eventType, mcrCustPaymTable, _creditCardAuthTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertMCRFraudDataPaymEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the record when a payment change has occurred.
    /// </summary>
    /// <param name="_paymentEventType">
    ///     The <c>MCRPaymentEventType</c> to be applied to the <c>MCRCustPaymEvent</c> record.
    /// </param>
    /// <param name="_mcrFraudData">
    ///     The <c>McrFraudData</c> to be applied to the <c>MCRCustPaymEvent</c> record.
    /// </param>
    public static void insertMCRFraudDataPaymEvent(
            MCRPaymentEventType _paymentEventType, MCRFraudData        _mcrFraudData)
    {
        MCRCustPaymEvent mcrCustPaymEvent;

        // Format the key related fields.
        mcrCustPaymEvent.clear();
        mcrCustPaymEvent.RefTableID = _mcrFraudData.TableId;
        mcrCustPaymEvent.RefRecID = _mcrFraudData.RecId;
        mcrCustPaymEvent.EventType = _paymentEventType;
        // Write the record.
        if (mcrCustPaymEvent.validateWrite())
        {
            mcrCustPaymEvent.insert();
        }
        else
        {
            throw error("@SYS104318");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPaymEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the record when a payment change has occurred.
    /// </summary>
    /// <param name="_paymentEventType">
    ///     The <c>MCRPaymentEventType</c> record being inserted into the <c>MCRCustPaymEvent</c> record.
    /// </param>
    /// <param name="_mcrCustPaymTable">
    ///     The <c>MCRCustPaymTable</c> record being inserted into the <c>MCRCustPaymEvent</c> record.
    /// </param>
    /// <param name="_creditCardAuthTrans">
    ///     The <c>CreditCardAuthTrans</c> record being inserted into the <c>MCRCustPaymEvent</c> record; optional.
    /// </param>
    public static void insertPaymEvent(
            MCRPaymentEventType     _paymentEventType,
            MCRCustPaymTable        _mcrCustPaymTable,
            CreditCardAuthTrans     _creditCardAuthTrans= null)
    {
        MCRCustPaymEvent mcrCustPaymEvent;
        // Format the key related fields.
        mcrCustPaymEvent.clear();
        mcrCustPaymEvent.RefTableID = _mcrCustPaymTable.TableId;
        mcrCustPaymEvent.RefRecID = _mcrCustPaymTable.RecId;
        mcrCustPaymEvent.EventType = _paymentEventType;

        // Format the payment fields
        mcrCustPaymEvent.PaymAmount = _mcrCustPaymTable.Amount;
        mcrCustPaymEvent.CustPaymType = _mcrCustPaymTable.CustPaymType;
        mcrCustPaymEvent.CustPaymStatus = _mcrCustPaymTable.Status;
        mcrCustPaymEvent.DetailedStatus = MCRPaymDetailedStatus::getDetailedStatus(_mcrCustPaymTable);
        mcrCustPaymEvent.PaymReference = '';

        // If an auth record passed, format the associated fields.
        if (_creditCardAuthTrans)
        {
            mcrCustPaymEvent.AuthAmount = _creditCardAuthTrans.ApprovalAmountCur;
            mcrCustPaymEvent.AuthCode = _creditCardAuthTrans.Authorization;
            mcrCustPaymEvent.AuthRecID = _creditCardAuthTrans.RecId;
            mcrCustPaymEvent.AuthStatus = _creditCardAuthTrans.ProcessorStatus;
            mcrCustPaymEvent.AuthDateTime = _creditCardAuthTrans.ApprovedDateTime;
        }
        // Write the record.
        if (mcrCustPaymEvent.validateWrite())
        {
            mcrCustPaymEvent.insert();
        }
        else
        {
            throw error("@SYS104318");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPaymEventDelete</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the record when a payment has been deleted.
    /// </summary>
    /// <param name="_mcrCustPaymTable">
    ///     The <c>MCRCustPaymTable</c> used to populated fields on the newly created <c>MCRCustPaymEvent</c> record.
    /// </param>
    public static void insertPaymEventDelete(MCRCustPaymTable _mcrCustPaymTable)
    {
        MCRCustPaymEvent mcrCustPaymEvent, mcrCustPaymEventUpd;

        // When payment record is being deleted, point at parent (SalesTable, ect.)
        mcrCustPaymEvent.clear();
        mcrCustPaymEvent.RefTableID = _mcrCustPaymTable.RefTableId;
        mcrCustPaymEvent.RefRecID = _mcrCustPaymTable.RefRecId;
        mcrCustPaymEvent.EventType = MCRPaymentEventType::Deleted;

        // Format the payment fields
        mcrCustPaymEvent.PaymAmount = _mcrCustPaymTable.Amount;
        mcrCustPaymEvent.CustPaymType = _mcrCustPaymTable.CustPaymType;
        mcrCustPaymEvent.CustPaymStatus = _mcrCustPaymTable.Status;
        mcrCustPaymEvent.DetailedStatus = MCRPaymDetailedStatus::getDetailedStatus(_mcrCustPaymTable);

        // Format payment reference field.
        mcrCustPaymEvent.PaymReference = MCRCustPaymEvent::formatPaymentReference(_mcrCustPaymTable);
        // Do not set the auth and settlement fields.
        ttsBegin;
        // Write the record.
        if (mcrCustPaymEvent.validateWrite())
        {
            mcrCustPaymEvent.insert();
        }
        else
        {
            throw error("@SYS104318");
        }
        // Move the other event records for this payment to the parent.
        update_recordset mcrCustPaymEventUpd
        setting RefRecID = _mcrCustPaymTable.RefRecId, RefTableID = _mcrCustPaymTable.RefTableId
        where mcrCustPaymEventUpd.RefRecID == _mcrCustPaymTable.RecId && mcrCustPaymEventUpd.RefTableID == _mcrCustPaymTable.TableId;
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertSettleChangeEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the record when a payment settlement change has occurred.
    /// </summary>
    /// <param name="_mcrCustPaymTable">
    ///     The <c>MCRCustPaymTable</c> record to be passed to insert; optional.
    /// </param>
    /// <param name="_creditCardAuthTrans">
    ///     The <c>CreditCardAuthTrans</c> record to be passed to insert; optional.
    /// </param>
    public static void insertSettleChangeEvent(
            MCRCustPaymTable        _mcrCustPaymTable = null,
            CreditCardAuthTrans     _creditCardAuthTrans = null)
    {
        MCRPaymentEventType     eventType;
        CreditCardAuthTrans     creditCardAuthTrans = _creditCardAuthTrans;
        MCRCustPaymTable        mcrCustPaymTable = _mcrCustPaymTable;

        // Check to see the type of event to generate.

        switch (_creditCardAuthTrans.ProcessorStatus)
        {
            case CreditCardProcessorStatus::Settled:
                eventType = MCRPaymentEventType::Settled;
                break;
            default:
                eventType = MCRPaymentEventType::SettleChange;
                break;
        }
        MCRCustPaymEvent::insertPaymEvent(eventType, mcrCustPaymTable, creditCardAuthTrans);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRPayment</ConfigurationKey>
	<DeveloperDocumentation>@MCR30332</DeveloperDocumentation>
	<Label>@MCR30332</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>SalesID</TitleField1>
	<TitleField2>InvoiceID</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RefRecIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>Payments</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EventType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Authorize</Name>
			<Label>@MCR26483</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Event</Name>
			<Label>@SYS76605</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EventType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymReference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relations</Name>
			<Label>@SYS80613</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Settle</Name>
			<Label>@SYS114666</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SettlementStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettlementAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettlementDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DetailedStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AuthAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@MCR30339</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuthCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreditCardAuthorization</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>AuthDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ApprovedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AuthRecID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AuthStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR30338</Label>
			<EnumType>CreditCardProcessorStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustPaymStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS22176</Label>
			<EnumType>MCRCustPaymStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustPaymType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRCustPaymType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DetailedStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRCustPaymDetailedStatus</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EventType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPaymentEventType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PaymAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS1943</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymReference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymReference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>MCRRelatedTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesIdBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettlementAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@MCR30167</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SettlementDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SettlementStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS21685</Label>
			<EnumType>CreditCardProcessorStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CreditCardAuthTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CreditCardAuthTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AuthRecID</Name>
					<Field>AuthRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceID</Name>
					<SourceEDT>CustInvoiceId</SourceEDT>
					<Field>InvoiceID</Field>
					<RelatedField>InvoiceId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecID</Name>
					<Field>RefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableID</Name>
					<Field>RefTableID</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LJTRecIdAndTableId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRCustPaymEvent</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecID</Name>
					<Field>RefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableID</Name>
					<Field>RefTableID</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalTableJournalNum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LJTJournalNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRCustPaymEvent</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<SourceEDT>LedgerJournalId</SourceEDT>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRCustPaymTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>MCRCustPaymTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecID</Name>
					<Field>RefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableID</Name>
					<Field>RefTableID</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRFraudData</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>MCRFraudData</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableID</Name>
					<Field>RefTableID</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecID</Name>
					<Field>RefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTableRecIdAndTableId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRCustPaymEvent</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecID</Name>
					<Field>RefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableID</Name>
					<Field>RefTableID</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTableOrig</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTableSalesId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRCustPaymEvent</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesID</Name>
					<SourceEDT>SalesIdBase</SourceEDT>
					<Field>SalesID</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>