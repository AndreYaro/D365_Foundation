<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsBookAmount</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsBookAmount extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accumulatedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows the total for the manual amount writing off method.
    /// </summary>
    /// <returns>
    /// The total writing amount.
    /// </returns>
    display RDeferralsAmount accumulatedAmount()
    {
        return (select sum(Amount) from rDeferralsBookAmount
                        where rDeferralsBookAmount.DeferralsBookId == this.DeferralsBookId &&
                              rDeferralsBookAmount.DeferralsId     == this.DeferralsId     &&
                              rDeferralsBookAmount.Interval        <= this.Interval).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        if (!this.Interval)
            this.Interval = RDeferralsBookAmount::nextInterval(this.DeferralsId, this.DeferralsBookId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        RDeferralsTrans         deferralsTrans;
        RDeferralsBook          deferralsBook;
        RDeferralsProfile       deferralsProfile;
        RDeferralsTableInterval interval;

        boolean             ret;
        RDeferralsLifeTime  currentInterval;

        ret = super();

        deferralsBook = RDeferralsBook::find(this.DeferralsId, this.DeferralsBookId);
        deferralsProfile = RDeferralsProfile::find(deferralsBook.DeferralsProfile);

        if (deferralsProfile.DeferralsMethod == RDeferralsMethod::Manual && deferralsProfile.ManualCalcType == RDeferralsManualCalcType::Amount)
        {
            select firstonly deferralsTrans
                order by TransDate desc
                where deferralsTrans.DeferralsBookId == this.DeferralsBookId            &&
                      deferralsTrans.DeferralsId     == this.DeferralsId                &&
                      deferralsTrans.TransType       == RDeferralsTransType::WritingOff &&
                     !deferralsTrans.StornoRecId;

            if (deferralsTrans)
            {
                interval = new RDeferralsTableInterval_Month(deferralsProfile,
                                                             deferralsBook.StartDeferralsDate,
                                                             deferralsBook.EndDeferralsDate);

                currentInterval = interval.interval(deferralsBook.StartDeferralsDate, dateEndMth(deferralsTrans.TransDate) + 1);
                currentInterval = (currentInterval div interval.periodMultiplier()) +
                                  ((currentInterval mod interval.periodMultiplier() ? 1 : 0));
                if (currentInterval >= this.Interval)
                    ret = checkFailed("@GLS115959");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first <c>RDeferralsBookAmount</c> record that matches the search criteria.
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <param name="_deferralsInterval">
    /// The specified interval number.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to update.
    /// </param>
    /// <returns>
    /// A record in the <c>RDeferralsBookAmount</c> table.
    /// </returns>
    public static RDeferralsBookAmount find(RDeferralsId             _deferralsId,
                                                   RDeferralsBookId         _deferralsBookId,
                                                   RDeferralsIntervalNumber _deferralsInterval = 1,
                                                   boolean                  _forUpdate         = false)
    {
        RDeferralsBookAmount deferralsBookAmount;

        if (_deferralsId && _deferralsBookId)
        {
            deferralsBookAmount.selectForUpdate(_forUpdate);

            select firstonly deferralsBookAmount
                where deferralsBookAmount.DeferralsId       == _deferralsId     &&
                      deferralsBookAmount.DeferralsBookId   == _deferralsBookId &&
                      deferralsBookAmount.Interval          == _deferralsInterval;
        }
        return deferralsBookAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the next interval number
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <returns>
    /// The next interval number.
    /// </returns>
    public static RDeferralsInterval nextInterval(RDeferralsId _deferralsId, RDeferralsBookId _deferralsBookId)
    {
        RDeferralsBookAmount    deferralsBookAmount;

        select maxof(Interval) from deferralsBookAmount
            where deferralsBookAmount.DeferralsBookId == _deferralsBookId &&
                  deferralsBookAmount.DeferralsId     == _deferralsId;

        return deferralsBookAmount.Interval + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWritingOffAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total amount for the manual amount writing off method.
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <returns>
    /// The total writing amount.
    /// </returns>
    static public RDeferralsAmount totalWritingOffAmount(RDeferralsId _deferralsId, RDeferralsBookId _deferralsBookId)
    {
        return (select sum(Amount) from rDeferralsBookAmount
                    where rDeferralsBookAmount.DeferralsBookId == _deferralsBookId &&
                          rDeferralsBookAmount.DeferralsId     == _deferralsId).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTotalAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and compares total writing off amount with deferrals amount.
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <returns>
    /// true if the total amount more than the amount of the deferrals; otherwise, false.
    /// </returns>
    static boolean validateTotalAmount(RDeferralsId _deferralsId, RDeferralsBookId _deferralsBookId)
    {
        RDeferralsAmount    totalAmount;
        boolean             ret = true;

        totalAmount = RDeferralsBookAmount::totalWritingOffAmount(_deferralsId, _deferralsBookId);
        if (totalAmount > RDeferralsBook::find(_deferralsId, _deferralsBookId).DeferralsAmount)
        {
            ret = checkFailed(strFmt("@GLS115963", _deferralsId, _deferralsBookId));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS107203</DeveloperDocumentation>
	<FormRef>RDeferralsBookAmount</FormRef>
	<Label>@GLS107203</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>DeferralsId</TitleField1>
	<TitleField2>Interval</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>DeferralsBookIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>RDeferrals</Modules>
	<PrimaryIndex>DeferralsBookIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS62867</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsAmount</ExtendedDataType>
			<Label>@GLS103724</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferralsBookId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsBookId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferralsId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Interval</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsIntervalNumber</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DeferralsBookIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferralsId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeferralsBookId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Interval</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RDeferralsBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsBook</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RDeferralsBookAmount</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsBookId</Name>
					<Field>DeferralsBookId</Field>
					<RelatedField>DeferralsBookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsId</Name>
					<Field>DeferralsId</Field>
					<RelatedField>DeferralsId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>