<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGETemplates_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGETemplates_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>blocked</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display Locked blocked()
    {
        return LedgerRRGETemplates_W::templateBlocked(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>blockedUserId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display UserId blockedUserId()
    {
        LedgerRRGETemplates_W template = LedgerRRGETemplates_W::findByTemplateId(this.TemplateId);

        if (template.SessionId)
        {
            return new xSession(template.SessionId).userId();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkKNDAndVersion</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean checkKNDAndVersion(LedgerRRGECodeKND_W _codeKND, LedgerRRGEVersionNumber_W _versionNumber)
    {
        boolean                     ret = true;
        LedgerRRGEFormatPeriods_W   format = this.formatPeriods();

        if (format.CodeKND != _codeKND)
        {
            ret = checkFailed(strFmt("@LedgerRRG:LedgerRRG_TemplateInvalidKND", this.TemplateId, format.CodeKND, _codeKND));
        }

        if (format.VersionNumber != _versionNumber)
        {
            ret = checkFailed(strFmt("@LedgerRRG:LedgerRRG_InvalidVersion", this.TemplateId, format.VersionNumber, _versionNumber));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatPeriods</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEFormatPeriods_W formatPeriods(boolean _forupdate = false)
    {
        return LedgerRRGEFormatPeriods_W::find(this.LedgerRRGEFormatPeriods_W, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isXML</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isXML()
    {
        return this.formatPeriods().isXML();
    }

]]></Source>
			</Method>
			<Method>
				<Name>propertyLayoutRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns a record id of the property layout.
    /// </summary>
    /// <returns>
    ///  A record ID of the property layout.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEPropertyLayoutRecId_W propertyLayoutRecId()
    {
        return this.LedgerRRGEPropertyLayouts_W ? this.LedgerRRGEPropertyLayouts_W : this.formatPeriods().LedgerRRGEPropertyLayouts_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.RecId && !this.LedgerRRGEFormatPeriods_W)
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(LedgerRRGETemplates_W, LedgerRRGEFormatPeriods_W)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEmpty</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public boolean checkEmpty(LedgerRRGETemplateRecId_W _templateRecId)
    {
        if (!LedgerRRGETemplates_W::isEmpty(_templateRecId))
        {
            return checkFailed(strFmt("@LedgerRRG:LedgerRRG_TemplateNotEmpty", LedgerRRGETemplates_W::find(_templateRecId).TemplateId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the LedgerRRGETemplates_W table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the LedgerRRGETemplates_W record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RecId _recId)
    {
        return _recId && (select firstonly RecId from ledgerRRGETemplates_W
            where ledgerRRGETemplates_W.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTemplateId</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Returns whether the _templateID exist.
    /// </summary>
    /// <param name="_templateId">
    /// A template ID.
    /// </param>
    /// <returns>
    ///   True, if exist; otherwise - false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existTemplateId(LedgerRRGETemplateId_W _templateId)
    {
       
        return _templateId && (select ledgerRRGETemplates_W index TemplateIdIdx
            where ledgerRRGETemplates_W.TemplateId == _templateId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LedgerRRGETemplates_W</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The RecId of the LedgerRRGETemplates_W record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LedgerRRGETemplates_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGETemplates_W find(
        RecId              _recId,
        boolean            _forupdate = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerRRGETemplates_W ledgerRRGETemplates;

        ledgerRRGETemplates.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerRRGETemplates.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerRRGETemplates
            where ledgerRRGETemplates.RecId == _recId;

        return ledgerRRGETemplates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTemplateId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds a record of the table by template ID.
    /// </summary>
    /// <param name="_templateId">Template ID</param>
    /// <param name="_update">
    /// select for update; optional.
    /// </param>
    /// <returns>
    ///   A record found.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGETemplates_W findByTemplateId(LedgerRRGETemplateId_W _templateId, boolean _update=false)
    {
        LedgerRRGETemplates_W template;

        if (_templateId)
        {
            template.selectForUpdate(_update);

            select firstonly template
                index TemplateIdIdx
                where template.TemplateId == _templateId;
        }

        return template;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEmpty</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public server boolean isEmpty(LedgerRRGETemplateRecId_W _templateRecId)
    {
        if ((select firstonly RecId from ledgerRRGETemplateSections_W   where ledgerRRGETemplateSections_W.LedgerRRGETemplates_W  == _templateRecId).RecId ||
            (select firstonly RecId from ledgerRRGESectionProperties_W  where ledgerRRGESectionProperties_W.LedgerRRGETemplates_W == _templateRecId).RecId ||
            (select firstonly RecId from ledgerRRGETableLayouts_W       where ledgerRRGETableLayouts_W.LedgerRRGETemplates_W      == _templateRecId).RecId)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateBlocked</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns whether the template is blocked.
    /// </summary>
    /// <param name="_templateRecId">
    ///   A <c>RecID</c> of the template.
    /// </param>
    /// <param name="_value">
    ///   A new value.
    /// </param>
    /// <returns>
    ///   A current value.
    /// </returns>
    /// <exception cref="Exception::Error">
    ///   Throws exception in attempt of blocking already blocked template.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static server Blocked templateBlocked(LedgerRRGETemplateRecId_W _templateRecId, Blocked _value = false)
    {
        LedgerRRGETemplates_W   template = LedgerRRGETemplates_W::find(_templateRecId);
        xSession                xSession;

        if (!prmisDefault(_value))
        {
            ttsbegin;

            template = LedgerRRGETemplates_W::find(_templateRecId, true);
            if (_value)
            {
                if (template.SessionId && isSessionActive(template.SessionId, template.SessionLoginDateTime, true))
                {
                    throw error(strFmt("@LedgerRRG:LedgerRRG_TemplateIsUsedBy", template.TemplateId, new xSession(template.SessionId).userId()));
                }

                xSession = new xSession(sessionId());

                template.SessionId              = sessionId();
                template.SessionLoginDateTime   = xSession.loginDateTime();
            }
            else
            {
                template.SessionId              = 0;
                template.SessionLoginDateTime   = utcDateTimeNull();
            }

            template.doUpdate();
            ttscommit;
        }
        else
        {
            if (template.SessionId && !isSessionActive(template.SessionId, template.SessionLoginDateTime, true))
            {
                template.SessionId = 0;
            }
        }

        return template.SessionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateFileNameLookupFilter</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static client FilenameFilter templateFileNameLookupFilter()
    {
        ComOfficeDocument_RU doc = new ComExcelDocument_RU();

        return doc.filenameLookupFilter();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@LedgerRRG:LedgerRRG_DocumentTemplatesTable</DeveloperDocumentation>
	<Label>@LedgerRRG:LedgerRRG_DocumentTemplatesTable</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TemplateId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>TemplateIdIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TemplateIdIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerRRGEDocuments_W</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>LedgerRRGEDocuments_W</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LedgerRRGETemplateSections_W</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerRRGETemplateSections_W</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEPropertyLayouts_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEFormatPeriods_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PropertyLayout</Name>
			<Label>@LedgerRRG:LedgerRRG_RequisiteFormat</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEPropertyLayouts_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RRGReport</Name>
			<Label>@SYS15111</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGReportTable_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS40147</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>blocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>blockedUserId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TemplateFileName</Name>
			<Label>@SYS53423</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileName</Name>
			<ExtendedDataType>LedgerRRGETemplateFileName_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGEFormatPeriods_W</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@LedgerRRG:LedgerRRG_FormatVersion</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGEPropertyLayouts_W</Name>
			<ExtendedDataType>LedgerRRGEPropertyLayoutRecId_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGReportTable_RU</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@LedgerRRG:LedgerRRGReportTable_ReportCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SessionId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LedgerRRGETemplateId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TemplateIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TemplateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGEFormatPeriods_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGEFormatPeriods_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGReportTable_RUIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGReportTable_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGEPropertyLayouts_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGEPropertyLayouts_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEFormatPeriods_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEFormatPeriods_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEFormatPeriods_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerRRGETemplates_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGEFormatPeriods_W</Name>
					<Field>LedgerRRGEFormatPeriods_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEPropertyLayouts_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEPropertyLayouts_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEPropertyLayouts_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerRRGETemplates_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGEPropertyLayouts_W</Name>
					<Field>LedgerRRGEPropertyLayouts_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGReportTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGReportTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGReportTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerRRGETemplates_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGReportTable_RU</Name>
					<Field>LedgerRRGReportTable_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>