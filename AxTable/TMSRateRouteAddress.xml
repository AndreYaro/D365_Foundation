<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSRateRouteAddress</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSRateRouteAddress extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSRateRouteAddress</c> record with given parameters.
    /// </summary>
    /// <param name="_fromContact">
    /// The From Contact value of the record.
    /// </param>
    /// <param name="_fromZip">
    /// The From Postal Code value of the record.
    /// </param>
    /// <param name="_toContact">
    /// The To Contact value of the record.
    /// </param>
    /// <param name="_toZip">
    /// The To Postal Code value of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSRateRouteAddress find(
        TMSCompanyName  _fromContact,
        TMSCompanyName  _toContact,
        TMSPostalCode   _fromZip,
        TMSPostalCode   _toZip,
        boolean         _forupdate = false)
    {
        TMSRateRouteAddress    tmsRateRouteAddress;

        tmsRateRouteAddress.selectForUpdate(_forupdate);

        select firstonly tmsRateRouteAddress
            where tmsRateRouteAddress.FromCompanyName  == _fromContact
                && tmsRateRouteAddress.FromPostalCode   == _fromZip
                && tmsRateRouteAddress.ToCompanyName    == _toContact
                && tmsRateRouteAddress.ToPostalCode     == _toZip;

        return tmsRateRouteAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSRateRouteAddress</c> record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSRateRouteAddress findByRecId(
        RecId   _recId,
        boolean _forupdate = false)
    {
        TMSRateRouteAddress    tmsRateRouteAddress;

        if (_recId)
        {
            tmsRateRouteAddress.selectForUpdate(_forupdate);

            select firstonly tmsRateRouteAddress
                where tmsRateRouteAddress.RecId == _recId;
        }

        return tmsRateRouteAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record based on the specified values.
    /// </summary>
    /// <param name="_fromContact">
    /// The From Contact value to be inserted.
    /// </param>
    /// <param name="_toContact">
    /// The To Contact value to be inserted.
    /// </param>
    /// <param name="_fromZip">
    /// The From Postal Code value to be inserted.
    /// </param>
    /// <param name="_toZip">
    /// The To Postal Code value to be inserted.
    /// </param>
    /// <returns>
    /// A new Rate Route Address record.
    /// </returns>
    public static TMSRateRouteAddress insertFromParameters(
        TMSCompanyName _fromContact,
        TMSCompanyName _toContact,
        TMSPostalCode  _fromZip,
        TMSPostalCode  _toZip)
    {
        TMSRateRouteAddress rateRouteAddress;

        ttsBegin;
        rateRouteAddress.FromCompanyName    = _fromContact;
        rateRouteAddress.FromPostalCode     = _fromZip;
        rateRouteAddress.ToCompanyName      = _ToContact;
        rateRouteAddress.ToPostalCode       = _ToZip;
        rateRouteAddress.insert();
        ttsCommit;

        return rateRouteAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1949</DeveloperDocumentation>
	<Label>@TRX517</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>FromCompanyName</TitleField1>
	<TitleField2>ToCompanyName</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>FromToCompanyNameIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>FromToCompanyNameIdx</PrimaryIndex>
	<ReplacementKey>FromToCompanyNameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPostalCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPostalCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPostalCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPostalCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPostalCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPostalCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromCompanyName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TMSCompanyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromPostalCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPostalCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToCompanyName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TMSCompanyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToPostalCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPostalCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FromToCompanyNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FromCompanyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToCompanyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromPostalCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToPostalCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>