<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxBook</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxBook extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closedTo</Name>
				<Source><![CDATA[
    display TransDate closedTo()
    {
        TaxBookSection   taxBookSection;

        select maxof(ClosedTo) from taxBookSection
           index hint TaxBookIdx
           where taxBookSection.TaxBook == this.RecId;

        return taxBookSection.ClosedTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSalesTaxBookSectionDate</Name>
				<Source><![CDATA[
    display TransDate closeSalesTaxBookSectionDate()
    {
        TaxBookSection   taxBookSection;

        select maxof(CloseSalesTaxBookSectionDate) from taxBookSection
            index hint TaxBookIdx
            where taxBookSection.TaxBook == this.RecId;

        return taxBookSection.CloseSalesTaxBookSectionDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(TaxBook, atecofinCode_IT):
                ret = TaxBook::validateATECOFINCode_IT(this.ATECOFINCode_IT);
                break;

            case fieldnum(TaxBook, PrintEndSections):
                if (this.PrintEndSections)
                {
                    ret = this.validatePrintEndSections() && ret;
                }
                break;

            case fieldnum(TaxBook, TaxBookType):
                ret = this.validateTaxBookTypeChange() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePrintEndSections</Name>
				<Source><![CDATA[
    public boolean validatePrintEndSections()
    {
        boolean ret = true;
        TaxBook taxBook;

        if (this.PrintEndSections)
        {
            select firstonly RecId from taxBook
                where taxBook.TaxPeriod     == this.TaxPeriod
                   && taxBook.TaxBookType   == this.TaxBookType
                   && taxBook.RecId         != this.RecId
                   && taxBook.PrintEndSections;

            if (taxBook.RecId != 0)
            {
                ret = checkFailed("@SYS330962");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTaxBookTypeChange</Name>
				<Source><![CDATA[
    public boolean validateTaxBookTypeChange()
    {
        TaxBookSection  taxBookSection;

        if (this.RecId && this.orig().TaxBookType != this.TaxBookType)
        {
            select firstonly RecId from taxBookSection
                where taxBookSection.TaxBook == this.RecId;

            if (taxBookSection.RecId)
            {
                return checkFailed("@SYS336022");
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.validatePrintEndSections() && ret;

        ret = this.validateTaxBookTypeChange() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TaxBookId _taxBookId )
    {
        boolean ret = true;

        if (!TaxBook::exist(_taxBookId))
        {
            ret = checkFailed(strfmt(TaxBook::txtNotExist(), _taxBookId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeTaxBookSections</Name>
				<Source><![CDATA[
    static void closeTaxBookSections(
        TaxBookId _taxBookId,
        TransDate _closedTo)
    {
        TaxBook          taxBook;
        TaxBookSection   taxBookSection;

        if (_taxBookId && _closedTo)
        {
            taxBook = TaxBook::findByTaxBookId(_taxBookId);
            if (taxBook)
            {
                ttsbegin;
                while select forupdate taxBookSection
                      where taxBookSection.TaxBook == taxBook.RecId
                {
                    taxBookSection.CloseSalesTaxBookSectionDate = _closedTo;
                    taxBookSection.update();
                }
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TaxBookId _taxBookId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxBook
                 where
                     taxBook.TaxBookId == _taxBookId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record from the <c>TaxBook</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record.
    /// </param>
    /// <returns>
    /// A record in the <c>TaxBook</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxBook find(
        RefRecId            _recId,
        boolean             _forupdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxBook taxBook;

        taxBook.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxBook.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxBook
            where taxBook.RecId == _recId;

        return taxBook;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxBookId</Name>
				<Source><![CDATA[
    public static TaxBook findByTaxBookId(
        TaxBookId           _taxBookId,
        boolean             _forupdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxBook taxBook;

        taxBook.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxBook.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxBook
            where taxBook.TaxBookId == _taxBookId;

        return taxBook;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS103285";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateATECOFINCode_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the <parmref name="_code"/> is a valid ATECOFIN code.
    /// </summary>
    /// <param name="_code">
    /// The ATECOFIN code to be validated.
    /// </param>
    /// <returns>
    /// true, if the <parmref name="_code"/> is a valid ATECOFIN code.
    /// </returns>
    public static boolean validateATECOFINCode_IT(ATECOFINCode_IT   _code)
    {
        return isMatch(_code, @'^(\d\d\.\d\d\.\d\d)?$') ?
            true                                        :
            checkFailed("@SYS125619");
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBookLookupReference</Name>
				<Source><![CDATA[
    internal static Common taxBookLookupReference(FormReferenceControl _formReferenceControl, TaxPeriod _taxPeriod = '')
    {
        Query query = new Query();
        QueryBuildDataSource taxBookQbds = query.addDataSource(tableNum(TaxBook));

        if (_taxPeriod)
        {
            taxBookQbds.addRange(fieldNum(TaxBook, TaxPeriod)).value(queryValue(_taxPeriod));
        }

        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(TaxBook), _formReferenceControl);
        sysTableLookup.addLookupfield(fieldNum(TaxBook, TaxBookId));
        sysTableLookup.addLookupfield(fieldNum(TaxBook, Name));
        sysTableLookup.parmQuery(query);

        return sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123542</DeveloperDocumentation>
	<FormRef>TaxBook</FormRef>
	<Label>@SYS107600</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxBookId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TaxBookIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxBookSection</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxBookSection</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxBookStatus</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxBookStatus</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBookType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintManagment</Name>
			<Label>@SYS107597</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintEndSections</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS2186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ATECOFINCode_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeZeroLines_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeReverseTrans_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ATECOFINCode_IT</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ATECOFINCode_IT</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintEndSections</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS107595</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesTaxBookId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBookId</ExtendedDataType>
			<Label>@SYS81278</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxBookId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBookId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxBookType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxBookType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxPeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeZeroLines_IT</Name>
			<ExtendedDataType>IncludeZeroLines_IT</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeReverseTrans_IT</Name>
			<ExtendedDataType>IncludeReverseTrans_IT</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxBookIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxBookId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesTaxBook</Name>
			<Cardinality>OneMore</Cardinality>
			<EntityRelationshipRole>@SYS123543</EntityRelationshipRole>
			<RelatedTable>TaxBook</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxBook_TaxBookId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxBook_SalesTaxBookId</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxBookType_Extern</Name>
					<RelatedField>TaxBookType</RelatedField>
					<ValueStr>TaxBookType::Sales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxBookId</Name>
					<Field>SalesTaxBookId</Field>
					<RelatedField>TaxBookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxBookType</Name>
					<Field>TaxBookType</Field>
					<ValueStr>TaxBookType::Purchase</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxPeriodHead</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxPeriodHead</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxPeriodHead</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxBook</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxPeriod</Name>
					<SourceEDT>TaxPeriod</SourceEDT>
					<Field>TaxPeriod</Field>
					<RelatedField>TaxPeriod</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxPeriodIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>