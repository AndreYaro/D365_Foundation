<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximSetOffRulesTable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximSetOffRulesTable_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayBalanceTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total balance amount.
    /// </summary>
    /// <returns>
    /// The total balance amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST  displayBalanceTotal()
    {
        return EximSetOffRulesTable_IN::balanceTotal(this.EximDEPBSchemesTable, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDutyAvailedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total duty available amount.
    /// </summary>
    /// <returns>
    /// The total duty available amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displayDutyAvailedTotal()
    {
        return EximSetOffRulesTable_IN::dutyAvailedTotal(this.EximDEPBSchemesTable, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDutyEntitlementTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total duty entitlement amount.
    /// </summary>
    /// <returns>
    /// The total duty entitlement amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displayDutyEntitlementTotal()
    {
        return EximSetOffRulesTable_IN::dutyEntitlementTotal(this.EximDEPBSchemesTable, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupBalanceTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total group balance amount.
    /// </summary>
    /// <returns>
    /// The total group balance amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountCur  displayGroupBalanceTotal()
    {
        return EximSetOffRulesTable_IN::groupBalanceTotal(this.IncentiveSchemeDataRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupDutyAvailedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total group duty available amount.
    /// </summary>
    /// <returns>
    /// The total group duty available amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountCur  displayGroupDutyAvailedTotal()
    {
        return EximSetOffRulesTable_IN::groupDutyAvailedTotal(this.IncentiveSchemeDataRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupDutyEntitlementTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total group duty entitlement amount.
    /// </summary>
    /// <returns>
    /// The total group duty entitlement amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountCur  displayGroupDutyEntitlementTotal()
    {
        return EximSetOffRulesTable_IN::groupDutyEntitlementTotal(this.IncentiveSchemeDataRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupSoldTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total group sold amount.
    /// </summary>
    /// <returns>
    /// The total group sold amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountCur  displayGroupSoldTotal()
    {
        return EximSetOffRulesTable_IN::groupSoldTotal(this.IncentiveSchemeDataRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayImportExpirtDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays import expiry date.
    /// </summary>
    /// <returns>
    /// The import expiry date.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display TransDateTime displayImportExpirtDate()
    {
        return DateTimeUtil::applyTimeZoneOffset(EximDEPBSchemesLine_IN::latestExpiryDate(this.EximDEPBSchemesTable), DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayLicenseNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays license number.
    /// </summary>
    /// <returns>
    /// The license number.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display EximLicenseNum_IN  displayLicenseNum()
    {
        return EximDEPBSchemesTable_IN::find(this.EximDEPBSchemesTable).LicenseNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySoldTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays total sold amount.
    /// </summary>
    /// <returns>
    /// The total sold amount.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displaySoldTotal()
    {
        SecurityRights          sr;
        SecurityTableRights     stRights;
        AccessRight             ar;

        sr = SecurityRights::construct();
        stRights = sr.tableFieldAccessRights(tableStr(EximSetOffRulesTable_IN));
        ar = stRights.fieldAccessRight(fieldStr(EximSetOffRulesTable_IN,EximDEPBSchemesTable));

        if (ar != AccessRight::NoAccess )
        {
            return EximSetOffRulesTable_IN::soldTotal(this.EximDEPBSchemesTable, this.RecId);
        }
        else
            return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>balanceTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets total balance.
    /// </summary>
    /// <param name="_depbSchemeRecId">
    /// The depb scheme RecId.
    /// </param>
    /// <param name="_setOffRulesRecId">
    /// The set off rules RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountMST</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST balanceTotal(
        RefRecId                _depbSchemeRecId,
        EximSetOffRulesTableRecId_IN _setOffRulesRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;

        select RecId
            from eximDEPBSchemesTable
                where eximDEPBSchemesTable.RecId                 == _depbSchemeRecId
           join EximProductGroupTable
                from setOffRulesLine
                    where setOffRulesLine.SetOffRulesRecId          == _setOffRulesRecId
                join sum(DutyEntitlement), sum(DutyAvailed), sum(Sold)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId     == eximDEPBSchemesTable.RecId
                           && eximDEPBDetails.EximProductGroupTable == setOffRulesLine.EximProductGroupTable;

        return eximDEPBDetails.DutyEntitlement - (eximDEPBDetails.DutyAvailed + eximDEPBDetails.Sold);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canMoveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the table can move down.
    /// </summary>
    /// <param name="_eximSetOffRuleTable">
    /// The exim set off rule table.
    /// </param>
    /// <returns>
    /// If 'True', the table can be moved down.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canMoveDown(EximSetOffRulesTable_IN _eximSetOffRuleTable)
    {
        return _eximSetOffRuleTable
                && (select firstonly RecId from eximSetOffRulesTable_IN
                       where eximSetOffRulesTable_IN.IncentiveSchemeDataRecId == _eximSetOffRuleTable.IncentiveSchemeDataRecId
                           && eximSetOffRulesTable_IN.Column > _eximSetOffRuleTable.Column).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canMoveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the table can move up.
    /// </summary>
    /// <param name="_eximSetOffRuleTable">
    /// The exim set off rule table.
    /// </param>
    /// <returns>
    /// If 'True', the table can be moved up.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canMoveUp(EximSetOffRulesTable_IN _eximSetOffRuleTable)
    {
        return _eximSetOffRuleTable
                && (select firstonly RecId from eximSetOffRulesTable_IN
                       where eximSetOffRulesTable_IN.IncentiveSchemeDataRecId == _eximSetOffRuleTable.IncentiveSchemeDataRecId
                           && eximSetOffRulesTable_IN.Column < _eximSetOffRuleTable.Column).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUtilizedDEPBLicense</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks utilized DEPB license.
    /// </summary>
    /// <param name="_incentiveSchemeGrp">
    /// The incentive scheme group.
    /// </param>
    /// <returns>
    /// If 'True', the utilized DEPB license is active.
    /// </returns>
    public static boolean checkUtilizedDEPBLicense(RefRecId _incentiveSchemeGrp)
    {
        EximSetOffRulesTable_IN setOffRulesTable;
        EximIncentiveSchemeData_IN incentiveSchemeData;

        if (_incentiveSchemeGrp)
        {
            select firstonly EximIncentiveSchemeGroup, IncentiveScheme, RecId from incentiveSchemeData
                   where incentiveSchemeData.EximIncentiveSchemeGroup == _incentiveSchemeGrp
                       && incentiveSchemeData.IncentiveScheme         == EximAuthorizationType_IN::EPCG
                join IncentiveSchemeDataRecId, RecId from setOffRulesTable
                    where setOffRulesTable.IncentiveSchemeDataRecId   == incentiveSchemeData.RecId;
        }

        return setOffRulesTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dutyAvailedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets duty availed total.
    /// </summary>
    /// <param name="_depbSchemeRecId">
    /// The depb scheme RecId.
    /// </param>
    /// <param name="_setOffRulesRecId">
    /// The set off rules RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountMST</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST dutyAvailedTotal(
        RefRecId                _depbSchemeRecId,
        EximSetOffRulesTableRecId_IN _setOffRulesRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;

        select RecId
            from eximDEPBSchemesTable
                where eximDEPBSchemesTable.RecId           == _depbSchemeRecId
           join EximProductGroupTable
                from setOffRulesLine
                    where setOffRulesLine.SetOffRulesRecId == _setOffRulesRecId
                join sum(DutyAvailed)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId    == eximDEPBSchemesTable.RecId
                          && eximDEPBDetails.EximProductGroupTable == setOffRulesLine.EximProductGroupTable;

        return eximDEPBDetails.DutyAvailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dutyEntitlementTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets duty entitlement total.
    /// </summary>
    /// <param name="_depbSchemeRecId">
    /// The depb scheme RecId.
    /// </param>
    /// <param name="_setOffRulesRecId">
    /// The set off rules RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountMST</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST dutyEntitlementTotal(
        RefRecId                     _depbSchemeRecId,
        EximSetOffRulesTableRecId_IN _setOffRulesRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;

        select RecId from eximDEPBSchemesTable
                where eximDEPBSchemesTable.RecId                 == _depbSchemeRecId
           join EximProductGroupTable from setOffRulesLine
                    where setOffRulesLine.SetOffRulesRecId          == _setOffRulesRecId
                join sum(DutyEntitlement) from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId     == eximDEPBSchemesTable.RecId
                           && eximDEPBDetails.EximProductGroupTable == setOffRulesLine.EximProductGroupTable;

        return eximDEPBDetails.DutyEntitlement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existDEPBIdOrig</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the DEPB id orig exists.
    /// </summary>
    /// <param name="_eximIncentiveSchemeData">
    /// The exim incentive scheme data.
    /// </param>
    /// <returns>
    /// If 'True', the DEPB id orig exists.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existDEPBIdOrig(EximIncentiveSchemeData_IN _eximIncentiveSchemeData)
    {
        return _eximIncentiveSchemeData
               && (select firstonly RecId from eximSetOffRulesTable_IN
                    where eximSetOffRulesTable_IN.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximSetOffRulesTable_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximSetOffRulesTable_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximSetOffRulesTable_IN find(
        RefRecId            _recId,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        eximSetOffRulesTable.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximSetOffRulesTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximSetOffRulesTable
            where eximSetOffRulesTable.RecId == _recId;

        return eximSetOffRulesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds first column of rules table.
    /// </summary>
    /// <param name="_eximIncentiveSchemeData">
    /// The exim incentive scheme data.
    /// </param>
    /// <param name="_column">
    /// The column.
    /// </param>
    /// <returns>
    /// The instance of the <c>EximSetOffRulesTable_IN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximSetOffRulesTable_IN findFirstColumn(
        EximIncentiveSchemeData_IN _eximIncentiveSchemeData,
        Column                     _column)
    {
        EximSetOffRulesTable_IN eximSetOffRuleUpdate;

        select firstonly eximSetOffRuleUpdate
            order by Column desc
            where eximSetOffRuleUpdate.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleUpdate.Column                   <= _column;

        return eximSetOffRuleUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findMaxColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds max column of the incentive scheme data.
    /// </summary>
    /// <param name="_eximIncentiveSchemeData">
    /// The exim incentive scheme data.
    /// </param>
    /// <returns>
    /// The instance of the <c>Column</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Column findMaxColumn(EximIncentiveSchemeData_IN _eximIncentiveSchemeData)
    {
        EximSetOffRulesTable_IN eximSetOffMaximum;

        select maxof(Column) from eximSetOffMaximum
            where eximSetOffMaximum.IncentiveSchemeDataRecId    == _eximIncentiveSchemeData.RecId;

        return eximSetOffMaximum.Column;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds RecId.
    /// </summary>
    /// <param name="_setOffRulesRecId">
    /// The set off rules RecId.
    /// </param>
    /// <param name="_forUpdate">
    /// The forUpdate flag.
    /// </param>
    /// <returns>
    /// The instance of the <c>EximSetOffRulesTable_IN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximSetOffRulesTable_IN findRecId(
        RefRecId _setOffRulesRecId,
        boolean  _forUpdate = false)
    {
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        if (_setOffRulesRecId)
        {
            if (_forUpdate)
            {
                eximSetOffRulesTable.selectForUpdate(_forUpdate);
            }

            select firstonly eximSetOffRulesTable
                where eximSetOffRulesTable.RecId == _setOffRulesRecId;
        }
        return eximSetOffRulesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBillOfEntryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets bill of entry date.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The bill of entry date.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TransDate getBillOfEntryDate(RefRecId _incentiveSchemeDataRecId)
    {
        EximDEPBDetailsTable_IN   eximDEPBDetails;
        EximSetOffRulesTable_IN   setOffRulesTable;
        EximDEPBDetailsLine_IN    eximDEPBDetailsLine;
        CustomsVendBOETrans_IN    customsVendBOETrans;
        CustomsVendBOESubTrans_IN customsVendBOESubTrans;

        select recId
            from eximDEPBDetails
                exists  join EximDEPBSchemesTable, RecId
                    from setOffRulesTable
                        where setOffRulesTable.EximDEPBSchemesTable      == eximDEPBDetails.SchemesTableRecId
                            && setOffRulesTable.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId;

        select CurrencyCode, BillOfEntryDate from customsVendBOETrans
            exists join recId, BillOfEntryTransRecId from eximDEPBDetailsLine
                where eximDEPBDetailsLine.DetailsTableRecId == eximDEPBDetails.RecId
            exists join recId from customsVendBOESubTrans
                where customsVendBOESubTrans.RecId               == eximDEPBDetailsLine.BillOfEntryTransRecId
                    && customsVendBOESubTrans.BOETransRefRecId   == customsVendBOETrans.RecId;

        return customsVendBOETrans.BillOfEntryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupBalanceTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Group balance total.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountCur</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountCur groupBalanceTotal(RefRecId _incentiveSchemeDataRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesTable_IN  setOffRulesTable;
        AmountMST                totalBalance;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;
        TransDate                billOfEntryDate;

        select sum(DutyEntitlement), sum(DutyAvailed), sum(Sold)
            from eximDEPBDetails
                join SchemeId, RecId
                    from eximDEPBSchemesTable
                        where eximDEPBSchemesTable.RecId                    == eximDEPBDetails.SchemesTableRecId
                    join EximDEPBSchemesTable, RecId
                        from setOffRulesTable
                            where setOffRulesTable.EximDEPBSchemesTable     == eximDEPBSchemesTable.RecId
                               && setOffRulesTable.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId
                        join EximProductGroupTable, SetOffRulesRecId
                            from setOffRulesLine
                               where setOffRulesLine.EximProductGroupTable  == eximDEPBDetails.EximProductGroupTable
                                   && setOffRulesLine.SetOffRulesRecId      == setOffRulesTable.RecId;

        totalBalance = eximDEPBDetails.DutyEntitlement - (eximDEPBDetails.DutyAvailed + eximDEPBDetails.Sold);

        billOfEntryDate = EximSetOffRulesTable_IN::getBillOfEntryDate(_incentiveSchemeDataRecId);

        return CurrencyExchangeHelper::curAmount(totalBalance, infolog.isoCurrencyCode(), billOfEntryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupDutyAvailedTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Group duty availed total.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountCur</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountCur groupDutyAvailedTotal(RefRecId _incentiveSchemeDataRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesTable_IN  setOffRulesTable;
        AmountMST                totalDutyAvailed;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;
        TransDate                billOfEntryDate;

        select sum(DutyAvailed)
            from eximDEPBDetails
                join SchemeId, RecId
                    from eximDEPBSchemesTable
                        where eximDEPBSchemesTable.RecId                    == eximDEPBDetails.SchemesTableRecId
                    join EximDEPBSchemesTable, RecId
                        from setOffRulesTable
                            where setOffRulesTable.EximDEPBSchemesTable     == eximDEPBSchemesTable.RecId
                               && setOffRulesTable.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId
                        join EximProductGroupTable, SetOffRulesRecId
                            from setOffRulesLine
                               where setOffRulesLine.EximProductGroupTable  == eximDEPBDetails.EximProductGroupTable
                                   && setOffRulesLine.SetOffRulesRecId      == setOffRulesTable.RecId;

        totalDutyAvailed = eximDEPBDetails.DutyAvailed;

        billOfEntryDate = EximSetOffRulesTable_IN::getBillOfEntryDate(_incentiveSchemeDataRecId);

        return  CurrencyExchangeHelper::curAmount(totalDutyAvailed, infolog.isoCurrencyCode(), billOfEntryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupDutyEntitlementTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Group duty entitlement total.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountCur</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountCur groupDutyEntitlementTotal(RefRecId _incentiveSchemeDataRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesTable_IN  setOffRulesTable;
        AmountMST                totalDutyEntitlement;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;
        TransDate                billOfEntryDate;

        select sum(DutyEntitlement)
            from eximDEPBDetails
                join SchemeId, RecId
                    from eximDEPBSchemesTable
                        where eximDEPBSchemesTable.RecId                    == eximDEPBDetails.SchemesTableRecId
                    join EximDEPBSchemesTable, RecId
                        from setOffRulesTable
                            where setOffRulesTable.EximDEPBSchemesTable     == eximDEPBSchemesTable.RecId
                               && setOffRulesTable.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId
                        join EximProductGroupTable, SetOffRulesRecId
                            from setOffRulesLine
                                where setOffRulesLine.EximProductGroupTable  == eximDEPBDetails.EximProductGroupTable
                                   && setOffRulesLine.SetOffRulesRecId       == setOffRulesTable.RecId;

        totalDutyEntitlement = eximDEPBDetails.DutyEntitlement;

        billOfEntryDate = EximSetOffRulesTable_IN::getBillOfEntryDate(_incentiveSchemeDataRecId);

        return  CurrencyExchangeHelper::curAmount(totalDutyEntitlement, infolog.isoCurrencyCode(), billOfEntryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupSoldTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Group sold total.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountCur</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountCur groupSoldTotal(RefRecId _incentiveSchemeDataRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesTable_IN  setOffRulesTable;
        AmountMST                totalSold;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;
        TransDate                billOfEntryDate;

        select sum(Sold)
            from eximDEPBDetails
                join SchemeId, RecId
                    from eximDEPBSchemesTable
                        where eximDEPBSchemesTable.RecId                    == eximDEPBDetails.SchemesTableRecId
                    join EximDEPBSchemesTable, RecId
                        from setOffRulesTable
                            where setOffRulesTable.EximDEPBSchemesTable     == eximDEPBSchemesTable.RecId
                               && setOffRulesTable.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId
                       join EximProductGroupTable, SetOffRulesRecId
                            from setOffRulesLine
                                where setOffRulesLine.EximProductGroupTable == eximDEPBDetails.EximProductGroupTable
                                   && setOffRulesLine.SetOffRulesRecId      == setOffRulesTable.RecId;

        totalSold = eximDEPBDetails.Sold;

        billOfEntryDate = EximSetOffRulesTable_IN::getBillOfEntryDate(_incentiveSchemeDataRecId);

        return  CurrencyExchangeHelper::curAmount(totalSold, infolog.isoCurrencyCode(), billOfEntryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxColumnNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets max column number.
    /// </summary>
    /// <param name="_incentiveSchemeDataRecId">
    /// The incentive scheme data RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>Column</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Column maxColumnNumber(EximIncentiveSchemeDataRecId_IN _incentiveSchemeDataRecId)
    {
        EximSetOffRulesTable_IN eximSetOffRule;

        select maxof(Column) from eximSetOffRule
            where eximSetOffRule.IncentiveSchemeDataRecId == _incentiveSchemeDataRecId;

        return (eximSetOffRule.Column ? eximSetOffRule.Column + 1 : 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves down the <c>Column</c> of the <c>EximSetOffRulesTable_IN</c> table record.
    /// </summary>
    /// <param name="_eximDEPBSetOffRules">
    /// The record of <c>EximSetOffRulesTable_IN</c> table.
    /// </param>
    /// <param name="_eximIncentiveSchemeData">
    /// The record of <c>EximIncentiveSchemeData_IN</c> table.
    /// </param>
    /// <returns>
    /// The current record of <c>EximIncentiveSchemeData_IN</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public  static EximSetOffRulesTable_IN moveDown(
        EximSetOffRulesTable_IN    _eximDEPBSetOffRules,
        EximIncentiveSchemeData_IN _eximIncentiveSchemeData)
    {
        EximSetOffRulesTable_IN eximSetOffRuleBufferPrevious;
        EximSetOffRulesTable_IN eximSetOffRuleBufferCurrent;
        Column                      columnBuffer;

        ttsbegin;
        select firstonly forupdate eximSetOffRuleBufferPrevious
            order by Column
            where eximSetOffRuleBufferPrevious.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleBufferPrevious.Column                   >  _eximDEPBSetOffRules.Column;

        select firstonly forupdate eximSetOffRuleBufferCurrent
            where eximSetOffRuleBufferCurrent.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleBufferCurrent.Column                   == _eximDEPBSetOffRules.Column;

        if (eximSetOffRuleBufferPrevious && eximSetOffRuleBufferCurrent)
        {
            columnBuffer = eximSetOffRuleBufferPrevious.Column;
            eximSetOffRuleBufferPrevious.Column = _eximDEPBSetOffRules.Column;

            eximSetOffRuleBufferCurrent.Column = -1;
            eximSetOffRuleBufferCurrent.update();
            eximSetOffRuleBufferPrevious.update();

            eximSetOffRuleBufferCurrent.Column = columnBuffer;
            eximSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return eximSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves up the <c>Column</c> of the <c>EximSetOffRulesTable_IN</c> table record.
    /// </summary>
    /// <param name="_eximDEPBSetOffRules">
    /// The record of <c>EximSetOffRulesTable_IN</c> table.
    /// </param>
    /// <param name="_eximIncentiveSchemeData">
    /// The record of <c>EximIncentiveSchemeData_IN</c> table.
    /// </param>
    /// <returns>
    /// The current record of <c>EximIncentiveSchemeData_IN</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public  static EximSetOffRulesTable_IN moveUp(
        EximSetOffRulesTable_IN    _eximDEPBSetOffRules,
        EximIncentiveSchemeData_IN _eximIncentiveSchemeData)
    {
        EximSetOffRulesTable_IN eximSetOffRuleBufferPrevious;
        EximSetOffRulesTable_IN eximSetOffRuleBufferCurrent;
        Column                      columnBuffer;

        ttsbegin;
        select firstonly forupdate eximSetOffRuleBufferPrevious
            order by Column desc
            where eximSetOffRuleBufferPrevious.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleBufferPrevious.Column                   <  _eximDEPBSetOffRules.Column;

        select firstonly forupdate eximSetOffRuleBufferCurrent
            where eximSetOffRuleBufferCurrent.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleBufferCurrent.Column                   == _eximDEPBSetOffRules.Column;

        if (eximSetOffRuleBufferPrevious && eximSetOffRuleBufferCurrent)
        {
            columnBuffer = eximSetOffRuleBufferPrevious.Column;
            eximSetOffRuleBufferPrevious.Column = _eximDEPBSetOffRules.Column;

            eximSetOffRuleBufferCurrent.Column = -1;
            eximSetOffRuleBufferCurrent.update();
            eximSetOffRuleBufferPrevious.update();

            eximSetOffRuleBufferCurrent.Column = columnBuffer;
            eximSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return eximSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>soldTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sold total.
    /// </summary>
    /// <param name="_depbSchemeRecId">
    /// The depb scheme RecId.
    /// </param>
    /// <param name="_setOffRulesRecId">
    /// The set off rules RecId.
    /// </param>
    /// <returns>
    /// The instance of the <c>AmountMST</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST soldTotal(
        RefRecId                _depbSchemeRecId,
        EximSetOffRulesTableRecId_IN _setOffRulesRecId)
    {
        EximDEPBDetailsTable_IN  eximDEPBDetails;
        EximSetOffRulesLine_IN   setOffRulesLine;
        EximDEPBSchemesTable_IN  eximDEPBSchemesTable;

        select RecId
            from eximDEPBSchemesTable
                where eximDEPBSchemesTable.RecId                     == _depbSchemeRecId
           join EximProductGroupTable
                from setOffRulesLine
                    where setOffRulesLine.SetOffRulesRecId              == _setOffRulesRecId
                join sum(Sold)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId         == eximDEPBSchemesTable.RecId
                           && eximDEPBDetails.EximProductGroupTable     == setOffRulesLine.EximProductGroupTable;

        return eximDEPBDetails.Sold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates column.
    /// </summary>
    /// <param name="_eximIncentiveSchemeData">
    /// The exim incentive scheme data.
    /// </param>
    /// <param name="_column">
    /// The column.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void updateColumn(
        EximIncentiveSchemeData_IN _eximIncentiveSchemeData,
        Column                     _column)
    {
        EximSetOffRulesTable_IN eximSetOffRuleUpdate;

        ttsbegin;
        update_recordset eximSetOffRuleUpdate
            setting Column = eximSetOffRuleUpdate.Column - 1
            where eximSetOffRuleUpdate.IncentiveSchemeDataRecId == _eximIncentiveSchemeData.RecId
               && eximSetOffRuleUpdate.Column                   >  _column;
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62472</DeveloperDocumentation>
	<FormRef>EximSetOffRules_IN</FormRef>
	<Label>@GLS61837</Label>
	<TitleField1>Column</TitleField1>
	<TitleField2>EximDEPBSchemesTable</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>IncentiveSchemeColumnIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximDEPBSchemesTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayLicenseNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayImportExpirtDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncentiveSchemeDataRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rules</Name>
			<Label>@SYS23052</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncentiveSchemeDataRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximDEPBSchemesTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Column</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximSetOffColumn_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EximDEPBSchemesTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS112132</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IncentiveSchemeDataRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximIncentiveSchemeDataRecId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IncentiveSchemeColumnIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IncentiveSchemeDataRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Column</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IncentiveSchemeDataIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EximDEPBSchemesTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IncentiveSchemeDataRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximDEPBSchemesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximDEPBSchemesTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximDEPBSchemesTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximDEPBSchemesTable_IN_EximSetOffRulesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EximDEPBSchemesTable</Name>
					<Field>EximDEPBSchemesTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EximIncentiveSchemeData</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximIncentiveSchemeData_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximIncentiveSchemeData_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximIncentiveSchemeData_IN_EximSetOffRulesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IncentiveSchemeDataRecId</Name>
					<Field>IncentiveSchemeDataRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>