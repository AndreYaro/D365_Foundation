<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxInventVATCommodityCode_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxInventVATCommodityCode_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the specified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// Returns true if the field passes value validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;
        LogisticsAddressState           logisticsAddressState;
        LogisticsAddressCountryRegion   logisticsAddressCountryRegion;

        #ISOCountryRegionCodes

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(TaxInventVATCommodityCode_IN, LogisticsAddressStateId) :

                select firstonly CountryRegionId
                    from logisticsAddressCountryRegion
                    where logisticsAddressCountryRegion.isOcode == #isoIN
                        join logisticsAddressState
                        where logisticsAddressState.CountryRegionId == logisticsAddressCountryRegion.CountryRegionId
                            && logisticsAddressState.StateId        == this.LogisticsAddressStateId;

                if (!logisticsAddressState)
                {
                    ret = checkFailed(strFmt("@SYS112224",this.LogisticsAddressStateId,fieldPName(TaxInventVATCommodityCode_IN,LogisticsAddressStateId),tablePName(LogisticsAddressState)));
                }

                break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCommodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// It returns a record based on CommodityCode
    /// </summary>
    /// <param name="_taxInventVATCommodityCodeId_IN">
    /// TaxInventVATCommodityCodeId_IN code to be searched
    /// </param>
    /// <param name="_forUpdate">
    /// Defines if the selection if for updated or not
    /// </param>
    /// <returns>
    /// It returns a record (or a set) with the same CommodityCode researched.
    /// </returns>
    static TaxInventVATCommodityCode_IN findByCommodityCode(TaxInventVATCommodityCodeId_IN  _taxInventVATCommodityCodeId_IN,
                                                            boolean                   _forUpdate = false)
    {
        TaxInventVATCommodityCode_IN  taxInventVATCommodityCode_IN;
        ;

        if (_taxInventVATCommodityCodeId_IN)
        {
            if (_forUpdate)
            {
                taxInventVATCommodityCode_IN.selectForUpdate (_forUpdate);
            }
            taxInventVATCommodityCode_IN.selectLocked    (_forUpdate);

            select firstonly taxInventVATCommodityCode_IN
                where taxInventVATCommodityCode_IN.CommodityCode == _taxInventVATCommodityCodeId_IN;
        }

        return taxInventVATCommodityCode_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromItemState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record based on item id.
    /// </summary>
    /// <param name="_itemId">
    /// The item id is used to find record.
    /// </param>
    /// <param name="_state">
    /// The state is used to find record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// Returns a record of <c>TaxInventVATCommodityCode_IN</c>.
    /// </returns>
    static TaxInventVATCommodityCode_IN findFromItemState(ItemId                    _itemId,
                                                          LogisticsAddressStateId   _state,
                                                          boolean                   _forUpdate = false)
    {
        TaxInventVATCommodityCode_IN  taxInventVATCommodityCode_IN;
        ;

        if (_itemId && _state)
        {
            if (_forUpdate)
            {
                taxInventVATCommodityCode_IN.selectForUpdate (_forUpdate);
            }
            taxInventVATCommodityCode_IN.selectLocked    (_forUpdate);

            select firstonly taxInventVATCommodityCode_IN
                where taxInventVATCommodityCode_IN.ItemId == _itemId &&
                      taxInventVATCommodityCode_IN.LogisticsAddressStateId == _state;
        }

        return taxInventVATCommodityCode_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// To give reference to open the main table form based on the current object value.
    /// </summary>
    /// <param name="_object">
    /// Object is set
    /// </param>
    public static void jumpRef(Object _object)
    {
        Args    args = new Args();

        args.caller(_object);
        args.parmObject(_object);

        new MenuFunction(menuitemdisplaystr(TaxInventVATCommodityCode_IN), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupVATCommodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customized lookup used to search for the correct CommodityCode information, based on <c>TaxInventVATCommodityCode_IN</c> table.
    /// </summary>
    /// <param name="_formControl">
    /// The Control that the lookup was called from.
    /// </param>
    public static void lookupVATCommodityCode(FormControl _formControl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(TaxInventVATCommodityCode_IN), _formControl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        queryBuildDataSource    = query.addDataSource(tableNum(TaxInventVATCommodityCode_IN));
        queryBuildRange         = queryBuildDataSource.addRange(fieldNum(TaxInventVATCommodityCode_IN, CommodityCode));
        sysTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, CommodityCode));
        sysTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, Description));
        sysTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, ItemId));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63104</DeveloperDocumentation>
	<Label>@GLS63102</Label>
	<TitleField1>CommodityCode</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SalesLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>
      </Relation>
			<Table>SalesLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CommodityCode</Name>
			<Label>@GLS63105</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CommodityCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxInventVATCommodityCodeId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LogisticsAddressStateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CommodityCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemLogisticAddressStateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressState</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsAddressStateId</Name>
					<Field>LogisticsAddressStateId</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>