<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmMailings</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmMailings extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes a record.
    /// </summary>
    /// <remarks>
    ///    If logging is turned on, this method also inserts an entry in the Customer Relations Management (CRM) transaction log.
    /// </remarks>
    public void delete()
    {
        // Create deletion entry in the CRM transaction log
        smmTransLog::initTrans(this, smmLogAction::delete);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactPersonName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Selects a contact person name based on the contact person name instead of the contact person ID.
    /// </summary>
    /// <param name="_set">
    ///    A Boolean value that determines whether the contact person name should be selected for update.
    /// </param>
    /// <param name="_name">
    ///    The new name.
    /// </param>
    /// <returns>
    ///    The <c>ContactPersonName</c> value as a string.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    edit ContactPersonName editContactPersonName(boolean _set, ContactPersonName _name)
    {
        #define.blank('')
        ContactPerson     contactPerson;
        ContactPersonName name = _name;
        DirPerson         person;

        if (_set)
        {
            if (name)
            {
                this.ContactPersonId = ContactPerson::find(_name).ContactPersonId;

                if (this.ContactPersonId)
                {
                    name = ContactPerson::find(this.ContactPersonId).personName();
                }
                else
                {
                    select ContactPersonId from contactPerson
                            where contactPerson.ContactForParty ==   this.Party
                        join Name from person
                            where person.RecId == contactPerson.Party &&
                                  person.Name like name;
                    if (contactPerson)
                    {
                        this.ContactPersonId=contactPerson.ContactPersonId;
                        name=person.Name;
                    }
                }
            }
            else
            {
                this.ContactPersonId = #blank;
            }
        }
        else
        {
            name = this.showContactPerson();
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Get new number from number sequence. Number sequence for mailings may not be manual.
    /// </summary>
    public void initValue()
    {
        super();

        // Get new number from number sequence. Number sequence for mailing may not be manual
        this.KeyId = smmParameters::getNumber(smmNumbSeqUsed::ParmId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record into the mailing table.
    /// </summary>
    /// <param name="_checkLog">
    ///    A Boolean value that determines whether the log should be updated; optional.
    /// </param>
    /// <param name="_employee">
    ///    The employee to be included in the log; optional.
    /// </param>
    /// <param name="_salesUnitId">
    ///    The sales unit to be included in the log; optional.
    /// </param>
    /// <remarks>
    ///    If the Customer Relationship Management (CRM) log is enabled, the CRM transaction log is also updated.
    /// </remarks>
    public void insert(boolean _checkLog = true, CrmWorkerRecId _employee = 0, smmSalesUnitId _salesUnitId = '')
    {
        super();

        // Is CRM log activated
        if (_checkLog)
        {
            // Update CRM transaction log
            smmTransLog::initTrans(this, smmLogAction::insert, _employee, _salesUnitId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showContactPerson</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets contact person's name from the field ContactPersonId.
    /// </summary>
    /// <returns>
    ///    Contact person name.
    /// </returns>
    public display smmContactPersonName showContactPerson()
    {
        // Return the name of the contact person
        return ContactPerson::name(this.ContactPersonId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDirPartyName</Name>
				<Source><![CDATA[
    public display DirPartyName showDirPartyName()
    {
        // Return the name of the Party
        return DirPartyTable::findRec(this.RecId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDocHanIcon</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Show document handling icon. The icon is retrieved using smmUtility class.
    /// </summary>
    /// <returns>
    ///    The icon number.
    /// </returns>
    public display smmDocIconNum showDocHanIcon()
    {
        // Show document handling icon
        return smmUtility::getDocIcon(this.DataAreaId, this.TableId, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRecipient</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Display method to show information for the recipient (name and phone number).
    /// </summary>
    /// <returns>
    ///    Name and phone number
    /// </returns>
    public display smmMailingRecipient showRecipient()
    {
        // Show recipient information (name and phone number)
        return smmUtility::getCompanyContact(this.Party, this.ContactPersonId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showStatusIcon</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Get status icon. Error icon will be displayed if mailing is overdue, and a warning is displayed if mailing is due in less than two days.
    /// </summary>
    /// <returns>
    ///    Icon number. If no icon is to be displayed, 0 is returned.
    /// </returns>
    public display smmMailingIconNum showStatusIcon()
    {
        #define.dueInDaysWarningPeriod(2)

        #macrolib.resource

        // Only mark mailings that are not already sent
        if (this.Status == smmMailingStatus::NotSent)
        {
            // Display error if mailing is overdue
            if (this.MailingDate < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
            {
                return #RES_INFOLOG_ERROR;
            }

            // Display warning if mailing is due in two days
            if (this.MailingDate - #dueInDaysWarningPeriod < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
            {
                return #RES_INFOLOG_WARNING;
            }
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Update record and insert entry into the CRM transaction log.
    /// </summary>
    public void update()
    {
        super();

        // Update CRM transaction log
        smmTransLog::initTrans(this, smmLogAction::update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(smmMailings,CategoryItemId) :
                // Check that item is part of the category group
                if (this.CategoryItemId && !smmMailingGroup::find(this.CategoryId, this.CategoryItemId))
                {
                    // Category item is not specified correctly. Select an item that corresponds to the selected category
                    ret = checkFailed("@SYS80592") && ret;
                }

                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Find a mailing based on its mailing id. If for update is set, the record can be updated.
    /// </summary>
    /// <param name="_mailingsId">
    ///    Id for the mailing to find
    /// </param>
    /// <param name="_forupdate">
    ///    Is the record to be updated?
    /// </param>
    /// <returns>
    ///    The mailing record.
    /// </returns>
    public static smmMailings find(smmKeyId _mailingsId, boolean _forupdate = false)
    {
        smmMailings smmMailings;

        if (_mailingsId)
        {
            smmMailings.selectForUpdate(_forupdate);

            select firstonly smmMailings index hint KeyIdx where smmMailings.KeyId == _mailingsId;
        }

        return smmMailings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRec</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Find an <c>smmMailings</c> record based on its record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    The mailing record.
    /// </returns>
    public static smmMailings findRec(recId _recId, boolean _forupdate = false)
    {
        smmMailings smmMailings = null;

        if (_recId)
        {
            smmMailings.selectForUpdate(_forupdate);

            select firstonly smmMailings index hint RecId where smmMailings.RecId == _recId;
        }

        return smmMailings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnInsert</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnInsert))]
    static void DocuRefOnInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(smmMailings))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                smmMailings smmMailings = smmMailings::findRec(_docuRef.RefRecId);

                _docuRef.Party              = smmMailings.Party;
                _docuRef.ContactPersonId    = smmMailings.ContactPersonId;
                _docuRef.Author             = DirPersonUser::current().PersonParty;
                _docuRef.ActualCompanyId    = curext();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124736</DeveloperDocumentation>
	<FormRef>smmMailings</FormRef>
	<Label>@SYS81494</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CategoryId</TitleField1>
	<TitleField2>CategoryItemId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>smmMailingHistory</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmMailingHistory</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActualDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Key</Name>
			<Label>@SYS1232</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Mailing</Name>
			<Label>@SYS80295</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Party</Name>
			<Label>@SYS111907</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>editContactPersonName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActualDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ActualDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS80057</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmMailingCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmMailingCategoryItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KeyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmKeyId</ExtendedDataType>
			<Label>@SYS80954</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>MailingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS80063</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>smmMailingStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DirectoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ContactPersonIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ContactPersonId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>KeyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ContactPerson</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>smmMailings</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<SourceEDT>ContactPersonId</SourceEDT>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContactPersonId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123670</EntityRelationshipRole>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DirAddressBookParty</Name>
			<RelatedTable>DirAddressBookPartyAllView</RelatedTable>
			<RelatedTableRole>DirAddressBookPartyAllView</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>smmMailings</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IsPartyOf</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>IsMailingsFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DocuRef</Name>
			<EntityRelationshipRole>@SYS124737</EntityRelationshipRole>
			<RelatedTable>DocuRef</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RefRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmBusRelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123670</EntityRelationshipRole>
			<RelatedTable>smmBusRelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmMailingCategoryGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmMailingCategoryGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>smmMailingCategoryGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>smmMailings</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>smmMailingCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmMailingGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>smmMailingGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryItemId</Name>
					<SourceEDT>smmMailingCategoryItemId</SourceEDT>
					<Field>CategoryItemId</Field>
					<RelatedField>CategoryItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmMailings</Name>
			<EntityRelationshipRole>@SYS123688</EntityRelationshipRole>
			<RelatedTable>smmMailings</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KeyId</Name>
					<Field>KeyId</Field>
					<RelatedField>KeyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>smmTMCallListTable</Name>
			<EntityRelationshipRole>@SYS123670</EntityRelationshipRole>
			<RelatedTable>smmTMCallListTable</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123670</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>