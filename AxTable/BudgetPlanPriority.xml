<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanPriority</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanPriority extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        BudgetPlanPriorityTranslation::deleteForBudgetPlanPriority(this.RecId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        super();

        // Create translation information
        BudgetPlanPriorityTranslation::createOrUpdateTranslation(this.RecId, this.Name, this.Description);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        super();

        // Update translation information
        BudgetPlanPriorityTranslation::createOrUpdateTranslation(this.RecId, this.Name, this.Description);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        BudgetPlanPriorityConstraint budgetPlanPriorityConstraint;
        boolean                      isValid;

        isValid = super();

        if (isValid && this.RecId)
        {
            budgetPlanPriorityConstraint = BudgetPlanPriorityConstraint::findByPriority(this.RecId);

            if (budgetPlanPriorityConstraint.RecId)
            {
                //Validates if the budget planning priority is being referenced on budget plan priority constraint table.
                isValid = checkFailed(strFmt("@GLS70572", BudgetPlanningProcess::find(budgetPlanPriorityConstraint.BudgetPlanningProcess).Name));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>BudgetPlanPriority</c> table; if not,
    /// an error message is displayed.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The record ID of the <c>BudgetPlanPriority</c> record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(BudgetPlanPriorityRecId _budgetPlanPriorityRecId)
    {
        boolean isExisting = true;

        if (!BudgetPlanPriority::exist(_budgetPlanPriorityRecId))
        {
            isExisting = checkFailed(strFmt(BudgetPlanPriority::txtNotExist(), _budgetPlanPriorityRecId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a specified record exists in the <c>BudgetPlanPriority</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false .
    /// </returns>
    public static boolean exist(BudgetPlanPriorityRecId _budgetPlanPriorityRecId)
    {
        return (BudgetPlanPriority::find(_budgetPlanPriorityRecId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanPriority</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityRecId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanPriority</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanPriority find(
        BudgetPlanPriorityRecId _budgetPlanPriorityRecId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanPriority budgetPlanPriority;

        if (_budgetPlanPriorityRecId)
        {
            budgetPlanPriority.selectForUpdate(_forupdate);

            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanPriority.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanPriority
                where budgetPlanPriority.RecId == _budgetPlanPriorityRecId;
        }

        return budgetPlanPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLocalizedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanPriority</c> table that has a specified localized name.
    /// </summary>
    /// <param name="_localizedName">
    /// The localized name of the <c>BudgetPlanPriority</c> Record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_languageId">
    /// The language of the <c>BudgetPlanPriority</c> record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanPriority</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanPriority findByLocalizedName(
        BudgetPlanPriorityName _localizedName,
        boolean                _forUpdate = false,
        LanguageId             _languageId = currentUserLanguage())
    {
        BudgetPlanPriority budgetPlanPriority;
        LanguageId         languageId = _languageId;

        // Look for the localized value first
        if (languageId)
        {
            budgetPlanPriority = BudgetPlanPriority::findByNameLanguage(_localizedName, _forUpdate, languageId);
        }

        // If no user language, fall back to the system language.
        if (!budgetPlanPriority)
        {
            budgetPlanPriority = BudgetPlanPriority::findByNameLanguage(_localizedName, _forUpdate, SystemParameters::getSystemLanguageId());
        }

        // If not found or language not specified, fall back to invariant name
        if (!budgetPlanPriority)
        {
            budgetPlanPriority = BudgetPlanPriority::findByName(_localizedName, _forUpdate);
        }

        return budgetPlanPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanPriority</c> table.
    /// </summary>
    /// <param name="_budgetPlanPriorityName">
    /// The name of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanPriority</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanPriority findByName(
        BudgetPlanPriorityName _budgetPlanPriorityName,
        boolean                _forupdate = false,
        ConcurrencyModel       _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanPriority budgetPlanPriority;

        if (_budgetPlanPriorityName)
        {
            budgetPlanPriority.selectForUpdate(_forupdate);

            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanPriority.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanPriority
                where budgetPlanPriority.Name == _budgetPlanPriorityName;
        }

        return budgetPlanPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNameLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanPriority</c> table that has the specified localized
    /// name and language.
    /// </summary>
    /// <param name="_budgetPlanPriorityName">
    /// The localized name of the <c>BudgetPlanPriority</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_languageId">
    /// The language of the <c>BudgetPlanPriority</c> record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanPriority</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanPriority findByNameLanguage(
            BudgetPlanPriorityName _budgetPlanPriorityName,
            boolean                _forUpdate = false,
            LanguageId             _languageId = currentUserLanguage())
    {
        BudgetPlanPriority            budgetPlanPriority;
        BudgetPlanPriorityTranslation budgetPlanPriorityTranslation;

        if (_budgetPlanPriorityName)
        {
            budgetPlanPriority.selectForUpdate(_forupdate);

            select firstonly budgetPlanPriority
                exists join budgetPlanPriorityTranslation
                    where budgetPlanPriorityTranslation.Name == _budgetPlanPriorityName
                    &&    budgetPlanPriorityTranslation.BudgetPlanPriority == budgetPlanPriority.RecId
                    &&    budgetPlanPriorityTranslation.LanguageId == _languageId;
        }

        return budgetPlanPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS70209</DeveloperDocumentation>
	<FormRef>BudgetPlanningConfigurationPriority</FormRef>
	<Label>@GLS70208</Label>
	<SingularLabel>@GLS70080</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>NameIdx</ClusteredIndex>
	<Modules>Budget</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BudgetPlanPriorityConstraint</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>BudgetPlanPriorityConstraint</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS55776</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanPriorityDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanPriorityName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>