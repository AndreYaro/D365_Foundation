<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailProvisionedCatalogProductAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailProvisionedCatalogProductAttribute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>RetailProvisionedCatalogProductAttribute</c> record by the attribute RecId
    /// </summary>
    /// <param name="_attribute">
    /// The attribute RecId
    /// </param>
    /// <param name="_forUpdate">
    /// true, if record is selected for update, false - otherwise
    /// </param>
    /// <returns>
    /// The record found
    /// </returns>
    public static RetailProvisionedCatalogProductAttribute findByAttribute(RecId _attribute, boolean _forUpdate = false)
    {
        RetailProvisionedCatalogProductAttribute provisionedCatalogProductAttribute;

        if (_attribute)
        {
            provisionedCatalogProductAttribute.selectForUpdate(_forUpdate);

            select firstOnly provisionedCatalogProductAttribute
                where provisionedCatalogProductAttribute.Attribute == _attribute;
        }

        return provisionedCatalogProductAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsReservedKeyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the key name is a reserved key name for the provisioned catalog product attributes
    /// </summary>
    /// <param name="_keyName">
    /// The key name to check
    /// </param>
    /// <returns>
    /// The result
    /// </returns>
    public static boolean IsReservedKeyName(str _keyName)
    {
        DictEnum dictEnum = new DictEnum(enumNum(RetailCatalogProductAttributeID));
        int idx;
        boolean result = false;

        for (idx = 0; idx<dictEnum.values(); idx++)
        {
            if (RetailProvisionedCatalogProductAttribute::KeyName(any2Enum(dictEnum.index2Value(idx))) == _keyName)
            {
                result = true;
                break;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>KeyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the reserved key name of the provisioned catalog product attribute
    /// </summary>
    /// <param name="_catalogProductAttributeID">
    /// The catalog product attribute Id
    /// </param>
    /// <returns>
    /// The key name of the attribute
    /// </returns>
    public static RetailAttributeKeyName KeyName(RetailCatalogProductAttributeID _catalogProductAttributeID)
    {
        RetailAttributeKeyName keyName = enum2Symbol(enumNum(RetailCatalogProductAttributeID), enum2int(_catalogProductAttributeID));
        return keyName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040163</DeveloperDocumentation>
	<Label>@RET4040162</Label>
	<TitleField1>Attribute</TitleField1>
	<TitleField2>CatalogProductAttributeID</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ChannelManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatalogProductAttributeID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS6047</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Attribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatalogProductAttributeID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Attribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CatalogProductAttributeID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailCatalogProductAttributeID</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AttributeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Attribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CatalogProductAttributeIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CatalogProductAttributeID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResAttribute</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Attribute</Name>
					<Field>Attribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>