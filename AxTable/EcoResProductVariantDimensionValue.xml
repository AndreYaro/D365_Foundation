<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductVariantDimensionValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class EcoResProductVariantDimensionValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the dimension value of the derived type.
    /// </summary>
    /// <returns>
    ///    The dimension value ID of the table that inherits from the
    ///    <c>EcoResProductVariantDimensionValue</c> table.
    /// </returns>
    /// <remarks>
    ///    This method must be overridden on tables that derive from the
    ///    <c>EcoResProductVariantDimensionValue</c> table.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method has not been overridden.
    /// </exception>
    public RefRecId getDimensionValue()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTableId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the table ID of the derived type.
    /// </summary>
    /// <returns>
    ///    The table ID of the table that inherits from the <c>EcoResProductVariantDimensionValue</c> table.
    /// </returns>
    /// <remarks>
    ///    This method must be overridden on tables that derive from the
    ///    <c>EcoResProductVariantDimensionValue</c> table.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The method has not been overridden.
    /// </exception>
    public TableId getTableId()
    {
        throw error(Error::missingOverride(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromDistinctProductVariant</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the buffer from an <c>EcoResDistinctProductVariant</c> buffer.
    /// </summary>
    /// <param name="_ecoResDistinctProductVariant">
    ///    The <c>EcoResDistinctProductVariant</c> buffer from which to initialize.
    /// </param>
    void initFromDistinctProductVariant(EcoResDistinctProductVariant _ecoResDistinctProductVariant)
    {
        this.DistinctProductVariant = _ecoResDistinctProductVariant.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        EcoResDistinctProductVariant    ecoResDistinctProductVariant;
        boolean                         ret;

        ret = super();

        ret = EcoResProductVariantDimensionValue::validateProductDimensionAttribute(this.ProductDimensionAttribute, this.getTableId()) && ret;

        if (!this.getDimensionValue())
        {
            ret  = false;
        }
        else
        {
            ecoResDistinctProductVariant = EcoResDistinctProductVariant::find(this.DistinctProductVariant);

            if (ecoResDistinctProductVariant.RecId)
            {
                ret = ret && EcoResProductVariantManager::checkDimensionValue(ecoResDistinctProductVariant.ProductMaster, this.ProductDimensionAttribute, this.getDimensionValue(), false);
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionForeignKeyFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sends the ID of a foreign key field to a dimension table for a dimension value table of a specified
    ///    product variant.
    /// </summary>
    /// <param name="_productVariantDimensionValueTableId">
    ///    The ID of a product variant dimension value table.
    /// </param>
    /// <returns>
    ///    The ID of a foreign key field.
    /// </returns>
    public static FieldId dimensionForeignKeyFieldId(TableId _productVariantDimensionValueTableId)
    {
        SysGlobalCache cache = appl.globalCache();
        str cacheKey = 'dimensionForeignKeyFieldId' + int2Str(_productVariantDimensionValueTableId);
        FieldId variantDimtoDimRelationField = cache.get(tableStr(EcoResProductVariantDimensionValue), cacheKey, 0);

        if (!variantDimtoDimRelationField)
        {
            SysDictTable sysDictTableVariantDimension = new SysDictTable(_productVariantDimensionValueTableId);
            SetEnumerator relationsEnumerator = sysDictTableVariantDimension.relations().getEnumerator();

            while (relationsEnumerator.moveNext())
            {
                SysDictRelation sysDictRelation = relationsEnumerator.current();
                if (sysDictRelation.externTable() == EcoResProductDimensionAttribute::variantDimensionTableId2DimensionTableId(_productVariantDimensionValueTableId))
                {
                    variantDimtoDimRelationField = sysDictRelation.lineTableValue(1);
                    cache.set(tableStr(EcoResProductVariantDimensionValue), cacheKey, variantDimtoDimRelationField);
                    break;
                }
            }
        }

        return variantDimtoDimRelationField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProductDimensionAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a product dimension attribute is valid for a product variant dimension value table.
    /// </summary>
    /// <param name="_productDimensionAttributeRecId">
    /// The ID of a record in the <c>EcoResProductDimensionAttribute</c> table.
    /// </param>
    /// <param name="_productVariantDimensionValueSubtableId">
    /// The ID of a table that inherits from the <c>EcoResProductVariantDimensionValue</c> table.
    /// </param>
    /// <returns>
    /// true if a product dimension attribute is valid for a product model dimension value table; otherwise, false.
    /// </returns>
    public static boolean validateProductDimensionAttribute(
        RefRecId    _productDimensionAttributeRecId,
        TableId     _productVariantDimensionValueSubtableId)
    {
        boolean                         ret = true;

        if (EcoResProductDimensionAttribute::find(_productDimensionAttributeRecId).getVariantDimensionTableId() != _productVariantDimensionValueSubtableId)
        {
            ret = checkFailed(strFmt("@SYS305517", tableId2name(_productVariantDimensionValueSubtableId)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProductDimensionAttribiute</Name>
				<Source><![CDATA[
    [SysObsolete('Use EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId() instead.', true, 30\11\2017)]
    public void initProductDimensionAttribiute()
    {
        #InventDimDevelop
        if (this is EcoResProductVariantColor)
        {
            this.ProductDimensionAttribute = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldnum(InventDim, InventColorId));
        }
        else if (this is EcoResProductVariantSize)
        {
            this.ProductDimensionAttribute = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldnum(InventDim, InventSizeId));
        }
        else if (this is EcoResProductVariantStyle)
        {
            this.ProductDimensionAttribute = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldnum(InventDim, InventStyleId));
        }
        else if (this is EcoResProductVariantConfiguration)
        {
            this.ProductDimensionAttribute = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldnum(InventDim, ConfigId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS133888</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>EcoResProductVariantsAction</FormRef>
	<Label>@SYS133887</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>DistinctProductVariant</TitleField1>
	<TitleField2>ProductDimensionAttribute</TitleField2>
	<Abstract>Yes</Abstract>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>ProductVariantDimensionValueIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DistinctProductVariant</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductDimensionAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DistinctProductVariant</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductDimensionAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RetailWeight</Name>
			<Label>@RET3014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailWeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DistinctProductVariant</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS133901</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductDimensionAttribute</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS133897</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RetailWeight</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RetailDisplayOrder</Name>
			<ExtendedDataType>RetailDisplayOrder</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductVariantDimensionValueIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DistinctProductVariant</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProductDimensionAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_EcoResProductDimensionAttribute</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductDimensionAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InstanceRelationTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InstanceRelationType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DistinctProductVariant</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResDistinctProductVariant</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>EcoResDistinctProductVariant</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProductVariant</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>DimensionValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DistinctProductVariant</Name>
					<Field>DistinctProductVariant</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductDimensionAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProductDimensionAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProductDimensionAttribute</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResProductDimensionAttribute_EcoResProductVariantDimensionValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductDimensionAttribute</Name>
					<Field>ProductDimensionAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>