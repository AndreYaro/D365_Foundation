<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventItemGroup extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        // Check to see if the associated dimension attribute value has been used
        // in a way that would prevent deletion.
        if (!DimensionValidation::canDeleteEntityValue(this))
        {
            throw error(strfmt("@SYS134392", this.ItemGroupId));
        }

        ttsbegin;
        // Update the associated dimension attribute value.
        DimensionAttributeValue::updateForEntityValueDelete(this);

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasPurchBudget</Name>
				<Source><![CDATA[
    display ForecastHasPurch hasPurchBudget()
    {
        return (select forecastPurch
                    where forecastPurch.ItemGroupId == this.ItemGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasSalesBudget</Name>
				<Source><![CDATA[
    display ForecastHasSales hasSalesBudget()
    {
        return (select forecastSales
                    where forecastSales.ItemGroupId == this.ItemGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Renames any foreign keys in other tables depending on the change of the corresponding primary key
    /// value in the <c>InventItemGroup</c> table.
    /// </summary>
    public void renamePrimaryKey()
    {
        ttsbegin;

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            RetailConnActionManagement::errorOnRename(this);
        }

        Common originalRecord = this.orig();

        DimensionValueRenameV2 rename = DimensionValueRenameV2::construct(this, originalRecord);
        rename.syncRenamedValuePreSuper();

        super();

        rename.syncRenamedValuePostSuper();

        this.renameDimensionValueCrossCompany(originalRecord);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renameDimensionValueCrossCompany</Name>
				<Source><![CDATA[
    private void renameDimensionValueCrossCompany(Common _originalRecord)
    {
        if (InventTableDataSharingFeature::isEnabled())
        {
            SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
            if (policy.RecId && policy.IsEnabled)
            {
                Query       query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this.orig(), policy.RecId);
                QueryRun    queryRun = new QueryRun(query);
        
                while (queryRun.Next())
                {
                    InventItemGroup companyItemGroup = queryRun.get(this.TableId);
                    DataAreaId company = companyItemGroup.DataAreaId;

                    if (companyItemGroup && company && company != curExt())
                    {
                        changecompany(company)
                        {
                            InventItemGroup inventItemGroup = InventItemGroup::find(companyItemGroup.ItemGroupId);
                            if (inventItemGroup.RecId)
                            {
                                // Both methods must be called even though there is no super() being wrapped in order to get all telemetry and update the records
                                DimensionValueRenameV2 rename = DimensionValueRenameV2::construct(inventItemGroup, _originalRecord);
                                rename.syncRenamedValuePreSuper();
                                rename.syncRenamedValuePostSuper();
                            }
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(ItemGroupId  itemGroupId)
    {
        if (itemGroupId  && !InventItemGroup::exist(itemGroupId))
            return checkFailed(strFmt(InventItemGroup::txtNotExist(),itemGroupId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(ItemGroupId  itemGroupId)
    {
        return itemGroupId && (select inventItemGroup
                    where inventItemGroup.ItemGroupId  == itemGroupId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventItemGroup find(ItemGroupId  itemGroupId, boolean _forUpdate = false)
    {
        InventItemGroup inventItemGroup;

        inventItemGroup.selectForUpdate(_forUpdate);

        if (itemGroupId)
        {
            select firstonly inventItemGroup
                where inventItemGroup.ItemGroupId  == itemGroupId;
        }

        return inventItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemPosted_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if item has been posted
    /// </summary>
    /// <param name="_inventItemGroup">
    /// The inventgroup of the item.
    /// </param>
    /// <returns>
    /// Returns true if item has been posted.
    /// </returns>
    public static boolean isItemPosted_IN(InventItemGroup _inventItemGroup)
    {
        InventJournalTrans  invJourTrans;
        InventItemGroupItem inventItemGroupItem;
        InventTable         invTable;
        boolean             postedItem;

        if (InventItemGroup::exist(_inventItemGroup.ItemGroupId))
        {
            while select ItemId from invTable
                join  ItemGroupId from inventItemGroupItem
                where inventItemGroupItem.ItemGroupDataAreaId == _inventItemGroup.DataAreaId
                    && inventItemGroupItem.ItemGroupId        == _inventItemGroup.ItemGroupId
                    && inventItemGroupItem.ItemId             == invTable.ItemId
                join ItemId from invJourTrans
                where invTable.ItemId                         == invJourTrans.ItemId
            {
                postedItem = true;
            }
        }

        return postedItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a lookup for the <c>InventItemGroup</c> table.
    /// </summary>
    /// <param name="_ctrl">
    /// The form string control object with which to perform the lookup.
    /// </param>
    static void lookupItemGroup(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(InventItemGroup),_ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(InventItemGroup));

        sysTableLookup.addLookupfield(fieldNum(InventItemGroup,ItemGroupId));
        sysTableLookup.addLookupfield(fieldNum(InventItemGroup,Name));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(ItemGroupId  itemGroupId)
    {
        return InventItemGroup::find(itemGroupId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS4493";
    }

]]></Source>
			</Method>
			<Method>
				<Name>unsupportedDataSharingTableFieldSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a set of fields that cannot be shared when the <c>InventItemGroup</c> table is shared.
    /// </summary>
    /// <returns>
    /// The <c>Set</c> of fields.
    /// </returns>
    [Hookable(false)]
    internal static Set unsupportedDataSharingTableFieldSet()
    {
        Set sharingSet = new Set(Types::String);

        // Country specific fields
        sharingSet.add(fieldstr(InventItemGroup, AssetGroup_IN));
 
        return sharingSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unsupportedDataSharingCountryRegions</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static container unsupportedDataSharingCountryRegions()
    {
        #ISOCountryRegionCodes

        return [#isoRU, #isoIN];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();

        RetailAttributesLegalEntityLookup retailAttributesLegalEntityLookup;

        select firstonly retailAttributesLegalEntityLookup
            where retailAttributesLegalEntityLookup.GroupItemGroup == this.ItemGroupId
                && retailAttributesLegalEntityLookup.LegalEntity == CompanyInfo::current();

        if (retailAttributesLegalEntityLookup)
        {
            return checkFailed(strfmt(("@Retail:RetailAttributesLegalEntityLookupPropertiesDeleteValidation"), this.ItemGroupId, EcoResCategory::find(retailAttributesLegalEntityLookup.Category).Name));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123817</DeveloperDocumentation>
	<FormRef>InventItemGroup</FormRef>
	<Label>@SYS3970</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ItemGroupId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ItemGroupIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ItemGroupIdx</PrimaryIndex>
	<ReplacementKey>ItemGroupIdx</ReplacementKey>
	<TableContents>BaseDefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>InventTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JournalizingDefinitionPayablesTrans</Name>
			<Relation></Relation>
			<Table>JournalizingDefinitionPayablesTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JournalizingDefinitionPurchTrans</Name>
			<Relation></Relation>
			<Table>JournalizingDefinitionPurchTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ReverseChargeItemGroupData_W</Name>
			<Relation></Relation>
			<Table>ReverseChargeItemGroupData_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StandardItemAllocateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupIdSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupIdPurch</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetGroup_IN</Name>
			<Label>@GLS5992</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetGroup_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Forecast</Name>
			<Label>@SYS13699</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StandardItemAllocateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@sys5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DueDateLimitGroupId_ES</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseTax</Name>
			<Label>@SYS113292</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupIdPurch</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupIdSales</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WarehouseManagement</Name>
			<Label>@WAX13</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadTemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RetailSAFT</Name>
			<Label>@SaftCashRegister:StandardCodeFieldName</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailSAFTStandardVATCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupIdSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<SysSharingType>Optional</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetGroup_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGroupDepreciation_IN</ExtendedDataType>
			<Label>@GLS5992</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DueDateLimitGroupId_ES</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>ES</CountryRegionCodes>
			<ExtendedDataType>DueDateLimitGroupId_ES</ExtendedDataType>
			<SysSharingType>Optional</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadTemplateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadTemplateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StandardItemAllocateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ForecastItemAllocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS24158</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupIdPurch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<SysSharingType>Optional</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailSAFTStandardVATCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSAFTStandardVATCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefaultItemAllocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastItemAllocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StandardItemAllocateId</Name>
					<Field>StandardItemAllocateId</Field>
					<RelatedField>AllocateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymDueDateLimit_ES</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PaymDueDateLimit_ES</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DueDateLimitGroupId_ES</Name>
					<SourceEDT>DueDateLimitGroupId_ES</SourceEDT>
					<Field>DueDateLimitGroupId_ES</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DueDateGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchaseTaxItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchaseTaxItemGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventItemGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupIdPurch</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroupIdPurch</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTaxItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxItemGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventItemGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupIdSales</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroupIdSales</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLoadTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLoadTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadTemplateId</Name>
					<SourceEDT>WHSLoadTemplateId</SourceEDT>
					<Field>LoadTemplateId</Field>
					<RelatedField>LoadTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>