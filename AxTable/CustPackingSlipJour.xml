<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPackingSlipJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustPackingSlipJour extends common
{

   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canDeliverySlipBeUpdatedBR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a sales order can be created from delivery slips.
    /// </summary>
    /// <returns>
    /// true if a delivery slip is found on a sales lines; otherwise false.
    /// </returns>
    public boolean canDeliverySlipBeUpdatedBR()
    {
        CustPackingSlipTrans    custPackingSlipTrans;
        SalesLine               salesLine;
        SalesLine_BR            salesLine_BR;

        select firstonly RecId
            from custPackingSlipTrans
                where custPackingSlipTrans.SalesId == this.SalesId
                    && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
                    && custPackingSlipTrans.DeliveryDate == this.DeliveryDate
            exists join salesLine
                where salesLine.InventTransId == custPackingSlipTrans.InventTransId
            exists join salesLine_BR
                where salesLine_BR.SalesLine == salesLine.RecId
                && salesLine_BR.DeliveryCFOPTable_BR != 0;

        return custPackingSlipTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canXMLBeSent</Name>
				<Source><![CDATA[
    boolean canXMLBeSent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a set of dimensions that can be applied to the <c>defaultDimension</c> field on the
    /// <c>CustPackingSpilJour</c> table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A set of dimensions that is applied to the <c>defaultDimension</c> field on the
    /// <c>CustPackingSlipJour</c> table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object instantiated with the current buffer; optional.
    /// </param>
    /// <returns>
    /// A set of dimensions that can be applied to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custPackingSlipJour_Intrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves <c>CustPackingSlipJour_Intrastat</c> extension table record.
    /// </summary>
    /// <returns>
    /// The extension table record related to current record.
    /// </returns>
    public CustPackingSlipJour_Intrastat custPackingSlipJour_Intrastat()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(CustPackingSlipJour_Intrastat));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    display LogisticsAddressing deliveryAddress()
    {
        return DirUtility::replaceAddressTokenLanguage(this.postalAddress(),this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryCNPJCPFNUM_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the delivery CNPJ or CPF for the current record.
    /// </summary>
    /// <returns>
    /// Returns the CNPJ or CPF of the customer if the address is a primary address.
    /// Returns the CNPJ or CPF related to delivery <c>logisticsPostalAddress</c> if the address is not a primary address.
    /// </returns>
    public CNPJCPFNum_BR deliveryCNPJCPFNUM_BR()
    {
        DirPartyLocation dirPartyLocation;
        CustAccount      custAccount;

        if (!BrazilParameters::isEnabled())
            return '';
        custAccount = SalesTable::find(this.SalesId).CustAccount;

        dirPartyLocation = DirPartyLocation::findByPartyLocation(CustTable::find(custAccount).Party, this.deliveryLocation_BR());

        if (!dirPartyLocation.RecId || dirPartyLocation.IsPrimary)
        {
            return CustTable::find(custAccount).cnpjcpfNum_BR;
        }
        else
        {
            return (select cnpjcpfNum_BR from logisticsLocationExt
                where logisticsLocationExt.Location == this.deliveryLocation_BR()).cnpjcpfNum_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryDateTime</Name>
				<Source><![CDATA[
    TransDateTime deliveryDateTime()
    {
        return DateTimeUtil::newDateTime(this.DeliveryDate, 0 , DateTimeUtil::getCompanyTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryIENum_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the delivery IE for the current record.
    /// </summary>
    /// <returns>
    /// Returns the IE of the customer if the address is a primary address.
    /// Returns the IE related to delivery <c>logisticsPostalAddress</c> if the address is not a primary address.
    /// </returns>
    public display IENum_BR deliveryIENum_BR()
    {
        DirPartyLocation dirPartyLocation;
        CustAccount      custAccount;

        if (!BrazilParameters::isEnabled())
            return '';
        custAccount = SalesTable::find(this.SalesId).CustAccount;
        dirPartyLocation = DirPartyLocation::findByPartyLocation(CustTable::find(custAccount).Party, this.deliveryLocation_BR());

        if (!dirPartyLocation.RecId || dirPartyLocation.IsPrimary)
        {
            return CustTable::find(custAccount).ieNum_BR;
        }
        else
        {
            return (select ieNum_BR from logisticsLocationExt
                where logisticsLocationExt.Location == this.deliveryLocation_BR()).ieNum_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryLocation_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the delivery location of current record based on delivery postal address.
    /// </summary>
    /// <returns>
    /// Returns the <c>LogisticsPostalAddress</c> associated to this delivery postal address.
    /// </returns>
    public LogisticsLocationRecId deliveryLocation_BR()
    {
        return LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryMode</Name>
				<Source><![CDATA[
    display DlvModeTxt deliveryMode()
    {
        return DlvMode::txt(this.DlvMode, this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryReason</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the language text for the delivery reason if a language text exists.
    /// </summary>
    /// <returns>
    ///    A language text for the delivery reason or the description of the delivery reason.
    /// </returns>
    /// <remarks>
    ///    If a language text does not exist, the description of the delivery reason will be returned.
    /// </remarks>
    display DlvReasonTxt deliveryReason()
    {
        return DlvReason::txt(this.DlvReason, this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryTerms</Name>
				<Source><![CDATA[
    display DlvTermsTxt deliveryTerms()
    {
        return DlvTerm::txt(this.DlvTerm, this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason code.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonCode">
    /// The new reason code when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonCode editReasonCode(boolean set, ReasonCode _reasonCode)
    {
        ReasonCode      reasonCode = strLRTrim(_reasonCode);
        RefRecId        originalReasonRefRecID;
        FormDataSource  formCustPackingSlipJour;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromCode(reasonCode);
            }
            else
            {
                if (reasonCode)
                {
                    //The reasonCode value is not blank.
                    // Save the current ReasonRefRecID for comparison.
                    originalReasonRefRecID = this.ReasonTableRef_BR;
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);

                    if (this.ReasonTableRef_BR == originalReasonRefRecID)
                    {
                        // The reason code has changed but the referenced record ID has not.
                        // Get the current FormDataSource and set forceWrite() to true so that
                        // data validation (validateWrite()) is performed on the updated reason code.
                        formCustPackingSlipJour = FormDataUtil::getFormDataSource(this);
                        if (formCustPackingSlipJour)
                        {
                            formCustPackingSlipJour.forceWrite(true);
                        }
                    }
                }
                else
                {
                    // The reasonCode is blank.
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);
                }
            }

            // Update the reason comment with the default comment value for the updated reason code.
            // A blank reasonCode will result in a blank comment because a blank reasonCode
            // will return an empty reasonTable buffer.

            this.editReasonComment(true, ReasonTable::find(_reasonCode).Description);
        }
        else
        {
            reasonCode = ReasonTableRef::find(this.ReasonTableRef_BR).Reason;
        }

        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason comment.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonComment">
    /// The new reason comment when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonComment editReasonComment(boolean set, ReasonComment _reasonComment)
    {
        ReasonComment   reasonComment = _reasonComment;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromComment(reasonComment);
            }
            else
            {
                this.ReasonTableRef_BR = ReasonTableRef::updateComment(reasonComment, this.ReasonTableRef_BR);
            }
        }
        else
        {
            reasonComment = ReasonTableRef::find(this.ReasonTableRef_BR).ReasonComment;
        }

        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsStockedProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether lines with stocked products exist on a packing slip.
    /// </summary>
    /// <returns>
    /// true if stocked products exist on the packing slip; otherwise, false.
    /// </returns>
    public boolean existsStockedProduct()
    {
        return (select firstonly RecId from custPackingSlipTrans
            where custPackingSlipTrans.SalesId          == this.SalesId
               && custPackingSlipTrans.PackingSlipId    == this.PackingSlipId
               && custPackingSlipTrans.DeliveryDate     == this.DeliveryDate
               && custPackingSlipTrans.StockedProduct   == NoYes::Yes).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustPackingSlipVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the packing slip header record based on packing slip version record.
    /// </summary>
    /// <param name="_custPackingSlipVersion">
    /// The packing slip version record to use to initialize the packing slip header record.
    /// </param>
    void  initFromCustPackingSlipVersion(CustPackingSlipVersion _custPackingSlipVersion)
    {
        this.Qty                    = _custPackingSlipVersion.Qty;
        this.Volume                 = _custPackingSlipVersion.Volume;
        this.Weight                 = _custPackingSlipVersion.Weight;
        this.InternalPackingSlipId  = _custPackingSlipVersion.InternalPackingSlipId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTrackingNumbers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add tracking number information to this packing slip.
    /// </summary>
    /// <param name = "_salesParmTable">The packing slip to be posted.</param>
    void initTrackingNumbers(SalesParmTable _salesParmTable)
    {
        SalesParmPackingSlipTrackingInformation unpostedTrackingNumbers;
        while select unpostedTrackingNumbers
              where unpostedTrackingNumbers.SalesParmId == _salesParmTable.ParmId
                 && unpostedTrackingNumbers.SalesParmTableRefId == _salesParmTable.TableRefId
        {
            SalesPackingSlipTrackingInformation salesPackingSlipTrackingInformation;
            salesPackingSlipTrackingInformation.SalesId        = this.SalesId;
            salesPackingSlipTrackingInformation.PackingSlipId  = this.PackingSlipId;
            salesPackingSlipTrackingInformation.DeliveryDate   = this.DeliveryDate;
            salesPackingSlipTrackingInformation.TrackingNumber = unpostedTrackingNumbers.TrackingNumber;
            salesPackingSlipTrackingInformation.TrackingURL    = unpostedTrackingNumbers.TrackingURL;
            salesPackingSlipTrackingInformation.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    void  initFromSalesTable(SalesTable _salesTable)
    {
        #ISOCountryRegionCodes

        CustPackingSlipJour_Intrastat custPackingSlipJour_Intrastat;

        if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(CustPackingSlipJour_Intrastat)))
        {
            custPackingSlipJour_Intrastat   = this.custPackingSlipJour_Intrastat();
        }

        this.SalesType              = _salesTable.SalesType;
        this.SalesId                = _salesTable.SalesId;
        this.OrderAccount           = _salesTable.CustAccount;
        this.InvoiceAccount         = _salesTable.InvoiceAccount;
        this.LanguageId             = _salesTable.LanguageId;
        this.NumberSequenceGroup    = _salesTable.NumberSequenceGroup;
        this.PurchaseOrder          = _salesTable.PurchOrderFormNum;
        this.CustomerRef            = _salesTable.CustomerRef;

        this.DeliveryName           = _salesTable.DeliveryName;
        this.DeliveryPostalAddress  = _salesTable.DeliveryPostalAddress;

        this.WorkerSalesTaker       = _salesTable.WorkerSalesTaker;
        this.ReturnItemNum          = _salesTable.ReturnItemNum;
        this.FreightSlipType        = _salesTable.FreightSlipType;
        this.DlvTerm                = _salesTable.DlvTerm;
        this.DlvMode                = _salesTable.DlvMode;
        this.DlvReason              = _salesTable.DlvReason;
        this.ExportReason           = _salesTable.ExportReason;
        this.DefaultDimension       = this.copyDimension(_salesTable.DefaultDimension);
        this.InventLocationId       = _salesTable.InventLocationId;

        this.InterCompanyCompanyId  = _salesTable.InterCompanyCompanyId;
        this.InterCompanyPurchId    = _salesTable.InterCompanyPurchId;

        this.ShipCarrierId          = _salesTable.ShipCarrierId;
        this.ShipCarrierAccount     = _salesTable.ShipCarrierAccount;
        this.ShipCarrierBlindShipment     = _salesTable.ShipCarrierBlindShipment;
        this.ShipCarrierDeliveryContact   = _salesTable.ShipCarrierDeliveryContact;

        if (FinTagConfiguration::isFinTagConfigurationSet(_salesTable.DataAreaId) && SalesOrderFinTagFeature::isEnabled())
        {
            this.FinTag = _salesTable.FinTag;
        }

        if (IntrastatCountryRegionParameters::isInEUByIsoCode())
        {
            TransportationDocument::copy(_salesTable, this);
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        {
            this.ContactPersonId    = _salesTable.ContactPersonId;
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        {
            this.IntrastatFulfillmentDate_HU = _salesTable.IntrastatFulfillmentDate_HU;
        }

        if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(CustPackingSlipJour_Intrastat)))
        {
            custPackingSlipJour_Intrastat.SpecialMovement_CZ = _salesTable.salesTable_Intrastat().SpecialMovement_CZ;
            this.packCustPackingSlipJour_Intrastat(custPackingSlipJour_Intrastat);
        }

        this.setInvoiceAddress(_salesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (SalesPackingSlipDisableCreationOfSDFRecordsFlight::instance().isEnabled() || FeatureStateProvider::isFeatureEnabled(SalesPackingSlipDisableCreationOfSDFRecordsFeature::instance()))
        {
            this.createDummySourceDocumentHeader();
        }
        else
        {
	        this.SourceDocumentHeader = SourceDocumentHeader::createSourceDocumentHeader(tableNum(CustPackingSlipJour));
            this.updateSourceDocumentHeader(this.SourceDocumentHeader);
        }

        if (CustPackingSlipJourOnInsertInstrumentationFlight::instance().isEnabled())
        {
            CustPackingSlipJour custPackingSlipSearch;
            
            select firstonly custPackingSlipSearch
                where custPackingSlipSearch.PackingSlipId == this.PackingSlipId &&
                      custPackingSlipSearch.SalesId == this.SalesId;
            SalesInstrumentationLogger logger = SalesInstrumentationLogger::createLogger(tableStr(CustPackingSlipJour));
            SalesPackingSlipInstrumentationActivities activities = SalesPackingSlipInstrumentationActivities::newFromLogger(logger);

            using (var activityContext = activities.insert(this))
            {
                if (custPackingSlipSearch)
                {
                    logger.logStackTrace(strFmt('@SCM:SalesPackingSlipInstrumentationDuplicateError',
                        custPackingSlipSearch.PackingSlipId,
                        custPackingSlipSearch.SalesId));
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::SalesId, custPackingSlipSearch.SalesId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::PackingSlipId, custPackingSlipSearch.PackingSlipId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::Printed, strFmt('%1', custPackingSlipSearch.Printed));
                }
                else if (!this.PackingSlipId)
                {
                    logger.logInformation(strFmt('@SCM:SalesPackingSlipInstrumentationProformaPrintInfo', this.SalesId));
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::SalesId, this.SalesId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::PackingSlipId, this.PackingSlipId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::Printed, strFmt('%1', this.Printed));
                }
                super();
            }
        }
        else
        {
		    super();
        }

        this.SysExtensionSerializerMap::postInsert();

        if (RetailParameters::isRetailEnabledAndInUse())
        {
            // Packing Slip email notification.
            RetailEventNotificationAction::PackingSlipCompletion(this.RecId);

            // Order ready for pickup notification (notification will only be sent if there is a sales line on the packing slip with pickup delivery mode).
            // This cannot be checked at this point because the packing slip lines have not been inserted yet.
            RetailEventNotificationAction::insertRetailOENAction(RetailEventNotificationType::OrderReadyForPickup, this.RecId, SalesTable::find(this.SalesId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>intercompanyAllocateMarkupAndConfirm</Name>
				<Source><![CDATA[
    private void intercompanyAllocateMarkupAndConfirm(Map _inventTransIdMap)
    {
        MapIterator             miInventTransId;
        Map                     purchIdMap          = new Map(new DictField(tableNum(PurchTable),fieldNum(PurchTable, PurchId)).baseType(), Types::Integer);
        PurchTable              purchTable;
        PurchId                 interCompanyPurchId;
        InventTransId           interCompanyInventTransId;

        if (!_inventTransIdMap)
        {
            return;
        }

        miInventTransId = new MapIterator(_inventTransIdMap);
        miInventTransId.begin();

        while (miInventTransId.more())
        {
            interCompanyInventTransId = miInventTransId.key();
            interCompanyPurchId       = PurchLine::findInventTransId(interCompanyInventTransId).PurchId;

            if (!purchIdMap.exists(interCompanyPurchId))
            {
                purchTable = PurchTable::find(interCompanyPurchId);

                if (purchTable.isInterCompanyOrder() && !purchTable.InterCompanyDirectDelivery)
                {
                    InterCompanyPostPurch_PackingSlip::interCompanyMarkupAllocation(purchTable, this.PackingSlipId, this.DeliveryDate);
                    purchTable.reread();
                }

                if (purchTable.DocumentState != VersioningDocumentState::Confirmed)
                {
                    PurchFormLetter::construct(DocumentStatus::PurchaseOrder).update(purchTable, this.PackingSlipId);
                    purchTable.reread();
                }
                purchIdMap.insert(interCompanyPurchId, 1);
            }
            miInventTransId.next();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyDoExternalPosting</Name>
				<Source><![CDATA[
    public boolean interCompanyDoExternalPosting()
    {
        return this.salesTable().interCompanyPurchTable().InterCompanyDirectDelivery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyDoInternalPosting</Name>
				<Source><![CDATA[
    public boolean interCompanyDoInternalPosting()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyEndpointActionPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the intercompany trading policy for the current <c>CustPackingSlipJour</c> table record.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InterCompanyEndpointActionPolicy</c> table; otherwise, an empty record.
    /// </returns>
    public InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy(boolean   _forUpdate = false)
    {
        InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;

        changecompany (
                       this.company()
                       )
        {
            interCompanyEndpointActionPolicy = CustTable::find(this.OrderAccount).interCompanyTradingPartner().interCompanyEndpointActionPolicy(_forUpdate);
        }
        return interCompanyEndpointActionPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyTransTableNum</Name>
				<Source><![CDATA[
    public TableId interCompanyTransTableNum()
    {
        return tableNum(CustPackingSlipTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustIncludeCustPackingSlipTransInIntercompanyUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>CustPackingSlipTrans</c> must be included in the intercompany update.
    /// </summary>
    /// <param name = "_custPackingSlipTrans">The The <c>CustPackingSlipTrans</c> record.</param>
    /// <returns>true if it must be included; otherwise false.</returns>
    [Replaceable]   
    protected boolean mustIncludeCustPackingSlipTransInIntercompanyUpdate(CustPackingSlipTrans _custPackingSlipTrans)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInventTransIdsForIntercompanyUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a map of <c>InventTransId</c> values to process when performing an intercompany update.
    /// </summary>
    /// <returns>The map of <c>InventTransId</c> values.</returns>
    private Map buildInventTransIdsForIntercompanyUpdate()
    {
        Map inventTransIdMap = new Map(new DictField(tableNum(CustPackingSlipTrans),fieldNum(CustPackingSlipTrans, InventTransId)).baseType(), Types::Container);
        CustPackingSlipTrans custPackingSlipTrans;

        while select custPackingSlipTrans
            where custPackingSlipTrans.SalesId              == this.SalesId
                && custPackingSlipTrans.PackingSlipId        == this.PackingSlipId
                && custPackingSlipTrans.DeliveryDate         == this.DeliveryDate
                && custPackingSlipTrans.NumberSequenceGroup  == this.NumberSequenceGroup
        {
            if (this.mustIncludeCustPackingSlipTransInIntercompanyUpdate(custPackingSlipTrans))
            {
                inventTransIdMap.insert(custPackingSlipTrans.InterCompanyInventTransId, [custPackingSlipTrans.Qty, custPackingSlipTrans.PdsCWQty]);
            }
        }

        return inventTransIdMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyUpdate</Name>
				<Source><![CDATA[
    public void interCompanyUpdate()
    {
        Set                     purchIdSet       = new Set(new DictField(tableNum(PurchTable),fieldNum(PurchTable, PurchId)).baseType());
        Map                     receiveNowMap    = new Map(new DictField(tableNum(PurchLine),fieldNum(PurchLine, InventTransId)).baseType(), Types::Container);
        Map                     inventTransIdMap = this.buildInventTransIdsForIntercompanyUpdate();
        PurchLine               purchLine;
        SalesParmUpdate         salesParmUpdate = SalesParmUpdate::find(this.ParmId);

        changecompany(this.InterCompanyCompanyId)
        {
            this.intercompanyAllocateMarkupAndConfirm(inventTransIdMap);
            ttsbegin;

            SysQueryRun chooseLinesQuery = new SysQueryRun(queryStr(PurchUpdate));

            var inventTransIdEnumerator = inventTransIdMap.getEnumerator();
            while (inventTransIdEnumerator.moveNext())
            {
                InventTransId interCompanyInventTransId = inventTransIdEnumerator.currentKey();
                PurchId       interCompanyPurchId       = PurchLine::findInventTransId(interCompanyInventTransId).PurchId;

                if (!purchIdSet.in(interCompanyPurchId))
                {
                    VersioningPurchaseOrder::newPurchaseOrder(PurchTable::find(interCompanyPurchId,true)).archiveOnDemand();

                    while select forupdate purchLine
                          where purchLine.PurchId == interCompanyPurchId
                             && !purchLine.IsDeleted
                    {
                        if (inventTransIdMap.exists(purchLine.InventTransId))
                        {
                            [purchLine.PurchReceivedNow, purchLine.PdsCWInventReceivedNow] = inventTransIdMap.lookup(purchLine.InventTransId);
                        }
                        else
                        {
                            container receiveNow = [purchLine.PurchReceivedNow, purchLine.InventReceivedNow];
                            receiveNowMap.insert(purchLine.InventTransId, receiveNow);
                            purchLine.PurchReceivedNow = 0;
                        }
                        
                        purchLine.setInventReceivedNow();

                        if (IntercompanySetInventQtyOnProductReceiptFlight::instance().isEnabled()
                            && purchLine.inventTable().inventUnitId() != purchLine.PurchUnit)
                        {
                            CustPackingSlipTrans custPackingSlipTrans = this.intercompanyCustPackingSlipTrans(purchLine.InterCompanyInventTransId);
                            if (custPackingSlipTrans)
                            {
                                purchLine.InventReceivedNow = custPackingSlipTrans.InventQty;
                            }
                        }
                        
                        purchLine.update();
                    }
                    purchIdSet.add(interCompanyPurchId);
                    chooseLinesQuery.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable, PurchId)).value(queryValue(interCompanyPurchId));
                }
            }

            chooseLinesQuery.query().interactive(false);
            chooseLinesQuery.saveUserSetup      (false);

            PurchFormLetter purchFormLetter = PurchFormLetter_PackingSlip::newPackingSlipFromChooseLineQuery(
                chooseLinesQuery,
                PurchTable::find(this.InterCompanyPurchId));
            purchFormLetter.updatePurchParmTableNum(this.PackingSlipId);
            purchFormLetter.creditRemaining         (salesParmUpdate.CreditRemaining);
            purchFormLetter.interCompanyVoucher     (this.LedgerVoucher);
            purchFormLetter.reArrangeNow(true);
            purchFormLetter.sumBy(AccountOrder::Auto);
            ttscommit;

            purchFormLetter.run();

            if (receiveNowMap.elements())
            {
                ttsbegin;
                var purchIdEnumerator = purchIdSet.getEnumerator();
                while (purchIdEnumerator.moveNext())
                {
                    PurchId interCompanyPurchId = purchIdEnumerator.current();

                    while select forupdate purchLine
                        where purchLine.PurchId == interCompanyPurchId
                    {
                        if (receiveNowMap.exists(purchLine.InventTransId))
                        {
                            container receiveNow = receiveNowMap.lookup(purchLine.InventTransId);
                            [purchLine.PurchReceivedNow, purchLine.InventReceivedNow] = receiveNow;
                            purchLine.doUpdate();
                        }
                    }
                }
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyUpdateAllowed</Name>
				<Source><![CDATA[
    public boolean interCompanyUpdateAllowed()
    {
        boolean                     ok = true;
        VendPackingSlipPurchLink    purchLink;

        if (!this.InterCompanyCompanyId)
        {
            return false;
        }

        changecompany(this.InterCompanyCompanyId)
        {
            select RecId from purchLink
                index hint origPurchIdx
                where purchLink.OrigPurchId     == this.InterCompanyPurchId
                   && purchLink.PackingSlipId   == this.PackingSlipId;

            ok = !(purchLink.RecId);
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoicePostalAddress</Name>
				<Source><![CDATA[
    LogisticsPostalAddress invoicePostalAddress()
    {
        return LogisticsPostalAddress::findRecId(this.InvoicePostalAddress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoicingAddress</Name>
				<Source><![CDATA[
    display LogisticsAddressing invoicingAddress()
    {
        return DirUtility::replaceAddressTokenLanguage(this.invoicePostalAddress(),this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCanceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a packing slip is canceled.
    /// </summary>
    /// <returns>
    /// true if the packing slip is canceled; otherwise false.
    /// </returns>
    public boolean isCanceled()
    {
        return (select firstonly RecId from custPackingSlipTrans
            where custPackingSlipTrans.SalesId == this.SalesId
                && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
                && custPackingSlipTrans.DeliveryDate == this.DeliveryDate
                && custPackingSlipTrans.Qty != 0).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDropShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a packing slip journal is a drop shipment.
    /// </summary>
    /// <returns>
    /// true if the packing slip journal is a drop shipment; otherwise, false.
    /// </returns>
    public boolean isDropShipment()
    {
        return (select firstonly RecId from custPackingSlipTrans
            where   custPackingSlipTrans.PackingSlipId  == this.PackingSlipId
                &&  custPackingSlipTrans.SalesId        == this.SalesId
                &&  custPackingSlipTrans.DeliveryDate   == this.DeliveryDate
                &&  custPackingSlipTrans.DeliveryType   == TradeLineDlvType::DropShip).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeCorrectedForSalesType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a packing slip can be corrected depending on the type of the source document behind the packing slip.
    /// </summary>
    /// <returns>true, if the packing slip can be corrected; otherwise, false.</returns>
    public boolean canBeCorrectedForSalesType()
    {
        return this.SalesType == SalesType::Journal
            || this.SalesType == SalesType::Subscription
            || this.SalesType == SalesType::Sales
            || this.SalesType == SalesType::ReturnItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemReqPackingSlipLinkedToPO</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean itemReqPackingSlipLinkedToPO()
    {
        boolean ret = false;
        if (this.SalesType == SalesType::ItemReq)
        {
            CustPackingSlipTrans custPackingSlipTrans;
            SalesLine salesLine;
        
            // Loop to find any CustPackingSlipTrans that is linked to PO
            while select RecId from custPackingSlipTrans
                where custPackingSlipTrans.SalesId == this.SalesId
                    && custPackingSlipTrans.DeliveryDate == this.DeliveryDate
                    && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
                join InventRefTransId, InventRefId, SalesType, InventRefType
                from salesLine
                where salesLine.InventTransId == custPackingSlipTrans.InventTransId
            {
                if (salesLine.InventRefTransId
                    && salesLine.InventRefId
                    && salesLine.SalesType == SalesType::ItemReq
                    && salesLine.InventRefType == InventRefType::Purch)
                {
                    ret = true;
                    break;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemReqPackingSlipReferenced</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean itemReqPackingSlipReferenced()
    {
        boolean ret = false;
        if (this.SalesType == SalesType::ItemReq)
        {
            CustPackingSlipTrans custPackingSlipTrans;
            SalesLine salesLine;
        
            // Loop to find any CustPackingSlipTrans that is linked to a document
            while select RecId from custPackingSlipTrans
                where custPackingSlipTrans.SalesId == this.SalesId
                    && custPackingSlipTrans.DeliveryDate == this.DeliveryDate
                    && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
                join InventRefTransId, InventRefId, SalesType
                from salesLine
                where salesLine.InventTransId == custPackingSlipTrans.InventTransId
            {
                if (salesLine.InventRefTransId
                    && salesLine.InventRefId
                    && salesLine.SalesType == SalesType::ItemReq)
                {
                    ret = true;
                    break;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyItemReqPackingSlipProjTransProcessed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a any line from the packing slip of an item req has been invoiced or adjusted.
    /// </summary>
    /// <returns>
    /// <c>true</c> if the any line from the packing slip of an item req has been invoiced or adjusted; otherwise, <c>false</c>.
    /// </returns>
    [Hookable(false)]
    public boolean isAnyItemReqPackingSlipProjTransProcessed()
    {
        boolean ret;
        
        if (this.SalesType == SalesType::ItemReq)
        {
            CustPackingSlipTrans custPackingSlipTrans;
            ProjItemTrans projItemTrans;
            ProjItemTransSale projItemTransSale;

            select firstonly RecId from custPackingSlipTrans
                where custPackingSlipTrans.SalesId == this.SalesId
                    && custPackingSlipTrans.DeliveryDate  == this.DeliveryDate
                    && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
            exists join projItemTrans 
                where projItemTrans.TransIdPackSlip like custPackingSlipTrans.PackingSlipId + '%'
                    && projItemTrans.InventTransId == custPackingSlipTrans.InventTransId
            exists join projItemTransSale
                where (projItemTransSale.TransStatus == ProjTransStatus::Invoiced
                        || projItemTransSale.TransStatus == ProjTransStatus::Adjusted)
                    && projItemTransSale.ProjTransId == projItemTrans.ProjTransId;
            
            ret = custPackingSlipTrans.RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyItemReqPackingSlipPartOfInvoiceProposal</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ProjProposalId isAnyItemReqPackingSlipPartOfInvoiceProposal()
    {
        ProjProposalId ret = '';
        if (this.SalesType == SalesType::ItemReq)
        {
            CustPackingSlipTrans custPackingSlipTrans;
            ProjItemTrans projItemTrans;
            ProjItemTransSale projItemTransSale;
            ProjProposalItem projProposalItem;
            ProjProposalJour projProposalJour;

            select firstonly RecId from custPackingSlipTrans
                where custPackingSlipTrans.SalesId == this.SalesId
                    && custPackingSlipTrans.DeliveryDate  == this.DeliveryDate
                    && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
            join RecId from projItemTrans
                where projItemTrans.TransIdPackSlip like custPackingSlipTrans.PackingSlipId + '%'
                    && projItemTrans.InventTransId == custPackingSlipTrans.InventTransId
            join RecId from projItemTransSale
                where (projItemTransSale.TransStatus == ProjTransStatus::InvoiceProposal
                        || projItemTransSale.TransStatus == ProjTransStatus::CreditnoteProposal)
                    && projItemTransSale.ProjTransId == projItemTrans.ProjTransId
            join RecId from projProposalItem 
                where projProposalItem.ProjTransId == projItemTrans.ProjTransId
            join ProposalId from projProposalJour
                where projProposalJour.ProposalId == projProposalItem.ProposalId
                    && projProposalJour.LineProperty != ProjLinePropertyCode::Invoiced 
                    && projProposalJour.LineProperty != ProjLinePropertyCode::Canceled;

            ret = projProposalJour.ProposalId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFullyInvoiced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a packing slip has been fully invoiced.
    /// </summary>
    /// <returns>
    /// <c>true</c> if the packing slip has been fully invoiced; otherwise, <c>false</c>.
    /// </returns>
    public boolean isFullyInvoiced()
    {
        CustPackingSlipTrans custPackingSlipTrans;

        select firstonly RecId from custPackingSlipTrans
            where custPackingSlipTrans.SalesId       == this.SalesId
               && custPackingSlipTrans.PackingSlipId == this.PackingSlipId
               && custPackingSlipTrans.DeliveryDate  == this.DeliveryDate
               && custPackingSlipTrans.FullyMatched  == NoYes::No;

        return custPackingSlipTrans.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInvoiceMatched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a packing slip has been invoice matched.
    /// </summary>
    /// <returns>
    /// <c>true</c> if the packing slip has been invoice matched; otherwise, <c>false</c>.
    /// </returns>
    public boolean isInvoiceMatched()
    {
        CustInvoicePackingSlipQuantityMatch custInvoicePackingSlipQuantityMatch;
        CustPackingSlipTrans custPackingSlipTrans;

        select firstonly RecId from custInvoicePackingSlipQuantityMatch
        exists join custPackingSlipTrans
            where custPackingSlipTrans.SourceDocumentLine   == custInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine
               && custPackingSlipTrans.SalesId              == this.SalesId
               && custPackingSlipTrans.PackingSlipId        == this.PackingSlipId
               && custPackingSlipTrans.DeliveryDate         == this.DeliveryDate;

        return custInvoicePackingSlipQuantityMatch.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProforma</Name>
				<Source><![CDATA[
    public boolean isProforma()
    {
        return !this.PackingSlipId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSummaryUpdated</Name>
				<Source><![CDATA[
    public boolean isSummaryUpdated()
    {
        Query       query = this.queryCustPackingSlipSalesLink();
        QueryRun    queryRun;

        query.dataSourceTable(tableNum(CustPackingSlipSalesLink)).firstOnly(true);
        query.dataSourceTable(tableNum(CustPackingSlipSalesLink)).addRange(fieldNum(CustPackingSlipSalesLink, OrigSalesId)).value(strFmt('!%1',queryValue(this.SalesId)));

        queryRun = new QueryRun(query);

        return queryRun.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrHasExpeditedLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays if an order is expedited.
    /// </summary>
    /// <returns>
    /// true if the order is expedited; otherwise, false.
    /// </returns>
    public display MCRExpeditedOrder mcrHasExpeditedLines()
    {
        return this.salesTable().MCRHasExpeditedLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a set of dimensions that hold the merged combination of the current
    /// <c>defaultDimension</c> field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    /// optional.
    /// </param>
    /// <param name="_dimensionMerge">
    /// A <c>dimensionMerge</c> object that is instantiated with the current buffer; optional.
    /// </param>
    /// <returns>
    /// A set of dimensions that holds the merged combination of the current <c>defaultDimension</c> field
    /// on this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>packCustPackingSlipJour_Intrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs <c>CustPackingSlipJour_Intrastat</c> extension table record.
    /// </summary>
    /// <param name="_custPackingSlipJour_Intrastat">
    /// The extension table record to pack.
    /// </param>
    public void packCustPackingSlipJour_Intrastat(CustPackingSlipJour_Intrastat _custPackingSlipJour_Intrastat)
    {
        this.SysExtensionSerializerMap::packExtensionTable(_custPackingSlipJour_Intrastat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Obtains the corresponding <c>LogisticsPostalAddress</c> record.
    /// </summary>
    /// <param name="_forupdate">
    ///     Determines whether to select the <c>LogisticsPostalAddress</c> for updating.
    /// </param>
    /// <returns>
    ///     The corresponding <c>LogisticsPostalAddress</c> record, if found; otherwise, an empty buffer.
    /// </returns>
    LogisticsPostalAddress postalAddress(boolean _forupdate = false)
    {
        return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPackingSlipJournalMenuItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the packing slip journal menu name.
    /// </summary>
    /// <returns>Menu item name.</returns>
    protected MenuItemNameOutput salesPackingSlipJournalMenuItemName()
    {
        return menuitemOutputStr(salesPackingSlip);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Print journals
    /// </summary>
    /// <param name="journalPrint">
    /// printing journal
    /// </param>
    /// <param name="journalList">
    /// journals list
    /// </param>
    /// <param name="parmPrintBillOfLading">
    /// true if print bill of lading is needed
    /// </param>
    /// <param name="parmPrintTransportInvoice">
    /// true if print transportation invoice is needed
    /// </param>
    void  printJournal(
        SalesPackingSlipJournalPrint journalPrint = null,
        RecordSortedList             journalList               = null
        ,
        NoYes                        parmPrintBillOfLading     = NoYes::No,
        NoYes                        parmPrintTransportInvoice = NoYes::No
        )
    {
        #ISOCountryRegionCodes
        MenuFunction billOfLadingMenu;
        MenuFunction transportInvoiceMenu;
        boolean      countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        CustPackingSlipJour     tmpCustPackingSlipJour;
        Args         parameters = new Args();
        MenuFunction salesPackingSlipMenu;
        if (!countryRegion_RU)
        {
            salesPackingSlipMenu = new MenuFunction(this.salesPackingSlipJournalMenuItemName(), MenuItemType::Output);

            parameters.caller(journalPrint);
            if (journalList)
            {
                parameters.object(journalList);
            }
            else
            {
                parameters.record(this);
            }

            salesPackingSlipMenu.run(parameters);
        }
        else
        {
            parameters.parmEnum(NoYes::No);
            tmpCustPackingSlipJour  = CustPackingSlipJour::findRecId(this.RecId);
            billOfLadingMenu        = new MenuFunction(menuitemOutputStr(WMSBillOfLadingOriginalPrint), MenuItemType::Output);
            transportInvoiceMenu    = new MenuFunction(menuitemOutputStr(WMSTransportInvoiceReport_RU), MenuItemType::Output);
            salesPackingSlipMenu = new MenuFunction(menuitemOutputStr(salesPackingSlip), MenuItemType::Output);
            parameters.caller(journalPrint);
            if (journalList)
            {
                journalList.first(tmpCustPackingSlipJour);
                parameters.object(journalList);
            }

            salesPackingSlipMenu.run(parameters);
        }
        while (tmpCustPackingSlipJour)
        {
            parameters.record(tmpCustPackingSlipJour);

            if (parmPrintBillOfLading)
            {
                if (tmpCustPackingSlipJour.BillOfLadingId)
                {
                    parameters.record(WMSBillOfLading::find_RU(tmpCustPackingSlipJour.BillOfLadingId));
                    billOfLadingMenu.run(parameters);
                }
                else
                {
                    info("@GLS111081");
                }
            }

            if (parmPrintTransportInvoice)
            {
                if (tmpCustPackingSlipJour.BillOfLadingId)
                {
                    parameters.record(WMSBillOfLading::find_RU(tmpCustPackingSlipJour.BillOfLadingId));
                    transportInvoiceMenu.run(parameters);
                }
                else
                {
                    info("@GLS111081");
                }
            }

            if (! journalList || ! journalList.next(tmpCustPackingSlipJour))
            {
                break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryCustPackingSlipSalesLink</Name>
				<Source><![CDATA[
    Query queryCustPackingSlipSalesLink()
    {
        return SysQuery::queryFromTableRelation(this,tableNum(CustPackingSlipSalesLink));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryCustPackingSlipTrans</Name>
				<Source><![CDATA[
    Query queryCustPackingSlipTrans()
    {
        Query   tradeLoopTrans;

        tradeLoopTrans = new TradeLoopTrans(this,tableNum(CustPackingSlipTrans)).buildQuery();

        return tradeLoopTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    SalesTable  salesTable(boolean _update = false)
    {
        SalesTable  salesTable = SalesTable::find(this.SalesId, _update);

        if (!salesTable && this.SalesId
        &&  SalesTableDelete::find(this.SalesId).SalesTable)
        {
            [salesTable] = SalesTableDelete::find(this.SalesId).SalesTable;
        }

        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the invoice address fields on the packing slip journal to be able to print both delivery
    ///    address and invoice address.
    /// </summary>
    /// <param name="_salesTable">
    ///    The sales order header to post.
    /// </param>
    void  setInvoiceAddress(SalesTable _salesTable)
    {
        CustInvoiceJour custInvoiceJour;
        LogisticsPostalAddress deliveryAddress;

        custInvoiceJour.OrderAccount = _salesTable.CustAccount;
        custInvoiceJour.InvoiceAccount = _salesTable.InvoiceAccount;
        custInvoiceJour.DeliveryPostalAddress = _salesTable.DeliveryPostalAddress;
        if (_salesTable.ProjId)
        {
            custInvoiceJour.setInvoiceAddressFromProject(_salesTable.ProjId);
        }
        else
        {
            custInvoiceJour.setInvoiceAddress(_salesTable);
        }

        if (!custInvoiceJour.InvoicePostalAddress)
        {
            if (_salesTable.DeliveryPostalAddress)
            {
                deliveryAddress = _salesTable.deliveryAddress();
                this.InvoicingName           = LogisticsLocation::find(deliveryAddress.Location).Description;
                this.InvoicePostalAddress    = _salesTable.DeliveryPostalAddress;
            }
            else
            {
                this.InvoicingName           =  this.DeliveryName;
                this.InvoicePostalAddress    =  this.DeliveryPostalAddress;
            }
        }
        else
        {
                this.InvoicingName           =  custInvoiceJour.InvoicingName;
                this.InvoicePostalAddress    =  custInvoiceJour.InvoicePostalAddress;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transporationContractName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of a transportation Contractor party.
    /// </summary>
    /// <returns>
    /// The name field of the transportation Contractor party.
    /// </returns>
    display DirPartyName transporationContractName(
    )
    {
        DirPartyName name;

        if (this.TransportationDeliveryContractor)
        {
            name = TransportationDeliveryParty::find(this.TransportationDeliveryContractor).name();
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transporationLoaderName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of a transportation loader party.
    /// </summary>
    /// <returns>
    /// The name field of the transportation loader party.
    /// </returns>
    display DirPartyName transporationLoaderName(
    )
    {
        DirPartyName name;

        if (this.TransportationDeliveryLoader)
        {
            name = TransportationDeliveryParty::find(this.TransportationDeliveryLoader).name();
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transporationOwnerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of a transportation owner party.
    /// </summary>
    /// <returns>
    /// The name field of the transportation owner party.
    /// </returns>
    display DirPartyName transporationOwnerName(
    )
    {
        DirPartyName name;

        if (this.TransportationDeliveryOwner)
        name = TransportationDeliveryParty::find(this.TransportationDeliveryOwner).name();

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update() 
    {
        if (CustPackingSlipJourOnInsertInstrumentationFlight::instance().isEnabled())
        {
            CustPackingSlipJour custPackingSlipSearch;
            
            select firstonly custPackingSlipSearch
                where custPackingSlipSearch.PackingSlipId == this.PackingSlipId &&
                      custPackingSlipSearch.SalesId == this.SalesId &&
                      custPackingSlipSearch.RecId != this.RecId;
            SalesInstrumentationLogger logger = SalesInstrumentationLogger::createLogger(tableStr(CustPackingSlipJour));
            SalesPackingSlipInstrumentationActivities activities = SalesPackingSlipInstrumentationActivities::newFromLogger(logger);

            using (var activityContext = activities.update(this))
            {
                if (custPackingSlipSearch)
                {
                    logger.logStackTrace(strFmt('@SCM:SalesPackingSlipInstrumentationDuplicateError',
                        custPackingSlipSearch.PackingSlipId,
                        custPackingSlipSearch.SalesId));
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::SalesId, custPackingSlipSearch.SalesId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::PackingSlipId, custPackingSlipSearch.PackingSlipId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::Printed, strFmt('%1', custPackingSlipSearch.Printed));
                }                
                super();
            }
        }
        else
        {
            super();
        }

        this.SysExtensionSerializerMap::postUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (CustPackingSlipJourOnInsertInstrumentationFlight::instance().isEnabled())
        {
            SalesInstrumentationLogger logger = SalesInstrumentationLogger::createLogger(tableStr(CustPackingSlipJour));
            SalesPackingSlipInstrumentationActivities activities = SalesPackingSlipInstrumentationActivities::newFromLogger(logger);

            using (var activityContext = activities.delete(this))
            {
                if (!this.PackingSlipId)
                {
                    logger.logInformation(strFmt('@SCM:SalesPackingSlipInstrumentationProformaDeleteInfo', this.SalesId));
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::SalesId, this.SalesId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::PackingSlipId, this.PackingSlipId);
                    activityContext.addCustomProperty(SalesPackingSlipInstrumentationActivities::Printed, strFmt('%1', this.Printed));
                }
                super();
            }
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(SalesId _salesId)
    {
        return _salesId && (select custPackingSlipJour
                            where custPackingSlipJour.SalesId == _salesId
                           ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromCustPackingSlipTrans</Name>
				<Source><![CDATA[
    static CustPackingSlipJour findFromCustPackingSlipTrans(SalesId         _salesId,
                                                            PackingSlipId   _packingSlipId,
                                                            TransDate       _packingslipDate,
                                                            boolean         _update = false)
    {
        CustPackingSlipJour  custPackingSlipJour;

        if (_packingSlipId)
        {
            custPackingSlipJour.selectForUpdate(_update);

            select firstonly custPackingSlipJour
                where custPackingSlipJour.SalesId       == _salesId
                   && custPackingSlipJour.PackingSlipId == _packingSlipId
                   && custPackingSlipJour.DeliveryDate  == _packingslipDate;
        }

        return custPackingSlipJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static CustPackingSlipJour findRecId(RecId   _recId,
                                         boolean _update = false)
    {
        CustPackingSlipJour custPackingSlipJour;

        custPackingSlipJour.selectForUpdate(_update);

        select firstonly custPackingSlipJour
                index hint recid
            where custPackingSlipJour.RecId     == _recId;

        return custPackingSlipJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyUpdateServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs an intercompany update of the packing slip on the server.
    /// </summary>
    /// <param name="_packedCustPackingSlipJour">
    /// A packed <c>CustPackingSlipJour</c> record.
    /// </param>
    /// <returns>
    /// Empty container to match the <c>runTableMethodIL</c> signature.
    /// </returns>
    private static container interCompanyUpdateServer(container _packedCustPackingSlipJour)
    {
        CustPackingSlipJour custPackingSlipJour;
        [custPackingSlipJour] = _packedCustPackingSlipJour;
        custPackingSlipJour.interCompanyUpdate();
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPackingSlipId_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to create a lookup for the Packing slip field on the SalesEditLines form.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The control for which the lookup is being created.
    /// </param>
    /// <param name="_query">
    /// The Query to be applied while creating the lookup.
    /// </param>
    public static void lookupPackingSlipId_W(Object _lookupCtrl,
                                                    Query  _query)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(CustPackingSlipJour),
                                                                      _lookupCtrl);

        sysTableLookup.addLookupfield(fieldNum(CustPackingSlipJour, PackingSlipId));
        sysTableLookup.addLookupfield(fieldNum(CustPackingSlipJour, SalesId));
        sysTableLookup.addLookupfield(fieldNum(CustPackingSlipJour, DeliveryDate));
        sysTableLookup.addLookupfield(fieldNum(CustPackingSlipJour, LedgerVoucher));
        sysTableLookup.parmQuery(_query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryPackingSlipIdForUpdate_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to create a Query that will be used to perform a lookup on Packing slip field on the SalesEditLines form.
    /// </summary>
    /// <param name="_parmId">
    /// ParmId of the unposted transaction.
    /// </param>
    /// <param name="_salesId">
    /// SalesId of the unposted transaction.
    /// </param>
    /// <param name="_tradeLineRefId">
    /// TableRefId of the unposted transaction.
    /// </param>
    /// <param name="_useSummaryRange">
    /// Boolean value indicating whether to use summary range or not.
    /// </param>
    /// <returns>
    /// A query that is used to filter the lookup.
    /// </returns>
    public static Query queryPackingSlipIdForUpdate_W(ParmId         _parmId,
                                                      SalesId        _salesId,
                                                      TradeLineRefId _tradeLineRefId,
                                                      boolean        _useSummaryRange = true)
    {
        Query                query = new Query();
        QueryBuildDataSource qBd   = query.addDataSource(tableNum(CustPackingSlipJour)).addDataSource(tableNum(CustPackingSlipSalesLink));
        Range                range = _salesId;
        SalesParmSubTable    salesParmSubTable;

        if (_useSummaryRange)
        {
            while select OrigSalesId from salesParmSubTable
                where salesParmSubTable.TableRefId  == _tradeLineRefId &&
                      salesParmSubTable.ParmId      == _parmId         &&
                      salesParmSubTable.OrigSalesId != _salesId
            {
                range = queryRangeConcat(range, salesParmSubTable.OrigSalesId);
            }
        }

        qBd.relations(true);
        qBd.joinMode(JoinMode::ExistsJoin);
        qBd.addRange(fieldNum(CustPackingSlipSalesLink, OrigSalesId)).value(range);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryPackingSlipStorno_LT</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to provide a query to be used to perform a lookup on Packing slip numbering field on the SalesEditLines form while posting a packing slip.
    /// The lookup provides a list of all packing slips that are being updated with the current packing slip whose PackingSlipStatus_LT field is not set to Broken or Cancelled.
    /// </summary>
    /// <returns>
    /// A query to be used for Packing slip lookup.
    /// </returns>
    public static Query queryPackingSlipStorno_LT()
    {
        Query                query = new Query();
        QueryBuildDataSource qBd   = query.addDataSource(tableNum(CustPackingSlipJour));

        qBd.addRange(fieldNum(CustPackingSlipJour,
                              PackingSlipNumberingCode_LT)).value(SysQuery::valueNotEmptyString());
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSourceDocumentHeader</Name>
				<Source><![CDATA[
    private void updateSourceDocumentHeader(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId)
    {
        ttsbegin;
        SourceDocumentHeader sourceDocumentHeader = SourceDocumentHeader::find(_sourceDocumentHeaderRecId, true);

        sourceDocumentHeader.TypeEnumName = enumStr(SourceDocument_ProductShipment);
        sourceDocumentHeader.TypeEnumValue = SourceDocument_ProductShipment::ProductShipment;
        sourceDocumentHeader.AccountingStatus = SourceDocumentAccountingStatus::Completed;
        sourceDocumentHeader.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>carrierServiceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the carrier service code based on the delivery mode of the current packing slip journal.
    /// </summary>
    /// <returns>
    /// The carrier service code to display, if any, the empty string otherwise.
    /// </returns>
    public display TMSCarrierServiceCode carrierServiceCode()
    {
        return TMSCarrierService::findByDlvModeId(this.DlvMode).CarrierServiceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>carrierCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the carrier code based on the delivery mode of the current packing slip journal.
    /// </summary>
    /// <returns>
    /// The carrier code to display, if any, the empty string otherwise.
    /// </returns>
    public display TMSCarrierCode carrierCode()
    {
        return TMSCarrierService::findByDlvModeId(this.DlvMode).CarrierCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBillOfLadingId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the field BillOfLadingId.
    /// </summary>
    public void updateBillOfLadingId(WMSBillOfLadingId _billOfLadingId)
    {
        ttsbegin;
        this.selectForUpdate(true);
        this.BillOfLadingId = _billOfLadingId;
        this.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>intercompanyDirectDelivery</Name>
				<Source><![CDATA[
    public boolean intercompanyDirectDelivery()
    {
        return this.InterCompanyCompanyId && this.InterCompanyPurchId
               && this.interCompanyDoExternalPosting();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDummySourceDocumentHeader</Name>
				<Source><![CDATA[
    private void createDummySourceDocumentHeader()
    {
        if (!this.SourceDocumentHeader)
        {
            SystemSequence systemSequence = new SystemSequence();
            
            try
            {
                systemSequence.suspendRecIds(tableNum(SourceDocumentHeader));
                this.SourceDocumentHeader = systemSequence.reserveValues(1, tableNum(SourceDocumentHeader));
            }
            finally
            {
                if (systemSequence)
                {
                    systemSequence.removeRecIdSuspension(tableNum(SourceDocumentHeader));
                }
            }

            if (!this.SourceDocumentHeader)
            {
                throw error('@SCM:ZeroRecIdOfSourceDocumentHeader');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>intercompanyCustPackingSlipTrans</Name>
				<Source><![CDATA[
    private CustPackingSlipTrans intercompanyCustPackingSlipTrans(InventTransId _inventTransId)
    {
        CustPackingSlipTrans    custPackingSlipTrans;

        changecompany(this.DataAreaId)
        {
            select forceplaceholders InventQty from custPackingSlipTrans 
                order by RecId desc
                where custPackingSlipTrans.InventTransId == _inventTransId;
        }
                            
        return custPackingSlipTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124458</DeveloperDocumentation>
	<FormRef>CustPackingSlipJournal</FormRef>
	<Label>@SYS10319</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PackingSlipId</TitleField1>
	<TitleField2>InvoiceAccount</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SourceDocumentHeaderIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TransportationDocument</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TransportationDocument</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustPackingSlipBackorderLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustPackingSlipBackorderLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustPackingSlipSalesLink</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustPackingSlipSalesLink</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustPackingSlipTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustPackingSlipTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SourceDocumentHeader</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SourceDocumentHeader</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS9362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>deliveryAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AddressDisplay</Name>
			<Label>@SYS9362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>deliveryAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BillOfLading</Name>
			<Label>@SYS50700</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOLCarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOLAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOLPackageAppearance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOLFreightedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CancelReason</Name>
			<Label>@SYS114149</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonTableRef_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CarrierInfo</Name>
			<Label>@SYS50722</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierDeliveryContact</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierEmail</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS302</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Data</Name>
			<Label>@SYS7403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeliverySummary</Name>
			<Label>@SYS22058</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntrastatDispatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ListCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Intercompany</Name>
			<Label>@SYS74106</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterCompanyPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterCompanyPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventProfile_RU</Name>
			<Label>@GLS113769</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventProfileType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoiceAddress</Name>
			<Label>@SYS58074</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoicingName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>invoicingAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoiceIssueDueDate_W</Name>
			<Label>@SYS4009629</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceIssueDueDate_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingSlip</Name>
			<Label>@SYS11549</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceIssueDueDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightSlipType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightSlipNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsCW</Name>
			<Label>@PDS72</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrinSite</Name>
			<Label>@SYS110380</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintMgmtSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintingSpecifications</Name>
			<Label>@SYS28138</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Printed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnPackingSlip</Name>
			<Label>@SYS117832</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesOrder</Name>
			<Label>@SYS9694</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerSalesTaker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnItemNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StateNumbering</Name>
			<Label>@GLS112826</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintBlankDate_LT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipNumberingCode_LT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TermsOfDelivery</Name>
			<Label>@SYS6576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportationShip</Name>
			<Label>@SYS333054</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Compiler</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalPackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationDeliveryLoader</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationDeliveryOwner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationDeliveryContractor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PostState</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostedState</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxRegistration</Name>
			<Label>@AccountsReceivable:TaxRegistrationNumberTab</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<Label>@SYS22016</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BillOfLadingId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSBillOfLadingId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOLAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ConfigurationKey>SalesShipments</ConfigurationKey>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOLCarrierName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCarrierName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOLFreightedBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSFreightedBy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOLPackageAppearance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSPackageAppearance</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Compiler</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>LT</CountryRegionCodes>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomerRef</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustRef</ExtendedDataType>
			<Label>@SYS12056</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesShippingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustName</ExtendedDataType>
			<Label>@SYS22058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@SYS135456</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustDlvModeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvReasonId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustDlvTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS5280</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExportReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesExportReason</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightSlipNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FreightSlipNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FreightSlipType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesFreightSlipType</ExtendedDataType>
			<EnumType>FreightSlipType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InterCompanyCompanyId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InterCompanyCompanyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS75317</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InterCompanyPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InterCompanyPurchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPurchId</ExtendedDataType>
			<Label>@SYS75319</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InternalPackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesInternalPackingSlipId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntrastatDispatch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatDispatchId</ExtendedDataType>
			<FeatureClass>IntrastatDispatchIdToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>IntrastatFulfillmentDate_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatFulfillmentDate_HU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesInventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventProfileType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventProfileType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustInvoiceAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceIssueDueDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceIssueDueDate_W</ExtendedDataType>
			<FeatureClass>InvoiceIssueDueDateToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoicePostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoicingName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustName</ExtendedDataType>
			<Label>@SYS58518</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustLanguageId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ListCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ListcodeId</ExtendedDataType>
			<FeatureClass>EUSalesListToggle</FeatureClass>
			<EnumType>Listcode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberSequenceGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberSequenceGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OffSessionId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>OffSessionId_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackingSlipId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingSlipNumberingCode_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LtDocNumberingCode</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintBlankDate_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>LT,LV</CountryRegionCodes>
			<ExtendedDataType>LtPrintBlankDate</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Printed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS14358</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrintMgmtSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS110380</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchaseOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPurchaseOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonTableRef_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RefNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9941</Label>
			<EnumType>RefNum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnItemNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnItemNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnPackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnPackingSlipId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesIdBase</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SalesType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShipCarrierBlindShipment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierBlindShipment</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierDeliveryContact</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierEmail</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierPhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransportationDeliveryContractor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TransportationPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransportationDeliveryLoader</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TransportationPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransportationDeliveryOwner</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TransportationPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransportationDocument</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransportationDocumentRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Volume</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerSalesTaker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesTaker</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankLCExportLine</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostedState</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>SalesFastPrintSalesOrderFeature</FeatureClass>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>JournalPostedState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyTaxID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FinTag</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FinTagRecId</ExtendedDataType>
			<FeatureClass>SalesOrderFinTagFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesIdDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PackingSlipIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PackingSlipId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OrderAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackingSlipId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerVoucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Compiler</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceDocumentHeaderIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DeliveryPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvoicePostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InvoicePostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PackingSlipForSaleIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendAccountMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Num</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendPackingSlipRegistration</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
					<MapFieldTo>DeliveryName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>DeliveryPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipId</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipNumberingCode_LT</MapField>
					<MapFieldTo>PackingSlipNumberingCode_LT</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipRegister_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipStatus_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId</MapField>
					<MapFieldTo>SalesId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
					<MapFieldTo>LedgerVoucher</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>FormletterJournal</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>OrderId</MapField>
					<MapFieldTo>SalesId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InternalJournalId</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroup</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchrateSecondary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Triangulation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RoundOff</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InterCompanyJour</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InterCompanyCompanyId</MapField>
					<MapFieldTo>InterCompanyCompanyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InterCompanyId</MapField>
					<MapFieldTo>InterCompanyPurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentNum</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventTrackingCustJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ContactPersonId</MapField>
					<MapFieldTo>ContactPersonId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustAccount</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomerRef</MapField>
					<MapFieldTo>CustomerRef</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>DeliveryPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostingDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesId</MapField>
					<MapFieldTo>SalesId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendInvoiceJour</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AttorneyDate_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AttorneyId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AttorneyIssuedName_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CashDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CashDiscBaseDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CashDiscCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CashDiscDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConsigneeAccount_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConsignorAccount_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ConsInvoice_JP</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Correct_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CorrectedInvoiceDate_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CorrectedInvoiceId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryDate_ES</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryName_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DueDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDisc_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRateSecondary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FacturedFully_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureModule_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FixedDueDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>GroupId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InclTax</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntrastatFulfillmentDate_HU</MapField>
					<MapFieldTo>IntrastatFulfillmentDate_HU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileType_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceAccount</MapField>
					<MapFieldTo>InvoiceAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceAmountMST_JP</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceAmountMST_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
					<MapFieldTo>DeliveryDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceNum</MapField>
					<MapFieldTo>PackingSlipId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceRegister_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceStatus_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LanguageId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerVoucher</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MCRPaymOrderID</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NonRealRevenue_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Num</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceCode_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroupId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffSessionId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OneTimeAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymDayId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Payment</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymentSched</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostingProfile</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Prepayment</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PrintCopies_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PrintOriginals_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PrintStandardCurrency_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Proforma</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchInternalInvoiceId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RoundOff_W</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesInvoicePostingType_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesOrderbalance</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDocumentHeader_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SumTax</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Triangulation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitedVATInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Updated</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATOnPayment_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendPaymentGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>WhoIsAuthor_LT</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InclTax</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyTaxId</MapField>
					<MapFieldTo>PartyTaxID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxId</MapField>
					<MapFieldTo>TaxID</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<SourceEDT>ContactPersonId</SourceEDT>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContactPersonId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Contractor_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TransportationDeliveryParty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Contractor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationDeliveryContractor</Name>
					<Field>TransportationDeliveryContractor</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddress_CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvReason</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvReason</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvReason</Name>
					<Field>DlvReason</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTerm</Name>
					<Field>DlvTerm</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Worker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Compiler</Name>
					<Field>Compiler</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InterCompanyDataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InterCompanyDataArea</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyCompanyId</Name>
					<Field>InterCompanyCompanyId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventLocationId</Name>
					<Field>inventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InvoiceCustomer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InvoiceCustomer</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAccount</Name>
					<SourceEDT>CustInvoiceAccount</SourceEDT>
					<Field>InvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InvoicePostalAddress_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddress_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddress_1_CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoicePostalAddress</Name>
					<Field>InvoicePostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile_Extern</Name>
					<RelatedField>LabelFile</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Loader_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TransportationDeliveryParty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Loader</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationDeliveryLoader</Name>
					<Field>TransportationDeliveryLoader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NumberSequenceGroup</Name>
					<Field>NumberSequenceGroup</Field>
					<RelatedField>numberSequenceGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>groupId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OfficialsTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OfficialsTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OfficialsTrans_RU</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>CustPackingSlipJour</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffSessionId_RU</Name>
					<SourceEDT>OffSessionId_RU</SourceEDT>
					<Field>OffSessionId_RU</Field>
					<RelatedField>OffSessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OrderCustomer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OrderCustomer</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>OrderAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Owner_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TransportationDeliveryParty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Owner</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationDeliveryOwner</Name>
					<Field>TransportationDeliveryOwner</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PrintSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PrintMgmtSiteId</Name>
					<Field>PrintMgmtSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonTableRef_BR</Name>
					<Field>ReasonTableRef_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesCarrier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesCarrier</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOLCarrierName</Name>
					<Field>BOLCarrierName</Field>
					<RelatedField>CarrierName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CarrierNameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesPackageAppearance</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesPackageAppearance</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOLPackageAppearance</Name>
					<Field>BOLPackageAppearance</Field>
					<RelatedField>PackageAppearance</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PackageAppearanceIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ShipCarrierTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ShipCarrierTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCarrierId</Name>
					<Field>ShipCarrierId</Field>
					<RelatedField>CarrierId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentHeader</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SourceDocumentHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentHeader</Name>
					<Field>SourceDocumentHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransportationDocument</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TransportationDocument</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationDocument</Name>
					<Field>TransportationDocument</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSBillOfLading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSBillOfLading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BillOfLadingId</Name>
					<Field>BillOfLadingId</Field>
					<RelatedField>billOfLadingId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkerSalesTaker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerSalesTaker</Name>
					<Field>WorkerSalesTaker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankLCExportLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankLCExportLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankLCExportLine</Name>
					<Field>BankLCExportLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistration_CustPackingSlipJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxID</Name>
					<Field>TaxID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyTaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PartyTaxRegistration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistration_CustPackingSlipJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyTaxID</Name>
					<Field>PartyTaxID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FinTag</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FinTag</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FinTag</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustPackingSlipJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FinTag</Name>
					<Field>FinTag</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>