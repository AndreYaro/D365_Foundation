<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailAffiliation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailAffiliation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        /// <summary>
    /// Finds the affiliation or the loyalty program by record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// The flag indicating whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record found.
    /// </returns>
    public static RetailAffiliation find(RefRecId _recId, boolean _forUpdate = false)
    {
        RetailAffiliation retailAffiliation;

        retailAffiliation.selectForUpdate(_forUpdate);
        select retailAffiliation where retailAffiliation.RecId == _recId;
        return retailAffiliation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
        /// <summary>
    /// Finds the affiliation or the loyalty program by name.
    /// </summary>
    /// <param name="_name">
    /// The name.
    /// </param>
    /// <param name="_forUpdate">
    /// The flag indicating whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record found.
    /// </returns>
    public static RetailAffiliation findByName(RetailAffiliationName _name, boolean _forUpdate = false)
    {
        RetailAffiliation retailAffiliation;
        if (_name)
        {
            retailAffiliation.selectForUpdate(_forUpdate);
            select retailAffiliation where retailAffiliation.Name == _name;
        }

        return retailAffiliation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefForLoyaltyGroup</Name>
				<Source><![CDATA[
        /// <summary>
    /// Opens the <c>RetailLoyaltyPrograms</c> form for the current <c>RetailAffiliation</c> record.
    /// </summary>
    /// <param name="_loyaltyGroup">
    /// A <c>RetailAffiliation</c> record.
    /// </param>
    public static void jumpRefForLoyaltyGroup(RetailAffiliation _loyaltyGroup)
    {
        Args args = new Args();
        MenuFunction mf = new MenuFunction(menuitemDisplayStr(RetailLoyaltyPrograms), MenuItemType::Display);

        if (_loyaltyGroup.RecId)
        {
            args.record(_loyaltyGroup);
            args.lookupRecord(_loyaltyGroup);
        }
        mf.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        /// <summary>
    /// Validates if an affiliation exists either on open sales order or an active sales quotation.
    /// </summary>
    /// <returns>
    /// Returns false if an affiliation is used in a sales order.
    /// </returns>
    public boolean validateDelete()
    {
        boolean ret;
        
        ret = super();

        // Restricts deletion of affiliation on sales orders.
        if (ret && RetailAffiliation::existsOnSalesOrder(this.RecId))
        {
            ret = checkFailed(strFmt("@Retail:DeleteOnSOAffiliationNotAllowed", this.Name));            
        }       
        // Restricts deletion of affiliation on sales quotation.
        else if (ret && RetailAffiliation::existsOnSalesQuotation(this.RecId))
        {
            ret = checkFailed(strFmt("@Retail:DeleteOnQuotationAffiliationNotAllowed", this.Name));            
        }
                
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsOnSalesQuotation</Name>
				<Source><![CDATA[
        /// <summary>
    /// Returns true if affiliation exist on sales quotation.
    /// </summary>
    /// </param>
    /// <param name="_affiliation">
    /// The affiliation recId.
    /// </param>
    static boolean existsOnSalesQuotation(RecId  _affiliation)
    {
        RetailSalesQuotationAffiliation retailSalesQuotationAffiliation;
        
        if (!_affiliation)
        {
            return false;
        }

        return (select firstonly RecId, Affiliation from retailSalesQuotationAffiliation
                    index SalesQuotationAffiliationLoyaltyIdx
                    where retailSalesQuotationAffiliation.Affiliation == _affiliation).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsOnSalesOrder</Name>
				<Source><![CDATA[
        /// <summary>
    /// Returns true if affiliation exist on sales order.
    /// </summary>
    /// </param>
    /// <param name="_affiliation">
    /// The affiliation recId.
    /// </param>
    static boolean existsOnSalesOrder(RecId  _affiliation)
    {
        RetailSalesAffiliation  retailSalesAffiliation;

        if (!_affiliation)
        {
            return false;
        }

        return (select firstonly RecId, Affiliation from retailSalesAffiliation
                    index SalesAffiliationLoyaltyIdx
                        where retailSalesAffiliation.Affiliation == _affiliation).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX59</DeveloperDocumentation>
	<FormRef>RetailAffiliations</FormRef>
	<Label>@REX58</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>AffiliationType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>CommerceCustomers</Modules>
	<ReplacementKey>AffiliationIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AffiliationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AffiliationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PoolRelatedCards</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AffiliationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailAffiliationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAffiliationName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PoolRelatedCards</Name>
			<ExtendedDataType>RetailLoyaltyPoolRelatedCards</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HideInChannels</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailHideInChannelsEdt</ExtendedDataType>
			<EnumType>NoYesCombo</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AffiliationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>