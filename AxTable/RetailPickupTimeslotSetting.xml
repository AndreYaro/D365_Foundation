<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPickupTimeslotSetting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailPickupTimeslotSetting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getIntervalHours</Name>
				<Source><![CDATA[
    public edit RetailPickupTimeslotIntervalHour getIntervalHours(boolean _set, RetailPickupTimeslotSetting _setting, int _value)
    {
        int curHours = _setting.Interval / RetailPickupTimeslotDefaultValues::getMinutesPerHour();
        if (_set)
        {
            _setting.Interval = _setting.Interval
                - ( curHours * RetailPickupTimeslotDefaultValues::getMinutesPerHour())
                + ( _value * RetailPickupTimeslotDefaultValues::getMinutesPerHour());
            return _value;
        }
        return curHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIntervalMinutes</Name>
				<Source><![CDATA[
    public edit RetailPickupTimeslotIntervalMinute getIntervalMinutes(boolean _set, RetailPickupTimeslotSetting _setting, int _value)
    {
        int curMinutes = _setting.Interval MOD RetailPickupTimeslotDefaultValues::getMinutesPerHour();
        if (_set)
        {
            _setting.Interval = _setting.Interval - curMinutes + _value;
            return _value;
        }
        return curMinutes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the line number of next record in <c>RetailPickupTimeslotSetting</c> table.
    /// </summary>
    /// <param name = "_templateId">
    /// The template ID of the selected RetailPickupTimeslotTemplate.
    /// </param>
    /// <returns>
    /// The line number of the next record.
    /// </returns>
    public static LineNum nextLineNum(RefRecId _templateId)
    {
        RetailPickupTimeslotSetting timeslotSetting;

        select maxof(LineNum) from timeslotSetting
            where timeslotSetting.TimeslotTemplateId == _templateId;

        return timeslotSetting.LineNum + 1.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeHoursDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display for the column of active hours which has the format of "08:00 - 17:00".
    /// </summary>
    /// <returns>
    /// Format of the "08:00 - 17:00".
    /// </returns>
    public display RetailPickupTimeslotActiveHours activeHoursDisplay()
    {
        return this.formatTimeslotRange(this.StartTime, this.EndTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeDaysDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display for the column of active days which indicates all the active days for the timeslot in one column.
    /// </summary>
    /// <returns>
    /// Shown with the format of "Mo,Tu,Th"
    /// </returns>
    public display RetailPickupTimeslotActiveDays activeDaysDisplay()
    {
        return this.formatTimeslotActiveDays();
    }

]]></Source>
			</Method>
			<Method>
				<Name>timeslotIntervalDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display for the column of timeslot interval which has the format of "00 Hr: 00 Min".
    /// </summary>
    /// <returns>
    /// Format of "00 Hr: 00 Min".
    /// </returns>
    public display RetailPickupTimeslotActiveInterval timeslotIntervalDisplay()
    {
        return this.formatTimeslotInterval(this.Interval);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatTimeslotActiveDays</Name>
				<Source><![CDATA[
    /// <summary>
    /// Format the display active days according to the day which is actived.
    /// The days actived should be displaied in one column in short format.
    /// Such as "Mo, Tu" if Monday and Tuesday are actived.
    /// </summary>
    /// <returns>
    /// RetailPickupTimeslotActiveDays
    /// </returns>
    private RetailPickupTimeslotActiveDays formatTimeslotActiveDays()
    {
        RetailPickupTimeslotActiveDays activeDays = "";
        if (this.ActiveOnMonday)
        {
            activeDays += "@Retail:RetailPickuptimeslotMondayShort";
        }

        if (this.ActiveOnTuesday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotTuesdayShort";
        }

        if (this.ActiveOnWednesday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotWednesdayShort";
        }

        if (this.ActiveOnThursday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotThursdayShort";
        }

        if (this.ActiveOnFriday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotFridayShort";
        }

        if (this.ActiveOnSaturday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotSaturdayShort";
        }

        if (this.ActiveOnSunday)
        {
            activeDays += this.formatActiveDays(activeDays) + "@Retail:RetailPickuptimeslotSundayShort";
        }

        return activeDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatActiveDays</Name>
				<Source><![CDATA[
    private str formatActiveDays(RetailPickupTimeslotActiveDays activeDays)
    {
        return strLen(activeDays) == 0 ? "" : ",";
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatTimeslotInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Format the intervals into specific format as "00 Hr: 00 Min".
    /// </summary>
    /// <param name = "_timeslotInterval">
    /// Interval for timeslot.
    /// </param>
    /// <returns>
    /// RetailPickupTimeslotActiveInterval
    /// </returns>
    private RetailPickupTimeslotActiveInterval formatTimeslotInterval(int _timeslotInterval)
    {
        int hours = _timeslotInterval / RetailPickupTimeslotDefaultValues::getMinutesPerHour();
        int mins = _timeslotInterval MOD RetailPickupTimeslotDefaultValues::getMinutesPerHour();

        return strFmt("@Retail:RetailPickupTimeslotInterval", System.String::Format("@Retail:RetailPickupTimeslotDayTimeFormat", hours), System.String::Format("@Retail:RetailPickupTimeslotDayTimeFormat", mins));
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatTimeslotRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Format the display for the active hours.
    /// Transfer the time into given format e.g. "08:00 PM".
    /// Format the diplay for the column into {Start Time} - {End Time}.
    /// </summary>
    /// <param name = "_startTime">Start Time</param>
    /// <param name = "_endTime">End Time</param>
    /// <returns>
    /// RetailPickupTimeslotActiveHours
    /// </returns>
    private RetailPickupTimeslotActiveHours formatTimeslotRange(RetailPickupTimeslotStartTime _startTime, RetailPickupTimeslotEndTime _endTime)
    {
        str startTime = this.timeToStrHourMinute(_startTime);
        str endTime = this.timeToStrHourMinute(_endTime);

        return strFmt("@Retail:RetailPickupTimeslotActiveHours", startTime, endTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>timeToStrHourMinute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfer the time into the format "08:00PM".
    /// </summary>
    /// <param name = "_time">Time</param>
    /// <returns>
    /// Formatted str of time
    /// </returns>
    private str timeToStrHourMinute(TimeOfDay _time)
    {
        str timeStr = strUpr(time2Str(_time, TimeSeparator::Colon, TimeFormat::Hour24));
        str timeStrHM = subStr(timeStr, 0, 5) + subStr(timeStr, 9, strLen(timeStr) - 8);

        return timeStrHM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.LineNum)
        {
            this.LineNum = RetailPickupTimeslotSetting::nextLineNum(this.TimeslotTemplateId);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ret = super();

        if (ret)
        {
            ret = RetailPickupTimeslotHandler::validateTimeslotDateRange(this.StartDate, this.EndDate);
        }

        if (ret)
        {
            ret = RetailPickupTimeslotHandler::validateTimeslotTimeRange(this.StartTime, this.EndTime);
        }

        if (ret)
        {
            RetailPickupTimeslotSettingTmp settingTmp = this.createSettingTempTable();
            ret = RetailPickupTimeslotHandler::validateTimeslotDateRangeOverlap(this.RecId, settingTmp);
        }

        if (ret)
        {
            ret = RetailPickupTimeslotHandler::validateTimeslotInterval(this.Interval, this.StartTime, this.EndTime);
        }

        if (ret)
        {
            ret = RetailPickupTimeslotHandler::validateTimeslotCapacity(this.CapacityPerInterval);
        }

        if (ret)
        {
            ret = RetailPickupTimeslotHandler::validateActiveDays(this);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSettingTempTable</Name>
				<Source><![CDATA[
    private RetailPickupTimeslotSettingTmp createSettingTempTable()
    {
        RetailPickupTimeslotSettingTmp timeslotSettingTmp;
        ttsbegin;
        timeslotSettingTmp.TimeslotTemplateId = this.TimeslotTemplateId;
        timeslotSettingTmp.DlvMode = this.DlvMode;
        timeslotSettingTmp.StartDate = this.StartDate;
        timeslotSettingTmp.EndDate = this.EndDate;
        timeslotSettingTmp.StartTime = this.StartTime;
        timeslotSettingTmp.EndTime = this.EndTime;
        timeslotSettingTmp.ActiveOnMonday = this.ActiveOnMonday;
        timeslotSettingTmp.ActiveOnTuesday = this.ActiveOnTuesday;
        timeslotSettingTmp.ActiveOnWednesday = this.ActiveOnWednesday;
        timeslotSettingTmp.ActiveOnThursday = this.ActiveOnThursday;
        timeslotSettingTmp.ActiveOnFriday = this.ActiveOnFriday;
        timeslotSettingTmp.ActiveOnSaturday = this.ActiveOnSaturday;
        timeslotSettingTmp.ActiveOnSunday = this.ActiveOnSunday;
        timeslotSettingTmp.insert();
        ttscommit;
        return timeslotSettingTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.StartTime = RetailPickupTimeslotDefaultValues::getDefaultStartTime();
        this.EndTime = RetailPickupTimeslotDefaultValues::getDefaultEndTime();
        this.CapacityPerInterval = RetailPickupTimeslotDefaultValues::getDefaultCapacityPerInterval();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailPickupTimeslotSettingDocument</DeveloperDocumentation>
	<Label>@Retail:RetailPickupTimeslotSettingLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ActiveDaysInfo</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActiveOnMonday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnTuesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnWednesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnThursday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnFriday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnSaturday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveOnSunday</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TimeRangeInfo</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GeneralInfo</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllSettingInfo</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>activeHoursDisplay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>timeslotIntervalDisplay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CapacityPerInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>activeDaysDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CapacityGroup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IntervalInfo</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>getIntervalHours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>getIntervalMinutes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TimeslotTemplateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotStartDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotEndDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>StartTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotStartTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>EndTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotEndTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvModeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Interval</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CapacityPerInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotCapacityPerInterval</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnMonday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotMondayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnTuesday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotTuesdayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnWednesday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotWednesdayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnThursday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotThursdayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnFriday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotFridayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnSaturday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotSaturdayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActiveOnSunday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPickupTimeslotSundayActiveType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailPickupTimeslotSettingIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TimeslotTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPickupTimeslotTemplateRelation</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>RetailPickupTimeslotTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TimeslotTemplateId</Name>
					<Field>TimeslotTemplateId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<RelatedTable>DlvMode</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>