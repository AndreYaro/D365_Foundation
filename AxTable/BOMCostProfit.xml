<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCostProfit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOMCostProfit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcSalesMarkup</Name>
				<Source><![CDATA[
    static InventSalesMarkup calcSalesMarkup(
        CostMarkup          costMarkup,
        CostProfitSet       profitSet,
        CostGroupId         costGroup
        )
    {
        return BOMCostProfit::calcSalesPrice(costMarkup,profitSet,costGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcSalesPrice</Name>
				<Source><![CDATA[
    static InventSalesPrice calcSalesPrice(
        CostPrice           costPrice,
        CostProfitSet       profitSet,
        CostGroupId         costGroup
        )
    {
        return costPrice * BOMCostProfit::find(costGroup,profitSet).ProfitPct / 100 + costPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(CostGroupId          _costGroup,
                         CostProfitSet    _profitSet )
    {
        return _costGroup && (select bomCostProfit
                    where bomCostProfit.CostGroupId   == _costGroup  &&
                          bomCostProfit.ProfitSet     == _profitSet
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static BOMCostProfit find(CostGroupId        _costGroup,
                                 CostProfitSet      _profitSet,
                                 boolean            _forUpdate = false)
    {
        BOMCostProfit bomCostProfit;
        bomCostProfit.selectForUpdate(_forUpdate);

        if (_costGroup)
            select bomCostProfit
                where bomCostProfit.CostGroupId   == _costGroup  &&
                      bomCostProfit.ProfitSet     == _profitSet ;

        return bomCostProfit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124109</DeveloperDocumentation>
	<Label>@SYS9311</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CostGroupId</TitleField1>
	<TitleField2>ProfitSet</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CostSetIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CostSetIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Profit</Name>
			<Label>@SYS20010</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfitPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProfitPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostProfitPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProfitSet</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CostProfitSet</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CostSetIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CostGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProfitSet</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SetCostIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProfitSet</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOMCostGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMCostGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostGroupId</Name>
					<Field>CostGroupId</Field>
					<RelatedField>CostGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CostGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>