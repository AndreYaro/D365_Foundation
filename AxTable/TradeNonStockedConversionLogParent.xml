<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeNonStockedConversionLogParent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TradeNonStockedConversionLogParent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parentName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the table to which the <c>TradeNonStockedConversionLogParent</c> record is
    /// related.
    /// </summary>
    /// <returns>
    /// The name of the related table.
    /// </returns>
    public display TradeNonStockedConversionLogParentName parentName()
    {
        TradeNonStockedConversionLogParentName parentName;
        if (this.IdentifyingTable)
        {
            parentName = tableid2pname(this.IdentifyingTable);
        }

        return parentName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TradeNonStockedConversionLogParent</c> table.
    /// </summary>
    /// <param name="_logParentRecId">
    ///    The ID of the <c>TradeNonStockedConversionLogParent</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>TradeNonStockedConversionLogParent</c> table; otherwise, an empty record.
    /// </returns>
    static public TradeNonStockedConversionLogParent find(
        TradeNonStockedConversionLogParentRecId _logParentRecId,
        boolean                                 _forUpdate = false)
    {
        TradeNonStockedConversionLogParent  tradeNonStockedConversionLogParent;
        if (_logParentRecId)
        {
            tradeNonStockedConversionLogParent.selectForUpdate(_forUpdate);
            select firstonly tradeNonStockedConversionLogParent
                where tradeNonStockedConversionLogParent.RecId == _logParentRecId;
        }
        return tradeNonStockedConversionLogParent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findIdentifying</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TradeNonStockedConversionLogParent</c> table.
    /// </summary>
    /// <param name="_identifyingTable">
    ///   The ID of the identifying table.
    /// </param>
    /// <param name="_identifyingAttributeValue">
    ///    The identifying attribute value of the <c>TradeNonStockedConversionLogParent</c> record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>TradeNonStockedConversionLogParent</c> table; otherwise, an empty record.
    /// </returns>
    static public TradeNonStockedConversionLogParent findIdentifying(
        RefTableId                                  _identifyingTable,
        TradeNonStockedIdentifyingAttributeValue    _identifyingAttributeValue)
    {
        TradeNonStockedConversionLogParent tradeNonStockedConversionLogParent;

        if (_identifyingTable)
        {
            select firstonly tradeNonStockedConversionLogParent
                where tradeNonStockedConversionLogParent.IdentifyingTable          == _identifyingTable
                &&    tradeNonStockedConversionLogParent.IdentifyingAttributeValue == _identifyingAttributeValue;
        }

        return tradeNonStockedConversionLogParent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS323644</DeveloperDocumentation>
	<Label>@SYS323640</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>IdentifyingTable</TitleField1>
	<TitleField2>IdentifyingAttributeValue</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentifyingAttributeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentifyingTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identifying</Name>
			<Label>@SYS323616</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentifyingAttributeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentifyingTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentifyingAttributeValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeNonStockedIdentifyingAttributeValue</ExtendedDataType>
			<Label>@SYS323655</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>IdentifyingTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdentifyingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IdentifyingTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IdentifyingAttributeValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>