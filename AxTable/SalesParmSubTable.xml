<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesParmSubTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesParmSubTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustPackingSlipJour</Name>
				<Source><![CDATA[
    void initFromCustPackingSlipJour(CustPackingSlipJour _custPackingSlipJour)
    {
        this.JournalRefTableId = _custPackingSlipJour.TableId;
        this.JournalRefRecId   = _custPackingSlipJour.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesParmTable</Name>
				<Source><![CDATA[
    void  initFromSalesParmTable(SalesParmTable  salesParmTable)
    {
        this.ParmId                 = salesParmTable.ParmId;
        this.TableRefId             = salesParmTable.TableRefId;
        this.initFromSalesTable(salesParmTable.salesTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    void  initFromSalesTable(SalesTable  salesTable)
    {
        this.OrigSalesId        = salesTable.SalesId;
        this.SalesName          = salesTable.SalesName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNonSO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the invoice is associated with a sales order.
    /// </summary>
    /// <returns>
    /// true if the invoice is not associated with a sales order; otherwise, false.
    /// </returns>
    public boolean isNonSO()
    {
        return !this.OrigSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>querySalesParmLine</Name>
				<Source><![CDATA[
    Query querySalesParmLine(boolean _forupdate = false)
    {
        return SysQuery::queryFromTableRelation(this, tableNum(SalesParmLine), _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>querySalesTable</Name>
				<Source><![CDATA[
    Query querySalesTable(boolean _forupdate = false)
    {
        return SysQuery::queryFromTableRelation(this, tableNum(SalesTable), _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesParmTable</Name>
				<Source><![CDATA[
    SalesParmTable  salesParmTable(boolean  _forUpdate = false)
    {
        return SalesParmTable::find(this.ParmId, this.TableRefId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    public SalesTable  salesTable(boolean  _forUpdate = false)
    {
        SalesTable  salesTable;

        if (!this.isNonSO())
        {
            salesTable = SalesTable::find(this.OrigSalesId, _forUpdate);
        }
        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromSalesParmTable</Name>
				<Source><![CDATA[
    static SalesParmSubTable createFromSalesParmTable(SalesParmTable _salesParmTable, boolean _insert = true)
    {
        SalesParmSubTable   salesParmSubTable;
        ttsbegin;

        salesParmSubTable.clear();
        salesParmSubTable.initValue();
        salesParmSubTable.initFromSalesParmTable(_salesParmTable);

        if (_insert)
            salesParmSubTable.insert();

        ttscommit;
        return salesParmSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteIfNoParmLines</Name>
				<Source><![CDATA[
    public static void deleteIfNoParmLines(SalesId origSalesId, ParmId parmId)
    {
        SalesParmLine       salesParmLine;
        SalesParmSubTable   salesParmSubTable;
        SalesShippingStat   salesShippingStat;

        select firstonly salesParmLine
            where salesParmLine.OrigSalesId == origSalesId
                && salesParmLine.ParmId      == parmId;

        if ( !salesParmLine)
        {
            ttsbegin;

            delete_from salesParmSubTable
                where salesParmSubTable.ParmId == parmId
                    && salesParmSubTable.OrigSalesId == origSalesId;

            delete_from salesShippingStat
                where salesShippingStat.ParmId       == parmId
                    && salesShippingStat.OrigSalesId == origSalesId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(ParmId                        _parmId,
                          TradeLineRefId                _tableRefId,
                          SalesId                       _origSalesId,
                          SalesParmSubId                _subId)
    {
        if (_parmId  &&  _tableRefId && _origSalesId)
        {
            return (select firstonly RecId from salesParmSubTable
                        where salesParmSubTable.ParmId                  == _parmId              &&
                              salesParmSubTable.TableRefId              == _tableRefId          &&
                              salesParmSubTable.OrigSalesId             == _origSalesId         &&
                              salesParmSubTable.SubId                   == _subId

                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static SalesParmSubTable find(ParmId                        _parmId,
                                  TradeLineRefId                _tableRefId,
                                  SalesId                       _origSalesId,
                                  SalesParmSubId                _subId,
                                  boolean                       _forUpdate = false)
    {
        SalesParmSubTable  salesParmSubTable;

        if (_parmId && _tableRefId && _origSalesId)
        {
            if (_forUpdate)
                salesParmSubTable.selectForUpdate(_forUpdate);

            select firstonly salesParmSubTable
                where salesParmSubTable.ParmId                  == _parmId              &&
                      salesParmSubTable.TableRefId              == _tableRefId          &&
                      salesParmSubTable.OrigSalesId             == _origSalesId         &&
                      salesParmSubTable.SubId                   == _subId;
        }

        return salesParmSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124534</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS75432</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>OrigSalesId</TitleField1>
	<TitleField2>SalesName</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmTableRefIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>ParmTableRefIdx</PrimaryIndex>
	<ReplacementKey>ParmTableRefIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SalesParmLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SalesParmLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrigSalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigSalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigSalesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesOrderTable</Name>
			<Label>@SYS12847</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesJournalLinkRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>journalRefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesJournalLinkRefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigSalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesIdOrig</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>subId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesParmSubId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmTableRefIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OrigSalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>subId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Common</Name>
			<RelatedTable>Common</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>journalRefTableId</Name>
					<Field>journalRefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalRefRecId</Name>
					<Field>JournalRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesParmTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesParmTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableRefId</Name>
					<Field>TableRefId</Field>
					<RelatedField>TableRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigSalesId</Name>
					<Field>OrigSalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>