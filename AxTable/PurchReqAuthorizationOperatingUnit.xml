<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqAuthorizationOperatingUnit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqAuthorizationOperatingUnit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>receivingOperatingUnitName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the name of the receiving operating unit.
    /// </summary>
    /// <returns>
    ///    The name of the receiving operating unit.
    /// </returns>
    public display Name receivingOperatingUnitName()
    {
        return DirPartyTable::findRec(this.ReceivingOperatingUnit).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operatingUnitLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a custom lookup for the <c>OMOperatingUnit</c> records that are of the specified
    /// <c>OMOperatingUnitType</c> type.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// The <c>FormReferenceControl</c> for which the lookup that is being created by this method is
    /// servicing.
    /// </param>
    /// <param name="_type">
    /// An <c>OMOperatingUnitType</c> value that indicates what type discriminator to use to filter the
    /// <c>OMOperatingUnit</c> table.
    /// </param>
    /// <param name="_name">
    /// A string that specifies a user-entered name that is ambiguous and must be resolved by the lookup;
    /// optional.
    /// </param>
    /// <returns>
    /// An <c>OMOperatingUnit</c> record that the user selected.
    /// </returns>
    /// <remarks>
    /// This lookup helper method also assists in resolving duplicate names when surrogate key replacement
    /// cannot do so automatically.
    /// </remarks>
    public static OMOperatingUnit operatingUnitLookup(FormReferenceControl _formReferenceControl, OMOperatingUnitType _type, DirPartyName _name = '')
    {
        SysReferenceTableLookup     sysTableLookup = SysReferenceTableLookup::newParameters(tablenum(OMOperatingUnit), _formReferenceControl, true);
        boolean                     unfiltered = (_type == OMOperatingUnitType::None);

        sysTableLookup.addLookupfield(fieldnum(OMOperatingUnit, Name));
        sysTableLookup.addLookupfield(fieldnum(OMOperatingUnit, NameAlias));
        sysTableLookup.addLookupfield(fieldnum(OMOperatingUnit, omOperatingUnitNumber));
        sysTableLookup.addLookupfield(fieldnum(OMOperatingUnit, omOperatingUnitType));

        // Create a custom Query that filters to show only a specific OMOperatingUnitType
        var lookupQuery = new Query();
        QueryBuildDataSource ouQbds = lookupQuery.addDataSource(tablenum(OMOperatingUnit));
        ouQbds.fields().addField(fieldnum(OMOperatingUnit, Name));
        ouQbds.fields().addField(fieldnum(OMOperatingUnit, NameAlias));
        ouQbds.fields().addField(fieldnum(OMOperatingUnit, omOperatingUnitNumber));
        ouQbds.fields().addField(fieldnum(OMOperatingUnit, omOperatingUnitType));

        if (!unfiltered)
        {
            // Filter the lookup by the specified type
            ouQbds.addRange(fieldnum(OMOperatingUnit, omOperatingUnitType)).value(enum2str(_type));
        }

        // If a name is specified then it is being called in a duplicate resolution scenario, so filter
        // on the name as well
        if (_name)
        {
            // Filter to the specified name to help resolve duplicates
            ouQbds.addRange(fieldnum(OMOperatingUnit, Name)).value(_name);
        }

        sysTableLookup.parmQuery(lookupQuery);
        OMOperatingUnit selectedRecord = sysTableLookup.performFormLookup();

        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operatingUnitResolve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides custom resolve reference logic for foreign keys to the <c>OMOperatingUnit</c> table by
    /// filtering to a specified <c>OMOperatingUnitType</c> type.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// The <c>FormReferenceControl</c> to resolve.
    /// </param>
    /// <param name="_type">
    /// An <c>OMOperatingUnitType</c> value that indicates what type discriminator to use to filter the
    /// <c>OMOperatingUnit</c> table.
    /// </param>
    /// <returns>
    /// An <c>OMOperatingUnit</c> record that the user selected.
    /// </returns>
    /// <remarks>
    /// This resolve helper method also assists in resolving duplicate names when surrogate key replacement
    /// cannot do so automatically.
    /// </remarks>
    public static OMOperatingUnit operatingUnitResolve(FormReferenceControl _formReferenceControl, OMOperatingUnitType _type)
    {
        OMOperatingUnit     operatingUnit;
        DirPartyName        operatingUnitName = '';
        boolean             unfiltered = (_type == OMOperatingUnitType::None);

        // Get the text that the user entered into the control to see if there is a match to display
        operatingUnitName = _formReferenceControl.filterValue(AbsoluteFieldBinding::construct(fieldstr(OMOperatingUnit, Name), tablestr(OMOperatingUnit))).value();

        // Retrieve the unique operating unit
        if (unfiltered)
        {
            // No filtering necessary
            select operatingUnit
                where operatingUnit.Name == operatingUnitName;
        }
        else
        {
            operatingUnit = OMOperatingUnit::findName(operatingUnitName, _type);
        }

        return operatingUnit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS315720</DeveloperDocumentation>
	<FormRef>PurchReqAuthorization</FormRef>
	<Label>@SYS305896</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Requisitioner</TitleField1>
	<TitleField2>ReceivingOperatingUnit</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RequisitionerBuyingLegalEntityValidIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>RequisitionerBuyingLegalEntityValidIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Requisitioner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingOperatingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Requisitioner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingOperatingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Requisitioner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingOperatingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReceivingOperatingUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS304468</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Requisitioner</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RequisitionerBuyingLegalEntityValidIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>Requisitioner</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReceivingOperatingUnit</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OmOperatingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OMOperatingUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OMOperatingUnit_PurchReqAuthorizationOperatingUnit</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceivingOperatingUnit</Name>
					<Field>ReceivingOperatingUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Requisitioner</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_PurchReqAuthorizationOperatingUnit</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Requisitioner</Name>
					<Field>Requisitioner</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>