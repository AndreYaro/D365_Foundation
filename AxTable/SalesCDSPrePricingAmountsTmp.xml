<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCDSPrePricingAmountsTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesCDSPrePricingAmountsTmp extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initPrePricingAmountsFromSalesLines</Name>
				<Source><![CDATA[
    public static SalesCDSPrePricingAmountsTmp initPrePricingAmountsFromSalesLines(Num _refNum)
    {
        SalesCDSPrePricingAmountsTmp prePricingAmountsTmp;

        SysDaInsertObject insertObject = SalesCDSPrePricingAmountsTmp::buildInsertObject(prePricingAmountsTmp);
        SysDaQueryObject queryObject = SalesCDSPrePricingAmountsTmp::buildQueryObjectFromSalesLines(_refNum);
        SalesCDSPrePricingAmountsTmp::insertRecords(queryObject, insertObject);

        SalesCDSPrePricingAmountsTmp::updateTotalAmountsFromSalesLines(prePricingAmountsTmp);

        return prePricingAmountsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPrePricingAmountsFromQuotationLines</Name>
				<Source><![CDATA[
    public static SalesCDSPrePricingAmountsTmp initPrePricingAmountsFromQuotationLines(Num _refNum)
    {
        SalesCDSPrePricingAmountsTmp prePricingAmountsTmp;

        SysDaInsertObject insertObject = SalesCDSPrePricingAmountsTmp::buildInsertObject(prePricingAmountsTmp);
        SysDaQueryObject queryObject = SalesCDSPrePricingAmountsTmp::buildQueryObjectFromQuotationLines(_refNum);
        SalesCDSPrePricingAmountsTmp::insertRecords(queryObject, insertObject);

        SalesCDSPrePricingAmountsTmp::updateTotalAmountsFromQuotationLines(prePricingAmountsTmp);

        return prePricingAmountsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotalAmountsFromSalesLines</Name>
				<Source><![CDATA[
    private static void updateTotalAmountsFromSalesLines(SalesCDSPrePricingAmountsTmp _prePricingAmountsTmp)
    {
        SalesOrderLineCDSEntity salesLineEntity;
        SalesLine               salesLine;
        SalesOrderLineTotals    salesLineTotals;

        SysDaUpdateObject updateObject = new SysDaUpdateObject(_prePricingAmountsTmp);
        updateObject.settingClause()
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalTaxAmount), new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, TotalTaxAmount)))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalChargesAmount), new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, TotalChargesAmount)))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalDiscountAmount), new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, TotalDiscountAmount)));

        SysDaQueryObject queryObject = new SysDaQueryObject(salesLineEntity);
        queryObject.projection()
            .add(fieldStr(SalesOrderLineCDSEntity, TotalTaxAmount))
            .add(fieldStr(SalesOrderLineCDSEntity, TotalChargesAmount))
            .add(fieldStr(SalesOrderLineCDSEntity, TotalDiscountAmount));

        queryObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, SalesOrderNumber)),
                new SysDaFieldExpression(_prePricingAmountsTmp, fieldStr(SalesCDSPrePricingAmountsTmp, ReferenceNumber)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, LineCreationSequenceNumber)),
                new SysDaFieldExpression(_prePricingAmountsTmp, fieldStr(SalesCDSPrePricingAmountsTmp, LineCreationSequenceNumber)))));

        SysDaQueryObject queryObjectLine = new SysDaQueryObject(salesLine);
        queryObjectLine.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLine, fieldStr(SalesLine, SalesId)),
                new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, SalesOrderNumber)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLine, fieldStr(SalesLine, LineCreationSequenceNumber)),
                new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, LineCreationSequenceNumber)))));

        SysDaQueryObject queryObjectLineTotals = new SysDaQueryObject(salesLineTotals);
        queryObjectLineTotals.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLineTotals, fieldStr(SalesOrderLineTotals, InventTransId)),
                new SysDaFieldExpression(salesLine, fieldStr(SalesLine, InventTransId))));

        queryObjectLine.joinClause(SysDaJoinKind::ExistsJoin, queryObjectLineTotals);
        queryObject.joinClause(SysDaJoinKind::ExistsJoin, queryObjectLine);
        updateObject.joinClause(SysDaJoinKind::InnerJoin, queryObject);

        new SysDaUpdateStatement().execute(updateObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotalAmountsFromQuotationLines</Name>
				<Source><![CDATA[
    private static void updateTotalAmountsFromQuotationLines(SalesCDSPrePricingAmountsTmp _prePricingAmountsTmp)
    {
        SalesQuotationLineCDSEntity         quotationLineEntity;
        SalesQuotationLine                  quotationLine;
        SalesQuotationLineCalculatedTotals  quotationLineTotals;

        SysDaUpdateObject updateObject = new SysDaUpdateObject(_prePricingAmountsTmp);
        updateObject.settingClause()
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalTaxAmount), new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, TotalTaxAmount)))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalChargesAmount), new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, TotalChargesAmount)))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, TotalDiscountAmount), new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, TotalDiscountAmount)));

        SysDaQueryObject queryObject = new SysDaQueryObject(quotationLineEntity);
        queryObject.projection()
            .add(fieldStr(SalesQuotationLineCDSEntity, TotalTaxAmount))
            .add(fieldStr(SalesQuotationLineCDSEntity, TotalChargesAmount))
            .add(fieldStr(SalesQuotationLineCDSEntity, TotalDiscountAmount));

        queryObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, SalesQuotationNumber)),
                new SysDaFieldExpression(_prePricingAmountsTmp, fieldStr(SalesCDSPrePricingAmountsTmp, ReferenceNumber)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, LineCreationSequenceNumber)),
                new SysDaFieldExpression(_prePricingAmountsTmp, fieldStr(SalesCDSPrePricingAmountsTmp, LineCreationSequenceNumber)))));

        SysDaQueryObject queryObjectLine = new SysDaQueryObject(quotationLine);
        queryObjectLine.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLine, fieldStr(SalesQuotationLine, QuotationId)),
                new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, SalesQuotationNumber)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLine, fieldStr(SalesQuotationLine, LineCreationSequenceNumber)),
                new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, LineCreationSequenceNumber)))));

        SysDaQueryObject queryObjectLineTotals = new SysDaQueryObject(quotationLineTotals);
        queryObjectLineTotals.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLineTotals, fieldStr(SalesQuotationLineCalculatedTotals, InventTransId)),
                new SysDaFieldExpression(quotationLine, fieldStr(SalesQuotationLine, InventTransId))));

        queryObjectLine.joinClause(SysDaJoinKind::ExistsJoin, queryObjectLineTotals);
        queryObject.joinClause(SysDaJoinKind::ExistsJoin, queryObjectLine);
        updateObject.joinClause(SysDaJoinKind::InnerJoin, queryObject);

        new SysDaUpdateStatement().execute(updateObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildInsertObject</Name>
				<Source><![CDATA[
    private static SysDaInsertObject buildInsertObject(SalesCDSPrePricingAmountsTmp _prePricingAmountsTmp)
    {
        SysDaInsertObject insertObject = new SysDaInsertObject(_prePricingAmountsTmp);

        insertObject.fields()
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, ReferenceNumber))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, LineCreationSequenceNumber))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, LineAmount))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, LineDisc))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, LinePercent))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, MultiLnDisc))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, MultiLnPercent))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, SalesMarkup))
            .add(fieldStr(SalesCDSPrePricingAmountsTmp, SalesPrice));

        return insertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryObjectFromSalesLines</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildQueryObjectFromSalesLines(Num _refNum)
    {
        SalesOrderLineCDSEntity salesLineEntity;
        SysDaQueryObject queryObject = new SysDaQueryObject(salesLineEntity);

        queryObject.projection()
            .add(fieldStr(SalesOrderLineCDSEntity, SalesOrderNumber))
            .add(fieldStr(SalesOrderLineCDSEntity, LineCreationSequenceNumber))
            .add(fieldStr(SalesOrderLineCDSEntity, LineAmount))
            .add(fieldStr(SalesOrderLineCDSEntity, LineDiscountAmount))
            .add(fieldStr(SalesOrderLineCDSEntity, LineDiscountPercentage))
            .add(fieldStr(SalesOrderLineCDSEntity, MultilineDiscountAmount))
            .add(fieldStr(SalesOrderLineCDSEntity, MultilineDiscountPercentage))
            .add(fieldStr(SalesOrderLineCDSEntity, FixedPriceCharges))
            .add(fieldStr(SalesOrderLineCDSEntity, SalesPrice));

        queryObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(salesLineEntity, fieldStr(SalesOrderLineCDSEntity, SalesOrderNumber)),
                new SysDaValueExpression(_refNum)));

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryObjectFromQuotationLines</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildQueryObjectFromQuotationLines(Num _refNum)
    {
        SalesQuotationLineCDSEntity quotationLineEntity;
        SysDaQueryObject queryObject = new SysDaQueryObject(quotationLineEntity);

        queryObject.projection()
            .add(fieldStr(SalesQuotationLineCDSEntity, SalesQuotationNumber))
            .add(fieldStr(SalesQuotationLineCDSEntity, LineCreationSequenceNumber))
            .add(fieldStr(SalesQuotationLineCDSEntity, LineAmount))
            .add(fieldStr(SalesQuotationLineCDSEntity, LineDiscountAmount))
            .add(fieldStr(SalesQuotationLineCDSEntity, LineDiscountPercentage))
            .add(fieldStr(SalesQuotationLineCDSEntity, MultilineDiscountAmount))
            .add(fieldStr(SalesQuotationLineCDSEntity, MultilineDiscountPercentage))
            .add(fieldStr(SalesQuotationLineCDSEntity, FixedPriceCharges))
            .add(fieldStr(SalesQuotationLineCDSEntity, SalesPrice));

        queryObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(quotationLineEntity, fieldStr(SalesQuotationLineCDSEntity, SalesQuotationNumber)),
                new SysDaValueExpression(_refNum)));

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecords</Name>
				<Source><![CDATA[
    private static void insertRecords(SysDaQueryObject _queryObject, SysDaInsertObject _insertObject)
    {
        _insertObject.query(_queryObject);

        SysDaInsertStatement insertStatement = new SysDaInsertStatement();

        insertStatement.execute(_insertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SCM:CDSPrePricingAmountsDevDoc</DeveloperDocumentation>
	<Label>@SCM:CDSPrePricingAmountsLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Modules>SalesAndMarketing</Modules>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReferenceNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LineCreationSequenceNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLineCreationSequenceNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLineAmount</ExtendedDataType>
			<RelationContext>Currency</RelationContext>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLineDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLinePercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesMultiLnDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MultiLnPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesMultiLnPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesPrice</ExtendedDataType>
			<Label>@SYS11770</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalTaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRTotalTaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalChargesAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRTotalMarkupAmount</ExtendedDataType>
			<Label>@SYS11466</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalDiscountAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesDiscountAmount</ExtendedDataType>
			<Label>@RET3621</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumberIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ReferenceNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineCreationSequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>