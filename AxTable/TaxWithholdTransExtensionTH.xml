<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdTransExtensionTH</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdTransExtensionTH extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        LedgerJournalTransExtensionTH   ledgerJournalTransExtensionTH;
        LedgerJournalTrans              ledgerJournalTrans;

        ttsBegin;
        super();

        // Release the certificate number if exists
        if (!TaxWithholdTransExtensionTH::existLedgerJournalTrans(this.orig().LedgerJournalTrans))
        {
            ledgerJournalTransExtensionTH = LedgerJournalTransExtensionTH::findByLedgerJournalTrans(this.orig().LedgerJournalTrans, true);

            if (ledgerJournalTransExtensionTH.CertificateNumber)
            {
                ledgerJournalTrans = LedgerJournalTrans::findRecId(this.orig().LedgerJournalTrans, false);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    if (DirPartyTable::findRec(VendTable::find(ledgerJournalTrans.parmAccount()).Party).baseType() == DirPartyBaseType::Person)
                    {
                        NumberSeq::releaseNumber(VendParameters::numRefTaxWithholdPND3Number().NumberSequenceId, ledgerJournalTransExtensionTH.CertificateNumber);
                    }
                    else
                    {
                        NumberSeq::releaseNumber(VendParameters::numRefTaxWithholdPND53Number().NumberSequenceId, ledgerJournalTransExtensionTH.CertificateNumber);
                    }
                }
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTaxBranchDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the tax branch code of the record.
    /// </summary>
    /// <returns>
    /// Returns tax branch code of the record.
    /// </returns>
    display TaxBranchCode displayTaxBranchDimension()
    {
        return TaxBranchType::getTBDisplayValueByDefaultDimension(LedgerJournalTrans::findRecId(this.LedgerJournalTrans, false).DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies field value for the table <c>TaxWithholdTransExtensionTH</c>.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name of table <c>TaxWithholdTransExtensionTH</c> used to modify the specified record.
    /// </param>
    /// <param name="_arrayIndex">
    /// Specifies the array index.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        TaxWithholdTrans    taxWithholdTrans;

        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(TaxWithholdTransExtensionTH, AccountingCurExpenseAmount):
            case fieldStr(TaxWithholdTransExtensionTH, InvoiceCurExpenseAmount):
            case fieldStr(TaxWithholdTransExtensionTH, TransCurExpenseAmount):
                TaxWithhold::changeTaxWithholdExpenseAmount(this.SysExtensionSerializerExtensionMap::getBaseTable(), _fieldName);
                break;

            case fieldStr(TaxWithholdTransExtensionTH, HideInReports):
                taxWithholdTrans = this.SysExtensionSerializerExtensionMap::getBaseTable();
                if (TaxWithhold::hideReversedTaxWithholdTransInPair(taxWithholdTrans))
                {
                    if (FormDataUtil::isFormDataSource(taxWithholdTrans))
                    {
                        FormDataUtil::getFormDataSource(taxWithholdTrans).research(true);
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        TaxWithholdReceiptNumber         taxWithholdReceiptNumber;
        TaxWithholdTransHideInReports    taxWithholdTransHideInReports;
        AmountMST                        invoiceCurUpdatedWithholdBaseAmount;
        TaxWithholdTrans                 taxWithholdTrans;

        if (this.ReceiptNumber       != this.orig().ReceiptNumber
            || this.HideInReports    != this.orig().HideInReports
            || this.InvoiceCurUpdatedWithholdBaseAmount != this.orig().InvoiceCurUpdatedWithholdBaseAmount)
        {
            // Only update the changes on the special fields.
            taxWithholdReceiptNumber        = this.ReceiptNumber;
            taxWithholdTransHideInReports   = this.HideInReports;
            invoiceCurUpdatedWithholdBaseAmount = this.InvoiceCurUpdatedWithholdBaseAmount;

            this.data(this.orig());

            this.ReceiptNumber   = taxWithholdReceiptNumber;
            this.HideInReports   = taxWithholdTransHideInReports;
            this.InvoiceCurUpdatedWithholdBaseAmount = invoiceCurUpdatedWithholdBaseAmount;
            select firstonly InvoiceCurrency, TransDate from taxWithholdTrans 
                where taxWithholdTrans.RecId == this.TaxWithholdTrans;
            
            this.AccountingCurUpdatedWithholdBaseAmt = CurrencyExchangeHelper::mstAmount(
                this.InvoiceCurUpdatedWithholdBaseAmount,
                taxWithholdTrans.InvoiceCurrency,
                taxWithholdTrans.TransDate);

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates field value for the table <c>TaxWithholdTransExtensionTH</c>.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name of table <c>TaxWithholdTransExtensionTH</c> used to modify the specified record
    /// </param>
    /// <param name="_arrayIndex">
    /// Specifies the array index.
    /// </param>
    /// <returns>
    /// Returns true if the validation is expected, otherwise false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean     ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(TaxWithholdTransExtensionTH, AccountingCurExpenseAmount):
                case fieldStr(TaxWithholdTransExtensionTH, InvoiceCurExpenseAmount):
                case fieldStr(TaxWithholdTransExtensionTH, TransCurExpenseAmount):
                    ret = TaxWithhold::validateExpenseAmount(this.SysExtensionSerializerExtensionMap::getBaseTable(), this, _fieldName);
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        if (this.TaxWithholdTrans)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the record of table <c>TaxWithholdTransExtensionTH</c> is existed or not..
    /// </summary>
    /// <param name="_ledgerJournalTransRecId">
    /// The field of table <c>TaxWithholdTransExtensionTH</c> used to find the specified record.
    /// </param>
    /// <returns>
    /// Returns true if the specified record is existed, otherwise false.
    /// </returns>
    public static boolean existLedgerJournalTrans(LedgerJournalTransRefRecId _ledgerJournalTransRecId)
    {
        boolean                         found = false;

        if (_ledgerJournalTransRecId != 0)
        {
            found = (select firstonly RecId
                from taxWithholdTransExtensionTH
                where taxWithholdTransExtensionTH.LedgerJournalTrans == _ledgerJournalTransRecId).RecId != 0;
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isExtensionEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether table <c>TaxWithholdTransExtensionTH</c> is enabled.
    /// </summary>
    /// <returns>
    /// Reuturns true if the extension table enabled, otherwise false.
    /// </returns>
    public static boolean isExtensionEnabled()
    {
        return TaxThaiGovCertificationFeatureChecker::isCountryRegionTH();
    }

]]></Source>
			</Method>
			<Method>
				<Name>TaxWithholdTrans</Name>
				<Source><![CDATA[
    public TaxWithholdTrans TaxWithholdTrans(TaxWithholdTrans _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('TaxWithholdTrans');
            }
            else
            {
                return this.setLink('TaxWithholdTrans', _relatedTable);
            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4083014</DeveloperDocumentation>
	<Label>@SYS4083013</Label>
	<TitleField1>TaxWithholdTrans</TitleField1>
	<TitleField2>ReceiptNumber</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>TaxWithholdTransIdx</ClusteredIndex>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurUpdatedWithholdBaseAmt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpenseLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HideInReports</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCurUpdatedWithholdBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalTrans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultCurrency</Name>
			<Label>@SYS23938</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurUpdatedWithholdBaseAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoiceCurrency</Name>
			<Label>@SYS66021</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCurUpdatedWithholdBaseAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxWithholdCurrency</Name>
			<Label>@SYS81746</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransCurExpenseAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxWithholdGroup</Name>
			<Label>@SYS81675</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>displayTaxBranchDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThailandReportingDetails</Name>
			<Label>@SYS4082594</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HideInReports</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurExpenseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdAccountingCurExpenseAmt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurUpdatedWithholdBaseAmt</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>TH</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdBase</ExtendedDataType>
			<Label>@SYS4082549</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExpenseLedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>TH</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HideInReports</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdTransHideInReports</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceCurExpenseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdInvoiceCurExpenseAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceCurUpdatedWithholdBaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>TH</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdBaseCur</ExtendedDataType>
			<Label>@SYS4082717</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerJournalTrans</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>TaxThailandGovCertification</ConfigurationKey>
			<CountryRegionCodes>TH</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdReceiptNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdTrans</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TransCurExpenseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdTransCurExpenseAmount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxWithholdTransIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerJournalTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerJournalTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>TaxWithholdTrans</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ExpenseLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExpenseLedgerDimension</Name>
					<Field>ExpenseLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalTrans</Name>
					<Field>LedgerJournalTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TaxWithholdTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdTrans</Name>
					<Field>TaxWithholdTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>