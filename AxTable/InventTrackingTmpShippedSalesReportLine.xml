<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingTmpShippedSalesReportLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTrackingTmpShippedSalesReportLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>combinePhoneAndExtension</Name>
				<Source><![CDATA[
        private str combinePhoneAndExtension(Phone _phone, PhoneLocal _ext)
    {
        return _ext ? strFmt("@SYS4004905", _phone, _ext) : _phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getElectronicAddress</Name>
				<Source><![CDATA[
        private LogisticsElectronicAddress getElectronicAddress(LogisticsLocationRecId _locationRecId, LogisticsElectronicAddressMethodType _type)
    {
        LogisticsElectronicAddress  electronicAddress;
        LogisticsLocation           location;

        if (_locationRecId)
        {
            select firstonly electronicAddress
                order by electronicAddress.IsPrimary desc
                where electronicAddress.Type == _type
                exists join location
                    where location.RecId == electronicAddress.Location
                        && location.ParentLocation == _locationRecId;
        }

        return electronicAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes this buffer with another <c>InventTrackingTmpShippedSalesReportLine</c> buffer.
    /// </summary>
    /// <param name="_tmpReportLine">
    ///     An <c>InventTrackingTmpShippedSalesReportLine</c> buffer to initialize this buffer with.
    /// </param>
    public void initFromHeader(InventTrackingTmpShippedSalesReportLine _tmpReportLine)
    {
        EcoResProduct   product;
        InventDim       inventDim;
        InventDimParm   inventDimParm;
        InventTable     inventTable;

        this.Type           = _tmpReportLine.Type;
        this.ItemId         = _tmpReportLine.ItemId;
        this.InventDimId    = _tmpReportLine.InventDimId;

        // Report specific data
        inventTable         = InventTable::find(this.ItemId);
        product             = inventTable.Product();
        this.ProductNumber  = product.productNumber();
        this.ProductName    = product.productName();
        this.InventUnit     = inventTable.inventUnitId();
        inventDim           = InventDim::find(this.InventDimId);
        if (inventDim.InventDimId != InventDim::inventDimIdBlank())
        {
            inventDim.InventDimId = '';
            inventDimParm.initFromInventDim(inventDim);
            this.InventDimPrint = FormLetter::inventDimReport(inventDim, inventDimParm.selectedDimFields().pack(), currentUserLanguage());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTrackingCustJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes this buffer with an <c>InventTrackingCustJournalTable</c> buffer.
    /// </summary>
    /// <param name="_journalTable">
    ///     An <c>InventTrackingCustJournalTable</c> buffer to initialize this buffer with.
    /// </param>
    public void initFromInventTrackingCustJournalTable(InventTrackingCustJournalTable _journalTable)
    {
        #define.NewLine("\n")
        #define.AddressSeparator(", ")

        CustTable                   custTable       = _journalTable.InventTrackingCustJournalTable::custTable();
        LogisticsPostalAddress      postalAddress   = _journalTable.InventTrackingCustJournalTable::postalAddress();
        ContactPerson               contactPerson;
        LogisticsElectronicAddress  electronicAddress;

        // Customer contact information
        this.CustAccount            = custTable.AccountNum;
        this.CustGroup              = custTable.CustGroup;
        this.CustName               = custTable.name();
        if (custTable.ContactPersonId)
        {
            contactPerson           = ContactPerson::find(custTable.ContactPersonId);
        }
        else
        {
            select firstonly contactPerson
                where contactPerson.ContactForParty == custTable.Party;
        }
        this.CustContactName        = contactPerson.getPerson().Name;
        this.CustContactEmail       = contactPerson.email();
        this.CustContactPhone       = this.combinePhoneAndExtension(contactPerson.phone(), contactPerson.phoneLocal());

        // Delivery contact information
        this.DeliveryAddress        = strReplace(postalAddress.Address, #NewLine, #AddressSeparator);
        electronicAddress           = this.getElectronicAddress(postalAddress.Location, LogisticsElectronicAddressMethodType::Phone);
        this.DeliveryContactPhone   = this.combinePhoneAndExtension(electronicAddress.Locator, electronicAddress.LocatorExtension);
        this.DeliveryContactEmail   = this.getElectronicAddress(postalAddress.Location, LogisticsElectronicAddressMethodType::Email).Locator;

        // Sales contact information
        contactPerson               = _journalTable.InventTrackingCustJournalTable::contactPerson();
        this.SalesContactName       = contactPerson.getPerson().Name;
        this.SalesContactEmail      = contactPerson.email();
        this.SalesContactPhone      = this.combinePhoneAndExtension(contactPerson.phone(), contactPerson.phoneLocal());

        // Sales detail information
        this.CustomerRef            = _journalTable.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTrackingCustJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes this buffer with an <c>InventTrackingCustJournalTrans</c> buffer.
    /// </summary>
    /// <param name="_journalTrans">
    ///     An <c>InventTrackingCustJournalTrans</c> buffer to initialize this buffer with.
    /// </param>
    public void initFromInventTrackingCustJournalTrans(InventTrackingCustJournalTrans _journalTrans)
    {
        #define.NewLine("\n")
        #define.AddressSeparator(", ")

        LogisticsPostalAddress      postalAddress   = _journalTrans.InventTrackingCustJournalTrans::postalAddress();

        // Delivery contact information
        if (postalAddress)
        {
            this.DeliveryAddress = strReplace(postalAddress.Address, #NewLine, #AddressSeparator);
            LogisticsElectronicAddress electronicAddress = this.getElectronicAddress(postalAddress.Location, LogisticsElectronicAddressMethodType::Phone);
            this.DeliveryContactPhone = this.combinePhoneAndExtension(electronicAddress.Locator, electronicAddress.LocatorExtension);
            this.DeliveryContactEmail = this.getElectronicAddress(postalAddress.Location, LogisticsElectronicAddressMethodType::Email).Locator;
        }

        // Sales detail information
        if (_journalTrans.TableId == tableNum(CustPackingSlipTrans))
        {
            CustPackingSlipTrans custPackingSlipTrans = _journalTrans;
            this.SalesId = custPackingSlipTrans.OrigSalesId;
        }

        else if (_journalTrans.TableId == tableNum(CustInvoiceTrans))
        {
            CustInvoiceTrans custInvoiceTrans = _journalTrans;
            this.SalesId = custInvoiceTrans.OrigSalesId;
        }

        this.SalesUnit = _journalTrans.SalesUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes this buffer with an <c>InventTrans</c> buffer.
    /// </summary>
    /// <param name="_inventTrans">
    ///     An <c>InventTrans</c> buffer to initialize this buffer with.
    /// </param>
    public void initFromInventTrans(InventTrans _inventTrans)
    {
        this.InventQty      = -_inventTrans.Qty;
        this.PdsCWQty       = -_inventTrans.PdsCWQty;
        this.InventUnit     = _inventTrans.inventUnit();
        this.PdsCWUnitId    = _inventTrans.pdsCWUnitId();
        this.ShipDate       = _inventTrans.DatePhysical;
        this.Qty            = this.salesQty(_inventTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the inventory transaction quantity in sales units from an <c>InventTrans</c> buffer.
    /// </summary>
    /// <param name="_inventTrans">
    ///     An <c>InventTrans</c> buffer get the sales quantity from.
    /// </param>
    /// <returns>
    ///     The inventory transaction quantity in sales units.
    /// </returns>
    public SalesQty salesQty(InventTrans _inventTrans)
    {
        SalesUnit       salesUnit   = InventTransReference::newFromInventTrans(_inventTrans).unitId();
        UnitIDInventory inventUnit  = _inventTrans.inventUnit();

        return InventTable::unitConvert(_inventTrans.ItemId, 
                                        inventUnit, 
                                        salesUnit, 
                                        inventUnit, 
                                        -_inventTrans.Qty, 
                                        _inventTrans.InventDimId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@SYS4004894</Label>
	<TitleField1>Type</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustContactEmail</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustContactName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ContactPersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustContactPhone</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ContactPersonPhone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomerRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryAddress</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DlvAddress</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryContactEmail</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryContactPhone</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ContactPersonPhone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimPrint</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FreeTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventUnit</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>UnitIDInventory</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWRemain</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsCWUnitId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWUnitId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EcoResProductDisplayProductNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
			<Label>@SYS1316</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyOrdered</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Remain</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainInvent</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesContactEmail</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesContactName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ContactPersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesContactPhone</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ContactPersonPhone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesUnit</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ShipDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesShippingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>InventTrackingProductType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeItemDimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTrackingSalesLineTmp</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>