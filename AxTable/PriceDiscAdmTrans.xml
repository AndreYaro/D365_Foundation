<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscAdmTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceDiscAdmTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountQuantitiesOverlap</Name>
				<Source><![CDATA[
    public boolean amountQuantitiesOverlap(PriceDiscAdmTrans _priceDiscAdmTrans)
    {
        boolean isOverlap = false;

        if (!this.QuantityAmountTo && !_priceDiscAdmTrans.QuantityAmountTo)
        {
            isOverlap = true;
        }
        else if (this.QuantityAmountTo)
        {
            isOverlap = _priceDiscAdmTrans.QuantityAmountFrom < this.QuantityAmountTo
                && (!_priceDiscAdmTrans.QuantityAmountTo || _priceDiscAdmTrans.QuantityAmountTo > this.QuantityAmountFrom);
        }
        else
        {
            isOverlap = this.QuantityAmountFrom < _priceDiscAdmTrans.QuantityAmountTo;
        }

        return isOverlap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditPriceDiscValueField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the trade agreement value-related fields can be modified.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the field to check.
    /// </param>
    /// <returns>
    /// true if the field in question can be modified; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The field ID is unknown.
    /// </exception>
    [Replaceable]
    public boolean canEditPriceDiscValueField(RefFieldId _fieldId)
    {
        boolean ret;

        switch (this.Relation)
        {
            case PriceType::PricePurch :
            case PriceType::PriceSales :
                switch (_fieldId)
                {
                    case fieldNum(PriceDiscAdmTrans, Percent1) :
                    case fieldNum(PriceDiscAdmTrans, Percent2) :
                        ret = false;
                        break;

                    case fieldNum(PriceDiscAdmTrans, Markup)            :
                    case fieldNum(PriceDiscAdmTrans, PriceUnit)         :
                    case fieldNum(PriceDiscAdmTrans, DeliveryTime)      :
                    case fieldNum(PriceDiscAdmTrans, DisregardLeadTime) :
                        ret = true;
                        break;

                    default :
                        throw error(Error::wrongUseOfFunction(funcName()));
                }
                break;

            default :
                switch (_fieldId)
                {
                    case fieldNum(PriceDiscAdmTrans, Percent1) :
                    case fieldNum(PriceDiscAdmTrans, Percent2) :
                        ret = true;
                        break;

                    case fieldNum(PriceDiscAdmTrans, Markup)            :
                    case fieldNum(PriceDiscAdmTrans, PriceUnit)         :
                    case fieldNum(PriceDiscAdmTrans, DeliveryTime)      :
                    case fieldNum(PriceDiscAdmTrans, DisregardLeadTime) :
                        ret = false;
                        break;

                    default :
                        throw error(Error::wrongUseOfFunction(funcName()));
                }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountRelationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>AccountRelation</c> for the current <c>PriceDiscTable</c> module exists.
    /// </summary>
    /// <returns>
    /// true if the related account exists; otherwise, false.
    /// </returns>
    protected boolean checkAccountRelationTable()
    {
        if (this.AccountCode != PriceDiscPartyCodeType::Table)
        {
            return false;
        }

        switch(this.module())
        {
            case ModuleInventCustVend::Cust :
                return CustTable::exist(this.AccountRelation);
            case ModuleInventCustVend::Invent :
            case ModuleInventCustVend::Vend :
                return VendTable::exist(this.AccountRelation);
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSnapshottedPublishedCatalogRelated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether there exists a snapshotted published catalog which is related to the <c>PriceDiscTable</c>.
    /// </summary>
    /// <returns>
    /// true if snapshotted published catalog exists; otherwise, false.
    /// </returns>
    protected boolean checkSnapshottedPublishedCatalogRelated()
    {
        return isConfigurationkeyEnabled(configurationKeyNum(Retail))
               && this.relation == PriceType::PriceSales
               && CatalogManager::isSnapshottedPublishedCatalogRelated(PriceDiscGroup::find(ModuleInventCustVend::Cust, PriceGroupType::PriceGroup, this.AccountRelation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceDiscGroupExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a <c>PriceDiscGroup</c> exists for the <c>PriceDiscTable</c>.
    /// </summary>
    /// <returns>
    /// true if a <c>PriceDiscGroup</c> exists; otherwise, false.
    /// </returns>
    protected boolean checkPriceDiscGroupExists()
    {
        return PriceDiscGroup::exist(this.module(), this.priceGroupType(), this.AccountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>AccountCode</c> for the <c>PriceDiscTable</c> is valid.
    /// </summary>
    /// <returns>
    /// true if the <c>PriceDiscPartyCodeType</c> for the <c>AccountCode</c> is valid; otherwise, false.
    /// </returns>
    protected boolean checkAccountRelation()
    {
        boolean isOk = true;

        switch (this.AccountCode)
        {
            case PriceDiscPartyCodeType::Table :
                if (!this.checkAccountRelationTable())
                {
                    isOk = checkFailed("@SYS4000121");
                }
                break;
            case PriceDiscPartyCodeType::GroupId : 
                if (!this.checkPriceDiscGroupExists())
                {
                    isOk = checkFailed("@SYS4000121");
                }
                else if (this.checkSnapshottedPublishedCatalogRelated())
                {
                    isOk = checkFailed(strFmt("@SYS4009512", this.AccountRelation));
                }
                break;
            case PriceDiscPartyCodeType::All :   
                if (this.AccountRelation)
                {
                    isOk = checkFailed("@SYS4000121");
                }
                break;
        }

        return isOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAgreement_RU</Name>
				<Source><![CDATA[
    [Hookable]
    private boolean checkAgreement_RU()
    {
        SalesAgreementHeader salesAgreementHeader;
        PurchAgreementHeader purchAgreementHeader;
        boolean              ok = true;

        if (this.AgreementHeaderExt_RU)
        {
            if (this.AccountCode != PriceDiscPartyCodeType::Table)
            {
                ok = checkFailed("@SYS17074");
            }
            else
            {
                switch (this.module())
                {
                    case ModuleInventCustVend::Cust:
                        salesAgreementHeader = SalesAgreementHeaderExt_RU::salesAgreementHeader(this.AgreementHeaderExt_RU);

                        if (!salesAgreementHeader.canReleaseAgreement())
                        {
                            ok = checkFailed("@SYS103075");
                        }

                        if (this.AccountRelation != salesAgreementHeader.CustAccount)
                        {
                            ok = checkFailed("@SYS17074");
                        }
                        break;
                    case ModuleInventCustVend::Vend:
                        purchAgreementHeader = PurchAgreementHeaderExt_RU::purchAgreementHeader(this.AgreementHeaderExt_RU);

                        if (!purchAgreementHeader.canReleaseAgreement())
                        {
                            ok = checkFailed("@SYS103075");
                        }

                        if (this.AccountRelation != purchAgreementHeader.VendAccount)
                        {
                            ok = checkFailed("@SYS17074");
                        }
                        break;
                }
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAmountQuantity</Name>
				<Source><![CDATA[
    private boolean checkAmountQuantity()
    {
        boolean  ok = true;

        if ((this.QuantityAmountTo < 0) || (this.QuantityAmountFrom < 0))
        {
            ok = checkFailed("@SYS134947");
        }
        else if (this.QuantityAmountTo && this.QuantityAmountFrom  >= this.QuantityAmountTo)
        {
            ok = checkFailed("@SYS134949");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCurrency</Name>
				<Source><![CDATA[
    private boolean checkCurrency()
    {
        boolean    ok = true;

        if (this.Currency)
        {
            if (!Currency::exist(this.Currency))
            {
                ok = checkFailed(strFmt("@SYS1458", this.Currency));
            }
        }
        else
        {
            ok = checkFailed("@SYS23229");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDate</Name>
				<Source><![CDATA[
    private boolean  checkDate()
    {
        boolean  ok = true;

        if (this.ToDate  < this.FromDate)
        {
            if (this.ToDate)
            {
                ok = checkFailed("@SYS16982");
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLineNum</Name>
				<Source><![CDATA[
    private boolean checkLineNum()
    {
        boolean ok = true;

        if (this.LineNum && this.JournalNum)
        {
            PriceDiscAdmTrans priceDiscAdmTrans;

            select firstonly RecId from priceDiscAdmTrans
                where priceDiscAdmTrans.JournalNum  == this.JournalNum
                    && priceDiscAdmTrans.LineNum    == this.LineNum
                    && priceDiscAdmTrans.RecId      != this.RecId;

            ok = priceDiscAdmTrans.RecId ? false : true;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkForGaps</Name>
				<Source><![CDATA[
    //The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method on the PriceDiscAdmCheckPost class.
    public void checkForGaps(PriceDiscJournalNum _journalNum, PriceDiscAdmTrans _priceDiscAdmTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountCode</Name>
				<Source><![CDATA[
    boolean  checkAccountCode()
    {
        if (!PriceDiscTable::isActivationPossibleForPartyCodeProductCode(this.Relation, this.AccountCode, this.ItemCode))
            return checkFailed("@SYS14785");

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkItemRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the item relation value.
    /// </summary>
    /// <returns>true if the item relation value is valid; otherwise, false.</returns>
    protected boolean checkItemRelation()
    {
        if (this.isItemRelationValid())
        {
            return true;
        }

        return checkFailed("@SYS4004583");
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemRelationValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the item relation value.
    /// </summary>
    /// <returns>true if the item relation value is valid; otherwise, false.</returns>
    protected boolean isItemRelationValid()
    {
        boolean ok = PriceGroupTypeTradeAgreementMapping::newPriceGroupTypeTradeAgreementMapping(this.priceGroupType()).checkItemRelationProductCode(this.ItemCode);

        switch (this.ItemCode)
        {
            case PriceDiscProductCodeType::Table:   
                if (!InventTable::exist(this.ItemRelation))
                {
                    ok = false;
                }
                break;
            case PriceDiscProductCodeType::GroupId:   
                if (!PriceDiscGroup::exist(ModuleInventCustVend::Invent, this.priceGroupType(), this.ItemRelation))
                {
                    ok = false;
                }
                break;
            case PriceDiscProductCodeType::All:   
                if (this.ItemRelation)
                {
                    ok = false;
                }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkOverlaps</Name>
				<Source><![CDATA[
    //'The functionality done by this method has been reconstructed and included in the newly introduced checkForOverlapsAndGaps method on the PriceDiscAdmCheckPost class.'
    boolean checkOverlaps()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceDiscRelation</Name>
				<Source><![CDATA[
    private boolean checkPriceDiscRelation()
    {
        boolean    ok = true;

        if (this.PriceDiscTableRef)
        {
            if (!PriceDiscTable::findRecId(this.PriceDiscTableRef).RecId)
            {
                ok = checkFailed("@SYS58996");
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProductDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks whether the product dimensions are writable.
    /// </summary>
    /// <returns>
    ///     true if the product dimensions are writable; otherwise, false.
    /// </returns>
    protected boolean  checkProductDimensions()
    {
        InventDim       inventDim;
        boolean         ok     = true;

        inventDim = this.inventDim();

        switch (this.ItemCode)
        {
            case PriceDiscProductCodeType::Table       :
                ok = inventDim.validateWriteProductDimensions(this.ItemRelation,false);
                break;

            case PriceDiscProductCodeType::GroupId     :
                break;

            case PriceDiscProductCodeType::All         :
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventLocation</Name>
				<Source><![CDATA[
    protected boolean  checkInventLocation()
    {
        boolean ok = true;

        if (this.shouldCheckInventLocation())
        {
            InventDim inventDim = this.inventDim();
            InventDim blankInventDim = InventDim::findOrCreateBlank();
            Set allowEmptyFields = new Set(Types::Integer);
            allowEmptyFields.add(-1); // checkDimFieldsValid should allow empty values for all fields since we haven't done defaulting yet.

            ok = inventDim.checkDimFieldsValid(this.ItemRelation, blankInventDim, true, allowEmptyFields);
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldCheckInventLocation</Name>
				<Source><![CDATA[
    protected boolean shouldCheckInventLocation()
    {
        return PriceDiscAdmTransValidateLocationFlight::instance().isEnabled()
            && this.ItemCode == PriceDiscProductCodeType::Table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUnitId</Name>
				<Source><![CDATA[
    private boolean checkUnitId()
    {
        boolean    ok = true;

        if (this.UnitId)
        {
            if (!UnitOfMeasure::find(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)))
            {
                ok = checkFailed(strFmt("@SYS4108", this.UnitId));
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateRangesOverlap</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the date of the current PriceDiscAdmTrans record
    /// overlaps with the date of the <paramref name="_priceDiscAdmTrans" />.
    /// </summary>
    /// <param name="_priceDiscAdmTrans">
    ///     The PriceDiscAdmTrans record will be checked with the current record.
    /// </param>
    /// <returns>
    ///     true if the dates are overlapping;
    ///     otherwise, false.
    /// </returns>
    public boolean dateRangesOverlap(PriceDiscAdmTrans _priceDiscAdmTrans)
    {
        boolean isOverlap = false;
        if (!this.ToDate && !_priceDiscAdmTrans.ToDate)
        {
            isOverlap = true;
        }
        else if (this.ToDate)
        {
            isOverlap = _priceDiscAdmTrans.FromDate < this.ToDate
                && (!_priceDiscAdmTrans.ToDate || _priceDiscAdmTrans.ToDate > this.FromDate);
        }
        else
        {
            isOverlap = this.FromDate < _priceDiscAdmTrans.ToDate;
        }

        return isOverlap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns appropriate symbol code if there is error log attached to the transaction.
    /// </summary>
    /// <returns>A container containing symbol code.</returns>
    public display container errorExist()
    {
        ImageReference imgRef;
        container imgContainer;

        if (this.Log)
        {
            if (this.MustBeDeleted)
            {
                imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Warning);
            }
            else
            {
                imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Error);
            }

            imgContainer = imgRef.pack();
        }

        return imgContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAccountCode</Name>
				<Source><![CDATA[
    public void initFromAccountCode()
    {
        VendTable   vendTable;
        CustTable   custTable;

        if (this.AccountCode != PriceDiscPartyCodeType::Table)
            return;

        // <GEERU>
        this.AgreementHeaderExt_RU = 0;
        // </GEERU>

        ModuleInventCustVend relation = PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.Relation).partyRoleModule();
        if (relation == ModuleInventCustVend::Vend)
        {
            vendTable = VendTable::find(this.AccountRelation);
            this.Currency = vendTable.Currency;
            return;
        }
        else if (relation == ModuleInventCustVend::Cust)
        {
            custTable = CustTable::find(this.AccountRelation);
            this.Currency = custTable.Currency;
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromItemCode</Name>
				<Source><![CDATA[
    public void initFromItemCode()
    {
        InventTable inventTable;

        if (this.ItemCode != PriceDiscProductCodeType::Table)
            return;

        if (this.UnitId  &&  this.ItemRelation == this.orig().ItemRelation)
            return;

        inventTable = InventTable::find(this.ItemRelation);

        ModuleInventCustVend relation = PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.Relation).partyRoleModule();
        if (relation == ModuleInventCustVend::Vend)
        {
            this.UnitId =  inventTable.purchUnitId();
            return;
        }
        else if (relation == ModuleInventCustVend::Cust)
        {
            this.UnitId =  inventTable.salesUnitId();
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates the current table buffer by using the specified table buffer.
    /// </summary>
    /// <param name="_priceDiscAdmTrans">
    /// A <c>PriceDiscAdmTrans</c> table buffer.
    /// </param>
    public void initFromPriceDiscAdmTrans(PriceDiscAdmTrans _priceDiscAdmTrans)
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        this.AccountCode           = _priceDiscAdmTrans.AccountCode;
        this.AccountRelation       = _priceDiscAdmTrans.AccountRelation;
        this.Agreement             = _priceDiscAdmTrans.Agreement;
        this.AllocateMarkup        = _priceDiscAdmTrans.AllocateMarkup;
        this.Amount                = _priceDiscAdmTrans.Amount;
        this.CalendarDays          = _priceDiscAdmTrans.CalendarDays;
        this.Currency              = _priceDiscAdmTrans.Currency;
        this.DeliveryTime          = _priceDiscAdmTrans.DeliveryTime;
        this.DisregardLeadTime     = _priceDiscAdmTrans.DisregardLeadTime;
        this.FromDate              = _priceDiscAdmTrans.FromDate;
        this.GenericCurrency       = _priceDiscAdmTrans.GenericCurrency;
        this.InventDimId           = _priceDiscAdmTrans.InventDimId;
        this.ItemCode              = _priceDiscAdmTrans.ItemCode;
        this.ItemRelation          = _priceDiscAdmTrans.ItemRelation;
        this.JournalNum            = _priceDiscAdmTrans.JournalNum;
        this.Markup                = _priceDiscAdmTrans.Markup;
        this.Module                = _priceDiscAdmTrans.Module;
        this.Percent1              = _priceDiscAdmTrans.Percent1;
        this.Percent2              = _priceDiscAdmTrans.Percent2;
        this.PriceUnit             = _priceDiscAdmTrans.PriceUnit;
        this.QuantityAmountFrom    = _priceDiscAdmTrans.QuantityAmountFrom;
        this.QuantityAmountTo      = _priceDiscAdmTrans.QuantityAmountTo;
        this.Relation              = _priceDiscAdmTrans.Relation;
        this.SearchAgain           = _priceDiscAdmTrans.SearchAgain;
        this.ToDate                = _priceDiscAdmTrans.ToDate;
        this.UnitId                = _priceDiscAdmTrans.UnitId;
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.AgreementHeaderExt_RU = _priceDiscAdmTrans.AgreementHeaderExt_RU;
        }
        // </GEERU>

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.MaximumRetailPrice_IN = _priceDiscAdmTrans.MaximumRetailPrice_IN;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initiates a <c>PriceDiscAdmTrans</c> record from a <c>PriceDiscTable</c> record.
    /// </summary>
    /// <param name="_priceDiscTable">
    ///     A <c>PriceDiscTable</c> record buffer.
    /// </param>
    public void initFromPriceDiscTable(PriceDiscTable _priceDiscTable)
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>

        this.AccountCode            = _priceDiscTable.AccountCode;
        this.AccountRelation        = _priceDiscTable.AccountRelation;
        this.Agreement              = _priceDiscTable.Agreement;
        this.AllocateMarkup         = _priceDiscTable.AllocateMarkup;
        this.Amount                 = _priceDiscTable.Amount;
        this.Currency               = _priceDiscTable.Currency;
        this.GenericCurrency        = _priceDiscTable.GenericCurrency;
        this.CalendarDays           = _priceDiscTable.CalendarDays;
        this.DeliveryTime           = _priceDiscTable.DeliveryTime;
        this.DisregardLeadTime      = _priceDiscTable.DisregardLeadTime;
        this.FromDate               = _priceDiscTable.FromDate;
        this.ItemCode               = _priceDiscTable.ItemCode;
        this.ItemRelation           = _priceDiscTable.ItemRelation;
        this.Markup                 = _priceDiscTable.Markup;
        this.Module                 = _priceDiscTable.Module;
        this.Percent1               = _priceDiscTable.Percent1;
        this.Percent2               = _priceDiscTable.Percent2;
        this.PriceDiscTableRef      = _priceDiscTable.RecId;
        this.PriceUnit              = _priceDiscTable.PriceUnit;
        this.QuantityAmountFrom     = _priceDiscTable.QuantityAmountFrom;
        this.QuantityAmountTo       = _priceDiscTable.QuantityAmountTo;
        this.Relation               = _priceDiscTable.Relation;
        this.SearchAgain            = _priceDiscTable.SearchAgain;
        this.ToDate                 = _priceDiscTable.ToDate;
        this.UnitId                 = _priceDiscTable.UnitId;
        this.InventDimId            = _priceDiscTable.InventDimId;
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.AgreementHeaderExt_RU = _priceDiscTable.AgreementHeaderExt_RU;
        }
        // </GEERU>

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.MaximumRetailPrice_IN = _priceDiscTable.MaximumRetailPrice_IN;
        }
        // </GIN>
        
        if (PriceDiscAdmTransCalculationIdInitFlight::instance().isEnabled()
         && SalesParameters::find().PriceDiscAdmTransInitializeCalculationId)
        {
            this.PDSCalculationId = _priceDiscTable.PDSCalculationId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the "MaximumRetailPrice_IN" field based on item master if needed.
    /// </summary>
    /// <remarks>
    /// The "MaximumRetailPrice_IN" field should be set to ZERO, if the "relation" field
    /// is NOT set to any of the below values,
    ///  - Price (sales)
    ///  - Price (purch)
    /// </remarks>
    private void initMaximumRetailPrice_IN()
    {
        InventTableModule   inventTableModule;

        switch (this.relation)
        {
            case PriceType::PriceSales:
                inventTableModule = InventTableModule::find(
                    this.ItemRelation,
                    ModuleInventPurchSales::Sales);
                this.MaximumRetailPrice_IN = inventTableModule.MaximumRetailPrice_IN;
                break;

            case PriceType::PricePurch:
                inventTableModule = InventTableModule::find(
                    this.ItemRelation,
                    ModuleInventPurchSales::Purch);
                this.MaximumRetailPrice_IN = inventTableModule.MaximumRetailPrice_IN;
                break;

            default:
                EventHandlerResult result = new EventHandlerResult();
                PriceDiscAdmTrans::getMaximumRetailPriceDelegate_IN(this.relation,  result);

                if (result.hasResult())
                {
                    this.MaximumRetailPrice_IN = result.result();
                }
                else
                {
                    this.MaximumRetailPrice_IN = 0;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaximumRetailPriceDelegate_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for initMaximumRetailPrice_IN.
    /// </summary>
    /// <param name = "_priceType">The <c>PriceType</c> value.</param>
    /// <param name="_result">An <c>EventHandlerResult</c> for returning the result.</param>
    static delegate void getMaximumRetailPriceDelegate_IN(PriceType _priceType, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializing the Price and Discount record.
    /// </summary>
    /// <remarks>
    ///     Price unit is set to 1 until the user changes it to something else.
    ///     Disregard sales lead time is set to Yes until the user changes it to something else.
    /// </remarks>
    public void initValue()
    {
        super();

        this.PriceUnit          = 1;
        this.DisregardLeadTime  = NoYes::Yes;
        this.SearchAgain = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void  insert()
    {
        this.preWrite();

        this.Module = this.module();

        //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean  update = false)
    {
        return InventDim::find(this.InventDimId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDiscAdmTransChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns information symbol if current record have changed.
    /// </summary>
    /// <returns>A container containing symbol code.</returns>
    public display container isDiscAdmTransChanged()
    {
        container imgContainer;

        if (this.DifferentFromPosted || !this.PriceDiscTableRef)
        {
            ImageReference imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Info);
            imgContainer = imgRef.pack();
        }

        return imgContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId itemId()
    {
        if (this.ItemCode == PriceDiscProductCodeType::Table)
            return this.ItemRelation;

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefAgreement_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump to the the agreements.
    /// </summary>
    public void jumpRefAgreement_RU()
    {
        switch (this.Module)
        {
            case ModuleInventCustVend::Cust:
                SalesAgreementHeaderExt_RU::salesAgreementJumpRef(this.AgreementHeaderExt_RU);
                break;
            case ModuleInventCustVend::Vend:
                PurchAgreementHeaderExt_RU::purchAgreementJumpRef(this.AgreementHeaderExt_RU);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAgreement_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the agreements lookup.
    /// </summary>
    /// <param name="_callingControl">
    /// The control for which lookup will be created.
    /// </param>
    /// <returns>
    ///    The <c>AgreementHeaderExt_RU</c> record that is selected in the lookup.
    /// </returns>
    public AgreementHeaderExt_RU lookupAgreement_RU(FormReferenceControl _callingControl)
    {
        AgreementHeaderExt_RU selectedRecord;

        switch (this.Module)
        {
            case ModuleInventCustVend::Cust:
                selectedRecord = SalesAgreementHeaderExt_RU::salesAgreementReferenceLookup(_callingControl, this.AccountRelation);
                break;
            case ModuleInventCustVend::Vend:
                selectedRecord = PurchAgreementHeaderExt_RU::purchAgreementReferenceLookup(_callingControl, this.AccountRelation);
                break;
        }

        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>

        super(_fieldId);

        this.DifferentFromPosted = NoYes::Yes;

        switch (_fieldId)
        {
            case fieldNum(PriceDiscAdmTrans, QuantityAmountFrom):
            case fieldNum(PriceDiscAdmTrans, QuantityAmountTo):
                this.roundQty(_fieldId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    public ModuleInventCustVend  module()
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.relation).partyRoleModule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update some fields based on AccountCode and ItemCode, pre-write.
    /// </summary>
    public void preWrite()
    {
        if (this.AccountCode == PriceDiscPartyCodeType::All)
        {
            this.AccountRelation = '';
        }

        if (this.ItemCode == PriceDiscProductCodeType::All)
        {
            this.ItemRelation   = '';
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        if (this.ItemCode != PriceDiscProductCodeType::Table)
        {
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceGroupType</Name>
				<Source><![CDATA[
    // D20970
    public PriceGroupType priceGroupType()
    {
        return PriceTypeConverter::priceTypeToPriceGroupType(this.relation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rounds the passed field according to Unit of Measure decimal precision of the trade agreement,
    /// </summary>
    /// <param name="_fieldId">
    /// The field to be rounded.
    /// </param>
    public void roundQty(FieldId _fieldId)
    {
        if (this.UnitId && !(this.relation == PriceType::EndDiscPurch || this.relation == PriceType::EndDiscSales))
        {
            this.(_fieldId) = decRound(this.(_fieldId), UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.preWrite();

        // <GEERU>
        #ISOCountryRegionCodes

        if ((this.orig().UnitId != this.UnitId ||
            this.orig().Currency != this.Currency ||
            this.orig().PriceUnit != this.PriceUnit) &&
            SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) &&
            RetailPriceDiscAdmTrans::findByPriceDiscAdmTrans(this.RecId))
        {
            RetailPriceDiscAddDataSaver::convertPrice(this.orig(), this);
        }
        // </GEERU>

        //Modifying this method be aware in \Classes\PriceDiscAdmCheckPost\postJournal execution is disabled by calling priceDiscTable.skipDataMethods(true).
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId  fieldId)
    {
        boolean  ok = true;

        ok = super(fieldId);

        switch (fieldId)
        {
            case(fieldNum(PriceDiscAdmTrans, ItemRelation))    :   ok = this.checkItemRelation();
                break;
            case(fieldNum(PriceDiscAdmTrans, AccountRelation)) :   ok = this.checkAccountRelation();
                break;
            // <GEERU>
            case(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU))  :   ok = this.checkAgreement_RU();
                break;
            // </GEERU>
            case(fieldNum(PriceDiscAdmTrans, PDSCalculationId)) :
                ok = ok && PDSAdvancedPricing_Validator::validateCalculationElementId(this.PDSCalculationId);
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        boolean  ok = true;

        ok = super();
        
        if (!this.RecId
            && PriceDiscAdmTransSetAndValidateLineNumFlight::instance().isEnabled())
        {
            ok = ok && this.checkLineNum();
        }

        if (! this.checkDate())
            ok = false;

        if (! this.checkAmountQuantity())
            ok = false;

        if (! this.checkItemRelation())
            ok = false;

        if (! this.checkProductDimensions())
            ok = false;

        if (! this.checkInventLocation())
            ok = false;

        if (! this.checkAccountRelation())
            ok = false;

        if (! this.checkAccountCode())
            ok = false;

        if (! this.checkPriceDiscRelation())
            ok = false;

        if (! this.checkCurrency())
            ok = false;

        if (! this.checkUnitId())
            ok = false;

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (! this.checkAgreement_RU())
                ok = false;
        }
        // </GEERU>

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromTmpProductAndVariants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create multiple journal lines.
    /// </summary>
    /// <param name="_journalNum">
    /// Journal num.
    /// </param>
    /// <param name="_tmpProductTable">
    /// Products and variants to add to the journal lines.
    /// </param>
    public static void createFromTmpProductAndVariants(PriceDiscJournalNum _journalNum, TmpRetailProductsToAdd _tmpProductTable)
    {
        PriceDiscAdmTable admTable;
        container productsPacked;

        admTable = PriceDiscAdmTable::find(_journalNum);

        if (!admTable)
        {
            warning(strFmt("@SYS21496", _journalNum));
        }
        else if (admTable.canUpdateLines(true))
        {
            productsPacked = TmpRetailProductsToAdd::pack(_tmpProductTable);

            PriceDiscAdmTrans::createFromTmpProductAndVariantsOnServer(_journalNum, productsPacked);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromTmpProductAndVariantsOnServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create multiple product/variant journal lines on server
    /// </summary>
    /// <param name="_journalNum">
    /// Journal number.
    /// </param>
    /// <param name="_products">
    /// <c>TmpRetailProductsToAdd</c> in a container.
    /// </param>
    public static void createFromTmpProductAndVariantsOnServer(PriceDiscJournalNum _journalNum, container _products)
    {
        PriceDiscAdmTable admTable;
        PriceDiscAdmTrans admTrans;
        CurrencyCode currencyCode;
        TmpRetailProductsToAdd productsToAdd;

        admTable = PriceDiscAdmTable::find(_journalNum);

        if (!admTable)
        {
            warning(strFmt("@SYS21496", _journalNum));
        }
        else if (admTable.canUpdateLines(true))
        {
            productsToAdd = TmpRetailProductsToAdd::unpack(_products);
            currencyCode = CompanyInfoHelper::standardCurrency();            
            LineNum lineNum = PriceDiscAdmTrans::lastLineNum(admTable.JournalNum) + 1;

            while select productsToAdd
            {
                admTrans.clear();
                admTrans.initValue();
                admTrans.JournalNum = _journalNum;
                admTrans.relation = admTable.DefaultRelation;
                admTrans.AccountCode = PriceDiscPartyCodeType::All;
                admTrans.ItemCode = PriceDiscProductCodeType::Table;
                admTrans.ItemRelation = productsToAdd.ItemId;
                admTrans.InventDimId = productsToAdd.InventDim;
                admTrans.initFromItemCode();
                admTrans.Currency = currencyCode;
                admTrans.LineNum = lineNum;

                admTrans.insert();
                lineNum++;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existDeleteMarked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether any delete marked lines exist for the journal.
    /// </summary>
    /// <param name="_journalNum">
    /// The journal number to check for delete marked lines.
    /// </param>
    /// <returns>
    /// true if a delete marked line exists for the journal; otherwise, false.
    /// </returns>

    public static boolean  existDeleteMarked(PriceDiscJournalNum _journalNum)
    {
        if (!_journalNum)
        {
            return false;
        }

        return (select firstonly RecId from priceDiscAdmTrans
                    where priceDiscAdmTrans.JournalNum      == _journalNum &&
                          priceDiscAdmTrans.MustBeDeleted   == NoYes::Yes).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existErrorsOrWarnings</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether any lines with errors or warnings exist in the journal.
    /// </summary>
    /// <param name="_journalNum">
    ///     The journal number to check for lines with errors or warnings.
    /// </param>
    /// <returns>
    ///     true if a line with warnings or errors exists in the journal; otherwise, false.
    /// </returns>
    public static boolean existErrorsOrWarnings(PriceDiscJournalNum _journalNum)
    {
        if (!_journalNum)
        {
            return false;
        }

        return (select firstonly RecId from priceDiscAdmTrans
                    where priceDiscAdmTrans.JournalNum == _journalNum &&
                          priceDiscAdmTrans.Log).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefRecId</Name>
				<Source><![CDATA[
    public static PriceDiscAdmTrans findRefRecId(RecId                  recId,
                                                 PriceDiscJournalNum    _journalNum,
                                                 boolean                update = false)
    {
        PriceDiscAdmTrans priceDiscAdmTrans;

        priceDiscAdmTrans.selectForUpdate(update);

        select firstonly priceDiscAdmTrans
            where priceDiscAdmTrans.PriceDiscTableRef   == recId &&
                  priceDiscAdmTrans.JournalNum          == _journalNum;

        return priceDiscAdmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
                 // [field that needs defaulting,
                 //      [fields that affect the default value]]
                 [fieldnum(PriceDiscAdmTrans, ItemRelation), [fieldnum(PriceDiscAdmTrans, ItemCode)]],
                 [fieldnum(PriceDiscAdmTrans, MaximumRetailPrice_IN), [fieldnum(PriceDiscAdmTrans, ItemCode)]],
                 [fieldnum(PriceDiscAdmTrans, AccountRelation), [fieldnum(PriceDiscAdmTrans, AccountCode)]],
                 [fieldnum(PriceDiscAdmTrans, AgreementHeaderExt_RU), [fieldnum(PriceDiscAdmTrans, AccountCode)],  [fieldnum(PriceDiscAdmTrans, AccountRelation)]],
                 [fieldnum(PriceDiscAdmTrans, UnitId), [fieldnum(PriceDiscAdmTrans, ItemRelation)]],
                 [fieldnum(PriceDiscAdmTrans, MaximumRetailPrice_IN), [fieldnum(PriceDiscAdmTrans, ItemRelation)]],
                 [fieldnum(PriceDiscAdmTrans, Currency), [fieldnum(PriceDiscAdmTrans, AccountRelation)]],
                 [fieldnum(PriceDiscAdmTrans, QuantityAmountFrom), [fieldnum(PriceDiscAdmTrans, UnitId)]],
                 [fieldnum(PriceDiscAdmTrans, QuantityAmountTo), [fieldnum(PriceDiscAdmTrans, UnitId)]],
                 [fieldnum(PriceDiscAdmTrans, Module), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, Percent1), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, Percent2), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, Markup), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, PriceUnit), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, DeliveryTime), [fieldnum(PriceDiscAdmTrans, Relation)]],
                 [fieldnum(PriceDiscAdmTrans, CalendarDays), [fieldnum(PriceDiscAdmTrans, Relation)]]

        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(PriceDiscAdmTrans, ItemRelation):
                this.defaultItemRelation();
                break;

            case fieldnum(PriceDiscAdmTrans, MaximumRetailPrice_IN):
                this.defaultMaximumRetailPrice_IN();
                break;

            case fieldnum(PriceDiscAdmTrans, AccountRelation):
                this.defaultAccountRelation();
            break;

            case fieldnum(PriceDiscAdmTrans, AgreementHeaderExt_RU):
                this.AgreementHeaderExt_RU = 0;
                break;

            case fieldnum(PriceDiscAdmTrans, UnitId):
                this.initFromItemCode();
                break;

            case fieldnum(PriceDiscAdmTrans, MaximumRetailPrice_IN):
                this.initMaximumRetailPrice_IN();
                break;

            case fieldnum(PriceDiscAdmTrans, Currency):
                this.initFromAccountCode();
                break;

            case fieldnum(PriceDiscAdmTrans, QuantityAmountTo):
                    this.roundQty(fieldNum(PriceDiscAdmTrans, QuantityAmountTo));
                break;

            case fieldnum(PriceDiscAdmTrans, QuantityAmountFrom):
                this.roundQty(fieldNum(PriceDiscAdmTrans, QuantityAmountFrom));
                break;

            case fieldnum(PriceDiscAdmTrans, Module):
                this.Module = PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.relation).partyRoleModule();
                break;

            case fieldnum(PriceDiscAdmTrans, Percent1):
                    this.Percent1       = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent1))     ? this.Percent1        : 0;
                break;

            case fieldnum(PriceDiscAdmTrans, Percent2):
                    this.Percent2       = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent2))     ? this.Percent2        : 0;
                break;

            case fieldnum(PriceDiscAdmTrans, Markup):
                    this.Markup         = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Markup))       ? this.Markup          : 0;
                break;

            case fieldnum(PriceDiscAdmTrans, PriceUnit):
                    this.PriceUnit      = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, PriceUnit))    ? this.PriceUnit       : 1;
                break;

            case fieldnum(PriceDiscAdmTrans, DeliveryTime):
                    this.DeliveryTime   = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime)) ? this.DeliveryTime    : 0;
                break;

            case fieldnum(PriceDiscAdmTrans, CalendarDays):
                    this.CalendarDays   = this.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime)) ? this.CalendarDays    : NoYes::No;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemRelation</Name>
				<Source><![CDATA[
    private void defaultItemRelation()
    {
        if (this.ItemCode == PriceDiscProductCodeType::All)
        {
            this.ItemRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    private void defaultMaximumRetailPrice_IN()
    {
        if (this.ItemCode != PriceDiscProductCodeType::Table)
        {
            this.MaximumRetailPrice_IN = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAccountRelation</Name>
				<Source><![CDATA[
    private void defaultAccountRelation()
    {
        if (this.AccountCode == PriceDiscPartyCodeType::All)
        {
            this.AccountRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the last line number in the current instance of the <c>PriceDiscAdmTrans</c> table.
    /// </summary>
    /// <param name="_journalNum">
    /// The journal number from the PriceDiscAdmTrans.
    /// </param>
    /// <returns>
    /// The last line number of the PriceDiscAdmTrans of the current journalNum.
    /// </returns>
    public static LineNum lastLineNum(PriceDiscJournalNum _journalNum)
    {
        PriceDiscAdmTrans priceDiscAdmTrans;

        return (select maxof(LineNum) from priceDiscAdmTrans
                    index hint JourLineNumIdx
                    where priceDiscAdmTrans.JournalNum == _journalNum).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNewLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the line number for the record with the next line number for the journal.
    /// </summary>
    /// <returns>New line number.</returns>
    [Hookable(false)]
    internal LineNum setNewLineNum()
    {
        if (!this.LineNum)
        {
            this.LineNum = PriceDiscAdmTrans::lastLineNum(this.JournalNum) + 1;
        }

        return this.LineNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PriceDisc</ConfigurationKey>
	<DeveloperDocumentation>@SYS124526</DeveloperDocumentation>
	<FormRef>PriceDiscAdm</FormRef>
	<Label>@SYS60313</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>relation</TitleField1>
	<TitleField2>ItemRelation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JourLineNumIdx</ClusteredIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>JourLineNumIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Agreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchAgain</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Log</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DifferentFromPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Agreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchAgain</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceDiscTableRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Log</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GenericCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisregardLeadTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventBailee_RU</Name>
			<Label>@GLS115581</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBaileeFreeDays_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventDim</Name>
			<Label>@SYS53627</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MiscCharges</Name>
			<Label>@SYS8371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMarkup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PDSPotency</Name>
			<Label>@PSC61</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PDSCalculationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Percent</Name>
			<Label>@SYS15774</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>QuantityAmount</Name>
			<Label>@SYS59970</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxInformation_IN</Name>
			<Label>@SYS33652</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscPartyCode</ExtendedDataType>
			<EnumType>PriceDiscPartyCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Agreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceAgreement</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AgreementHeaderExt_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementHeaderExtRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocateMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS6613</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAmount</ExtendedDataType>
			<Label>@SYS344741</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalendarDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DeliveryTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeadTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DifferentFromPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisregardLeadTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DisregardLeadTime</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GenericCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesGenericCurrency</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventBaileeFreeDays_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBaileeFreeDays_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscProductCode</ExtendedDataType>
			<EnumType>PriceDiscProductCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscJournalNum</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Log</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceJournalLogTrans</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Markup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Module</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscModule</ExtendedDataType>
			<EnumType>ModuleInventCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MustBeDeleted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PDSCalculationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PDSCalculationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS901</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS902</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PriceDiscTableRef</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscTableRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmountFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQty</ExtendedDataType>
			<Label>@SCM:QuantityAmountFrom</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmountTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQuantityTo</ExtendedDataType>
			<Label>@SCM:QuantityAmountTo</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>relation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9114</Label>
			<EnumType>PriceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SearchAgain</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS15494</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JourLineNumIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PriceDiscTableRefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PriceDiscTableRef</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AgreementHeaderExt_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalRelationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>relation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PDSCalculationTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PDSCalculationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementHeaderExt_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementHeaderExt_RU</Name>
					<Field>AgreementHeaderExt_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PriceSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>Module</Name>
					<Field>Module</Field>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRPostageGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MCRPostageDisc</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MCRPostageDisc</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PDSCalculationTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PDSCalculationTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PDSCalculationId</Name>
					<Field>PDSCalculationId</Field>
					<RelatedField>CalculationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalculationIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PriceDiscAdmTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscAdmTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PriceDiscTableRef</Name>
					<Field>PriceDiscTableRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PricePurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PriceSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PricePurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>Module</Name>
					<Field>Module</Field>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>