<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMASalesPriceSubscription</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMASalesPriceSubscription extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                [fieldnum(SMASalesPriceSubscription, ProjPeriodId), this.projPeriodIdDefaultingDependencies()],
                [fieldnum(SMASalesPriceSubscription, CurrencyCode), this.currencyCodeDefaultingDependencies()],
                [fieldnum(SMASalesPriceSubscription, CategoryId), this.categoryIdDefaultingDependencies()],
                [fieldnum(SMASalesPriceSubscription, ProjValidFor), this.projValidForDefaultingDependencies()],
                [fieldnum(SMASalesPriceSubscription, ProjPriceGroup), this.projPriceGroupDefaultingDependencies()],
                [fieldnum(SMASalesPriceSubscription, ProjId), this.projIdDefaultingDependencies()]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>projPeriodIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container projPeriodIdDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, SMASubscriptionId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCodeDefaultingDependencies</Name>
				<Source><![CDATA[
    private container currencyCodeDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, SMASubscriptionId), fieldNum(SMASalesPriceSubscription, ProjId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container categoryIdDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, SMASubscriptionId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>projValidForDefaultingDependencies</Name>
				<Source><![CDATA[
    private container projValidForDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, SMASubscriptionId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>projPriceGroupDefaultingDependencies</Name>
				<Source><![CDATA[
    private container projPriceGroupDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, ProjValidFor)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>projIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container projIdDefaultingDependencies()
    {
        return [fieldNum(SMASalesPriceSubscription, SMASubscriptionId), fieldNum(SMASalesPriceSubscription, ProjValidFor)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SMASalesPriceSubscription, ProjPeriodId):
                this.defaultProjPeriodId();
                break;

            case fieldNum(SMASalesPriceSubscription, CurrencyCode):
                this.defaultCurrencyCode();
                break;

            case fieldNum(SMASalesPriceSubscription, CategoryId):
                this.defaultCategoryId();
                break;

            case fieldNum(SMASalesPriceSubscription, ProjValidFor):
                this.defaultProjValidFor();
                break;

            case fieldNum(SMASalesPriceSubscription, ProjPriceGroup):
                this.defaultProjPriceGroup();
                break;

            case fieldNum(SMASalesPriceSubscription, ProjId):
                this.defaultProjId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjPeriodId</Name>
				<Source><![CDATA[
    private void defaultProjPeriodId()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)))
        {
            this.ProjPeriodId = SMASubscriptionGroup::find(this.smaSubscriptionTable().GroupId).InvoicePeriodcode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCurrencyCode</Name>
				<Source><![CDATA[
    private void defaultCurrencyCode()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)) ||
            this.isFieldSet(fieldNum(SMASalesPriceSubscription, ProjId)))
        {
            if (this.SMASubscriptionId)
            {
                if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)))
                {
                    this.CurrencyCode = this.smaSubscriptionTable().CurrencyCode;
                }
            }
            else
            {
                if (this.ProjId)
                {
                    if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, ProjId)))
                    {
                        this.CurrencyCode = this.projTable().currencyId();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCategoryId</Name>
				<Source><![CDATA[
    private void defaultCategoryId()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)))
        {
            this.CategoryId = this.smaSubscriptionTable().ProjCategoryId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjValidFor</Name>
				<Source><![CDATA[
    private void defaultProjValidFor()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)))
        {
            this.ProjValidFor = TableGroupAll::Table;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjPriceGroup</Name>
				<Source><![CDATA[
    private void defaultProjPriceGroup()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, ProjValidFor)))
        {
            if (this.ProjValidFor != TableGroupAll::GroupId)
            {
                this.ProjPriceGroup = '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjId</Name>
				<Source><![CDATA[
    private void defaultProjId()
    {
        if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)) ||
            this.isFieldSet(fieldNum(SMASalesPriceSubscription, ProjValidFor)))
        {
            if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, ProjValidFor)))
            {
                if (this.ProjValidFor != TableGroupAll::Table)
                {
                    this.ProjId = '';
                }
            }

            if (this.isFieldSet(fieldNum(SMASalesPriceSubscription, SMASubscriptionId)))
            {
                this.ProjId = this.smaSubscriptionTable().ProjId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTable</Name>
				<Source><![CDATA[
    public ProjTable projTable(boolean _update = false)
    {
        return ProjTable::find(this.ProjId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>smaSubscriptionTable</Name>
				<Source><![CDATA[
    private SMASubscriptionTable smaSubscriptionTable()
    {
        return SMASubscriptionTable::find(this.SMASubscriptionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(SMASalesPriceSubscription, ProjId) :

                ret = SMASubscriptionTable::validateProjId(this.ProjId) && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
        {
            switch (this.ProjValidFor)
            {
                case TableGroupAll::Table:
                    if (!this.ProjId)
                    {
                        return checkFailed("@SYS37928");
                    }
                    break;

                case TableGroupAll::GroupId:
                    if (!this.ProjPriceGroup)
                    {
                        return checkFailed("@SYS103188");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceGroupInUse</Name>
				<Source><![CDATA[
    static boolean checkPriceGroupInUse(ProjPriceGroupID  priceGroup)
    {
        return (select firstonly RecId from smaSalesPriceSubscription
                    where smaSalesPriceSubscription.ProjPriceGroup == priceGroup).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMASalesPriceSubscription find(SMASubscriptionId       _subscriptionId,
                                                 ProjId                  _projId,
                                                 ProjCategoryId          _categoryId,
                                                 TransDate               _transDate,
                                                 CurrencyCode            _currencyCode,
                                                 ProjPeriodId            _projPeriodId,
                                                 ProjPriceGroupValidFor  _projValidFor   = TableGroupAll::All,
                                                 ProjPriceGroupID        _projPriceGroup = '',
                                                 boolean                 _forupdate  = false)
    {
        SMASalesPriceSubscription salesPriceSubscription = null;

        salesPriceSubscription.selectForUpdate(_forupdate);

        if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
        {
            select reverse salesPriceSubscription
                order by ProjValidFor, ValidFrom
                where salesPriceSubscription.ProjValidFor       == _projValidFor   &&
                      salesPriceSubscription.ProjId             == _projId         &&
                      salesPriceSubscription.ProjPriceGroup     == _projPriceGroup &&
                      salesPriceSubscription.smaSubscriptionId  == _subscriptionId &&
                      salesPriceSubscription.CategoryId         == _categoryId     &&
                      salesPriceSubscription.ValidFrom          <= _transDate      &&
                      salesPriceSubscription.CurrencyCode       == _currencyCode   &&
                      salesPriceSubscription.ProjPeriodId       == _projPeriodId;
        }
        else
        {
            select reverse firstonly salesPriceSubscription
                order by ValidFrom
                where salesPriceSubscription.smaSubscriptionId   == _subscriptionId      &&
                      salesPriceSubscription.ProjId              == _projId              &&
                      salesPriceSubscription.CategoryId          == _categoryId          &&
                      salesPriceSubscription.ValidFrom           <= _transDate           &&
                      salesPriceSubscription.CurrencyCode        == _currencyCode        &&
                      salesPriceSubscription.ProjPeriodId        == _projPeriodId;
        }

        return salesPriceSubscription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSalesPrice</Name>
				<Source><![CDATA[
    public static Amount findSalesPrice(SMASubscriptionId   _subscriptionId,
                                        ProjId              _projId,
                                        ProjCategoryId      _categoryId,
                                        TransDate           _transDate,
                                        CurrencyCode        _currencyCode,
                                        ProjPeriodId        _projPeriodId)
    {
        #define.blank('')

        SMASalesPriceSubscription  salesPriceSubscription;

        ProjPriceGroupID        projPriceGroup;

        // Look for sales price using price group feature
        if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
        {
            if (_projId)
            {
                projPriceGroup = ProjTable::findPriceGroup(_projId);
            }

            // Look for sales price with Subscription Id

            // Search by Valid For = Table
            if (_projId && _categoryId)
            {
                salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, _projId, _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::Table, '');
            }

            if (!(salesPriceSubscription))
            {
                if (_projId)
                {
                    salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, _projId, '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::Table, '');
                }

                if (!(salesPriceSubscription))
                {
                    // Search by Valid For = Group
                    if (projPriceGroup)
                    {
                        if (_categoryId)
                        {
                             salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, '', _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::GroupId, projPriceGroup);
                        }

                        if (!(salesPriceSubscription))
                        {
                            salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, '', '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::GroupId, projPriceGroup);
                        }
                    }

                    // Search by Valid For = All
                    if (!(salesPriceSubscription))
                    {
                        if (_categoryId)
                        {
                            salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, '', _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::All, '');
                        }

                        if (!(salesPriceSubscription))
                        {
                            salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, '', '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::All, '');
                        }
                    }
                }
            }

            // Look for sales price without Subscription Id

            // Search by Valid For = Table
            if (!(salesPriceSubscription))
            {
                if (_projId && _categoryId)
                {
                    salesPriceSubscription = SMASalesPriceSubscription::find('', _projId, _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::Table, '');
                }

                if (!(salesPriceSubscription))
                {
                    if (_projId)
                    {
                        salesPriceSubscription = SMASalesPriceSubscription::find('', _projId, '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::Table, '');
                    }
                }

                if (!(salesPriceSubscription))
                {
                    // Search by Valid For = Group
                    if (projPriceGroup)
                    {
                        if (_categoryId)
                        {
                            salesPriceSubscription = SMASalesPriceSubscription::find('', '', _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::GroupId, projPriceGroup);
                        }

                        if (!(salesPriceSubscription))
                        {
                            salesPriceSubscription = SMASalesPriceSubscription::find('', '', '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::GroupId, projPriceGroup);
                        }
                    }
                }

                // Look for sales price in Valid For = All
                if (!(salesPriceSubscription))
                {
                    if (_categoryId)
                    {
                        salesPriceSubscription = SMASalesPriceSubscription::find('', '', _categoryId, _transDate, _currencyCode, _projPeriodId, TableGroupAll::All, '');
                    }

                    if (!(salesPriceSubscription))
                    {
                        salesPriceSubscription = SMASalesPriceSubscription::find('', '', '', _transDate, _currencyCode, _projPeriodId, TableGroupAll::All, '');
                    }
                }
            }
        }
        // Look for sales price without price group feature
        else
        {
            if (_subscriptionId && _projId && _categoryId)
            {
                salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, _projId, _categoryId, _transDate, _currencyCode, _projPeriodId);

                if (!(salesPriceSubscription))
                {
                    if (_subscriptionId && _projId)
                    {
                        salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, _projId, #blank, _transDate, _currencyCode, _projPeriodId);

                        if (!(salesPriceSubscription))
                        {
                            if (_subscriptionId && _categoryId)
                            {
                                salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, #blank, _categoryId, _transDate, _currencyCode, _projPeriodId);

                                if (!(salesPriceSubscription))
                                {
                                    if (_subscriptionId)
                                    {
                                        salesPriceSubscription = SMASalesPriceSubscription::find(_subscriptionId, #blank, #blank, _transDate, _currencyCode, _projPeriodId);

                                        if (!(salesPriceSubscription))
                                        {
                                            if (_projId && _categoryId)
                                            {
                                                salesPriceSubscription = SMASalesPriceSubscription::find(#blank, _projId, _categoryId, _transDate, _currencyCode, _projPeriodId);

                                                if (!(salesPriceSubscription))
                                                {
                                                    if (_projId)
                                                    {
                                                        salesPriceSubscription = SMASalesPriceSubscription::find(#blank, _projId, #blank, _transDate, _currencyCode, _projPeriodId);

                                                        if (!(salesPriceSubscription))
                                                        {
                                                            if (_categoryId)
                                                            {
                                                                salesPriceSubscription = SMASalesPriceSubscription::find(#blank, #blank, _categoryId, _transDate, _currencyCode, _projPeriodId);

                                                                if (!(salesPriceSubscription))
                                                                {
                                                                    salesPriceSubscription = SMASalesPriceSubscription::find(#blank, #blank, #blank, _transDate, _currencyCode, _projPeriodId);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        return salesPriceSubscription.SalesPrice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMASubscription</ConfigurationKey>
	<DeveloperDocumentation>@SYS122707</DeveloperDocumentation>
	<FormRef>smasalesPriceSubsciption</FormRef>
	<Label>@SYS84197</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ValidFrom</TitleField1>
	<TitleField2>SMASubscriptionId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PerProjCatSubDateIdx</ClusteredIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjValidFor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMASubscriptionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPeriodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMASubscriptionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjValidFor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMASubscriptionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS80404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMASubscriptionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPeriodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjPeriodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<ExtendedDataType>SMASalesCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjPeriodId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPeriodId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjPriceGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPriceGroupID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjValidFor</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPriceGroupValidFor</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS5755</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SMASubscriptionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMASubscriptionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS14482</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS50168</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PerProjCatSubDateIdx</Name>
			<ConfigurationKey>SMASubscription</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjValidFor</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SMASubscriptionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjPeriodId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjPeriodTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjPeriodTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjPeriodId</Name>
					<Field>ProjPeriodId</Field>
					<RelatedField>PeriodId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PeriodIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SMASalesPriceSubscription</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjPriceGroup</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<Field>ProjPriceGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMASubscriptionTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMASubscriptionTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SMASubscriptionId</Name>
					<Field>SMASubscriptionId</Field>
					<RelatedField>SubscriptionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SubscriptionIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>