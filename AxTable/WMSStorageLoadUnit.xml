<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSStorageLoadUnit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WMSStorageLoadUnit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createStorageLoadUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a storage load unit.
    /// </summary>
    /// <param name="_name">
    /// The unique name of the storage load unit.
    /// </param>
    /// <param name="_reportSetup">
    /// The report setup to use.
    /// </param>
    /// <param name="_isExistingUnit">
    /// A Boolean value that indicates whether the persisted unit should be created or not.
    /// </param>
    /// <returns>
    /// An instance of the <c>WMSStorageLoadUnit</c> record.
    /// </returns>
    public static WMSStorageLoadUnit createStorageLoadUnit(Name _name, RefRecId _reportSetup, NoYes _isExistingUnit = NoYes::No)
    {
        WMSStorageLoadUnit  storageLoadUnit;

        ttsbegin;

        storageLoadUnit.Name = _name;
        storageLoadUnit.wmsReportSetup = _reportSetup;
        storageLoadUnit.IsPersisted = _isExistingUnit;
        storageLoadUnit.insert();

        ttscommit;

        return storageLoadUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>WMSStorageLoadUnit</c> table.
    /// </summary>
    /// <param name="_storageLoadUnitRecId">
    ///    The ID of the <c>WMSStorageLoadUnit</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>WMSStorageLoadUnit</c> table; otherwise, an empty record.
    /// </returns>
    public static WMSStorageLoadUnit find(RecId _storageLoadUnitRecId, boolean _forUpdate = false)
    {
        WMSStorageLoadUnit  storageLoadUnit;

        storageLoadUnit.selectForUpdate(_forUpdate);

        select firstonly storageLoadUnit
            where storageLoadUnit.RecId == _storageLoadUnitRecId;

        return storageLoadUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStorageLoadUnitNameAndSite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates storage load unit name and site reference.
    /// </summary>
    /// <param name="_storageLoadUnitRecId">
    /// A reference to the storage load unit.
    /// </param>
    /// <param name="_name">
    /// A new specified value, which should be used the storage load unit.
    /// </param>
    /// <param name="_inventSiteId">
    /// A specified site value, which should be used the storage load unit.
    /// </param>
    /// <param name="_reportSetup">
    /// The report setup to use.
    /// </param>
    /// <param name="_isExistingUnit">
    /// A Boolean value that indicates whether the existing unit should be updated or not.
    /// </param>
    public static void updateStorageLoadUnitNameAndSite(RecId _storageLoadUnitRecId, Name _name, InventSiteId _inventSiteId, RefRecId _reportSetup, NoYes _isExistingUnit = NoYes::No)
    {
        WMSStorageLoadUnit  storageLoadUnit;

        ttsbegin;

        select forupdate storageLoadUnit
            where storageLoadUnit.RecId == _storageLoadUnitRecId
                && storageLoadUnit.IsPersisted == _isExistingUnit
                && storageLoadUnit.wmsReportSetup == _reportSetup;

        if (storageLoadUnit)
        {
            storageLoadUnit.Name = _name;
            storageLoadUnit.InventSiteId = _inventSiteId;
            storageLoadUnit.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS4000633</DeveloperDocumentation>
	<Label>@SYS4000632</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>InventSiteId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSReportSetup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPersisted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>storageLoadUnitType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPersisted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSReportSetup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPersisted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS180310</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>storageLoadUnitType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSSpaceUtilStorageLoadUnitType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WMSReportSetup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSReportSetup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsPersisted</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSReportSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WMSReportSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSReportSetup</Name>
					<Field>WMSReportSetup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>