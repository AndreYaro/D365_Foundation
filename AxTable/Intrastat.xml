<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Intrastat</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
public class Intrastat extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcItemType_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines item type of the current <c>Intrastat</c> record.
    /// </summary>
    /// <returns>
    /// The item type of the current <c>Intrastat</c> record
    /// </returns>
    /// <remarks>
    /// The product-based lines item type is determined by using the <c>ItemType</c> field.The
    /// description-based lines with empty commodity code are considered services.If commodity code
    /// stripped of non-numeric characters is 6 characters long then the line is considered services.The
    /// <c>ItemId</c> and <c>IntrastatCommodity</c> fields must be filled before calling this method.
    /// </remarks>
    public IntrastatItemType_IT calcItemType_IT()
    {
        return IntrastatTransferIT::calculateItemTypeFromInventTable(InventTable::find(this.ItemId), this.IntrastatCommodity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcOrigCounty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds county of origin for the current <c>Intrastat</c> record.
    /// </summary>
    /// <returns>
    /// The county of origin Id
    /// </returns>
    /// <remarks>
    /// For product-based items the <c>OrigCountyId</c> field will be returned if it is not empty.For
    /// dispatches the <c>CountyOrigDest</c> field in the <c>IntrastatParameters</c> table. will be
    /// returned.The <c>ItemId</c>, <c>OrigCountyId</c>, and <c>Direction</c> fields must be filled before
    /// calling this method.
    /// </remarks>
    public ItemOrigCountyId calcOrigCounty()
    {
        return IntrastatTransferIT::calculateOrigCountyFromInventTable(InventTable::find(this.ItemId), this.DebCredType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfTransferAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the record is to be inserted into <c>Intrastat</c> table.
    /// </summary>
    /// <param name="_intrastatTransferMap">
    /// The record to check whether transfer is enabled.
    /// </param>
    /// <param name="_weight">
    /// A weight that overrides the <c>Weight</c> field on the <c>IntrastatTransferMap</c> map.
    /// </param>
    /// <returns>
    /// true if the transfer is enabled; otherwise, false.
    /// </returns>
    boolean checkIfTransferAllowed(IntrastatTransferMap _intrastatTransferMap, Weight _weight = naReal())
    {
        if (prmisDefault(_weight))
        {
            return Intrastat::isIntrastatLine(_intrastatTransferMap, this);
        }
        else
        {
            return Intrastat::isIntrastatLine(_intrastatTransferMap, this, _weight);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryRegion_CountryRegion</Name>
				<Source><![CDATA[
    LogisticsAddressCountryRegion countryRegion_CountryRegion(boolean update = false)
    {
        return LogisticsAddressCountryRegion::find(this.CountryRegionId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryRegion_OrigCountryRegion</Name>
				<Source><![CDATA[
    LogisticsAddressCountryRegion countryRegion_OrigCountryRegion(boolean update = false)
    {
        return LogisticsAddressCountryRegion::find(this.OrigCountryRegionId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryRegion_SendReceiveCountryRegion</Name>
				<Source><![CDATA[
    LogisticsAddressCountryRegion countryRegion_SendReceiveCountryRegion(boolean update = false)
    {
        return LogisticsAddressCountryRegion::find(this.SendReceiveCountryRegionId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dlvTerm</Name>
				<Source><![CDATA[
    DlvTerm dlvTerm(boolean update = false)
    {
        return DlvTerm::find(this.DlvTerm, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    void initFromInventTable(ItemId                 _itemId = this.ItemId,
                             UnitQty                _qty = this.Qty,
                             UnitOfMeasureSymbol    _unit = '')
    {
        InventTable inventTable = InventTable::find(_itemId);

        if (_unit)
        {
            this.Qty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(
                                                            _itemId,
                                                            InventTransOrigin::findByInventTransId(this.InventTransId).ItemInventDimId,
                                                            _qty,
                                                            _unit,
                                                            inventTable.inventUnitId(),
                                                            NoYes::Yes);
        }
        else
        {
            this.Qty = _qty;
        }

        this.IntrastatCommodity = inventTable.IntrastatCommodity;

        if (inventTable.ngpCodesTable_FR)
        {
            GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
                [#isoFR, GlobalizationConstants::FeatureReferenceFR00015] ],
                funcName()
            );
        }

        this.ngpCodesTable_FR   = inventTable.ngpCodesTable_FR;
        this.NetWeightByUnit    = inventTable.NetWeight;
        this.MarkupPct          = inventTable.StatisticsFactor;
        this.ItemId             = inventTable.ItemId;
        this.OrigCountryRegionId= inventTable.OrigCountryRegionId;
        this.OrigState          = inventTable.OrigStateId;
        this.Markup             = CurrencyExchangeHelper::amount(this.AmountMST * this.MarkupPct / 100, '');
        this.Weight             = this.NetWeightByUnit  * abs(this.Qty);
        this.AdditionalUnits    = IntrastatUnitUtil::calculateAdditionalUnitQuantity(this.ItemId,
                                                                                     this.Qty, 
                                                                                     this.IntrastatCommodity,
                                                                                     InventTransOrigin::findByInventTransId(this.InventTransId).ItemInventDimId);
        this.AdditionalQtyUnit  = IntrastatUnitUtil::getAdditionalUnitSymbol(this.IntrastatCommodity);

        if (Intrastat::isIntrastatCountryRegion_IT(this))
        {
            this.ItemType_IT = this.calcItemType_IT();
            this.OrigCounty = this.calcOrigCounty();

            if (FeatureStateProvider::isFeatureEnabled(IntrastatMiscChargesPerKgFeature::instance()) && 
                (!TaxIntegrationUtils::isMultipleTaxIdEnabledForIntrastat() ||
                EUSalesListReportingParameter::findByCountryRegionIdAndReport(this.getPostalAddress().CountryRegionId, ReportingParameterReportCallerName::Intrastat).MiscellaneousChargesPerKilogram))
            {
                this.MiscChargePerKg = inventTable.IntrastatChargePerKg;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Consignments = 1;
        this.CompanyIntrastatReportCurrencyCode = Ledger::accountingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>intrastatCommodity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds intrastat commodity category from <c>EcoResCategory</c> table.
    /// </summary>
    /// <param name = "_forUpdate">Indicates whether to read the record for update; optional.</param>
    /// <returns>
    /// Intrastat commodity category.
    /// </returns>
    public EcoResCategory intrastatCommodity(boolean _forUpdate = false)
    {
        return EcoResCategory::find(this.IntrastatCommodity, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>intrastatCommodityExt</Name>
				<Source><![CDATA[
	/// <summary>
    /// Finds intrastat commodity category from <c>EcoResCategoryIntrastat</c> table.
    /// </summary>
    /// <param name = "_forUpdate">Indicates whether to read the record for update; optional.</param>
    /// <returns>
    /// Intrastat commodity category.
	/// </returns>
    public EcoResCategoryIntrastat intrastatCommodityExt(boolean _forUpdate = false)
    {
        return EcoResCategoryIntrastat::findByCategoryId(this.IntrastatCommodity, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    InventTable inventTable(boolean    update   = false)
    {
        return InventTable::find(this.ItemId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemCodeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the commodity name associated with this <c>Intrastat</c> record.
    /// </summary>
    /// <returns>
    /// The commodity name associated with this <c>Intrastat</c> record.
    /// </returns>
    public display Name itemCodeName()
    {
        return EcoResCategory::find(this.IntrastatCommodity).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedCountryRegionId</Name>
				<Source><![CDATA[
    void modifiedCountryRegionId()
    {
        IntrastatCountryRegionParameters intrastatCountryRegionParameters;

        select firstonly CountryRegionType from intrastatCountryRegionParameters
                    where intrastatCountryRegionParameters.CountryRegionId == this.CountryRegionId;

        if ((!intrastatCountryRegionParameters && this.CountryRegionId) ||
            (intrastatCountryRegionParameters
                && intrastatCountryRegionParameters.CountryRegionType != CountryRegionType::EU
                && intrastatCountryRegionParameters.CountryRegionType != CountryRegionType::SpecialDomestic))
            throw error(strFmt("@SYS21353", this.CountryRegionId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(Intrastat, DispatchId):
                this.modifiedTransaction();
                break;
            case fieldNum(Intrastat, CountryRegionId):
                this.modifiedCountryRegionId();
                break;
            case fieldNum(Intrastat, Weight):
                this.modifiedWeight();
                break;
            case fieldNum(Intrastat, StatisticalValue):
                this.modifiedStatisticalValue();
                break;
            case fieldNum(Intrastat, NetWeightByUnit):
                this.modifiedWeightQty();
                break;
            case fieldNum(Intrastat, Qty):
                this.modifiedQty();
                break;
            case fieldNum(Intrastat, AdditionalQtyUnit):
                this.modifiedAdditionalQtyUnit();
                break;
            case fieldNum(Intrastat, IntrastatCommodity):
                this.modifiedIntrastatCommodity();
                break;
            case fieldNum(Intrastat, MarkupPct):
                this.modifiedMarkupPct();
                break;
            case fieldNum(Intrastat, ItemId):
                if (!this)
                {
                    this.initFromInventTable();
                }
                break;
            case fieldNum(Intrastat, ItemType_IT):
                this.modifiedItemType_IT();
                break;
            case fieldNum(Intrastat, Markup):
                this.modifiedMarkup();
                break;
            case fieldNum(Intrastat, Direction):
                this.modifiedDirection();
                break;
            case fieldNum(Intrastat, MiscChargePerKg):
                this.updateMarkup_IT();
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedDirection</Name>
				<Source><![CDATA[
    private void modifiedDirection()
    {
        if (this.Direction == IntrastatDirection::Export)
        {
            LogisticsPostalAddress retAddress = CompanyInfo::find().postalAddress();

            this.SendReceiveCountryRegionId    = retAddress.CountryRegionId;
            this.SendReceiveState              = retAddress.State;
        }
        else
        {
            this.SendReceiveCountryRegionId    = '';
            this.SendReceiveState              = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedStatisticalValue</Name>
				<Source><![CDATA[
    private void modifiedStatisticalValue()
    {
        this.calcMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedMarkup</Name>
				<Source><![CDATA[
    private void modifiedMarkup()
    {
        this.calcMarkupPct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedMarkupPct</Name>
				<Source><![CDATA[
    public void modifiedMarkupPct()
    {
        this.calcMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedAdditionalQtyUnit</Name>
				<Source><![CDATA[
    private void modifiedAdditionalQtyUnit()
    {
        if (this.ItemId)
        {
            this.AdditionalUnits = IntrastatUnitUtil::calculateAdditionalUnitQuantity(this.ItemId,
                                                                                      this.Qty, 
                                                                                      this.IntrastatCommodity, 
                                                                                      InventTransOrigin::findByInventTransId(this.InventTransId).ItemInventDimId, 
                                                                                      '', 
                                                                                      this.AdditionalQtyUnit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedIntrastatCommodity</Name>
				<Source><![CDATA[
    private void modifiedIntrastatCommodity()
    {
        this.AdditionalQtyUnit = IntrastatUnitUtil::getAdditionalUnitSymbol(this.IntrastatCommodity);
        this.modifiedAdditionalQtyUnit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedItemType_IT</Name>
				<Source><![CDATA[
    private void modifiedItemType_IT()
    {
        if (this.ItemType_IT == IntrastatItemType_IT::Goods)
        {
            this.ServicesDelivery_IT = IntrastatServicesDelivery_IT::None;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedQty</Name>
				<Source><![CDATA[
    void modifiedQty()
    {
        if (this.Qty && this.NetWeightByUnit)
            this.Weight = this.Qty * this.NetWeightByUnit;

        if (this.Qty && this.ItemId)
        {
            this.AdditionalUnits = IntrastatUnitUtil::calculateAdditionalUnitQuantity(this.ItemId,
                                                                                      this.Qty, 
                                                                                      this.IntrastatCommodity, 
                                                                                      InventTransOrigin::findByInventTransId(this.InventTransId).ItemInventDimId, 
                                                                                      '', 
                                                                                      this.AdditionalQtyUnit);
        }

        this.updateMarkup_IT();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedTransaction</Name>
				<Source><![CDATA[
    void modifiedTransaction()
    {
        if (this.DispatchId)
            this.SeqNum = Intrastat::maxNum(this.DispatchId)+1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedWeight</Name>
				<Source><![CDATA[
    void modifiedWeight()
    {
        if (this.NetWeightByUnit)
        {
            this.Qty = this.Weight/this.NetWeightByUnit;
            if (this.Qty && this.ItemId)
            {
                this.AdditionalUnits = IntrastatUnitUtil::calculateAdditionalUnitQuantity(this.ItemId,
                                                                                          this.Qty, 
                                                                                          this.IntrastatCommodity, 
                                                                                          InventTransOrigin::findByInventTransId(this.InventTransId).ItemInventDimId);
            }

            this.updateMarkup_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedWeightQty</Name>
				<Source><![CDATA[
    void modifiedWeightQty()
    {
        if (this.Qty && this.NetWeightByUnit)
        {
            this.Weight = this.Qty * this.NetWeightByUnit;
            this.updateMarkup_IT();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>state_CountryRegionState</Name>
				<Source><![CDATA[
    LogisticsAddressState state_CountryRegionState(boolean update = false)
    {
        return LogisticsAddressState::find(this.CountryRegionId, this.State, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>state_OrigCountryRegionState</Name>
				<Source><![CDATA[
    LogisticsAddressState state_OrigCountryRegionState(boolean update = false)
    {
        return LogisticsAddressState::find(this.OrigCountryRegionId, this.OrigState, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferIsAllowed</Name>
				<Source><![CDATA[
    public boolean transferIsAllowed()
    {
        InventTable         inventTable;
        IntrastatParameters intrastatParameters = IntrastatParameters::find();
        boolean             transfer = true;
        boolean             isServiceItem;

        inventTable = this.inventTable();

        if (Intrastat::isIntrastatCountryRegion_IT(this))
        {
            isServiceItem = this.ItemType_IT == IntrastatItemType_IT::Services;
        }
        else
        {
            isServiceItem = inventTable.inventItemType().isServiceItem();
        }

        switch (intrastatParameters.NoneOneOfAllSelected)
        {
            case NoneOneOfAllSelected::None :       transfer = true;
                                                    break;

            case NoneOneOfAllSelected::OneOf:       transfer = ((intrastatParameters.TransferOnlyNoneServices       &&
                                                                 !isServiceItem                                         ) ||
                                                                (intrastatParameters.TransferOnlyWithCommodityCode  &&
                                                                 inventTable.IntrastatCommodity != 0                    ) ||
                                                                (intrastatParameters.TransferOnlyWithIntraUnit      &&
                                                                 IntrastatUnitUtil::isAdditionalUnitSet(inventTable.IntrastatCommodity)                         ) ||
                                                                (intrastatParameters.TransferOnlyWithWeight         &&
                                                                 inventTable.NetWeight  != 0                            ));
                                                    break;

            case NoneOneOfAllSelected::All  :       transfer = ((!intrastatParameters.TransferOnlyNoneServices      ||
                                                                 !isServiceItem                                         ) &&
                                                                (!intrastatParameters.TransferOnlyWithCommodityCode ||
                                                                 inventTable.IntrastatCommodity != 0                    ) &&
                                                                (!intrastatParameters.TransferOnlyWithIntraUnit     ||
                                                                 IntrastatUnitUtil::isAdditionalUnitSet(inventTable.IntrastatCommodity)                     ) &&
                                                                (!intrastatParameters.TransferOnlyWithWeight        ||
                                                                 inventTable.NetWeight  != 0                            ));
                                                    break;
        }

        return transfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case (fieldNum(Intrastat, AccountNum)) :
                if (this.DebCredType == ModuleInventCustVend::Cust && !CustTable::find(this.AccountNum)&& this.AccountNum)
                {
                    this.AccountNum = "";
                }
                if (this.DebCredType == ModuleInventCustVend::Vend && !VendTable::find(this.AccountNum) && this.AccountNum)
                {
                    this.AccountNum = "";
                }

                if (this.DebCredType == ModuleInventCustVend::Cust && this.orig().AccountNum != this.AccountNum)
                {
                    this.vatNum    = CustTable::find(this.AccountNum).getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, this.TransDate);
                }
                if (this.DebCredType == ModuleInventCustVend::Vend && this.orig().AccountNum != this.AccountNum)
                {
                    this.vatNum    = VendTable::find(this.AccountNum).getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, this.TransDate);
                }

            break;

            case (fieldNum(Intrastat, DebCredType)) :
                if (this.DebCredType == ModuleInventCustVend::Cust && !CustTable::find(this.AccountNum) && this.AccountNum)
                {
                    this.AccountNum = "";
                }
                else if(this.DebCredType == ModuleInventCustVend::Vend && !VendTable::find(this.AccountNum) && this.AccountNum)
                {
                    this.AccountNum = "";
                }
                else if(this.DebCredType == ModuleInventCustVend::Invent)
                {
                    this.AccountNum = "";
                }
                if (this.RecId && this.orig().DebCredType != this.DebCredType)
                {
                    this.vatNum = "";
                }
            break;

            case (fieldNum(Intrastat, Yr)) :
                if (strLen(int2str(this.Yr)) != 4 && this.Correct == NoYes::Yes)
                {
                    ret = checkFailed("@SYS86763");
                }
            break;

            case (fieldNum(Intrastat, Consignments)) :
                if (this.Consignments < 0 && !this.Correct)
                {
                    ret = checkFailed(strFmt("@SYS332428", fieldPName(Intrastat, Consignments)));
                }
            break;

            case (fieldNum(Intrastat, AdditionalUnits)) :
                if (this.AdditionalUnits < 0 && !this.Correct)
                {
                    ret = checkFailed(strFmt("@SYS332428", fieldPName(Intrastat, AdditionalUnits)));
                }
            break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRecord</Name>
				<Source><![CDATA[
    boolean validateRecord()
    {
        IntrastatParameters intrastatParameters = IntrastatParameters::find();
        boolean ok = true;
        boolean specialDomistic = false;

        if (IntrastatCountryRegionParameters::find(this.CountryRegionId).CountryRegionType == CountryRegionType::SpecialDomestic)
        {
            specialDomistic = true;
        }

        if (IntrastatTransportMode::isPortMandatory(this.TransportMode) && (intrastatParameters.Port && !this.Port) && specialDomistic == false)
            ok = checkFailed("@SYS26970");

        if (!this.countryRegion_CountryRegion().isOcode && intrastatParameters.CountryRegion)
            ok = checkFailed("@SYS28661");

        if (! this.CountryRegionId && intrastatParameters.CountryRegion)
            ok = checkFailed("@SYS28661");

        if (! this.State && intrastatParameters.State && specialDomistic == false)
            ok = checkFailed("@SYS57801");

        if (! this.OrigCountryRegionId && intrastatParameters.OrigCountryRegion && specialDomistic == false)
            ok = checkFailed("@SYS26977");

        if (! this.IntrastatCommodity && intrastatParameters.IntrastatItemcode)
            ok = checkFailed("@SYS27176");

        if (! this.TransactionCode && intrastatParameters.TransactionCode)
            ok = checkFailed("@SYS27175");

        if (! this.vatNum && intrastatParameters.vatNum)
            ok = checkFailed("@SYS342947");

        if (intrastatParameters.Weight && specialDomistic == false)
        {
            EcoResCategoryIntrastat ecoResCategoryIntrastat = this.intrastatCommodityExt();
            if (!ecoResCategoryIntrastat.OptionalWeight && !this.Weight && !this.AdditionalUnits)
            {
                ok = checkFailed("@SYS26976");
            }
        }

        if (intrastatParameters.AdditionalUnit                   &&
            (this.intrastatCommodityExt().AdditionalUnits           &&
             this.intrastatCommodityExt().AdditionalUnits != '-'    &&
            !this.AdditionalUnits) && specialDomistic == false)
        {
             ok = checkFailed("@SYS26979");
        }

        if (!this.StatProcId && intrastatParameters.StatProcId)
            ok = checkFailed("@SYS92120");

        if (!this.Qty && intrastatParameters.Qty)
            ok = checkFailed("@SYS92121");

        if (!this.AmountMST && intrastatParameters.AmountMST)
            ok = checkFailed("@SYS92122");

        if (strLen(num2str(this.reportInvoiceValueMST(),11,0,0,0)) > 11)
            ok = checkFailed(strFmt("@SYS58851", this.reportInvoiceValueMST()));

        if (strLen(num2str(this.Weight,11,0,0,0)) > 11 && specialDomistic == false)
            ok = checkFailed(strFmt("@SYS58851", this.Weight));

        if (intrastatParameters.DlvTerm && specialDomistic == false)
        {
            if (!this.DlvTerm)
                ok = checkFailed("@SYS65256");
            else
                if (!this.dlvTerm().IntrastatCode)
                    ok = checkFailed("@SYS65257");
        }

        if (! this.TransportMode && intrastatParameters.TransportMode && specialDomistic == false)
            ok = checkFailed("@SYS73131");

        if (Intrastat::isIntrastatCountryRegion_IT(this))
        {
            ok = ok && this.validateRecordIT(intrastatParameters);
        }

        // <GEEEU>
        if (IntrastatParameters::isLegalEntityInEEU())
        {
            if ( ! this.SendReceiveCountryRegionId && intrastatParameters.instCheckSendRecvCtry)
            {
                ok = checkFailed("@GLS222631");
            }

            if (!this.SendReceiveState && intrastatParameters.instCheckSendRecvState)
            {
                ok = checkFailed("@GLS222632");
            }
        }
        // </GEEEU>

        // <GEECZ>
        if (IntrastatSpecMovement_CZ::isEnabled())
        {
            if (!this.IntrastatSpecMove_CZ && intrastatParameters.SpecMove_CZ && intrastatParameters.SpecificMovement_CZ)
            {
                ok = checkFailed("@GLS108382");
            }
        }
        // </GEECZ>

        // <GEEHU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        {
            if (intrastatParameters.IntrastatCheckFulfillmentDate_HU && !this.FulfillmentDate_HU)
            {
                ok = checkFailed(strFmt("@SYS4080008",this.ItemId,this.TransDate));
            }
        }
        // </GEEHU>

        if (TaxIntegrationUtils::isMultipleTaxIdEnabledForIntrastat())
        {
            if (intrastatParameters.TaxId && !this.TaxId)
            {
                ok = checkFailed("@IntrastatByTaxId:TaxRegNumNotSpecified");
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRecordIT</Name>
				<Source><![CDATA[
    private boolean validateRecordIT(IntrastatParameters intrastatParameters)
    {
        boolean ok = true;

        if (this.AmountMST < 0 && this.ItemType_IT == IntrastatItemType_IT::Services)
        {
            ok = checkFailed("@SYS4083065");
        }
        else if (this.AmountMST < 0 && !this.Correct)
        {
            ok = checkFailed("@SYS4083066");
        }

        if (this.AmountCur < 0 && !this.Correct)
        {
            ok = checkFailed("@Intrastat:AmountInCurCannotBeNegative");
        }

        if (this.Weight < 0 && intrastatParameters.Weight)
        {
            ok = checkFailed("@Intrastat:WeightCannotBeNegative");
		}

        if (this.AdditionalUnits < 0 && intrastatParameters.AdditionalUnit)
        {
            ok = checkFailed("@Intrastat:AdditionalUnitsCannotBeNegative");
		}

        if (!this.County && intrastatParameters.County)
        {
            ok = checkFailed("@SYS92123");
        }

		return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRecordES</Name>
				<Source><![CDATA[
    public boolean validateRecordES()
    {
        IntrastatParameters intrastatParameters = IntrastatParameters::find();
        boolean ok = true;

        if (IntrastatTransportMode::isPortMandatory(this.TransportMode) && (intrastatParameters.Port && !this.Port))
            ok = checkFailed("@SYS26970");

        if (! this.Port && intrastatParameters.Port)
            ok = checkFailed("@SYS26970");

        if (! this.StatProcId && intrastatParameters.StatProcId)
            ok = checkFailed("@SYS92120");

        if (! this.Qty && intrastatParameters.Qty)
            ok = checkFailed("@SYS92121");

        if (! this.AmountMST && intrastatParameters.AmountMST)
            ok = checkFailed("@SYS92122");

        if (! this.CountryRegionId && intrastatParameters.CountryRegion)
            ok = checkFailed("@SYS28661");

        if (! this.County && intrastatParameters.County)
            ok = checkFailed("@SYS92123");

        if (! this.OrigCountryRegionId && intrastatParameters.OrigCountryRegion)
            ok = checkFailed("@SYS26977");

        if (! this.IntrastatCommodity && intrastatParameters.IntrastatItemcode)
            ok = checkFailed("@SYS27176");

        if (! this.TransactionCode && intrastatParameters.TransactionCode)
            ok = checkFailed("@SYS27175");

        if (! this.vatNum && intrastatParameters.vatNum)
            ok = checkFailed("@SYS342947");

        if (intrastatParameters.Weight)
        {
            EcoResCategoryIntrastat ecoResCategoryIntrastat = this.intrastatCommodityExt();
            if (!ecoResCategoryIntrastat.OptionalWeight && !this.Weight && !this.AdditionalUnits)
            {
                ok = checkFailed("@SYS26976");
            }
        }

        if (intrastatParameters.AdditionalUnit                   &&
            (this.intrastatCommodityExt().AdditionalUnits           &&
             this.intrastatCommodityExt().AdditionalUnits != '-'    &&
            !this.AdditionalUnits))
        {
             ok = checkFailed("@SYS26979");
        }

        if (strLen(num2str(this.reportInvoiceValueMST(),11,0,0,0)) > 11)
            ok = checkFailed(strFmt("@SYS58851", this.reportInvoiceValueMST()));

        if (strLen(num2str(this.Weight,11,0,0,0)) > 11)
            ok = checkFailed(strFmt("@SYS58851", this.Weight));

        if (intrastatParameters.DlvTerm)
        {
            if (!this.DlvTerm)
                ok = checkFailed("@SYS65256");
            else
            {
                if (!this.dlvTerm().IntrastatCode)
                    ok = checkFailed("@SYS65257");
            }
        }

        if (! this.TransportMode && intrastatParameters.TransportMode)
            ok = checkFailed("@SYS73131");

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTransaction</Name>
				<Source><![CDATA[
    static void deleteTransaction(IntrastatDispatchId dispatch)
    {
        Intrastat    intrastat;

        ttsbegin;

        intrastat.selectForUpdate(true);
        delete_from intrastat where intrastat.DispatchId == dispatch && intrastat.Compress;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTransId</Name>
				<Source><![CDATA[
    static void deleteTransId(TableId   _transTableId,
                              RecId     _transRecId)
    {
        Intrastat    intrastat;
        ;

        intrastat.selectForUpdate(true);
        delete_from intrastat where intrastat.TransTableId == _transTableId && intrastat.TransRecId == _transRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(IntrastatDispatchId dispatch,
                         IntrastatSeqNum seqNum)
    {
        return (select intrastat
                    where intrastat.DispatchId == dispatch &&
                          intrastat.SeqNum   == seqNum
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static Intrastat find(IntrastatDispatchId dispatch,
                          IntrastatSeqNum   seqNum,
                          boolean           update = false)
    {
        Intrastat intrastat;
        ;

        intrastat.selectForUpdate(update);

        select intrastat
            where intrastat.DispatchId == dispatch &&
                  intrastat.SeqNum     == seqNum;

        return intrastat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIntrastatLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a transaction line qualifies for Intrastat.
    /// </summary>
    /// <param name="_intrastatTransferMap">
    /// The map that carries information to determine if a transaction line qualifies for Intrastat.
    /// </param>
    /// <param name="_intrastat">
    /// Corresponding Intrastat line that already has Intrastat formation from the transaction line.
    /// </param>
    /// <param name="_weight">
    /// Item weight for the transaction.
    /// </param>
    /// <returns>
    /// true if the transaction line qualifies for Intrastat: otherwise, false.
    /// </returns>
    public static boolean isIntrastatLine(IntrastatTransferMap _intrastatTransferMap,
                                          Intrastat _intrastat = null,
                                          Weight _weight = naReal())
    {
        IntrastatParameters intrastatParameters = IntrastatParameters::find();
        boolean             transfer = true;
        boolean             isServiceItem;
        boolean             isDescriptionBasedLine;
        Weight              weight;
        IntrastatConvert    intraUnit;

        if (_intrastatTransferMap.ItemId)
        {
            InventTable inventTable = _intrastatTransferMap.IntrastatTransferMap::inventTable();

            if (inventTable.IntrastatExclude)
            {
                return false;
            }

            isServiceItem = (inventTable.ItemType == ItemType::Service);
            isDescriptionBasedLine = false;
            weight = inventTable.NetWeight;
        }
        else
        {
            //If commodity code is absent then it is a service item
            isServiceItem = (!_intrastatTransferMap.IntrastatCommodity);
            isDescriptionBasedLine = true;
            weight = prmisDefault(_weight) ? _intrastatTransferMap.Weight : _weight;
        }

        if (Intrastat::isIntrastatCountryRegion_IT(_intrastat))
        {
            isServiceItem = _intrastat.ItemType_IT == IntrastatItemType_IT::Services;
        }

        switch (intrastatParameters.NoneOneOfAllSelected)
        {
            case NoneOneOfAllSelected::None :       transfer = true;
                break;

            case NoneOneOfAllSelected::OneOf:       transfer = ((intrastatParameters.TransferOnlyNoneServices       &&
                                                             !isServiceItem                                         ) ||
                                                            (intrastatParameters.TransferOnlyWithCommodityCode  &&
                                                             _intrastatTransferMap.IntrastatCommodity != 0                 ) ||
                                                            (intrastatParameters.TransferOnlyWithWeight         &&
                                                             weight  != 0                                           ));

                if (!isDescriptionBasedLine)
                {
                    transfer = transfer ||
                                                            (intrastatParameters.TransferOnlyWithIntraUnit      &&
                                                             IntrastatUnitUtil::isAdditionalUnitSet(_intrastatTransferMap.IntrastatCommodity));
                }
                break;

            case NoneOneOfAllSelected::All  :       transfer = ((!intrastatParameters.TransferOnlyNoneServices      ||
                                                             !isServiceItem                                         ) &&
                                                            (!intrastatParameters.TransferOnlyWithCommodityCode ||
                                                             _intrastatTransferMap.IntrastatCommodity  != 0                 ) &&
                                                            (!intrastatParameters.TransferOnlyWithWeight        ||
                                                             weight  != 0                                           ));

                if (!isDescriptionBasedLine)
                {
                    transfer = transfer &&
                                                            (!intrastatParameters.TransferOnlyWithIntraUnit     ||
                                                             IntrastatUnitUtil::isAdditionalUnitSet(_intrastatTransferMap.IntrastatCommodity));
                }

                break;
        }

        return transfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxNum</Name>
				<Source><![CDATA[
    static IntrastatSeqNum maxNum(IntrastatDispatchId dispatch)
    {
        IntrastatSeqNum retIntrastatSeqNum;

        IntrastatContext intrastatContext = IntrastatContext::current();

        if (intrastatContext)
        {
            retIntrastatSeqNum = intrastatContext.getCurrentSeqNumForDispatchId(dispatch);
        }
        else
        {
            retIntrastatSeqNum = (select maxof(SeqNum) from intrastat
                where intrastat.DispatchId == dispatch).SeqNum;
        }

        return retIntrastatSeqNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transNumExist</Name>
				<Source><![CDATA[
    static boolean transNumExist(IntrastatDispatchId dispatch)
    {
        boolean ret;

        IntrastatContext intrastatContext = IntrastatContext::current();

        if (intrastatContext)
        {
            ret = intrastatContext.isCached(dispatch);
        }
        else
        {
            ret = (select intrastat
                where intrastat.DispatchId == dispatch).RecId != 0;
        }
        return ret; 
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryStateIntrastatCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the state Intrastat code.
    /// </summary>
    /// <returns>The Intrastat code.</returns>
    public IntrastatExternalCode countryStateIntrastatCode()
    {
        AddressStateId state;

        if (this.Direction == IntrastatDirection::Export)
        {
            state = this.OrigState;
        }
        else
        {
            state = this.State;
        }

        LogisticsPostalAddress postalAddress = this.getPostalAddress();

        IntrastatExternalCode intrastatExternalCode = LogisticsAddressState::find(postalAddress.CountryRegionId, state).IntrastatCode;

        if (!intrastatExternalCode)
        {
            intrastatExternalCode = LogisticsAddressState::find(postalAddress.CountryRegionId, postalAddress.State).IntrastatCode;
        }

        return intrastatExternalCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostalAddress</Name>
				<Source><![CDATA[
    private LogisticsPostalAddress getPostalAddress()
    {
        if (TaxIntegrationUtils::isMultipleTaxIdEnabledForIntrastat())
        {
            TaxRegistration taxRegistration = TaxRegistration::find(this.TaxId);
            DirPartyLocation partyLocation = DirPartyLocation::findRec(taxRegistration.DirPartyLocation);
            return LogisticsPostalAddress::findByLocation(partyLocation.Location);
        }

        return CompanyInfo::find().postalAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIntrastatCountryRegion_IT</Name>
				<Source><![CDATA[
    private static boolean isIntrastatCountryRegion_IT(Intrastat _intrastat)
    {
        if (TaxIntegrationUtils::isMultipleTaxIdEnabledForIntrastat())
        {
            return _intrastat.TaxId && 
                LogisticsAddressCountryRegion::find(_intrastat.getPostalAddress().CountryRegionId).ISOcode == #isoIT;
        }

        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>origCountryRegionParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets Intrastat origin country/region parameters.
    /// </summary>
    /// <returns><c>IntrastatCountryRegionParameters</c> record.</returns>
    public IntrastatCountryRegionParameters origCountryRegionParameters()
    {
        return IntrastatCountryRegionParameters::find(this.OrigCountryRegionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyVATNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Key VAT number.
    /// </summary>
    /// <returns>Key VAT number.</returns>
    public VATNum keyVATNum()
    {
        str keyVATNum; 

        if (TaxIntegrationUtils::isMultipleTaxIdEnabledForIntrastat())
        {
            keyVATNum = TaxRegistration::find(this.TaxId).RegistrationNumber;
        }
        else
        {
            CompanyInfo companyInfo = CompanyInfo::find();
            VATNum vatNum = TaxRegistration::getCompanyTaxRegNum_W(this.TransDate, fieldNum(CompanyInfo, VATNum));

            if (this.Direction == IntrastatDirection::Import)
            {
                VATNum importVATNum = TaxRegistration::getCompanyTaxRegNum_W(this.TransDate, fieldNum(CompanyInfo, ImportVATNum));

                if (importVATNum)
                {
                    vatNum = importVATNum;
                }
            }

            keyVATNum = TaxVATNumTable::stripVATNum(vatNum, TaxCountryRegionParameters::find(companyInfo.postalAddress().CountryRegionId).SalesTaxCode);
        }

        return keyVATNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>origCountryRegionISOCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ISO code from country of origin.
    /// </summary>
    /// <returns>ISO code.</returns>
    public AddressCountryRegionISOCode origCountryRegionISOCode()
    {
        AddressCountryRegionISOCode isoCode = this.countryRegion_OrigCountryRegion().ISOcode;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoDE]))
        {
            if (this.Direction == IntrastatDirection::Import)
            {
                if (this.origCountryRegionParameters().CountryRegionType == CountryRegionType::Domestic)
                {
                    isoCode = this.countryRegion_CountryRegion().ISOcode;
                }
            }
        }

        return isoCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countryRegionIntrastatCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets intrastat code from country/region of destination.
    /// </summary>
    /// <returns>Intrastat code.</returns>
    public IntrastatExternalCode countryRegionIntrastatCode()
    {
        IntrastatExternalCode resultCode;

        if (FeatureStateProvider::isFeatureEnabled(IntrastatCountryRegionStateFeature::instance()))
        {
            resultCode = IntrastatStateParameters::find(this.CountryRegionId, this.State).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = IntrastatCountryRegionParameters::find(this.CountryRegionId).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = this.countryRegion_CountryRegion().ISOcode;
        }

        return resultCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>origCountryRegionIntrastatCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets intrastat code from country/region of origin.
    /// </summary>
    /// <returns>Intrastat code.</returns>
    public IntrastatExternalCode origCountryRegionIntrastatCode()
    {
        IntrastatExternalCode resultCode;

        if (FeatureStateProvider::isFeatureEnabled(IntrastatCountryRegionStateFeature::instance()))
        {
            resultCode = IntrastatStateParameters::find(this.OrigCountryRegionId, this.OrigState).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = IntrastatCountryRegionParameters::find(this.OrigCountryRegionId).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = this.origCountryRegionISOCode();
        }

        return resultCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendReceiverCountryRegionIntrastatCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets intrastat code from country/region of send/receiver.
    /// </summary>
    /// <returns>Intrastat code.</returns>
    public IntrastatExternalCode sendReceiverCountryRegionIntrastatCode()
    {
        IntrastatExternalCode resultCode;

        if (FeatureStateProvider::isFeatureEnabled(IntrastatCountryRegionStateFeature::instance()))
        {
            resultCode = IntrastatStateParameters::find(this.SendReceiveCountryRegionId, this.SendReceiveState).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = IntrastatCountryRegionParameters::find(this.SendReceiveCountryRegionId).IntrastatCode;
        }

        if (!resultCode)
        {
            resultCode = this.countryRegion_SendReceiveCountryRegion().ISOcode;
        }

        return resultCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportInvoiceValueMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the invoice value in the accounting currency for the report.
    /// </summary>
    /// <returns>
    /// Invoice value.
    /// </returns>
    /// <remarks>
    /// Invoice value is a sum of invoice amount and invoice charges.
    /// </remarks>
    display public IntrastatInvoiceValueMST reportInvoiceValueMST()
    {
        return this.AmountMST + this.InvoiceMarkupMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportInvoiceValueCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the invoice value in the transaction currency for the report.
    /// </summary>
    /// <returns>
    /// Invoice value.
    /// </returns>
    /// <remarks>
    /// Invoice value is a sum of invoice amount and invoice charges.
    /// </remarks>
    display public IntrastatInvoiceValueCur reportInvoiceValueCur()
    {
        return this.AmountCur + this.InvoiceMarkupCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportStatisticalValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the statistical value for the report.
    /// </summary>
    /// <returns>
    /// Statistical value.
    /// </returns>
    /// <remarks>
    /// Statistical value is a sum of statistical amount, statistical adjustment amount and invoice charges.
    /// </remarks>
    display public IntrastatStatisticalValue reportStatisticalValue()
    {
        return this.StatisticalValue + this.StatisticalAdjustmentAmount + this.Markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates statistical charges amount.
    /// </summary>
    public void calcMarkup()
    {
        this.Markup = CurrencyExchangeHelper::amount(this.StatisticalValue * this.MarkupPct / 100);
        this.updateMarkup_IT();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMarkupPct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates statistical charges factor.
    /// </summary>
    public void calcMarkupPct()
    {
        this.MarkupPct = this.StatisticalValue ? decRound(100 * this.Markup / this.StatisticalValue, 2) : 0;

        if (FeatureStateProvider::isFeatureEnabled(IntrastatMiscChargesPerKgFeature::instance()))
        {
            this.MarkupPct = this.StatisticalValue ?
                decRound(100 * (this.Markup - this.MiscChargePerKg * abs(this.Weight)) / this.StatisticalValue, 2) :
                0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendTableFromIntrastat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns <c>CustVendTable</c> based on account number of Intrastat record.
    /// </summary>
    /// <returns>A <c>CustVendTable</c> record.</returns>
    public CustVendTable getCustVendTableFromIntrastat()
    {
        CustVendTable custVendTable;

        switch (this.DebCredType)
        {
            case ModuleInventCustVend::Cust:
                custVendTable = CustTable::find(this.AccountNum);
                break;

            case ModuleInventCustVend::Vend:
                custVendTable = VendTable::find(this.AccountNum);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return custVendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMarkup_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates statistical charges amount on Intrastat record.
    /// </summary>
    public void updateMarkup_IT()
    {
        if (FeatureStateProvider::isFeatureEnabled(IntrastatMiscChargesPerKgFeature::instance()))
        {
            this.Markup = CurrencyExchangeHelper::amount(this.StatisticalValue * this.markupPct/100) +
                CurrencyExchangeHelper::amount(this.MiscChargePerKg * abs(this.Weight));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ForeignTrade</ConfigurationKey>
	<DeveloperDocumentation>@SYS124499</DeveloperDocumentation>
	<FormRef>Intrastat</FormRef>
	<Label>@SYS6530</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DispatchId</TitleField1>
	<TitleField2>SeqNum</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Intrastat</Modules>
	<PrimaryIndex>TransNumIdx</PrimaryIndex>
	<ReplacementKey>TransNumIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdditionalQty</Name>
			<Label>@SYS23728</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AdditionalQtyUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdditionalUnits</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Codes</Name>
			<Label>@SYS17782</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatCommodity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>itemCodeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Port</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatProcId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatTrans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tarif</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Preference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Container</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentMethod_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServicesDelivery_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatSpecMove_CZ</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompressionOfIntrastat</Name>
			<Label>@SYS5255</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>County</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatCommodity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatProcId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Port</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendReceiveCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendReceiveState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatSpecMove_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DebCredType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Correct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonthsOfYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuarterOfYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Yr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Corrections</Name>
			<Label>@Sys23845</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MonthsOfYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuarterOfYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Yr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedTransactionId_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomsCode_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedFileNumber_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CountryRegionOfOrigin</Name>
			<Label>@SYS27196</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrigCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigCounty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Data</Name>
			<Label>@SYS7403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NetWeightByUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Direction</Name>
			<Label>@SYS68014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DispatchDestination</Name>
			<Label>@Intrastat:DispatchDestination</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>County</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DebCredType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Correct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Compress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Consignments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemType_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MiscCharges</Name>
			<Label>@SYS8371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupPct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartDelivery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Container</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusTrans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Log</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentDate_HU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Yr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuarterOfYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonthsOfYear</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relation</Name>
			<Label>@SYS9114</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReportGroup</Name>
			<Label>@SYS345619</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DebCredType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatCommodity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdditionalUnits</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatisticalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Correct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SendReceiveAddress</Name>
			<Label>@Intrastat:SenderAddress</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SendReceiveCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendReceiveState</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StatisticalValue</Name>
			<Label>@SYS87792</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatisticalAdjustmentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatisticalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupPct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargePerKg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reportStatisticalValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Unit</Name>
			<Label>@SYS11959</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AdditionalUnits</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdditionalQtyUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>XMLReporting_CZ</Name>
			<Label>@GLS112441</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@Intrastat:InvoiceValueMST</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyIntrastatReportCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceMarkupMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reportInvoiceValueMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceMarkupCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reportInvoiceValueCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxId</Name>
			<Label>@TaxEngine:TaxRegistrationNumber</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AdditionalQtyUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Label>@Intrastat:AdditionalUnits</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AdditionalUnits</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@Intrastat:QuantityOfAdditionalUnits</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
			<Label>@Intrastat:InvoiceAmountCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatAmount</ExtendedDataType>
			<Label>@SYS79829</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Compress</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCompress</ExtendedDataType>
			<FeatureClass>IntrastatCompressToggle</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Consignments</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatConsignments</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Container</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23107</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Correct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS13069</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectedFileNumber_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCorrectedFileNumber_IT</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectedTransactionId_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCorrectedTransactionId_IT</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>County</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountyId</ExtendedDataType>
			<Label>@SYS92132</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CurrentAgreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23108</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomsCode_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCustomsCode_IT</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DebCredType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ModuleInventCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS6303</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Direction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>IntrastatToggle</FeatureClass>
			<EnumType>IntrastatDirection</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DispatchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatDispatchId</ExtendedDataType>
			<FeatureClass>IntrastatDispatchIdToggle</FeatureClass>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvModeId</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FulfillmentDate_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatFulfillmentDate_HU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntrastatSpecMove_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatSpecMove_CZ</ExtendedDataType>
			<FeatureClass>IntrastatSpecMoveToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IntrastatCommodity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatCommodityId</ExtendedDataType>
			<FeatureClass>IntrastatCommodityToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemType_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
			<EnumType>IntrastatItemType_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Log</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Markup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<Label>@Intrastat:Markup</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MarkupPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatMarkupPct</ExtendedDataType>
			<FeatureClass>IntrastatMarkupPctToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MonthsOfYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MonthsOfYear</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NetWeightByUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
			<Label>@SYS17907</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NGPCodesTable_FR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NGPCodesTableFRId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrderType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>IntrastatToggle</FeatureClass>
			<Visible>No</Visible>
			<EnumType>IntrastatOrderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigCountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemOrigCountryRegionId</ExtendedDataType>
			<FeatureClass>ItemOrigCountryRegionIdToggle</FeatureClass>
			<Label>@SYS27196</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigCounty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemOrigCountyId</ExtendedDataType>
			<Label>@SYS333476</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemOrigStateId</ExtendedDataType>
			<FeatureClass>ItemOrigStateIdToggle</FeatureClass>
			<Label>@SYS73785</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackingSlipId</ExtendedDataType>
			<Label>@SYS333831</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartDelivery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23109</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymentMethod_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
			<EnumType>IntrastatPaymentMethod_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Port</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatPortId</ExtendedDataType>
			<FeatureClass>IntrastatPortToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Preference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatPreference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>QuarterOfYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>QuarterOfYear</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>relation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SendReceiveCountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<Label>@Intrastat:CountryRegionOfSender</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SendReceiveState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
			<Label>@Intrastat:StateOfSender</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatSeqNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ServicesDelivery_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
			<EnumType>IntrastatServicesDelivery_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>State</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticalAdjustmentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatisticalAdjustmentAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticalValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatisticalValue</ExtendedDataType>
			<Label>@Intrastat:StatisticalAmount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatProcId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatProcId</ExtendedDataType>
			<FeatureClass>IntrastatProcToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatTrans</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatTrans</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>StatusTrans</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatDirectionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Tarif</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTarif</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransactionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTransactionCodeId</ExtendedDataType>
			<FeatureClass>IntrastatTransactionCodeToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTransport</ExtendedDataType>
			<FeatureClass>IntrastatTransportToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>IntrastatRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TransTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>IntrastatRefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UpdateNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Yr</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>YearBase</ExtendedDataType>
			<Label>@SYS342650</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceMarkupCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<FeatureClass>IntrastatItalianFieldsToggle</FeatureClass>
			<Label>@Intrastat:InvoiceMarkupCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceMarkupMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmountMST</ExtendedDataType>
			<Label>@Intrastat:InvoiceMarkupMST</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>DEL_IntrastatItemCodeId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TransferOrderStatValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>StatisticalValue</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AdditionalQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<CountryRegionCodes>CZ,EE,HU,LT,LV,PL</CountryRegionCodes>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MiscChargePerKg</Name>
			<ExtendedDataType>IntrastatMarkupPerKg</ExtendedDataType>
			<FeatureClass>IntrastatMiscChargesPerKgFeature</FeatureClass>
			<HelpText>@ExtendedItallianLocalization:ChargesPerKgHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
			<FeatureClass>IntrastatReportingByTaxIdToggle</FeatureClass>
			<Label>@TaxEngine:TaxRegistrationNumber</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCurOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMSTOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatAmount</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyIntrastatReportCurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<FeatureClass>IntrastatReportingByTaxIdToggle</FeatureClass>
			<HelpText>@IntrastatByTaxId:ReportingCurrencyHelpText</HelpText>
			<Label>@IntrastatByTaxId:ReportingCurrency</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCodeOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceMarkupCurOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceMarkupMSTOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmountMST</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MarkupCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MarkupCurOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MarkupMSTOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticalValueCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatisticalValue</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticalValueCurOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatisticalValue</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticalValueMSTOrig</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatStatisticalValue</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DispatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DatIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DispatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IntracodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DispatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IntrastatCommodity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransRelIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Category</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CountryRegionId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CountryRegionId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPackingSlipTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPackingSlipTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPackingSlipTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustRelation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DebCredType</Name>
					<Field>DebCredType</Field>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<SourceEDT>DlvModeId</SourceEDT>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm_DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DlvTerm_DlvTerm</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTerm</Name>
					<SourceEDT>DlvTermId</SourceEDT>
					<Field>DlvTerm</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatCommodity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IntrastatCommodity</Name>
					<Field>IntrastatCommodity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatPort</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatPort</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Port</Name>
					<SourceEDT>IntrastatPortId</SourceEDT>
					<Field>Port</Field>
					<RelatedField>PortId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PortIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatSpecMovement_CZ</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatSpecMovement_CZ</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IntrastatSpecMove_CZ</Name>
					<SourceEDT>IntrastatSpecMove_CZ</SourceEDT>
					<Field>IntrastatSpecMove_CZ</Field>
					<RelatedField>SpecialMovement_CZ</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SpecMoveIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatStatProc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatStatProc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StatProcId</Name>
					<SourceEDT>IntrastatProcId</SourceEDT>
					<Field>StatProcId</Field>
					<RelatedField>StatProcId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatProcIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatTransactionCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatTransactionCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransactionCode</Name>
					<SourceEDT>IntrastatTransactionCodeId</SourceEDT>
					<Field>TransactionCode</Field>
					<RelatedField>TransactionCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatTransportMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>IntrastatTransportMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportMode</Name>
					<SourceEDT>IntrastatTransport</SourceEDT>
					<Field>TransportMode</Field>
					<RelatedField>TransPortCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransPortCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransferJourLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferJourLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransferJourLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SendReceiveCountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>SendReceiveCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NGPCodesTable_FR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NGPCodesTable_FR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>NGPCodesTable_FR</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NGPCodesTable_FR</Name>
					<Field>NGPCodesTable_FR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OrigCountryRegionId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OrigCountryRegionId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigCountryRegionId</Name>
					<SourceEDT>ItemOrigCountryRegionId</SourceEDT>
					<Field>OrigCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjInvoiceItem</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjInvoiceItem</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjInvoiceItem</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPackingSlipTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPackingSlipTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPackingSlipTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransTableId</Name>
					<Field>TransTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendRelation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Intrastat</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DebCredType</Name>
					<Field>DebCredType</Field>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxId</Name>
					<Field>TaxId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>