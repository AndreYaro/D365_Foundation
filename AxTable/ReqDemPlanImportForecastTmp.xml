<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanImportForecastTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqDemPlanImportForecastTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>forecastModelIdLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a lookup on the ForecastModel table based on the company context of the current record.
    /// </summary>
    /// <param name="_formControl">
    /// The form control that the lookup is being used on.
    /// </param>
    public void forecastModelIdLookup(FormStringControl _formControl)
    {
        Query                   query;
        QueryBuildDataSource    qbds;
        SysTableLookup          lookup;

        query = new Query();
        query.allowCrossCompany(true);
        query.addCompanyRange(getCompany(tableNum(ForecastModel), this.ForecastDataAreaID));

        qbds = query.addDataSource(tableNum(ForecastModel));
        qbds.addRange(fieldNum(ForecastModel, Type)).value(queryValue(enum2int(HeadingSub::Heading)));

        lookup = SysTableLookup::newParameters(tableNum(ForecastModel), _formControl);
        lookup.addLookupfield(fieldNum(ForecastModel, ModelId));
        lookup.addLookupfield(fieldNum(ForecastModel, Txt));
        lookup.parmQuery(query);
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>forecastModelJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Implements the "View details" functionality on the given record.
    /// </summary>
    public void forecastModelJumpRef()
    {
        MenuFunction    menuFunction;
        ForecastModel   forecastModel;
        Args            args;

        appl.setDefaultCompany(getCompany(tableNum(ForecastModel), this.ForecastDataAreaID), false);

        args = new Args();

        if (this.ForecastModelId)
        {
            forecastModel = forecastModel::findForecastModelByName(this.ForecastModelId);
            args.record(forecastModel);
        }

        menuFunction = new MenuFunction(menuitemDisplayStr(ForecastModel), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ReqDemandPlanning</ConfigurationKey>
	<Label>@DMP1089</Label>
	<TableGroup>Worksheet</TableGroup>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ForecastDataAreaID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForecastModelId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ForecastDataAreaID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForecastModelId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ForecastDataAreaID</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ForecastModelId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ForecastModelId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CompanyModel</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ForecastDataAreaID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ForecastModelId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>