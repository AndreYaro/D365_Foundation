<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendCategory extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;
        super();
        this.postInsert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the required actions immediately after a new record is inserted.
    /// </summary>
    /// <remarks>
    /// This method should be positioned inside the same transaction as the insertion of the record.
    /// </remarks>
    private void postInsert()
    {
        VendProcurementCategoryStatus::findOrCreateVendorCategoryStatus(this.RecId, VendCategoryStatus::Standard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        VendCategory vendCategoryOriginal  = this.orig();

        if (vendCategoryOriginal.Category != this.Category ||
                vendCategoryOriginal.VendorAccount  != this.VendorAccount ||
                vendCategoryOriginal.VendorDataArea != this.VendorDataArea)
        {
            throw Global::error( strFmt("@SYS326690", this.RecId));
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>VendCategory</c> table exists.
    /// </summary>
    /// <param name="_vendAccount">
    /// The vendor account number.
    /// </param>
    /// <param name="_categoryId">
    /// The record ID of the <c>EcoResCategory</c> record.
    /// </param>
    /// <param name="_vendTableDataAreaId">
    /// The field in the <c>VendTable</c> table that is associated to the <paramref name="_vendAccountNum"
    /// /> parameter.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(VendAccount _vendAccount,
                                recId       _categoryId,
                                dataAreaId  _vendTableDataAreaId)
    {
        return (select firstonly RecId from vendCategory
                where vendCategory.VendorAccount    == _vendAccount &&
                vendcategory.Category               == _categoryId  &&
                vendcategory.VendorDataArea         == _vendTableDataAreaId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendCategory</c> table.
    /// </summary>
    /// <param name="_vendAccount">
    ///    The account number of the record to find.
    /// </param>
    /// <param name="_categoryId">
    ///    The category ID of the record to find.
    /// </param>
    /// <param name="_vendTableDataAreaId">
    ///    The company name of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendCategory</c> table; otherwise, an empty record.
    /// </returns>
    public static VendCategory find(VendAccount _vendAccount,
                                    recId       _categoryId,
                                    dataAreaId  _vendTableDataAreaId,
                                    boolean     _forUpdate = false)
    {
        VendCategory vendCategory = null;

        if (_vendAccount && _categoryId && _vendTableDataAreaId)
        {
            vendCategory.selectForUpdate(_forUpdate);
            select vendCategory
                where vendCategory.VendorAccount    == _vendAccount
                   && vendCategory.Category         == _categoryId
                   && vendCategory.VendorDataArea   == _vendTableDataAreaId;
        }

        return vendCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateVendorCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the specified record in the <c>VendCategory</c> table for the specified vendor,
    /// category, and data area.
    /// </summary>
    /// <param name="_vendAccount">
    /// The vendor account number.
    /// </param>
    /// <param name="_categoryId">
    /// The record ID of the <c>EcoResCategory</c> record.
    /// </param>
    /// <param name="_vendDataAreaId">
    /// The data area in the <c>VendTable</c> table that is associated to the <paramref name="_vendAccount"
    /// /> parameter.
    /// </param>
    /// <param name="_callDoInsert">
    /// A Boolean value that indicates whether the <c>doInsert</c> or <c>insert</c> method is used to
    /// create the new record.
    /// </param>
    /// <returns>
    /// A record of the <c>VendCategory</c> table if found; otherwise, an empty record.
    /// </returns>
    public static VendCategory findOrCreateVendorCategory(   VendAccount _vendAccount,
                                                                    recId       _categoryId,
                                                                    dataAreaId  _vendDataAreaId,
                                                                    boolean     _callDoInsert = false)
    {
        VendCategory vendCategory = null;

        if (_vendAccount != '' && _categoryId != 0   && _vendDataAreaId != '')
        {
            vendCategory = VendCategory::find(_vendAccount, _categoryId, _vendDataAreaId);

            if (vendCategory.RecId == 0)
            {
                vendCategory.clear();
                vendCategory.initValue();
                vendCategory.VendorAccount  = _vendAccount;
                vendCategory.VendorDataArea = _vendDataAreaId;
                vendCategory.Category       = _categoryId;

                if (vendCategory.validateWrite())
                {
                    if (_callDoInsert)
                    {
                        vendCategory.doInsert();
                    }
                    else
                    {
                        vendCategory.insert();
                    }
                }
            }
            else if (!_callDoInsert)
            {
                // for existing VendCategory - still need to execute the cascading action
                // if VendCategory.insert() was called
                // - so that the result of this API is the same
                //   whether a VendCategory is found or create.
                vendCategory.postInsert();
            }
        }

        return vendCategory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS320340</DeveloperDocumentation>
	<Label>@SYS135189</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendorAccount</TitleField1>
	<TitleField2>Category</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Vendor</Modules>
	<ReplacementKey>VendCategoryIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CatExternalCatalogCategories</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CatExternalCatalogCategories</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>VendProcurementCategoryStatus</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>VendProcurementCategoryStatus</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataArea</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendCategory</Name>
			<Label>@SYS135189</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorDataArea</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorDataArea</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorDataArea</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorDataArea</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CategoryModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>modifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendCategory</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataArea</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>VendorDataArea</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataArea</Name>
					<Field>VendorDataArea</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorAccount</Name>
					<Field>VendorAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>