<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetTable extends common
{
    #IsoCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEditOfAssetNum</Name>
				<Source><![CDATA[
    public boolean allowEditOfAssetNum()
    {
        NoYes   allowEdit;

        allowEdit = (AssetParameters::find().AutoNumber == NoYes::No);

        if (allowEdit)
        {
            allowEdit = (this.assetGroup().AutoNumber == NoYes::No);
        }

        return allowEdit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetAddressByDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the address that the fixed asset is located on the specified date.
    /// </summary>
    /// <param name="_currentDate">
    /// The specified date.
    /// </param>
    /// <returns>
    /// The city that the fixed asset is located on the specified date.
    /// </returns>
    public LogisticsPostalAddress assetAddressByDate_JP(TransferDate _currentDate)
    {
        LogisticsPostalAddress          postalAddress;
        AssetLocationTransferHistory_CN locationTransferHistory;

        if (this.Location)
        {
            select firstOnly FromLocation, TransferDate from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _currentDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                postalAddress = LogisticsPostalAddress::findByLocation(
                    AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation);
            }
            else
            {
                postalAddress = LogisticsPostalAddress::findByLocation(
                    AssetLocation::find(this.Location).LogisticsLocation);
            }
        }

        return postalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetAddressByEndDate</Name>
				<Source><![CDATA[
    internal LogisticsPostalAddress assetAddressByEndDate(TransferDate _startDate, TransferDate _endDate)
    {
        LogisticsLocation logisticsLocation;
        LogisticsPostalAddress logisticsPostalAddress;
        AssetLocationTransferHistory_CN locationTransferHistory;
        LogisticsLocationRecId logisticsLocationRecId;

        if (this.Location)
        {
            select firstOnly ToLocation from locationTransferHistory
                order by TransferDate desc
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                logisticsPostalAddress = LogisticsPostalAddress::findByLocation(AssetLocation::find(locationTransferHistory.ToLocation).LogisticsLocation);
            }
            else
            {
                locationTransferHistory.clear();

                select firstOnly FromLocation from locationTransferHistory
                    order by TransferDate
                    where locationTransferHistory.TransferDate > _endDate
                        && locationTransferHistory.AssetId == this.AssetId;

                if(locationTransferHistory)
                {
                    logisticsPostalAddress = LogisticsPostalAddress::findByLocation(AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation);
                }
                else
                {
                    locationTransferHistory.clear();

                    select firstOnly ToLocation from locationTransferHistory
                        order by TransferDate desc
                        where locationTransferHistory.TransferDate < _startDate
                            && locationTransferHistory.AssetId == this.AssetId;

                    if(locationTransferHistory)
                    {
                        logisticsPostalAddress = LogisticsPostalAddress::findByLocation(AssetLocation::find(locationTransferHistory.ToLocation).LogisticsLocation);
                    }
                    else
                    {
                        logisticsPostalAddress = LogisticsPostalAddress::findByLocation(AssetLocation::find(this.Location).LogisticsLocation);
                    }
                }
            }
        }

        return logisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetBookCurrent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the first asset book that is in the current posting layer.
    /// </summary>
    /// <returns>
    /// An asset book in the current posting layer.
    /// </returns>
    public AssetBook assetBookCurrent()
    {
        AssetBook      assetBook;
        AssetBookTable assetBookTable;

        select firstonly assetBook
            where assetBook.AssetId == this.AssetId
            exists join assetBookTable
                where assetBookTable.BookId == assetBook.BookId
                   && assetBookTable.CurrentOperationsTax == CurrentOperationsTax::Current;
        return assetBook;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetGroup</Name>
				<Source><![CDATA[
    public AssetGroup assetGroup()
    {
        return AssetGroup::find(this.AssetGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger dimension to which to post for a transaction with a fixed assets main account.
    /// </summary>
    /// <param name="_assetPostingProfile">
    /// Asset posting profile.
    /// </param>
    /// <param name="_assetTransType">
    /// Asset transaction type.
    /// </param>
    /// <param name="_bookId">
    /// Asset book id.
    /// </param>
    /// <param name="_assetDocumentType_JP">
    /// Asset document type.
    /// </param>
    /// <returns>
    /// The ledger dimension to which to post a transaction with a fixed assets main account.
    /// </returns>
    public LedgerDimensionDefaultAccount assetLedgerDimension(
        AssetPostingProfile   _assetPostingProfile   =  AssetParameters::find().PostingProfile,
        AssetTransType        _assetTransType        = AssetTransType::Depreciation,
        AssetBookId           _bookId                = this.defaultBookId()
        ,AssetDocumentType_JP _assetDocumentType_JP  =  AssetDocumentType_JP::None
        )
    {
        return AssetLedgerAccounts::assetLedgerDimension(this.AssetId,
                                                       _bookId,
                                                       _assetTransType,
                                                       _assetPostingProfile
                                                       // <GJP>
                                                       ,_assetDocumentType_JP
                                                       // </GJP>
                                                       );
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLogisticsLocationByDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the logistics location that the fixed asset is located at the specified date.
    /// </summary>
    /// <param name="_currentDate">
    /// The specified date.
    /// </param>
    /// <returns>
    /// The logistics location that the fixed asset is located at the specified date.
    /// </returns>
    public LogisticsLocation assetLogisticsLocationByDate_JP(TransferDate _specifiedDate)
    {
        LogisticsLocation               logisticsLocation;
        LogisticsPostalAddress          logisticsPostalAddress;
        AssetLocationTransferHistory_CN locationTransferHistory;
        LogisticsLocationRecId          logisticsLocationRecId;

        if (this.Location)
        {
            select firstOnly FromLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate  >= _specifiedDate
                    && locationTransferHistory.AssetId      == this.AssetId;

            if (locationTransferHistory)
            {
                logisticsLocationRecId = AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation;
            }
            else
            {
                logisticsLocationRecId = AssetLocation::find(this.Location).LogisticsLocation;
            }

            select firstOnly RecId from logisticsLocation
                where logisticsLocation.RecId == logisticsLocationRecId
                // Get a valid logistics location
                join RecId from logisticsPostalAddress
                    where logisticsPostalAddress.Location == logisticsLocation.RecId;
        }

        return logisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetTaxRegistrationByDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the tax registration that the fixed asset is located at the specified date.
    /// </summary>
    /// <param name="_currentDate">
    /// The specified date.
    /// </param>
    /// <returns>
    /// The registration number that the fixed asset is located at the specified date.
    /// </returns>
    public TaxRegistration assetTaxRegistrationByDate_JP(TransferDate _specifiedDate)
    {
        AssetLocationId                 assetLocationId;
        TaxRegistration                 taxRegistration;
        AssetLocationTransferHistory_CN locationTransferHistory;

        if (this.Location)
        {
            select firstOnly FromLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _specifiedDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                assetLocationId = locationTransferHistory.FromLocation;
            }
            else
            {
                assetLocationId = this.Location;             
            }

            taxRegistration = TaxRegistration::find(
                AssetLocation::find(assetLocationId).TaxRegistration_JP,
                false,
                ConcurrencyModel::Auto,
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        }
        return taxRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetTaxRegistrationByDate_JP_StartDate</Name>
				<Source><![CDATA[
    internal TaxRegistration assetTaxRegistrationByDate_JP_StartDate(TransferDate _startDate, TransferDate _endDate)
    {
        AssetLocationId assetLocationId;
        TaxRegistration taxRegistration;
        AssetLocationTransferHistory_CN locationTransferHistory;

        if (this.Location)
        {
            select firstOnly FromLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                assetLocationId = locationTransferHistory.FromLocation;
            }
            else
            {
                locationTransferHistory.clear();

                select firstOnly FromLocation from locationTransferHistory
                    order by TransferDate
                    where locationTransferHistory.TransferDate > _endDate
                        && locationTransferHistory.AssetId == this.AssetId;

                if(locationTransferHistory)
                {
                    assetLocationId = locationTransferHistory.FromLocation;               
                }
                else
                {
                    locationTransferHistory.clear();

                    select firstOnly ToLocation from locationTransferHistory
                        order by TransferDate
                        where locationTransferHistory.TransferDate < _startDate
                            && locationTransferHistory.AssetId == this.AssetId;

                    if(locationTransferHistory)
                    {
                        assetLocationId = locationTransferHistory.ToLocation;
                    }
                    else
                    {
                        assetLocationId = this.Location;
                    }                
                }
            }

            taxRegistration = TaxRegistration::find(
                AssetLocation::find(assetLocationId).TaxRegistration_JP,
                false,
                ConcurrencyModel::Auto,
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        }
        return taxRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetTaxRegistrationByDate_JP_EndDate</Name>
				<Source><![CDATA[
    internal TaxRegistration assetTaxRegistrationByDate_JP_EndDate(TransferDate _startDate, TransferDate _endDate)
    {
        AssetLocationId assetLocationId;
        TaxRegistration taxRegistration;
        AssetLocationTransferHistory_CN locationTransferHistory;

        if (this.Location)
        {
            select firstOnly ToLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                assetLocationId = locationTransferHistory.ToLocation;
            }
            else
            {
                locationTransferHistory.clear();

                select firstOnly FromLocation from locationTransferHistory
                    order by TransferDate
                    where locationTransferHistory.TransferDate > _endDate
                        && locationTransferHistory.AssetId == this.AssetId;

                if(locationTransferHistory)
                {
                    assetLocationId = locationTransferHistory.FromLocation;
                }
                else
                {
                    locationTransferHistory.clear();

                    select firstOnly ToLocation from locationTransferHistory
                        order by TransferDate
                        where locationTransferHistory.TransferDate < _startDate
                            && locationTransferHistory.AssetId == this.AssetId;

                    if(locationTransferHistory)
                    {
                        assetLocationId = locationTransferHistory.ToLocation;
                    }
                    else
                    {
                        assetLocationId = this.Location;
                    }
                }
            }

            taxRegistration = TaxRegistration::find(
                AssetLocation::find(assetLocationId).TaxRegistration_JP,
                false,
                ConcurrencyModel::Auto,
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        }
        return taxRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLogisticsLocationByDate_JP_StartDate</Name>
				<Source><![CDATA[
    internal LogisticsLocation assetLogisticsLocationByDate_JP_StartDate(TransferDate _startDate, TransferDate _endDate)
    {
        LogisticsLocation logisticsLocation;
        LogisticsPostalAddress logisticsPostalAddress;
        AssetLocationTransferHistory_CN locationTransferHistory;
        LogisticsLocationRecId logisticsLocationRecId;

        if (this.Location)
        {
            select firstOnly FromLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                logisticsLocationRecId = AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation;
            }
            else
            {
                locationTransferHistory.clear();

                select firstOnly FromLocation from locationTransferHistory
                    order by TransferDate
                    where locationTransferHistory.TransferDate > _endDate
                        && locationTransferHistory.AssetId == this.AssetId;

                if(locationTransferHistory)
                {
                    logisticsLocationRecId = AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation;
                }
                else
                {
                    locationTransferHistory.clear();

                    select firstOnly ToLocation from locationTransferHistory
                        order by TransferDate
                        where locationTransferHistory.TransferDate < _startDate
                            && locationTransferHistory.AssetId == this.AssetId;

                    if(locationTransferHistory)
                    {
                        logisticsLocationRecId = AssetLocation::find(locationTransferHistory.ToLocation).LogisticsLocation;
                    }
                    else
                    {
                        logisticsLocationRecId = AssetLocation::find(this.Location).LogisticsLocation;
                    }
                }
            }

            select firstOnly RecId from logisticsLocation
                where logisticsLocation.RecId == logisticsLocationRecId
                join RecId from logisticsPostalAddress
                    where logisticsPostalAddress.Location == logisticsLocation.RecId;
        }
        
        return logisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLogisticsLocationByDate_JP_EndDate</Name>
				<Source><![CDATA[
    internal LogisticsLocation assetLogisticsLocationByDate_JP_EndDate(TransferDate _startDate, TransferDate _endDate)
    {
        LogisticsLocation logisticsLocation;
        LogisticsPostalAddress logisticsPostalAddress;
        AssetLocationTransferHistory_CN locationTransferHistory;
        LogisticsLocationRecId logisticsLocationRecId;

        if (this.Location)
        {
            select firstOnly ToLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                logisticsLocationRecId = AssetLocation::find(locationTransferHistory.ToLocation).LogisticsLocation;
            }
            else
            {
                locationTransferHistory.clear();

                select firstOnly FromLocation from locationTransferHistory
                    order by TransferDate
                    where locationTransferHistory.TransferDate > _endDate
                        && locationTransferHistory.AssetId == this.AssetId;

                if(locationTransferHistory)
                {
                    logisticsLocationRecId = AssetLocation::find(locationTransferHistory.FromLocation).LogisticsLocation;
                }
                else
                {
                    locationTransferHistory.clear();

                    select firstOnly ToLocation from locationTransferHistory
                        order by TransferDate
                        where locationTransferHistory.TransferDate < _startDate
                            && locationTransferHistory.AssetId == this.AssetId;

                    if(locationTransferHistory)
                    {
                        logisticsLocationRecId = AssetLocation::find(locationTransferHistory.ToLocation).LogisticsLocation;
                    }
                    else
                    {
                        logisticsLocationRecId = AssetLocation::find(this.Location).LogisticsLocation;
                    }
                }
            }

            select firstOnly RecId from logisticsLocation
                where logisticsLocation.RecId == logisticsLocationRecId
                join RecId from logisticsPostalAddress
                    where logisticsPostalAddress.Location == logisticsLocation.RecId;
        }

        return logisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransferHistory</Name>
				<Source><![CDATA[
    public boolean isTransferHistory(TransferDate _startDate, TransferDate _endDate)
    {
        AssetLocationTransferHistory_CN locationTransferHistory;
        boolean ret = false;

        if (this.Location)
        {
            select firstOnly FromLocation from locationTransferHistory
                order by TransferDate
                where locationTransferHistory.TransferDate >= _startDate
                    && locationTransferHistory.TransferDate <= _endDate
                    && locationTransferHistory.AssetId == this.AssetId;

            if (locationTransferHistory)
            {
                ret = true;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetOffsetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger dimension to which to post for a transaction with a fixed assets offset account.
    /// </summary>
    /// <param name="_assetPostingProfile">
    /// Asset posting profile.
    /// </param>
    /// <param name="_assetTransType">
    /// Asset transaction type.
    /// </param>
    /// <param name="_bookId">
    /// Asset book id.
    /// </param>
    /// <param name="_throwError">
    /// Indicates whether throw error or not.
    /// </param>
    /// <param name="_assetDocumentType_JP">
    /// Asset document type.
    /// </param>
    /// <param name="_assetDocumentEntryRecId">
    /// Asset document entry recid. Optional
    /// </param>
    /// <returns>
    /// The ledger dimension to which to post a transaction with a fixed assets offset account.
    /// </returns>
    public LedgerDimensionDefaultAccount assetOffsetLedgerDimension(
        AssetPostingProfile   _assetPostingProfile   =  AssetParameters::find().PostingProfile,
        AssetTransType        _assetTransType        = AssetTransType::Depreciation,
        AssetBookId           _bookId                = this.defaultBookId(),
        boolean               _throwError            = false
        ,AssetDocumentType_JP _assetDocumentType_JP  = AssetDocumentType_JP::None
        ,AssetDocumentRecId_JP  _assetDocumentEntryRecId = 0
        )
    {
        return AssetLedgerAccounts::assetOffsetLedgerDimension(this.AssetId,
                                                             _bookId,
                                                             _assetTransType,
                                                             _assetPostingProfile,
                                                             _throwError
                                                             // <GJP>
                                                             ,_assetDocumentType_JP
                                                              ,_assetDocumentEntryRecId
                                                             // </GJP>
                                                            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>book</Name>
				<Source><![CDATA[
    public AssetBook book(AssetBookId bookId = this.defaultBookId())
    {
        return AssetBook::find(this.AssetId,bookId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMainAssetId</Name>
				<Source><![CDATA[
    public boolean checkMainAssetId(AssetId mainAssetId = this.MainAssetId) // Check that mainAssetId is not a child of the current Asset
    {
        AssetTable childAsset;

        if (!mainAssetId)
        {
            return true;
        }

        if (this.AssetId == mainAssetId)
        {
            return checkFailed("@SYS67410");
        }

        while select AssetId from childAsset
            where childAsset.MainAssetId == this.AssetId
        {
            if (!childAsset.checkMainAssetId(mainAssetId))
            {
                return false;
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAssetBooksFromAssetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates <c>AssetBook</c> record based on the definition from
    /// <c>AssetGroupBookSetup</c> record.
    /// </summary>
    public void createAssetBooksFromAssetGroup()
    {
        AssetGroupBookSetup  assetGroupBookSetup;

        // For each AssetGroupBookSetup record of the AssetGroup, to which the AssetTable
        // belongs, is created an AssetBook record if it does not exist yet.
        while select assetGroupBookSetup
            where assetGroupBookSetup.AssetGroup == this.AssetGroup
        {
            AssetBook::createFromAssetGroupBookSetup(this, assetGroupBookSetup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAssetBooksFromPurchase_RU</Name>
				<Source><![CDATA[
    [SysObsolete('This method has been deprecated', false, 25\5\2020)]
    public void initAssetBooksFromPurchase_RU(RAssetPurchTrans _rAssetPurchTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAssetBonusFromAssetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates <c>AssetBookBonus</c> record based on the definition from
    /// <c>AssetGroupSetupBonus</c> record.
    /// </summary>
    public void createAssetBonusFromAssetGroup()
    {
        AssetGroupSetupBonus  assetGroupSetupBonus;

        // For each AssetGroupSetupBonus record of the AssetGroup, to which the AssetTable
        // belongs, is created an AssetBookBonus record if it does not exist yet.
        while select assetGroupSetupBonus
            where assetGroupSetupBonus.AssetGroupId == this.AssetGroup
        {
            AssetBookBonus::createFromAssetGroupSetupBonus(this, assetGroupSetupBonus);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBookId</Name>
				<Source><![CDATA[
    display AssetBookId defaultBookId()
    {
        return AssetParameters::find().BookIdDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the default dimension for the asset book ID.
    /// </summary>
    /// <param name="_bookId">
    ///    The asset book ID.
    /// </param>
    /// <returns>
    ///    The default dimension for the specified asset book ID.
    /// </returns>
    public DimensionDefault defaultDimension(AssetBookId _bookId)
    {
        AssetLending assetLending;
        DimensionDefault defaultDimension;
        List dimensionSources;

        dimensionSources = new List(Types::Class);

        // check if the asset is on loan
        assetLending = AssetLending::findLent(this.AssetId);
        if (assetLending)
        {
            // first source is dimensions from the asset lending
            dimensionSources.addEnd(LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(assetLending.DefaultDimension));
        }

        // second source dimensions from asset book
        dimensionSources.addEnd(LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(this.book(_bookId).DefaultDimension));

        // Get dimension using defaults from various sources
        defaultDimension = LedgerDimensionDefaultingEngine::getDefaultDimension(dimensionSources);

        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a row from the table and puts the <c>AssetId</c> and <c>Barcode</c> fields in the available
    /// pool of their number sequence if they were auto-generated.
    /// </summary>
    public void delete()
    {
        // It is the same as SYS, add this comment to keep it in SYP.

        // Check to see if the associated dimension attribute value has been used
        // in a way that would prevent deletion.
        if (!DimensionValidation::canDeleteEntityValue(this))
        {
            throw error(strFmt("@SYS134392", this.AssetId));
        }

        ttsbegin;

        // Update the associated dimension attribute value.
        DimensionAttributeValue::updateForEntityValueDelete(this);

        super();

        if (this.assetGroup().AutoNumber && this.assetGroup().AutoNumberSequenceTable && this.AssetId)
        {
            NumberSeq::releaseNumber(this.assetGroup().AutoNumberSequenceTable, this.AssetId);
        }

        if (this.assetGroup().AutoNumberBarcode && this.assetGroup().BarcodeNumberSequenceTable && this.Barcode)
        {
            NumberSeq::releaseNumber(this.assetGroup().BarcodeNumberSequenceTable, this.Barcode);
        }
    
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAssetActivityCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the activity code.
    /// </summary>
    /// <param name="_set">
    ///    true if the activity code is set; otherwise, false.
    /// </param>
    /// <param name="_assetActivityCode">
    ///    The new activity code when the <paramref name="set" /> parameter is true.
    /// </param>
    /// <returns>
    ///    The activity code of the record in the <c>AssetActivityCode</c> table.
    /// </returns>
    public edit  AssetActivityCodeId editAssetActivityCode(boolean _set, AssetActivityCodeId _assetActivityCode)
    {
        if (_set)
        {
            this.AssetActivityCode = AssetActivityCode::findByAssetActivityCode(_assetActivityCode).RecId;
        }
        else
        {
            _assetActivityCode = AssetActivityCode::find(this.AssetActivityCode).AssetActivityCode;
        }
        return _assetActivityCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAssetPropertyGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the property group.
    /// </summary>
    /// <param name="_set">
    ///    true if the property group is set; otherwise, false.
    /// </param>
    /// <param name="_assetPropertyGroup">
    ///    The new property group when the <paramref name="set" /> parameter is true.
    /// </param>
    /// <returns>
    ///    The property group of the record in the <c>AssetPropertyGroup</c> table.
    /// </returns>
    public edit  AssetPropertyGroupCodeId editAssetPropertyGroup(boolean _set, AssetPropertyGroupCodeId _assetPropertyGroup)
    {
        if (_set)
        {
            this.AssetPropertyGroup = AssetPropertyGroup::findByAssetPropertyGroup(_assetPropertyGroup).RecId;
        }
        else
        {
            _assetPropertyGroup = AssetPropertyGroup::find(this.AssetPropertyGroup).AssetPropertyGroup;
        }
        return _assetPropertyGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasOpenAssetBook</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>AssetBook::hasOpenBookForAsset</c> method to check if any asset book with a status of
    ///    Open is assigned to Fixed Asset.
    /// </summary>
    /// <returns>
    ///    The output of the <c>AssetBook::hasOpenBookForAsset</c> method.
    /// </returns>
    public boolean hasOpenAssetBook()
    {
        return AssetBook::hasOpenBookForAsset(this.AssetId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAssetNumberSeq</Name>
				<Source><![CDATA[
    public NumberSeq initAssetNumberSeq(AssetGroupId _assetGroupId = '')
    {
        NumberSeq assetNumberSeq = AssetGroup::getNumberSeqForGroup(_assetGroupId ? _assetGroupId : this.AssetGroup);

        return assetNumberSeq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBarcodeNumberSeq</Name>
				<Source><![CDATA[
    public NumberSeq initBarcodeNumberSeq()
    {
        AssetParameters assetParameters = AssetParameters::find();
        AssetGroup      assetGroup = AssetGroup::find(this.AssetGroup);
        NumberSeq       assetBarcodeNumberSeq;

        // Autonumber barcodes
        if (!assetParameters.BarcodeEqualsAssetNumber &&
             assetGroup.AutoNumberBarcode             &&
             assetGroup.BarcodeNumberSequenceTable)
        {
            assetBarcodeNumberSeq = NumberSeq::newGetNumFromId(assetGroup.BarcodeNumberSequenceTable, true);
        }

        return assetBarcodeNumberSeq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAssetGroupId</Name>
				<Source><![CDATA[
    public void initFromAssetGroupId(AssetGroupId _assetGroupId)
    {
        AssetGroup assetGroup;

        assetGroup = AssetGroup::find(_assetGroupId);
        this.AssetType = assetGroup.AssetType;
        this.MajorType = assetGroup.MajorType;
        this.PropertyType = assetGroup.PropertyType;
        this.Location = assetGroup.Location;

        if (BrazilParameters::isEnabled())
        {
            this.ICMSCreditInstallments_BR = assetGroup.ICMSCreditInstallments_BR;
            this.TaxICMSOutgoing_BR = assetGroup.TaxICMSOutgoing_BR;

            this.PISCOFINSReceivableLongTerm_BR     = assetGroup.PISCOFINSReceivableLongTerm_BR;
            this.PISCOFINSCreditGroup_BR            = assetGroup.PISCOFINSCreditGroup_BR;
            this.PISCOFINSCreditInstallments_BR     = assetGroup.PISCOFINSCreditInstallments_BR;
            this.PISCOFINSCreditPurpose_BR          = assetGroup.PISCOFINSCreditPurpose_BR;
            this.PISCOFINSAppropriationMethod_BR    = assetGroup.PISCOFINSAppropriationMethod_BR;
            this.PISTaxationCode_BR                 = assetGroup.PISTaxationCode_BR;
            this.COFINSTaxationCode_BR              = assetGroup.COFINSTaxationCode_BR;
        }

        // <GJP>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        {
            this.AssetClassification_JP = assetGroup.AssetClassification_JP;
            this.AssetDeferredType_JP   = assetGroup.AssetDeferredType_JP;
        }
        // </GJP>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        #define.DefaultQty(1)
        #define.DefaultDenominator(1)

        super();
        this.Quantity = #DefaultQty;

        // <GJP>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        {
            this.ExceptionTaxationRateDenominator_JP = #DefaultDenominator;
        }
        // </GJP>
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert(boolean _skipCreateBooks = false)
    {
        if (this.isAssetNameExceedMaxLength())
        {
            error(strFmt("@FixedAssets:ErrorFixedAssetNameTooLong", AssetConstants::AssetNameMaxLength));
        }

        if (AssetParameters::find().BarcodeEqualsAssetNumber)
        {
            this.Barcode = this.AssetId;
        }

        this.setNameAlias();

        super();

        if (! _skipCreateBooks)
        {
            this.createAssetBooksFromAssetGroup();
            this.createAssetBonusFromAssetGroup();
        }

        DimensionDefaultFacade::copyDimensionValueToDefaultDimensionField(this, fieldNum(AssetTable, AssetId), this, fieldNum(AssetTable, DefaultDimension));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);
        switch (_fieldId)
        {
            case fieldNum(AssetTable, AssetGroup):
                this.initFromAssetGroupId(this.AssetGroup);
                break;
            case fieldNum(AssetTable, Name):
                this.setNameAlias();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfile</Name>
				<Source><![CDATA[
    public AssetPostingProfile postingProfile(AssetBookId _bookId)
    {
        AssetLending    assetLending;
        AssetBook       assetBook;

        // check if the asset is on loan
        assetLending = AssetLending::findLent(this.AssetId);
        if (assetLending.PostingProfile)
        {
            return assetLending.PostingProfile;
        }

        assetBook = this.book(_bookId);

        if (assetBook.PostingProfile)
        {
            return assetBook.PostingProfile;
        }

        return AssetParameters::find().PostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryValueModelForAssetProject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>AssetBook::getPrimaryBookForAssetProject</c> method.
    /// </summary>
    /// <returns>
    ///    The <c>AssetBookId</c> value returned from the <c>AssetBook::getPrimaryBookForAssetProject</c>
    ///    method.
    /// </returns>
    /// <remarks>
    ///    This method returns the value model ID assigned to the asset ID associated with the current project.
    /// </remarks>
    display AssetBookId primaryValueModelForAssetProject()
    {
        return AssetBook::getPrimaryBookForAssetProject(this.AssetId).BookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryValueModelStatusForAssetProject</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the status of the value model (<c>AssetBook</c>) of a fixed asset record.
    /// </summary>
    /// <returns>
    ///    The status of fixed asset from the <c>AssetBook</c> table.
    /// </returns>
    /// <remarks>
    ///    This method returns the value that results from a call to the
    ///    <c>AssetBook::getPrimaryBookForAssetProject</c> method.
    /// </remarks>
    public display AssetStatusStr primaryValueModelStatusForAssetProject()
    {
        AssetBook       assetBook;
        AssetStatusStr  assetStatus;

        assetBook = AssetBook::getPrimaryBookForAssetProject(this.AssetId);

        if (assetBook)
        {
            assetStatus = enum2str(assetBook.Status);
        }

        return assetStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reductionEntryDocumentDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays and edits asset document reduction entry document date
    /// </summary>
    /// <param name="_set">
    /// Indicates whether the edit method is being used to show (_set = false) or modify (_set = true).
    /// </param>
    /// <param name="_documentDate">
    /// Asset document reduction entry document date.
    /// </param>
    /// <returns>
    /// Asset document reduction entry document date.
    /// </returns>
    public edit AssetReductionEntryDocumentDate_JP reductionEntryDocumentDate_JP(
        boolean                                  _set,
        AssetReductionEntryDocumentDate_JP       _documentDate)
    {
        AssetDocumentReductionEntry_JP      document;
        AssetReductionEntryDocumentDate_JP  documentDateLoc;

        document = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
            this.AssetId,
            '');

        if (_set)
        {
            documentDateLoc = _documentDate;
            if (document != null)
            {
                document.parmReductionEntryDocumentDate(documentDateLoc);
                document.updateReductionEntryDocument();
            }
        }
        else
        {
            if (document != null)
            {
                documentDateLoc = document.parmReductionEntryTable().DocumentDate;
            }
        }

        return documentDateLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reductionEntryTemplateId_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays and edits asset document template id.
    /// </summary>
    /// <param name="_set">
    /// Indicates whether the edit method is being used to show (_set = false) or modify (_set = true).
    /// </param>
    /// <param name="_templateId">
    /// Asset document template id.
    /// </param>
    /// <returns>
    /// Asset document template id.
    /// </returns>
    public edit AssetReductionEntryProfileId_JP reductionEntryTemplateId_JP(
        boolean                                  _set,
        AssetReductionEntryProfileId_JP         _templateId)
    {
        AssetDocumentReductionEntry_JP           document;
        AssetDocumentReductionEntryTemplateId_JP templateId;

        document = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
            this.AssetId,
            '');
        if (_set)
        {
            templateId = _templateId;

            if (document != null)
            {
                if (templateId)
                {
                    document.updateAssetDocumentEntryByDocument(AssetDocumentMainType_JP::ReductionEntry, _templateId);
                }
                else
                {
                    document.deleteAssetDocumentEntry();
                }
            }
            else
            {
                AssetDocumentReductionEntry_JP::createAssetDocumentEntry(this.AssetId, '', templateId);
            }
        }
        else
        {
            if (document != null)
            {
                templateId = document.parmAssetDocumentTable().DocumentId;
            }
        }

        return templateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    public void renamePrimaryKey()
    {
        DimensionValueRenameV2 rename = DimensionValueRenameV2::construct(this, this.orig());
        rename.syncRenamedValuePreSuper();

        super();

        rename.syncRenamedValuePostSuper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNameAlias</Name>
				<Source><![CDATA[
    public void setNameAlias()
    {
        if (! this.NameAlias)
        {
            this.NameAlias = name2Alias(this.Name);
    }
    }

]]></Source>
			</Method>
			<Method>
				<Name>topMainAsset</Name>
				<Source><![CDATA[
    public AssetId topMainAsset() // gives the top level asset in a component tree
    {
        AssetId  assetId     = this.AssetId;
        AssetId  mainAssetId = this.MainAssetId;

        while (mainAssetId)
        {
            assetId     = mainAssetId;
            mainAssetId = (select firstonly MainAssetId from assetTable
                               where assetTable.AssetId == mainAssetId).MainAssetId;
        }

        return assetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        AssetTable this_Orig = this.orig();

        if (this_Orig.Name != this.Name
            && this.isAssetNameExceedMaxLength())
        {
            error(strFmt("@FixedAssets:ErrorFixedAssetNameTooLong", AssetConstants::AssetNameMaxLength));
        }

        AssetBook   assetBook;
        // <GEEU>
        AssetInternalTransferHistory assetInternalTransferHistory;
        // </GEEU>
        // <GEELV>
        boolean    isLV = SysCountryRegionCode::isLegalEntityInCountryRegion([#IsoLV]);
        // </GEELV>

        ttsbegin;

        this.setNameAlias();

        super();

        // <GEECZ><GEEHU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoHU]))
        {
            if (this.AcquisitionDate_W != this_Orig.AcquisitionDate_W ||
                this.AcquisitionPrice_W != this_Orig.AcquisitionPrice_W ||
                !DimensionDefaultFacade::areEqual(this.DefaultDimension, this_Orig.DefaultDimension))
            {
                while select forupdate assetBook
                    where assetBook.AssetId == this.AssetId
                {
                    assetBook.AcquisitionPrice      = this.AcquisitionPrice_W;
                    assetBook.AcquisitionDate       = this.AcquisitionDate_W;
                    assetBook.CategorizationDate_CZ = this.AcquisitionDate_W;
                    if (isLV)
                    {
                        assetBook.initDepreciationStartDate_HU();
                        assetBook.DefaultDimension = this.DefaultDimension;
                    }
                    assetBook.update();
                }
            }
        }
        // </GEEHU></GEECZ>
        // <GEELV>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLV]))
        {
            if (this.Department         != this_orig.Department      ||
               this.Location            != this_orig.Location        ||
               this.WorkerResponsible   != this_orig.WorkerResponsible)
            {
                // Create records in the AssetInternalTransferHistory table to keep track of changes made to the department,
                // location and responsible fields in the asset table.

                assetInternalTransferHistory.FromDepartment         = this_orig.Department;
                assetInternalTransferHistory.ToDepartment           = this.Department;
                assetInternalTransferHistory.FromLocation           = this_orig.Location;
                assetInternalTransferHistory.ToLocation             = this.Location;
                assetInternalTransferHistory.FromWorkerResponsible  = this_orig.WorkerResponsible;
                assetInternalTransferHistory.ToWorkerResponsible    = this.WorkerResponsible;
                assetInternalTransferHistory.AssetId                = this.AssetId;
                assetInternalTransferHistory.TransferDate           = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                assetInternalTransferHistory.insert();
            }
        }
        // </GEELV>

        if (this.SortingId != this_Orig.SortingId)
        {
            while select forupdate assetBook
                   where assetBook.AssetId == this.AssetId
            {
                assetBook.SortingId  = this.SortingId;
                assetBook.SortingId2 = this.SortingId2;
                assetBook.SortingId3 = this.SortingId3;
                assetBook.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.AssetId && (select RecId from assetTable
                                     where assetTable.MainAssetId == this.AssetId).RecId)
            {
                return checkFailed(strFmt("@SYS67409",this.AssetId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret;
        ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case fieldNum(AssetTable, Location):
                    // <GJP>
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
                    {
                        if (!LogisticsPostalAddress::findByLocation(AssetLocation::find(this.Location).LogisticsLocation).City)
                        {
                            ret = checkFailed("@SYS4003827");
                        }
                    }
                    // </GJP>
                    break;
                case fieldNum(AssetTable, PhysicalAssetNumber_BR):
                    ret = this.validateNoDupForPhysicalAssetNumber_BR();
                    break;

                case fieldNum(AssetTable, PISTaxationCode_BR):
                    if (this.PISTaxationCode_BR && !TaxationCodeTable_BR::exist(TaxType_BR::PIS, this.PISTaxationCode_BR))
                    {
                        ret = checkFailed(strFmt("@Brazil:AssetTable_UnableToFindTaxationCode", this.PISTaxationCode_BR, TaxType_BR::PIS));
                    }
                    break;

                case fieldNum(AssetTable, COFINSTaxationCode_BR):
                    if (this.COFINSTaxationCode_BR && !TaxationCodeTable_BR::exist(TaxType_BR::COFINS, this.COFINSTaxationCode_BR))
                    {
                        ret = checkFailed(strFmt("@Brazil:AssetTable_UnableToFindTaxationCode", this.COFINSTaxationCode_BR, TaxType_BR::COFINS));
                    }
                    break;

                case fieldNum(AssetTable, Name):
                    if (this.isAssetNameExceedMaxLength())
                    {
                        ret = checkFailed(strFmt("@FixedAssets:ErrorFixedAssetNameTooLong", AssetConstants::AssetNameMaxLength));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAssetNameExceedMaxLength</Name>
				<Source><![CDATA[
    private boolean isAssetNameExceedMaxLength()
    {
        return !AssetNameLengthLimitFlight::instance().isEnabled()
            && strLen(this.Name) > AssetConstants::AssetNameMaxLength;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the field value of the instance of the <c>AssetTable</c> table.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index.
    /// </param>
    /// <returns>
    /// Returns true if the validation succeed.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(AssetTable, AssetType):
                    // <GJP>
                    if (this.orig().AssetType != this.AssetType)
                    {
                        if (this.orig().AssetType == AssetType::Deferred_JP
                            || this.AssetClassification_JP != AssetClassification_JP::None)
                        {
                            // Changing attributes of the fixed assets can change the way fixed assets are listed in the reports and might cause incorrect reporting results. Do you wish to continue?
                            if (Box::okCancel(
                                "@SYS4001314",
                                DialogButton::Ok) == DialogButton::Cancel)
                            {
                                ret = false;
                            }
                        }
                    }
                    // </GJP>
                    break;

                // <GJP>
                case fieldStr(AssetTable, AssetDeferredType_JP):
                    if (this.orig().AssetDeferredType_JP != this.AssetDeferredType_JP)
                    {
                        // Changing attributes of the fixed assets can change the way fixed assets are listed in the reports and might cause incorrect reporting results. Do you wish to continue?
                        if (Box::okCancel(
                            "@SYS4001314",
                            DialogButton::Ok) == DialogButton::Cancel)
                        {
                            ret = false;
                        }
                    }
                    break;

                case fieldStr(AssetTable, AssetClassification_JP):
                    if (FormDataUtil::isFormDataSource(this)
                        && this.orig().AssetClassification_JP != this.AssetClassification_JP)
                    {
                        if (Box::okCancel(
                            "@SYS4001314",
                            DialogButton::Ok) == DialogButton::Cancel)
                        {
                            ret = false;
                        }
                    }
                    break;

                case fieldStr(AssetTable, ExceptionTaxationRateDenominator_JP):
                    if (this.ExceptionTaxationRateDenominator_JP <= 0)
                    {
                        //Exception rate (denominator) must be greater than zero.
                        ret = checkFailed(strFmt("@SYS78465", "@SYP4860922"));
                    }
                    break;
                // </GJP>
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNoDupForPhysicalAssetNumber_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if there's not another asset with the same physical asset number.
    /// </summary>
    /// <returns>
    /// True if there's not another asset with the same physical asset number; otherwise, false.
    /// </returns>
    public boolean validateNoDupForPhysicalAssetNumber_BR()
    {
        AssetTable assetTableCount;

        if (this.PhysicalAssetNumber_BR)
        {
            select count(recId) from assetTableCount
                where assetTableCount.RecId != this.RecId &&
                        assetTableCount.PhysicalAssetNumber_BR == this.PhysicalAssetNumber_BR;

            if (assetTableCount.RecId)
            {
                return checkFailed(strFmt("@GLS64337", this.PhysicalAssetNumber_BR));
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        AssetGroup assetGroup;
        NumberSequenceTable numberSequenceTable;
        // <GEEU>
        AssetTable this_orig;
        AssetBook  assetBook;
        // </GEEU>

        ret = super();

        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoHU, #isoLV]))
        {
            this_orig = this.orig();

            if (this.AcquisitionDate_W != this_orig.AcquisitionDate_W ||
                this.AcquisitionPrice_W != this_orig.AcquisitionPrice_W ||
                !DimensionDefaultFacade::areEqual(this.DefaultDimension, this_orig.DefaultDimension))
            {
                select firstonly assetBook
                    where assetBook.AssetId == this.AssetId &&
                          assetBook.Status != AssetStatus::NoAcquisition;

                if (assetBook)
                {
                    ret = checkFailed(strFmt("@GLS108741", this.AssetId, assetBook.Status));
                }
            }
        }
        // </GEEU>

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            if (this.ICMSCreditInstallments_BR == 0)
            {
                if (this.TaxICMSOutgoing_BR)
                {
                    ret = checkFailed("@SYS4006813");
                }
            }
            else
            {
                if (!this.TaxICMSOutgoing_BR)
                {
                    ret = checkFailed("@SYS4006819");
                }
            }

            if (this.PISCOFINSReceivableLongTerm_BR)
            {
                if (this.PISCOFINSCreditGroup_BR == FBPISCOFINSFixedAssetCreditGroup_BR::None)
                {
                    ret = checkFailed("@SYP4882385");
                }

                if (this.PISCOFINSAppropriationMethod_BR    == FBPISCOFINSFixedAssetAppropMethod_BR::Acquisition
                    && this.PISCOFINSCreditInstallments_BR  == 0)
                {
                    ret = checkFailed("@SYP4882386");
                }

                if (this.PISCOFINSCreditPurpose_BR == FBPISCOFINSFixedAssetCreditPurpose_BR::None)
                {
                    ret = checkFailed("@SYP4882388");
                }

                if (this.PISCOFINSAppropriationMethod_BR == FBPISCOFINSFixedAssetAppropMethod_BR::None)
                {
                    ret = checkFailed("@SYP4882954");
                }

                if (this.PISTaxationCode_BR == '')
                {
                    ret = checkFailed(strFmt("@GLS60394", "@GLS939"));
                }

                if (this.COFINSTaxationCode_BR == '')
                {
                    ret = checkFailed(strFmt("@GLS60394", "@GLS940"));
                }

                if (    this.PISTaxationCode_BR != '' && this.COFINSTaxationCode_BR != ''
                    &&  this.PISTaxationCode_BR != this.COFINSTaxationCode_BR)
                {
                    checkFailed("@SYP4883776");
                }
            }
        }
        // </GBR>

        // <GJP>
        if (ret
            && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP])
            && this.WrkCtrId_JP
            && !WrkCtrTable::find(this.WrkCtrId_JP).IsIndividualResource)
        {
            ret = checkFailed("@FixedAssetsIncentiveDepreciation:SYP4880082");
        }
        // </GJP>

        if (ret)
        {
            ret = this.checkMainAssetId();
        }

        assetGroup = this.assetGroup();

        if (ret && assetGroup && !this.RecId)
        {
            if (assetGroup.AutoNumber && assetGroup.AutoNumberSequenceTable)
            {
                ret = NumberSeq::numCheckFormat(this.AssetId, NumberSequenceTable::find(assetGroup.AutoNumberSequenceTable));
            }
            else if (!assetGroup.AutoNumber
                && !assetGroup.AutoNumberSequenceTable
                && AssetParameters::find().AutoNumber)
            {
                NumberSequenceReference numRef = AssetParameters::numRefAssetId();
                if (numRef)
                {
                    ret = NumberSeq::numCheckFormat(this.AssetId, NumberSequenceTable::find(numRef.NumberSequenceId));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValueModelInLayer</Name>
				<Source><![CDATA[
    private NoYes isValueModelInLayer(CurrentOperationsTax _layer)
    {
        NoYes          currentValueModel = false;
        AssetBook      assetBook;
        AssetBookTable assetBookTable;

        select firstonly RecId from assetBook
            where assetBook.AssetId == this.AssetId
            join RecId from assetBookTable
            where assetBookTable.BookId == assetBook.BookId &&
                  assetBookTable.CurrentOperationsTax == _layer;

        if (assetBook)
        {
            currentValueModel = true;
        }

        return currentValueModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(AssetId  _assetId)
    {
        boolean ret = true;

        if (!AssetTable::exist(_assetId))
        {
            ret = checkFailed(strFmt(AssetTable::txtNotExist(), _assetId));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>childList</Name>
				<Source><![CDATA[
    public static container childList(AssetId _assetId)
    {
        AssetTable assetTable;
        container  childList;

        assetTable.recordLevelSecurity(true);

        while select AssetId from assetTable
            where assetTable.MainAssetId == _assetId
        {
            childList += assetTable.AssetId;
        }
        return childList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>depreciatingAncestor</Name>
				<Source><![CDATA[
    //  This function finds the depreciating asset for the passed asset number

    public static AssetTable depreciatingAncestor(AssetBook _assetBook)
    {
        AssetTable assetTable = AssetTable::find(_assetBook.AssetId);
        AssetBook  mainAssetBook;

        if (_assetBook.Depreciation)
        {
            return assetTable;
        }

        if (!assetTable.MainAssetId)
        {
            return null;
        }

        mainAssetBook = AssetBook::find(assetTable.MainAssetId, _assetBook.BookId);
        return AssetTable::depreciatingAncestor(mainAssetBook);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(AssetId  assetId)
    {
        boolean found;

        found = (select firstonly RecId from assetTable
                               where assetTable.AssetId == assetId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static AssetTable find(
        AssetId             _assetId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetTable assetTable;

        assetTable.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly assetTable
            where assetTable.AssetId == _assetId;

        return assetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLedgerDimension</Name>
				<Source><![CDATA[
    public static AssetTable findByLedgerDimension(
        LedgerDimensionAccount  _ledgerDimension,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetTable                          assetTable;
        DimensionAttributeValueCombination  ledgerDimension;

        assetTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly assetTable
            join RecId from ledgerDimension where
                ledgerDimension.DisplayValue == assetTable.AssetId &&
                ledgerDimension.RecId == _ledgerDimension;

        return assetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>AssetTable</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>AssetTable</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>AssetTable</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetTable findByRecId(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetTable assetTable;

        assetTable.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly assetTable
            where assetTable.RecId == _recId;

        return assetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixedAssetGroupLookup_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup for asset groups.
    /// </summary>
    /// <param name="_formControl">
    /// Control on which lookup is performed.
    /// </param>
    /// <param name="_assetId">
    /// Asset if to search for groups.
    /// </param>
    public static void fixedAssetGroupLookup_IN(FormStringControl _formControl,
                                                AssetId           _assetId)
    {
        Query                   query=new Query();
        QueryBuildDataSource    queryBuildDataSource;
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(AssetTable),_formControl);
        QueryBuildRange         queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(AssetTable,AssetGroup));
        sysTableLookup.addLookupfield(fieldNum(AssetTable,AssetId));

        queryBuildDataSource = query.addDataSource(tableNum(AssetTable));
        queryBuildRange      = queryBuildDataSource.addRange(fieldNum(AssetTable,AssetId));
        queryBuildRange.value(queryValue(_assetId));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupId</Name>
				<Source><![CDATA[
    public static AssetGroupId groupId(AssetId _assetId)
    {
        return AssetTable::find(_assetId).AssetGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAssetForSale</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an asset can be sold.
    /// </summary>
    /// <param name="_assetId">
    /// The asset to check.
    /// </param>
    /// <returns>
    /// true if the asset can be sold; otherwise, false.
    /// </returns>
    public static boolean isAssetForSale(AssetId  _assetId)
    {
        boolean  retValue = true;

        if (_assetId
            && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL])
            && AssetParameters::find().AssetAllowSale_PL
            && !AssetTable::find(_assetId).AllowSale_PL)
        {
            retValue = false;
        }

        return retValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLowValuePoolAsset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the asset contains any value models or depreciation books which use the low value
    ///    pool depreciation method.
    /// </summary>
    /// <param name="_assetId">
    ///    The asset to check.
    /// </param>
    /// <param name="_bookType">
    ///    An <c>AssetBookType</c> value that determines whether the assets must be included in a value model
    ///    or a depreciation book; optional.
    /// </param>
    /// <returns>
    ///    true if the asset is a low value pool asset; otherwise, false.
    /// </returns>
    public static boolean isLowValuePoolAsset(AssetId  _assetId, AssetBookType _bookType = AssetBookType::ValueModel)
    {
        AssetTable                  assetTable;
        AssetBook                   assetBook;
        AssetBookTable              assetBookTable;
        AssetDepreciationProfile    assetDepreciationProfile;
        boolean                     retValue = false;

        if (_assetId && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoAU, #isoNZ]))
        {
            select firstonly RecId from assetTable where assetTable.AssetId == _assetId
                join AssetId from assetBook where assetBook.AssetId == assetTable.AssetId
                join BookId from assetBookTable where assetBookTable.BookId == assetBook.BookId
                join Profile, Method from assetDepreciationProfile where assetDepreciationProfile.Profile == assetBookTable.DepreciationProfile
                    && assetDepreciationProfile.Method == AssetDepreciationMethod::LowValuePool;
        }

        if (assetTable)
        {
            retValue = true;
        }

        return retValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAccountNum</Name>
				<Source><![CDATA[
    public static void lookupAccountNum(
        FormControl         _ctrl,
        CompanyId           _company = curext(),
        AssetBookType         _assetBookType  = AssetBookType::ValueModel,
        AssetTransTypeJournal _assetTransType = AssetTransTypeJournal::None)
    {
        CompanyId companyId;

        // The following block is needed for the case that intercompany transactions is disabled and someone passes
        // in an empty string. Ideally one would remove the "curext()" defaulting from the paramter list, but this
        // code was added as part of a bug fix, and did not have the scope or need of changing the interface.
        if (!_company)
        {
            companyId = curext();
        }
        else
        {
            companyId = _company;
            if (!xDataArea::exist(companyId))
            {
                throw error(strFmt("@SYS10666", companyId));
            }
        }

        changecompany(companyId)
        {
            Args args = AssetTable::getArgsForLookupAccountNum(_ctrl, _company, _assetBookType, _assetTransType);

            FormRun formRun = classfactory.formRunClass(args);
            formRun.init();
            if (_ctrl is FormStringControl)
            {
                FormStringControl formStringControl = _ctrl as FormStringControl;
                formStringControl.performFormLookup(formRun);
            }
            else if (_ctrl is SegmentedEntryControl)
            {
                SegmentedEntryControl segmentedEntryControl = _ctrl as SegmentedEntryControl;
                segmentedEntryControl.performFormLookup(formRun);
            }
            else
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArgsForLookupAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an <c>Args</c> instance for use in an asset lookup.
    /// </summary>
    /// <param name = "_ctrl">
    /// The form control for which to perform the lookup.
    /// </param>
    /// <param name = "_company">
    /// A company ID.
    /// </param>
    /// <param name = "_assetBookType">
    /// An <c>AssetBookType</c> enumeration value.
    /// </param>
    /// <param name = "_assetTransType">
    /// An <c>AssetTransTypeJournal</c> enumeration value.
    /// </param>
    /// <returns>
    /// A new <c>Args</c> instance.
    /// </returns>
    protected static Args getArgsForLookupAccountNum(
        FormControl         _ctrl,
        CompanyId           _company,
        AssetBookType         _assetBookType,
        AssetTransTypeJournal _assetTransType)
    {
        Args args = new Args();
        args.name(formStr(AssetLookup));
        args.caller(_ctrl);
        args.parmEnumType(enumNum(AssetBookType));
        args.parmEnum(_assetBookType);
        // <GEEPL>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            args.parm(enum2str(_assetTransType));
        }
        // </GEEPL>

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAccountNumConsumption</Name>
				<Source><![CDATA[
    public static void lookupAccountNumConsumption(
        FormStringControl   _ctrl,
        CompanyId           _company = curext(),
        AssetBookType       _assetBookType = AssetBookType::ValueModel)
    {
        Args                args;
        CompanyId           companyId;
        FormRun             formRun;

        // The following block is needed for the case that intercompany transactions is disabled and someone passes
        // in an empty string. Ideally one would remove the "curext()" defaulting from the paramter list, but this
        // code was added as part of a bug fix, and did not have the scope or need of changing the interface.
        if (!_company)
        {
            companyId = curext();
        }
        else
        {
            companyId = _company;
            if (! xDataArea::exist(companyId))
            {
                throw error(strFmt("@SYS10666",companyId));
        }
        }

        changecompany(companyId)
        {
            args = new Args();
            args.name(formStr(AssetConsumptionLookup));
            args.caller(_ctrl);
            args.parmEnumType(enumNum(AssetBookType));
            args.parmEnum(_assetBookType);
            formRun = classfactory.formRunClass(args);
            formRun.init();
            _ctrl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAccountNumLVP</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Opens the Asset lookup window which will restrict assets to those that contain a value model or
    ///    depreciation book that uses a low value pool depreciation method.
    /// </summary>
    /// <param name="_ctrl">
    ///    The control performing the lookup.
    /// </param>
    /// <param name="_company">
    ///    The company to restrict assets to. By default, this is the current company; optional.
    /// </param>
    /// <param name="_assetBookType">
    ///    Determines if the assets must be included in a value model or a depreciation book; optional.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    An error is thrown if the specified company does not exist.
    /// </exception>
    public static void lookupAccountNumLVP(
        FormStringControl   _ctrl,
        CompanyId           _company = curext(),
        AssetBookType       _assetBookType = AssetBookType::ValueModel)
    {
        Args                args;
        CompanyId           companyId;
        FormRun             formRun;

        // The following block is needed for the case that intercompany transactions is disabled and someone passes
        // in an empty string. Ideally one would remove the "curext()" defaulting from the paramter list, but this
        // code was added as part of a bug fix, and did not have the scope or need of changing the interface.
        if (!_company)
        {
            companyId = curext();
        }
        else
        {
            companyId = _company;
            if (! xDataArea::exist(companyId))
            {
                throw error(strFmt("@SYS10666",companyId));
        }
        }

        changecompany(companyId)
        {
            args = new Args();
            args.name(formStr(AssetLVPLookup));
            args.caller(_ctrl);
            args.parmEnumType(enumNum(AssetBookType));
            args.parmEnum(_assetBookType);
            formRun = classfactory.formRunClass(args);
            formRun.init();
            _ctrl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupByTaxRecoverableLongTerm_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup for asset table to get only the assets that have long term credit by tax type.
    /// </summary>
    /// <param name="_lookupCtrl">
    ///  Control to show the lookup.
    /// </param>
    /// <param name="_taxType">
    /// Tax type associated to the tax recoverable long term.
    /// </param>
    public static void lookupByTaxRecoverableLongTerm_BR(FormControl _lookupCtrl,
                                                                TaxType_BR  _taxType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRangeTaxType;

        sysTableLookup          = SysTableLookup::newParameters(tableNum(AssetTable), _lookupCtrl);

        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tableNum(AssetTable));

        switch (_taxType)
        {
            case TaxType_BR::ICMS:
                queryBuildRangeTaxType = queryBuildDataSource.addRange(fieldNum(AssetTable, TaxICMSOutgoing_BR));
                break;

            case TaxType_BR::PIS:
            case TaxType_BR::COFINS:
                queryBuildRangeTaxType = queryBuildDataSource.addRange(fieldNum(AssetTable, PISCOFINSReceivableLongTerm_BR));
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        queryBuildRangeTaxType.value(queryValue(NoYes::Yes));

        sysTableLookup.addLookupfield(fieldNum(AssetTable, AssetId));
        sysTableLookup.addLookupfield(fieldNum(AssetTable, Name));
        sysTableLookup.addLookupfield(fieldNum(AssetTable, AssetGroup));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupInvoiceAsset</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method provides lookup functionality for asset IDs.
    /// </summary>
    /// <param name="_ctrl">
    /// An asset field control.
    /// </param>
    /// <param name="_company">
    /// The name of the company context.
    /// </param>
    public static void lookupInvoiceAsset(
        FormControl         _ctrl,
        CompanyId           _company = curext())
    {
        CompanyId           companyId;
        Args                args;
        FormRun             formRun;
        FormStringControl   formStringControl;

        // The following block is needed for the case that intercompany transactions is disabled and someone passes
        // in an empty string. Ideally one would remove the "curext()" defaulting from the paramter list, but this
        // code was added as part of a bug fix, and did not have the scope or need of changing the interface.
        if (!_company)
        {
            companyId = curext();
        }
        else
        {
            companyId = _company;
            if (! xDataArea::exist(companyId))
            {
                throw error(strFmt("@SYS10666",companyId));
            }
        }

        changecompany(companyId)
        {
            args = new Args();
            args.name(formStr(AssetInvoiceLookup));
            args.caller(_ctrl);
            args.parmEnumType(enumNum(AssetBookType));
            args.parmEnum(AssetBookType::ValueModel);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            if (_ctrl is FormStringControl)
            {
                formStringControl = _ctrl as FormStringControl;
                formStringControl.performFormLookup(formRun);
            }
            else
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAssetsNotSoldOrScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a lookup containing <c>AssetId</c> and <c>Name</c> values for all assets in the <c>AssetTable</c> that
    /// do not have an <c>AssetStatus</c> of sold or scrapped.
    /// </summary>
    /// <param name="_formControl">
    /// The control that the lookup will be bound to.
    /// </param>
    public static void lookupAssetsNotSoldOrScrapped(FormControl _formControl)
    {
        if (_formControl == null)
        {
            throw error(Error::missingParameter(null));
        }

        SysTableLookup sysTableLookup  = SysTableLookup::newParameters(tableNum(AssetTable), _formControl);

        Query assetTableQuery = new Query(queryStr(AssetTableNotSoldScrappedFiltered));
        sysTableLookup.parmQuery(assetTableQuery);

        sysTableLookup.addLookupfield(fieldNum(AssetTable, AssetId));
        sysTableLookup.addLookupfield(fieldNum(AssetTable, Name));

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeImage</Name>
				<Source><![CDATA[
    public static int treeImage(AssetId assetId)
    {
        #resAppl;

        if ((select firstonly RecId from assetTable
                where assetTable.MainAssetId == assetId).RecId)
        {
            return #ImageBOM;
        }

        return #ImageItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS67413";
    }

]]></Source>
			</Method>
			<Method>
				<Name>employee_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Displays the actual person in charge for the current fixed asset.
    /// </summary>
    /// <param name="_transDate">An optional date value used to select the person in charge from the transfer history table.</param>
    /// <returns>The employee id of person in charge.</returns>
    public display EmployeeId_RU employee_RU(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return RAssetMoveHist::findLastOperation(this.AssetId, RAssetMoveType::Transfer, NoYes::No, _transDate).NewEmployee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>location_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Displays the actual location of the current fixed asset.
    /// </summary>
    /// <param name="_transDate">An optional date value used to select the location from the transfer history table.</param>
    /// <returns>The actual location id.</returns>
    public display AssetLocationId location_RU(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return RAssetMoveHist::findLastOperation(this.AssetId, RAssetMoveType::Transfer, NoYes::No, _transDate).NewLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInCompany</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds the specified record in the given company by the given asset id.
    /// </summary>
    /// <param name="_assetId">An asset id.</param>
    /// <param name="_companyId">A company id.</param>
    /// <param name="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>
    ///   The specified record in the <c>AssetTable</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetTable findInCompany(AssetId   _assetId,
                                           CompanyId _companyId,
                                           boolean   _forUpdate = false)
    {
        AssetTable assetTable;
        if (_companyId && _assetId)
        {
            if (SysDataArea::checkAccessible(_companyId))
            {
                changecompany(_companyId)
                {
                    assetTable.selectForUpdate(_forUpdate);
                    select firstonly assetTable
                        where assetTable.AssetId == _assetId;
                    return assetTable;
                }
            }
        }
        return assetTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDisposed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Checks whether the current fixed asset has all value models with the disposed statuses.
    /// </summary>
    /// <returns>True if the current fixed asset has all value models with the disposed statuses.</returns>
    public boolean isDisposed()
    {
        AssetBook assetBook;
        while select Status from assetBook
            where assetBook.AssetId == this.AssetId
        {
            if (!AssetStatusType::construct(assetBook.Status).isDisposed())
            {
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>image</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the image for the current asset.
    /// </summary>
    /// <returns>
    /// If exists, an image associated with the current asset;
    /// otherwise, an image associated with the asset group.
    /// </returns>
    public display container image()
    {
        return AssetImage::findForAsset(this.RecId).Image;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DimensionAttributeDelegates_getTablesToAddCopiedValuesTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a list of tables and fields to update when copying the values to default dimensions on existing values.
    /// </summary>
    /// <param name = "_tableSet">A <c>Set</c> of <c>DimensionCopyValuesDataContract</c> values.</param>
    [SubscribesTo(classStr(DimensionAttributeDelegates), delegateStr(DimensionAttributeDelegates, getTablesToAddCopiedValuesTo))]
    public static void DimensionAttributeDelegates_getTablesToAddCopiedValuesTo(Set _tableSet)
    {
        DimensionCopyValueDataContract contract = DimensionCopyValueDataContract::construct(tableNum(AssetTable), fieldNum(AssetTable, DefaultDimension));
        contract.addKeyFieldDimensionPair(tableNum(AssetTable), fieldNum(AssetTable, AssetId));
        _tableSet.add(contract);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@SYS127383</DeveloperDocumentation>
	<FormRef>AssetTableDetails</FormRef>
	<Label>@SYS12578</Label>
	<SingularLabel>@SYS25653</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>AssetNumIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>AssetNumIdx</PrimaryIndex>
	<ReplacementKey>AssetNumIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>AssetAddition</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>AssetAddition</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>AssetBook</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>AssetBook</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>AssetBudget</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>AssetBudget</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>AssetTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>AssetTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetMoveHist</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetMoveHist</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetDistribution</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetDistribution</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetDocument</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RAssetDocument</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetPurchTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetPurchTrans</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetScrap</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetScrap</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetSuspend</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetSuspend</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetTaxAllowanceHistory</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetTaxAllowanceHistory</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RAssetUse</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RAssetUse</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>AssetImage</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>AssetTable</Relation>
			<Table>AssetImage</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Condition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Make</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Model</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModelYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MainAssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceAgent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuredValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyExpiration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Department</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInventory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerContactName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingId2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingId3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameAlias</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MajorType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Acquisition_W</Name>
			<Label>@SYS67402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AcquisitionDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcquisitionPrice_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategoryId_LV</Name>
			<Label>@SYS11718</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryId_LV</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameAlias</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimensions_LV</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Disposal</Name>
			<Label>@SYS67400</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisposalRestriction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Documents</Name>
			<Label>@SYS54210</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Documents</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExceptionTaxation_JP</Name>
			<Label>@SYS4003906</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationCode_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationRate_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationRateDenominator_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalEstablishment_BR</Name>
			<Label>@GLS220103</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalInformation_BR</Name>
			<Label>@GLS56</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferredFromInventory_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalAssetNumber_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Insurance</Name>
			<Label>@SYS67403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsuranceVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceAgent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PhysicalInventory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerContactName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IsMissing</Name>
			<Label>@SYS333761</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsMissing</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Lease</Name>
			<Label>@SYS112587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Lease</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TitleHolder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MainAsset</Name>
			<Label>@SYS67401</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MainAssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Mapping</Name>
			<Label>@SYS111162</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GISReferenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParcelId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Model</Name>
			<Label>@SYS9923</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Make</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Model</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModelYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SerialNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetProductionYear_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GuaranteeDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PassportNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechInfo1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechInfo2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechInfo3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Municipality</Name>
			<Label>@SYS11371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCountyNO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS69996</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnOnInvestmentsNO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcquisitionValueNO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueAt19840101NO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Physical</Name>
			<Label>@SYS126956</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationMemo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoomNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Department</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Barcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Policy</Name>
			<Label>@SYS126957</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsurancePolicyNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyExpiration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuredValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetReplaceCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastFactorUpdateDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceDate1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceDate2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuredAtMarketValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseOrders</Name>
			<Label>@SYS115660</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS114810</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitCost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS81755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Resource_JP</Name>
			<Label>@SYS10597</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Sales_PL</Name>
			<Label>@SYS53871</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowSale_PL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Sorting</Name>
			<Label>@SYS4138</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SortingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingId2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingId3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Subventions</Name>
			<Label>@SYS54448</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SubventionNO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubventionTaxFreeNO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tracking</Name>
			<Label>@SYS81508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>editAssetActivityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editAssetPropertyGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@SYS26386</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetClassification_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetDeferredType_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MajorType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PropertyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetSourceType_CN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsRented_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LenderName_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSecondHand_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBelonged_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Update</Name>
			<Label>@SYS71207</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LastMaintenance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NextMaintenance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaintenanceInfo1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaintenanceInfo2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaintenanceInfo3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Condition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValueModelGroup</Name>
			<Label>@FixedAssets:FA_EntityField_Book</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>primaryValueModelStatusForAssetProject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>primaryValueModelForAssetProject</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Values</Name>
			<Label>@SYS16124</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssessmentNO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssessmentTaxNO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Warehouse</Name>
			<Label>@SYS101253</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AcceleratedDepGroup_JP</Name>
			<Label>@FixedAssetsIncentiveDepreciation:SYP4880050</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AcceleratedDepGroup_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ICMSCreditInformation_BR</Name>
			<Label>@SYP4882383</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxICMSOutgoing_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSCreditInstallments_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PISCOFINSCreditInformation_BR</Name>
			<Label>@SYP4882384</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>COFINSTaxationCode_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISCOFINSAppropriationMethod_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISCOFINSCreditGroup_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISCOFINSCreditInstallments_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISCOFINSCreditPurpose_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISTaxationCode_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PISCOFINSReceivableLongTerm_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportTax_RU</Name>
			<Label>@GLS116928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportTaxCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBase_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBaseUnitId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LandTax_RU</Name>
			<Label>@GLS116997</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LandTaxCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumeratorShare_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DenominatorShare_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBase_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PreviousClothRiggingId_RU</Name>
			<Label>@GLS113948</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClothRiggingId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssessedTax_RU</Name>
			<Label>@GLS110662</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssessedTaxType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAllowanceRecId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Use_RU</Name>
			<Label>@SYS5983</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetUse_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LandProperties_RU</Name>
			<Label>@GLS117001</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LandType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LandCadastralNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuildingStartDate_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CadastralData_RU</Name>
			<Label>@SYP4881054</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LandCadastralNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoomCadastralNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBase_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address_RU</Name>
			<Label>@GLS100805</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LogisticsPostalAddress_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UsefulLife_RU</Name>
			<Label>@GLS104052</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReleaseYear_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GovRegistration_RU</Name>
			<Label>@GLS114685</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VehiclePlateDate_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterRemovalDate_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetQuotaType_RU</Name>
			<Label>@GLS113954</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuotaTypesRecId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VatRefunding_RU</Name>
			<Label>@GLS110485</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VatRefundingStartDate_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VehicleProperties_RU</Name>
			<Label>@GLS111078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VehicleType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleModel_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehiclePlateNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleEcoClass_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AcquisitionDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ,HU,LV,RU</CountryRegionCodes>
			<ExtendedDataType>AssetAcquisitionDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AcquisitionPrice_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ,HU,LV,RU</CountryRegionCodes>
			<ExtendedDataType>AssetAcquisitionPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AcquisitionValueNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetAcquisitionValueNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowSale_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlAssetAllowSale</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessmentNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetAssessmentNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessmentTaxNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetAssessmentTaxNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetActivityCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetActivityCodeRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetClassification_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AssetClassification_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetDeferredType_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AssetDeferredType_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<GroupPrompt>@SYS13864</GroupPrompt>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetProductionYear_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlYearString</ExtendedDataType>
			<Label>@GLS109555</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetPropertyGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetPropertyGroupRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssetReplaceCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetReplaceCost</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetSourceType_CN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetSourceTypeRefRecId_CN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AssetType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Barcode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBarcode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId_LV</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LvAssetCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Condition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetConditionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>LV</CountryRegionCodes>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Department</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OMDepartmentRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DisposalRestriction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLongDescription</ExtendedDataType>
			<Label>@SYS111155</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Documents</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Label>@SYS67386</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExceptionTaxationCode_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetExceptionTaxationCode_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExceptionTaxationRate_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetExceptionTaxationRate_JP</ExtendedDataType>
			<Label>@SYP4860920</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExceptionTaxationRateDenominator_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetExceptionTaxationRate_JP</ExtendedDataType>
			<Label>@SYP4860922</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishment_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GISReferenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGISReferenceNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>GuaranteeDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTransDate</ExtendedDataType>
			<Label>@SYS67392</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ICMSCreditInstallments_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ICMSCreditInstallments_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsuranceAgent</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetInsuranceAgent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InsuranceDate1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetInsuranceDate1</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InsuranceDate2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetInsuranceDate2</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsurancePolicyNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetInsurancePolicyNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsuranceVendor</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Label>@SYS111138</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InsuredAtMarketValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS111159</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InsuredValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetInsuredValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsMissing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS333761</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRented_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetIsRented_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSecondHand_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetIsSecondHand_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastFactorUpdateDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLastFactorUpdateDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastMaintenance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLastMaintenance</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Lease</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLongDescription</ExtendedDataType>
			<Label>@SYS111157</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LenderName_JP</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetLenderName_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Location</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LocationMemo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetLongDescription</ExtendedDataType>
			<Label>@SYS111153</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MainAssetId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetIdMain</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MaintenanceInfo1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetMaintenanceInfo</ExtendedDataType>
			<Label>@SYS71204</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MaintenanceInfo2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetMaintenanceInfo</ExtendedDataType>
			<Label>@SYS71205</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MaintenanceInfo3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetMaintenanceInfoMemo</ExtendedDataType>
			<Label>@SYS71206</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MajorType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetMajorTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Make</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS67389</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Model</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS9923</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModelYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetModelYear</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NameAlias</Name>
			<AliasFor>AssetId</AliasFor>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetNameAlias</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>NextMaintenance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetNextMaintenance</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParcelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetParcelId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhysicalAssetNumber_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhysicalAssetNumber_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PhysicalInventory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetPhysicalInventory</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PISCOFINSReceivableLongTerm_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReceivableLongTerm_BR</ExtendedDataType>
			<Label>@GLS62984</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PolicyAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetPolicyAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PolicyExpiration</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetPolicyExpiration</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PropertyType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetPropertyTypeId</ExtendedDataType>
			<EnumType>AssetPropertyType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchLineRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<ExtendedDataType>PurchLineRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Reference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetReference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnOnInvestmentsNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetReturnOnInvestmentsNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoomNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetRoomNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SerialNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetSerialNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortingId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetSortingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortingId2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetSortingId2</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortingId3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetSortingId3</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SubventionNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetSubventionNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SubventionTaxFreeNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetSubventionTaxFreeNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCountyNO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetTaxCountyNO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxICMSOutgoing_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxICMSOutgoing_BR</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TechInfo1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTechInfo</ExtendedDataType>
			<Label>@SYS71201</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TechInfo2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTechInfo</ExtendedDataType>
			<Label>@SYS71202</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TechInfo3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTechInfo</ExtendedDataType>
			<Label>@SYS71203</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TitleHolder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTitleHolder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferredFromInventory_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransferredFromInventory_BR</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UnitCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetUnitCost</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetUnitOfMeasure</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ValueAt19840101NO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>AssetValueAt19840101NO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerContactName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmContactNameRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerResponsible</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmResponsibleRecId</ExtendedDataType>
			<Label>@SYS67464</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WrkCtrId_JP</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>JP,RU</CountryRegionCodes>
			<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AcceleratedDepGroup_JP</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>COFINSTaxationCode_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
			<Label>@SYS4006837</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PISCOFINSAppropriationMethod_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FBPISCOFINSFixedAssetAppropMethod_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PISCOFINSCreditGroup_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FBPISCOFINSFixedAssetCreditGroup_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PISCOFINSCreditInstallments_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBPisCofinsFixedAssetCreditInstls_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PISCOFINSCreditPurpose_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FBPISCOFINSFixedAssetCreditPurpose_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PISTaxationCode_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
			<Label>@SYS4006832</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportTaxCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetTransportTaxCode</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ClothRiggingId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@GLS108954</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssessedTaxType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>RAssetAssessedTaxType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetBelonged_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>RAssetBelonged</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssetUse_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetUseValue</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>BuildingStartDate_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@GLS117002</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DenominatorShare_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetOwnedShare</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumeratorShare_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetOwnedShare</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LandCadastralNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LandCadastralNum_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LandTaxCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetLandTaxCode</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LandType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LandType_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsPostalAddress_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PassportNum_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RAssetPassportNum</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RegisterRemovalDate_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RegisterRemovalDate_RU</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReleaseYear_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>Yr</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@GLS116942</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>QuotaTypesRecId_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RAssetInventIssueQuotaTypesRecId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxAllowanceRecId_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RAssetTaxAllowanceRecId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehicleType_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBase_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@GLS106040</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxBaseUnitId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetAssessedTaxCode</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VatRefundingStartDate_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>RAssetVatRefundingStartDate</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VehicleEcoClass_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>RAssetVehicleEcoClass</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleModel_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>VehicleModel_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>VehiclePlateDate_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehiclePlateDate_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehiclePlateNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>VehiclePlateNum_W</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoomCadastralNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RoomCadastralNum_RU</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>GroupAssetIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssetNumIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MainAssetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>MainAssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameAliasIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<ConfigurationKey>Asset</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>NameAlias</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkerContactNameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkerContactName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkerResponsibleIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkerResponsible</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssetSourceType_CNIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetSourceType_CN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Enabled>No</Enabled>
			<Fields>
				<AxTableIndexField>
					<DataField>LogisticsPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventIssueQuotaTypes_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Enabled>No</Enabled>
			<Fields>
				<AxTableIndexField>
					<DataField>QuotaTypesRecId_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RAssetTaxAllowanceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Enabled>No</Enabled>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxAllowanceRecId_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>AssetGroupMap_JP</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssetClassification</MapField>
					<MapFieldTo>AssetClassification_JP</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetDeferredType</MapField>
					<MapFieldTo>AssetDeferredType_JP</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetGroup</MapField>
					<MapFieldTo>AssetGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetType</MapField>
					<MapFieldTo>AssetType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MajorType</MapField>
					<MapFieldTo>MajorType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PropertyType</MapField>
					<MapFieldTo>PropertyType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AssetActivityCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetActivityCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetActivityCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetActivityCode</Name>
					<Field>AssetActivityCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetCondition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetCondition</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Condition</Name>
					<SourceEDT>AssetConditionId</SourceEDT>
					<Field>Condition</Field>
					<RelatedField>Condition</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ConditionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetGroup_AssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetGroup_AssetGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetGroup</Name>
					<SourceEDT>AssetGroupId</SourceEDT>
					<Field>AssetGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<SourceEDT>AssetLocationId</SourceEDT>
					<Field>Location</Field>
					<RelatedField>Location</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>LocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetMajorType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetMajorType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MajorType</Name>
					<SourceEDT>AssetMajorTypeId</SourceEDT>
					<Field>MajorType</Field>
					<RelatedField>MajorType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>MajorTypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetPropertyGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetPropertyGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetPropertyGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetPropertyGroup</Name>
					<Field>AssetPropertyGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetSorting</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetSorting</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingId</Name>
					<SourceEDT>AssetSortingId</SourceEDT>
					<Field>SortingId</Field>
					<RelatedField>SortingId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>SortCode_Extern</Name>
					<SourceEDT>AssetSortingId</SourceEDT>
					<RelatedField>SortCode</RelatedField>
					<ValueStr>AssetSortValue::Sorting1</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetSorting_SortingId2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetSorting</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetSorting_SortingId2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingId2</Name>
					<SourceEDT>AssetSortingId2</SourceEDT>
					<Field>SortingId2</Field>
					<RelatedField>SortingId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>SortCode_Extern</Name>
					<SourceEDT>AssetSortingId2</SourceEDT>
					<RelatedField>SortCode</RelatedField>
					<ValueStr>AssetSortValue::Sorting2</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetSorting_SortingId3</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetSorting</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetSorting_SortingId3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingId3</Name>
					<SourceEDT>AssetSortingId3</SourceEDT>
					<Field>SortingId3</Field>
					<RelatedField>SortingId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>SortCode_Extern</Name>
					<SourceEDT>AssetSortingId3</SourceEDT>
					<RelatedField>SortCode</RelatedField>
					<ValueStr>AssetSortValue::Sorting3</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetSourceType_CN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetSourceType_CN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetSourceType_CN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetSourceType_CN_AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetSourceType_CN</Name>
					<Field>AssetSourceType_CN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MainAssetId</Name>
					<SourceEDT>AssetIdMain</SourceEDT>
					<Field>MainAssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CategoryId_LV</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId_LV</Name>
					<Field>CategoryId_LV</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CurrentOperationsTax_Extern</Name>
					<RelatedField>CurrentOperationsTax</RelatedField>
					<ValueStr>CurrentOperationsTax::Tax</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalEstablishment_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishment_BR</Name>
					<Field>FiscalEstablishment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OMOperatingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OMOperatingUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OMOperatingUnit_AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Department</Name>
					<Field>Department</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchLineRecId</Name>
					<SourceEDT>PurchLineRefRecId</SourceEDT>
					<Field>PurchLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InsuranceVendor</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>InsuranceVendor</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkerContactName_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WorkerContactName_AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerContactName</Name>
					<Field>WorkerContactName</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkerResponsible_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_RecId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WorkerResponsible_AssetTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerResponsible</Name>
					<Field>WorkerResponsible</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrTable_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WrkCtrId_JP</Name>
					<SourceEDT>WrkCtrIdBase</SourceEDT>
					<Field>WrkCtrId_JP</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetAcceleratedDepGroup_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetAcceleratedDepGroup_JP</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AcceleratedDepGroup_JP</Name>
					<Field>AcceleratedDepGroup_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsPostalAddress_FK</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsPostalAddress_RU</Name>
					<Field>LogisticsPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetInventIssueQuotaTypes</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetInventIssueQuotaTypes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetInventIssueQuotaTypes</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QuotaTypesRecId_RU</Name>
					<Field>QuotaTypesRecId_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetTaxAllowance</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetTaxAllowance</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetTaxAllowance</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxAllowanceRecId_RU</Name>
					<Field>TaxAllowanceRecId_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxType_Extern</Name>
					<RelatedField>TaxType</RelatedField>
					<ValueStr>RAssetTaxType::Empty</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxType_Extern_1</Name>
					<RelatedField>TaxType</RelatedField>
					<ValueStr>RAssetTaxType::AssessedTax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxAllowanceType_Extern</Name>
					<RelatedField>TaxAllowanceType</RelatedField>
					<ValueStr>RAssetTaxAllowanceType::TaxExemption</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetTaxAllowanceDecreaseBase</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetTaxAllowance</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AllowanceDecreaseBase</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AssessedTaxType_RU</Name>
					<Field>AssessedTaxType_RU</Field>
					<ValueStr>RAssetAssessedTaxType::Section3</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxType</Name>
					<RelatedField>TaxType</RelatedField>
					<ValueStr>RAssetTaxType::Empty</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxType_1</Name>
					<RelatedField>TaxType</RelatedField>
					<ValueStr>RAssetTaxType::AssessedTax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxAllowanceType</Name>
					<RelatedField>TaxAllowanceType</RelatedField>
					<ValueStr>RAssetTaxAllowanceType::TaxExemption</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxAllowanceType_1</Name>
					<RelatedField>TaxAllowanceType</RelatedField>
					<ValueStr>RAssetTaxAllowanceType::TaxBaseReduction</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxAllowanceRecId_RU</Name>
					<Field>TaxAllowanceRecId_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>