<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmWorkerGroup_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmWorkerGroup_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record Id exists in <c>HcmWorkerGroup_RU</c> table and shows an infolog message if record does not exist.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <returns>
    /// true if the record id exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(HcmWorkerGroupRecId_RU _recId)
    {
        boolean ret = true;

        if (!HcmWorkerGroup_RU::exist(_recId))
        {
            ret = checkFailed(strFmt(HcmWorkerGroup_RU::txtNotExist(), tablestr(HcmWorkerGroup_RU)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record Id exists in <c>HcmWorkerGroup_RU</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <returns>
    /// true if the record id exists; otherwise, false.
    /// </returns>
    public static boolean exist(HcmWorkerGroupRecId_RU _recId)
    {
        return _recId && (select firstonly RecId from hcmWorkerGroup_RU
                    where hcmWorkerGroup_RU.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>HcmWorkerGroup_RU</c> table based on a record Id value.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates whether concurrency setting to be used on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>HcmWorkerGroup_RU</c> table.
    /// </returns>
    public static HcmWorkerGroup_RU find(
        HcmWorkerGroupRecId_RU  _recId,
        boolean                 _forUpdate          = false,
        ConcurrencyModel        _concurrencyModel   = ConcurrencyModel::Auto)
    {
        HcmWorkerGroup_RU workerGroup;

        workerGroup.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            workerGroup.concurrencyModel(_concurrencyModel);
        }

         select firstonly workerGroup
             where workerGroup.RecId == _recId;

        return workerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByEmployeeId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds record by given employee ID
    /// </summary>
    /// <param name="_employeeId">
    ///    ID of employee
    /// </param>
    /// <param name="_forUpdate">
    ///   select for update
    /// </param>
    /// <param name="_concurrencyModel">
    ///   ConcurrencyModel
    /// </param>
    /// <returns>
    ///  record found
    /// </returns>
    static public HcmWorkerGroup_RU findByEmployeeId(
        EmployeeId_RU           _employeeId,
        boolean                 _forUpdate          = false,
        ConcurrencyModel        _concurrencyModel   = ConcurrencyModel::Auto)
    {
        HcmWorkerGroup_RU   workerGroup;

        workerGroup.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            workerGroup.concurrencyModel(_concurrencyModel);
        }

        select firstonly workerGroup
            where workerGroup.RecId == EmployeeTable_RU::findByEmployeeId(_employeeId).WorkerGroup;

        return workerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>HcmWorkerGroup_RU</c> table based on supplied <c>WorkerGroupId</c> field value.
    /// </summary>
    /// <param name="_employeeGroupId">
    /// A <c>WorkerGroupId</c> field value.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates whether concurrency setting to be used on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>HcmWorkerGroup_RU</c> table.
    /// </returns>
    public static HcmWorkerGroup_RU findByGroupId(
        EmployeeGroupId_RU  _employeeGroupId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmWorkerGroup_RU workerGroup;

        workerGroup.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            workerGroup.concurrencyModel(_concurrencyModel);
        }

        select firstonly workerGroup
            where workerGroup.EmployeeGroupId == _employeeGroupId;

        return workerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>CZ,EE,HU,LT,LV,PL,RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4082028</DeveloperDocumentation>
	<FormRef>HcmWorkerGroup_RU</FormRef>
	<Label>@Workforce:EmployeeGroup</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>EmployeeGroupId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>HumanResource</Modules>
	<ReplacementKey>GroupIdIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmployeeGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmployeeGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OffsetAccount</Name>
			<Label>@SYS11162</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmployeeGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EmployeeGroupId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GroupIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EmployeeGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorkerGroup_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>