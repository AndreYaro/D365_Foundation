<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximDBKSchemesTable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximDBKSchemesTable_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledgerDimension for given legacy account.
    /// </summary>
    /// <param name="_account">LedgerJournalAC</param>
    /// <param name="_accountType">LedgerJournalACType</param>
    /// <param name="_currentCompany">selectableDataArea</param>
    /// <returns>LedgerJournalAC</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerJournalAC parmAccount(
                LedgerJournalAC _account            = '',
                LedgerJournalACType _accountType    = LedgerJournalACType::Ledger,
                selectableDataArea _currentCompany  = curext())
    {
        DimensionAttributeValueCombination  ledgerDimension;
        LedgerJournalAC                     account;

        // If company has not been specified, use the current company
        if (!_currentCompany || !xDataArea::exist(_currentCompany))
        {
            _currentCompany = curext();
        }

        changecompany(_currentCompany)
        {
            // If account has been changed, update the backing ledger dimension value
            if (!prmisdefault(_account))
            {
                if (_account)
                {
                    this.ReceivableLedgerDimension = LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumber(_account, _accountType);
                    account = _account;
                }
                else
                {
                    account = '';
                    this.ReceivableLedgerDimension = 0;
                }
            }
            else if (this.ReceivableLedgerDimension)
            {
                // If the account has not been changed, then pull the value from ledger dimension as the master
                select DisplayValue from ledgerDimension where ledgerDimension.RecId == this.ReceivableLedgerDimension;
                account = ledgerDimension.DisplayValue;
            }
        }

        return account;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if EximDBKSchemesTable_IN record exists for given EximDutyDrawbackID_IN.
    /// </summary>
    /// <param name="_drawbackId">EximDutyDrawbackID_IN</param>
    /// <returns>true if EximDBKSchemesTable_IN record is found otherwise, false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(EximDutyDrawbackID_IN _drawbackId)
    {
        return _drawbackId
            && (select firstonly RecId from eximDBKSchemesTable_IN
                    where eximDBKSchemesTable_IN.DrawbackID == _drawbackId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximDBKSchemesTable_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximDBKSchemesTable_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximDBKSchemesTable_IN find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximDBKSchemesTable_IN    eximDBKSchemesTable;

        eximDBKSchemesTable.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximDBKSchemesTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximDBKSchemesTable
            where eximDBKSchemesTable.RecId == _recId;

        return eximDBKSchemesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDrawbackID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximDBKSchemesTable_IN table for the specified id.
    /// </summary>
    /// <param name="_drawbackId">EximDutyDrawbackID_IN</param>
    /// <param name="_forUpdate">boolean</param>
    /// <returns>EximDBKSchemesTable_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximDBKSchemesTable_IN findByDrawbackID(
        EximDutyDrawbackID_IN _drawbackId,
        boolean               _forUpdate = false)
    {
        EximDBKSchemesTable_IN dbkSchemesTable;

        if (_drawbackId)
        {
            dbkSchemesTable.selectForUpdate(_forUpdate);

            select firstonly dbkSchemesTable
                where dbkSchemesTable.DrawbackID == _drawbackId;
        }

        return dbkSchemesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTransHeaderStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status field of EximDBKSchemesTable_IN table record bsed on the EximDBKSchemesLine_IN records exists with Applied status.
    /// </summary>
    /// <param name="_schemesTableRecId">EximDBKSchemesTable_IN table Recid</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void updateTransHeaderStatus(RefRecId _schemesTableRecId)
    {
        EximDBKSchemesTable_IN dbkSchemesTable;
        EximDBKSchemesLine_IN  dbkSchemesLine;

        if (_schemesTableRecId)
        {
            ttsbegin;
            select firstonly forupdate dbkSchemesTable
                where dbkSchemesTable.RecId == _schemesTableRecId
            outer join RecId from dbkSchemesLine
                where dbkSchemesLine.SchemesTableRecId == dbkSchemesTable.RecId
                   && dbkSchemesLine.Status            == EximDBKTransStatus_IN::Applied;

            if (dbkSchemesTable)
            {
                dbkSchemesTable.Status = dbkSchemesLine.RecId ? EximDBKTransStatus_IN::Applied : EximDBKTransStatus_IN::Closed;
                dbkSchemesTable.update();
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62431</DeveloperDocumentation>
	<Label>@GLS61947</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>DrawbackID</TitleField1>
	<TitleField2>Status</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DrawbackIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EximDBKSchemesLine_IN</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>EximDBKSchemesLine_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximDBKTrans_IN</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>EximDBKTrans_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DrawbackID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximPorts</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DrawbackID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankAccount</Name>
			<Label>@SYS24585</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DutyDrawback</Name>
			<Label>@GLS61946</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EximPorts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DrawbackID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DrawbackDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OtherInformation</Name>
			<Label>@SYS114375</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DrawbackLetterNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivableLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DetailLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DetailLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>DetailSummary</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DrawbackDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@GLS62116</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrawbackID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximDutyDrawbackID_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrawbackLetterNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EximDBKLetterNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EximPorts</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS61500</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>FromDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>FromDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReceivableLedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@GLS5360</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EximDBKTransStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Text</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SYS2595</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ToDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ToDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TransDateTime</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@GLS62345</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DrawbackIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DrawbackID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EximPortsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EximPorts</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReceivableLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReceivableLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccount</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>BankAccount</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximPorts</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximPorts_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EximPorts_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximPorts_IN_EximDBKSchemesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EximPorts</Name>
					<Field>EximPorts</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReceivableLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_EximDBKSchemesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceivableLedgerDimension</Name>
					<Field>ReceivableLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>