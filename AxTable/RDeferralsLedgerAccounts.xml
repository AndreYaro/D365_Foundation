<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsLedgerAccounts</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsLedgerAccounts extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deferralsLedgerDimensionFind</Name>
				<Source><![CDATA[
    private LedgerDimensionDefaultAccount deferralsLedgerDimensionFind(PostingProfileAccountRelation _num,
                                                                       RDeferralsTransType           _deferralsTransType,
                                                                       RDeferralsPostingProfile      _deferralsPostingProfile,
                                                                       RDeferralsTableGroupAllBook   _deferralsTableGroupAllBook)
    {
        RDeferralsLedgerAccounts deferralsLedgerAccounts;
        ;

        select firstonly DeferralsLedgerDimension from deferralsLedgerAccounts
            where deferralsLedgerAccounts.PostingProfile     == _deferralsPostingProfile         &&
                  deferralsLedgerAccounts.AccountCode        == _deferralsTableGroupAllBook      &&
                  deferralsLedgerAccounts.DeferralsTransType == _deferralsTransType              &&
                  deferralsLedgerAccounts.PostValue          == RDeferralsPostValue::None        &&
                  (deferralsLedgerAccounts.AccountCode       == RDeferralsTableGroupAllBook::All ||
                   deferralsLedgerAccounts.Num               == _num);

        return deferralsLedgerAccounts.DeferralsLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deferralsOffsetLedgerDimensionFind</Name>
				<Source><![CDATA[
    private LedgerDimensionDefaultAccount deferralsOffsetLedgerDimensionFind(PostingProfileAccountRelation _num,
                                                                             RDeferralsTransType           _deferralsTransType,
                                                                             RDeferralsPostingProfile      _deferralsPostingProfile,
                                                                             RDeferralsTableGroupAllBook   _deferralsTableGroupAllBook)
    {
        RDeferralsLedgerAccounts deferralsLedgerAccounts;
        ;

        select firstonly DeferralsOffsetLedgerDimension from deferralsLedgerAccounts
            where deferralsLedgerAccounts.PostingProfile     == _deferralsPostingProfile         &&
                  deferralsLedgerAccounts.AccountCode        == _deferralsTableGroupAllBook      &&
                  deferralsLedgerAccounts.DeferralsTransType == _deferralsTransType              &&
                  deferralsLedgerAccounts.PostValue          == RDeferralsPostValue::None        &&
                  (deferralsLedgerAccounts.AccountCode       == RDeferralsTableGroupAllBook::All ||
                   deferralsLedgerAccounts.Num               == _num);

        return deferralsLedgerAccounts.DeferralsOffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        LedgerDimensionDefaultAccount   ledgerDimension;
        boolean                         ret;

        ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RDeferralsLedgerAccounts, DeferralsLedgerDimension),
                 fieldNum(RDeferralsLedgerAccounts, DeferralsOffsetLedgerDimension) :
                ledgerDimension = this.(_fieldId);
                ret = MainAccount::checkAllowPosting(LedgerDimensionFacade::getMainAccountFromLedgerDimension(ledgerDimension).MainAccountId);
                break;
            case fieldNum(RDeferralsLedgerAccounts, Num) :
                if ((this.AccountCode == RDeferralsTableGroupAllBook::GroupId ||
                     this.AccountCode == RDeferralsTableGroupAllBook::Table   ||
                     this.AccountCode == RDeferralsTableGroupAllBook::Book)   &&
                     ! this.Num)
                {
                    ret = checkFailed("@SYS24640");
                }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ;

        ret = super();
        if ((this.AccountCode == RDeferralsTableGroupAllBook::Table    ||
             this.AccountCode == RDeferralsTableGroupAllBook::Book     ||
             this.AccountCode == RDeferralsTableGroupAllBook::GroupId) &&
             ! this.Num)
        {
            ret = checkFailed("@SYS24729");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deferralsLedgerDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a ledger dimension account for the current posting profile.
    /// </summary>
    /// <param name="_deferralsId">
    /// A deferrals id which is used to select the ledger account from the ledger setup.
    /// </param>
    /// <param name="_deferralsTransType">
    /// A transaction type which is used to select ledger account from the posting profile.
    /// </param>
    /// <param name="_deferralsBookId">
    /// A deferrals value model.
    /// </param>
    /// <param name="_deferralsPostingProfile">
    /// A posting profile of deferrals value model.
    /// </param>
    /// <returns>
    /// The ledger dimension account.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Shows the exception if the posting profile isn't set up.
    /// </exception>
    public static LedgerDimensionDefaultAccount deferralsLedgerDim(RDeferralsId             _deferralsId,
                                                                          RDeferralsTransType      _deferralsTransType,
                                                                          RDeferralsBookId         _deferralsBookId,
                                                                          RDeferralsPostingProfile _deferralsPostingProfile = "")
    {
        LedgerDimensionDefaultAccount deferralsLedgerDimension;
        RDeferralsLedgerAccounts      rDeferralsLedgerAccounts;
        RDeferralsPostingProfile      deferralsPostingProfile = _deferralsPostingProfile;

        void findDeferralsLedger()
        {
            if (! deferralsLedgerDimension)
                deferralsLedgerDimension = rDeferralsLedgerAccounts.deferralsLedgerDimensionFind(_deferralsId,
                                                                                                 _deferralsTransType,
                                                                                                 deferralsPostingProfile,
                                                                                                 RDeferralsTableGroupAllBook::Table);
            if (! deferralsLedgerDimension)
                deferralsLedgerDimension = rDeferralsLedgerAccounts.deferralsLedgerDimensionFind(RDeferralsBook::find(_deferralsId, _deferralsBookId).DeferralsGroupId,
                                                                                                 _deferralsTransType,
                                                                                                 deferralsPostingProfile,
                                                                                                 RDeferralsTableGroupAllBook::GroupId);
            if (! deferralsLedgerDimension)
                deferralsLedgerDimension = rDeferralsLedgerAccounts.deferralsLedgerDimensionFind(_deferralsBookId,
                                                                                                 _deferralsTransType,
                                                                                                 deferralsPostingProfile,
                                                                                                 RDeferralsTableGroupAllBook::Book);
            if (! deferralsLedgerDimension)
                deferralsLedgerDimension = rDeferralsLedgerAccounts.deferralsLedgerDimensionFind("",
                                                                                                 _deferralsTransType,
                                                                                                 deferralsPostingProfile,
                                                                                                 RDeferralsTableGroupAllBook::All);
        }
        ;

        if (deferralsPostingProfile)
            findDeferralsLedger();

        if (! deferralsPostingProfile || ! deferralsLedgerDimension)
        {
            deferralsPostingProfile = RDeferralsGroup::find(RDeferralsBook::find(_deferralsId, _deferralsBookId).DeferralsGroupId).PostingProfile;

            if (deferralsPostingProfile)
                findDeferralsLedger();
        }

        if (! deferralsPostingProfile || ! deferralsLedgerDimension)
        {
            deferralsPostingProfile = RDeferralsParameters::find().PostingProfile;

            if (deferralsPostingProfile)
                findDeferralsLedger();
        }

        if (! deferralsPostingProfile)
            throw error("@SYS24457");

        return deferralsLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deferralsOffsetLedgerDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an offset ledger dimension account for the current posting profile.
    /// </summary>
    /// <param name="_deferralsId">
    /// A deferrals id which is used to select the offset account from the ledger setup.
    /// </param>
    /// <param name="_deferralsTransType">
    /// A transaction type which is used to select the offset account from the posting profile.
    /// </param>
    /// <param name="_deferralsBookId">
    /// A deferrals value model.
    /// </param>
    /// <param name="_deferralsPostingProfile">
    /// A posting profile of deferrals value model.
    /// </param>
    /// <returns>
    /// The offset dimension account.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Shows the exception if the posting profile isn't set up.
    /// </exception>
    public static LedgerDimensionDefaultAccount deferralsOffsetLedgerDim(RDeferralsId             _deferralsId,
                                                                                RDeferralsTransType      _deferralsTransType,
                                                                                RDeferralsBookId         _deferralsBookId,
                                                                                RDeferralsPostingProfile _deferralsPostingProfile = "")
    {
        LedgerDimensionDefaultAccount deferralsOffsetLedgerDimension;
        RDeferralsLedgerAccounts      rDeferralsLedgerAccounts;
        RDeferralsPostingProfile      deferralsPostingProfile = _deferralsPostingProfile;

        void findDeferralsLedgerOffset()
        {
            if (! deferralsOffsetLedgerDimension)
                deferralsOffsetLedgerDimension = rDeferralsLedgerAccounts.deferralsOffsetLedgerDimensionFind(_deferralsId,
                                                                                                             _deferralsTransType,
                                                                                                             deferralsPostingProfile,
                                                                                                             RDeferralsTableGroupAllBook::Table);
            if (! deferralsOffsetLedgerDimension)
                deferralsOffsetLedgerDimension = rDeferralsLedgerAccounts.deferralsOffsetLedgerDimensionFind(RDeferralsBook::find(_deferralsId, _deferralsBookId).DeferralsGroupId,
                                                                                                             _deferralsTransType,
                                                                                                             deferralsPostingProfile,
                                                                                                             RDeferralsTableGroupAllBook::GroupId);
            if (! deferralsOffsetLedgerDimension)
                deferralsOffsetLedgerDimension = rDeferralsLedgerAccounts.deferralsOffsetLedgerDimensionFind(_deferralsBookId,
                                                                                                             _deferralsTransType,
                                                                                                             deferralsPostingProfile,
                                                                                                             RDeferralsTableGroupAllBook::Book);
            if (! deferralsOffsetLedgerDimension)
                deferralsOffsetLedgerDimension = rDeferralsLedgerAccounts.deferralsOffsetLedgerDimensionFind("",
                                                                                                             _deferralsTransType,
                                                                                                             deferralsPostingProfile,
                                                                                                             RDeferralsTableGroupAllBook::All);
        }
        ;

        if (deferralsPostingProfile)
            findDeferralsLedgerOffset();

        if (! deferralsPostingProfile || ! deferralsOffsetLedgerDimension)
        {
            deferralsPostingProfile = RDeferralsGroup::find(RDeferralsBook::find(_deferralsId, _deferralsBookId).DeferralsGroupId).PostingProfile;

            if (deferralsPostingProfile)
                findDeferralsLedgerOffset();
        }

        if (! deferralsPostingProfile || ! deferralsOffsetLedgerDimension)
        {
            deferralsPostingProfile = RDeferralsParameters::find().PostingProfile;

            if (deferralsPostingProfile)
                findDeferralsLedgerOffset();
        }

        if (! deferralsPostingProfile)
            throw error("@SYS24457");

        return deferralsOffsetLedgerDimension;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RDeferralsLedger</FormRef>
	<Label>@SYS8344</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>PostingProfile</TitleField1>
	<TitleField2>DeferralsTransType</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ProfileAccountIdx</ClusteredIndex>
	<Modules>RDeferrals</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsOffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsOffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsTableGroupAll</ExtendedDataType>
			<EnumType>RDeferralsTableGroupAllBook</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeferralsLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeferralsOffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeferralsTransType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RDeferralsTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Num</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PostingProfileAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsPostingProfile</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostValue</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RDeferralsPostValue</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DeferralsLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferralsLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DeferralsOffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferralsOffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProfileAccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Num</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeferralsTransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PostValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeferralsLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeferralsLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RDeferralsLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsLedgerDimension</Name>
					<Field>DeferralsLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeferralsOffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeferralsOffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RDeferralsLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsOffsetLedgerDimension</Name>
					<Field>DeferralsOffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RDeferralsBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsBookTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsBookTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RDeferralsLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>DeferralsBookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>RDeferralsTableGroupAllBook::Book</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RDeferralsGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RDeferralsLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>DeferralsGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>RDeferralsTableGroupAllBook::GroupId</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsLedger</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RDeferralsLedger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<SourceEDT>RDeferralsPostingProfile</SourceEDT>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProfileIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RDeferralsTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RDeferralsLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>DeferralsId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>RDeferralsTableGroupAllBook::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>