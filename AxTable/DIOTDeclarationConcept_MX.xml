<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DIOTDeclarationConcept_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DIOTDeclarationConcept_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        ret = super();

        // Validating for Column order field
        ret = ret && this.validateWrite_ColumnOrder();
        ret = ret && this.validateWrite_Nondeductible();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite_ColumnOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the current DIOT declaration column order field record before it is written to the
    /// database.
    /// </summary>
    /// <returns>
    /// true if the column order falls between 8 and 24; otherwise, false.
    /// </returns>
    public boolean validateWrite_ColumnOrder()
    {
        #DIOT_MX
        boolean ret = true;

        if (this.ColumnOrder < #minColumnOrder || this.ColumnOrder > #maxColumnOrder)
        {
             ret = checkFailed(strfmt("@SYS315157", #minColumnOrder, #maxColumnOrder));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite_Nondeductible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the current DIOT non-deductible column order field record before it is written to the
    /// database.
    /// </summary>
    /// <returns>
    /// true if the non-deductible amount has a value when non-deductible is marked; otherwise, false.
    /// </returns>
    public boolean validateWrite_Nondeductible()
    {
        #DIOT_MX
        boolean ret = true;

        if (this.Nondeductible == NoYes::Yes && this.Nondeductibleamount == #minNonDeductibleamount)
        {
            ret = checkFailed("@SYS314919");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>DIOTDeclarationConcept_MX</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>DIOTDeclarationConcept_MX</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>DIOTDeclarationConcept_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static DIOTDeclarationConcept_MX find(
        RecId               _recId,
        boolean             _forUpdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        DIOTDeclarationConcept_MX diotDeclartionConcept;

        diotDeclartionConcept.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            diotDeclartionConcept.concurrencyModel(_concurrencyModel);
        }

        select diotDeclartionConcept
            where diotDeclartionConcept.RecId == _recId;

        return diotDeclartionConcept;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByColumnOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>DIOTDeclarationConcept_MX</c> table.
    /// </summary>
    /// <param name="_diotColumnOrder">
    /// The record ID of the <c>DIOTDeclarationConcept_MX</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>DIOTDeclarationConcept_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static DIOTDeclarationConcept_MX findByColumnOrder(
        DIOTColumnOrder_MX  _diotColumnOrder,
        boolean             _forUpdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        DIOTDeclarationConcept_MX diotDeclartionConcept;

        diotDeclartionConcept.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            diotDeclartionConcept.concurrencyModel(_concurrencyModel);
        }

        select diotDeclartionConcept
            where diotDeclartionConcept.ColumnOrder == _diotColumnOrder;

        return diotDeclartionConcept;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS328085</DeveloperDocumentation>
	<FormRef>DIOTDeclarationConcept_MX</FormRef>
	<Label>@SYS314914</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ConceptId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>APARShared</Modules>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DIOTDeclarationTaxCode_MX</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DIOTDeclarationTaxCode_MX</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConceptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ColumnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ColumnType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Nondeductibleamount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Nondeductible</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConceptId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Column</Name>
			<Label>@SYS5771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ColumnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ColumnType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConceptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Nondeductible</Name>
			<Label>@SYS62094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Nondeductible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Nondeductibleamount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ColumnOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DIOTColumnOrder_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ColumnType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>DIOTColumnType_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ConceptId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DIOTConceptID_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DIOTDescription_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Nondeductible</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS62094</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Nondeductibleamount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS314918</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ColumnOrderIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ColumnOrder</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ConceptIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ConceptId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>