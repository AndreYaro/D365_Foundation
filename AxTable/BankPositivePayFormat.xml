<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPositivePayFormat</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankPositivePayFormat extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean canDelete = super();

        if (canDelete)
        {
            BankAccountTable bankAccountTable;

            select firstonly RecId from bankAccountTable
                where bankAccountTable.BankPositivePayFormatName == this.FormatName;

            if (bankAccountTable.RecId)
            {
                canDelete = checkFailed("@SYS4004503");
            }
        }

        return canDelete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        SharedServiceUnitFileID previousFileId = this.FileId;

        super();

        if (previousFileId != '')
        {
            DMFXSLTUploadResult::constructFromFileId(previousFileId).deleteResult();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        SharedServiceUnitFileID newFileId = this.FileId;
        SharedServiceUnitFileID previousFileId = this.orig().FileId;

        super();

        // If the file ID was changed and a file used to exist in Azure, delete the old file.
        if (newFileId != previousFileId && previousFileId != '')
        {
            DMFXSLTUploadResult::constructFromFileId(previousFileId).deleteResult();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByFormatName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BankPositivePayFormat</c> table with the specified format name.
    /// </summary>
    /// <param name="_formatName">
    /// The positive pay format name.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the program reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BankPositivePayFormat</c> table; otherwise, an empty record.
    /// </returns>
    public static BankPositivePayFormat findByFormatName(
        BankPositivePayFormatName _formatName,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankPositivePayFormat positivePayFormat;

        positivePayFormat.selectForUpdate(_forupdate);

        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            positivePayFormat.concurrencyModel(_concurrencyModel);
        }

        select firstonly positivePayFormat
            where positivePayFormat.FormatName == _formatName;

        return positivePayFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean isFieldValid;

        isFieldValid = super(_fieldIdToCheck);

        if (isFieldValid)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(BankPositivePayFormat, DMFSourceName):
                    if (DMFDataSourceProperties::sourceFormat(this.DMFSourceName) != DMFFileFormat::XML)
                    {
                        isFieldValid = checkFailed("@CashManagement:PositivePayOutputMustBeXML");
                    }
                    break;
            }
        }

        return isFieldValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPositivePayFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a custom lookup for the <c>FormatName</c> field.
    /// </summary>
    /// <param name="_formControl">
    /// The <c>FormStringControl</c> object that needs the lookup.
    /// </param>
    public static void lookupPositivePayFormat(FormStringControl _formControl, NoYes _isPayroll)
    {
        SysTableLookup sysTableLookup;
        sysTableLookup = SysTableLookup::newParameters(tableNum(BankPositivePayFormat), _formControl);
        sysTableLookup.addLookupfield(fieldNum(BankPositivePayFormat, FormatName));
        sysTableLookup.addLookupfield(fieldNum(BankPositivePayFormat, Description));

        QueryBuildDataSource queryBuildDataSource;
        Query query = new Query();
        queryBuildDataSource = query.addDataSource(tableNum(BankPositivePayFormat));

        QueryBuildRange queryBuildRange;
        queryBuildRange = queryBuildDataSource.addRange(fieldNum(BankPositivePayFormat, IsPayroll));
        queryBuildRange.value(enum2Str(_isPayroll));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankCheque</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:PositivePayFormatTableDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BankPositivePayFormat</FormRef>
	<Label>@SYS4004473</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>FormatName</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>FormatName</ClusteredIndex>
	<Modules>Bank</Modules>
	<PrimaryIndex>FormatName</PrimaryIndex>
	<ReplacementKey>FormatName</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormatName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DMFSourceName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseGERConfiguration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ERFormatMappingID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormatName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormatName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FormatName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankPositivePayFormatName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS79393</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DMFSourceName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DMFSourceName</ExtendedDataType>
			<Label>@CashManagement:PositivePayTransformationInputFormat</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Filename</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SharedServiceUnitFileID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPayroll</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseGERConfiguration</Name>
			<Label>@CashManagement:GenericElectronicExportFormat</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ERFormatMappingID</Name>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@CashManagement:ExportFormatConfiguration</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FormatName</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FormatName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DMFDataSource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DMFDataSource</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DMFSourceName</Name>
					<Field>DMFSourceName</Field>
					<RelatedField>SourceName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ERFormatMappingTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ERFormatMappingID</Name>
					<Field>ERFormatMappingID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>