<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentTable_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetDocumentTable_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.DocumentDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the current record in the database.
    /// </summary>
    /// <remarks>
    /// After update a record, clear the cache of its original asset document type and current asset document type.
    /// </remarks>
    public void update()
    {
        AssetDocumentType_JP origType = this.orig().Type;

        super();

        if (this.Type != origType)
        {
            AssetDocumentTypeExistanceCache_JP::clearCacheForAssetDocType(this.Type);
            AssetDocumentTypeExistanceCache_JP::clearCacheForAssetDocType(origType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetDocumentTable_JP</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The <c>AssetDocumentTable_JP</c> recid.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The <c>AssetDocumentTable_JP</c> table record.
    /// </returns>
    public static AssetDocumentTable_JP find(
        RefRecId                _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetDocumentTable_JP      assetDocumentTable;

        if (_recId)
        {
            assetDocumentTable.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetDocumentTable.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                assetDocumentTable
            where
                assetDocumentTable.RecId == _recId;
        }

        return assetDocumentTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDocumentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetDocumentTable_JP</c> table.
    /// </summary>
    /// <param name="_mainType">
    /// The asset document main type
    /// </param>
    /// <param name="_documentId">
    /// The asset document document ID
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The asset document template table record.
    /// </returns>
    public static AssetDocumentTable_JP findByDocumentId(
        AssetDocumentMainType_JP     _mainType,
        AssetDocumentId_JP           _documentId,
        boolean                      _forupdate = false,
        ConcurrencyModel             _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetDocumentTable_JP      assetDocumentTable;

        if (_documentId)
        {
            assetDocumentTable.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetDocumentTable.concurrencyModel(_concurrencyModel);
            }

            select firstonly assetDocumentTable
                where assetDocumentTable.DocumentId == _documentId
                    && assetDocumentTable.MainType  == _mainType;
        }

        return assetDocumentTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDocumentIdByMainType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a lookup for the <c>AssetDocumentTable_JP</c> table.
    /// </summary>
    /// <param name="_ctrl">
    /// The form control object on which to perform the lookup.
    /// </param>
    /// <param name="_mainType">
    /// The fixed asset document main type.
    /// </param>
    public static void lookupDocumentIdByMainType(
        FormControl                _ctrl,
        AssetDocumentMainType_JP   _mainType)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(AssetDocumentTable_JP), _ctrl, true);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSourceTemplate;

        queryBuildDataSourceTemplate = query.addDataSource(tablenum(AssetDocumentTable_JP));
        queryBuildDataSourceTemplate.addRange(fieldNum(AssetDocumentTable_JP, MainType)).value(int2str(enum2int(_mainType)));

        sysTableLookup.addLookupfield(fieldnum(AssetDocumentTable_JP, DocumentId));
        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDocumentReferenceByMainType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a lookup for the <c>AssetDocumentTable_JP</c> table.
    /// </summary>
    /// <param name="_ctrl">
    /// The form control object on which to perform the lookup.
    /// </param>
    /// <param name="_mainType">
    /// The fixed asset document main type.
    /// </param>
    /// <returns>
    /// The AssetDocumentTable_JP buffer.
    /// </returns>
    public static Common lookupDocumentReferenceByMainType(
        FormControl                _ctrl,
        AssetDocumentMainType_JP   _mainType)
    {
        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tablenum(AssetDocumentTable_JP), _ctrl, true);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSourceTemplate;

        queryBuildDataSourceTemplate = query.addDataSource(tablenum(AssetDocumentTable_JP));
        queryBuildDataSourceTemplate.addRange(fieldNum(AssetDocumentTable_JP, MainType)).value(int2str(enum2int(_mainType)));

        sysTableLookup.addLookupfield(fieldnum(AssetDocumentTable_JP, DocumentId));
        sysTableLookup.parmQuery(query);

        return sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4004959</DeveloperDocumentation>
	<Label>@SYS4004938</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>DocumentId</TitleField1>
	<TitleField2>Type</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>DocumentId</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MainType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MainType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Document</Name>
			<Label>@SYS4004938</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MainType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentID</Name>
			<Label>@SYS4004940</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDocumentDate_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetDocumentId_JP</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MainType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>AssetDocumentMainType_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetDocumentType_JP</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DocumentId</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MainType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AssetDocumentTable_JP</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>AssetDocumentTable_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>