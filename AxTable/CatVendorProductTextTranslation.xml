<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorProductTextTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatVendorProductTextTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCurrentDescription</Name>
				<Source><![CDATA[
    display EcoResDescription getCurrentDescription()
    {
        CatVendorApprovedProduct            catVendorApprovedProduct;
        EcoResProductTranslation            ecoResProductTranslation;
        CatVendorCatalog                    catVendorCatalog;
        CatVendorProductCandidate           catVendorProductCandidate;
        CatVendorCatalogMaintenanceRequest  catVendorCatalogMaintenanceRequest;

        //Gets current description from ecoResProductTranslation for this product and this language.
        select VendorProductCode, DirPartyTable, EcoResProduct
            from catVendorApprovedProduct
        join RecId, VendorProductCode, CatalogMaintenanceRequest
            from catVendorProductCandidate
            where catVendorProductCandidate.RecId == this.ProductCandidate
            && catVendorApprovedProduct.VendorProductCode == catVendorProductCandidate.VendorProductCode
        join  RecId, VendorCatalog
            from catVendorCatalogMaintenanceRequest
            where catVendorCatalogMaintenanceRequest.RecId == catVendorProductCandidate.CatalogMaintenanceRequest
        join RecId, VendorParty
            from catVendorCatalog
            where catVendorCatalog.RecId == catVendorCatalogMaintenanceRequest.VendorCatalog
            && catVendorApprovedProduct.DirPartyTable == catVendorCatalog.VendorParty
        join Description
            from ecoResProductTranslation
            where ecoResProductTranslation.Product == catVendorApprovedProduct.EcoResProduct
            && ecoResProductTranslation.LanguageId == this.Language;

        return ecoResProductTranslation.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentName</Name>
				<Source><![CDATA[
    display EcoResProductName getCurrentName()
    {
        CatVendorApprovedProduct            catVendorApprovedProduct;
        EcoResProductTranslation            ecoResProductTranslation;
        CatVendorCatalog                    catVendorCatalog;
        CatVendorProductCandidate           catVendorProductCandidate;
        CatVendorCatalogMaintenanceRequest  catVendorCatalogMaintenanceRequest;

        //Gets current product name from ecoResProductTranslation for this product and this language.
        select VendorProductCode, DirPartyTable, EcoResProduct
            from catVendorApprovedProduct
        join VendorProductCode, CatalogMaintenanceRequest
            from catVendorProductCandidate
            where catVendorProductCandidate.RecId == this.ProductCandidate
            && catVendorApprovedProduct.VendorProductCode == catVendorProductCandidate.VendorProductCode
        join VendorCatalog
            from catVendorCatalogMaintenanceRequest
            where catVendorCatalogMaintenanceRequest.RecId == catVendorProductCandidate.CatalogMaintenanceRequest
        join VendorParty
            from catVendorCatalog
            where catVendorCatalog.RecId == catVendorCatalogMaintenanceRequest.VendorCatalog
            && catVendorApprovedProduct.DirPartyTable == catVendorCatalog.VendorParty
        join Name
            from ecoResProductTranslation
            where ecoResProductTranslation.Product == catVendorApprovedProduct.EcoResProduct
            && ecoResProductTranslation.LanguageId == this.Language;

        return ecoResProductTranslation.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDesciption</Name>
				<Source><![CDATA[
    display CatVendorCatalogDescription newDesciption(CatVendorProductTextTranslation _catVendorProductTextTranslation)
    {
        CatVendorCatalogDescription catVendorCatalogDescription;
        CatVendorProductCandidate   catVendorProductCandidateLocal;
        select ActionType,Status
            from catVendorProductCandidateLocal
                where catVendorProductCandidateLocal.RecId == _catVendorProductTextTranslation.ProductCandidate;

        // Gets product description for this product. In case of delete action, product will not have any
        // description associated with it.So either Deleted, Delete in progress or Delete rejected  string will be returned.
        if (catVendorProductCandidateLocal.ActionType == CatProductActionType::Delete)
        {
            if (catVendorProductCandidateLocal.Status == CatVendorProductStatus::Approved)
            {
                catVendorCatalogDescription = "@SYS311898";
            }
            else if (catVendorProductCandidateLocal.Status == CatVendorProductStatus::Rejected)
            {
                catVendorCatalogDescription = "@SYS311899";
            }
            else
            {
                catVendorCatalogDescription = "@SYS311897";
            }
        }
        else
        {
            catVendorCatalogDescription = this.Description;
        }

        return catVendorCatalogDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatVendorProductTextTranslation</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatVendorProductTextTranslation</c> table; otherwise, an empty record.
    /// </returns>
    public static CatVendorProductTextTranslation find(recId _recId, boolean _forUpdate = false)
    {
        CatVendorProductTextTranslation catVendorProductTextTranslation;

        if (_recId)
        {
            catVendorProductTextTranslation.selectForUpdate(_forUpdate);
            select firstonly catVendorProductTextTranslation
                where catVendorProductTextTranslation.RecId == _recId;
        }
        return catVendorProductTextTranslation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendCatalogImport</ConfigurationKey>
	<DeveloperDocumentation>@SYS322974</DeveloperDocumentation>
	<Label>@SYS301765</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProductCandidate</TitleField1>
	<TitleField2>Language</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CatVendorProductCandidateIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>CatVendorProductCandidateIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductCandidate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductCandidate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductCandidate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Language</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatVendorCatalogDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Language</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatVendorProductCandidateName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductCandidate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatVendorProductCandidateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductCandidate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Language</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatVendorProductCandidate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatVendorProductCandidate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatVendorProductCandidate</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CatVendorProductCandidate_CatVendorProductTextTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductCandidate</Name>
					<Field>ProductCandidate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatVendorProductTextTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Language</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>Language</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>