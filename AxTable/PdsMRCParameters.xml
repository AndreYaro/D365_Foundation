<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsMRCParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsMRCParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createNoValidDocumentAlertRules</Name>
				<Source><![CDATA[
    public void createNoValidDocumentAlertRules()
    {
        #define.NoRule('')

        PdsMRCEventBuilder  eventBuilder;
        EventRule           eventRule;
        fieldId             docFieldId  = fieldnum(PdsMRCEventTracker, DocumentId);

        void initEventBuilder()
        {
            eventBuilder = null;
            eventBuilder = PdsMRCEventBuilder::construct();
            eventBuilder.parmRecipient(this.msdsAdminId);
            eventBuilder.parmTableId(tablenum(PdsMRCEventTracker));
            eventBuilder.parmEventTypeId(classnum(EventTypeCUD));
            eventBuilder.parmEventTrigger(EventTypeTrigger::RecordInsert);
            eventBuilder.parmFieldId(
                            new SysDictField(tablenum(PdsMRCEventTracker),
                                             docFieldId,
                                             1).extendedFieldId());
            eventBuilder.parmFormName(formstr(PdsMRCEventTracker));
        }

        ttsbegin;
        this.selectForUpdate(true);

        if (!this.EventRuleIds[enum2int(PdsMRCEventType::SalesNoDoc)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Sales);
            eventBuilder.parmSubject("@PDS836");
            eventBuilder.parmMessage("@PDS837");
            eventBuilder.parmEventType(PdsMRCEventType::SalesNoDoc);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::SalesNoDoc)] = eventRule.RuleId;
        }
        if (!this.EventRuleIds[enum2int(PdsMRCEventType::SalesExpiry)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Sales);
            eventBuilder.parmSubject("@PDS838");
            eventBuilder.parmMessage("@PDS839");
            eventBuilder.parmEventType(PdsMRCEventType::SalesExpiry);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::SalesExpiry)] = eventRule.RuleId;
        }
        if (!this.EventRuleIds[enum2int(PdsMRCEventType::SalesAdvise)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Sales);
            eventBuilder.parmSubject("@PDS840");
            eventBuilder.parmMessage("@PDS841");
            eventBuilder.parmEventType(PdsMRCEventType::SalesAdvise);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::SalesAdvise)] = eventRule.RuleId;
        }
        if (!this.EventRuleIds[enum2int(PdsMRCEventType::PurchNoDoc)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Purchase);
            eventBuilder.parmSubject("@PDS842");
            eventBuilder.parmMessage("@PDS843");
            eventBuilder.parmEventType(PdsMRCEventType::PurchNoDoc);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::PurchNoDoc)] = eventRule.RuleId;
        }
        if (!this.EventRuleIds[enum2int(PdsMRCEventType::PurchExpiry)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Purchase);
            eventBuilder.parmSubject("@PDS844");
            eventBuilder.parmMessage("@PDS845");
            eventBuilder.parmEventType(PdsMRCEventType::PurchExpiry);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::PurchExpiry)] = eventRule.RuleId;
        }
        if (!this.EventRuleIds[enum2int(PdsMRCEventType::PurchAdvise)])
        {
            initEventBuilder();
            eventBuilder.parmEventModule(PdsMRCEventModule::Purchase);
            eventBuilder.parmSubject("@PDS846");
            eventBuilder.parmMessage("@PDS847");
            eventBuilder.parmEventType(PdsMRCEventType::PurchAdvise);
            eventRule = eventBuilder.build();
            this.EventRuleIds[enum2int(PdsMRCEventType::PurchAdvise)] = eventRule.RuleId;
        }
        this.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throws an exception.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Always thrown if the delete method is called.
    /// </exception>
    public void delete()
    {
        throw error("@PDS848");
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record and flushes the table.
    /// </summary>
    public void update()
    {
        PdsMRCParameters orig = this.orig();
        super();
        if (orig.MSDSAdminId != this.MSDSAdminId)
        {
            this.updateAdminIdOnEventRules();
        }
        flush PdsMRCParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAdminIdOnEventRules</Name>
				<Source><![CDATA[
    private void updateAdminIdOnEventRules()
    {
        int       i;
        DictType  eventRuleTypes = new DictType(extendedTypeNum(PdsMRCEventRuleIds));
        EventRule eventRule;

        // update AdminId on all rules created for this company
        for (i = 1; i <= eventRuleTypes.arraySize(); i++)
        {
            eventRule = eventRule::find(this.EventRuleIds[i],true);
            if (eventRule.RecId)
            {
                eventRule.UserId = this.MSDSAdminId;
                eventRule.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldstr(PdsMRCParameters, msdsAdviseInterval):
                case fieldstr(PdsMRCParameters, msdsInterval):
                    if (this.msdsAdviseInterval > this.msdsInterval)
                    {
                        ret = checkFailed("@PDS849");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret
            && ((this.StartDate == dateNull())
                    ^ (this.EndDate == dateNull())))
        {
            ret = checkFailed("@PDS1179");
        }
        if (ret
            && this.StartDate
            && this.StartDate > this.EndDate)
        {
            ret = checkFailed("@PDS1178");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUseMRC</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if the MRC functionality is enabled and can be used.
    /// </summary>
    /// <returns>
    ///     true if the MRC is enabled; otherwise, false.
    /// </returns>
    public static boolean canUseMRC()
    {
        return isConfigurationkeyEnabled(configurationkeynum(PdsMRC));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a parameter record exists.
    /// </summary>
    /// <returns>
    /// True if the parameter record exists; otherwise, false.
    /// </returns>
    public static boolean exist()
    {
        return (select pdsMRCParameters
                where pdsMRCParameters.Key == 0).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a record in the <c>MRCParameters</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The parameter record.
    /// </returns>
    public static PdsMRCParameters find(boolean _forUpdate = false)
    {
        PdsMRCParameters parameter;

        parameter.selectForUpdate(_forUpdate);
        select firstonly parameter
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);

            parameter.createNoValidDocumentAlertRules();
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence module setup for the MRC module.
    /// </summary>
    /// <returns>
    /// The number sequence module.
    /// </returns>
    public static NumberSeqModule numberSeqModule()
    {
        return new NumberSeqModuleMRC().numberSeqModule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefMRCDocumentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>NumberSeqReference</c> record for generating MSDS document IDs.
    /// </summary>
    /// <returns>
    /// The <c>NumberSeqReference</c> record to generate MSDS document IDs.
    /// </returns>
    public static NumberSequenceReference numRefMRCDocumentId()
    {
        return NumberSeqReference::findReference(extendedtypenum(PdsMRCDocumentId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsMRC</ConfigurationKey>
	<DeveloperDocumentation>@PDS1084</DeveloperDocumentation>
	<Label>@PDS827</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MSDSInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MSDSAdviseInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MSDSAdminId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MSDSInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MSDSAdviseInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MSDSAdminId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS40777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MSDSAdminId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AlertRuleIds</Name>
			<Label>@SYS99579</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EventRuleIds</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AnnualCalcBasis</Name>
			<Label>@PDS831</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocManagement</Name>
			<Label>@PDS832</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EffectiveDayType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequireReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Notifications</Name>
			<Label>@PDS833</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AlertOnExpirySales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlertOnAdviseIntervalSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlertOnExpiryPurchase</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlertOnAdviseIntervalPurchase</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Regulation</Name>
			<Label>@PDS834</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegulationWarningOnSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegulationWarningOnPurchase</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegulationWarningOnPack</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintMSDSOnPack</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingError</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Validity</Name>
			<Label>@PDS835</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MSDSInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MSDSAdviseInterval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlertOnAdviseIntervalPurchase</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCAlertOnAdviseIntervalPurchase</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlertOnAdviseIntervalSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCAlertOnAdviseIntervalSales</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlertOnExpiryPurchase</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCAlertOnExpiryPurchase</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlertOnExpirySales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCAlertOnExpirySales</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EffectiveDayType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsMRCEffectiveDateBasis</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCEndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EventRuleIds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCEventRuleIds</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MSDSAdminId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PdsMRCAdminUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MSDSAdviseInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMSDSInterval</ExtendedDataType>
			<Label>@PDS829</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MSDSInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMSDSInterval</ExtendedDataType>
			<Label>@PDS828</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingError</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCPostingError</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintMSDSOnPack</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCPrintMSDSOnPack</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RegulationWarningOnPack</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCRegulationWarningOnPack</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RegulationWarningOnPurchase</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCRegulationWarningOnPurchase</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RegulationWarningOnSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCRegulationWarningOnSales</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequireReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMandatoryReasonForModification</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCStartDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>MSDSAdmin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MSDSAdminId</Name>
					<SourceEDT>PdsMRCAdminUserId</SourceEDT>
					<Field>MSDSAdminId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>