<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProposalItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProposalItem extends common
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ProjProposalItemDetail  projProposalItemDetail;
        ProjItemTransSale       projItemTransSale;

        ttsbegin;

        if (this.ProjTransId)
        {
            while select RecId from projProposalItemDetail
                where projProposalItemDetail.ProposalRefRecId == this.RecId
                    join forupdate projItemTransSale
                        where projItemTransSale.RecId == projProposalItemDetail.SaleRefRecId
                                &&   (projItemTransSale.TransStatus == ProjTransStatus::InvoiceProposal
                                ||    projItemTransSale.TransStatus == ProjTransStatus::CreditnoteProposal)
            {
                projItemTransSale = this.initProjTransStatus(projItemTransSale);
                projItemTransSale.update();
            }
        }

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            this.markCurrentTaxDocumentTaxStatusDirty(true);
        }
        // </GTE>

        super();

        ProjProposalTranSummariesRefresh::validateAndSetRecalculateTotalsStatusToRequiredIfAppropriate(this.ProposalId);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProjTransStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the project transaction status.
    /// </summary>
    /// <param name = "_projItemTransSale">
    ///     An instance of <c>ProjItemTransSale</c> table buffer.
    /// </param>
    /// <returns>
    ///     The initialized buffer of <c>ProjItemTransSale</c> table.
    /// </returns>
    protected ProjItemTransSale initProjTransStatus(ProjItemTransSale _projItemTransSale)
    {
        switch (_projItemTransSale.TransStatus)
        {
            case ProjTransStatus::InvoiceProposal:
                _projItemTransSale.TransStatus = ProjTransStatus::Posted;
                break;
            case ProjTransStatus::CreditnoteProposal:
                if (ProjInvoiceCancelProposalDeletion_BR_Flight::instance().isEnabled()
                    && TmpInvoiceCancel_BR::findByProposalId(this.ProposalId))
                {
                    _projItemTransSale.TransStatus = ProjTransStatus::Invoiced;
                }
                else
                {
                    _projItemTransSale.TransStatus = ProjTransStatus::MarkedCreditNote;
                }
                break;
        }

        return _projItemTransSale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ProjItemTrans  projItemTrans  = ProjItemTrans::find(this.ProjTransId);
        SalesLine salesLine = SalesLine::findInventTransId(this.InventTransId, false);
        ttsbegin;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.updateWithTaxPaymentAndWouldYouClaimRefund_IN();
        }

        super();

        if (projItemTrans)
        {
            Docu::copy(projItemTrans, this);
        }

        else if (salesLine)
        {
            Docu::copy(salesLine, this);
        }

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            this.markCurrentTaxDocumentTaxStatusDirty();
        }
        // </GTE>

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventTable</c> table.
    /// </summary>
    /// <param name="itemId">
    /// The record ID of the <c>InventTable</c> record to find.
    /// </param>
    /// <param name="update">
    /// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventTable</c> table; otherwise, an empty record.
    /// </returns>
    public InventTable inventTable(ItemId     itemId = this.ItemId,
                            boolean    update = false)
    {
        return InventTable::find(itemId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmt</Name>
				<Source><![CDATA[
    display AmountCur lineAmt()
    {
        return ProjTrans::newProjProposalItem(this).transTurnover();
    }

]]></Source>
			</Method>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatusDirty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status of <c> ProjProposalItem </c> to dirty
    /// </summary>
    /// <param name="isDelete">
    /// the record is deleted or not
    /// </param>
    public void markCurrentTaxDocumentTaxStatusDirty(boolean isDelete = false)
    {
        ProjProposalJour                projProposaljour = this.projProposalJour();
        Common    transHeader;
        TaxableDocumentDescriptor       descriptor;
        ITaxableDocument                taxableDocument;
        ProjProposalItem                projProposalItemLoc;

        if (this.ItemType == ProjItemType::SalesOrder)
        {
            transHeader = TaxEngineProjItemSOTransHeader::findOrCreateByProjProposalJour(projProposalJour);
        }
        else
        {
            transHeader = TaxEngineProjItemTransHeader::findOrCreateByProjProposalJour(projProposalJour);
        }

        descriptor       = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(transHeader);
        taxableDocument  = TaxableDocumentObject::construct(descriptor);
        if (isDelete)
        {
            select firstOnly RecId from projProposalItemLoc where projProposaljour.ProposalId == projProposalItemLoc.ProposalId;
            if (projProposalItemLoc)
            {
                TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Dirty);
            }
            else
            {
                TaxBusinessService::deleteTaxDocument(taxableDocument);
                TaxEngineProjItemTransHeader::deleteByProjProposalJour(projProposaljour);
            }
        }
        else
        {
            TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Dirty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyTaxDocumentFromOriginalInvoice</Name>
				<Source><![CDATA[
    internal void copyTaxDocumentFromOriginalInvoice()
    {
        ProjProposalJour projProposalJour = this.projProposalJour();
        ProjInvoiceItem projInvoiceItem = this.getLatestProjInvoiceItem();
        ProjInvoiceJour projInvoiceJour = projInvoiceItem.projInvoiceJour();

        Common headerTarget, headerSource;
        if (this.ItemType == ProjItemType::SalesOrder)
        {
            headerTarget = TaxEngineProjItemSOTransHeader::findOrCreateByProjProposalJour(projProposalJour);
            headerSource = TaxEngineProjItemSOJourHeader::findOrCreateByProjInvoiceJour(projInvoiceJour);
        }
        else
        {
            headerTarget = TaxEngineProjItemTransHeader::findOrCreateByProjProposalJour(projProposalJour);
            headerSource = TaxEngineProjItemJourHeader::findOrCreateByProjInvoiceJour(projInvoiceJour);
        }

        ITaxDocument taxDocumentSource = TaxBusinessService::getTaxDocumentBySource(headerSource.TableId, headerSource.RecId);
        TaxBusinessService::copyTaxDocumentForProjectCreditNote(projInvoiceItem, this, taxDocumentSource, headerTarget);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLatestProjInvoiceItem</Name>
				<Source><![CDATA[
    private ProjInvoiceItem getLatestProjInvoiceItem()
    {
        ProjProposalItem projProposalItem;
        ProjProposalItemDetail projProposalItemDetail;
        ProjInvoiceItem projInvoiceItem;
        ProjInvoiceItemDetail projInvoiceItemDetail;
        ProjItemTransSale projItemTransSale;
        ProjInvoiceJour projInvoiceJour;

        select firstonly ProjInvoiceId, InvoiceDate from projInvoiceJour
            order by RecId desc
            join projInvoiceItem
                where projInvoiceItem.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                    && projInvoiceItem.InvoiceDate == projInvoiceJour.InvoiceDate
            exists join projInvoiceItemDetail
                where projInvoiceItemDetail.InvoiceRefRecId == projInvoiceItem.RecId
            exists join projItemTransSale
                where projItemTransSale.RecId == projInvoiceItemDetail.SaleRefRecId
            exists join projProposalItemDetail
                where projProposalItemDetail.SaleRefRecId == projItemTransSale.RecId
            exists join projProposalItem
                where projProposalItem.RecId == projProposalItemDetail.ProposalRefRecId
                    && projProposalItem.RecId == this.RecId;

        return projInvoiceItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrCurrencyID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the currency code for the project proposal item.
    /// </summary>
    /// <returns>
    /// The currency code for the project proposal item.
    /// </returns>
    public display CurrencyCode mcrCurrencyID()
    {
        return ProjTrans::newProjProposalItem(this).currencyIdSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the price unit of the project proposal item.
    /// </summary>
    /// <returns>
    /// The price unit of the project proposal item.
    /// </returns>
    public display PriceUnit mcrPriceUnit()
    {
        return ProjTrans::newProjProposalItem(this).priceUnit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sales unit of the project proposal item.
    /// </summary>
    /// <returns>
    /// The sales unit of the project proposal item.
    /// </returns>
    public display SalesUnit mcrSalesUnit()
    {
        return ProjTrans::newProjProposalItem(this).salesUnit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(false)]
    display ProjId projId()
    {
        return SalesTable::find(this.SalesId).ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projItemTrans</Name>
				<Source><![CDATA[
    public ProjItemTrans projItemTrans(boolean _update = false)
    {
        return ProjItemTrans::find(this.ProjTransId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projProposalJour</Name>
				<Source><![CDATA[
    public ProjProposalJour projProposalJour()
    {
        return ProjProposalJour::find(this.ProposalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the quantity for this transaction.
    /// </summary>
    /// <returns>
    ///    The quantity for this transaction.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    display InventQty qty()
    {
        return ProjTrans::newProjProposalItem(this).qty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesLine</Name>
				<Source><![CDATA[
    public SalesLine salesLine(boolean _update = false)
    {
        return SalesLine::findInventTransId(this.InventTransId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales price for this transaction.
    /// </summary>
    /// <returns>
    ///    The sales price for this transaction.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    display SalesPrice salesPrice()
    {
        return ProjTrans::newProjProposalItem(this).salesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    public SalesTable salesTable(boolean _forUpdate = false)
    {
        return SalesTable::find(this.SalesId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDeliverNow</Name>
				<Source><![CDATA[
    public void  setInventDeliverNow()
    {
        SalesLine salesLine;

        salesLine = this.salesLine();

        this.InventNow = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.ItemId,
																							   salesLine.InventDimId,
																							   this.DeliverNow,
																							   salesLine.SalesUnit,
																							   salesLine.inventTable().inventUnitId(),
																							   NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    public void setLineAmount()
    {
        ProjProposalItemDetail  projProposalItemDetail;

        select forupdate projProposalItemDetail where projProposalItemDetail.ProposalRefRecId == this.RecId;

        if (projProposalItemDetail)
        {
            projProposalItemDetail.LineAmount = this.salesLine().calcLineAmount(this.DeliverNow);
            projProposalItemDetail.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    public void setQty(DocumentStatus  documentStatus)
    {
        SalesQuantity    salesQty    = SalesQuantity::construct(DocumentStatus::ProjectInvoice);

        this.setInventDeliverNow();

        [this.DeliverNow, this.RemainBefore, this.RemainAfter]              = salesQty.qtySales(this, SalesUpdate::All, this.DeliverNow);
        [this.InventNow, this.RemainBeforeInvent, this.RemainAfterInvent]   = salesQty.qtyInvent(this, SalesUpdate::All, this.InventNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainAfterInvent</Name>
				<Source><![CDATA[
    public void setRemainAfterInvent()
    {
        SalesLine  salesLine;

        salesLine = this.salesLine();

        this.RemainAfterInvent = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.ItemId,
																									   salesLine.InventDimId,
																									   this.RemainAfter,
																									   salesLine.SalesUnit,
																									   salesLine.inventTable().inventUnitId(),
																									   NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(Num     _parmId,
                         SalesId _salesId)
    {
        return _parmId && _salesId &&
               (select salesParmLine
                where salesParmLine.ParmId      == _parmId &&
                      salesParmLine.OrigSalesId == _salesId
                ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjProposalItem find(ProjItemTransId     _transId,
                                        ProjProposalId      _proposalId,
                                        boolean             _forUpdate      = false)
    {
        ProjProposalId      proposalId          = _proposalId;
        ProjProposalItem    projProposalItem    = null;

        projProposalItem.selectForUpdate(_forUpdate);

        if (_transId && proposalId)
        {
            select projProposalItem
                where projProposalItem.ProjTransId      == _transId &&
                      projProposalItem.ProposalId   == proposalId;
        }

        return projProposalItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInvent</Name>
				<Source><![CDATA[
    public static ProjProposalItem findInvent(InventTransId    _transId,
                                              ProjProposalId   _proposalId     = '',
                                              boolean          _forUpdate      = false)
    {
        ProjProposalItem    projProposalItem = null;

        projProposalItem.selectForUpdate(_forUpdate);

        if (_transId)
        {
            if (_transId && _proposalId)
            {
                select projProposalItem
                    where projProposalItem.InventTransId == _transId    &&
                          projProposalItem.ProposalId    == _proposalId;
            }
            else
            {
                select projProposalItem where projProposalItem.InventTransId == _transId;
            }
        }

        return projProposalItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static ProjProposalItem findRecId(RefRecId _proposalRefRecId, boolean _forUpdate = false)
    {
        ProjProposalItem    projProposalItem = null;

        projProposalItem.selectForUpdate(_forUpdate);

        if (_proposalRefRecId)
        {
            select projProposalItem
                where projProposalItem.RecId == _proposalRefRecId;
        }

        return projProposalItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProposaleFromSalesLine</Name>
				<Source><![CDATA[
    public static ProjProposalItem initProposaleFromSalesLine(SalesLine    _salesLine)
    {
        #isoCountryRegionCodes
        ProjProposalItem  projProposalItem;

        projProposalItem.SalesId          = _salesLine.SalesId;
        projProposalItem.ItemId           = _salesLine.ItemId;
        projProposalItem.CustAccount      = _salesLine.CustAccount;
        projProposalItem.InventTransId    = _salesLine.InventTransId;
        projProposalItem.TaxGroupId       = _salesLine.TaxGroup;
        projProposalItem.TaxItemGroupId   = _salesLine.TaxItemGroup;
        projProposalItem.ItemType         = ProjItemType::SalesOrder;
        projProposalItem.ProjTransId      = _salesLine.ProjTransId;
        projProposalItem.Txt              = _salesLine.Name;
        projProposalItem.psaContractLineNum = _salesLine.psaContractLineNum;

        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        {
            projProposalItem.RefInvoiceID_MY      = _salesLine.salesLine_W().RefInvoiceId_MY;
            projProposalItem.RefInvoiceDate_MY    = _salesLine.salesLine_W().RefInvoiceDate_MY;
        }
        // </GMY>

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
        {
            if (_salesLine.OrderLineReference_NO)
            {
                projProposalItem.OrderLineReference_NO = _salesLine.OrderLineReference_NO;
            }

            if (!projProposalItem.OrderLineReference_NO && _salesLine.CustomerLineNum)
            {
                projProposalItem.OrderLineReference_NO = int2str(_salesLine.CustomerLineNum);
            }
        }

        return projProposalItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProposaleFromTrans</Name>
				<Source><![CDATA[
    public static ProjProposalItem initProposaleFromTrans(ProjItemTrans _projItemTrans)
    {
        ProjProposalItem    projProposalItem;

        projProposalItem.ProjTransId    = _projItemTrans.ProjTransId;
        projProposalItem.TaxGroupId     = _projItemTrans.TaxGroupId;
        projProposalItem.TaxItemGroupId = _projItemTrans.TaxItemGroupId;

        projProposalItem.InventTransId  = _projItemTrans.InventTransId;

        projProposalItem.ItemType       = ProjItemTrans::transactionOriginToItemType(_projItemTrans.TransactionOrigin);

        projProposalItem.Txt            = _projItemTrans.Txt;
        projProposalItem.ItemId         = _projItemTrans.ItemId;
        projProposalItem.psaContractLineNum = _projItemTrans.psaContractLineNum;

        return projProposalItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY() && !this.SalesId)
        {
            ret = ret && TaxGSTHelper_MY::validateProjProposalTransTableWrite(this);
        }
        // </GMY>

        // Validate item sales tax group can only be updated when
        // (1) Project operation integration feature is enabled &&
        // (2) Project invoice proposal status is open
        // (3) Tax calculation service is enabled for project
        // This will catch unqualified update on item sales group from integration bypass UI
        if (!Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project)
            && (!ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled() ||
                ProjProposalJour::find(this.ProposalId).LineProperty != ProjLinePropertyCode::Open))
        {
            if (this.orig() && this.orig().TaxItemGroupId != this.TaxItemGroupId)
            {
                ret = checkFailed("@Proj:TaxItemGroupUpdateError");
            }
        }

        if (ret && ProjProposalTranSummariesRefresh::isRecalculateTotalsStatusInProcessState(this.ProposalId))
        {
            ret = checkFailed("@Proj:InvoiceLineWriteErrorDueToRecalculatesTotalStatusInProcess");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWithTaxPaymentAndWouldYouClaimRefund_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the value of the tax with payment and would you claim refund fields.
    /// </summary>
    private void updateWithTaxPaymentAndWouldYouClaimRefund_IN()
    {
        ProjProposalJour projProposalJour = ProjProposalJour::find(this.ProposalId);

        if (projProposalJour && this.SalesId)
        {
            SalesTable salesTable;
            SalesTable_W salesTable_W;

            select firstonly WithIGSTPayment_IN, WouldYouClaimRefund_IN from salesTable_W
                join SalesId from salesTable
                    where salesTable.RecId == salesTable_W.SalesTable
                        && salesTable.SalesId == this.SalesId;

            if (salesTable_W)
            {
                ttsbegin;
                projProposalJour.selectForUpdate(true);
                projProposalJour.WithIGSTPayment_IN = salesTable_W.WithIGSTPayment_IN;
                projProposalJour.WouldYouClaimRefund_IN = salesTable_W.WouldYouClaimRefund_IN;
                projProposalJour.update();
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124956</DeveloperDocumentation>
	<Label>@SYS55262</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ProposalId</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ProposalIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjProposalItemDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ProjProposalItemDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProposalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>lineAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Block</Name>
			<Label>@SYS28075</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Complete</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EInvoice</Name>
			<Label>@SYS100769</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderLineReference_NO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Intrastat</Name>
			<Label>@SYS6530</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventNow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemainBeforeInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemainAfterInvent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OrderLines</Name>
			<Label>@SYS508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>lineAmt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS4534</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProposalId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PSA</Name>
			<Label>@PSA43</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PSAContractLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesQuantity</Name>
			<Label>@SYS11990</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RemainBefore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemainAfter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliverNow</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWriteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludedTaxPercent_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceInvoice_MY</Name>
			<Label>@SYP4860693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceId_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceDate_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Complete</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineComplete</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<Label>@SYS25196</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DeliverNow</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
			<Label>@SYS17214</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EInvoiceAccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EInvoiceAccountCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>IncludedTaxPercent_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IncludedTaxPercent_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventNow</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS50280</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjItemType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjItemTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProposalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjProposalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PSAContractLineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PSAContractLineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainAfter</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
			<Label>@SYS50278</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainAfterInvent</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS13786</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainBefore</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
			<Label>@SYS8459</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainBeforeInvent</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS8459</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupId</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupId</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWriteCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWriteCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS13566</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RefInvoiceDate_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYP4860674</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefInvoiceId_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<Label>@SYP4860676</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderLineReference_NO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OrderLineReference_NO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideSalesTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationOverrideSalesTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProposalIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProposalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjTransidx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ProjProposalMap_MY</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RefInvoiceDate_MY</MapField>
					<MapFieldTo>RefInvoiceDate_MY</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefInvoiceId_MY</MapField>
					<MapFieldTo>RefInvoiceId_MY</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverrideSalesTax</MapField>
					<MapFieldTo>OverrideSalesTax</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjItemTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124957</EntityRelationshipRole>
			<RelatedTable>ProjItemTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjTransId</Name>
					<SourceEDT>ProjItemTransId</SourceEDT>
					<Field>ProjTransId</Field>
					<RelatedField>ProjTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjProposalJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjProposalJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalJour_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProposalId</Name>
					<SourceEDT>ProjProposalId</SourceEDT>
					<Field>ProposalId</Field>
					<RelatedField>ProposalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProposalNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PSAContractLineItems</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PSAContractLineItems</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PSAContractLineNum</Name>
					<SourceEDT>PSAContractLineNum</SourceEDT>
					<Field>PSAContractLineNum</Field>
					<RelatedField>ContractLineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractLineNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124958</EntityRelationshipRole>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTable_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<SourceEDT>SalesId</SourceEDT>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupId</Name>
					<SourceEDT>ProjTaxGroup</SourceEDT>
					<Field>TaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxItemGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupId</Name>
					<SourceEDT>ProjTaxItemGroup</SourceEDT>
					<Field>TaxItemGroupId</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxServiceTariff</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TaxServiceTariff</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxServiceTariff</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>ParentRecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>ParentTableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>