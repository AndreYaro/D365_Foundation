<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoicePropertyTypeApplicabilitySetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EInvoicePropertyTypeApplicabilitySetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ttsBegin;

        if (this.isFormDataSource())
        {
            this.markTypeTableAsCustom();
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editTableName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the table id by the table name, or gets the table name by the table id.
    /// </summary>
    /// <param name="_set">
    ///    Indicates whether a new value has to be set.
    /// </param>
    /// <param name="_tableName">
    ///    A string value of the table system name which has to be converted and stored.
    /// </param>
    /// <returns>
    ///    A table name which is found by the table id.
    /// </returns>
    /// <remarks>
    ///    This is an edit method use on the <c>EInvoicePropertyTypeApplicabilitySetup</c> form.
    /// </remarks>
    public edit TableName editTableName(boolean _set, TableName _tableName)
    {
        if (_set)
        {
            this.RefTableId = tableName2id(_tableName);
        }

        return tableId2name(this.RefTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsBegin;

        if (this.isFormDataSource())
        {
            this.markTypeTableAsCustom();
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markTypeTableAsCustom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks the parent <c>EInvoicePropertyTypeTable</c> table as customized by the user.
    /// </summary>
    /// <remarks>
    /// If the <c>EInvoicePropertyTypeApplicabilitySetup</c> table is modified from the form,
    /// the parent <c>EInvoicePropertyTypeTable</c> table should be marked as custom.
    /// </remarks>
    private void markTypeTableAsCustom()
    {
        EInvoicePropertyTypeTable typeTable = EInvoicePropertyTypeTable::find(this.Type, true);

        if (typeTable)
        {
            typeTable.Custom = NoYes::Yes;
            typeTable.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableLabel</Name>
				<Source><![CDATA[
    public display TableLabel tableLabel()
    {
        return tableId2pname(this.RefTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ttsBegin;

        if (this.isFormDataSource())
        {
            this.markTypeTableAsCustom();
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static EInvoicePropertyTypeApplicabilitySetup find(RefRecId _type, RefTableId _refTableId, boolean _forUpdate = false)
    {
        EInvoicePropertyTypeApplicabilitySetup applicabilitySetup;

        if (_type && _refTableId)
        {
            if (_forUpdate)
            {
                applicabilitySetup.selectForUpdate(_forUpdate);
            }

            select firstonly applicabilitySetup
            index hint TypeRefTableIdx
            where applicabilitySetup.Type == _type
                && applicabilitySetup.RefTableId == _refTableId;
        }

        return applicabilitySetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the values that will be used for the table reference lookup.
    /// </summary>
    /// <returns>
    ///    A <c>TmpSysTableField</c> buffer holding the valid values that can be used in the lookup.
    /// </returns>
    public static TmpSysTableField initTableLookup()
    {
        TmpSysTableField        tmpSysTableField;
        Query                   query = new Query();

        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(UtilIdElements));
        queryBuildDataSource.orderMode(OrderMode::GroupBy);
        queryBuildDataSource.addSortField(fieldNum(UtilIdElements, Id));
        queryBuildDataSource.addRange(fieldNum(UtilIdElements, RecordType)).value(queryValue(UtilElementType::Table));

        QueryRun queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            UtilIdElements utilIdElements = queryRun.get(tableNum(UtilIdElements));

            tmpSysTableField.DictTableId = utilIdElements.Id;
            tmpSysTableField.TableLabel = tableId2pname(utilIdElements.Id);
            tmpSysTableField.TableName = tableId2name(utilIdElements.Id);

            tmpSysTableField.insert();
        }

        return tmpSysTableField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTableName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs lookup for reference table name.
    /// </summary>
    /// <param name="_formControl">
    ///    The form control tied to the lookup.
    /// </param>
    public static void lookupTableName(FormControl _formControl)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TmpSysTableField), _formControl);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource;

        queryBuildDataSource = query.addDataSource(tableNum(TmpSysTableField));
        queryBuildDataSource.addSortField(fieldNum(TmpSysTableField, DictTableId));

        sysTableLookup.parmQuery(query);

        sysTableLookup.addLookupfield(fieldNum(TmpSysTableField, TableName), true);
        sysTableLookup.addLookupfield(fieldNum(TmpSysTableField, DictTableId));
        sysTableLookup.setLabel("@SYS22596");
        sysTableLookup.addLookupfield(fieldNum(TmpSysTableField, TableLabel));
        sysTableLookup.setLabel("@SYS26553");

        sysTableLookup.parmTmpBuffer(EInvoicePropertyTypeApplicabilitySetup::initTableLookup());
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@AccountsReceivable:EInvoicePropertyTypeApplicabilitySetupDevDocumentation</DeveloperDocumentation>
	<TableGroup>Main</TableGroup>
	<TitleField1>Type</TitleField1>
	<TitleField2>RefTableId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>EInvoice</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Type</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeRefTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>EInvoicePropertyTypeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EInvoicePropertyTypeTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Type</Name>
					<Field>Type</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>