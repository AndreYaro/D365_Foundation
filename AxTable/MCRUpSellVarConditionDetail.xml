<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRUpSellVarConditionDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRUpSellVarConditionDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the current record is valid and ready
    /// to be written to the database.
    /// </summary>
    /// <returns>
    /// true if record is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If condition is for a table field, the field must exist on the table.
    /// Conditions cannot be for encypted fields.
    /// If variable type selected, the user must enter a variable.
    /// The method must exist on the cross reference if the method is selected.
    /// </remarks>
    public boolean validateWrite()
    {
        boolean                 ret;
        DictTable               dictTable;
        MCRUpSellVarCondition   mcrUpSellVarCondition;

        ret = super();

        //Get the condition table.
        if (ret)
        {
            mcrUpSellVarCondition = MCRUpSellVarCondition::find(this.ConditionName);
        }

        //Validate the field selected if using a field.
        if (ret && this.Tablevaluetype == MCRTableValueType::TableField)
        {
            ret = SysMetaTableMemberNameLookup::validateFieldInTable(mcrUpSellVarCondition.ConditionTable, this.ConditionField);
        }

        //Validate the method selected is on the table.
        if (ret && this.Tablevaluetype == MCRTableValueType::TableInstanceMethod)
        {
            if (!SysMetaTableMemberNameLookup::validateInstanceMethodInTable(mcrUpSellVarCondition.ConditionTable, this.ConditionField))
            {
                ret = checkFailed("@MCR27715");
            }
        }
        if (ret && this.Tablevaluetype == MCRTableValueType::TableStaticMethod)
        {
            if (!SysMetaTableMemberNameLookup::validateStaticMethodInTable(mcrUpSellVarCondition.ConditionTable, this.ConditionField))
            {
                ret = checkFailed("@MCR27715");
            }
        }

        //If the variable type is selected the value must be filled in.
        if (ret && this.ValueType == MCRUpSellValueType::Variable)
        {
            if (!this.Value)
            {
                ret = checkFailed("@MCR27691");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookUpConditionField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lists the names of all records in the <c>UtilElements</c> table.
    /// </summary>
    /// <param name="_control">
    /// The calling form control.
    /// </param>
    /// <param name="_inputStr">
    /// The input string used to determine how to filter the lookup.
    /// </param>
    /// <param name="_name">
    /// The table ID of the parent.
    /// </param>
    /// <remarks>
    /// The look up will show table fields, table instance methods or table static methods
    /// based on what the user chooses as the table type value.
    /// </remarks>
    public static void lookUpConditionField(FormStringControl _control,
                                            str _inputStr,
                                            str _name)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(UtilElements),_control);
        Query query = new Query();
        QueryBuildDataSource qbds;

        sysTableLookup.addLookupfield(fieldNum(UtilElements, Name));

        qbds = query.addDataSource(tableNum(UtilElements));

        if (_inputStr == enum2str(MCRTableValueType::TableField))
        {
            qbds.addRange(fieldNum(UtilElements, RecordType)).value(enum2str(UtilElementType::TableField));
        }
        if (_inputStr == enum2str(MCRTableValueType::TableInstanceMethod))
        {
            qbds.addRange(fieldNum(UtilElements,RecordType)).value(enum2str(UtilElementType::TableInstanceMethod));
        }
        if (_inputStr == enum2str(MCRTableValueType::TableStaticMethod))
        {
            qbds.addRange(fieldNum(UtilElements,RecordType)).value(enum2str(UtilElementType::TableStaticMethod));
        }
        qbds.addRange(fieldNum(UtilElements, ParentId)).value(int2str(tableName2id(_name)));
        qbds.orderMode(OrderMode::GroupBy);
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@MCR24201</DeveloperDocumentation>
	<Label>@MCR24201</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ConditionName</TitleField1>
	<TitleField2>ConditionTable</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConditionTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operand</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tablevaluetype</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConditionTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operand</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tablevaluetype</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS8498</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRUpSellCondition</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConditionTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TableName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Operand</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRUpSellOperand</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Tablevaluetype</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRFieldType</ExtendedDataType>
			<EnumType>MCRTableValueType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCREncryptionData</ExtendedDataType>
			<Label>@SYS11762</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValueType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRUpSellValueType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ConditionName</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ConditionName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>MCRUpSellVarCondition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRUpSellVarCondition</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConditionName</Name>
					<SourceEDT>MCRUpSellCondition</SourceEDT>
					<Field>ConditionName</Field>
					<RelatedField>ConditionName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRUpSellVarSys</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>MCRUpSellVarSys</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Value</Name>
					<Field>Value</Field>
					<RelatedField>VariableName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ValueType</Name>
					<Field>ValueType</Field>
					<ValueStr>MCRUpSellValueType::Variable</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>