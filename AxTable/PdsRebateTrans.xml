<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsRebateTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsRebateTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tamDisplayCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the currency code for the related rebate table record.
    /// </summary>
    /// <returns>
    /// The currency code for the related rebate table record.
    /// </returns>
    public display CurrencyCode tamDisplayCurrencyCode()
    {
        PdsRebateTable  pdsRebateTable;

        pdsRebateTable = PdsRebateTable::find(this.PdsRebateId);

        return pdsRebateTable.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tamDisplayCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customer account number of the related rebate table record.
    /// </summary>
    /// <returns>
    /// The customer account number of the related rebate table record.
    /// </returns>
    public display CustAccount tamDisplayCustAccount()
    {
        PdsRebateTable  pdsRebateTable;

        pdsRebateTable = PdsRebateTable::find(this.PdsRebateId);

        return pdsRebateTable.CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tamDisplayProcessDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the process date of the related rebate table record.
    /// </summary>
    /// <returns>
    /// The process date of the related rebate table record.
    /// </returns>
    public display PdsProcessDate tamDisplayProcessDate()
    {
        PdsRebateTable  pdsRebateTable;

        pdsRebateTable = PdsRebateTable::find(this.PdsRebateId);

        return pdsRebateTable.PdsProcessDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(recId _recId)
    {
        return (select pdsRebateTrans
                where pdsRebateTrans.RecId == _recId
            ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsRebateTrans find(RecId _recId, boolean _forUpdate = false)
    {
        PdsRebateTrans pdsRebateTrans;

        pdsRebateTrans.selectForUpdate(_forUpdate);

        select firstonly pdsRebateTrans
            where pdsRebateTrans.RecId == _recId;

        return pdsRebateTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRebateIdAndTransactionType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the rebate transaction by the specified parameters.
    /// </summary>
    /// <param name="_rebateId">
    ///     The ID of the rebate to search for.
    /// </param>
    /// <param name="_transactionType">
    ///     The type of transaction to search for.
    /// </param>
    /// <param name="_forUpdate">
    ///     A boolean value indicating whether to select the record for update.
    /// </param>
    /// <returns>
    ///     The found record of the <c>PdsRebateTrans</c> table.
    /// </returns>
    public static PdsRebateTrans findByRebateIdAndTransactionType(
        PdsRebateId             _rebateId,
        PdsRebateTransaction    _transactionType,
        boolean                 _forUpdate = false)
    {
        PdsRebateTrans pdsRebateTrans;

        pdsRebateTrans.selectForUpdate(_forUpdate);

        select firstonly pdsRebateTrans
            where   pdsRebateTrans.PdsRebateId          == _rebateId
            &&      pdsRebateTrans.PdsRebateTransaction == _transactionType;

        return pdsRebateTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromPdsRebateTable</Name>
				<Source><![CDATA[
    public static void insertFromPdsRebateTable(
        PdsRebateTable          _pdsRebateTable,
        PdsRebateTransaction    _pdsRebateTransaction = PdsRebateTransaction::LedgerJournalProcessing,
        PdsRebateAmt            _pdsRebateAmount = 0,
        LedgerJournalId         _ledgerJournalId = '')
    {
        PdsRebateTrans  pdsRebateTrans;
        CurrencyCode    ledgerCurrency;

        if (_pdsRebateTable && _pdsRebateAmount)
        {
            ledgerCurrency = Ledger::accountingCurrencyByLedger(Ledger::current());

            ttsBegin;

            pdsRebateTrans.PdsRebateId = _pdsRebateTable.PdsRebateId;
            pdsRebateTrans.PdsRebateTransaction = _pdsRebateTransaction;

            if (ledgerCurrency != _pdsRebateTable.CurrencyCode)
            {
                pdsRebateTrans.PdsRebateAmt = CurrencyExchangeHelper::amountCur2MST(_pdsRebateAmount, _pdsRebateTable.CurrencyCode);
            }
            else
            {
                pdsRebateTrans.PdsRebateAmt = _pdsRebateAmount;
            }

            if (_ledgerJournalId)
            {
                pdsRebateTrans.LedgerJournalId = _ledgerJournalId;
            }

            pdsRebateTrans.insert();

            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsRebate</ConfigurationKey>
	<DeveloperDocumentation>@PDS1098</DeveloperDocumentation>
	<FormRef>PdsRebateTrans</FormRef>
	<Label>@PDS1052</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PdsRebateId</TitleField1>
	<TitleField2>PdsRebateTransaction</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateTransaction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateTransaction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsRebateAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerJournalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsRebateAmt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateAmt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsRebateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsRebateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsRebateTransaction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@PRO1465</Label>
			<EnumType>PdsRebateTransaction</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PdsRebateTransactionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PdsRebateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsRebateTransaction</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalId</Name>
					<SourceEDT>LedgerJournalId</SourceEDT>
					<Field>LedgerJournalId</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsRebateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PdsRebateTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsRebateId</Name>
					<Field>PdsRebateId</Field>
					<RelatedField>PdsRebateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>