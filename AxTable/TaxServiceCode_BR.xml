<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxServiceCode_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxServiceCode_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies if country, state and city are filled in when it is a service code by location.
    /// </summary>
    /// <returns>True in case of any company service code or when it is a service code by location and location fields are filled in; otherwise, false.</returns>
    public boolean checkFields()
    {
        if ((this.ParentServiceCode != "") && ((this.City == "") || (this.StateId == "") || (this.CountryId == "")))
        {
            return checkFailed("@Brazil:FieldValidationChildTaxServiceCode");
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCityForSameParent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a service code cannot be related to the same city for the same company service code.
    /// </summary>
    /// <returns>
    /// True if the rule is correctly applied; otherwise, false.
    /// </returns>
    public boolean checkCityForSameParent()
    {
        TaxServiceCode_BR   taxServiceCode;
        boolean             ret = true;

        select firstOnly RecId from taxServiceCode
            where   taxServiceCode.ParentServiceCode    == this.ParentServiceCode &&
                    taxServiceCode.CountryId            == this.CountryId &&
                    taxServiceCode.StateId              == this.StateId &&
                    taxServiceCode.City                 == this.City &&
                    taxServiceCode.RecId                != this.RecId &&
                    taxServiceCode.ParentServiceCode    != '';

        if (taxServiceCode)
        {
            ret = checkFailed(strFmt("@GLS60419", this.City, this.ParentServiceCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkServCodeForSameCityAndOtherParent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a service code cannot be repeated for another company service code.
    /// </summary>
    /// <returns>
    /// True if the rule is correctly applied; otherwise, false.
    /// </returns>
    public boolean checkServCodeForSameCityAndOtherParent()
    {
        TaxServiceCode_BR   localTaxServiceCode;
        boolean             ret = true;

        select firstOnly ParentServiceCode from localTaxServiceCode
            where localTaxServiceCode.ServiceCodeId     == this.ServiceCodeId &&
                  localTaxServiceCode.CountryId         == this.CountryId &&
                  localTaxServiceCode.StateId           == this.StateId &&
                  localTaxServiceCode.City              == this.City &&
                  localTaxServiceCode.ParentServiceCode != this.ParentServiceCode;

        if (localTaxServiceCode.ParentServiceCode)
        {
            ret = checkFailed(strfmt("@GLS60419", this.City, localTaxServiceCode.ParentServiceCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        TaxServiceCode_BR childServiceCode;

        super();

        if (!this.ParentServiceCode)
        {
            ttsbegin;

            delete_from childServiceCode
                where childServiceCode.ParentServiceCode == this.ServiceCodeId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        TaxServiceCode_BR   taxServiceCode;
        boolean ret;

        ret = super();

        if (this.ParentServiceCode == '')
        {
            select count(RecId) from taxServiceCode
                where taxServiceCode.ParentServiceCode == this.ServiceCodeId;

            if (taxServiceCode.RecId > 0)
            {
                ret = checkFailed(strFmt("@SYS128564", tableId2pname(tableNum(TaxServiceCode_BR)), "@SYS50258"));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.checkCityForSameParent() && ret;

        ret = this.checkServCodeForSameCityAndOtherParent() && ret;

        ret = this.checkFields() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxServiceCode_BR find(TaxServiceCodeId_BR       _serviceCodeId,
                                         boolean                   _forUpdate=false)
    {
        TaxServiceCode_BR serviceCode;

        serviceCode.selectForUpdate(_forUpdate);

        select serviceCode
            where serviceCode.ServiceCodeId == _serviceCodeId;

        return serviceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCompanyServiceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the company service code by its id.
    /// </summary>
    /// <param name = "_serviceCodeId">Service code id</param>
    /// <param name = "_forUpdate">True if the record should be selected for update; false, otherwise</param>
    /// <returns>The service code record that is related to the service code id</returns>
    public static TaxServiceCode_BR findCompanyServiceCode(TaxServiceCodeId_BR _serviceCodeId, boolean _forUpdate=false)
    {
        TaxServiceCode_BR serviceCode;

        serviceCode.selectForUpdate(_forUpdate);

        select serviceCode
            where serviceCode.ServiceCodeId     == _serviceCodeId &&
                  serviceCode.CountryId         == '' &&
                  serviceCode.StateId           == '' &&
                  serviceCode.City              == '';

        return serviceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDlvServiceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the child Service Code record related to specific city
    /// </summary>
    /// <param name="_parentServiceCodeId">Parent Service Code</param>
    /// <param name="_countryId">Country code</param>
    /// <param name="_stateId">State code</param>
    /// <param name="_city">City code</param>
    /// <param name="_forUpdate">True if the selected record should be available for update; false, otherwise.</param>
    /// <returns>The TaxServiceCode_BR record that matches the search criteria.</returns>
    public static TaxServiceCode_BR findDlvServiceCode(TaxServiceCodeId_BR       _parentServiceCodeId,
                                                       AddressCountryRegionId    _countryId,
                                                       AddressStateId            _stateId,
                                                       AddressCity               _city,
                                                       boolean                   _forUpdate=false)
    {
        TaxServiceCode_BR serviceCode;

        serviceCode.selectForUpdate(_forUpdate);

        select serviceCode
            where serviceCode.ParentServiceCode == _parentServiceCodeId &&
                  serviceCode.CountryId         == _countryId &&
                  serviceCode.StateId           == _stateId &&
                  serviceCode.City              == _city;

        return serviceCode ? serviceCode : TaxServiceCode_BR::findCompanyServiceCode(_parentServiceCodeId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findServiceCodeByDlvAddres</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Service Code record related to specific city.
    /// </summary>
    /// <param name="_serviceCodeId">Service Code id</param>
    /// <param name="_countryId">Country code</param>
    /// <param name="_stateId">State code</param>
    /// <param name="_city">City code</param>
    /// <param name="_forUpdate">True if the selected record should be available for update; false, otherwise.</param>
    /// <returns>The TaxServiceCode_BR record that matches the search criteria.</returns>
    public static TaxServiceCode_BR findServiceCodeByDlvAddres(TaxServiceCodeId_BR       _serviceCodeId,
                                                               AddressCountryRegionId    _countryId,
                                                               AddressStateId            _stateId,
                                                               AddressCity               _city,
                                                               boolean                   _forUpdate=false)
    {
        TaxServiceCode_BR serviceCode;

        serviceCode.selectForUpdate(_forUpdate);

        select serviceCode
            where serviceCode.ServiceCodeId     == _serviceCodeId &&
                  serviceCode.CountryId         == _countryId &&
                  serviceCode.StateId           == _stateId &&
                  serviceCode.City              == _city;

        return serviceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a tax service code lookup.
    /// </summary>
    /// <param name = "_formControl">Form control</param>
    /// <param name = "serviceCodeOnDlvAddress">Indicates if the service code should be related to the delivery address</param>
    /// <param name = "_countryId">Country Id</param>
    /// <param name = "_stateId">State Id</param>
    /// <param name = "_city">City</param>
    public static void lookup(FormControl _formControl, TaxServiceCodeOnDlvAddress_BR serviceCodeOnDlvAddress, AddressCountryRegionId _countryId, AddressStateId _stateId, AddressCity _city)
    {
        Query                   query = new Query();
        SysTableLookup          sysTableLookup;
        QueryBuildDataSource    queryBuildDataSource;
        ;

        sysTableLookup = SysTableLookup::newParameters(tablenum(TaxServiceCode_BR), _formControl);
        sysTableLookup.addLookupfield(fieldnum(TaxServiceCode_BR, ServiceCodeId), true);
        sysTableLookup.addLookupfield(fieldnum(TaxServiceCode_BR, Name));

        queryBuildDataSource = query.addDataSource(tablenum(TaxServiceCode_BR));

        if (!serviceCodeOnDlvAddress)
        {
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, ParentServiceCode)).value(SysQuery::valueEmptyString());
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, CountryId)).value(SysQuery::valueEmptyString());
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, StateId)).value(SysQuery::valueEmptyString());
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, City)).value(SysQuery::valueEmptyString());
        }
        else
        {
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, ParentServiceCode)).value(SysQuery::valueNotEmptyString());
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, CountryId)).value(_countryId);
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, StateId)).value(_stateId);
            queryBuildDataSource.addRange(fieldnum(TaxServiceCode_BR, City)).value(_city);
        }

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>serviceCode_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the TaxServiceCode based on Delivery Address from Transacion (or City)
    /// </summary>
    /// <param name="_transactionType">The commn that represents SalesLine, PurchaseLine or CusInvoiceTable</param>
    /// <returns>Returns the service code record.</returns>
    public static TaxServiceCode_BR serviceCode_BR(Common _transactionType)
    {
        TaxServiceCodeOnDlvAddress_BR   serviceCodeOnDlvAddress;

        SalesLine                       salesLine;
        PurchLine                       purchLine;
        CustInvoiceTable                custInvoiceTable;

        LogisticsPostalAddress          logisticsPostalAddress;
        TaxServiceCodeId_BR             serviceCode;

        switch (_transactionType.TableId)
        {
            case tablenum(SalesLine) :
                salesLine = _transactionType;

                serviceCode = InventTable::find(salesLine.ItemId).TaxServiceCode_BR;
                logisticsPostalAddress = LogisticsPostalAddress::findRecId(salesLine.DeliveryPostalAddress);

                serviceCodeOnDlvAddress = salesLine.salesTable().salesTable_BR().ServiceCodeOnDlvAddress_BR;
                break;

            case tablenum(PurchLine) :
                purchLine = _transactionType;

                serviceCode = InventTable::find(purchLine.ItemId).TaxServiceCode_BR;
                logisticsPostalAddress = LogisticsPostalAddress::findRecId(purchLine.DeliveryPostalAddress);
                serviceCodeOnDlvAddress = purchLine.purchTable().purchTable_BR().ServiceCodeOnDlvAddress_BR;
                break;

            case tablenum(CustInvoiceTable) :
                custInvoiceTable = _transactionType;

                serviceCode = InventTable::find(BrazilParameters::find().FreeTextInvoiceServiceItemId).TaxServiceCode_BR;
                logisticsPostalAddress = LogisticsPostalAddress::findRecId(custInvoiceTable.PostalAddress);
                serviceCodeOnDlvAddress = custInvoiceTable.ServiceCodeOnDlvAddress_BR;
                break;
        }

        if (serviceCodeOnDlvAddress)
        {
            return TaxServiceCode_BR::findDlvServiceCode(serviceCode,
                                                        logisticsPostalAddress.CountryRegionId,
                                                        logisticsPostalAddress.State,
                                                        logisticsPostalAddress.City);
        }

        return TaxServiceCode_BR::findCompanyServiceCode(serviceCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63467</DeveloperDocumentation>
	<Label>@GLS60328</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ServiceCodeId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ServiceCodeIdx</ClusteredIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ServiceCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS41042</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Parent</Name>
			<Label>@GLS60428</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentServiceCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceType</Name>
			<Label>@SpedReinf_AS:ServiceType</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>City</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCityName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@GLS60427</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentServiceCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxServiceCodeId_BR</ExtendedDataType>
			<Label>@GLS60428</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceCodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxServiceCodeId_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ServiceType</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SpedReinf_AS:ServiceType</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IncomeCode</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@SpedReinf_AS:IncomeClassificationId</HelpText>
			<Label>@SpedReinf_AS:IncomeClassificationId</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ServiceCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParentServiceCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CountryId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>City</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ServiceCodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LogisticsAddressCityName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCity</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCity</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxServiceCode_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<Field>CountryId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StateId</Name>
					<Field>StateId</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>City</Name>
					<Field>City</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxServiceCode_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<SourceEDT>LogisticsAddressCountryRegionId</SourceEDT>
					<Field>CountryId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressStateId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressState</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxServiceCode_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<Field>CountryId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StateId</Name>
					<Field>StateId</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ParentRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxServiceCode_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ParentServiceCode</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>TaxServiceCode_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentServiceCode</Name>
					<Field>ParentServiceCode</Field>
					<RelatedField>ServiceCodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxServiceType_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>TaxServiceType_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceType</Name>
					<Field>ServiceType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IncomeClassification_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>IncomeClassification_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IncomeCode</Name>
					<Field>IncomeCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>