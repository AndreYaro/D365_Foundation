<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjIntercompanyParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjIntercompanyParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canAccrueRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether we should accrue revenue for an intercompany transaction with a given
    /// legal entity ID.
    /// </summary>
    /// <param name="_borrowingLegalEntity">
    /// The RecID of the legal entity to be checked.
    /// </param>
    /// <returns>
    /// true if we can accrue revenue for the given company; false otherwise.
    /// </returns>
    public static boolean canAccrueRevenue(LegalEntityRecId _borrowingLegalEntity)
    {
        ProjIntercompanyParameters  param;
        CompanyInfo                 companyInfo;

        select firstOnly WIPRevenue from param
            exists join companyInfo
            where companyInfo.DataArea == param.BorrowingLegalEntity &&
                  companyinfo.RecId    == _borrowingLegalEntity;

        return param.WIPRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the table.
    /// </summary>
    /// <param name="_borrowingLegalEntity">
    /// The ID of the legal entity borrowing resources.
    /// </param>
    /// <param name="_forUpdate">
    /// Whether the record will be updated; optional.
    /// </param>
    /// <returns>
    /// A <c>ProjIntercompanyParameters</c> record for the given borrowing entity.
    /// </returns>
    public static ProjIntercompanyParameters find (CompanyId _borrowingLegalEntity, boolean _forUpdate = false)
    {
        ProjIntercompanyParameters  params;

        params.selectForUpdate(_forUpdate);
        select firstOnly params
            where params.BorrowingLegalEntity == _borrowingLegalEntity;

        return params;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a valid project category to be used in the lending company.
    /// </summary>
    /// <param name="_borrowingEntityCategory">
    /// The category ID from the borrowing legal entity set in intercompany transaction.
    /// </param>
    /// <param name="_borrowingEntityId">
    /// The ID of the borrowing legal entity.
    /// </param>
    /// <param name="_transType">
    /// The <c>ProjTransType</c> value of the transaction related to the category.
    /// </param>
    /// <returns>
    /// A category ID to be used by the lending company.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Invalid project transaction type was given.
    /// </exception>
    public static ProjCategoryId getValidCategory(ProjCategoryId _borrowingEntityCategory,
                                                  CompanyId      _borrowingEntityId,
                                                  ProjTransType  _transType)
    {
        ProjIntercompanyParameters  params;
        ProjCategoryId              categoryId;
        if (ProjCategory::exist(_borrowingEntityCategory))
        {
            categoryId = _borrowingEntityCategory;
        }
        else
        {
            select params
                where params.BorrowingLegalEntity == _borrowingEntityId;

            switch (_transType)
            {
                case ProjTransType::Hour:
                    categoryId = params.DefaultTimesheetProjCategory;
                    break;

                case ProjTransType::Cost:
                    categoryId = params.DefaultExpenseProjCategory;
                    break;

                default:
                    throw error(error::wrongUseOfFunction(funcName()));
            }
        }

        return categoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBorrowingLegalEntitiesContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves all borrowing legal entities added in a container format.
    /// </summary>
    public static container getBorrowingLegalEntitiesContainer()
    {
        List borrowingLegalEntitieslist = new List(Types::String);

        ProjIntercompanyParameters projInterCompanyParameters;

        while select BorrowingLegalEntity from projInterCompanyParameters
        {
            borrowingLegalEntitieslist.addEnd(projInterCompanyParameters.BorrowingLegalEntity);
        }

        return Global::list2Con(borrowingLegalEntitieslist);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDataAreaIdAndBorrowingLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>ProjIntercompanyParameters</c> table which matches the borrowing entity and the data area ID.
    /// </summary>
    /// <param name="_dataAreaId">
    /// The data area ID of the entity.
    /// </param>
    /// <param name="_borrowingEntity">
    /// The ID of the borrowing legal entity.
    /// </param>
    /// <param name="_forUpdate">
    /// Whether the record will be updated; optional.
    /// </param>
    /// <returns>
    /// A <c>ProjIntercompanyParameters</c> record for the given borrowing entity and the data area ID.
    /// </returns>
    public static ProjIntercompanyParameters findByDataAreaIdAndBorrowingLegalEntity(
        CompanyId _dataAreaId,
        CompanyId _borrowingEntity,
        boolean _forupdate = false)
    {
        ProjIntercompanyParameters projIntercompanyParameters;

        projIntercompanyParameters.selectForUpdate(_forupdate);

        if (_dataAreaId && _borrowingEntity)
        {
            select firstonly projIntercompanyParameters
                where projIntercompanyParameters.BorrowingLegalEntity == _borrowingEntity &&
                    projIntercompanyParameters.DataAreaId == _dataAreaId;
        }

        return projIntercompanyParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        if (ret)
        {
            boolean projOpsEnabledInCurLE = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();
            boolean projOpsEnabledInBorrLE = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(this.BorrowingLegalEntity);
        
            if ((projOpsEnabledInCurLE && !projOpsEnabledInBorrLE) || (!projOpsEnabledInCurLE && projOpsEnabledInBorrLE))
            {
                ret = checkFailed("@Proj:ProjOpsIncompatibleLEsForIntercompany");
            }
        }
        
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS4005060</DeveloperDocumentation>
	<Label>@SYS4005059</Label>
	<TitleField1>BorrowingLegalEntity</TitleField1>
	<TitleField2>WIPRevenue</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BorrowingLegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WIPRevenue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultTimesheetProjCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultExpenseProjCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SetupFields</Name>
			<Label>@SYS104250</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BorrowingLegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WIPRevenue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultTimesheetProjCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultExpenseProjCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BorrowingLegalEntity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Label>@FPK270095</Label>
			<Mandatory>Yes</Mandatory>
			<RelationContext>Intercompany</RelationContext>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultExpenseProjCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS4005061</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultTimesheetProjCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS4005062</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WIPRevenue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS105002</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BorrowingLE</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BorrowingLegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Intercompany</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LedgerInterCompany</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BorrowingLegalEntity</Name>
					<Field>BorrowingLegalEntity</Field>
					<RelatedField>DestinationCompany</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>dataAreaId</Name>
					<Field>dataAreaId</Field>
					<RelatedField>OriginatingCompany</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CompanyIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategoryExpense</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ExpenseCateogry</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CategoryType_Extern</Name>
					<RelatedField>CategoryType</RelatedField>
					<ValueStr>ProjCategoryType::Cost</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultExpenseProjCategory</Name>
					<Field>DefaultExpenseProjCategory</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategoryTimesheet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TimesheetCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CategoryType_Extern</Name>
					<RelatedField>CategoryType</RelatedField>
					<ValueStr>ProjCategoryType::Hour</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultTimesheetProjCategory</Name>
					<Field>DefaultTimesheetProjCategory</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>