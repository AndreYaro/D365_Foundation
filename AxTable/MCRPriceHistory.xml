<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPriceHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRPriceHistory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>equal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the current record is equivalent to <paramref name="_common"/>.
    /// </summary>
    /// <param name="_common">
    /// The <c>Common</c> to compare to the current record.
    /// </param>
    /// <returns>
    /// true if the records are equivalent; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If it is not appropriate to compare the price history to <paramref name="_common"/>
    /// the return value will be false.
    /// </remarks>
    public boolean equal(Common _common)
    {
        InventTableModule       inventTableModule;
        PriceDiscTable          priceDiscTable;
        TAMMerchEventPricing    tamMerchEventPricing;
        boolean                 equal;

        if (_common.RecId)
        {
            switch (_common.TableId)
            {
                case tableNum(PriceDiscTable)       :
                    priceDiscTable = _common as PriceDiscTable;
                    equal = this.equalPriceDiscTable(priceDiscTable);
                    break;
                case tableNum(InventTableModule)    :
                    inventTableModule = _common as InventTableModule;
                    equal = this.equalInventTableModule(inventTableModule);
                    break;
                case tableNum(TAMMerchEventPricing) :
                    tamMerchEventPricing = _common as TAMMerchEventPricing;
                    equal = this.equalTAMMerchEventPricing(tamMerchEventPricing);
                    break;
            }
        }
        return equal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>equalInventTableModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the current record is equivalent to <paramref name="_inventTableModule"/>.
    /// </summary>
    /// <param name="_inventTableModule">
    /// The <c>InventTableModule</c> record to use to compare.
    /// </param>
    /// <returns>
    /// true if records are equivalent; otherwise, false.
    /// </returns>
    private boolean equalInventTableModule(InventTableModule _inventTableModule)
    {
        boolean equal = false;

        if (this.RefTableId             == _inventTableModule.TableId
            && this.RefRecId            == _inventTableModule.RecId
            && this.PriceHistoryType    == MCRPriceHistoryType::ItemPrice
            && this.ItemRelation        == _inventTableModule.ItemId
            && this.Amount              == _inventTableModule.Price
            && this.Markup              == _inventTableModule.Markup
            && this.PriceUnit           == _inventTableModule.PriceUnit
            && this.UnitId              == _inventTableModule.UnitId
            && this.AllocateMarkup      == _inventTableModule.AllocateMarkup
            && this.PriceQty            == _inventTableModule.PriceQty
            && this.ModuleType          == _inventTableModule.ModuleType
            && this.Currency            == Ledger::accountingCurrency(CompanyInfo::current()))
        {
            equal = true;
        }
        return equal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>equalPriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the current record is equivalent to <paramref name="_priceDiscTable"/>.
    /// </summary>
    /// <param name="_priceDiscTable">
    /// The <c>PriceDiscTable</c> record to use to compare.
    /// </param>
    /// <returns>
    /// true if records are equivalent; otherwise, false.
    /// </returns>
    private boolean equalPriceDiscTable(PriceDiscTable _priceDiscTable)
    {
        boolean equal = false;

        if (this.RefTableId                   == _priceDiscTable.TableId
            && this.RefRecId                  == _priceDiscTable.RecId
            && this.ItemCode                  == _priceDiscTable.ItemCode
            && this.AccountCode               == _priceDiscTable.AccountCode
            && this.ItemRelation              == _priceDiscTable.ItemRelation
            && this.AccountRelation           == _priceDiscTable.AccountRelation
            && this.QuantityAmount            == _priceDiscTable.QuantityAmountFrom
            && this.FromDate                  == _priceDiscTable.FromDate
            && this.Amount                    == _priceDiscTable.Amount
            && this.Currency                  == _priceDiscTable.Currency
            && this.Percent1                  == _priceDiscTable.Percent1
            && this.Percent2                  == _priceDiscTable.Percent2
            && this.PriceUnit                 == _priceDiscTable.PriceUnit
            && this.Relation                  == _priceDiscTable.Relation
            && this.UnitId                    == _priceDiscTable.UnitId
            && this.Markup                    == _priceDiscTable.Markup
            && this.AllocateMarkup            == _priceDiscTable.AllocateMarkup
            && this.Module                    == _priceDiscTable.Module
            && this.InventDimId               == _priceDiscTable.InventDimId)
        {
            equal = true;
        }
        return equal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>equalTAMMerchEventPricing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the current record is equivalent to <paramref name="_tamMerchEventPricing"/>.
    /// </summary>
    /// <param name="_tamMerchEventPricing">
    /// The <c>TAMMerchEventPricing</c> record to use to compare.
    /// </param>
    /// <returns>
    /// true if records are equivalent; otherwise, false.
    /// </returns>
    private boolean equalTAMMerchEventPricing(TAMMerchEventPricing _tamMerchEventPricing)
    {
        boolean equal = false;

        if (this.RefTableId              == _tamMerchEventPricing.TableId
            && this.RefRecId             == _tamMerchEventPricing.RecId
            && this.MerchandisingEventID == _tamMerchEventPricing.MerchandisingEventID
            && this.PriceHistoryType     == MCRPriceHistoryType::LineDisc
            && this.AccountRelation      == _tamMerchEventPricing.CustInvoiceAccount
            && this.QuantityAmount       == _tamMerchEventPricing.Quantity
            && this.QuantityAmountTo     == _tamMerchEventPricing.QuantityTo
            && this.Amount               == _tamMerchEventPricing.DiscountAmt
            && this.Percent1             == _tamMerchEventPricing.DiscountPercent
            && this.Module               == ModuleInventCustVend::Cust)
        {
            equal = true;
        }
        return equal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current record from <paramref name="_common"/>.
    /// </summary>
    /// <param name="_common">
    /// The <c>Common</c> record from which to initialize.
    /// </param>
    /// <remarks>
    /// A <c>MCRPriceHistory</c> record can currently store the values of a
    /// <c>PriceDiscTable</c>, <c>InventTableModule</c>, or
    /// <c>TAMMerchEventPricing</c> record.
    /// </remarks>
    void initFrom(Common _common)
    {
        InventTableModule       inventTableModule;
        PriceDiscTable          priceDiscTable;
        TAMMerchEventPricing    tamMerchEventPricing;

        switch (_common.TableId)
        {
            case tableNum(PriceDiscTable)       :
                priceDiscTable = _common as PriceDiscTable;
                this.initFromPriceDiscTable(priceDiscTable);
                break;
            case tableNum(InventTableModule)    :
                inventTableModule = _common as InventTableModule;
                this.initFromInventTableModule(inventTableModule);
                break;
            case tableNum(TAMMerchEventPricing) :
                tamMerchEventPricing = _common as TAMMerchEventPricing;
                this.initFromMerchEventPricing(tamMerchEventPricing);
                break;
            default:
                throw error(strFmt("@SYS19306", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTableModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes current record from an <c>InventTableModule</c> record.
    /// </summary>
    /// <param name="_inventTableModule">
    /// The <c>InventTableModule</c> record from which to initialize.
    /// </param>
    /// <remarks>
    /// Should not need to call directly.  Use <c>MCRPriceHistoryUpdate</c>to update history.
    ///
    /// When <c>MCRPriceHistory</c> refers to an <c>InventTableModule</c> record, the
    /// following fields are dual purpose:
    ///    <list type="bullet">
    ///       <item>
    ///          <description>The <c>Price</c> value is stored in the <c>MCRPriceHistory</c> <c>Amount</c> field.</description>
    ///       </item>
    ///       <item>
    ///          <description>The <c>ItemId</c> value is stored in the <c>MCRPriceHistory</c> <c>ItemRelation</c> field.</description>
    ///       </item>
    ///    </list>
    ///
    /// When <c>MCRPriceHistory</c> refers to a version of <c>InventTableModule</c>, these
    /// are unique fields only relevant for <c>InventTableModule</c>:
    ///    <list type="bullet">
    ///       <item>
    ///          <description><c>PriceQty</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>ModuleType</c></description>
    ///       </item>
    ///    </list>
    ///
    /// When <c>MCRPriceHistory</c> refers to a version of <c>InventTableModule</c>, the
    /// following fields are not used:
    ///    <list type="bullet">
    ///       <item>
    ///          <description><c>ItemCode</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>AccountCode</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>AccountRelation</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>QuantityAmount</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>FromDate</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Percent1</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Percent2</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Relation</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Module</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>InventDimId</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>PriceDiscGroupType</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>MerchandisingEventID</c></description>
    ///       </item>
    ///    </list>
    /// </remarks>
    void initFromInventTableModule(InventTableModule _inventTableModule)
    {
        this.RefTableId             = _inventTableModule.TableId;
        this.RefRecId               = _inventTableModule.RecId;
        this.PriceHistoryType       = MCRPriceHistoryType::ItemPrice;
        this.ItemRelation           = _inventTableModule.ItemId;
        this.Amount                 = _inventTableModule.Price;

        // Store company currency.  Item purch/sales/invent price/cost not stored
        // with currency code (in company currency).  Saving provides an record of company currency
        // at time of price history.
        this.Currency              = Ledger::accountingCurrency(CompanyInfo::current());

        this.PriceUnit             = _inventTableModule.PriceUnit;
        this.UnitId                = _inventTableModule.UnitId;
        this.Markup                = _inventTableModule.Markup;
        this.AllocateMarkup        = _inventTableModule.AllocateMarkup;
        this.PriceQty              = _inventTableModule.PriceQty;
        this.ModuleType            = _inventTableModule.ModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromMerchEventPricing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes current record from a <c>TAMMerchEventPricing</c> record.
    /// </summary>
    /// <param name="_tamMerchEventPricing">
    /// The <c>TAMMerchEventPricing</c> record from which to initialize.
    /// </param>
    void initFromMerchEventPricing(TAMMerchEventPricing _tamMerchEventPricing)
    {
        this.RefTableId             = _tamMerchEventPricing.TableId;
        this.RefRecId               = _tamMerchEventPricing.RecId;
        this.MerchandisingEventID   = _tamMerchEventPricing.MerchandisingEventID;
        this.AccountRelation        = _tamMerchEventPricing.CustInvoiceAccount;
        this.QuantityAmount         = _tamMerchEventPricing.Quantity;
        this.QuantityAmountTo       = _tamMerchEventPricing.QuantityTo;
        this.Amount                 = _tamMerchEventPricing.DiscountAmt;
        this.Percent1               = _tamMerchEventPricing.DiscountPercent;
        this.PriceHistoryType       = MCRPriceHistoryType::LineDisc;
        this.Currency               = CompanyInfoHelper::standardCurrency();
        this.Module                 = ModuleInventCustVend::Cust;
        this.AccountCode            = PriceDiscPartyCodeType::Table;
        this.ItemCode               = PriceDiscProductCodeType::Table;
        this.Relation               = PriceType::LineDiscSales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes current record from a <c>PriceDiscTable</c> record.
    /// </summary>
    /// <param name="_priceDiscTable">
    /// The <c>PriceDiscTable</c> record from which to initialize.
    /// </param>
    /// <remarks>
    /// Should not need to call directly.  Use <c>MCRPriceHistoryUpdate</c>to update history.
    ///
    /// When <c>MCRPriceHistory</c> refers to a version of <c>PriceDiscTable</c>, these
    /// are unique fields only relevant for <c>PriceDiscTable</c>:
    ///    <list type="bullet">
    ///       <item>
    ///          <description><c>ItemCode</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>AccountCode</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>AccountRelation</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>QuantityAmount</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>FromDate</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Percent1</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Percent2</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Relation</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>Module</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>InventDimId</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>AllocateMarkup</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>PriceDiscGroupType</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>MerchandisingEventID</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>QuantityAmountTo</c></description>
    ///       </item>
    ///    </list>
    ///
    /// When <c>MCRPriceHistory</c> refers to a version of <c>PriceDiscTable</c>, the
    /// following fields are not used:
    ///    <list type="bullet">
    ///       <item>
    ///          <description><c>PriceQty</c></description>
    ///       </item>
    ///       <item>
    ///          <description><c>ModuleType</c></description>
    ///       </item>
    ///    </list>
    /// </remarks>
    void initFromPriceDiscTable(PriceDiscTable _priceDiscTable)
    {
        this.RefTableId             = _priceDiscTable.TableId;
        this.RefRecId               = _priceDiscTable.RecId;
        this.PriceHistoryType       = MCRPriceHistory::priceType2MCRPriceHistoryType(_priceDiscTable.Relation);
        this.ItemCode               = _priceDiscTable.ItemCode;
        this.AccountCode            = _priceDiscTable.AccountCode;
        this.ItemRelation           = _priceDiscTable.ItemRelation;
        this.AccountRelation        = _priceDiscTable.AccountRelation;
        this.QuantityAmount         = _priceDiscTable.QuantityAmountFrom;
        this.FromDate               = _priceDiscTable.FromDate;
        this.Amount                 = _priceDiscTable.Amount;
        this.Currency               = _priceDiscTable.Currency;
        this.Percent1               = _priceDiscTable.Percent1;
        this.Percent2               = _priceDiscTable.Percent2;
        this.PriceUnit              = _priceDiscTable.PriceUnit;
        this.Relation               = _priceDiscTable.Relation;
        this.UnitId                 = _priceDiscTable.UnitId;
        this.Markup                 = _priceDiscTable.Markup;
        this.AllocateMarkup         = _priceDiscTable.AllocateMarkup;
        this.Module                 = _priceDiscTable.Module;
        this.InventDimId            = _priceDiscTable.InventDimId;
        this.QuantityAmountTo       = _priceDiscTable.QuantityAmountTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the markup.
    /// </summary>
    /// <returns>
    /// The markup of the price.
    /// </returns>
    /// <remarks>
    /// Only appropriate for history records that refer to item price and price trade agreements.
    /// </remarks>
    PriceMarkup markup()
    {
        if (this.AllocateMarkup)
        {
            return 0;
        }

        return this.Markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>price</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the price of <c>MCRPriceHistory</c>.
    /// </summary>
    /// <returns>
    /// The price.
    /// </returns>
    /// <remarks>
    /// Only appropriate for history records that refer to item price and price trade agreements.
    ///
    /// Should call this method instead of accessing field directly.
    ///
    /// This method should be functionally identical to the <c>PriceDiscTable</c> and
    /// <c>InventTableModule</c> methods of the same name.
    /// </remarks>
    AmountCur price()
    {
        if (this.AllocateMarkup)
        {
            return CurrencyExchangeHelper::price((this.priceQty() * this.Amount + this.Markup * this.priceUnit()) / this.priceQty(), this.Currency);
        }

        return this.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the price quantity of <c>MCRPriceHistory</c>.
    /// </summary>
    /// <returns>
    /// The price quantity.
    /// </returns>
    /// <remarks>
    /// Only appropriate for history records that refer to item price and price trade agreements.
    ///
    /// Should call this method instead of accessing field directly.
    ///
    /// This method should be functionally identical to the <c>PriceDiscTable</c> and
    /// <c>InventTableModule</c> methods of the same name.
    /// </remarks>
    AmountQty priceQty()
    {
        AmountQty priceQty;

        switch (this.RefTableId)
        {
            case tableNum(PriceDiscTable)       :
                priceQty = this.QuantityAmount ? this.QuantityAmount : 1;
                break;
            case tableNum(InventTableModule)    :
                priceQty = this.PriceQty ? this.PriceQty : 1;
                break;
        }
        return priceQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the price quantity of <c>MCRPriceHistory</c>.
    /// </summary>
    /// <returns>
    /// The price quantity.
    /// </returns>
    /// <remarks>
    /// Only appropriate for history records that refer to item price and price trade agreements.
    ///
    /// Should call this method instead of accessing field directly.
    ///
    /// This method should be functionally identical to the <c>PriceDiscTable</c> and
    /// <c>InventTableModule</c> methods of the same name.
    /// </remarks>
    PriceUnit priceUnit()
    {
        return this.PriceUnit ? this.PriceUnit : 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>MCRPriceHistory</c> table by using the specified record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>MCRPriceHistory</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>MCRPriceHistory</c> table; otherwise, an empty record.
    /// </returns>
    static MCRPriceHistory findRecId(
        RecId      _recId,
        boolean    _forUpdate = false)
    {
        MCRPriceHistory mcrPriceHistory;

        if (_recId)
        {
            mcrPriceHistory.selectForUpdate(_forUpdate);

            select firstonly mcrPriceHistory
                where mcrPriceHistory.RecId == _recId;
        }
        return mcrPriceHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrPriceHistoryTypeToPotential</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the price history potential type related to a price history type.
    /// </summary>
    /// <param name="_mcrPriceHistoryType">
    /// The price history potential type.
    /// </param>
    /// <param name="_fromQty">
    /// A <c>Boolean</c> to indicate whether the price history potential type should
    /// be a from or to type.
    /// </param>
    /// <returns>
    /// A price history potential type.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The argument cannot be converted to a potential type.
    /// </exception>
    public static MCRPriceHistoryPotentialType mcrPriceHistoryTypeToPotential(
        MCRPriceHistoryType  _mcrPriceHistoryType,
        boolean             _fromQty)
    {
        if (_fromQty)
        {
            return MCRPriceHistoryTypeMapping::newMCRPriceHistoryType(_mcrPriceHistoryType).potentialTypeFrom();
        }
        else
        {
            return MCRPriceHistoryTypeMapping::newMCRPriceHistoryType(_mcrPriceHistoryType).potentialTypeTo();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceType2MCRPriceHistoryType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the price history type related to a price type.
    /// </summary>
    /// <param name="_priceType">
    /// The price type.
    /// </param>
    /// <returns>
    /// A price history type.
    /// </returns>
    /// <remarks>
    /// The price history type is like the price type without the purchase/sales
    /// distinction.
    /// </remarks>
    static MCRPriceHistoryType priceType2MCRPriceHistoryType(PriceType _priceType)
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(_priceType).mcrPriceHistoryType();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeAgreements</ConfigurationKey>
	<DeveloperDocumentation>@MCR25797</DeveloperDocumentation>
	<Label>@MCR25797</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PriceHistoryType</TitleField1>
	<TitleField2>RefRecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RefRecIdIdx</PrimaryIndex>
	<ReplacementKey>RefRecIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventTableModule</Name>
			<Label>@SYS27987</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Markup</Name>
			<Label>@SYS25095</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMarkup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS69996</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryPotentialType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryUnitPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Percent</Name>
			<Label>@SYS15774</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PriceDiscTable</Name>
			<Label>@SYS5926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceHistoryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceDiscGroupType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MerchandisingEventID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS102891</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuantityAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscPartyCode</ExtendedDataType>
			<EnumType>PriceDiscPartyCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocateMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR4410319</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAmount</ExtendedDataType>
			<Label>@SYS6928</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscProductCode</ExtendedDataType>
			<EnumType>PriceDiscProductCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Markup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MerchandisingEventID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMerchandisingEventID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Module</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscModule</ExtendedDataType>
			<EnumType>ModuleInventCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ModuleInventPurchSales</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS901</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS902</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceDiscGroupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceDiscGroupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceHistoryPotentialType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceHistoryPotentialType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceHistoryType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceHistoryType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceHistoryUnitPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPriceHistoryUnitPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQty</ExtendedDataType>
			<Label>@SYS4083</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmountTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQuantityTo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>MCRRelatedTableRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Relation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9114</Label>
			<EnumType>PriceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Version</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Version</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Version</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MerchEventID</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MerchandisingEventID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTableModule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTableModule</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PriceDiscTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TAMMerchandisingEvent</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TAMMerchandisingEvent</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MerchandisingEventID</Name>
					<SourceEDT>MCRMerchandisingEventID</SourceEDT>
					<Field>MerchandisingEventID</Field>
					<RelatedField>MerchandisingEventID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscAdmTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PriceSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>