<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatClassifiedProductReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatClassifiedProductReference extends CatProductReference
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateProcurementCategory</Name>
				<Source><![CDATA[
    public boolean validateProcurementCategory()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>CatClassifiedProductReference</c> table; if
    ///    not, an error message is displayed.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _refRecId)
    {
        if (_refRecId && CatClassifiedProductReference::exist(_refRecId))
        {
            return true;
        }

        return checkFailed(strfmt("@SYS94719", _refRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <c>_RefRecId</c> of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_refRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    static boolean exist(RefRecId _refRecId)
    {
        return _refRecId && (select firstonly RecId from catClassifiedProductReference
                                    where catClassifiedProductReference.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatClassifiedProductReference</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatClassifiedProductReference</c> table; otherwise, an empty record.
    /// </returns>
    static CatClassifiedProductReference find(RefRecId _refRecId, boolean _forUpdate = false)
    {
        CatClassifiedProductReference catClassifiedProductReference;

        if (_refRecId)
        {
            catClassifiedProductReference.selectForUpdate(_forUpdate);
            select catClassifiedProductReference where catClassifiedProductReference.RecId == _refRecId;
        }
        return catClassifiedProductReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>CatClassifiedProductReference</c> table
    ///    does not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exist.
    /// </returns>
    public static str txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS324151</DeveloperDocumentation>
	<Label>@SYS300237</Label>
	<SingularLabel>@SYS300237</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>TableId</TitleField1>
	<TitleField2>RecId</TitleField2>
	<Extends>CatProductReference</Extends>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields />
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatProductReference</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CatProductReference</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatProductReference</RelatedTableRole>
			<RelationshipType>Specialization</RelationshipType>
			<Role>CatProductReference_CatClassifiedProductReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>