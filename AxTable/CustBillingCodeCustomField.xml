<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillingCodeCustomField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustBillingCodeCustomField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CustBillingCodeCustomField</c> table and shows an error message if it does not.
    /// </summary>
    /// <param name="_recId">
    /// The ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _recId)
    {
        boolean ret = true;

        if (!CustBillingCodeCustomField::exist(_recId))
        {
            ret = checkFailed(strFmt(CustBillingCodeCustomField::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CustBillingCodeCustomField</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        boolean found;

        found = (select firstOnly
                     RecId
                from
                     custBillingCodeCustomField
                where
                     custBillingCodeCustomField.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the CustBillingCodeCustomField based on RecID field.
    /// </summary>
    /// <param name="_custBillingCodeCustomField">
    /// The RefRecId corresponds the RecID field.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean that determines whether to read the record for updating; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A value used when the table is not automatically concurrent; optional.
    /// </param>
    /// <returns>
    /// A <c>CustBillingCodeCustomField</c> table buffer.
    /// </returns>
    /// <remarks>
    /// A public method to find Custom Field records.
    /// </remarks>
    public static CustBillingCodeCustomField find(
        RefRecId            _custBillingCodeCustomField,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustBillingCodeCustomField custBillingCodeCustomFieldTable;

        custBillingCodeCustomFieldTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custBillingCodeCustomFieldTable.concurrencyModel(_concurrencyModel);
        }

        select firstOnly custBillingCodeCustomFieldTable
            where custBillingCodeCustomFieldTable.RecId == _custBillingCodeCustomField;

        return custBillingCodeCustomFieldTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActiveCustomFieldsByCustBillingCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>CustBillingCodeCustomField</c> active records which are associated with the specified CustBillingCodeVersion record.
    /// </summary>
    /// <param name="_custBillingCodeVersion">
    /// The RefRecId corresponds the RecID field of the <c>CustBillingCodeVersion</c> table.
    /// </param>
    /// <returns>
    /// A <c>CustBillingCodeCustomField</c> table buffer.
    /// </returns>
    public static CustBillingCodeCustomField findActiveCustomFieldsByCustBillingCode(RefRecId  _custBillingCodeVersion)
    {
        CustBillingCodeCustomField custBillingCodeCustomFieldTable;

        select custBillingCodeCustomFieldTable
            where custBillingCodeCustomFieldTable.CustBillingCodeVersion == _custBillingCodeVersion
               && custBillingCodeCustomFieldTable.IsActive == NoYes::Yes;

        return custBillingCodeCustomFieldTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxSequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the maximum SequenceNumber.
    /// </summary>
    /// <param name="_custBillingCodeVersionRecId">
    /// The billing code version for which to find the maximum sequenceNumber
    /// </param>
    /// <returns>
    /// The maximum SequenceNumber
    /// </returns>
    public static CustomFieldSequenceNo getMaxSequenceNumber(RefRecId _custBillingCodeVersionRecId)
    {
        CustomFieldSequenceNo       maxSequenceNumber;
        CustBillingCodeCustomField  custBillingCodeCustomField;

        select maxof(SequenceNumber) from custBillingCodeCustomField
            where custBillingCodeCustomField.CustBillingCodeVersion == _custBillingCodeVersionRecId;

        maxSequenceNumber = custBillingCodeCustomField.SequenceNumber;

        return maxSequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomFieldUsed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the specified custom field is used in the table
    /// </summary>
    /// <param name="_customFieldId">
    /// The customField RecId to find
    /// </param>
    /// <param name="_custBillingCodeVersionRecId">
    /// The <c>custBillingCodeVersion</c> RecId to find
    /// </param>
    /// <returns>
    /// true if the custom field exists in the table; otherwise, false.
    /// </returns>
    public static boolean isCustomFieldUsed(
        recId       _customFieldId,
        RefRecId    _custBillingCodeVersionRecId = 0)
    {
        boolean found;

        if (_custBillingCodeVersionRecId)
        {
            found = (select firstOnly  RecId
                 from
                    custBillingCodeCustomField
                 where
                    custBillingCodeCustomField.CustBillingCodeVersion == _custBillingCodeVersionRecId &&
                    custBillingCodeCustomField.CustCustomField == _customFieldId).RecId != 0;
        }
        else
        {
            found = (select firstOnly  RecId
                     from
                        custBillingCodeCustomField
                     where
                        custBillingCodeCustomField.CustCustomField == _customFieldId).RecId != 0;
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ID of the label to use when displaying a message to indicate that the record does not exist.
    /// </summary>
    /// <returns>
    /// A string indicating the label ID.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sequence of <c>CustBillingCodeCustomField</c> table record.
    /// </summary>
    /// <param name = "_directionUp">
    /// A boolean value that determines the direction whether to move up or down in the sequence.
    /// </param>
    public void updateSequence(boolean _directionUp)
    {
        SettlementPriority changeSelectedPriority = _directionUp ? -1 : 1;

        CustBillingCodeCustomField custBillingCodeCustomFieldlocal;

        ttsbegin;
        update_recordset custBillingCodeCustomFieldlocal
            setting SequenceNumber = custBillingCodeCustomFieldlocal.SequenceNumber - changeSelectedPriority
            where (custBillingCodeCustomFieldlocal.SequenceNumber == this.SequenceNumber + changeSelectedPriority
            && custBillingCodeCustomFieldlocal.CustBillingCodeVersion == this.CustBillingCodeVersion);

        this.SequenceNumber += changeSelectedPriority;
        this.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow()
    {
        super();

        CustCustomField custCustomField = CustCustomField::find(this.CustCustomField);

        if (!(custCustomField.DataType == CustomFieldDataType::Text
            || custCustomField.DataType == CustomFieldDataType::Date)
            || !this.IsActive)
        {
            this.IsRequired = false;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS2229</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SPS326</Label>
	<TitleField1>CustBillingCodeVersion</TitleField1>
	<TitleField2>CustCustomField</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>AccountsReceivable</Modules>
	<ReplacementKey>CustBillingCodeCustomFieldIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustInvLineBillCodeCustomFieldBase</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>
      </Relation>
			<Table>CustInvLineBillCodeCustomFieldBase</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustCustomField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustCustomField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustCustomField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relations</Name>
			<Label>@SYS80613</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActive</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustCustomField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustBillingCodeVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SPS21</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustCustomField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24676</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS53664</Label>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustomFieldSequenceNo</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustBillingCodeCustomFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustCustomField</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustBillingCodeVersion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SequenceNoIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustBillingCodeVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustBillingCodeVersion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustBillingCodeVersion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustBillingCodeVersion_CustBillingCodeCustomField</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustBillingCodeVersion</Name>
					<Field>CustBillingCodeVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustCustomField</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustCustomField</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustCustomField</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CustCustomField_CustBillingCodeCustomField</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustCustomField</Name>
					<Field>CustCustomField</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>