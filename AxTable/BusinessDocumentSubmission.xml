<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentSubmission</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BusinessDocumentSubmission extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record in the <c>BusinessDocumentSubmission</c> table.
    /// </summary>
    /// <param name = "_refTableId">A reference to the table ID.</param>
    /// <param name = "_refRecId">A reference to the record ID.</param>
    /// <param name = "_forupdate">A <c>Boolean</c> flag indicating if the record should be updated.</param>
    /// <returns>A record in the <c>BusinessDocumentSubmission</c> table.</returns>
    public static BusinessDocumentSubmission find(
        RefTableId _refTableId, 
        RefRecId _refRecId,
        boolean _forupdate = false)
    {
        BusinessDocumentSubmission businessDocumentSubmission;

        BusinessDocumentSubmission.selectForUpdate(_forupdate);

        select firstonly businessDocumentSubmission
            where businessDocumentSubmission.RefTableId == _refTableId
                && businessDocumentSubmission.RefRecId == _refRecId
                && businessDocumentSubmission.Stage == 0;

        return businessDocumentSubmission;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByUID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record in the <c>BusinessDocumentSubmission</c> table.
    /// </summary>
    /// <param name = "_documentId">A business document ID.</param>
    /// <param name = "_forupdate">A <c>Boolean</c> flag indicating if the record should be updated.</param>
    /// <returns>A record in the <c>BusinessDocumentSubmission</c> table.</returns>
    public static BusinessDocumentSubmission findByUID(
        SysGuid _documentId,
        boolean _forupdate = false)
    {
        BusinessDocumentSubmission businessDocumentSubmission;

        BusinessDocumentSubmission.selectForUpdate(_forupdate);

        select firstonly businessDocumentSubmission
            where businessDocumentSubmission.UID == _documentId;

        return businessDocumentSubmission;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findStage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record in the <c>BusinessDocumentSubmission</c> table.
    /// </summary>
    /// <param name = "_refTableId">A reference to the table ID.</param>
    /// <param name = "_refRecId">A reference to the record ID.</param>
    /// <param name = "_stage">A document processing stage.</param>
    /// <param name = "_forupdate">A <c>Boolean</c> flag indicating if the record should be updated.</param>
    /// <returns>A record in the <c>BusinessDocumentSubmission</c> table.</returns>
    public static BusinessDocumentSubmission findStage(
        RefTableId _refTableId,
        RefRecId _refRecId,
        int _stage,
        boolean _forupdate = false)
    {
        BusinessDocumentSubmission businessDocumentSubmission;

        BusinessDocumentSubmission.selectForUpdate(_forupdate);

        select firstonly businessDocumentSubmission
            where businessDocumentSubmission.RefTableId == _refTableId
                && businessDocumentSubmission.RefRecId == _refRecId
                && businessDocumentSubmission.Stage == _stage;

        return businessDocumentSubmission;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findStageNotZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record in the <c>BusinessDocumentSubmission</c> table where stage is not equal to 0.
    /// </summary>
    /// <param name = "_refTableId">A reference to the table ID.</param>
    /// <param name = "_refRecId">A reference to the record ID.</param>
    /// <param name = "_forupdate">A <c>Boolean</c> flag indicating if the record should be updated.</param>
    /// <returns>A record in the <c>BusinessDocumentSubmission</c> table.</returns>
    public static BusinessDocumentSubmission findStageNotZero(
        RefTableId _refTableId,
        RefRecId _refRecId,
        boolean _forupdate = false)
    {
        BusinessDocumentSubmission businessDocumentSubmission;

        BusinessDocumentSubmission.selectForUpdate(_forupdate);

        select firstonly businessDocumentSubmission
            where businessDocumentSubmission.RefTableId == _refTableId
                && businessDocumentSubmission.RefRecId == _refRecId
                && businessDocumentSubmission.Stage != 0;

        return businessDocumentSubmission;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record in the <c>BusinessDocumentSubmission</c> table by reference record.
    /// </summary>
    /// <param name = "_record">A reference record</param>
    /// <param name = "_forupdate">A <c>Boolean</c> flag indicating if the record should be updated.</param>
    /// <returns>A record in the <c>BusinessDocumentSubmission</c> table.</returns>
    public static BusinessDocumentSubmission findByCommon(
        Common _record,
        boolean _forupdate = false)
    {
        BusinessDocumentSubmission businessDocumentSubmission;

        if (_record.TableId == tableNum(BusinessDocumentSubmission))
        {
            if (_record.isTmp())
            {
                businessDocumentSubmission.setTmp();
                businessDocumentSubmission.setTmpData(_record);
            }
			businessDocumentSubmission = _record;
            businessDocumentSubmission.selectForUpdate(_forupdate);
        }
        else
        {
            businessDocumentSubmission = BusinessDocumentSubmission::find(_record.TableId, _record.RecId, _forupdate);
        }

        return businessDocumentSubmission;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record in the <c>BusinessDocumentSubmission</c> table exists.
    /// </summary>
    /// <param name = "_refTableId">A reference to the table ID.</param>
    /// <param name = "_refRecId">A reference to the record ID.</param>
    /// <returns><c>True</c> if the record is found.</returns>
    public static boolean exists(
        RefTableId _refTableId,
        RefRecId _refRecId)
    {
        return 
            (select firstonly businessDocumentSubmission
                where businessDocumentSubmission.RefTableId == _refTableId
                    && businessDocumentSubmission.RefRecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a source business document for the submission.
    /// </summary>
    /// <returns>A source business document for the submission.</returns>
    public Common getDocument()
    {
        Common document;
        
        if (this)
        {
            document = new DictTable(this.RefTableId).makeRecord();
            select firstonly document
                where document.RecId == this.RefRecId;
        }

        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentUidStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the document UID converted to a string.
    /// </summary>
    /// <returns>The document UID converted to a string.</returns>
    public str documentUidStr()
    {
        return strLwr(guid2StrWithoutBraces(this.UID));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.ParentRefRecId)
        {
            BusinessDocumentSubmission submission;
            
			if (this.isTmp())
            {
                submission.setTmp();
                submission.setTmpData(this);
            }
            
			select maxof(Stage) from submission
                where submission.ParentRefRecId == this.ParentRefRecId;
            
			this.Stage = submission.Stage + 1;
        }
  
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initKeysFromDocInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method initializes natural key fields.
    /// </summary>
    /// <param name = "_info">A document info class.</param>
    [Hookable(false)]
    public void initKeysFromDocInfo(BusinessDocumentInfo _info)
    {
        this.initKeysFromMap(_info.getIdentificationKeys());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDetailsFromDocInfo</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initDetailsFromDocInfo(BusinessDocumentInfo _info)
    {
        this.initDocDetailsFromMap(_info.getDocumentDetails());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimestampTicks</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method sets the timestamp in ticks.
    /// </summary>
    /// <param name = "_timestamp">The timestamp to set.</param>
    [Hookable(false)]
    public void setTimestampTicks(utcdatetime _timestamp)
    {
        System.DateTime timestamp = _timestamp;
        System.UInt64 ticks = timestamp.Ticks;
        this.TimestampTicks = ticks;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initKeysFromMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method initializes natural key fields from map.
    /// </summary>
    /// <param name = "_identificationKeys">A map with identification keys.</param>
    [Hookable(false)]
    internal void initKeysFromMap(Map _identificationKeys)
    {
        this.initFromMap(_identificationKeys, 
                            fieldNum(BusinessDocumentSubmission, KeyData), 
                            fieldNum(BusinessDocumentSubmission, KeyDataValues));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDocDetailsFromMap</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void initDocDetailsFromMap(Map _detailsKeys)
    {
        this.initFromMap(_detailsKeys,
                            fieldNum(BusinessDocumentSubmission, DocDetailsData),
                            fieldNum(BusinessDocumentSubmission, DocDetailsDataValues));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromMap</Name>
				<Source><![CDATA[
    private void initFromMap(Map _map, FieldId _dataFieldId, FieldId _dataValuesFieldId)
    {
        const int MaxArrayLength = 10;
                
        this.(_dataFieldId) = _map.pack();

        int idx = 1;
        MapEnumerator me = _map.getEnumerator();

        while (me.moveNext() && idx <= MaxArrayLength)
        {
            FieldId indexedFieldNum = fieldId2Ext(_dataValuesFieldId, idx);
            this.(indexedFieldNum) = me.currentValue();
            idx++;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@BusinessDocumentSubmissionService:BusDocSubmissionDevDoc</DeveloperDocumentation>
	<Label>@BusinessDocumentSubmissionService:BusDocSubmissionLog</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>KeyDataValues[1]</TitleField1>
	<TitleField2>KeyDataValues[2]</TitleField2>
	<ClusteredIndex>RefTableRecIdx</ClusteredIndex>
	<Modules>NotApplicable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorMsg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeyDataValues</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyDataValues</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentRefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS4004250</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StageDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExistExternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>State</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BusinessDocumentState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>UID</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@BusinessDocumentSubmissionService:BusDocID</HelpText>
			<Label>@SYS5468</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ErrorMsg</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ErrorMsg</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>KeyData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KeyData</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KeyDataValues</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KeyDataArray</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Log</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KeyData</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Stage</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StageDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExistExternal</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@BusinessDocumentSubmissionService:ExistExternalDesc</HelpText>
			<Label>@BusinessDocumentSubmissionService:ExistExternal</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Filename</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TimestampTicks</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ExecutionId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SysGuid</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>DocDetailsData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KeyData</ExtendedDataType>
			<FeatureClass>BusinessDocumentExtendedDocumentIdentificationInSubmissionLogFeature</FeatureClass>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocDetailsDataValues</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KeyDataArray</ExtendedDataType>
			<FeatureClass>BusinessDocumentExtendedDocumentIdentificationInSubmissionLogFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubmittedDateTime</Name>
			<ExtendedDataType>BusinessDocumentSubmittedDateTimeString</ExtendedDataType>
			<FeatureClass>BusinessDocumentExtendedDocumentIdentificationInSubmissionLogFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefTableRecIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Stage</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>State</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefParentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParentRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Stage</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UidIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Common</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>Common</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Common</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BusinessDocumentSubmission</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BusinessDocumentSubmissionParent</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BusinessDocumentSubmission</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BusinessDocumentSubmissionParent</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BusinessDocumentSubmission</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentRefRecId</Name>
					<Field>ParentRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BusinessDocumentSubmission</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>