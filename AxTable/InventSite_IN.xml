<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSite_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSite_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>InventSite_IN</c> table; if not,
    ///    an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>InventSite_IN</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean doesExist = true;

        if (!InventSite_IN::exist(_recId))
        {
            doesExist = checkFailed(strFmt("@SPS1280", _recId));
        }

        return doesExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>InventSite_IN</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the <c>InventSite_IN</c> table to check for existence.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean exist(RecId _recId)
    {
        InventSite_IN inventSite;

        select firstonly RecId from inventSite
            where inventSite.RecId == _recId;

        return inventSite.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <C>InventSite_IN</C> record based on record ID of <C>InventSite_IN</C> record.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of <C>InventSite_IN</C> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <C>InventSite_IN</C> record.
    /// </returns>

    static InventSite_IN find(RecId _recId, boolean _forUpdate = false)
    {
        InventSite_IN inventSite;
        
        if (_recId)
        {
            inventSite.selectForUpdate(_forUpdate);
            select firstonly inventSite
                where inventSite.RecId == _recId;
        }
        return inventSite;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventSite_IN</c> table.
    /// </summary>
    /// <param name="_inventSiteId">
    /// The <c>InventSiteId</c> .
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventSite_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static InventSite_IN findSiteId(InventSiteId _inventSiteId, boolean _forUpdate = false)
    {
        InventSite_IN   inventSite_IN;

        if (_inventSiteId)
        {
            inventSite_IN.selectForUpdate(_forUpdate);
            select firstOnly inventSite_IN
                where inventSite_IN.SiteId == _inventSiteId;
        }

        return inventSite_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unsupportedDataSharingTableFieldSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a set of fields that cannot be shared when the <c>InventSite_IN</c> table is shared.
    /// </summary>
    /// <returns>
    /// The <c>Set</c> of fields.
    /// </returns>
    [Hookable(false)]
    internal static Set unsupportedDataSharingTableFieldSet()
    {
        Set sharingSet = new Set(Types::String);

        if (SysDataSharingCommonAPI::isTablePartOfEnabledSRSPolicyForCurrentCompany(tableStr(InventSite_IN)))
        {
            // Country fields
            sharingSet.add(fieldstr(InventSite_IN, GateInwardNumberSequence));
            sharingSet.add(fieldstr(InventSite_IN, GateOutWardNumberSequence));
        }

        return sharingSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (ret)
        {
            if (!this.checkGateEntryIdNumberSequenceNotManual(this.GateInwardNumberSequence) || 
                !this.checkGateEntryIdNumberSequenceNotManual(this.GateOutWardNumberSequence))
            {
                ret = checkFailed('@Inventory_Localization:ManualNumberSequencesAreNotSupportedForGateEntriesBothInwardAndOutward');
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkGateEntryIdNumberSequenceNotManual</Name>
				<Source><![CDATA[
    private boolean checkGateEntryIdNumberSequenceNotManual(RefRecId _numbersequenceId)
    {
        if (_numbersequenceId && NumberSequenceTable::find(_numbersequenceId).Manual)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4860411</DeveloperDocumentation>
	<Label>@SYP4860409</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>SiteId</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>InventSiteIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<ReplacementKey>InventSiteIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GateInwardNumberSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GateOutWardNumberSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NumberSequence</Name>
			<Label>@SYP4860381</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GateInwardNumberSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GateOutWardNumberSequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GateInwardNumberSequence</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYP4860412</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GateOutWardNumberSequence</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYP4860414</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SiteId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventSiteIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SiteId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GateInwardNumberSequence</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>GateInwardNumberSequence</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GateInwardNumberSequence</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GateInwardNumberSequence</Name>
					<Field>GateInwardNumberSequence</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GateOutwardNumberSequence</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>GateOutwardNumberSequence</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GateOutwardNumberSequence</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GateOutWardNumberSequence</Name>
					<Field>GateOutWardNumberSequence</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SiteId</Name>
					<Field>SiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>