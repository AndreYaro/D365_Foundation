<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsProfileTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsProfileTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accumulatedPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets accumulated percentage.
    /// </summary>
    /// <returns><c>Percent</c>.</returns>
    display Percent accumulatedPercent()
    {
        return (select sum(Percentage) from rDeferralsProfileTrans
                    where rDeferralsProfileTrans.DeferralsProfile == this.DeferralsProfile &&
                          rDeferralsProfileTrans.Interval         <= this.Interval).Percentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets next interval.
    /// </summary>
        public void nextInterval()
    {
        RDeferralsProfileTrans      deferralsProfileTrans;
        RDeferralsIntervalNumber    interval;

        while select Interval from deferralsProfileTrans
            order by Interval
            where deferralsProfileTrans.DeferralsProfile == this.DeferralsProfile
        {
            if (deferralsProfileTrans.Interval > interval + 1)
                break;
            else
            {
                interval = deferralsProfileTrans.Interval;
            }
        }

        this.Interval = interval + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets percentage sum for deferral trans.
    /// </summary>
    /// <returns><c>RDeferralsPercentageSum</c> object.</returns>
    display RDeferralsPercentageSum sumProfileId()
    {
        return (select sum(Percentage) from rDeferralsProfileTrans
                    where rDeferralsProfileTrans.DeferralsProfile  == this.DeferralsProfile).Percentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIntervalNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the current interval number for the writting off operations.
    /// </summary>
    /// <param name="_deferralsProfileId">
    /// A writting off method.
    /// </param>
    /// <returns>
    /// true, if the validations are OK; otherwise, false.
    /// </returns>
    public static boolean checkIntervalNumber(RDeferralsProfileId _deferralsProfileId)
    {
        RDeferralsProfileTrans      deferralsProfileTrans;
        RDeferralsIntervalNumber    interval;

        if (!_deferralsProfileId)
            return true;

        while select Interval from deferralsProfileTrans
            order by Interval
            where deferralsProfileTrans.DeferralsProfile == _deferralsProfileId
        {
            if (deferralsProfileTrans.Interval != interval + 1)
                return checkFailed(strFmt("@GLS116029", interval + 1));
            else
                interval++;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if <c>DeferralsProfileId</c> exists.
    /// </summary>
    /// <param name = "_deferralsProfile">Deferral profile.</param>
    /// <returns>True, if profile transaction exists, othervise false.</returns>
        public static boolean exist(RDeferralsProfileId  _deferralsProfile)
    {
        return _deferralsProfile && (select RecId from rDeferralsProfileTrans
                                         where rDeferralsProfileTrans.DeferralsProfile == _deferralsProfile).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects <c>RDeferralsProfileTrans</c>.
    /// </summary>
    /// <param name = "_deferralsProfile">Specifies profile.</param>
    /// <param name = "_deferralsInterval">Specifies deferral interval.</param>
    /// <param name = "_forUpdate">Specifies select mode.</param>
    /// <returns><c>RDeferralsProfileTrans</c> object.</returns>
        public static RDeferralsProfileTrans find(RDeferralsProfileId      _deferralsProfile,
                                                     RDeferralsIntervalNumber _deferralsInterval = 1,
                                                     boolean                  _forUpdate         = false)
    {
        RDeferralsProfileTrans deferralsProfileTrans;

        if (_deferralsProfile)
        {
            deferralsProfileTrans.selectForUpdate(_forUpdate);

            select firstonly deferralsProfileTrans
                where deferralsProfileTrans.DeferralsProfile == _deferralsProfile &&
                      deferralsProfileTrans.Interval         == _deferralsInterval;
        }
        return deferralsProfileTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RDeferralsProfileTrans</FormRef>
	<Label>@GLS103691</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>DeferralsProfile</TitleField1>
	<TitleField2>Percentage</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ProfileTransIdx</ClusteredIndex>
	<Modules>RDeferrals</Modules>
	<PrimaryIndex>ProfileTransIdx</PrimaryIndex>
	<ReplacementKey>ProfileTransIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Percentage</Name>
			<Label>@GLS116249</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferralsProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsProfileId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Interval</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsIntervalNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsPercentage</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferralsProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Interval</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsProfile</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RDeferralsProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsProfile</Name>
					<SourceEDT>RDeferralsProfileId</SourceEDT>
					<Field>DeferralsProfile</Field>
					<RelatedField>DeferralsProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProfileIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>