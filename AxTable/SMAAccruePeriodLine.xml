<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAAccruePeriodLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAAccruePeriodLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    display ProjCategoryId categoryId()
    {
        // Return category id of the project revenue transaction
        return ProjRevenueTrans::find(this.ProjRevenueTransId).CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodName</Name>
				<Source><![CDATA[
    public display Name periodName()
    {
        // Find the period name based on the accrued period code and the start date
        return ProjPeriodLine::findFromPeriod(this.smaSubscriptionTable().accruedPeriodCode(), this.FromDate).PeriodName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    display ProjId projId()
    {
        // Find project id based on the project revenue transaction
        return ProjRevenueTrans::find(this.ProjRevenueTransId).ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projRevenueTrans</Name>
				<Source><![CDATA[
    public ProjRevenueTrans projRevenueTrans(boolean _update = false)
    {
        // Return a project revenue record
        return ProjRevenueTrans::find(this.ProjRevenueTransId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>smaSubscriptionTable</Name>
				<Source><![CDATA[
    public SMASubscriptionTable smaSubscriptionTable()
    {
        // Return the subscription table record based on the project revenue transaction
        return SMASubscriptionTable::find(ProjRevenueTrans::find(this.ProjRevenueTransId).smaSubscriptionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscriptionId</Name>
				<Source><![CDATA[
    display SMASubscriptionId subscriptionId()
    {
        // Find the subscription id based on the project revenue transaction
        return ProjRevenueTrans::find(this.ProjRevenueTransId).smaSubscriptionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscriptionPeriodType</Name>
				<Source><![CDATA[
    display SMASubscriptionPeriodType subscriptionPeriodType()
    {
        // Find the subscription period type based on the project revenue transaction
        return ProjRevenueTrans::find(this.ProjRevenueTransId).smaSubscriptionPeriodType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accruelinesCanBeDeleted</Name>
				<Source><![CDATA[
    public static boolean accruelinesCanBeDeleted(ProjRevenueTransId _projRevenueTransId)
    {
        SMAAccruePeriodLine accruePeriodLine;

        // If accrue line doesn't have a posting date it cannot be deleted
        select firstonly ProjRevenueTransId, PostingDate from accruePeriodLine where accruePeriodLine.ProjRevenueTransId == _projRevenueTransId && accruePeriodLine.PostingDate == dateNull();

        if (accruePeriodLine)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(ProjRevenueTransId _projRevenueTransId)
    {
        if (!SMAAccruePeriodLine::exist(_projRevenueTransId))
        {
            // The accrue period line could not be found
            return checkFailed(strfmt(SMAAccruePeriodLine::txtNotExist(), _projRevenueTransId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAccrueLines</Name>
				<Source><![CDATA[
    public static void deleteAccrueLines(ProjRevenueTransId _projRevenueTransId)
    {
        SMAAccruePeriodLine accruePeriodLine;
        boolean smaDeleteUnpostedAccrueLineFlightEnabled = SMADeleteUnpostedAccrueLineFlight::instance().isEnabled();

        // Delete line accrue lines, based on the project revenue transaction, that are not posted
        delete_from accruePeriodLine where accruePeriodLine.ProjRevenueTransId == _projRevenueTransId && 
            ((SMADeleteUnpostedAccrueLineFlight::instance().isEnabled() && accruePeriodLine.PostingDate == dateNull()) || (!smaDeleteUnpostedAccrueLineFlightEnabled && accruePeriodLine.PostingDate != dateNull()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(ProjRevenueTransId _projRevenueTransId)
    {
        return _projRevenueTransId && (select firstonly RecId from smaAccruePeriodLine where smaAccruePeriodLine.ProjRevenueTransId == _projRevenueTransId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMAAccruePeriodLine find(ProjRevenueTransId _projRevenueTransId, boolean _forupdate = false)
    {
        SMAAccruePeriodLine accruePeriodLine = null;

        accruePeriodLine.selectForUpdate(_forupdate);

        if (_projRevenueTransId)
        {
            select firstonly reverse accruePeriodLine order by RecId where accruePeriodLine.ProjRevenueTransId == _projRevenueTransId;
        }

        return accruePeriodLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecid</Name>
				<Source><![CDATA[
    public static SMAAccruePeriodLine findRecid(recId _recId, boolean _forupdate = false)
    {
        SMAAccruePeriodLine accruePeriodLine = null;

        accruePeriodLine.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly accruePeriodLine where accruePeriodLine.RecId  == _recId;
        }

        return accruePeriodLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static Description txtNotExist()
    {
        // The accrue period line could not be found
        return "@SYS84278";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMASubscription</ConfigurationKey>
	<DeveloperDocumentation>@SYS122691</DeveloperDocumentation>
	<Label>@SYS84274</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>FromDate</TitleField1>
	<TitleField2>Todate</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransIdIdx</ClusteredIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Todate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AccrueAmount</Name>
			<Label>@SYS84279</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AccruePeriod</Name>
			<Label>@SYS84280</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>periodName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Todate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AccruePeriodLine</Name>
			<Label>@SYS84280</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Todate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>periodName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Revenue</Name>
			<Label>@SYS85434</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS84279</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS24050</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PostingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14475</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjRevenueTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjRevenueTransId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Todate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS80934</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjRevenueTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjRevenueTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjRevenueTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjRevenueTransId</Name>
					<Field>ProjRevenueTransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>