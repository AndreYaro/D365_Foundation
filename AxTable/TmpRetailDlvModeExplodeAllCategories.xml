<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpRetailDlvModeExplodeAllCategories</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpRetailDlvModeExplodeAllCategories extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existVariant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Search for the variant if exists.
    /// </summary>
    /// <parm name = "_groupMemberLine">
    /// Record of <c>RetailGroupMemberLine</c> table.
    /// </parm>
    /// <param name = "_dlvModeId">
    /// RecId of the record of <c>DlvMode</c> table.
    /// </parm>
    public static boolean existVariant(TmpRetailDlvModeExplodeAllCategories _exploded, RetailGroupMemberLine _groupMemberLine, RefRecId _dlvModeId)
    {
        TmpRetailDlvModeExplodeAllCategories localExploded;
        localExploded.linkPhysicalTableInstance(_exploded);

        select firstOnly localExploded
        where localExploded.RefRecIdVariant == _groupMemberLine.Variant
        && localExploded.RefRecIdProduct == _groupMemberLine.Product
        && localExploded.RefRecIdCategory == _groupMemberLine.Category
        && localExploded.DlvMode == _dlvModeId;

        if (!localExploded)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </summary>
    /// <param name = "_exploded">
    /// The reference of the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </param>
    /// <param name = "_refRecIdCategory">
    /// The reference record Id of the category in the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </param>
    /// <param name = "_dlvModeId">
    /// RecId of the record of <c>DlvMode</c> table.
    /// </parm>
    /// <param name="_selectForUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table; otherwise, an empty record.
    /// </returns>
    public static TmpRetailDlvModeExplodeAllCategories findByCategory(TmpRetailDlvModeExplodeAllCategories _exploded, RefRecId _refRecIdCategory, RefRecId _dlvModeId, boolean _selectForUpdate = false)
    {
        TmpRetailDlvModeExplodeAllCategories localExploded;
        localExploded.linkPhysicalTableInstance(_exploded);

        select firstOnly localExploded
            where localExploded.RefRecIdCategory == _refRecIdCategory
            && localExploded.DlvMode == _dlvModeId;

        localExploded.selectForUpdate(_selectForUpdate);

        return localExploded;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </summary>
    /// <param name = "_exploded">
    /// The reference of the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </param>
    /// <parm name = "_groupMemberLine">
    /// Record of <c>RetailGroupMemberLine</c> table.
    /// </parm>
    /// <param name = "_dlvModeId">
    /// RecId of the record of <c>DlvMode</c> table.
    /// </parm>
    /// <param name = "_selectForUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table; otherwise, an empty record.
    /// </returns>
    public static TmpRetailDlvModeExplodeAllCategories findByProduct(TmpRetailDlvModeExplodeAllCategories _exploded, RetailGroupMemberLine _groupMemberLine, RefRecId _dlvModeRecId, boolean _selectForUpdate = false)
    {
        TmpRetailDlvModeExplodeAllCategories localExploded;
        localExploded.linkPhysicalTableInstance(_exploded);

        select firstOnly localExploded
            where localExploded.RefRecIdProduct == _groupMemberLine.Product
            && localExploded.RefRecIdCategory == _groupMemberLine.Category
            && localExploded.DlvMode == _dlvModeRecId;

        localExploded.selectForUpdate(_selectForUpdate);

        return localExploded;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVariant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </summary>
    /// <param name = "_exploded">
    /// The reference of the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </param>
    /// <param name = "_refRecIdVariant">
    /// The reference record Id of the variant in the <c>TmpRetailDlvModeExplodeAllCategories</c> table.
    /// </param>
    /// <parm name = "_groupMemberLine">
    /// Record of <c>RetailGroupMemberLine</c> table.
    /// </parm>
    /// <param name = "_dlvModeId">
    /// RecId of the record of <c>DlvMode</c> table.
    /// </parm>
    /// <param name="_selectForUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TmpRetailDlvModeExplodeAllCategories</c> table; otherwise, an empty record.
    /// </returns>
    public static TmpRetailDlvModeExplodeAllCategories findByVariant(TmpRetailDlvModeExplodeAllCategories _exploded, RefRecId _refRecIdVariant, RetailGroupMemberLine _groupMemberLine, RefRecId _dlvMode, boolean _selectForUpdate = false)
    {
        TmpRetailDlvModeExplodeAllCategories localExploded;
        localExploded.linkPhysicalTableInstance(_exploded);

        select firstOnly localExploded
        where localExploded.RefRecIdVariant == _refRecIdVariant
        && localExploded.RefRecIdProduct == _groupMemberLine.Product
        && localExploded.RefRecIdCategory == _groupMemberLine.Category
        && localExploded.DlvMode == _dlvMode;

        localExploded.selectForUpdate(_selectForUpdate);

        return localExploded;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>DlvMode</TitleField2>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDim</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDim</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DlvMode</Name>
			<ExtendedDataType>RetailDlvModeRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDim</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecIdCategory</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecIdProduct</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecIdVariant</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<Field>DlvMode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDim</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDim</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>