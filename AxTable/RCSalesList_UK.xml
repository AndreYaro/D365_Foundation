<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCSalesList_UK</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RCSalesList_UK extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    boolean check(boolean toInfolog = true, str prefix = getprefix())
    {
        boolean ok = true;
        container   error;
        #ISOCountryRegionCodesEuro_W

        if (! this.vatNum)
        {
            error += [Exception::Warning, "@SYS118800"+'\t'+prefix+'\t'+"@SYS118803"];
        }

        if (! this.CountryRegion)
        {
            error += [Exception::Warning, "@SYS118800"+'\t'+prefix+'\t'+"@SYS74694"];
        }

        if (this.Listcode != Listcode::IncludeNot  && IntrastatCountryRegionParameters::isDomestic(this.CountryRegion))
        {
            error += [Exception::Warning, "@SYS118800"+'\t'+prefix+'\t'+strfmt("@SYS118801",this.Invoice)];
        }

        if (this.Listcode  && ! IntrastatCountryRegionParameters::isDomestic(this.CountryRegion))
        {
            error += [Exception::Warning, "@SYS118800"+'\t'+prefix+'\t'+strfmt("@SYS118802",this.CountryRegion)];
        }

        if (  !TaxCountryRegionParameters::find(this.CountryRegion).SalesTaxCode
            && conFind(#EuropeanUnionCountries, this.CountryRegion))
        {
            error += [Exception::Warning, "@SYS118800"+'\t'+prefix+'\t'+strfmt("@SYS58808",this.CountryRegion)];
        }

        if (toInfolog && conlen(error))
        {
            InfoLogExtension::showMessagesFromContainer(error);

            this.Log = Info::infoCon2Str(error);
            ok = false;
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    CustTable custTable(boolean update = false)
    {
        return CustTable::find(this.AccountNum, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        CustInvoiceJour custInvoiceJour;
        ProjInvoiceJour projInvoiceJour;

        ttsbegin;

        select firstonly forupdate custInvoiceJour
            where custInvoiceJour.rcSalesList_UK    == this.DispatchId &&
                  custInvoiceJour.InvoiceId         == this.Invoice;

        if (custInvoiceJour)
        {
            custInvoiceJour.rcSalesList_UK = '';
            custInvoiceJour.update();
        }

        select firstonly forupdate projInvoiceJour
            where projInvoiceJour.euSalesList   == this.DispatchId &&
                  projInvoiceJour.ProjInvoiceId == this.Invoice;

        if (projInvoiceJour)
        {
            projInvoiceJour.euSalesList = '';
            projInvoiceJour.update();
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        CustTable   custTable;
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(RCSalesList_UK, TransDate):
                this.setQuarterAndYear();
                break;
            case fieldnum(RCSalesList_UK, AccountNum):
                custTable               = this.custTable();
                this.vatNum             = custTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID, this.TransDate);
                this.CountryRegion      = custTable.postalAddress().CountryRegionId;
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuarter</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void setQuarter()
    {
        this.TransQuarter = RCSalesList_UK::date2Quarter(this.TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuarterAndYear</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void setQuarterAndYear()
    {
        this.setQuarter();
        this.setYear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setYear</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void setYear()
    {
        this.TransYear = year(this.TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId p1)
    {
        boolean ret;

        ret = super(p1);

        if (ret)
        {
            switch (p1)
            {
                case fieldnum(RCSalesList_UK, vatNum)  :
                    ret = TaxVATNumTable::checkVATNum(this.vatNum, this, p1);
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>date2Quarter</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static Quarter date2Quarter(date _date)
    {
        int     intQuarter = date2Qtr(_date);
        Quarter quarter;

        switch (intQuarter)
        {
            case 1:
                quarter = Quarter::Q1;
                break;
            case 2:
                quarter = Quarter::Q2;
                break;
            case 3:
                quarter = Quarter::Q3;
                break;
            case 4:
                quarter = Quarter::Q4;
                break;
        }

        return quarter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>del_resolveListCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static ListcodeId del_resolveListCode(AddressCountryRegionId _deliveryCountryRegionId, AddressCountryRegionId _payerCountryRegionId)
    {
        ListcodeId listcodeId;
        if (IntrastatCountryRegionParameters::isInEU(_deliveryCountryRegionId))
        {
            if (IntrastatCountryRegionParameters::isInEU(_payerCountryRegionId)&& _deliveryCountryRegionId != _payerCountryRegionId)
            {
                listcodeId  = Listcode::TriangularEUTrade;
            }
            else
            {
                listcodeId  = Listcode::EUTrade;
            }
        }
        else
        {
            listcodeId  = Listcode::IncludeNot;
        }
        return listcodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static boolean exist(ListStatus     status   ,
                         RCListDispatchId_UK    dispatchId,
                         ListSeqNum     seqNum      )
    {
        return (select rcSalesList_UK
                    where rcSalesList_UK.Status      == status     &&
                          rcSalesList_UK.DispatchId  == dispatchId &&
                          rcSalesList_UK.SeqNum      == seqNum
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>RCSalesList_UK</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>RCSalesList_UK</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>RCSalesList_UK</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RCSalesList_UK find(
        recId              _recId,
        boolean            _forUpdate        = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        RCSalesList_UK rcSalesList;

        rcSalesList.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            rcSalesList.concurrencyModel(_concurrencyModel);
        }

        select firstonly rcSalesList
            where rcSalesList.RecId == _recId;

        return rcSalesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDispatchId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RCSalesList_UK findByDispatchId(
        ListStatus          status,
        RCListDispatchId_UK dispatchId,
        ListSeqNum          seqNum)
    {
        RCSalesList_UK rcSalesList;

        select rcSalesList
            where rcSalesList.Status     == status     &&
                  rcSalesList.DispatchId == dispatchId &&
                  rcSalesList.SeqNum     == seqNum;

        return rcSalesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static  ListSeqNum  maxNum(RCListDispatchId_UK  dispatchId)
    {
        return (select maxof(SeqNum) from rcSalesList_UK
                        where rcSalesList_UK.DispatchId == dispatchId).SeqNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>GB</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123640</DeveloperDocumentation>
	<FormRef>RCSalesList_UK</FormRef>
	<Label>@SYS118786</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DispatchId</TitleField1>
	<TitleField2>SeqNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DispatchIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Listcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Listcode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Invoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Corrected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Log</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxExemptNumber</Name>
			<Label>@SYS8946</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TimeOfCreation</Name>
			<Label>@SYS26433</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransQuarter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS11762</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Corrected</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Correct</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DispatchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RCListDispatchId_UK</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Invoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Listcode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ListcodeId</ExtendedDataType>
			<FeatureClass>EUSalesListToggle</FeatureClass>
			<EnumType>Listcode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Log</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ListSeqNum</ExtendedDataType>
			<Label>@SYS13864</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ListStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS7354</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransQuarter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EUSalesListQuarter</ExtendedDataType>
			<FeatureClass>EUSalesListToggle</FeatureClass>
			<EnumType>Quarter</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TransYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EUSalesListYear</ExtendedDataType>
			<FeatureClass>EUSalesListToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DispatchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DispatchId</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable_AccountNum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable_AccountNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RCSalesList_UK</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RCSalesList_UK</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegion</Name>
					<SourceEDT>LogisticsAddressCountryRegionId</SourceEDT>
					<Field>CountryRegion</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>