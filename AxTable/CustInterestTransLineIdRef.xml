<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInterestTransLineIdRef</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class CustInterestTransLineIdRef extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(recId _recId )
    {
        boolean ret = true;

        if (!CustInterestTransLineIdRef::exist(_recId))
        {
            ret = checkFailed(strFmt(CustInterestTransLineIdRef::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CustInterestTransLineIdRef</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     custInterestTransLineIdRef
                 where
                     custInterestTransLineIdRef.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>CustInterestTransLineIdRef</c> based on RecID field.
    /// </summary>
    /// <param name="_recId">
    /// The RecId corresponds the RecID field.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean that determines whether to read the record for updating; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A value used when the table is not automatically concurrent; optional.
    /// </param>
    /// <returns>
    /// A <c>CustInterestTransLine</c> table buffer.
    /// </returns>
    /// <remarks>
    /// A public method to find <c>CustInterestTransLineIdRef</c> records.
    /// </remarks>
    public static CustInterestTransLineIdRef find(recId _recId ,
                                                  boolean                 _forupdate = false,
                                                  ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInterestTransLineIdRef custInterestTransLineIdRef;

        custInterestTransLineIdRef.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInterestTransLineIdRef.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            custInterestTransLineIdRef
                where
                custInterestTransLineIdRef.RecId == _recId;

        return custInterestTransLineIdRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS1119</DeveloperDocumentation>
	<Label>@SPS550</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CustInterestLineType</TitleField1>
	<TitleField2>InstanceRelationType</TitleField2>
	<Abstract>Yes</Abstract>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>AccountsReceivable</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInterestLineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInterestLineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustInterestLineType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>CustInterestLineType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
			<Label>@SYS133857</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>