<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventTransOriginQuarantineTo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSInventTransOriginQuarantineTo extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator of the work quarantine receipt transaction and the work quarantine transaction.
    /// </summary>
    /// <param name="_workQuarantineRecId">
    /// The ID of the work quarantine receipt transaction.
    /// </param>
    public static void deleteOwnerRelationship(WHSWorkQuarantineRecId _workQuarantineRecId)
    {
        WHSInventTransOriginQuarantineTo    inventTransOriginQuarantineTo;

        ttsbegin;

        delete_from inventTransOriginQuarantineTo
            where inventTransOriginQuarantineTo.workQuarantineReceipt == _workQuarantineRecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ID of the inventory transactions originator of the work quarantine receipt transaction for the work quarantine transaction.
    /// </summary>
    /// <param name="_workQuarantineRecId">
    /// The ID of the work quarantine receipt transaction.
    /// </param>
    /// <returns>
    /// The ID of the inventory transactions originator.
    /// </returns>
    public static InventTransOriginId findInventTransOriginId(WHSWorkQuarantineRecId _workQuarantineRecId)
    {
        WHSInventTransOriginQuarantineTo    inventTransOriginQuarantineTo;

        if (_workQuarantineRecId)
        {
            select firstonly InventTransOrigin
                from inventTransOriginQuarantineTo
                    where inventTransOriginQuarantineTo.workQuarantineReceipt == _workQuarantineRecId;
        }

        return inventTransOriginQuarantineTo.InventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workQuarantine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the work quarantine receipt transaction to the ID of the inventory transactions originator.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the
    /// <c>InventTransOrigin</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the buffer should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A related record in the <c>WHSWorkQuarantine</c> table, if one exists; otherwise, an empty record.
    /// </returns>
    public static WHSWorkQuarantine workQuarantine(
        InventTransOriginId     _inventTransOriginId,
        boolean                 _forUpdate = false)
    {
        WHSWorkQuarantine                   workQuarantine;
        WHSInventTransOriginQuarantineTo    inventTransOriginQuarantineTo;

        workQuarantine.selectForUpdate(_forUpdate);

        if (_inventTransOriginId)
        {
            select firstonly workQuarantine
                exists join inventTransOriginQuarantineTo
                where inventTransOriginQuarantineTo.workQuarantineReceipt == workQuarantine.RecId
                   && inventTransOriginQuarantineTo.InventTransOrigin     == _inventTransOriginId;
        }

        return workQuarantine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the relationship between the inventory transactions originator of the work quarantine receipt transactions and the work quarantine transaction.
    /// </summary>
    /// <param name="_workQuarantineRecId">
    /// The ID of the work quarantine receipt transaction.
    /// </param>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void writeOriginOwnerRelationship(WHSWorkQuarantineRecId   _workQuarantineRecId,
                                                           InventTransOriginId      _inventTransOriginId)
    {
        WHSInventTransOriginQuarantineTo inventTransOriginQuarantineTo;
        Counter                          logCount = infologLine();

        ttsbegin;

        try
        {
            inventTransOriginQuarantineTo.workQuarantineReceipt = _workQuarantineRecId;
            inventTransOriginQuarantineTo.InventTransOrigin     = _inventTransOriginId;
            inventTransOriginQuarantineTo.insert();
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == inventTransOriginQuarantineTo.TableId)
            {
                update_recordset inventTransOriginQuarantineTo
                    setting InventTransOrigin = _inventTransOriginId
                    where inventTransOriginQuarantineTo.workQuarantineReceipt == _workQuarantineRecId
                        && inventTransOriginQuarantineTo.InventTransOrigin    != _inventTransOriginId;
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
            infolog.clear(logCount);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4534</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@WAX3506</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventTransOrigin</TitleField1>
	<TitleField2>workQuarantineReceipt</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WorkQuarantineReceiptIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>WorkQuarantineReceiptIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>workQuarantineReceipt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>workQuarantineReceipt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>workQuarantineReceipt</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkQuarantineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkQuarantineReceiptIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>workQuarantineReceipt</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_InventTransOriginSalesLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorkQuarantine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkQuarantine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>workQuarantineReceipt</Name>
					<Field>workQuarantineReceipt</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>