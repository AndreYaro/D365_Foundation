<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxFiscalDocumentLine_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxFiscalDocumentLine_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canFiscalDocTextBeRegistrated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if Fiscal document texts can be registered to the tax document line
    /// </summary>
    /// <returns>
    /// True if the Fiscal document text can be registered; false otherwise.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean canFiscalDocTextBeRegistrated()
    {
        return this.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCFOPTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the record from <c>CFOPTable_BR</c> corresponding to this line.
    /// </summary>
    /// <returns>
    /// Record from <c>CFOPTable_BR</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CFOPTable_BR getCFOPTable()
    {
        return CFOPTable_BR::find(this.cfopTable_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger dimension default account for this line.
    /// </summary>
    /// <returns>
    /// <c>LedgerDimensionDefaultAccount</c> for this line.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// There is no ledger posting group for tax code being used.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerDimensionDefaultAccount getLedgerDimension()
    {
        TaxTable taxTable;
        LedgerDimensionDefaultAccount ret;

        taxTable = TaxTable::find(this.TaxCode);
        ret = TaxLedgerAccountGroup::find(taxTable.TaxAccountGroup).TaxIncomingLedgerDimension;
        if (!ret)
        {
            throw error("@GLS63564");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerDimensionOffset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger dimension offset account for this line.
    /// </summary>
    /// <returns>
    /// <c>LedgerDimensionDefaultAccount</c> for the offsetaccount for this line.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// There is no ledger posting group for tax code being used.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerDimensionDefaultAccount getLedgerDimensionOffset()
    {
        TaxFiscalDocument_BR taxFiscalDocument = this.taxFiscalDocument();
        TaxTable taxTable;
        LedgerDimensionDefaultAccount ret;

        if (taxFiscalDocument.TaxFiscalDocumentType == TaxFiscalDocumentType_BR::ICMSInstallment)
        {
            taxTable = TaxTable::find(this.TaxCode);
            ret = TaxLedgerAccountGroup::find(taxTable.TaxAccountGroup).TaxIncomingShortTermLedgerDimension_BR;
            if (!ret)
            {
                throw error("@GLS63564");
            }
        }
        else if (taxFiscalDocument.AccountType == CustVendType_BR::Customer)
        {
            taxFiscalDocument = this.taxFiscalDocument();
            ret = CustLedgerAccounts::findTaxTransferAccount_BR(taxFiscalDocument.AccountNum);
        }
        else
        {
            taxFiscalDocument = this.taxFiscalDocument();
            ret = VendLedgerAccounts::findTaxTransferAccount_BR(taxFiscalDocument.AccountNum);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxFiscalDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the record from another <c>TaxFiscalDocumentLine_BR</c>.
    /// </summary>
    /// <param name="_taxFiscalDocLine">
    /// <c>TaxFiscalDocumentLine_BR</c> to initialized from.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    void initFromTaxFiscalDocumentLine(TaxFiscalDocumentLine_BR _taxFiscalDocLine)
    {
        this.Description  = _taxFiscalDocLine.Description;
        this.Amount       = _taxFiscalDocLine.Amount;
        this.cfopTable_BR = _taxFiscalDocLine.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();
        this.updateFiscalDocumentText(FiscalDocumentTextType_BR::CFOP);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReturnedItem_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the transaction represented by the mapped table is for returned items.
    /// </summary>
    /// <returns>
    ///     Boolean value indicating whether the transaction is for returned items.
    /// </returns>
    /// <remarks>
    ///     This method must be implemented in all mapped tables.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    boolean isReturnedItem_BR()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles modified field event, updating dependent data accordingly.
    /// </summary>
    /// <param name="_fieldId">
    /// ID of the field being modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TaxFiscalDocumentLine_BR, CFOPTable_BR):
                this.updateFiscalDocumentText(FiscalDocumentTextType_BR::CFOP);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxFiscalDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the header of this tax fiscal document line.
    /// </summary>
    /// <returns>
    /// The header of this tax fiscal document line.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxFiscalDocument_BR taxFiscalDocument()
    {
        return TaxFiscalDocument_BR::findRecId(this.TaxFiscalDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFiscalDocumentText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the Fiscal document texts of a specific type on the tax fiscal document line.
    /// </summary>
    /// <param name="_type">
    /// A <c>FiscalDocumentTextType_BR</c> value indicating the type.
    /// </param>
    /// <remarks>
    /// This method does nothing if the tax fiscal document line has not been inserted yet.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateFiscalDocumentText(FiscalDocumentTextType_BR _type)
    {
        if (this.canFiscalDocTextBeRegistrated())
        {
            FiscalDocumentTextUpdate_BR::newFromRecord(this).updateTexts(_type);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(TaxFiscalDocumentLine_BR, cfopTable_BR):
                ret = ret && CFOPValidation_BR::construct(this).checkCFOP();
                break;

            case fieldNum(TaxFiscalDocumentLine_BR, Amount):
                if (!this.taxFiscalDocument().TaxFiscalDocToCancelRecID &&
                    this.Amount < 0)
                {
                    ret = checkFailed("@GLS431");
                }
                break;

            case fieldNum(TaxFiscalDocumentLine_BR, TaxCode):
                ret = ret && this.validateTaxCode();
               break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTaxationCode</Name>
				<Source><![CDATA[
    private boolean validateTaxationCode(TaxFiscalValue_BR _fiscalValue)
    {
        boolean ret = true;
        TaxTable taxTable = TaxTable::find(this.TaxCode);
        TaxationCodeTable_BR taxationCode = TaxationCodeTable_BR::findRecId(taxTable.TaxationCodeTable_BR);
        
        if (taxationCode.FiscalValue != _fiscalValue)
        {
            ret = checkFailed(strFmt("@FiscalBooks_SpedFiscal:FiscalValueCheck", taxationCode.FiscalValue, _fiscalValue));
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTaxCode</Name>
				<Source><![CDATA[
    private boolean validateTaxCode()
    {
        TaxFiscalDocument_BR taxFiscalDocument = this.TaxFiscalDocument();
        TaxFiscalValue_BR fiscalValue = TaxFiscalValue_BR::WithCreditDebit;
        
        if (taxFiscalDocument.TaxFiscalDocumentType == TaxFiscalDocumentType_BR::ICMSTaxTransfer)
        {
            LogisticsPostalAddress establishmentPostalAddress = FiscalEstablishment_BR::findById(taxFiscalDocument.FiscalEstablishmentId).postalAddress();

            if (FBParametersPerState_BR::find(establishmentPostalAddress).EnableDocumentAdjustment)
            {
                fiscalValue = TaxFiscalValue_BR::WithoutCreditDebitOther;
            }
        }

        return this.validateTaxationCode(fiscalValue);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>TaxFiscalDocumentLine_BR</c> from its RecID.
    /// </summary>
    /// <param name="_recId">
    /// Record ID of the record to be looked for.
    /// </param>
    /// <param name="_forUpdate">
    /// true if the record may be updated; false otherwise. Optional.
    /// </param>
    /// <returns>
    /// <c>TaxFiscalDocumentLine_BR</c> with the given record ID.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxFiscalDocumentLine_BR findRecId(RecId _recId, boolean _forUpdate = false)
    {
        TaxFiscalDocumentLine_BR  taxFiscalDocLine;

        if (_forUpdate)
        {
            taxFiscalDocLine.selectForUpdate(_forUpdate);
        }

        select firstonly taxFiscalDocLine
            where taxFiscalDocLine.RecId == _recId;

        return taxFiscalDocLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@GLS220226</DeveloperDocumentation>
	<Label>@GLS220179</Label>
	<SingularLabel>@GLS220179</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Description</TitleField1>
	<TitleField2>Amount</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>FiscalBooksBrazil</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS40777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxFiscalDocument</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LineDetail</Name>
			<Label>@SYS23823</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFOPTable_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineAmount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CFOPTable_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS200</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS58702</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxFiscalDocument</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxFiscalDocument_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxFiscalDocument</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CFOPTable_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CFOPTable_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CFOPTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CFOPTable_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CFOPTable_BR</Name>
					<Field>CFOPTable_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxFiscalDocument_BR</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TaxFiscalDocument_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxFiscalDocument</Name>
					<Field>TaxFiscalDocument</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>