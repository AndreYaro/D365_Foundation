<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailImageResource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailImageResource extends RetailMediaResource
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>FileExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the image type by inferring it from the FileName.
    /// </summary>
    /// <returns></returns>
    public display str FileExtension()
    {
        var list = Global::strSplit(this.FileName, '.');
        ListIterator iterator = new ListIterator(list);
        str imageType = '';
        while (iterator.more())
        {
            imageType = iterator.value();
            iterator.next();
        }
        return imageType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// initialize
    /// </summary>
    public void initValue()
    {
        super();
        this.ResourceId = RetailMediaResource::getNextResourceId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by RecId
    /// </summary>
    /// <param name = "_recId">RecId</param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>RetailImageResource record</returns>
    public static RetailImageResource find(RecId _recId, boolean _forUpdate = false)
    {
        RetailImageResource gallery;
        if (_recId)
        {
            gallery.selectForUpdate(_forUpdate);

            select firstonly gallery
             where gallery.RecId == _recId;
        }
        return gallery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by FileName
    /// </summary>
    /// <param name = "_fileName">FileName</param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>RetailImageResource record</returns>
    public static RetailImageResource findByName(str _fileName, boolean _forUpdate = false)
    {
        RetailImageResource gallery;
        if (_fileName)
        {
            gallery.selectForUpdate(_forUpdate);

            select firstonly gallery
             where gallery.FileName == _fileName;
        }

        return gallery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByResourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by ResourceId
    /// </summary>
    /// <param name = "_resourceId"></param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>RetailImageResource record</returns>
    public static RetailImageResource findByResourceId(int _resourceId, boolean _forUpdate = false)
    {
        RetailImageResource gallery;
        if (_resourceId)
        {
            gallery.selectForUpdate(_forUpdate);

            select firstonly gallery
             where gallery.ResourceId == _resourceId;
        }

        return gallery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByImageUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by the image url.
    /// </summary>
    /// <param name = "imageUrl">The image url.</param>
    /// <returns>RetailImageResource record.</returns>
    public static RetailImageResource findByImageUrl(str imageUrl)
    {
        RetailImageResource gallery;
        if (imageUrl)
        {
            select firstonly gallery
             where gallery.ResourceUrl == imageUrl;
        }

        return gallery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInUseStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the InUse value.
    /// </summary>
    /// <param name = "resourceId">ResourceId</param>
    /// <param name = "status">status value</param>
    public static void updateInUseStatus(int resourceId, NoYes status)
    {
        RetailImageResource gallery;
        boolean _forUpdate = true;
        if (resourceId)
        {
            gallery.selectForUpdate(_forUpdate);

            select firstonly gallery
             where gallery.ResourceId == resourceId;

            if (gallery)
            {
                ttsbegin;
                gallery.InUse = status;
                gallery.update();
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>thumbnailImage</Name>
				<Source><![CDATA[
    /// <summary>
    /// This Data method generate the thumbnail size image on the fly and return the same.
    /// </summary>
    /// <returns>The thumbnail image.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display container thumbnailImage()
    {
        container imageContainer;
        if (RetailMediaHelper::isAbsoluteURL(this.ResourceUrl))
        {
            System.Net.WebRequest request = System.Net.WebRequest::Create(this.ResourceUrl);
            System.Net.WebResponse response = request.GetResponse();

            using (System.IO.Stream connectedStream = response.GetResponseStream())
            {
                var thumbnailImageStream = RetailMediaHelper::getResizedImage(connectedStream, RetailMediaHelper::ThumbnailImageSize);

                if (thumbnailImageStream)
                {
                    imageContainer = Binary::constructFromMemoryStream(thumbnailImageStream).getContainer();
                }
            }
        }

        return imageContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>smallImage</Name>
				<Source><![CDATA[
    /// <summary>
    /// This Data method generate the custom or small size image on the fly and return the same.
    /// </summary>
    /// <returns>The custom size image.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display container smallImage()
    {
        container imageContainer;
        if (RetailMediaHelper::isAbsoluteURL(this.ResourceUrl))
        {
            System.Net.WebRequest request = System.Net.WebRequest::Create(this.ResourceUrl);
            System.Net.WebResponse response = request.GetResponse();

            using (System.IO.Stream connectedStream = response.GetResponseStream())
            {
                var customImageStream = RetailMediaHelper::getResizedImage(connectedStream, RetailMediaHelper::CustomImageSize);

                if (customImageStream)
                {
                    imageContainer = Binary::constructFromMemoryStream(customImageStream).getContainer();
                }
            }
        }

        return imageContainer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Extends>RetailMediaResource</Extends>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Merchandising</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThumbnailUrl</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LongURL</ExtendedDataType>
			<Label>@RetailMediaGalleryLabels:ThumbnailUrl</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SmallImageUrl</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LongURL</ExtendedDataType>
			<Label>@RetailMediaGalleryLabels:SmallImageUrl</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ThumbnailBlob</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:ThumbnailBinary</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SmallImageBlob</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:SmallImageBinary</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ThumbnailSharedStorageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:SharedStorageId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>SmallImageSharedStorageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:SharedStorageId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Width</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Width</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Height</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Height</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPos</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:POS</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCatalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Catalogs</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Categories</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsProduct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Products</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsWorker</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Workers</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCustomer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Customers</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsColor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Color</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSize</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Size</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsStyle</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:Style</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IsCatalogIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsCatalog</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsCategoriesIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsProductIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsProduct</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsPOSIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsPos</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsCustomerIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsCustomer</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsWorkerIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsColorIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsColor</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsSizeIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IsSize</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsStyleIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IsStyle</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailMediaResource</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailMediaResource</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>