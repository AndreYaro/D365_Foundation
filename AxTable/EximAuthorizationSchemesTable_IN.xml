<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximAuthorizationSchemesTable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximAuthorizationSchemesTable_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableSale</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables Sale MenuItem for the selected EximAuthorizationSchemesTable_IN record.
    /// </summary>
    /// <returns>true if the ImportExpiryDate is greater than the systemDate for the selected EximAuthorizationSchemesTable_IN record with the status Original or Extended.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean enableSale()
    {
        EximAuthorizationSchemesLine_IN authorizationSchemesLine;
        boolean                         status = true;

        status = this.Closed ? false : true;

        if (status)
        {
            select maxof(ImportExpiryDate) from authorizationSchemesLine
               where authorizationSchemesLine.AuthorizationSchemesTableRecId == this.RecId
                  && (authorizationSchemesLine.LicenseStatus                 == EximLicenseStatus_IN::Original
                  || authorizationSchemesLine.LicenseStatus                  == EximLicenseStatus_IN::Extended);

            status = authorizationSchemesLine.ImportExpiryDate < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) ? false : true;
        }

        if (status
            && EximExportTrans_IN::cumulativeAssessableValue(this.RecId) <
            EximAuthorizationSchemesLine_IN::exportAssessableValue(this.RecId))
        {
            status = false;
        }
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.AuthorizationDateTime = DateTimeUtil::getSystemDateTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldnum(EximAuthorizationSchemesTable_IN, AuthorizationBasis):
                    switch (this.AuthorizationType)
                    {
                        case EximAuthorizationType_IN::AA:
                            if (this.AuthorizationBasis == EximAuthorizationBasis_IN::Purchase
                                && !EximParameters_IN::find().aaAllowPurchase)
                            {
                                ret = checkFailed(strfmt("@GLS61547", "@GLS61548", "@GLS61572", "@SYS53872"));
                            }
                            break;

                        case EximAuthorizationType_IN::DFIA:
                            if (this.AuthorizationBasis == EximAuthorizationBasis_IN::AnnualConsumption)
                            {
                                ret = checkFailed("@GLS61546");
                            }
                            else if (this.AuthorizationBasis == EximAuthorizationBasis_IN::Purchase
                                     && !EximParameters_IN::find().dfiaAllowPurchase)
                            {
                                ret = checkFailed(strfmt("@GLS61547", "@GLS61548", "@GLS61582", "@SYS53872"));
                            }
                            break;
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableSchemesButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the EXIM AA/DFIA Inquiry needs to be enabled at salesOrders.
    /// </summary>
    /// <param name="_salesLineRecId">SalesLine RecId</param>
    /// <param name="_authorizationType">EximAuthorizationType_IN</param>
    /// <param name="_authorizationBasis">EximAuthorizationBasis_IN</param>
    /// <returns>true if the Exim AA/DFIA Inquiry needs to be enabled at SalesOrders otherwise false</returns>
    public static boolean enableSchemesButton(
        RefRecId                  _salesLineRecId,
        EximAuthorizationType_IN  _authorizationType,
        EximAuthorizationBasis_IN _authorizationBasis)
    {
        EximAuthorizationSchemesTable_IN authorizationSchemesTable;
        EximIncentiveSchemeData_IN       incentiveSchemeData;
        EximSalesLine_IN                 eximSalesLine;

        select firstonly RecId from eximSalesLine
            where eximSalesLine.SalesLineRecId == _salesLineRecId
        join RecId from incentiveSchemeData
            where incentiveSchemeData.EximIncentiveSchemeGroup == eximSalesLine.EximIncentiveSchemeGroup
               && incentiveSchemeData.IncentiveScheme          == _authorizationType
        join RecId from authorizationSchemesTable
            where authorizationSchemesTable.AuthorizationId    == incentiveSchemeData.AuthorizationId
               && authorizationSchemesTable.AuthorizationType  == _authorizationType
               && authorizationSchemesTable.AuthorizationBasis == _authorizationBasis;

        return authorizationSchemesTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if EximAuthorizationSchemesTable_IN record exists for given AuthorizationId and AuthorizationType.
    /// </summary>
    /// <param name="_authorizationType">EximAuthorizationType_IN</param>
    /// <param name="_authorizationId">EximAuthorizationId_IN</param>
    /// <returns>true if the EximAuthorizationSchemesTable_IN record found otherwise, false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(
        EximAuthorizationType_IN _authorizationType,
        EximAuthorizationId_IN   _authorizationId)
    {
        return _authorizationId
            && (select firstonly RecId from eximAuthorizationSchemesTable_IN
                    where eximAuthorizationSchemesTable_IN.AuthorizationType == _authorizationType
                       && eximAuthorizationSchemesTable_IN.AuthorizationId   == _authorizationId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximAuthorizationSchemesTable_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximAuthorizationSchemesTable_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximAuthorizationSchemesTable_IN find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximAuthorizationSchemesTable_IN    eximAuthorizationSchemesTable;

        eximAuthorizationSchemesTable.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximAuthorizationSchemesTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximAuthorizationSchemesTable
            where eximAuthorizationSchemesTable.RecId == _recId;

        return eximAuthorizationSchemesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAuthorizationTypeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximAuthorizationSchemesTable_IN table for the specified AuthorizationId and EximAuthorizationType_IN.
    /// </summary>
    /// <param name="_authorizationType">EximAuthorizationType_IN</param>
    /// <param name="_authorizationId">EximAuthorizationId_IN</param>
    /// <param name="_forUpdate">selectForUpdate</param>
    /// <returns>true if the EximAuthorizationSchemesTable_IN record is found otherwise, false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximAuthorizationSchemesTable_IN findByAuthorizationTypeId(
        EximAuthorizationType_IN _authorizationType,
        EximAuthorizationId_IN   _authorizationId,
        boolean                  _forUpdate = false)
    {
        EximAuthorizationSchemesTable_IN authorizationSchemesTable;

        if (_authorizationId)
        {
            authorizationSchemesTable.selectForUpdate(_forUpdate);

            select firstonly authorizationSchemesTable
                where authorizationSchemesTable.AuthorizationType == _authorizationType
                   && authorizationSchemesTable.AuthorizationId   == _authorizationId;
        }

        return authorizationSchemesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAuthSchemesTableRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the EximAuthorizationSchemesTable_IN RecId for specified PurchLine RecId and EximAuthorizationType_IN.
    /// </summary>
    /// <param name="_purchLine">PurchLine RecId</param>
    /// <param name="_authorizationType">EximAuthorizationType_IN</param>
    /// <returns>recId of EximAuthorizationSchemesTable_IN record for specified PurchLine RecId and EximAuthorizationType_IN</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RecId getAuthSchemesTableRecId(
        PurchLine                _purchLine,
        EximAuthorizationType_IN _authorizationType)
    {
        EximIncentiveSchemeData_IN       incentiveSchemeData;
        EximAuthorizationSchemesTable_IN authorizationSchemesTable;
        EximPurchLine_IN                 eximPurchLine;

        select firstonly EximIncentiveSchemeGroup
            from eximPurchLine
                where eximPurchLine.PurchLineRecId == _purchLine.RecId
            join AuthorizationId
                from incentiveSchemeData
                    where incentiveSchemeData.EximIncentiveSchemeGroup == eximPurchLine.EximIncentiveSchemeGroup
                       && incentiveSchemeData.IncentiveScheme          == _authorizationType
            join RecId
                from authorizationSchemesTable
                    where authorizationSchemesTable.AuthorizationType  == _authorizationType
                       && authorizationSchemesTable.AuthorizationId    == incentiveSchemeData.AuthorizationId;

        return authorizationSchemesTable.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62424</DeveloperDocumentation>
	<Label>@GLS61540</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>AuthorizationType</TitleField1>
	<TitleField2>AuthorizationId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>AuthorizationTypeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EximAnnualConsumption_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximAnnualConsumption_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximAuthorizationSchemeReference_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximAuthorizationSchemeReference_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximAuthorizationSchemesLine_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximAuthorizationSchemesLine_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximConfirmOrderTable_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximConfirmOrderTable_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximExportOrderTable_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximExportOrderTable_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximImportableItems_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximImportableItems_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>EximSummaryImportableItems_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximSummaryImportableItems_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthorizationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthorizationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AuthorizationIssueDate</Name>
			<Label>@SYS7402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthorizationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthorizationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EximProductGroupTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximPorts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transferable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Closed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SplitApproved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AuthorizationBasis</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EximAuthorizationBasis_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>AuthorizationDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<Label>@SYS81047</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuthorizationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximAuthorizationId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AuthorizationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EximAuthorizationType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Closed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS18742</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EximPorts</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS61500</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EximProductGroupTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS58238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>IssueDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS126646</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EximLicenseNum_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitApproved</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS62278</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EximAuthorizationStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transferable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS61647</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AuthorizationTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AuthorizationType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AuthorizationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EximProductGroupTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EximProductGroupTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EximPortsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EximPorts</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximPorts</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximPorts_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximPorts_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximPorts_IN_EximAuthorizationSchemesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EximPorts</Name>
					<Field>EximPorts</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximProductGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximProductGroupTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximProductGroupTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximProductGroupTable_IN_EximAuthorizationSchemesTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EximProductGroupTable</Name>
					<Field>EximProductGroupTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>