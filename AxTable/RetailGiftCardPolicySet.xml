<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailGiftCardPolicySet</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailGiftCardPolicySet extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailGiftCardPolicySet, ValidityPeriod):
                this.FixedExpiryDate = dateNull();
                break;
            case fieldNum(RetailGiftCardPolicySet, FixedExpiryDate):
                this.ValidityPeriod = 0;
                break;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateNoNumberRangesOverlaping</Name>
				<Source><![CDATA[
    private boolean validateNoNumberRangesOverlaping()
    {
        RetailGiftCardPolicySet giftCardPolicySet;

        //Select existing policy set with number range that intersects with current record one.
        select firstOnly RecId, NumberFrom, NumberTo from giftCardPolicySet
                                            where giftCardPolicySet.RecId != this.RecId && giftCardPolicySet.NumberFrom <= this.NumberTo && giftCardPolicySet.NumberTo >= this.NumberFrom;

        if (!(giftCardPolicySet.RecId == 0))
        {
            return checkFailed(strFmt("@SYP4880778", giftCardPolicySet.NumberFrom, giftCardPolicySet.NumberTo));
        }
        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateNumberRangesAreFilledIn</Name>
				<Source><![CDATA[
    private boolean validateNumberRangesAreFilledIn()
    {
        boolean retValue = true;

        if (!this.NumberFrom)
        {
            retValue = checkFailed(strFmt("@SYS26332", fieldStr(RetailGiftCardPolicySet, NumberFrom)));
        }

        if (!this.NumberTo)
        {
            retValue = checkFailed(strFmt("@SYS26332", fieldStr(RetailGiftCardPolicySet, NumberTo)));
        }

        return retValue;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateNumberRangesValues</Name>
				<Source><![CDATA[
    private boolean validateNumberRangesValues()
    {
        boolean retValue = true;

        // NumberFrom should be less or equal to the NumberTo field.
        if (strCmp(this.NumberTo, this.NumberFrom) == -1)
        {
            retValue = checkFailed(strFmt("@SYS91558",
                fieldId2pname(tableNum(RetailGiftCardPolicySet), fieldNum(RetailGiftCardPolicySet, NumberTo)),
                fieldId2pname(tableNum(RetailGiftCardPolicySet), fieldNum(RetailGiftCardPolicySet, NumberFrom))));
        }

        return retValue;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (!this.IsDefault && !this.validateNumberRangesAreFilledIn())
        {
            ret = false;
        }

        if (ret && !this.IsDefault && !this.validateNumberRangesValues())
        {
            ret = false;
        }

        if (ret && !this.IsDefault && !this.validateNoNumberRangesOverlaping())
        {
            ret =  false;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailGiftCardPolicySet</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>RetailGiftCardPolicySet</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailGiftCardPolicySet</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailGiftCardPolicySet find(RecId _recId, boolean _forUpdate = false)
    {
        RetailGiftCardPolicySet policySet;

        policySet.selectForUpdate(_forUpdate);

        select firstonly policySet
            where policySet.RecId == _recId;

        return policySet;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findByGiftCardNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns the gift card policy set which has number range that includes gift card number.
    /// </summary>
    /// <param name="_cardNumber">
    /// The gift card number.
    /// </param>
    /// <returns>
    /// The gift card policy set record.
    /// </returns>
    public static RetailGiftCardPolicySet findByGiftCardNumber(RetailGiftCardId _cardNumber)
    {
        RetailGiftCardPolicySet policySet;

        //Select policy set for the certain gift card number. The gift card number should belongs to policy number ranges and policy
        //shouldbn't be default.
        select firstonly policySet
            where policySet.IsDefault == false && policySet.NumberFrom <= _cardNumber && policySet.NumberTo >= _cardNumber;

        return policySet;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates the default gift card policy set in the <c>RetailGiftCardPolicySet</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>RetailGiftCardPolicySet</c> table.
    /// </returns>
    public static RetailGiftCardPolicySet findOrCreateDefault(boolean _forUpdate = false)
    {
        RetailGiftCardPolicySet policySet;

        policySet.selectForUpdate(_forUpdate);

        select firstonly policySet
            where policySet.IsDefault == true;

        if (!policySet && !policySet.isTmp())
        {
            policySet.IsDefault = true;
            Company::createParameter(policySet);
        }

        return policySet;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateDefaultByGiftCardNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns the according gift card policy set for a gift card number.
    /// </summary>
    /// <param name="_cardNumber">
    /// The gift card number.
    /// </param>
    /// <returns>
    /// the gift card policy set which has number range that includes gift card number or default gift card policy set if none of set ranges include the given card number.
    /// </returns>
    public static RetailGiftCardPolicySet findOrCreateDefaultByGiftCardNumber(RetailGiftCardId _cardNumber)
    {
        RetailGiftCardPolicySet policySet = RetailGiftCardPolicySet::findByGiftCardNumber(_cardNumber);

        if (!policySet)
        {
            policySet = RetailGiftCardpolicySet::findOrCreateDefault();
        }

        return policySet;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4880736</DeveloperDocumentation>
	<Label>@SYP4880735</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>NonReloadable</TitleField1>
	<TitleField2>OneTimeRedemption</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Payments</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedExpiryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxBalanceMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinReloadMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonReloadable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OneTimeRedemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedExpiryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxBalanceMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinReloadMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonReloadable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OneTimeRedemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Balance</Name>
			<Label>@SYP4880752</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinReloadMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxBalanceMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonReloadable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FaceValue</Name>
			<Label>@SYP4880773</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FaceValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NumberRange</Name>
			<Label>@SYP4880768</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Redemption</Name>
			<Label>@SYP4880753</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OneTimeRedemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValidityPeriod</Name>
			<Label>@SYP4880751</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedExpiryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ActivationPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Hours</ExtendedDataType>
			<Label>@SYP4880737</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FaceValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardFaceValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FixedExpiryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYP4880741</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxBalanceMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardMaxBalanceMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinReloadMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardMinReloadMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NonReloadable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardNonReloadable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardNumberFrom</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberTo</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardNumberTo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OneTimeRedemption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardOneTimeRedemption</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ValidityPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PositiveDays</ExtendedDataType>
			<Label>@SYP4880739</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>