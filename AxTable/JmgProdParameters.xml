<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgProdParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgProdParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes nothing in the database.
    /// </summary>
    /// <remarks>
    /// The delete method is overridden to make sure that the <c>JmgProdParameters</c> record is not
    /// deleted by accident.
    /// </remarks>
    public void delete()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.BundleAllocation                   = JmgStdBundleTypeEnum::NetTime;
        this.StampLevel                         = JmgStampLevel::Route;
        this.ProdParamInventDimLookup           = ProdParamInventDimLookup::Company;
        this.PieceRateIndividual                = NoYes::No;
        this.PieceRateType                      = JmgPieceRateType::basicQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>JmgProdParameters</c> record from the database.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether the returned record must be selected for update.
    /// </param>
    /// <returns>
    /// The <c>JmgProdParameters</c> record from the database.
    /// </returns>
    public static JmgProdParameters find(boolean _forUpdate = false)
    {
        JmgProdParameters jmgProdParameters;
        jmgProdParameters.selectForUpdate(_forUpdate);

        select firstonly jmgProdParameters
            where jmgProdParameters.Key == 0;

        if (!jmgProdParameters && !jmgProdParameters.isTmp())
        {
           Company::createParameter(jmgProdParameters);
        }

        return jmgProdParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the site ID from the <see cref="T:InventDim" /> record specified, otherwise, the default <see
    ///    cref="T:InventDim" /> record is returned.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The ID of the <see cref="T:InventDim" /> record to get the site from.
    /// </param>
    /// <returns>
    ///    If the <see cref="T:JmgProdParameters" /> field <c>ProdParamInventDimLookup</c> value is set to
    ///    <c>ProdParamInventDimLookup::Site</c>, then the Site ID field in the <see cref="T:InventDim" />
    ///    record of the specified <c>InventDimId</c> is extracted and the <see cref="T:InventDim" /> record
    ///    only containing this field is returned, otherwise, the default <see cref="T:InventDim" /> record is
    ///    returned.
    /// </returns>
    public static InventDimId resolveInventDimId(InventDimId _inventDimId)
    {
        InventDim           inventDim;
        InventDimId         inventDimId;
        JmgProdParameters   jmgProdParameters = JmgProdParameters::find();

        inventDimId = _inventDimId;

        //Do not allow lookup on specific inventDimId if set to only seach on company level
        if (jmgProdParameters.ProdParamInventDimLookup == ProdParamInventDimLookup::Company)
            inventDimId = InventDim::inventDimIdBlank();

        if (inventDimId != InventDim::inventDimIdBlank())
        {
            //Compose the dimension to search for
            if (jmgProdParameters.ProdParamInventDimLookup == ProdParamInventDimLookup::Site)
                inventDim.InventSiteId = InventDim::find(_inventDimId).InventSiteId;

            inventDimId = InventDim::findOrCreate(inventDim).InventDimId;
        }

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret && _fieldIdToCheck == fieldNum(JmgProdParameters, StampLevel))
        {
            info("@SCM:JmgProdParametersStampLevelChanged");
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgJob</ConfigurationKey>
	<DeveloperDocumentation>@SYS317290</DeveloperDocumentation>
	<Label>@SYS106204</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>Key</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BundleAllocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StampLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdParamInventDimLookup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Bundle</Name>
			<Label>@SYS39422</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BundleAllocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>JobLevel</Name>
			<Label>@SYS39112</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StampLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Key</Name>
			<Label>@SYS1232</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ParameterLookup</Name>
			<Label>@SYS109013</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdParamInventDimLookup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Piecework</Name>
			<Label>@SYS711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PieceRateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PieceRateIndividual</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BundleAllocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgStdBundleType</ExtendedDataType>
			<EnumType>JmgStdBundleTypeEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PieceRateIndividual</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS39324</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PieceRateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JmgPieceRateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdParamInventDimLookup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProdParamInventDimLookup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StampLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JmgStampLevel</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>