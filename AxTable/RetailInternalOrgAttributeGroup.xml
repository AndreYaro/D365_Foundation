<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInternalOrgAttributeGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInternalOrgAttributeGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// delete from <c>RetailInternalOrgAttributeGroup</c> and sync based on flag
    /// </summary>
    /// <param name="_syncToRetailChannelAttGrp">
    /// whether to sync changes to <c>RetailChannelTable</c>
    /// </param>
    /// <remarks>
    /// delete and sync changes to <c>RetailChannelTable</c> based on flag
    /// </remarks>
    public void delete(boolean _syncToRetailChannelAttGrp = true)
    {
        RetailInternalOrganization retailInternalOrganization;
        RetailChannelAttributeGroup retailChannelAttributeGroup;
        RetailChannelTable retailChannelTable;

        ttsBegin;

        if (_syncToRetailChannelAttGrp)
        {
            select forUpdate firstOnly retailChannelAttributeGroup
                where retailChannelAttributeGroup.AttributeGroup == this.AttributeGroup
                    && retailChannelAttributeGroup.Modifier == this.Modifier
                exists join retailChannelTable
                    where retailChannelTable.RecId == retailChannelAttributeGroup.Channel
                exists join retailInternalOrganization
                    where retailInternalOrganization.InternalOrganization == retailChannelTable.OMOperatingUnitID
                        && retailInternalOrganization.RecId == this.InternalOrganization;

            if (retailChannelAttributeGroup)
            {
                retailChannelAttributeGroup.delete(false);
            }
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// insert into <c>RetailInternalOrgAttributeGroup</c> and sync based on flag
    /// </summary>
    /// <param name="_syncToChannelAttribute">
    /// whether to sync changes to <c>RetailChannelTable</c>
    /// </param>
    /// <remarks>
    /// insert and propagate change
    /// </remarks>
    public void insert(boolean _syncToChannelAttribute = true)
    {
        RetailInternalOrganization retailInternalOrganization;
        RetailChannelAttributeGroup retailChannelAttributeGroup;
        RetailChannelTable retailChannelTable;

        ttsBegin;

        super();

        if (_syncToChannelAttribute)
        {
             select firstOnly RecId, InternalOrganization from retailInternalOrganization
                where retailInternalOrganization.RecId == this.InternalOrganization
                join RecId, OMOperatingUnitID from retailChannelTable
                    where retailChannelTable.OMOperatingUnitID == retailInternalOrganization.InternalOrganization
                outer join Channel, AttributeGroup from retailChannelAttributeGroup
                    where retailChannelAttributeGroup.Channel == retailChannelTable.RecId
                        && retailChannelAttributeGroup.AttributeGroup == this.AttributeGroup
                            && retailChannelAttributeGroup.Modifier == this.Modifier;

                if (!retailChannelAttributeGroup && retailChannelTable)
                {
                    retailChannelAttributeGroup.Channel = retailChannelTable.RecId;
                    retailChannelAttributeGroup.AttributeGroup = this.AttributeGroup;
                    retailChannelAttributeGroup.Modifier = this.Modifier;
                    retailChannelAttributeGroup.insert(false);
                }
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInternalOrgAndAttGrAndModifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInternalOrgAttributeGroup</c> table by using the Internal org record ID and attribute group record id and modifier.
    /// </summary>
    /// <param name="_internalOrgRecId">
    /// The value of the internal org. record ID.
    /// </param>
    /// <param name="_attributeGroupRecId">
    /// The value of the attribute group record ID.
    /// </param>
    /// <param name="_modifier">
    /// Type of modifier from RetailChannelAttributeModifier.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInternalOrgAttributeGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInternalOrgAttributeGroup findByInternalOrgAndAttGrAndModifier(RetailInternalOrgRefRecId _internalOrgRecId,
                                                        EcoResAttributeGroupRefRecId _attributeGroupRecId,
                                                        RetailChannelAttributeModifier _modifier = RetailChannelAttributeModifier::Product,
                                                        boolean _forUpdate = false)
    {
        RetailInternalOrgAttributeGroup internalOrgAttributeGroup;

        if (_internalOrgRecId && _attributeGroupRecId && _modifier)
        {
            if (_forUpdate)
            {
                internalOrgAttributeGroup.selectForUpdate(_forUpdate);
            }
            select firstonly internalOrgAttributeGroup
                where internalOrgAttributeGroup.InternalOrganization == _internalOrgRecId
                    && internalOrgAttributeGroup.AttributeGroup == _attributeGroupRecId
                        && internalOrgAttributeGroup.Modifier == _modifier;
        }

        return internalOrgAttributeGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInternalOrgAttributeGroup</c> table by using the record ID.
    /// </summary>
    /// <param name="_recId">
    /// The value of the record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInternalOrgAttributeGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInternalOrgAttributeGroup findByRecId(RefRecId _recId, boolean _forUpdate = false)
    {
        RetailInternalOrgAttributeGroup internalOrgAttributeGroup;

        internalOrgAttributeGroup.selectForUpdate(_forUpdate);
        select firstonly internalOrgAttributeGroup where internalOrgAttributeGroup.RecId == _recId;

        return internalOrgAttributeGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX1057</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@REX1046</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>InternalOrganization</TitleField1>
	<TitleField2>AttributeGroup</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RetailInternalOrgAttributeGroupIdx</ClusteredIndex>
	<Modules>ChannelManagement</Modules>
	<ReplacementKey>RetailInternalOrgAttributeGroupIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttributeGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttributeGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AttributeGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResAttributeGroupRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DisplayOrder</Name>
			<ExtendedDataType>RetailAttributeGroupDisplayOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Modifier</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailChannelAttributeModifier</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailInternalOrgAttributeGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InternalOrganization</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Modifier</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AttributeGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailInternalOrgAttributeGroupDisplayOrderIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DisplayOrder</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Modifier</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResAttributeGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResAttributeGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AttributeGroup</Name>
					<Field>AttributeGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InternalOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InternalOrganization</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalOrganization</Name>
					<Field>InternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>