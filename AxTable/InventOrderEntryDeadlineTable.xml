<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventOrderEntryDeadlineTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventOrderEntryDeadlineTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>errorExist</Name>
				<Source><![CDATA[
    display ImageRes errorExist()
    {
        ImageRes    res = 0;
        #resAppl

        if (this.SiteCode          == InventAllSite::Site
         && this.DeadlineGroupCode == InventAllDeadlineGroup::All
         && !Inventorderentrydeadlineparameters::find().SiteSpecificGroupAllActivation)
        {
            res = #ImageError;
        }
        if (this.SiteCode == InventAllSite::All
         && this.DeadlineGroupCode == InventAllDeadlineGroup::DeadlineGroup
         && !Inventorderentrydeadlineparameters::find().SiteAllGroupSpecificActivation)
        {
            res = #ImageError;
        }
        if (this.SiteCode == InventAllSite::Site
         && this.DeadlineGroupCode == InventAllDeadlineGroup::DeadlineGroup
         && !Inventorderentrydeadlineparameters::find().SiteSpecificGroupSpecificActivation)
        {
            res = #ImageError;
        }
        return res;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.LatestOrderEntryMonday         = str2time('23:59:59');
        this.LatestOrderEntryTuesday        = str2time('23:59:59');
        this.LatestOrderEntryWednesday      = str2time('23:59:59');
        this.LatestOrderEntryThursday       = str2time('23:59:59');
        this.LatestOrderEntryFriday         = str2time('23:59:59');
        this.LatestOrderEntrySaturday       = str2time('23:59:59');
        this.LatestOrderEntrySunday         = str2time('23:59:59');
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDefaultDeadline</Name>
				<Source><![CDATA[
    public boolean isDefaultDeadline()
    {
        if (this.RecId
         && this.orig().DeadlineGroupCode == InventAllDeadlineGroup::All
         && this.orig().DeadlineGroupId   == ''
         && this.orig().SiteCode          == InventAllSite::All
         && this.orig().InventSiteId      == '')
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret && this.isDefaultDeadline())
        {
            ret = checkFailed("@SYS109935");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.isDefaultDeadline())
        {
            if (this.DeadlineGroupCode != InventAllDeadlineGroup::All
             || this.DeadlineGroupId   != ''
             || this.SiteCode          != InventAllSite::All
             || this.InventSiteId      != '')
            {
                ret = checkFailed("@SYS109929");
                this.DeadlineGroupCode = InventAllDeadlineGroup::All;
                this.DeadlineGroupId   = '';
                this.SiteCode          = InventAllSite::All;
                this.InventSiteId      = '';
            }
        }

        if (ret && this.DeadlineGroupCode == InventAllDeadlineGroup::DeadlineGroup && !this.DeadlineGroupId)
        {
            ret = checkFailed("@SYS109932");
        }
        if (ret && this.SiteCode == InventAllSite::Site && !this.InventSiteId)
        {
            ret = checkFailed("@SYS109933");
        }
        if (ret && this.DeadlineGroupCode == InventAllDeadlineGroup::All && this.DeadlineGroupId)
        {
            ret = checkFailed("@SYS109932");
        }
        if (ret && this.SiteCode == InventAllSite::All && this.InventSiteId)
        {
            ret = checkFailed("@SYS109933");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>effectiveOrderDate</Name>
				<Source><![CDATA[
    public static TransDate effectiveOrderDate(InventSiteId _siteId, InventOrderEntryDeadlineGroupId _deadlineGroupId)
    {
        InventOrderEntryDeadlineTable   deadlineTable;
        utcdatetime                     userDateTime;
        utcdatetime                     siteDateTime;

        userDateTime =  DateTimeUtil::utcNow();

        siteDateTime = DateTimeUtil::applyTimeZoneOffset(userDateTime, InventSite::timeZoneSite(_siteId));

        deadlineTable = InventOrderEntryDeadlineTable::findSiteDeadlineGroup(_siteId, _deadlineGroupId);

        if (deadlineTable)
        {
            switch (dayOfWk(DateTimeUtil::date(siteDateTime)))
            {
                case WeekDays::Monday :
                    if (deadlineTable.LatestOrderEntryMonday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntryMonday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Tuesday :
                    if (deadlineTable.LatestOrderEntryTuesday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntryTuesday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Wednesday :
                    if (deadlineTable.LatestOrderEntryWednesday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntryWednesday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Thursday :
                    if (deadlineTable.LatestOrderEntryThursday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntryThursday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Friday :
                    if (deadlineTable.LatestOrderEntryFriday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntryFriday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Saturday :
                    if (deadlineTable.LatestOrderEntrySaturday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntrySaturday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                case WeekDays::Sunday :
                    if (deadlineTable.LatestOrderEntrySunday == 0)
                        return DateTimeUtil::date(siteDateTime);
                    if (DateTimeUtil::time(siteDateTime) > deadlineTable.LatestOrderEntrySunday)
                        return DateTimeUtil::date(siteDateTime) + 1;
                    break;

                default :
                    return DateTimeUtil::date(siteDateTime);
            }
        }
        return DateTimeUtil::date(siteDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static InventOrderEntryDeadlineTable find(InventAllSite                   _siteCode,
                                                     InventSiteId                    _siteId,
                                                     InventAllDeadlineGroup          _deadlineGroupCode,
                                                     InventOrderEntryDeadlineGroupId _deadlineGroupId,
                                                     boolean                         _forupdate = false)
    {
        InventOrderEntryDeadlineTable    deadlineTable;

        deadlineTable.selectForUpdate(_forupdate);

        select firstonly deadlineTable
            where deadlineTable.SiteCode          == _siteCode
               && deadlineTable.InventSiteId      == _siteId
               && deadlineTable.DeadlineGroupCode == _deadlineGroupCode
               && deadlineTable.DeadlineGroupId   == _deadlineGroupId;

        return deadlineTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSiteDeadlineGroup</Name>
				<Source><![CDATA[
    public static InventOrderEntryDeadlineTable findSiteDeadlineGroup(InventSiteId                    _siteId,
                                                                             InventOrderEntryDeadlineGroupId _deadlineGroupId)
    {
        InventOrderEntryDeadlineTable            deadlineTable;
        Inventorderentrydeadlineparameters  parameters = Inventorderentrydeadlineparameters::find();

        if (parameters.SiteSpecificGroupSpecificActivation)
        {
            deadlineTable = InventOrderEntryDeadlineTable::find(InventAllSite::Site,_siteId,InventAllDeadlineGroup::DeadlineGroup,_deadlineGroupId);
        }

        if (!deadlineTable && parameters.SiteAllGroupSpecificActivation)
        {
            deadlineTable = InventOrderEntryDeadlineTable::find(InventAllSite::All,'',InventAllDeadlineGroup::DeadlineGroup,_deadlineGroupId);
        }

        if (! deadlineTable && parameters.SiteSpecificGroupAllActivation)
        {
            deadlineTable = InventOrderEntryDeadlineTable::find(InventAllSite::Site,_siteId,InventAllDeadlineGroup::All,'');
        }

        if (! deadlineTable)
        {
            deadlineTable = InventOrderEntryDeadlineTable::find(InventAllSite::All,'',InventAllDeadlineGroup::All,'');
        }
        return deadlineTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderEntryDeadline</Name>
				<Source><![CDATA[
    public static SalesLatestOrderEntry orderEntryDeadline(InventSiteId                    _siteId,
                                                           InventOrderEntryDeadlineGroupId _deadlineGroupId,
                                                           TransDate                       _shippingDate)
    {
        InventOrderEntryDeadlineTable    deadlineTable;
        deadlineTable = InventOrderEntryDeadlineTable::findSiteDeadlineGroup(_siteId, _deadlineGroupId);

        if (deadlineTable)
        {
            switch (dayOfWk(_shippingDate))
            {
                case WeekDays::Monday :
                    return deadlineTable.LatestOrderEntryMonday;

                case WeekDays::Tuesday :
                    return deadlineTable.LatestOrderEntryTuesday;

                case WeekDays::Wednesday :
                    return deadlineTable.LatestOrderEntryWednesday;

                case WeekDays::Thursday :
                    return deadlineTable.LatestOrderEntryThursday;

                case WeekDays::Friday :
                    return deadlineTable.LatestOrderEntryFriday;

                case WeekDays::Saturday :
                    return deadlineTable.LatestOrderEntrySaturday;

                case WeekDays::Sunday :
                    return deadlineTable.LatestOrderEntrySunday;

                default :
                    return 0;
            }
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeadlineGroupId</Name>
				<Source><![CDATA[
    private void defaultDeadlineGroupId()
    {
        if (this.DeadlineGroupCode == InventAllDeadlineGroup::All)
        {
            this.DeadlineGroupId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventSiteId</Name>
				<Source><![CDATA[
    private void defaultInventSiteId()
    {
        if (this.SiteCode == InventAllSite::All)
        {
            this.InventSiteId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(InventOrderEntryDeadlineTable, DeadlineGroupId),
                [fieldNum(InventOrderEntryDeadlineTable, DeadlineGroupCode)]],
            [fieldNum(InventOrderEntryDeadlineTable, InventSiteId),
                [fieldNum(InventOrderEntryDeadlineTable, SiteCode)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventOrderEntryDeadlineTable, DeadlineGroupId): this.defaultDeadlineGroupId(); break;
            case fieldNum(InventOrderEntryDeadlineTable, InventSiteId): this.defaultInventSiteId(); break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124566</DeveloperDocumentation>
	<Label>@SYS109921</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>InventSiteId</TitleField1>
	<TitleField2>DeadlineGroupId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>DeadlineIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>DeadlineIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SiteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeadlineGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeadlineGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryMonday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryTuesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryWednesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryThursday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryFriday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntrySaturday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntrySunday</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS109936</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SiteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeadlineGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeadlineGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OrderEntryDeadline</Name>
			<Label>@SYS109921</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryMonday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryTuesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryWednesday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryThursday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntryFriday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntrySaturday</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestOrderEntrySunday</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeadlineGroupCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventAllDeadlineGroup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeadlineGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventOrderEntryDeadlineGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS109925</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS109925</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntryFriday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntryFriday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntryMonday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntryMonday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntrySaturday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntrySaturday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntrySunday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntrySunday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntryThursday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntryThursday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntryTuesday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntryTuesday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>LatestOrderEntryWednesday</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesLatestOrderEntryWednesday</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SiteCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventAllSite</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DeadlineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SiteCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeadlineGroupCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeadlineGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventOrderEntryDeadlineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventOrderEntryDeadlineGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeadlineGroupId</Name>
					<Field>DeadlineGroupId</Field>
					<RelatedField>DeadlineGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DeadlineGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>