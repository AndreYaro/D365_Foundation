<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GeneralJournalAccountEntrySummarized</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class GeneralJournalAccountEntrySummarized extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertSummarizedJournalAccountEntries</Name>
				<Source><![CDATA[
    internal static void insertSummarizedJournalAccountEntries(
        RefRecId _startRecId,
        RefRecId _endRecId,
        LedgerTransferOpeningType _transferOpeningType,
        int _processSession,
        UTCTimeStamp _processTimeStamp,
        guid _executionId)
    {
        GeneralJournalAccountEntrySummarized accountEntrySummarized, existingAccountEntrySummarized;
        GeneralJournalAccountEntryDimension entryDimension;
        GeneralJournalAccountEntry accountEntry;
        MainAccount mainAccount;
        LedgerTransSettlementAccount detailsAccount;
        NoYes isAccountTypeCN = LedgerTransferOpeningDetailsHelper::isCommonAccountType_CN();

        // Insert into the summarized table all balance sheet records given by the account entry dimension table
        // that are not a part of the list of main accounts that details are being brought forward.
        insert_recordset accountEntrySummarized (GeneralJournalAccountEntryRecId, ExecutionId)
            select GeneralJournalAccountEntry, _executionId from entryDimension
                where entryDimension.GeneralJournalAccountEntryHash >= _startRecId
                    && entryDimension.GeneralJournalAccountEntryHash <= _endRecId
                    && entryDimension.Type == _transferOpeningType
                    && entryDimension.CurrentSessionId == _processSession
                    && entryDimension.UTCTimeStamp == _processTimeStamp
            join accountEntry
                where accountEntry.RecId == entryDimension.GeneralJournalAccountEntry
            join mainAccount
                where mainAccount.RecId == accountEntry.MainAccount
                    && (mainAccount.Type == DimensionLedgerAccountType::BalanceSheet
                        || mainAccount.Type == DimensionLedgerAccountType::Asset
                        || mainAccount.Type == DimensionLedgerAccountType::Liability
                        || mainAccount.Type == DimensionLedgerAccountType::Equity
                        || (mainAccount.Type == DimensionLedgerAccountType::Common_CN && isAccountTypeCN))
            exists join detailsAccount
                where detailsAccount.MainAccount == accountEntry.MainAccount
                    && detailsAccount.KeepDetails == NoYes::No
            notexists join existingAccountEntrySummarized
                where existingAccountEntrySummarized.GeneralJournalAccountEntryRecId == entryDimension.GeneralJournalAccountEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGeneralJournalEntryByExecutionId</Name>
				<Source><![CDATA[
    internal static void updateGeneralJournalEntryByExecutionId(guid _executionId, CurrentOperationsTax _postingLayer, RefRecId _journalEntry)
    {
        GeneralJournalAccountEntrySummarized accountEntrySummarized;
        GeneralJournalEntry journalEntry;
        GeneralJournalAccountEntry accountEntry;

        update_recordset accountEntrySummarized
            setting GeneralJournalEntryRecId = _journalEntry
                where accountEntrySummarized.ExecutionId == _executionId
            exists join accountEntry
                where accountEntry.RecId == accountEntrySummarized.GeneralJournalAccountEntryRecId
            exists join journalEntry
                where journalEntry.RecId == accountEntry.GeneralJournalEntry
                    && journalEntry.PostingLayer == _postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteReversedSummaryReferences</Name>
				<Source><![CDATA[
    internal static void deleteReversedSummaryReferences()
    {
        GeneralJournalEntry journalEntry;
        GeneralJournalAccountEntrySummarized accountEntrySummarized;

        delete_from accountEntrySummarized
            notexists join journalEntry
                where journalEntry.RecId == accountEntrySummarized.GeneralJournalEntryRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@GeneralLedger:GeneralJournalAccountEntrySummarizedDoc</DeveloperDocumentation>
	<Label>@GeneralLedger:GeneralJournalAccountEntrySummarized</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>GeneralJournalAccountEntryRecId</TitleField1>
	<TitleField2>GeneralJournalEntryRecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>GeneralJournalAccountEntry</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>GeneralJournalAccountEntry</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalAccountEntryRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalEntryRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GeneralJournalAccountEntryRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GeneralJournalEntryRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ExecutionId</Name>
			<ExtendedDataType>LedgerTransferOpeningDetailsExecutionId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>GeneralJournalAccountEntry</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>GeneralJournalAccountEntryRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>