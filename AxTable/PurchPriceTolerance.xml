<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPriceTolerance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchPriceTolerance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        if ((this.orig().ItemCode == TableGroupAll::All) && (this.orig().AccountCode == TableGroupAll::All))
        {
            // Don't allow the company tolerance record to be deleted
            ret = checkFailed("@SYS114482");
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        #PurchPriceTolearanceConstants
        boolean ret;

        if ((this.orig().ItemCode == TableGroupAll::All) && (this.orig().AccountCode == TableGroupAll::All))
        {
            // Silently default the relation fields in case they've been set to something else for the company tolerance record
            this.ItemRelation = #emptyRelation;
            this.AccountRelation = #emptyRelation;

            if ((this.ItemCode != TableGroupAll::All) || (this.AccountCode != TableGroupAll::All))
            {
                // Don't allow the company tolerance record to be changed to another identity
                this.ItemCode = TableGroupAll::All;
                this.AccountCode = TableGroupAll::All;
                ret = checkFailed("@SYS114482");
            }
            else
            {
                ret = super();
            }
        }
        else
        {
            // Assume no errors will be found
            ret = true;

            if (this.ItemCode == TableGroupAll::All)
            {
                // Silently default the ItemRelation field if it was set to something else
                this.ItemRelation = #emptyRelation;
            }
            else
            {
                Debug::assert((this.ItemCode == TableGroupAll::GroupId) | (this.ItemCode == TableGroupAll::Table));
                if (this.ItemRelation == #emptyRelation)
                {
                    // Do not allow the line to be saved if an ItemRelation is required
                    ret = checkFailed("@SYS56455");
                }
            }

            if (this.AccountCode == TableGroupAll::All)
            {
                // Silently default the AccountRelation field if it was set to something else
                this.AccountRelation = #emptyRelation;
                if (ret)
                {
                    // Only call if there was not a checkFailed from the ItemRelation check above
                    ret = super();
                }
            }
            else
            {
                Debug::assert((this.AccountCode == TableGroupAll::GroupId) | (this.AccountCode == TableGroupAll::Table));
                if (this.AccountRelation == #emptyRelation)
                {
                    // Do not allow the line to be saved if an AccountRelation is required
                    ret = checkFailed("@SYS56456");
                }
                else if (ret)
                {
                    // Only call if there was not a checkFailed from the ItemRelation check above
                    ret = super();
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCompanyToleranceRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a default company tolerance record, where the <c>ItemCode</c> and <c>AccountCode</c> fields
    /// are both set to All, and <c>ItemRelation</c> and <c>AccountRelation</c> are both set to '*', if it
    /// is required.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void defaultCompanyToleranceRecord()
    {
        #PurchPriceTolearanceConstants
        PurchPriceTolerance priceTolerance;

        select firstonly priceTolerance
            where priceTolerance.ItemCode == TableGroupAll::All &&
                    priceTolerance.ItemRelation == #emptyRelation &&
                    priceTolerance.AccountCode == TableGroupAll::All &&
                    priceTolerance.AccountRelation == #emptyRelation;

        if (!priceTolerance)
        {
            ttsbegin;
            priceTolerance.clear();
            priceTolerance.ItemCode = TableGroupAll::All;
            priceTolerance.ItemRelation = #emptyRelation;
            priceTolerance.AccountCode = TableGroupAll::All;
            priceTolerance.AccountRelation = #emptyRelation;
            priceTolerance.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the price tolerance for the specified item ID and account number.
    /// </summary>
    /// <param name="_itemId">
    ///    The item ID to search for.
    /// </param>
    /// <param name="_accountNum">
    ///    The account number to search for.
    /// </param>
    /// <returns>
    ///    The first price tolerance found at the closest level to the item and account.
    /// </returns>
    /// <remarks>
    ///    The hierarchy of the search is as follows by using the specified item and vendor: 1) The item for
    ///    the vendor 2) The item for the vendor's price tolerance group 3) The item for all vendors 4) The
    ///    item price tolerance group for the vendor 5) The item price tolerance group for the vendor price
    ///    tolerance group 6) The item price tolerance group for all vendors 7) All items for the vendor 8)
    ///    All items for the vendor price tolerance group 9) All items for all vendors 10) A default of 0
    ///    price tolerance percentage.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PriceTolerancePercentage find(ItemId _itemId, InventCustVendRel _accountNum)
    {
        #PurchPriceTolearanceConstants

        InventTable inventTable;
        Debug::assert(_accountNum != '');

        if (_itemId != '')
        {
            inventTable = InventTable::find(_itemId);
        }

        VendTable vendTable = VendTable::find(_accountNum);
		Debug::assert(vendTable != null);

        // Search hierarchy for a match
        PurchPriceTolerance ppt;
        PriceTolerancePercentage percentTolerance = 0;

        select firstonly PercentTolerance, RecId from ppt
        order ItemCode, ItemRelation, AccountCode, AccountRelation where
            (ppt.ItemCode == TableGroupAll::Table && ppt.ItemRelation == _itemId &&
                ppt.AccountCode == TableGroupAll::Table && ppt.AccountRelation == _accountNum) ||
            (ppt.ItemCode == TableGroupAll::Table && ppt.ItemRelation == _itemId &&
                ppt.AccountCode == TableGroupAll::GroupId && ppt.AccountRelation == vendTable.VendPriceToleranceGroupId) ||
            (ppt.ItemCode == TableGroupAll::Table && ppt.ItemRelation == _itemId &&
                ppt.AccountCode == TableGroupAll::All && ppt.AccountRelation == #emptyRelation) ||

            (ppt.ItemCode == TableGroupAll::GroupId && ppt.ItemRelation == inventTable.ItemPriceToleranceGroupId &&
                ppt.AccountCode == TableGroupAll::Table && ppt.AccountRelation == _accountNum) ||
            (ppt.ItemCode == TableGroupAll::GroupId && ppt.ItemRelation == inventTable.ItemPriceToleranceGroupId &&
                ppt.AccountCode == TableGroupAll::GroupId && ppt.AccountRelation == vendTable.VendPriceToleranceGroupId) ||
            (ppt.ItemCode == TableGroupAll::GroupId && ppt.ItemRelation == inventTable.ItemPriceToleranceGroupId &&
                ppt.AccountCode == TableGroupAll::All && ppt.AccountRelation == #emptyRelation) ||

            (ppt.ItemCode == TableGroupAll::All && ppt.ItemRelation == #emptyRelation &&
                ppt.AccountCode == TableGroupAll::Table && ppt.AccountRelation == _accountNum) ||
            (ppt.ItemCode == TableGroupAll::All && ppt.ItemRelation == #emptyRelation &&
                ppt.AccountCode == TableGroupAll::GroupId && ppt.AccountRelation == vendTable.VendPriceToleranceGroupId) ||
            (ppt.ItemCode == TableGroupAll::All && ppt.ItemRelation == #emptyRelation &&
                ppt.AccountCode == TableGroupAll::All && ppt.AccountRelation == #emptyRelation);

        // Return the tolerance if found, otherwise return 0 as the default
        if (ppt.RecId)
        {
            percentTolerance = ppt.PercentTolerance;
        }

        return percentTolerance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
	<DeveloperDocumentation>@SYS124577</DeveloperDocumentation>
	<Label>@SYS114475</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ItemCodeRelAccountCodeRelIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Single</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ItemCodeRelAccountCodeRelIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PercentTolerance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PriceTolerances</Name>
			<Label>@SYS114476</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PercentTolerance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
			<Label>@Sys12243</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
			<ExtendedDataType>InventCustVendRel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
			<ExtendedDataType>ItemCode</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
			<ExtendedDataType>InventItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PercentTolerance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceTolerancePercentage</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemCodeRelAccountCodeRelIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ItemToleranceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemPriceToleranceGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemPriceToleranceGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendToleranceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPriceToleranceGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>VendPriceToleranceGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>