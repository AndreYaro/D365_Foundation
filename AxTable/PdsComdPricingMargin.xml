<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsComdPricingMargin</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsComdPricingMargin extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findPrevious</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the PdsPricingMargin record with the same template information as this record and the given pricing run id.
    /// </summary>
    /// <param name="_runId">
    /// Pricing run id to find; typically the previous run id.
    /// </param>
    /// <returns>
    /// Record value if found, empty otherwise.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public PdsPricingMargin findPrevious(PdsPricingRunId _runId)
    /// </syntax>
    /// </remarks>
    public PdsComdPricingMargin findPrevious(PdsComdPricingRunId _runId)
    {
        return PdsComdPricingMargin::find(_runId,
            this.PricingTemplateId, this.ProfitSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if a specific PdsPricingMargin record exists.
    /// </summary>
    /// <param name="_runId">
    /// Pricing run id to check.
    /// </param>
    /// <param name="_templateId">
    /// Pricing template id to check.
    /// </param>
    /// <param name="_profitSet">
    /// Cost profit set value to check.
    /// </param>
    /// <returns>
    /// true if the record exists; false otherwise.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static boolean exist(PdsPricingRunId _runId, PdsPricingTemplateId _templateId, CostProfitSet _profitSet)
    /// </syntax>
    /// </remarks>
    public static boolean exist(
        PdsComdPricingRunId         _runId,
        PdsComdPricingTemplateId    _templateId,
        CostProfitSet               _profitSet)
    {
        return _runId && _templateId &&
            (select pdsComdPricingMargin
                where pdsComdPricingMargin.PricingRunId       == _runId
                    && pdsComdPricingMargin.PricingTemplateId == _templateId
                    && pdsComdPricingMargin.ProfitSet            == _profitSet)
                .RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a specific PdsPricingMargin record.
    /// </summary>
    /// <param name="_runId">
    /// Pricing run id to find.
    /// </param>
    /// <param name="_templateId">
    /// Pricing template id to find.
    /// </param>
    /// <param name="_profitSet">
    /// Cost profit set value to find.
    /// </param>
    /// <param name="_forUpdate">
    /// Optional. Specify as true if the record should be locked for update.
    /// Default value is false - do not lock the record for update.
    /// </param>
    /// <returns>
    /// Record value if found, empty otherwise.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static PdsPricingMargin find(PdsPricingRunId _runId, PdsPricingTemplateId _templateId, CostProfiSet _profitSet,
    /// boolean _forUpdate)
    /// </syntax>
    /// </remarks>
    public static PdsComdPricingMargin find(
        PdsComdPricingRunId         _runId,
        PdsComdPricingTemplateId    _templateId,
        CostProfitSet               _profitSet,
        boolean                     _forUpdate = false)
    {
        PdsComdPricingMargin        pdsComdPricingMargin;

        pdsComdPricingMargin.selectForUpdate(_forUpdate);

        if (_runId && _templateId)
        {
            select firstonly pdsComdPricingMargin
                where pdsComdPricingMargin.PricingRunId       == _runId
                    && pdsComdPricingMargin.PricingTemplateId == _templateId
                    && pdsComdPricingMargin.ProfitSet            == _profitSet;
        }

        return pdsComdPricingMargin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findById</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the PdsPricingMargin record using the PdsPricingMarginId primary key value.
    /// </summary>
    /// <param name="_marginId">
    /// Pricing margin id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// Optional. Specify as true if the record should be locked for update.
    /// Default value is false - do not lock the record for update.
    /// </param>
    /// <returns>
    /// Record value if found, empty otherwise.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static PdsPricingMargin findById(PdsPricingMarginId _marginId, Enum _forUpdate)
    /// </syntax>
    /// </remarks>
    public static PdsComdPricingMargin findById(
        PdsComdPricingMarginId  _marginId,
        boolean                 _forUpdate = false)
    {
        PdsComdPricingMargin    pdsComdPricingMargin;

        pdsComdPricingMargin.selectForUpdate(_forUpdate);

        if (_marginId)
        {
            select firstonly pdsComdPricingMargin
                where pdsComdPricingMargin.PricingMarginId == _marginId;
        }

        return pdsComdPricingMargin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqPdsPricingMarginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get a NumberSeq object appropriate for generating the next PricingMarginId.
    /// </summary>
    /// <param name="_makeDecisionLater">
    /// Optional. Defaults to true. Passed to the number seq constructor.
    /// </param>
    /// <returns>
    /// NumberSeq instance appropriate for generating a PricingMarginId.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static NumberSeq numberSeqPdsPricingRunId(boolean _makeDecisionLater)
    /// </syntax>
    /// </remarks>
    public static NumberSeq numberSeqPdsPricingMarginId(
        boolean     _makeDecisionLater = true)
    {
        return NumberSeq::newGetNum(
            PdsParameters::numRefPdsPricingMarginId(),
            _makeDecisionLater);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsCommodity</ConfigurationKey>
	<DeveloperDocumentation>@PDS1106</DeveloperDocumentation>
	<FormRef>PdsComdPricingMargin</FormRef>
	<Label>@PDS428</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PricingRunId</TitleField1>
	<TitleField2>PricingTemplateId</TitleField2>
	<ClusteredIndex>RunTemplateProfitIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RunTemplateProfitIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PricingMarginId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PricingRunId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PricingTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PricingRunId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PricingTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PricingMargin</Name>
			<Label>@PDS428</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PricingMarginId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PricingMarginId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPricingMarginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PricingRunId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPricingRunId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PricingTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPricingTemplateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProfitSet</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CostProfitSet</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RunTemplateProfitIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PricingRunId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PricingTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProfitSet</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MarginIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PricingMarginId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PdsComdPricingRun</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PdsComdPricingRun</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PricingRunId</Name>
					<Field>PricingRunId</Field>
					<RelatedField>PricingRunId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsComdPricingTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsComdPricingTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PricingTemplateId</Name>
					<Field>PricingTemplateId</Field>
					<RelatedField>PricingTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>