<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSJournalTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WMSJournalTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromMovement</Name>
				<Source><![CDATA[
    public void initFromMovement(InventMovement inventMovement, InventDim inventDim)
    {
        InventDim       inventDimMovement   = inventMovement.inventdim();
        InventDim       inventDimOrig;
        ListEnumerator  dimFieldEnumerator  = InventDim::dimFieldListEnumerator();
        FieldId         inventDimFieldId;

        this.InventTransRefId   = inventMovement.transRefId();
        this.InventTransType    = inventMovement.transType();

        inventDimOrig.data(inventDim);
        if (inventDimMovement)
        {
            while (dimFieldEnumerator.moveNext())
            {
                inventDimFieldId = dimFieldEnumerator.current();
                if (!inventDim.(inventDimFieldId) && inventDimMovement.(inventDimFieldId))
                {
                    inventDim.(inventDimFieldId) = inventDimMovement.(inventDimFieldId);
                }
            }
            if (inventDim.wmsLocationId)
            {
                if (!WMSLocation::find(inventDim.wmsLocationId, inventDim.InventLocationId))
                {
                    inventDim.wmsLocationId = inventDimOrig.wmsLocationId;
                    inventDim.InventLocationId = inventDimOrig.InventLocationId;
                    inventDim.InventSiteId = inventDimOrig.InventSiteId;
                }
            }
            if (inventDim.InventSiteId && inventDim.InventLocationId)
            {
                if (inventDim.inventLocation().InventSiteId != inventDim.InventSiteId)
                {
                    inventDim.wmsLocationId = inventDimOrig.wmsLocationId;
                    inventDim.InventLocationId = inventDimOrig.InventLocationId;
                    inventDim.InventSiteId = inventDimOrig.InventSiteId;
                }
            }
            if (!inventDim.equal(inventDimOrig))
            {
                inventDim = InventDim::findOrCreate(inventDim);
                this.InventDimId = inventDim.InventDimId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWMSJournalName</Name>
				<Source><![CDATA[
    public void initFromWMSJournalName(WMSJournalName wmsJournalName)
    {
        JournalTableData::newTable(this).initFromJournalName(wmsJournalName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        if (!this.JournalId)
        {
            this.JournalId = JournalTableData::newTable(this).nextJournalId();
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupInventTransRefId</Name>
				<Source><![CDATA[
    boolean lookupInventTransRefId(FormStringControl _lookupCtrl)
    {
        switch (this.InventTransType)
        {
            case InventTransType::Production:
                ProdTable::wmsRegisterProdLookup(_lookupCtrl);
                return true;
            case InventTransType::Purch:
                this.purchIdLookup(_lookupCtrl);
                return true;
            case InventTransType::ConsignmentReplenishmentOrder:
                this.consignmentReplenishmentOrderIdLookup(_lookupCtrl);
                return true;
            case InventTransType::Sales:
                this.salesIdLookup(_lookupCtrl);
                return true;
            case InventTransType::QuarantineOrder:
                this.lookupQuarantineOrder(_lookupCtrl);
                return true;
            case InventTransType::TransferOrderReceive:
                InventTransferTable::lookupWMSReception(_lookupCtrl);
                return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupQuarantineOrder</Name>
				<Source><![CDATA[
    public void lookupQuarantineOrder(FormStringControl _lookupCtrl)
    {
        InventQuarantineOrder::lookupWMSReception(_lookupCtrl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(WMSJournalTable, ReturnItemNum),
                [fieldnum(WMSJournalTable, InventTransRefId)]
            ],
            [fieldnum(WMSJournalTable, InventTransRefId),
                [fieldnum(WMSJournalTable, ReturnItemNum)]
            ],
            [fieldnum(WMSJournalTable, CreateQuarantineOrder),
                [fieldnum(WMSJournalTable, InventTransType)]
            ],
            [fieldnum(WMSJournalTable, VendAccount),
                [fieldnum(WMSJournalTable, ReturnItemNum),
                 fieldnum(WMSJournalTable, InventTransRefId)]
            ]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(WMSJournalTable, VendAccount):
                if (this.InventTransType == InventTransType::Sales)
                {
                    if (this.inventTransRefId)
                    {
                        SalesTable salesTable       = SalesTable::find(this.InventTransRefId);
                        this.VendAccount            = salesTable.CustAccount;
                    }
                    else if (this.ReturnItemNum)
                    {
                        SalesTable salesTable       = SalesTable::findReturnItemNum(this.ReturnItemNum);
                        this.VendAccount            = salesTable.CustAccount;
                    }
                }
                break;

            case fieldnum(WMSJournalTable, InventTransRefId):
                if (this.InventTransType == InventTransType::Sales && this.ReturnItemNum)
                {
                    SalesTable salesTable           = SalesTable::findReturnItemNum(this.ReturnItemNum);
                    this.inventTransRefId           = salesTable.SalesId;
                }
                break;

            case fieldnum(WMSJournalTable, ReturnItemNum):
                if (this.InventTransType == InventTransType::Sales && this.InventTransRefId)
                {
                    SalesTable salesTable           = SalesTable::find(this.InventTransRefId);
                    this.ReturnItemNum              = salesTable.ReturnItemNum;
                }
                break;

            case fieldnum(WMSJournalTable, CreateQuarantineOrder):
                if (!InventTrans::canTransTypeDoQuarantineMgmt(this.InventTransType))
                {
                    this.CreateQuarantineOrder = NoYes::No;
                }
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes when field values are changed.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the changed field.
    /// </param>
    /// <remarks>
    ///    Actions are triggered by field changes.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WMSJournalTable, ReturnItemNum) :
                if (this.InventTransType == InventTransType::Sales)
                {
                    this.ReturnDispositionCodeId = '';
                }
                break;

            case fieldNum(WMSJournalTable, VendAccount) :
                if (this.InventTransType == InventTransType::Sales)
                {
                    this.InventTransRefId        = '';
                    this.ReturnItemNum           = '';
                    this.ReturnDispositionCodeId = '';
                }
                break;

            case fieldNum(WMSJournalTable, InventTransType) :
                this.InventTransRefId        = '';
                this.ReturnItemNum           = '';
                this.VendAccount             = '';
                this.ReturnDispositionCodeId = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchIdLookup</Name>
				<Source><![CDATA[
    public void purchIdLookup(FormStringControl _lookupCtrl)
    {
        PurchTable::lookupWMSReception(_lookupCtrl, this.VendAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>consignmentReplenishmentOrderIdLookup</Name>
				<Source><![CDATA[
    public void consignmentReplenishmentOrderIdLookup(FormStringControl _lookupCtrl)
    {
        ConsignmentReplenishmentOrderHeader::lookupReplenishmentOrderForSpecificVendor(_lookupCtrl, this.VendAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesIdLookup</Name>
				<Source><![CDATA[
    public void salesIdLookup(FormStringControl _lookupCtrl)
    {
        SalesTable::lookupWMSReception(_lookupCtrl, this.VendAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WMSJournalTable, ReturnDispositionCodeId):
                    if (this.ReturnDispositionCodeId)
                    {
                        if (this.InventTransType == InventTransType::Sales && this.ReturnItemNum)
                        {
                            ret = WMSJournalTable::validateDispositionCodeId(this.InventTransRefId, this.ReturnDispositionCodeId);
                        }
                        else
                        {
                            ret = this.allowEditCheckFailed(fieldPName(WMSJournalTable, ReturnDispositionCodeId));
                        }
                    }
                    break;

                case fieldNum(WMSJournalTable, ReturnItemNum):
                    if (this.ReturnItemNum)
                    {
                        if (this.InventTransType == InventTransType::Sales)
                        {
                            ret = SalesTable::returnValidateReturnItemNum(this.ReturnItemNum);
                        }
                        else
                        {
                            ret = this.allowEditCheckFailed(fieldPName(WMSJournalTable, ReturnItemNum));
                        }
                    }
                    break;

                case fieldNum(WMSJournalTable, CreateQuarantineOrder):

                    if (this.CreateQuarantineOrder && !InventTrans::canTransTypeDoQuarantineMgmt(this.InventTransType))
                    {
                        ret = checkFailed(strFmt("@SYS70689",fieldPName(WMSJournalTable,CreateQuarantineOrder)));
                    }
                    break;

                case fieldNum(WMSJournalTable, InventTransType):
                    if (!WMSJournalTable::canTransTypeBeHandled(this.InventTransType))
                    {
                        ret = checkFailed("@SYS19559");
                    }
                    break;

                case fieldNum(WMSJournalTable, vendAccount):
                    if (this.vendAccount
                        && this.InventTransType != InventTransType::Sales
                        && this.InventTransType != InventTransType::Purch
                        && this.InventTransType != InventTransType::ConsignmentReplenishmentOrder)
                    {
                        ret = this.allowEditCheckFailed(fieldPName(WMSJournalTable, vendAccount));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditCheckFailed</Name>
				<Source><![CDATA[
    private boolean allowEditCheckFailed(FieldLabel _fieldLabel)
    {
        return checkFailed(strFmt("@ApplicationFoundation:DataEntitiesNoAllowEdit", _fieldLabel));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite(WMSJournalTableData  _journalTableData = JournalTableData::newTable(this))
    {
        boolean ret = true;

        ret = this.checkJournalIsNotPosted();
        ret = ret && _journalTableData.validateWritePre(ret);

        ret = super() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalIsNotPosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies that the journal is not posted.
    /// </summary>
    /// <returns>true, if the journal is not posted; otherwise, false.</returns>
    public boolean checkJournalIsNotPosted()
    {
        if (this.Posted)
        {
            return checkFailed("@SCM:InventPostedJournalsCannotBeEdited");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmsLocation</Name>
				<Source><![CDATA[
    public WMSLocation wmsLocation(boolean update = false)
    {
        InventDim   inventDim = InventDim::find(this.InventDimId);

        return WMSLocation::find(inventDim.wmsLocationId, inventDim.InventLocationId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canTransTypeBeHandled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the specified transaction type can be handled by the arrival processes.
    /// </summary>
    /// <param name="_inventTransType">
    /// The transaction type to test.
    /// </param>
    /// <returns>
    /// true if the type can be handled; otherwise, false.
    /// </returns>
    public static NoYes canTransTypeBeHandled(InventTransType _inventTransType)
    {
        switch (_inventTransType)
        {
            case InventTransType::WMSTransport,     // These types cannot be handled through arrival processes.
                 InventTransType::WMSOrder,
                 InventTransType::TransferOrderShip,
                 InventTransType::TransferOrderScrap,
                 InventTransType::Blocking,
                 InventTransType::SalesQuotation,
                 InventTransType::KanbanJobTransferIssue,
                 InventTransType::KanbanEmptied,
                 InventTransType::SummedUp,
                 InventTransType::WHSWork,
                 InventTransType::WHSQuarantine,
                 InventTransType::WHSContainer,
                 InventTransType::InventOwnershipChange,
                 InventTransType::WHSOrderCommittedReservation,
                 InventTransType::InventTransArchive,
                 InventTransType::WHSInventTransArchiveOnlyAffectsLocationAndBelow:
                    return NoYes::No;
        }
        return NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(WMSJournalId wmsJournalId)
    {
        if (wmsJournalId && !WMSJournalTable::exist(wmsJournalId))
        {
            return checkFailed(strFmt(WMSJournalTable::txtNotExist(),wmsJournalId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(WMSJournalId wmsJournalId)
    {
        return wmsJournalId && (select firstonly wmsJournalTable
                    where wmsJournalTable.JournalId == wmsJournalId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WMSJournalTable find(WMSJournalId wmsJournalId, boolean _forUpdate = false)
    {
        WMSJournalTable wmsJournalTable;

        wmsJournalTable.selectForUpdate(_forUpdate);

        if (wmsJournalId)
        {
            select firstonly wmsJournalTable
                where wmsJournalTable.JournalId == wmsJournalId;
        }

        return wmsJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPackingSlipCandidates</Name>
				<Source><![CDATA[
    static container findPackingSlipCandidates(
        Range                   _siteRange,
        Range                   _warehouseRange)
    {
        Query                   query = new Query();
        QueryRun                queryRun;
        QueryBuildDataSource    dataSourceOrigin = query.addDataSource(tableNum(InventTransOrigin));
        QueryBuildDataSource    dataSourceInventTrans = dataSourceOrigin.addDataSource(tableNum(InventTrans));
        QueryBuildDataSource    dataSourceDim = dataSourceInventTrans.addDataSource(tableNum(InventDim));
        InventTransOrigin       inventTransOrigin;

        Set                     journalIdSet = new Set(Types::String);
        WMSJournalTable         wmsJournalTable;
        WMSJournalTrans         wmsJournalTrans;

        dataSourceInventTrans.joinMode(JoinMode::ExistsJoin);
        dataSourceInventTrans.addLink(fieldNum(InventTransOrigin, RecId), fieldNum(InventTrans, InventTransOrigin));

        dataSourceDim.joinMode(JoinMode::ExistsJoin);
        dataSourceDim.relations(true);

        dataSourceOrigin.addRange(fieldNum(InventTransOrigin, ReferenceCategory)).value(queryValue(InventTransType::Purch));
        dataSourceOrigin.addRange(fieldNum(InventTransOrigin, ReferenceCategory)).value(queryValue(InventTransType::Sales));

        dataSourceInventTrans.addRange(fieldNum(InventTrans, StatusIssue)).value(queryValue(StatusIssue::None));
        dataSourceInventTrans.addRange(fieldNum(InventTrans, StatusReceipt)).value(queryValue(StatusReceipt::Registered));

        dataSourceDim.addRange(fieldNum(InventDim, InventSiteId)).value(_siteRange);
        dataSourceDim.addRange(fieldNum(InventDim, InventLocationId)).value(_warehouseRange);

        query.recordLevelSecurity(true);
        wmsJournalTrans.recordLevelSecurity(true);
        wmsJournalTable.recordLevelSecurity(true);
        queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            inventTransOrigin = queryRun.get(tableNum(InventTransOrigin)) as InventTransOrigin;
            while select JournalId from wmsJournalTrans
                group by JournalId
                where wmsJournalTrans.InventTransId == inventTransOrigin.InventTransId
                exists join wmsJournalTable
                    where wmsJournalTable.JournalId     == wmsJournalTrans.JournalId
                       && wmsJournalTable.Posted        == NoYes::Yes
            {
                wmsJournalTable.JournalId = wmsJournalTrans.JournalId;
                if (!journalIdSet.in(wmsJournalTrans.JournalId))
                {
                    journalIdSet.add(wmsJournalTrans.JournalId);
                }
            }
        }
        return journalIdSet.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasPurchLines</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a given arrival journal contains purchase order related lines.
    /// </summary>
    /// <param name="_journalId">
    ///    A Journal ID.
    /// </param>
    /// <returns>
    ///    A <c>WMSJournalTrans.RecId</c> translating to true if purchase order lines exist in the journal;
    ///    otherwise, nothing which translates to false.
    /// </returns>
    static boolean hasPurchLines(JournalId _journalId)
    {
        WMSJournalTrans wmsJournalTrans;

        select firstonly RecId from wmsJournalTrans
            where wmsJournalTrans.JournalId       == _journalId
               && wmsJournalTrans.InventTransType == InventTransType::Purch;

        return wmsJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReturnLines</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a given arrival journal contains sales return order lines.
    /// </summary>
    /// <param name="_journalId">
    ///    A journal ID.
    /// </param>
    /// <returns>
    ///    true if sales return order lines exist in the journal; otherwise, false.
    /// </returns>
    static boolean hasReturnLines(JournalId _journalId)
    {
        WMSJournalTrans wmsJournalTrans;

        select firstonly RecId from wmsJournalTrans
            where wmsJournalTrans.JournalId         == _journalId
               && (wmsJournalTrans.InventTransType  == InventTransType::Sales
               || wmsJournalTrans.InventTransType   == InventTransType::QuarantineOrder)
               && wmsJournalTrans.ReturnItemNum     != '';

        return wmsJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>latestArrivalJournal</Name>
				<Source><![CDATA[
    static WMSJournalId latestArrivalJournal(InventTransId    _inventTransId, WMSJournalId excludeJournalId = '')
    {
        WMSJournalTrans wmsJournalTrans;

        if (excludeJournalId)
        {
            select firstonly JournalId from wmsJournalTrans
                order by JournalId desc
                where wmsJournalTrans.InventTransId     == _inventTransId
                   && wmsJournalTrans.JournalId         != excludeJournalId;
        }
        else
        {
            select firstonly JournalId from wmsJournalTrans
                order by JournalId desc
                where wmsJournalTrans.InventTransId     == _inventTransId;
        }

        return wmsJournalTrans.JournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrFindWHArrivalJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>WMSJournalTable</c> record.
    /// </summary>
    /// <param name="_returnSalesId">
    /// The sales ID of the return order used to find the <c>WMSJournalTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean that determines whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// The retrieved <c>WMSJournalTable</c> record.
    /// </returns>
    public static WMSJournalTable mcrFindWHArrivalJournal(SalesId _returnSalesId, boolean _forUpdate = false)
    {
        WMSJournalTable wmsJournalTable;

        if (_returnSalesId)
        {
            wmsJournalTable.selectForUpdate(_forUpdate);

            select firstonly wmsJournalTable
                where wmsJournalTable.inventTransRefId == _returnSalesId;
        }

        return wmsJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    public static JournalDescription name(WMSJournalId wmsJournalId)
    {
        return WMSJournalTable::find(wmsJournalId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsReceiptQtyInProgress</Name>
				<Source><![CDATA[
    public static container pdsReceiptQtyInProgress(
        InventTransId   _inventTransId,
        WMSJournalId    _excludeJournalId = '')
    {
        WMSJournalTable wmsJournalTable;
        WMSJournalTrans wmsJournalTrans;

        if (_excludeJournalId)
        {
            select sum(Qty), sum(PdsCWQty)
                from wmsJournalTrans
                where wmsJournalTrans.InventTransId == _inventTransId
                    && wmsJournalTrans.JournalId    != _excludeJournalId
                exists join wmsJournalTable
                where wmsJournalTable.JournalId == wmsJournalTrans.JournalId
                    && wmsJournalTable.Posted   == NoYes::No;
        }
        else
        {
            select sum(Qty), sum(PdsCWQty)
                from wmsJournalTrans
                where wmsJournalTrans.InventTransId == _inventTransId
                exists join wmsJournalTable
                    where wmsJournalTable.JournalId == wmsJournalTrans.JournalId
                        && wmsJournalTable.Posted == NoYes::No;
        }

        return [wmsJournalTrans.Qty, wmsJournalTrans.PdsCWQty];
    }

]]></Source>
			</Method>
			<Method>
				<Name>receiptQtyInProgress</Name>
				<Source><![CDATA[
    static InventQty receiptQtyInProgress(InventTransId    _inventTransId, WMSJournalId _excludeJournalId = '')
    {
        //
        // Moved these lines to method pdsReceiptQtyInProgress to provide more efficient
        // query of both Qty and PdsCWQty at the same time. This method now reuses that
        // one to just get the Qty. This is provided for backwards compatibility and to match
        // the method signature in the sys layer.
        //

        return conpeek(WMSJournalTable::pdsReceiptQtyInProgress(_inventTransId,
            _excludeJournalId), 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>receiptQuarantineControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether one of the journal lines that is related to the specified <c>InventTransId</c>
    /// value has quarantine control on.
    /// </summary>
    /// <param name="_inventTransId">
    /// An <c>InventTransId</c> value that is used to search for arrival journal lines.
    /// </param>
    /// <param name="_excludeJournalId">
    /// A journal ID that should not be searched for related lines; optional.
    /// </param>
    /// <returns>
    /// A <c>NoYes</c> enumeration value that indicates whether quarantine control is set on the arrival
    /// journal lines.
    /// </returns>
    static InventQuarantineControl receiptQuarantineControl(InventTransId    _inventTransId, WMSJournalId _excludeJournalId = '')
    {
        WMSJournalTable wmsJournalTable;
        WMSJournalTrans wmsJournalTrans;

        if (_excludeJournalId)
        {
            select CreateQuarantineOrder from wmsJournalTrans
                where wmsJournalTrans.InventTransId         == _inventTransId
                   && wmsJournalTrans.JournalId             != _excludeJournalId
                   && wmsJournalTrans.CreateQuarantineOrder == NoYes::Yes
                exists join wmsJournalTable
                where wmsJournalTable.JournalId         == wmsJournalTrans.JournalId
                   && wmsJournalTable.Posted            == NoYes::No;
        }
        else
        {
            select CreateQuarantineOrder from wmsJournalTrans
                where wmsJournalTrans.InventTransId         == _inventTransId
                   && wmsJournalTrans.CreateQuarantineOrder == NoYes::Yes
                exists join wmsJournalTable
                where wmsJournalTable.JournalId         == wmsJournalTrans.JournalId
                   && wmsJournalTable.Posted            == NoYes::No;
        }

        return wmsJournalTrans.CreateQuarantineOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showWMSJournals</Name>
				<Source><![CDATA[
    static void showWMSJournals(container _packedJournalIdSet, boolean _showPosted = false)
    {
        Args                    args;
        Set                     journalIdSet = new Set(Types::String);
        SetEnumerator           journalIdSetEnum;
        WMSJournalId            wmsJournalId;
        str                     rangeStr;

        if (conLen(_packedJournalIdSet) > 3)
        {
            journalIdSet = Set::create(_packedJournalIdSet);
        }

        journalIdSetEnum = journalIdSet.getEnumerator();
        while (journalIdSetEnum.moveNext())
        {
            wmsJournalId = journalIdSetEnum.current();
            if (rangeStr)
            {
                rangeStr += ', ';
            }
            rangeStr += queryValue(wmsJournalId);
        }

        args = WMSJournalTable::constructArgs();
        JournalFormParameters journalFormParameters = JournalFormParameters::construct();
        journalFormParameters.parmJournalIdRangeValue(rangeStr);
        journalFormParameters.parmUseAllOpenPosted(true);
        journalFormParameters.parmAllOpenPosted(_showPosted ? AllOpenPosted::Posted : AllOpenPosted::Open);
        args.parmObject(journalFormParameters);

		new MenuFunction(menuItemDisplayStr(WMSJournalTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS17145";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDispositionCodeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates values entered in the disposition code field from the arrival journal and quarantine.
    /// </summary>
    /// <param name="_salesId">
    /// A <see cref="T:SalesId" />.
    /// </param>
    /// <param name="_dispositionCodeId">
    /// A <see cref="T:ReturnDispositionCodeId" />.
    /// </param>
    /// <returns>
    /// true if the values in the disposition code field are valid; otherwise, false.
    /// </returns>
    /// <remarks>
    ///  At this stage in the return process, some specific disposition actions are not valid.
    ///  <list type="number">
    ///   <item>
    ///    <description>
    ///    <c>CreditOnly</c> should only be used from the return order form.
    ///    </description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    If a replacement order was created,  the disposition actions <c>ReplaceCredit</c> and
    ///    <c>ReplaceScrap</c> are invalid.
    ///    </description>
    ///   </item>
    ///  </list>
    /// </remarks>
    static boolean validateDispositionCodeId(SalesId _salesId, ReturnDispositionCodeId _dispositionCodeId)
    {
        DispositionAction dispositionAction = ReturnDispositionCode::find(_dispositionCodeId).DispositionAction;
        boolean           ret = true;

        switch (dispositionAction)
        {
            case DispositionAction::CreditOnly :
                ret = false;
                break;

            case DispositionAction::ReplaceCredit:
            case DispositionAction::ReplaceScrap :
                if (SalesTable::find(_salesId).ReturnReplacementCreated)
                {
                    ret = false;
                }
                break;
        }

        if (!ret)
        {                //The entered value '%1' is not a valid Disposition code.
            error(strFmt("@SYS121768", _dispositionCodeId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructArgs</Name>
				<Source><![CDATA[
    protected static Args constructArgs(Object _caller = null)
    {
        Args args = new Args();

        if (_caller)
        {
            args.caller(_caller);
        }

        return args;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123908</DeveloperDocumentation>
	<Label>@SYS51056</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>journalId</TitleField1>
	<TitleField2>description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>IdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>IdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>WMSJournalTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WMSJournalTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>journalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>journalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>journalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>blockUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>systemBlocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>posted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Blocking</Name>
			<Label>@SYS50247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>blockUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>blockUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>systemBlocked</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>History</Name>
			<Label>@SYS10575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>postedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>postedUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>journalIdOriginal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>journalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>journalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>journalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ModeOfHandling</Name>
			<Label>@SYS50412</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>checkPickingLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createQuarantineOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingSlip</Name>
			<Label>@SYS11549</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>packingSlip</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>deletePostedLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>vendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventTransRefId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnOrders</Name>
			<Label>@SYS104918</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnItemNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnDispositionCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totals</Name>
			<Label>@SYS8311</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>numOfLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>blockUserGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalBlockUserGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>blockUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalBlockUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>checkBufferLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCheckBufferLocation</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>checkPickingLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCheckPickingLocation</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>createQuarantineOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQuarantineControl</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>deletePostedLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDeletePostedLines</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventTransRefId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>inventTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>journalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSJournalId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>journalIdOriginal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSJournalIdOrignal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>journalNameId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>journalType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>numOfLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalNumOfLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>packingSlip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS11549</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>palletTransports</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSPalletTransports</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>postedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPostedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>postedUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalPostedUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnDispositionCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnDispositionCodeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnItemNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnItemNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>sessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>sessionLoginDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>systemBlocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSystemBlocked</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>vendAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PostedIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>journalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>journalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>journalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionLoginDateTime</MapField>
					<MapFieldTo>sessionLoginDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedDateTime</MapField>
					<MapFieldTo>postedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimesheetNbr</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SystemBlocked</MapField>
					<MapFieldTo>systemBlocked</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
					<MapFieldTo>posted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherNumberSeq</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>journalNameId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserId</MapField>
					<MapFieldTo>blockUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherDraw</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DetailSummary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeletePostedLines</MapField>
					<MapFieldTo>deletePostedLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalType</MapField>
					<MapFieldTo>journalType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionId</MapField>
					<MapFieldTo>sessionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumOfLines</MapField>
					<MapFieldTo>numOfLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherChange</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedUserId</MapField>
					<MapFieldTo>postedUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserGroupId</MapField>
					<MapFieldTo>blockUserGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalIdOriginal</MapField>
					<MapFieldTo>journalIdOriginal</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxObligationCompany</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BlockingUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BlockingUser</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>blockUserId</Name>
					<SourceEDT>JournalBlockUserId</SourceEDT>
					<Field>blockUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BlockingUserGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>blockUserGroupId</Name>
					<SourceEDT>JournalBlockUserGroupId</SourceEDT>
					<Field>blockUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123523</EntityRelationshipRole>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>vendAccount</Name>
					<Field>vendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::Sales</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventBOM</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123851</EntityRelationshipRole>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventBOM</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::BOMMain</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::BOM</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventCount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123853</EntityRelationshipRole>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventCount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::InventCounting</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::Count</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>inventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventLossProfit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123855</EntityRelationshipRole>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventLossProfit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::InventLossProfit</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::LossProfit</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventMovement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123909</EntityRelationshipRole>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventMovement</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::InventTransaction</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::Movement</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventQuarantineOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123857</EntityRelationshipRole>
			<RelatedTable>InventQuarantineOrder</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::QuarantineOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>QuarantineId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransfer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123859</EntityRelationshipRole>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransfer</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::InventTransfer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::Transfer</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginalLocationJournal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WMSJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>journalIdOriginal</Name>
					<SourceEDT>WMSJournalIdOrignal</SourceEDT>
					<Field>journalIdOriginal</Field>
					<RelatedField>journalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PostedIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PostingUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PostingUser</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>postedUserId</Name>
					<SourceEDT>JournalPostedUserId</SourceEDT>
					<Field>postedUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Production</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123840</EntityRelationshipRole>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::Production</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Purch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123518</EntityRelationshipRole>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReturnDispositionCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReturnDispositionCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnDispositionCodeId</Name>
					<SourceEDT>ReturnDispositionCodeId</SourceEDT>
					<Field>ReturnDispositionCodeId</Field>
					<RelatedField>DispositionCodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DispositionCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123519</EntityRelationshipRole>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::Sales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123524</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>vendAccount</Name>
					<Field>vendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WMSJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>journalNameId</Name>
					<SourceEDT>WMSJournalNameId</SourceEDT>
					<Field>journalNameId</Field>
					<RelatedField>journalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ConsignmentReplenishmentVendor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123524</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Vendor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ArrivalJournal</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>vendAccount</Name>
					<Field>vendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::ConsignmentReplenishmentOrder</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ConsignmentReplenishmentOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@Consignment:Table_Singular_ConsignmentReplenishmentOrderHeader</EntityRelationshipRole>
			<RelatedTable>ConsignmentReplenishmentOrderHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ConsignmentReplenishmentOrder</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ArrivalJournal</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>inventTransType</Name>
					<Field>inventTransType</Field>
					<ValueStr>InventTransType::ConsignmentReplenishmentOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>ReplenishmentOrderNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>