<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFBDetailReconcile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSFBDetailReconcile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountToInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the reconciled amount of an invoice line.
    /// </summary>
    /// <param name="_invoiceLine">
    /// Invoice line that contains reconciled amount.
    /// </param>
    /// <returns>
    /// The calculated reconciled amount of the invoice line.
    /// </returns>
    Amount amountToInvoice(TMSInvoiceLine _invoiceLine)
    {
        return (select sum(Amount) from TMSFBDetailReconcile
                    where TMSFBDetailReconcile.FreightBillDetailRecId   == _invoiceLine.RecId).Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPayAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to display the boolean indicating whether to pay the reconciled amount to the freight vendor.
    /// </summary>
    /// <returns>
    /// Boolean indicating whether to pay the reconciled amount to the freight vendor.
    /// </returns>
    display TMSPayAmount displayPayAmount()
    {
        return TMSFreightMatchReason::find(this.FreightReasonCode).PayAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayReasonCodeDesc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to display reason code description.
    /// </summary>
    /// <returns>
    /// The reason code description.
    /// </returns>
    display Description displayReasonCodeDesc()
    {
        return TMSFreightMatchReason::find(this.FreightReasonCode).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountReconciled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the reconciled amount of a freight bill.
    /// </summary>
    /// <param name="_freightBillRecId">
    /// Id of the freight bill record.
    /// </param>
    /// <returns>
    /// The reconciled amount of a freight bill.
    /// </returns>
    public static Amount amountReconciled(TMSFreightBillDetailRecId   _freightBillRecId)
    {
        TMSFBDetailReconcile    tmsFBDetailReconcile;

        if (_freightBillRecId)
        {
            select firstOnly sum(Amount) from tmsFBDetailReconcile
                where tmsFBDetailReconcile.FreightBillDetailRecId == _freightBillRecId;
        }

        return tmsFBDetailReconcile.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReconcile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>TMSFBDetailReconcile</c> record from a temporary record.
    /// </summary>
    /// <returns>
    /// The created <c>TMSFBDetailReconcile</c> record.
    /// </returns>
    public static RecId createReconcile(TMSTmpInvReconcile _tmpInvReconcile)
    {
        TMSInvoiceApproval      invoiceApproval = new TMSInvoiceApproval();
        TMSFBDetailReconcile    fbReconcile;

        ttsBegin;

        fbReconcile.FreightReasonCode            = _tmpInvReconcile.FreightReasonCode;
        fbReconcile.FreightBillDetailRecId       = _tmpInvReconcile.RefRecId;
        fbReconcile.Amount                       = _tmpInvReconcile.Amount;
        fbReconcile.CurrentSession               = NoYes::Yes;
        if (!fbReconcile.validateWrite())
        {
            throw error(strFmt("@TRX:TMSCannotInsertRecordInTable", tablePName(TMSFBDetailReconcile)));
        }
        else
        {
            fbReconcile.insert();
        }
       
        ttsCommit;

        return fbReconcile.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSFBDetailReconcile</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly TMSFBDetailReconcile
                    where TMSFBDetailReconcile.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSFBDetailReconcile</c> record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSFBDetailReconcile find(RecId   _recId,
                                            boolean _forupdate = false)
    {
        TMSFBDetailReconcile    tmsFBDetailReconcile;

        if (_recId)
        {
            tmsFBDetailReconcile.selectForUpdate(_forupdate);

            select firstonly tmsFBDetailReconcile
                where tmsFBDetailReconcile.RecId == _recId;
        }

        return tmsFBDetailReconcile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetWorkflowStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Resets workflow status when rejected.
    /// </summary>
    /// <param name="_invoiceLine">
    ///     The <c>TMSInvoiceLine</c> record to reset.
    /// </param>
    public static void resetWorkflowStatus(TMSInvoiceLine _invoiceLine)
    {
        TMSInvoiceLineReconcile lineReconcile;

        ttsBegin;

        while select forUpdate lineReconcile
            where lineReconcile.InvoiceLineRecId   == _invoiceLine.RecId &&
                  lineReconcile.WorkflowStatus     == TMSWorkflowStatus::Submitted
        {
            lineReconcile.WorkflowStatus = TMSWorkflowStatus::None;
            if (!lineReconcile.validateWrite())
            {
                throw error(strFmt("@TRX:TMSCannotUpdateRecordInTable", tablePName(TMSInvoiceLineReconcile)));
            }
            else
            {
                lineReconcile.update();
            }
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1905</DeveloperDocumentation>
	<Label>@TRX1400</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>FreightReasonCode</TitleField1>
	<TitleField2>Amount</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightBillDetailRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReconciled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightBillDetailRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentSession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReconciled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoReconciled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSAutoReconciled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CurrentSession</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCurrentSession</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FreightBillDetailRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TMSFreightBillDetailRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSFreightReasonCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TMSFreightBillDetailIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FreightBillDetailRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSFreightBillDetail</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSFreightBillDetail</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FreightBillDetailRecId</Name>
					<Field>FreightBillDetailRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSFreightMatchReason</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSFreightMatchReason</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FreightReasonCode</Name>
					<SourceEDT>TMSFreightReasonCode</SourceEDT>
					<Field>FreightReasonCode</Field>
					<RelatedField>FreightReasonCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>