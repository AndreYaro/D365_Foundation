<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceDiscGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkGroupInUse</Name>
				<Source><![CDATA[
    boolean checkGroupInUse()
    {
        boolean ok = false;

        ok = this.checkGroupInUseCurrenctCompany();

        ok = ok ? ok : this.checkGroupInUseCrossCompany();

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkGroupInUseCurrenctCompany</Name>
				<Source><![CDATA[
    private boolean checkGroupInUseCurrenctCompany()
    {
        boolean ok = false;

        switch (this.Module)
        {
            case ModuleInventCustVend::Invent:
                if (PriceDiscTable::existItemRelation(this.custRelation(this.Type), this.GroupId)
                    || PriceDiscTable::existItemRelation(this.vendRelation(this.Type), this.GroupId))
                {
                    ok = true;
                }
                break;
            case ModuleInventCustVend::Cust:
                if (PriceDiscTable::existAccountRelation(this.custRelation(this.Type), this.GroupId))
                {
                    ok = true;
                }

                // Check Project sales price
                if (ProjHourSalesPrice::checkPriceGroupInUse(this.GroupId)    ||
                    ProjCostSalesPrice::checkPriceGroupInUse(this.GroupId)    ||
                    ProjRevenueSalesPrice::checkPriceGroupInUse(this.GroupId) ||
                    SMASalesPriceSubscription::checkPriceGroupInUse(this.GroupId))
                {
                    ok = true;
                }
                break;

            case ModuleInventCustVend::Vend:
                if (PriceDiscTable::existAccountRelation(this.vendRelation(this.Type), this.GroupId))
                {
                    ok = true;
                }
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkGroupInUseCrossCompany</Name>
				<Source><![CDATA[
    private boolean checkGroupInUseCrossCompany()
    {
        SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
        if (policy.RecId && policy.IsEnabled)
        {
            Query    query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this.orig(), policy.RecId);
            QueryRun queryRun = new QueryRun(query);

            while (queryRun.Next())
            {
                PriceDiscGroup companyPriceDiscGroup = queryRun.get(this.TableId);
                DataAreaId company = companyPriceDiscGroup.DataAreaId;
                if (companyPriceDiscGroup && company && company != curExt())
                {
                    changecompany(company)
                    {
                        PriceDiscGroup priceDiscGroup = PriceDiscGroup::find(companyPriceDiscGroup.Module, companyPriceDiscGroup.Type, companyPriceDiscGroup.GroupId);
                        if (priceDiscGroup.RecId)
                        {
                            buf2Buf(this, priceDiscGroup);
                            if (priceDiscGroup.checkGroupInUseCurrenctCompany())
                            {
                                return true;
                            }
                        }
                    }
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custRelation</Name>
				<Source><![CDATA[
    PriceType custRelation(PriceGroupType _priceGroupType)
    {
        return PriceGroupTypeTradeAgreementMapping::newPriceGroupTypeTradeAgreementMapping(_priceGroupType).priceDiscType(ModuleInventCustVend::Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean  validateDelete()
    {
        if (this.checkGroupInUse())
        {
            return checkFailed("@SYS18528");
        }

        RetailAttributesLegalEntityLookup retailAttributesLegalEntityLookup;

        select firstonly retailAttributesLegalEntityLookup
            where (retailAttributesLegalEntityLookup.PurchaseLineDisc == this.GroupId
                || retailAttributesLegalEntityLookup.PurchaseMultiLineDisc == this.GroupId
                || retailAttributesLegalEntityLookup.SalesLineDiscount == this.GroupId
                || retailAttributesLegalEntityLookup.SalesMultiLineDiscount == this.GroupId)
                && retailAttributesLegalEntityLookup.LegalEntity == CompanyInfo::current();

        if (retailAttributesLegalEntityLookup)
        {
            return checkFailed(strfmt(("@Retail:RetailAttributesLegalEntityLookupPropertiesDeleteValidation"), this.GroupId, EcoResCategory::find(retailAttributesLegalEntityLookup.Category).Name));
        }

        boolean ok = super();

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean  validateWrite()
    {
        boolean ret = super();

        if (ret && this.RecId)
        {
            if (this.GroupId != this.orig().GroupId)
            {
                if (this.checkGroupInUse())
                {
                    ret = checkFailed("@SYS28093");
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendRelation</Name>
				<Source><![CDATA[
    PriceType vendRelation(PriceGroupType _priceGroupType)
    {
        return PriceGroupTypeTradeAgreementMapping::newPriceGroupTypeTradeAgreementMapping(_priceGroupType).priceDiscType(ModuleInventCustVend::Vend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(ModuleInventCustVend  module,
                              PriceGroupType        type,
                              PriceGroupId            priceGroup)
    {
        if (! PriceDiscGroup::exist(module, type, priceGroup))
        {
            return checkFailed(strFmt("@SYS14690", priceGroup));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(ModuleInventCustVend   module,
                         PriceGroupType         type,
                         PriceGroupId           groupId)
    {
        if (groupId)
        {
            return (select firstonly RecId from priceDiscGroup
                        index hint PriceDiscGroup
                        where priceDiscGroup.Module     == module       &&
                              priceDiscGroup.Type       == type         &&
                              priceDiscGroup.GroupId    == groupId
                   ).RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PriceDiscGroup  find(ModuleInventCustVend    module,
                                PriceGroupType          type,
                                PriceGroupId            priceGroupId,
                                boolean                 update = false)
    {
        PriceDiscGroup  priceDiscGroup;

        if (priceGroupId)
        {
            priceDiscGroup.selectForUpdate(update);

            select firstonly priceDiscGroup
                index hint PriceDiscGroup
                where priceDiscGroup.Module  == module &&
                      priceDiscGroup.Type    == type   &&
                      priceDiscGroup.GroupId == priceGroupId;
        }

        return priceDiscGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(ModuleInventCustVend   module,
                     PriceGroupType         type,
                     PriceGroupId           priceGroupId)
    {
        return PriceDiscGroup::find(module, type, priceGroupId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceGroupIdLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a lookup for the <c>PriceDiscGroup</c> table.
    /// </summary>
    /// <param name="_callingControl">
    /// The form string control object to use to perform the lookup.
    /// </param>
    /// <param name="_priceDiscGroup">
    /// The <c>PriceDiscGroup</c> record containing price group type and price disc module, which is used to filter price group lookup data.
    /// </param>
    public static void priceGroupIdLookup(FormControl _callingControl, PriceDiscGroup _priceDiscGroup)
    {
        Query                query = new Query();
        QueryBuildDataSource qbds;
        SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tableNum(PriceDiscGroup), _callingControl);

        sysTableLookup.addLookupfield(fieldNum(PriceDiscGroup, GroupId));
        sysTableLookup.addLookupfield(fieldNum(PriceDiscGroup, Name));

        qbds = query.addDataSource(tableNum(PriceDiscGroup));
        qbds.addRange(fieldNum(PriceDiscGroup, Type)).value(queryValue(_priceDiscGroup.Type));
        qbds.addRange(fieldNum(PriceDiscGroup, Module)).value(queryValue(_priceDiscGroup.Module));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PriceDisc</ConfigurationKey>
	<DeveloperDocumentation>@SYS124473</DeveloperDocumentation>
	<FormRef>PriceDiscGroup</FormRef>
	<Label>@SYS4707</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>GroupId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PriceDiscGroup</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>PriceDiscGroup</PrimaryIndex>
	<ReplacementKey>PriceDiscGroup</ReplacementKey>
	<TableContents>BaseDefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>PriceDiscGroup</Relation>
			<Table>RetailDiscountPriceGroup</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GroupId</Name>
			<Label>@SYS4707</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRGroupType</Name>
			<Label>@SYS135297</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRPriceDiscGroupType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Retail</Name>
			<Label>@RET3014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailCheckSalesPriceStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailPricingPriorityNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MCRPriceDiscGroupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceDiscGroupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Module</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscModule</ExtendedDataType>
			<EnumType>ModuleInventCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PriceGroupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailCheckSalesPriceStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCheckSalesPriceStatus</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RetailPricingPriorityNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RetailPricingPriorityNumber</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceDiscGroup</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Module</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPricingPriorityTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailPricingPriorityTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailPricingPriorityNumber</Name>
					<Field>RetailPricingPriorityNumber</Field>
					<RelatedField>PriorityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>