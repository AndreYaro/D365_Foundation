<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendProspectiveVendorRegistrationRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendProspectiveVendorRegistrationRequest extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.RequestState = VendProspectiveVendorRegistrationRequestState::New;
        this.SubmittedDate = DateTimeUtil::getSystemDateTime();
        this.LanguageId = CompanyInfo::exist() ? CompanyInfo::find().LanguageId : strLwr(new Session().interfaceLanguage());
        this.RequestCompany = this.getDefaultCompany();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultCompany</Name>
				<Source><![CDATA[
    private DataAreaId getDefaultCompany()
    {
        var defaultCompany = VendRequestManagementParameters::find().DefaultCompany;
        
        return defaultCompany ? defaultCompany : curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
        
        if (ret && !SysEmailDistributor::validateEmail(this.Email))
        {
            ret = checkFailed("@SYS99572");
        }

        if (ret && this.UserRequestId && this.RequestState == VendProspectiveVendorRegistrationRequestState::New)
        {
            ret = checkFailed("@SCM:RequestStateIsNotValid");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFullName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the full name from the parts of the name specified.
    /// </summary>
    /// <returns>The full name.</returns>
    public DirPartyName getFullName()
    {             
        DirPersonName dirPersonName;
        dirPersonName.FirstName = this.FirstName;
        dirPersonName.MiddleName = this.MiddleName;
        dirPersonName.LastName = this.LastName;

        // DirParameters (Global addressbook parameters) defaults the name sequence to FirstMiddleLast, however it is changeable.
        return DirPerson::calculateName(dirPersonName, DirNameSequence::findByRecId(DirParameters::find().NameSequence).DisplayAs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByEmail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the prospective vendor registration request record by email address.
    /// </summary>
    /// <param name = "_email">The email address specified.</param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>VendProspectiveVendorRegistrationRequest</c> table.
    /// </returns>
    public static VendProspectiveVendorRegistrationRequest findByEmail(Email _email, boolean _forUpdate = false)
    {
        VendProspectiveVendorRegistrationRequest registrationRequest;

        registrationRequest.selectForUpdate(_forUpdate);
        
        select firstonly registrationRequest 
            where registrationRequest.Email == _email;

        return registrationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>VendProspectiveVendorRegistrationRequest</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>VendProspectiveVendorRegistrationRequest</c> table.
    /// </returns>
    public static VendProspectiveVendorRegistrationRequest find(VendProspectiveVendorRegistrationRequestRecId _recId, boolean _forUpdate = false)
    {
        VendProspectiveVendorRegistrationRequest registrationRequest;

        if (_recId)
        {
            registrationRequest.selectForUpdate(_forUpdate);

            select firstonly registrationRequest
                 where registrationRequest.RecId == _recId;
        }

        return registrationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initiateUserRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiates the User Request for the specified <c>VendProspectiveVendorRegistrationRequest</c> record.
    /// </summary>
    public void initiateUserRequest()
    {
        if (this.RequestState != VendProspectiveVendorRegistrationRequestState::New)
        {
            throw error(strFmt("@SCM:ProspectiveVendorRegistrationRequestInitiateWarningWrongState", this.Email, strLwr(enum2Str(this.RequestState))));
        }

        if (this.OrganizationType != DirPartyBaseType::Organization && this.OrganizationType != DirPartyBaseType::Person)
        {
            throw error(strFmt("@SCM:ProspectiveVendorRegistrationRequestInitiateWarningOrganizationType", this.Email));
        }

        VendVendorPortalUserRequestManager vendorPortalUserRequestManager = VendVendorPortalUserRequestManager::construct();
        vendorPortalUserRequestManager.createProspectiveVendorUserCreationRequest(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = super();

        if (ret && this.RequestCompany && this.registrationCreated())
        {
            changecompany (this.RequestCompany)
            {
                VendProspectiveVendorRegistration vendProspectiveVendorRegistration = VendProspectiveVendorRegistration::findByRegistrationRequest(this.RecId);
            
                if (vendProspectiveVendorRegistration)
                {
                    ret = vendProspectiveVendorRegistration.validateDelete();
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByUserRequestId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the vendor registration request record by user request Id.
    /// </summary>
    /// <param name = "_userRequestId">The user request id.</param>
    /// <param name ="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>
    /// A record in the <c>VendProspectiveVendorRegistrationRequest</c> table.
    /// </returns>
    public static VendProspectiveVendorRegistrationRequest findByUserRequestId(SysUserRequestID _userRequestId, boolean _forUpdate = false)
    {
        if (!_userRequestId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        VendProspectiveVendorRegistrationRequest registrationRequest;

        registrationRequest.selectForUpdate(_forUpdate);
        
        select firstonly registrationRequest
            where registrationRequest.UserRequestID == _userRequestId;

        return registrationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToUserRequested</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to UserRequested.
    /// </summary>
    public void setRequestStateToUserRequested()
    {
        this.ProcessedDate = DateTimeUtil::getSystemDateTime();
        this.RequestState = VendProspectiveVendorRegistrationRequestState::UserRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToUserInvited</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to UserInvited.
    /// </summary>
    public void setRequestStateToUserInvited()
    {
        this.RequestState = VendProspectiveVendorRegistrationRequestState::UserInvited;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (this.RequestState != VendProspectiveVendorRegistrationRequestState::Approved
            && this.RequestState != VendProspectiveVendorRegistrationRequestState::Rejected)
        {
            VendVendorPortalUserRequestManager::construct().createProspectiveVendorUserDeactivationRequest(this.RecId);
        }

        if (this.RequestCompany && this.registrationCreated())
        {
            changecompany (this.RequestCompany)
            {
                VendProspectiveVendorRegistration vendProspectiveVendorRegistration = VendProspectiveVendorRegistration::findByRegistrationRequest(this.RecId, true);
        
                if (vendProspectiveVendorRegistration)
                {
                    vendProspectiveVendorRegistration.delete();
                }
            }
        }

        VendProspectiveVendorRegistrationRequestStaging vendProspectiveVendorRegistrationRequestStaging;
        delete_from vendProspectiveVendorRegistrationRequestStaging
            where vendProspectiveVendorRegistrationRequestStaging.EmailAddress == this.Email;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToRegistrationInProgress</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to RegistrationInProgress.
    /// </summary>
    public void setRequestStateToRegistrationInProgress()
    {
        this.RequestState = VendProspectiveVendorRegistrationRequestState::RegistrationInProgress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToVendorRequestCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to VendorRequestCreated.
    /// </summary>
    public void setRequestStateToVendorRequestCreated()
    {
        this.RequestState = VendProspectiveVendorRegistrationRequestState::VendorRequestCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToApproved</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to Approved.
    /// </summary>
    public void setRequestStateToApproved()
    {
        this.RequestState = VendProspectiveVendorRegistrationRequestState::Approved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequestStateToRejected</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the state of the registration request to Rejected.
    /// </summary>
    public void setRequestStateToRejected()
    {
        this.RequestState = VendProspectiveVendorRegistrationRequestState::Rejected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registrationCreated</Name>
				<Source><![CDATA[
    public boolean registrationCreated()
    {
        return this.RequestState != VendProspectiveVendorRegistrationRequestState::New
            && this.RequestState != VendProspectiveVendorRegistrationRequestState::UserRequested
            && this.RequestState != VendProspectiveVendorRegistrationRequestState::UserInvited;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorRequestCreated</Name>
				<Source><![CDATA[
    public boolean vendorRequestCreated()
    {
        return this.RequestState == VendProspectiveVendorRegistrationRequestState::VendorRequestCreated
            || this.RequestState == VendProspectiveVendorRegistrationRequestState::Approved
            || this.RequestState == VendProspectiveVendorRegistrationRequestState::Rejected;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendorPortal</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ProspectiveVendorRegistrationRequestDevDoc</DeveloperDocumentation>
	<Label>@SCM:ProspectiveVendorRegistrationRequest</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>Email</TitleField1>
	<TitleField2>CompanyName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>EmailIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>EmailIdx</PrimaryIndex>
	<ReplacementKey>EmailIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FirstName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiddleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BusinessLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BusinessJustification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubmittedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestState</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FirstName</Name>
			<ExtendedDataType>FirstName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LastName</Name>
			<ExtendedDataType>LastName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MiddleName</Name>
			<ExtendedDataType>MiddleName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<ExtendedDataType>LanguageId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<ExtendedDataType>Email</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyName</Name>
			<ExtendedDataType>CompanyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationNumber</Name>
			<ExtendedDataType>DirOrganizationNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrganizationType</Name>
			<Label>@SYS134133</Label>
			<EnumType>DirPartyBaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusinessLine</Name>
			<ExtendedDataType>VendProspectiveVendorRegistrationRequestBusinessLine</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusinessJustification</Name>
			<ExtendedDataType>VendProspectiveVendorRegistrationRequestBusinessJustification</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SubmittedDate</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>UserRequestSubmittedDateTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ProcessedDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>UserRequestProcessedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequestState</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<EnumType>VendProspectiveVendorRegistrationRequestState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserRequestId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SysUserRequestID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RequestCompany</Name>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Label>@SYS315616</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EmailIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Email</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UserRequestIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UserRequestId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendorPortalUserRequest</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>SysUserRequest</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserRequestId1</Name>
					<Field>UserRequestId</Field>
					<RelatedField>RequestID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DataAreaId</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RequestCompany</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>RequestCompany</Field>
					<RelatedField>Id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>