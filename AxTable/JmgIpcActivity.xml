<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgIpcActivity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgIpcActivity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>breakSecs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the break time that is associated to the <c>JmgIpcActivity</c> record formatted as a
    /// string.
    /// </summary>
    /// <param name="_set">
    /// true if the break time must be updated with the specified value; otherwise, false.
    /// </param>
    /// <param name="value">
    /// The new value of the break time.
    /// </param>
    /// <returns>
    /// The break time that is associated to the <c>JmgIpcActivity</c> record formatted as a string.
    /// </returns>
    public edit JmgLabelSecondsBreak breakSecs(boolean _set, JmgTimeString value)
    {
        if (_set)
        {
            this.BreakSeconds = JmgProfileSeconds::unFormattedSeconds(value,JmgSecondPresentationEnum::Minuts);
        }

        return JmgProfileSeconds::formattedSeconds(this.BreakSeconds,JmgSecondPresentationEnum::Minuts);
    }

]]></Source>
			</Method>
			<Method>
				<Name>breakTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the break time that is associated with the <c>JmgIpcActivity</c> record formatted as a
    /// string.
    /// </summary>
    /// <param name="_set">
    /// true if the break time must be updated with the specified value; otherwise, false.
    /// </param>
    /// <param name="value">
    /// The new value of the break time.
    /// </param>
    /// <returns>
    /// The break time that is associated to the <c>JmgIpcActivity</c> record formatted as a string.
    /// </returns>
    public edit JmgLabelSecondsBreak breakTime(boolean _set, JmgTimeString value)
    {
        if (_set)
        {
            this.BreakSeconds = JmgProfileSeconds::unFormattedSeconds(value,JmgSecondPresentationEnum::Minuts);
        }

        return JmgProfileSeconds::formattedSeconds(this.BreakSeconds,JmgSecondPresentationEnum::Minuts);
    }

]]></Source>
			</Method>
			<Method>
				<Name>breakToleranceSeconds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the break tolerance time that is associated to the <c>JmgIpcActivity</c> record formatted
    /// as a string.
    /// </summary>
    /// <param name="_set">
    /// true if the break tolerance time must be updated with the specified value; otherwise, false.
    /// </param>
    /// <param name="value">
    /// The new value of the break tolerance time.
    /// </param>
    /// <returns>
    /// The break tolerance time that is associated to the <c>JmgIpcActivity</c> record formatted as a
    /// string.
    /// </returns>
    public edit JmgLabelSecondsBreakTolerance breakToleranceSeconds(boolean _set, JmgTimeString value)
    {
        if (_set)
        {
            this.BreakTolerance = JmgProfileSeconds::unFormattedSeconds(value,JmgSecondPresentationEnum::Minuts);
        }

        return JmgProfileSeconds::formattedSeconds(this.BreakTolerance,JmgSecondPresentationEnum::Minuts);
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    ///    A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    ///    A <c>dimensionCopy</c> object that was initialized by using the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the current hourly cost that is associated with the indirect activity.
    /// </summary>
    /// <returns>
    /// The current hourly cost that is associated with the <c>JmgIpcActivity</c> record.
    /// </returns>
    public display JmgActivityCostPrice cost()
    {
        if (hasTableAccess(tablenum(JmgIpcActivityCostPrice)))
        {
            return JmgIpcActivityCostPrice::find(this.Activity, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())).CostPrice;
        }
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>JmgIpcActivity</c> record from the database.
    /// </summary>
    /// <remarks>
    /// The associated <c>JmgJobTable</c> record is also deleted.
    /// </remarks>
    public void delete()
    {
        super();

        JmgJobTable::synchronizeJmgIpcActivity(this, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>JmgIpcActivity</c> record.
    /// </summary>
    /// <param name="_assignJobId">
    /// A Boolean value that indicates whether a job ID must be assigned to the <c>JmgIpcActivity</c>
    /// record.
    /// </param>
    void initValue(boolean _assignJobId = false)
    {
        super();

        if (_assignJobId)
        {
            this.JobId = NumberSeq::newGetNum(JmgParameters::numRefIpcActivityId()).num();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the <c>JmgIpcActivity</c> record into the database.
    /// </summary>
    /// <remarks>
    /// An associated <c>JmgJobTable</c> record is also inserted.
    /// </remarks>
    void insert()
    {
        ttsbegin;

        if (JmgIpcCategory::find(this.Activity))
            throw error("@SYS38700");

        super();

        JmgJobTable::synchronizeJmgIpcActivity(this);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    ///    field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was initialized by using the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    ///    this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>JmgIpcActivity</c> record in the database.
    /// </summary>
    /// <remarks>
    /// The associated <c>JmgJobTable</c> record is also updated.
    /// </remarks>
    public void update()
    {
        super();

        JmgJobTable::synchronizeJmgIpcActivity(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;
        NumberSeq numberSeq;
        // Must be done here, since jobId is a mandatory field.
        if (!this.RecId)
        {
            numberSeq = NumberSeq::newGetNum(JmgParameters::numRefIpcActivityId());
            this.JobId = numberSeq.num();
        }

        ret = super();

        if (ret &&
             (((this.LedgerDimension)   && (! this.OffsetLedgerDimension)) ||
             ((! this.LedgerDimension) && (this.OffsetLedgerDimension))     ))
        {
            ret = checkFailed("@SYS39076");
        }

        if (ret                                     &&
            (this.SignInOut != JmgSignInOut::Job)   &&
            ((select firstonly RecId from jmgIpcActivity
                    where (jmgIpcActivity.SignInOut == this.SignInOut) &&
                          (jmgIpcActivity.Activity  != this.Activity)).RecId))
        {
            ret = checkFailed(strfmt("@SYS39440",this.SignInOut));
        }

        if (!ret && !this.RecId)
        {
            NumberSeq::release(numberSeq.parmNumberSequenceCode(), numberSeq.num());
            this.JobId = '';
        }

        if (ret && this.SignInOut == JmgSignInOut::SysIndirect)
        {
            this.SignIn = NoYes::No;
        }

        if (ret && (this.Category != this.orig().Category))
        {
            this.Type = JmgIpcCategory::find(this.Category).Type;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActivityId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>JmgIpcActivity</c> record in the database based on the specified indirect activity ID.
    /// </summary>
    /// <param name="_activityId">
    /// The ID of the indirect activity to find.
    /// </param>
    /// <param name="_update">
    /// true if the returned <c>JmgIpcActivity</c> record is selected for update; otherwise, false.
    /// </param>
    /// <returns>
    /// A <c>JmgIpcActivity</c> record.
    /// </returns>
    static JmgIpcActivity findActivityId(JmgIpcActivityId _activityId, boolean _update = false)
    {
        JmgIpcActivity jmgIpcActivity;

        jmgIpcActivity.selectForUpdate(_update);

        select firstonly jmgIpcActivity
            where jmgIpcActivity.Activity == _activityId;

        return jmgIpcActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>JmgIpcActivity</c> record in the database based on a specified job ID.
    /// </summary>
    /// <param name="_jobId">
    /// The ID of the job to find.
    /// </param>
    /// <param name="_update">
    /// true if the returned <c>JmgIpcActivity</c> record must be selected for update; otherwise, false.
    /// </param>
    /// <returns>
    /// A <c>JmgIpcActivity</c> record.
    /// </returns>
    static JmgIpcActivity findJobId(JmgJobId _jobId, boolean _update = false)
    {
        JmgIpcActivity jmgIpcActivity;

        jmgIpcActivity.selectForUpdate(_update);

        select firstonly jmgIpcActivity
            where jmgIpcActivity.JobId == _jobId;

        return jmgIpcActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSignInJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the job id of the clock in system job.
    /// </summary>
    /// <returns>
    /// the job id of the clock in system job.
    /// </returns>
    static JmgJobId findSignInJobId()
    {
        return (select firstonly JobId from jmgIpcActivity where jmgIpcActivity.SignInOut == JmgSignInOut::SignIn).JobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSignOutJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the job id of the clock out system job.
    /// </summary>
    /// <returns>
    /// the job id of the clock out system job.
    /// </returns>
    static JmgJobId findSignOutJobId()
    {
        return (select firstonly JobId from jmgIpcActivity where jmgIpcActivity.SignInOut == JmgSignInOut::SignOut).JobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSignTypeJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the job ID of the specified type of system job.
    /// </summary>
    /// <param name="signType">
    /// The type of system job for which to retrieve the job ID.
    /// </param>
    /// <param name="check">
    /// true if an error should be thrown if the specified system job does not exist; otherwise, false.
    /// </param>
    /// <returns>
    /// The job ID of the specified type of system job.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The specified system job cannot be found.
    /// </exception>
    static JmgJobId findSignTypeJobId(JmgSignInOut signType,boolean check = false)
    {
        JmgJobId    signtypejobid   = (select firstonly JobId from jmgIpcActivity where jmgIpcActivity.SignInOut == signType).JobId;

        if (check && (! signtypejobid))
            throw error(strfmt("@SYS38535",enum2str(signType)));

        return signtypejobid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgRegistrationEmployees</ConfigurationKey>
	<DeveloperDocumentation>@SYS317249</DeveloperDocumentation>
	<Label>@SYS38378</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>Activity</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CatActIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>ActIdx</PrimaryIndex>
	<ReplacementKey>ActIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>JmgPayAgreementLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgPayAgreementLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgPayAgreementOverrideLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgPayAgreementOverrideLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgProfileSpec</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgProfileSpec</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgStampJournalTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgStampJournalTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgStampTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgStampTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgTermReg</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgTermReg</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Activity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignIn</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakSeconds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakTolerance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakPayable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakDrop</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Activity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Activity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BreakGroup</Name>
			<Label>@SYS38391</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakPayable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakDrop</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>breakSecs</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>breakToleranceSeconds</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimensions</Name>
			<Label>@SYS5951</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Activity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>costPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Properties</Name>
			<Label>@SYS10344</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SignIn</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignInOut</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SwitchCode</Name>
			<Label>@SYS39234</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EventApprove</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Activity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgIpcActivityId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BreakDrop</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS38510</Label>
			<EnumType>JmgBreakDropEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BreakPayable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS38511</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>BreakSeconds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgSeconds</ExtendedDataType>
			<Label>@SYS38554</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>BreakTolerance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgSeconds</ExtendedDataType>
			<Label>@SYS39037</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Category</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgIpcCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>costPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Price</ExtendedDataType>
			<Label>@SYS38945</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgIpcActivityName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EventApprove</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS39291</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JobId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SignIn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS38390</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SignInOut</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JmgSignInOut</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JmgStampTypeEnum</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JobIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JobId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ActIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Activity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CatActIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Activity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IpcActivity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JmgIpcCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgIpcCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IndirectActivity</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IpcActivity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Type</Name>
					<Field>Type</Field>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<SourceEDT>JmgIpcCategoryId</SourceEDT>
					<Field>Category</Field>
					<RelatedField>Category</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JmgJobTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>JmgJobTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JobId</Name>
					<Field>JobId</Field>
					<RelatedField>JobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IpcActivity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IpcActivity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>