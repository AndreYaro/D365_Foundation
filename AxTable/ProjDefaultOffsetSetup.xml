<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjDefaultOffsetSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjDefaultOffsetSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLedgerOffsetType</Name>
				<Source><![CDATA[
    public LedgerJournalACType getLedgerOffsetType()
{
    LedgerJournalACType ledgerJournalACType;

    switch (this.ProjOffsetType)
    {
        case ProjOffsetType::Ledger :
            ledgerJournalACType = LedgerJournalACType::Ledger;
            break;

        case ProjOffsetType::Cust :
            ledgerJournalACType = LedgerJournalACType::Cust;
            break;

        case ProjOffsetType::Vend :
            ledgerJournalACType = LedgerJournalACType::Vend;
            break;

        case ProjOffsetType::Bank :
            ledgerJournalACType = LedgerJournalACType::Bank;
            break;
    }

    return ledgerJournalACType;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmAccount</Name>
				<Source><![CDATA[
    public LedgerJournalAC parmAccount(LedgerJournalAC _account = '', ProjOffsetType _accountType = this.ProjOffsetType)
{
    DimensionAttributeValueCombination  ledgerDimension;
    LedgerJournalAC                     account;

    if (!prmisDefault(_accountType))
    {
        this.ProjOffsetType = _accountType;
    }

    // If account has been changed, update the backing ledger dimension value
    if (!prmisDefault(_account))
    {
        if (_account)
        {
            this.LedgerDimension = LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumberEnumModule(
                _account,
                _accountType,
                enumNum(ProjOffsetType),
                ModuleInventCustVend::Cust);
            account = _account;
        }
        else
        {
            account = '';
            this.LedgerDimension = 0;
        }
    }
    else if (this.LedgerDimension)
    {
        // If the account has not been changed, then pull the value from ledger dimension as the master
        select DisplayValue from ledgerDimension where ledgerDimension.RecId == this.LedgerDimension;
        account = ledgerDimension.DisplayValue;
    }

    return account;
}

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    public DimensionDynamicDefaultAccount parmLedgerDimension(DimensionDynamicDefaultAccount _ledgerDimension = this.LedgerDimension, ProjOffsetType _accountType = this.ProjOffsetType)
{
    if (!prmisDefault(_accountType))
    {
        this.ProjOffsetType = _accountType;
    }

    this.LedgerDimension = _ledgerDimension;
    return this.LedgerDimension;
}

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
{
    boolean         ret;
    ProjCategory    projCategory;

    ret = super(_fieldIdToCheck);

    if (ret && _fieldIdToCheck == fieldNum(ProjDefaultOffsetSetup,ProjCategoryId) && this.ProjCategoryId)
    {
        projCategory =  ProjCategory::find(this.ProjCategoryId);
        if (projCategory.CategoryType    != ProjCategoryType::Cost)
        {
            ret = checkFailed(strFmt("@SYS54897",this.ProjCategoryId));
        }
        if (ret && projCategory.SetupEstimate)
        {
            ret = checkFailed("@SYS90422");
        }
    }

    if (ret && _fieldIdToCheck == fieldNum(ProjDefaultOffsetSetup, LedgerDimension))
    {
        if (this.ProjOffsetType == ProjOffsetType::Bank)
        {
            if (this.parmAccount())
            {
                ret = BankAccountTable::checkIsActive(this.parmAccount());
            }
        }
    }

    if (ret && _fieldIdToCheck == fieldNum(ProjDefaultOffsetSetup, Resource) && this.Resource)
    {
        ret = ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);
    }

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
{
    boolean ret;

    ret = super();

    ret = ret && ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjDefaultOffsetSetup find(ProjId          _projId,
                                          ProjCategoryId  _categoryId,
                                          ResourceRecId   _resourceRecId)
{
    ProjDefaultOffsetSetup projDefaultOffsetSetup = null;

    select firstonly reverse projDefaultOffsetSetup
    where projDefaultOffsetSetup.ProjId         == _projId     &&
          projDefaultOffsetSetup.ProjCategoryId == _categoryId &&
          projDefaultOffsetSetup.Resource       == _resourceRecId;

    return projDefaultOffsetSetup;
}

]]></Source>
			</Method>
			<Method>
				<Name>findDefaultOffsetAccount</Name>
				<Source><![CDATA[
    public static ProjDefaultOffsetSetup findDefaultOffsetAccount(ProjId          _projId,
                                                                     ProjCategoryId  _categoryId,
                                                                     ResourceRecId   _resourceRecId)
{
    /* Find the default offset account. Following search priority is used:
     * Priority:    Employee:   Category:   Project:
     *    1            x            x           x
     *    2            -            x           x
     *    3            x            -           x
     *    4            -            -           x
     *    5            x            x           -
     *    6            -            x           -
     *    7            x            -           -
     *    8            -            -           -
     *
     *  x : employee / category / project  - match
     *  - : blank field in table
     */

    ProjDefaultOffsetSetup projDefaultOffsetSetup = null;
    ProjId              projId = _projId;

    do
    {
        projDefaultOffsetSetup = ProjDefaultOffsetSetup::find(projId, _categoryId, _resourceRecId);
        if (!projDefaultOffsetSetup)
        {
            projDefaultOffsetSetup = ProjDefaultOffsetSetup::find(projId, _categoryId, 0);
            if (!projDefaultOffsetSetup)
            {
                projDefaultOffsetSetup = ProjDefaultOffsetSetup::find(projId, '', _resourceRecId);
                if (!projDefaultOffsetSetup)
                {
                    projDefaultOffsetSetup = ProjDefaultOffsetSetup::find(projId, '', 0);
                    if (!projDefaultOffsetSetup)
                    {
                        projDefaultOffsetSetup = ProjDefaultOffsetSetup::find('', _categoryId, _resourceRecId);
                        if (!projDefaultOffsetSetup)
                        {
                            projDefaultOffsetSetup = ProjDefaultOffsetSetup::find('', _categoryId, 0);
                            if (!projDefaultOffsetSetup)
                            {
                                projDefaultOffsetSetup = ProjDefaultOffsetSetup::find('', '', _resourceRecId);
                                if (!projDefaultOffsetSetup)
                                {
                                   projDefaultOffsetSetup = ProjDefaultOffsetSetup::find('', '', 0);
                                }
                            }
                        }
                    }
                }
            }
        }

        projId  = ProjTable::find(projId).ParentId;
        if (projId && !projDefaultOffsetSetup.ProjId)
        {
            projDefaultOffsetSetup = ProjDefaultOffsetSetup::find(projId, _categoryId, _resourceRecId);
        }
    }
    while (!projDefaultOffsetSetup && projId);

    return projDefaultOffsetSetup;
}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124982</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>ProjDefaultOffsetSetup</FormRef>
	<Label>@SYS90195</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>ProjOffsetType</TitleField1>
	<TitleField2>LedgerDimension</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>DefaultOffsetAccountIndex</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>DefaultOffsetAccountIndex</PrimaryIndex>
	<ReplacementKey>DefaultOffsetAccountIndex</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOffsetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOffsetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OffsetAccount</Name>
			<Label>@SYS28572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjOffsetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOffsetType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDynamicDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjCategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjOffsetType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23950</Label>
			<EnumType>ProjOffsetType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DefaultOffsetAccountIndex</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjCategoryId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjOffsetType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Resource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>DimensionAttributeValueCombination_ProjDefaultOffsetSetup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124983</EntityRelationshipRole>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjCategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>ProjCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124983</EntityRelationshipRole>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>