<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSBillOfLading</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WMSBillOfLading extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addressCarrier_RU</Name>
				<Source><![CDATA[
    public display LogisticsAddressing addressCarrier_RU(boolean _extended = false, LanguageId _language = "")
    {
        Addressing                          ret;
        CustInvoiceJour                     custInvoiceJour;

        CustTable                           custTable;
        VendTable                           vendTable;
        CompanyInfo                         companyInfo;

        SalesPurchReportCounteragentData_RU counteragentData;

        if (_extended)
        {
            counteragentData = new SalesPurchReportCounteragentData_RU(_language);
        }

        switch (this.CarrierType_RU)
        {
            case CarrierType_W::Customer       :
                if (this.CarrierCode_RU)
                {
                    custTable = CustTable::find(this.CarrierCode_RU);
                }
                else
                {
                    custTable = CustTable::find(this.CustAccount);
                }

                if (counteragentData)
                {
                    counteragentData.parmName   (custTable.name());
                    counteragentData.parmAddress(custTable.address());
                    counteragentData.parmPhone  (custTable.phone());
                    counteragentData.parmTelefax(custTable.telefax());

                    ret = counteragentData.fullInvoiceInfo(true, true);
                }
                else
                {
                    ret = custTable.address();
                }
                break;
            case CarrierType_W::InvoiceAccount :
                select firstonly InvoiceAccount from custInvoiceJour
                    where custInvoiceJour.SalesId        == this.InventTransRefId &&
                          custInvoiceJour.BillOfLadingId == this.BillOfLadingId;
                custTable = CustTable::find(custInvoiceJour.InvoiceAccount);

                if (counteragentData)
                {
                    counteragentData.parmName   (custTable.name());
                    counteragentData.parmAddress(custTable.address());
                    counteragentData.parmPhone  (custTable.phone());
                    counteragentData.parmTelefax(custTable.telefax());

                    ret = counteragentData.fullInvoiceInfo(true, true);
                }
                else
                {
                    ret = custTable.address();
                }
                break;
            case CarrierType_W::Vendor         :
                if (this.CarrierCode_RU)
                {
                    vendTable = VendTable::find(this.CarrierCode_RU);
                    if (counteragentData)
                    {
                        counteragentData.parmName   (vendTable.name());
                        counteragentData.parmAddress(vendTable.postalAddress().Address);
                        counteragentData.parmPhone  (vendTable.phone());
                        counteragentData.parmTelefax(vendTable.telefax());

                        ret = counteragentData.fullInvoiceInfo(true, true);
                    }
                    else
                    {
                        ret = vendTable.postalAddress().Address;
                    }
                }
                else
                {
                    companyInfo = CompanyInfo::find();
                    if (counteragentData)
                    {
                        counteragentData.parmName   (companyInfo.name());
                        counteragentData.parmAddress(companyInfo.postalAddress().Address);
                        counteragentData.parmPhone  (companyInfo.phone());
                        counteragentData.parmTelefax(companyInfo.teleFax());
                        ret = counteragentData.fullInvoiceInfo(true, true);
                    }
                    else
                    {
                        ret = companyInfo.postalAddress().Address;
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addressLading_RU</Name>
				<Source><![CDATA[
    public display LogisticsAddressing addressLading_RU()
    {
        return LogisticsPostalAddress::findRecId(this.LadingPostalAddress_RU).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addressUnlading_RU</Name>
				<Source><![CDATA[
    public display LogisticsAddressing addressUnlading_RU()
    {
        return LogisticsPostalAddress::findRecId(this.UnladingPostalAddress_RU).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkFix</Name>
				<Source><![CDATA[
    public void checkFix(WMSConsistencyCheck_BOL _wmsConsistencyCheck_BOL)
    {
        WMSBillOfLadingOrder    wmsBillOfLadingOrder;
        WMSBillOfLadingCarrier  wmsBillOfLadingCarrier;
        boolean                 anyOrders, anyCarrier;

        _wmsConsistencyCheck_BOL.kernelCheckRecord(this, new DictTable(this.TableId), false);

        anyOrders = false;
        while select forupdate wmsBillOfLadingOrder
            where wmsBillOfLadingOrder.BillOfLadingId   == this.BillOfLadingId
        {
            _wmsConsistencyCheck_BOL.kernelCheckRecord(wmsBillOfLadingOrder, new DictTable(wmsBillOfLadingOrder.TableId), false);
            anyOrders = true;
        }
        if (!anyOrders)
        {
            checkFailed(strFmt("@SYS59148", this.BillOfLadingId), '',
                SysInfoAction_TableField::newBuffer(this));
        }
        anyCarrier = false;
        while select forupdate wmsBillOfLadingCarrier
            where wmsBillOfLadingCarrier.BillOfLadingId   == this.BillOfLadingId
        {
            _wmsConsistencyCheck_BOL.kernelCheckRecord(wmsBillOfLadingCarrier, new DictTable(wmsBillOfLadingCarrier.TableId), false);
            anyCarrier = true;
        }
        if (!anyCarrier)
        {
            checkFailed(strFmt("@SYS59149", this.BillOfLadingId), '',
                SysInfoAction_TableField::newBuffer(this));
        }

        select sum(Weight) from wmsBillOfLadingCarrier
            where wmsBillOfLadingCarrier.BillOfLadingId == this.BillOfLadingId;
        select sum(Weight) from wmsBillOfLadingOrder
            where wmsBillOfLadingOrder.BillOfLadingId   == this.BillOfLadingId;
        if (wmsBillOfLadingCarrier.Weight != wmsBillOfLadingOrder.Weight)
        {
            checkFailed(strFmt("@SYS59150", this.BillOfLadingId), '',
                SysInfoAction_TableField::newBuffer(this));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        WMSBillOfLadingCarrier  wmsBillOfLadingCarrier;
        WMSBillOfLadingOrder    wmsBillOfLadingOrder;

        delete_from wmsBillOfLadingCarrier
            where wmsBillOfLadingCarrier.BillOfLadingId == this.BillOfLadingId;

        delete_from wmsBillOfLadingOrder
            where wmsBillOfLadingOrder.BillOfLadingId == this.BillOfLadingId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteForShipment</Name>
				<Source><![CDATA[
    public static void deleteForShipment(WMSShipment _wmsShipment)
    {
        WMSBillOfLading wmsBillOfLading;
        WMSBillOfLadingCarrier wmsBillOfLadingCarrier;
        WMSBillOfLadingOrder wmsBillOfLadingOrder;

        wmsBillOfLading.skipDeleteActions(true);

        delete_from wmsBillOfLadingCarrier
            exists join wmsBillOfLading
                where wmsBillOfLading.BillOfLadingId == wmsBillOfLadingCarrier.BillOfLadingId
                    && wmsBillOfLading.ShipmentId == _wmsShipment.ShipmentId;

        delete_from wmsBillOfLadingOrder
            exists join wmsBillOfLading
                where wmsBillOfLading.BillOfLadingId == wmsBillOfLadingOrder.BillOfLadingId
                    && wmsBillOfLading.ShipmentId == _wmsShipment.ShipmentId;

        delete_from wmsBillOfLading
            where wmsBillOfLading.ShipmentId == _wmsShipment.ShipmentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransationEntity_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Get entity of transaction.
    /// </summary>
    /// <param name="_roleType">
    ///     The value of <c>LogisticsLocationRoleType</c> base enum.
    /// </param>
    /// <returns>
    ///     Entity of transaction.
    /// </returns>
    public Common getTransationEntity_RU(LogisticsLocationRoleType _roleType)
    {
        if ( !this.ShipmentId)
        {
            switch (this.wmsReferenceType)
            {
                case WMSReferenceType::Sales:
                    return SalesTable::find(this.InventTransRefId).getTransationEntity_RU(_roleType);

                case WMSReferenceType::TransferOrderShipment :
                    return InventTransferTable::find(this.InventTransRefId).getTransationEntity_RU(_roleType);
            }
        }
        return CompanyInfo::find();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAddressesFromShipment</Name>
				<Source><![CDATA[
    private void initAddressesFromShipment(WMSShipment _wmsShipment)
    {
        InventTransferTable     inventTransferTable;
        SalesTable              salesTable;
        WMSOrderTrans           wmsOrderTrans;

        RecId getDefaultLogisticsLocation(Common _entity, LogisticsLocationRoleType _role)
        {
            LogisticsLocationDefault        defaults;
            LogisticsLocationRoleType       typeForFind;
            LogisticsLocation               logisticsLocation;

            defaults = LogisticsLocationDefault::construct(_entity);

            typeForFind = defaults.defaultExistsByType(_role) ?
                        _role :
                        LogisticsLocationRoleType::Delivery;

            logisticsLocation = LogisticsLocationDefault::findSimpleDefaultByRoleType(_entity, typeForFind);

            return LogisticsPostalAddress::findByLocation(logisticsLocation.RecId).RecId;
        }

        select firstonly InventTransType, InventTransRefId
            from wmsOrderTrans
                where wmsOrderTrans.ShipmentId == _wmsShipment.ShipmentId;

        switch (wmsOrderTrans.InventTransType)
        {
            case InventTransType::TransferOrderShip:
                inventTransferTable = InventTransferTable::find(wmsOrderTrans.InventTransRefId);

            case InventTransType::TransferOrderShip:
                inventTransferTable = InventTransferTable::find(wmsOrderTrans.InventTransRefId);
                this.LadingPostalAddress_RU = inventTransferTable.LadingPostalAddress_RU;
                this.UnladingPostalAddress_RU = inventTransferTable.UnladingPostalAddress_RU;
                break;

            case InventTransType::Sales:
                salesTable = SalesTable::find(wmsOrderTrans.InventTransRefId);
                //lading:
                if (_wmsShipment.InventLocationId)
                {
                    this.LadingPostalAddress_RU = getDefaultLogisticsLocation(
                                    InventLocation::find(_wmsShipment.InventLocationId),
                                    LogisticsLocationRoleType::Lading_W);
                }
                if ( !this.LadingPostalAddress_RU && salesTable.salesTable_RU().ConsignorAccount_RU)
                {
                    this.LadingPostalAddress_RU = getDefaultLogisticsLocation(
                                    VendTable::find(salesTable.salesTable_RU().ConsignorAccount_RU),
                                    LogisticsLocationRoleType::Lading_W);
                }
                if ( !this.LadingPostalAddress_RU)
                {
                    this.LadingPostalAddress_RU = getDefaultLogisticsLocation(
                                    CompanyInfo::find(),
                                    LogisticsLocationRoleType::Lading_W);
                }
                //unlading:
                if (salesTable.salesTable_RU().ConsigneeAccount_RU)
                {
                    this.UnladingPostalAddress_RU = getDefaultLogisticsLocation(
                                    CustTable::find(salesTable.salesTable_RU().ConsigneeAccount_RU),
                                    LogisticsLocationRoleType::Unlading_W);
                }
                if (!this.UnladingPostalAddress_RU && salesTable.CustAccount)
                {
                    this.UnladingPostalAddress_RU = getDefaultLogisticsLocation(
                                    CustTable::find(salesTable.CustAccount),
                                    LogisticsLocationRoleType::Unlading_W);
                }
                break;
            case InventTransType::ProdLine:
                //lading:
                if (_wmsShipment.InventLocationId)
                {
                    this.LadingPostalAddress_RU = getDefaultLogisticsLocation(
                                    InventLocation::find(_wmsShipment.InventLocationId),
                                    LogisticsLocationRoleType::Lading_W);
                }
                if ( !this.LadingPostalAddress_RU)
                {
                    this.LadingPostalAddress_RU = getDefaultLogisticsLocation(
                                    CompanyInfo::find(),
                                    LogisticsLocationRoleType::Lading_W);
                }
                //unlading - always empty
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDeliveryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Initialize the <c>DeliveryPostalAddress</c> field based on current fields.
    /// </summary>
    /// <param name="_overwrite">
    ///   true if any current value should be overwritten; otherwise, false.
    /// </param>
    public void initDeliveryPostalAddress(boolean _overwrite = false)
    {
        LogisticsPostalAddress  address;
        CustTable               custTable;

        if (this.DeliveryPostalAddress && !_overwrite)
        {
            return;
        }

        if (this.CustAccount)
        {
            custTable = CustTable::find(this.CustAccount);
            address = LogisticsLocationEntity::findPostalAddress(custTable, LogisticsLocationRoleType::Delivery);
            if (!address)
            {
                address = custTable.postalAddress();
            }
        }

        if (address)
        {
            this.DeliveryPostalAddress = address.RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferParmTable_RU</Name>
				<Source><![CDATA[
    private void initFromInventTransferParmTable_RU(InventTransferParmTable _inventTransferParmTable)
    {
        this.LicenseCardType_RU         = _inventTransferParmTable.LicenseCardType_RU;
        this.LicenseCardRegNum_RU       = _inventTransferParmTable.LicenseCardRegNum_RU;
        this.LicenseCardSeries_RU       = _inventTransferParmTable.LicenseCardSeries_RU;
        this.LicenseCardNum_RU          = _inventTransferParmTable.LicenseCardNum_RU;
        this.CarrierType_RU             = _inventTransferParmTable.CarrierType_RU;
        this.CarrierCode_RU             = _inventTransferParmTable.CarrierCode_RU;
        this.DeliveryDate_RU            = _inventTransferParmTable.DeliveryDate_RU;
        this.VehicleModel_RU            = _inventTransferParmTable.VehicleModel_RU;
        this.VehiclePlateNum_RU         = _inventTransferParmTable.VehiclePlateNum_RU;
        this.WaybillNum_RU              = _inventTransferParmTable.WaybillNum_RU;
        this.DriverName_RU              = _inventTransferParmTable.DriverName_RU;
        this.DrivingLicenseNum_RU       = _inventTransferParmTable.DrivingLicenseNum_RU;
        this.TransportationType_RU      = _inventTransferParmTable.TransportationType_RU;
        this.TransportInvoiceType_RU    = _inventTransferParmTable.TransportInvoiceType_RU;
        this.CargoDescription_RU        = _inventTransferParmTable.CargoDescription_RU;
        this.CargoPacking_RU            = _inventTransferParmTable.CargoPacking_RU;
        this.DriverContact_RU           = _inventTransferParmTable.DriverContact_RU;
        this.LadingPostalAddress_RU     = _inventTransferParmTable.LadingPostalAddress_RU;
        this.UnladingPostalAddress_RU   = _inventTransferParmTable.UnladingPostalAddress_RU;
        this.TransportationPayerType_RU = _inventTransferParmTable.TransportationPayerType_RU;
        this.TransportationPayer_RU     = _inventTransferParmTable.TransportationPayer_RU;
        this.setTransportInvoiceId_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesParmTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes <c>WMSBillOfLading</c> record from <c>SalesParmTable</c> record.
    /// </summary>
    /// <param name="_salesParmTable">
    ///     <c>SalesParmTable</c> source record.
    /// </param>
    public void initFromSalesParmTable_RU(SalesParmTable _salesParmTable)
    {
        SalesTable salesTable = SalesTable::find(_salesParmTable.SalesId);

        this.DeliveryDate_RU          = _salesParmTable.bolDeliveryDate_RU;
        this.VehicleModel_RU          = _salesParmTable.bolVehicleModel_RU;
        this.VehiclePlateNum_RU       = _salesParmTable.bolVehiclePlateNum_RU;
        this.WaybillNum_RU            = _salesParmTable.bolWaybillNum_RU;
        this.DriverName_RU            = _salesParmTable.bolDriverName_RU;
        this.DrivingLicenseNum_RU     = _salesParmTable.bolDrivingLicenseNum_RU;
        this.LicenseCardType_RU       = _salesParmTable.bolLicenseCardType_RU;
        this.LicenseCardRegNum_RU     = _salesParmTable.bolLicenseCardRegNum_RU;
        this.LicenseCardSeries_RU     = _salesParmTable.bolLicenseCardSeries_RU;
        this.LicenseCardNum_RU        = _salesParmTable.bolLicenseCardNum_RU;
        this.TransportationType_RU    = _salesParmTable.bolTransportationType_RU;
        this.CarrierType_RU           = _salesParmTable.bolCarrierType_RU;
        this.CarrierCode_RU           = _salesParmTable.bolCarrierCode_RU;
        this.TransportInvoiceType_RU  = _salesParmTable.TransportInvoiceType_RU;
        this.CargoDescription_RU      = _salesParmTable.CargoDescription_RU;
        this.CargoPacking_RU          = _salesParmTable.CargoPacking_RU;
        this.DriverContact_RU         = _salesParmTable.DriverContact_RU;
        this.TransportationPayerType_RU = _salesParmTable.TransportationPayerType_RU;
        this.TransportationPayer_RU     = _salesParmTable.TransportationPayer_RU;

        this.LadingPostalAddress_RU   = _salesParmTable.LadingPostalAddress_RU;
        this.UnladingPostalAddress_RU = _salesParmTable.UnladingPostalAddress_RU;
        this.setTransportInvoiceId_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesParmUpdate</Name>
				<Source><![CDATA[
    public void initFromSalesParmUpdate(SalesParmUpdate _salesParmUpdate)
    {
        this.CarrierName        = _salesParmUpdate.bolCarrierName;
        this.FreightChargeTerms = _salesParmUpdate.bolFreightChargeTerms;
        this.FreightCounted     = _salesParmUpdate.bolFreightCounted;
        this.TrailerLoaded      = _salesParmUpdate.bolTrailerLoaded;
        this.FreightedBy        = _salesParmUpdate.bolFreightedBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWMSShipment_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes <c>WMSBillOfLading</c> record from <c>WMSShipment</c> record;
    /// </summary>
    /// <param name="_wmsShipment">
    ///     <c>WMSShipment</c> source record
    /// </param>
    void initFromWMSShipment_RU(WMSShipment _wmsShipment)
    {
        this.CarrierType_RU         = _wmsShipment.CarrierType_RU;
        this.CarrierCode_RU         = _wmsShipment.CarrierCode_RU;
        this.LicenseCardType_RU     = _wmsShipment.LicenseCardType_RU;
        this.LicenseCardRegNum_RU   = _wmsShipment.LicenseCardRegNum_RU;
        this.LicenseCardSeries_RU   = _wmsShipment.LicenseCardSeries_RU;
        this.LicenseCardNum_RU      = _wmsShipment.LicenseCardNum_RU;
        this.DeliveryDate_RU        = _wmsShipment.DeliveryDate_RU;
        this.VehicleModel_RU        = _wmsShipment.VehicleModel_RU;
        this.VehiclePlateNum_RU     = _wmsShipment.VehiclePlateNum_RU;
        this.WaybillNum_RU          = _wmsShipment.WaybillNum_RU;
        this.DriverName_RU          = _wmsShipment.DriverName_RU;
        this.DrivingLicenseNum_RU   = _wmsShipment.DrivingLicenseNum_RU;
        this.DriverContact_RU       = _wmsShipment.DriverContact_RU;
        this.TransportationType_RU  = _wmsShipment.TransportationType_RU;
        this.TransportInvoiceType_RU= _wmsShipment.TransportInvoiceType_RU;
        this.CargoDescription_RU    = _wmsShipment.CargoDescription_RU;
        this.CargoPacking_RU        = _wmsShipment.CargoPacking_RU;
        this.TransportationPayerType_RU = _wmsShipment.TransportationPayerType_RU;
        this.TransportationPayer_RU = _wmsShipment.TransportationPayer_RU;
        this.initAddressesFromShipment(_wmsShipment);
        this.setTransportInvoiceId_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOfficials_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets default officials for <c>WMSShipment</c> record.
    /// </summary>
    /// <param name="_wmsShipment">
    ///     <c>WMSShipment</c> source record.
    /// </param>
    public void initOfficials_RU(WMSShipment _wmsShipment)
    {
        _wmsShipment.initOfficials_RU();

        this.OffSessionId_RU = _wmsShipment.OffSessionId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initShippingPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Initialize the <c>ShippingPostalAddress</c> field based on current fields.
    /// </summary>
    /// <param name="_overwrite">
    ///   true if any current value should be overwritten; otherwise, false.
    /// </param>
    public void initShippingPostalAddress(boolean _overwrite = false)
    {
        LogisticsPostalAddress address;

        if (this.ShippingPostalAddress && !_overwrite)
        {
            return;
        }

        if (this.InventLocationId)
        {
            address = LogisticsLocationEntity::findPostalAddress(InventLocation::find(this.InventLocationId), LogisticsLocationRoleType::None);
        }

        if (!address)
        {
            address = LogisticsLocationEntity::findPostalAddress(InventLocation::find(this.InventLocationId).inventSite(), LogisticsLocationRoleType::None);
        }

        if (!address)
        {
            address = CompanyInfo::find().postalAddress();
        }

        if (address)
        {
            this.ShippingPostalAddress = address.RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        SalesParameters   salesParameters = SalesParameters::find();

        this.LanguageId         = salesParameters.boLlanguageId;
        this.CarrierName        = salesParameters.boLcarrierName;
        this.FreightChargeTerms = salesParameters.boLfreightChargeTerms;
        this.FreightCounted     = salesParameters.boLfreightCounted;
        this.TrailerLoaded      = salesParameters.boLtrailerLoaded;
        this.FreightedBy        = salesParameters.bolFreightedBy;
        // <GEERU>
        this.TransportInvoiceType_RU = salesParameters.TransportInvoiceType_RU;
        // </GEERU>
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record into the <c>WMSBillOfLading</c> table.
    /// </summary>
    public void insert()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferTable</Name>
				<Source><![CDATA[
    public InventTransferTable inventTransferTable(boolean  _forUpdate = false)
    {
        if (this.wmsReferenceType != WMSReferenceType::TransferOrderShipment)
        {
            return null;
        }

        return InventTransferTable::find(this.InventTransRefId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupInventTransRefId</Name>
				<Source><![CDATA[
    public boolean lookupInventTransRefId(FormStringControl _lookupCtrl)
    {
        if (this.ShipmentId)
        {
            switch (this.wmsReferenceType)
            {
                case WMSReferenceType::Sales  :
                    this.lookupSalesOrders(_lookupCtrl);
                    return true;

                case WMSReferenceType::TransferOrderShipment  :
                    this.lookupTransferOrders(_lookupCtrl);
                    return true;

                case WMSReferenceType::ProductionLine   :
                    this.lookupProductionOrders(_lookupCtrl);
                    return true;

                case WMSReferenceType::Kanban   :
                    this.lookupKanbans(_lookupCtrl);
                    return true;

                default: //fall through
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupKanbans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the kanbans that have shipment lines in the specified bill of lading shipment.
    /// </summary>
    /// <param name="_ctrl">
    /// The control that is used for the lookup.
    /// </param>
    public void lookupKanbans(FormStringControl _ctrl)
    {
        SysTableLookup              sysTableLookup = SysTableLookup::newParameters(tableNum(Kanban), _ctrl);
        Query                       query = new Query();
        QueryBuildDataSource        qbdsKanban;
        QueryBuildDataSource        qbdsKanbanJob;
        QueryBuildDataSource        qbdsWMSOrderTrans;
        QueryBuildRange             queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(Kanban, KanbanId));
        sysTableLookup.addLookupfield(fieldNum(Kanban, ItemId));
        sysTableLookup.addLookupfield(fieldNum(Kanban, QuantityOrdered));

        qbdsKanban = query.addDataSource(tableNum(Kanban));

        qbdsKanbanJob = qbdsKanban.addDataSource(tableNum(KanbanJob));
        qbdsKanbanJob.joinMode(JoinMode::ExistsJoin);
        qbdsKanbanJob.relations(false);
        qbdsKanbanJob.addLink(fieldNum(Kanban, RecId),fieldNum(KanbanJob, Kanban));

        qbdsWMSOrderTrans = qbdsKanbanJob.addDataSource(tableNum(WMSOrderTrans));
        qbdsWMSOrderTrans.joinMode(JoinMode::ExistsJoin);
        qbdsWMSOrderTrans.relations(false);
        qbdsWMSOrderTrans.addLink(fieldNum(KanbanJob, IssueInventTransId),fieldNum(WMSOrderTrans,InventTransId));

        queryBuildRange = qbdsWMSOrderTrans.addRange(fieldNum(WMSOrderTrans, ShipmentId));
        queryBuildRange.value(queryValue(this.ShipmentId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProductionOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the production lines that have shipment lines in the specified bill of lading shipment.
    /// </summary>
    /// <param name="_ctrl">
    /// The control that is used for the lookup.
    /// </param>
    public void lookupProductionOrders(FormStringControl _ctrl)
    {
        SysTableLookup              sysTableLookup = SysTableLookup::newParameters(tableNum(ProdBOM), _ctrl);
        Query                       query = new Query();
        QueryBuildDataSource        qbdsProdBOM;
        QueryBuildDataSource        qbdsWMSOrderTrans;
        QueryBuildRange             queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(ProdBOM, ProdId));

        qbdsProdBOM = query.addDataSource(tableNum(ProdBOM));
        qbdsProdBOM.addGroupByField(fieldNum(ProdBOM, ProdId));

        qbdsWMSOrderTrans = qbdsProdBOM.addDataSource(tableNum(WMSOrderTrans));
        qbdsWMSOrderTrans.joinMode(JoinMode::ExistsJoin);
        qbdsWMSOrderTrans.relations(false);
        qbdsWMSOrderTrans.addLink(fieldNum(ProdBOM, InventTransId),fieldNum(WMSOrderTrans,InventTransId));

        queryBuildRange = qbdsWMSOrderTrans.addRange(fieldNum(WMSOrderTrans, ShipmentId));
        queryBuildRange.value(queryValue(this.ShipmentId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupSalesOrders</Name>
				<Source><![CDATA[
    public void lookupSalesOrders(FormStringControl _ctrl)
    {
        SysTableLookup              sysTableLookup = SysTableLookup::newParameters(tableNum(SalesTable), _ctrl);
        Query                       query = new Query();
        QueryBuildDataSource        queryBuildDataSource;
        QueryBuildDataSource        queryBuildDataSource1;
        QueryBuildRange             queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(SalesTable, SalesId));
        sysTableLookup.addLookupfield(fieldNum(SalesTable, SalesName));
        sysTableLookup.addLookupfield(fieldNum(SalesTable, CustAccount));

        queryBuildDataSource = query.addDataSource(tableNum(SalesTable));

        queryBuildDataSource1 = queryBuildDataSource.addDataSource(tableNum(WMSOrderTrans));
        queryBuildDataSource1.joinMode(JoinMode::InnerJoin);
        queryBuildDataSource1.relations(false);
        queryBuildDataSource1.addLink(fieldNum(SalesTable, SalesId),fieldNum(WMSOrderTrans,InventTransRefId));

        queryBuildRange = queryBuildDataSource1.addRange(fieldNum(WMSOrderTrans, ShipmentId));
        queryBuildRange.value(queryValue(this.ShipmentId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTransferOrders</Name>
				<Source><![CDATA[
    public void lookupTransferOrders(FormStringControl _ctrl)
    {
        SysTableLookup              sysTableLookup = SysTableLookup::newParameters(tableNum(InventTransferTable), _ctrl);
        Query                       query = new Query();
        QueryBuildDataSource        queryBuildDataSource;
        QueryBuildDataSource        queryBuildDataSource1;
        QueryBuildRange             queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(InventTransferTable, TransferId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferTable, InventLocationIdFrom));
        sysTableLookup.addLookupfield(fieldNum(InventTransferTable, InventLocationIdTo));
        sysTableLookup.addLookupfield(fieldNum(InventTransferTable, ReceiveDate));

        queryBuildDataSource = query.addDataSource(tableNum(InventTransferTable));

        queryBuildDataSource1 = queryBuildDataSource.addDataSource(tableNum(WMSOrderTrans));
        queryBuildDataSource1.joinMode(JoinMode::InnerJoin);
        queryBuildDataSource1.relations(false);
        queryBuildDataSource1.addLink(fieldNum(InventTransferTable,TransferId),fieldNum(WMSOrderTrans,InventTransRefId));

        queryBuildRange = queryBuildDataSource1.addRange(fieldNum(WMSOrderTrans, ShipmentId));
        queryBuildRange.value(queryValue(this.ShipmentId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Overridden method to be called after a field has been modified.
    /// </summary>
    /// <param name="_fieldId">
    ///    A field identifier of the field that has been modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        OfficialsTrans_RU   officialsTrans;
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WMSBillOfLading, CarrierCode_RU):
            case fieldNum(WMSBillOfLading, CarrierType_RU):

            update_recordset officialsTrans setting Name = '', Title = ''
                where officialsTrans.OffSessionId == this.offSessionId_RU() &&
                      officialsTrans.Position     == OffPosition_RU::TransRespCarrier;
                break;

            case fieldNum(WMSBillOfLading, TransportationPayerType_RU):
                this.TransportationPayer_RU = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        FormDataSource  formDataSource;

        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(WMSBillOfLading, InventLocationId):
                this.initShippingPostalAddress(true);
                if (FormDataUtil::isFormDataSource(this))
                {
                    formDataSource = FormDataUtil::getFormDataSource(this);
                    formDataSource.rereadReferenceDataSources();
                }
                break;

            case fieldStr(WMSBillOfLading, CustAccount):
                this.initDeliveryPostalAddress(true);
                if (FormDataUtil::isFormDataSource(this))
                {
                    formDataSource = FormDataUtil::getFormDataSource(this);
                    formDataSource.rereadReferenceDataSources();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>offSessionId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns officials session from reference record
    /// </summary>
    /// <returns>
    ///     <c>OffSessionId_RU</c> id.
    /// </returns>

    public OffSessionId_RU offSessionId_RU()
    {
        CustPackingSlipJour         custPackingSlipJour;
        CustInvoiceJour             custInvoiceJour;
        CustInvoiceJour_Officials   custInvoiceJour_Officials;
        InventTransferJour          inventTransferJour;
        OffSessionId_RU             offSessionId;

        if (this.ShipmentId)
        {
            return this.OffSessionId_RU;
        }

        switch (this.wmsReferenceType)
        {
            case WMSReferenceType::TransferOrderShipment:
                select firstonly BillOfLadingId_RU, OffSessionId_RU from inventTransferJour
                    where inventTransferJour.BillOfLadingId_RU == this.BillOfLadingId;

                offSessionId = inventTransferJour.OffSessionId_RU;
                break;

            case WMSReferenceType::Sales:
                select firstonly OffSessionId from custInvoiceJour_Officials
                    exists join custInvoiceJour
                        where custInvoiceJour.RecId == custInvoiceJour_Officials.CustInvoiceJour
                            && custInvoiceJour.BillOfLadingId == this.BillOfLadingId;

                offSessionId = custInvoiceJour_Officials.OffSessionId;

                if (!offSessionId)
                {
                    select firstonly BillOfLadingId, OffSessionId_RU from custPackingSlipJour
                        where custPackingSlipJour.BillOfLadingId == this.BillOfLadingId;

                    offSessionId = custPackingSlipJour.OffSessionId_RU;
                }
                break;
        }

        return offSessionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>receivingAddress</Name>
				<Source><![CDATA[
    public Addressing receivingAddress()
    {
        return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>receivingName</Name>
				<Source><![CDATA[
    display CustName receivingName()
    {
        CustTable                   custTable;
        LogisticsLocationEntity     locationEntity;
        SalesTable                  salesTable;
        InventTransferTable         inventTransferTable;

        switch (this.wmsReferenceType)
        {
            case WMSReferenceType::Sales:
                salesTable = this.salesTable();
                if (salesTable)
                {
                    return salesTable.DeliveryName;
                }
                break;

            case WMSReferenceType::TransferOrderShipment:
                inventTransferTable = this.inventTransferTable();
                if (inventTransferTable)
                {
                    return inventTransferTable.ToAddressName;
                }
        }

        if (this.CustAccount)
        {
            custTable = CustTable::find(this.CustAccount);
            locationEntity = LogisticsLocationEntity::findLocation(custTable,LogisticsLocationRoleType::Delivery);

            if (locationEntity && locationEntity.parmLocationRecId())
            {
                return locationEntity.parmLocationDescription();
            }
        }

        if (this.DeliveryPostalAddress)
        {
            return LogisticsLocation::find(LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress).Location).Description;
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    public SalesTable  salesTable(boolean _update = false)
    {
        SalesTable          salesTable;
        SalesTableDelete    salesTableDelete;

        if (!this.InventTransRefId || this.wmsReferenceType != WMSReferenceType::Sales)
        {
            return null;
        }

        salesTable = SalesTable::find(this.InventTransRefId, _update);

        if (!salesTable)
        {
            salesTableDelete = SalesTableDelete::find(this.InventTransRefId);
            if (salesTableDelete.SalesTable)
            {
                [salesTable] = SalesTableDelete::find(this.InventTransRefId).SalesTable;
            }
        }

        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransportInvoiceId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the next TransportInvoice id from TranspostInvoice or JobTicket number sequence.
    /// </summary>
    public void setTransportInvoiceId_RU()
    {
        NumberSeq numberSeq;

        numberSeq = NumberSeq::newGetNum(this.TransportInvoiceType_RU == TransportInvoiceType_RU::Invoice ?
                                         WMSParameters::numRefTransportInvoiceId_RU()                     :
                                         WMSParameters::numRefJobTicketId_RU(),
                                         false,
                                         false);

        this.TransportInvoiceId_RU = numberSeq.num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shippingAddress</Name>
				<Source><![CDATA[
    display Addressing shippingAddress()
    {
        if (this.ShippingPostalAddress)
        {
            // 1. If a shipping address has been specified use this
            return LogisticsPostalAddress::findRecId(this.ShippingPostalAddress).Address;
        }

        if (this.InventLocationId)
        {
            // 2. If a warehouse has been specified use the address of the warehouse
            return InventLocation::find(this.InventLocationId).address();
        }

        // 3. Use the company address.
        return CompanyInfo::find().postalAddress().Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shippingName</Name>
				<Source><![CDATA[
    display WMSShippingName shippingName()
    {
        if (this.ShippingPostalAddress)
        {
            // 1. If a shipping address has been specified use this
            return LogisticsLocation::find(LogisticsPostalAddress::findRecId(this.ShippingPostalAddress).Location).Description;
        }

        if (this.InventLocationId)
        {
            // 2. If a warehouse has been specified use the address of the warehouse
            return InventLocation::find(this.InventLocationId).shippingName();
        }

        // 3. Use the company address.
        return CompanyInfo::find().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>thirdPartyAddress</Name>
				<Source><![CDATA[
    display Addressing thirdPartyAddress()
    {
        if (!this.ThirdPartyPostalAddress)
        {
            return '';
        }

        return LogisticsPostalAddress::findRecId(this.ThirdPartyPostalAddress).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>thirdPartyName</Name>
				<Source><![CDATA[
    display CustName thirdPartyName()
    {
        if (!this.ThirdPartyPostalAddress)
        {
            return '';
        }

        return LogisticsLocation::find(LogisticsPostalAddress::findRecId(this.ThirdPartyPostalAddress).Location).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanup</Name>
				<Source><![CDATA[
    public static void cleanup(date _cleanupDate)
    {
        #OCCRetryCount
        WMSBillOfLading     wmsBillOfLading;
        WMSShipment         wmsShipment;
        Integer             i;
        utcdatetime         cleanUpDateTime;

        void cleanupBOL()
        {
            i++;
            wmsBillOfLading.delete();
        }

        cleanUpDateTime = datetobeginUtcDateTime(_cleanupDate, DateTimeUtil::getUserPreferredTimeZone());
        try
        {
            ttsbegin;
            i = 0;
            while select forupdate wmsBillOfLading
                where wmsBillOfLading.ModifiedDateTime < cleanUpDateTime
            {
                if (wmsBillOfLading.ShipmentId)
                {
                    wmsShipment = WMSShipment::find(wmsBillOfLading.ShipmentId);
                    if (!wmsShipment || (wmsShipment.Status == WMSShipmentStatus::Shipped && wmsShipment.ModifiedDateTime < cleanUpDateTime))
                    {
                        cleanupBOL();
                    }
                }
                else
                {
                    cleanupBOL();
                }
            }
            ttscommit;
        }
        catch(Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }

        info(strFmt("@SYS58153", i));
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromInventTransfer_RU</Name>
				<Source><![CDATA[
    public static WMSBillOfLading constructFromInventTransfer_RU(
        InventTransferJour          _inventTransferJour,
        InventTransferParmTable     _inventTransferParmTable)
    {
        WMSBillOfLading         wmsBillOfLading;
        WMSBillOfLadingOrder    wmsBillOfLadingOrder;
        WMSBillOfLadingCarrier  wmsBillOfLadingCarrier;
        InventTransferJourLine  inventTransferJourLine;
        WMSBOLAdditionalInfo    itemDesc;
        Query                   query;
        QueryRun                queryRun;
        QueryBuildDataSource    qbds;

        if (! InventTransferParmUpdate::find(_inventTransferParmTable.ParmId).BillOfLading_RU)
        {
            return wmsBillOfLading;
        }

        wmsBillOfLading.initValue();
        wmsBillOfLading.initFromInventTransferParmTable_RU(_inventTransferParmTable);
        wmsBillOfLading.BillOfLadingId        = WMSBOLIdGenerate::nextBOLId(_inventTransferJour.Return_RU);
        wmsBillOfLading.InventLocationId      = _inventTransferJour.InventLocationIdFrom;
        wmsBillOfLading.DeliveryPostalAddress = _inventTransferJour.ToPostalAddress;
        wmsBillOfLading.wmsReferenceType      = WMSReferenceType::TransferOrderShipment;
        wmsBillOfLading.InventTransRefId      = _inventTransferJour.TransferId;
        wmsBillOfLading.initShippingPostalAddress();
        wmsBillOfLading.setTransportInvoiceId_RU();
        wmsBillOfLading.insert();

        query = new Query();
        qbds = query.addDataSource(tableNum(InventTransferJourLine));
        qbds.addRange(fieldNum(InventTransferJourLine, TransferId)).value(_inventTransferJour.TransferId);
        qbds.addRange(fieldNum(InventTransferJourLine, VoucherId)).value(_inventTransferJour.VoucherId);
        queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            inventTransferJourLine = queryRun.get(tableNum(InventTransferJourLine));

            itemDesc = WMSBillOfLading::findItemDesc(inventTransferJourLine.ItemId, wmsBillOfLading.LanguageId);

            select forupdate wmsBillOfLadingCarrier
                where wmsBillOfLadingCarrier.BillOfLadingId == wmsBillOfLading.BillOfLadingId
                   && wmsBillOfLadingCarrier.AdditionalInfo == itemDesc;

            if (wmsBillOfLadingCarrier)
            {
                wmsBillOfLadingCarrier.HandlingQty      += inventTransferJourLine.QtyShipped;
                wmsBillOfLadingCarrier.update();
            }
            else
            {
                wmsBillOfLadingCarrier.BillOfLadingId   = wmsBillOfLading.BillOfLadingId;
                wmsBillOfLadingCarrier.AdditionalInfo   = itemDesc;
                wmsBillOfLadingCarrier.HandlingQty      = inventTransferJourLine.QtyShipped;
                wmsBillOfLadingCarrier.insert();
            }

            if (inventTransferJourLine.QtyShipped)
            {
                select forupdate wmsBillOfLadingOrder
                    where wmsBillOfLadingOrder.BillOfLadingId   == wmsBillOfLading.BillOfLadingId
                       && wmsBillOfLadingOrder.InventTransRefId == inventTransferJourLine.TransferId
                       && wmsBillOfLadingOrder.wmsReferenceType == WMSReferenceType::TransferOrderShipment;

                if (wmsBillOfLadingOrder)
                {
                    wmsBillOfLadingOrder.Qty               += inventTransferJourLine.QtyShipped;
                    wmsBillOfLadingOrder.update();
                }
                else
                {
                    wmsBillOfLadingOrder.BillOfLadingId     = wmsBillOfLading.BillOfLadingId;
                    wmsBillOfLadingOrder.InventTransRefId   = inventTransferJourLine.TransferId;
                    wmsBillOfLadingOrder.wmsReferenceType   = WMSReferenceType::TransferOrderShipment;
                    wmsBillOfLadingOrder.IsPallet           = NoYes::No;
                    wmsBillOfLadingOrder.Qty                = inventTransferJourLine.QtyShipped;
                    wmsBillOfLadingOrder.insert();
                }
            }
        }

        return wmsBillOfLading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromInvoice</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public static WMSBillOfLading constructFromInvoice(CustInvoiceJour _custInvoiceJour, SalesParmUpdate _salesParmUpdate, SalesParmTable _salesParmTable = null)
    {
        WMSBillOfLading                     wmsBillOfLading;
        CustInvoiceTrans                    custInvoiceTrans;
        QueryRun                            custInvoiceTransQuery;
        WMSBillOfLadingBuilder              wmsBillOfLadingBuilder;
        WMSBOLItemProviderCustInvoiceTrans  wmsbolItemProviderCustInvoiceTrans;

        if (!_custInvoiceJour.invoiceIdDisplay())
        {
            return wmsBillOfLading;
        }

        custInvoiceTransQuery = new QueryRun(_custInvoiceJour.queryCustInvoiceTrans());

        // <GEERU>
        #ISOCountryRegionCodes
        FieldId                 qtyField = ( SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) ?
                                            fieldNum(CustInvoiceTrans, Qty) :
                                            fieldNum(CustInvoiceTrans, QtyPhysical));
        custInvoiceTransQuery.query().dataSourceTable(tableNum(CustInvoiceTrans)).addRange(qtyField).value(strFmt('!%1', queryValue(0)));
        // </GEEU>
        custInvoiceTransQuery.query().dataSourceTable(tableNum(CustInvoiceTrans)).firstOnly(true);

        if (!custInvoiceTransQuery.next())
        {
            return wmsBillOfLading;
        }

        custInvoiceTransQuery = new QueryRun(_custInvoiceJour.queryCustInvoiceTrans());
        wmsBillOfLadingBuilder = WMSBillOfLadingBuilder::construct();
        wmsBillOfLadingBuilder.parmCreateNewBOLForFirstProvider(true);

        boolean isKittingEnabled = FeatureStateProvider::IsFeatureEnabled(KittingFeature::instance());

        KittingIWMSBillOfLadingController kitting_WMSBillOfLadingController;
        if (isKittingEnabled)
        {
            kitting_WMSBillOfLadingController = KittingWMSHelper::CreateWMSBOLController(wmsBillOfLadingBuilder);
        }

        while (custInvoiceTransQuery.next())
        {
            custInvoiceTrans = custInvoiceTransQuery.get(tableNum(CustInvoiceTrans));

            if (kitting_WMSBillOfLadingController && kitting_WMSBillOfLadingController.setKitLineFromInventTrans(custInvoiceTrans))
            {
                continue;
            }

            wmsbolItemProviderCustInvoiceTrans = WMSBOLItemProviderCustInvoiceTrans::newFromParameters(_custInvoiceJour, custInvoiceTrans, _salesParmUpdate, _salesParmTable);
            wmsBillOfLading = wmsBillOfLadingBuilder.buildFromWMSBOLItemProvider(wmsbolItemProviderCustInvoiceTrans);

            if (kitting_WMSBillOfLadingController)
            {
                kitting_WMSBillOfLadingController.addWMSBillOfLadingRef();
            }
        }
        
        return wmsBillOfLading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromPackingSlip</Name>
				<Source><![CDATA[
    public static WMSBillOfLading constructFromPackingSlip(
        CustPackingSlipJour _custPackingSlipJour,
        SalesParmUpdate     _salesParmUpdate,
        SalesParmTable      _salesParmTable = null)
    {
        return WMSBillOfLading::constructFromPackingSlipShipmentId(_custPackingSlipJour, _salesParmUpdate, _salesParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromPackingSlipShipmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes and creates <c>WMSBillOfLading</c> record.
    /// </summary>
    /// <param name = "_custPackingSlipJour">
    /// The <c>CustPackingSlipJour</c> table buffer that will be used to query <c>CustPackingSlipTrans</c> records and construct the <c>WMSBOLItemProviderCustPackSlipTrans</c> class.
    /// </param>
    /// <param name = "_salesParmUpdate">
    /// The <c>SalesParmUpdate</c> table buffer that will be used to construct the <c>WMSBOLItemProviderCustPackSlipTrans</c> class.
    /// </param>
    /// <param name = "_salesParmTable">
    /// The <c>SalesParmTable</c> table buffer that will be used to construct the <c>WMSBOLItemProviderCustPackSlipTrans</c> class.
    /// </param>
    /// <param name = "_wmsShipmentId">
    /// The shipment ID of the shipment order that is related to the <c>WMSBillOfLading</c> record.
    /// </param>
    /// <returns>
    /// A record in the <c>WMSBillOfLading</c> table.
    /// </returns>
    public static WMSBillOfLading constructFromPackingSlipShipmentId(
        CustPackingSlipJour _custPackingSlipJour,
        SalesParmUpdate     _salesParmUpdate,
        SalesParmTable      _salesParmTable = null,
        WMSShipmentId       _wmsShipmentId = '')
    {
        WMSBillOfLading                     wmsBillOfLading;
        CustPackingSlipTrans                custPackingSlipTrans;
        QueryRun                            custPackingSlipTransQuery;
        WMSBillOfLadingBuilder              wmsBillOfLadingBuilder;
        WMSBOLItemProviderCustPackSlipTrans wmsbolItemProviderCustPackSlipTrans;

        if (!_custPackingSlipJour.PackingSlipId)
        {
            return null;
        }

        wmsBillOfLadingBuilder = WMSBillOfLadingBuilder::construct();
        wmsBillOfLadingBuilder.parmCreateNewBOLForFirstProvider(true);

        boolean isKittingEnabled = FeatureStateProvider::IsFeatureEnabled(KittingFeature::instance());

        KittingIWMSBillOfLadingController kitting_WMSBillOfLadingController;
        if (isKittingEnabled)
        {
            kitting_WMSBillOfLadingController = KittingWMSHelper::CreateWMSBOLController(wmsBillOfLadingBuilder);
        }
  
        custPackingSlipTransQuery = new QueryRun(_custPackingSlipJour.queryCustPackingSlipTrans());
        while (custPackingSlipTransQuery.next())
        {
            custPackingSlipTrans = custPackingSlipTransQuery.get(tableNum(CustPackingSlipTrans));

            if (kitting_WMSBillOfLadingController && kitting_WMSBillOfLadingController.setKitLineFromInventTrans(custPackingSlipTrans))
            {
                continue;
            }

            wmsbolItemProviderCustPackSlipTrans = WMSBOLItemProviderCustPackSlipTrans::newFromParameters(_custPackingSlipJour, custPackingSlipTrans, _salesParmUpdate, _salesParmTable);
            wmsbolItemProviderCustPackSlipTrans.parmWMSShipmentId(_wmsShipmentId);
            wmsBillOfLading = wmsBillOfLadingBuilder.buildFromWMSBOLItemProvider(wmsbolItemProviderCustPackSlipTrans);

            if (kitting_WMSBillOfLadingController)
            {
                kitting_WMSBillOfLadingController.addWMSBillOfLadingRef();
            }
        }

        if (!wmsBillOfLading.RecId)
        {
            wmsbolItemProviderCustPackSlipTrans = WMSBOLItemProviderCustPackSlipTrans::newFromParameters(_custPackingSlipJour, null, _salesParmUpdate, _salesParmTable);
            wmsbolItemProviderCustPackSlipTrans.parmWMSShipmentId(_wmsShipmentId);
            wmsBillOfLading = wmsBillOfLadingBuilder.findOrCreateWMSBillOfLading(wmsbolItemProviderCustPackSlipTrans);
        }

        return wmsBillOfLading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromShipment</Name>
				<Source><![CDATA[
    public static void constructFromShipment(WMSShipment _wmsShipment)
    {
        WMSOrderTrans                   wmsOrderTrans;
        WMSBillOfLadingBuilder          wmsBillOfLadingBuilder;
        WMSBOLItemProviderWMSOrderTrans wmsbolItemProviderWMSOrderTrans;

        wmsBillOfLadingBuilder = WMSBillOfLadingBuilder::construct();
        // <GEERU>
        wmsBillOfLadingBuilder.parmWMSShipment(_wmsShipment);
        // </GEERU>

        boolean isKittingEnabled = FeatureStateProvider::IsFeatureEnabled(KittingFeature::instance());

        KittingIWMSBillOfLadingController kitting_WMSBillOfLadingController;
        if (isKittingEnabled)
        {
            kitting_WMSBillOfLadingController = KittingWMSHelper::CreateWMSBOLController(wmsBillOfLadingBuilder);
        }

        WMSBillOfLading::deleteForShipment(_wmsShipment);

        while select wmsOrderTrans
        order by Customer, DeliveryPostalAddress, InventTransType, InventTransRefId, ItemId //ordering is done to limit number of selects in tables WMSBillOfLading,WMSBillOfLadingOrder and WMSBillOfLadingCarrier
            where wmsOrderTrans.ShipmentId          == _wmsShipment.ShipmentId
            &&    wmsOrderTrans.ExpeditionStatus    != WMSExpeditionStatus::Cancelled
        {
            if (kitting_WMSBillOfLadingController && kitting_WMSBillOfLadingController.setKitLineFromInventTrans(wmsOrderTrans))
            {
                continue;
            }

            wmsbolItemProviderWMSOrderTrans = WMSBOLItemProviderWMSOrderTrans::constructFromWMSOrderTrans(wmsOrderTrans,_wmsShipment);
            wmsBillOfLadingBuilder.buildFromWMSBOLItemProvider(wmsbolItemProviderWMSOrderTrans);

            if (kitting_WMSBillOfLadingController)
            {
                kitting_WMSBillOfLadingController.addWMSBillOfLadingRef();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find_RU</Name>
				<Source><![CDATA[
    public static WMSBillOfLading find_RU(WMSBillOfLadingId _billOfLadingId)
    {
        WMSBillOfLading billOfLading;

        select firstonly billOfLading
            where billOfLading.BillOfLadingId == _billOfLadingId;

        return billOfLading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findItemDesc</Name>
				<Source><![CDATA[
    private static WMSBOLAdditionalInfo findItemDesc(ItemId _itemId, LanguageId _languageId)
    {
        InventTable         inventTable         = InventTable::find(_itemId);
        EcoResDescription   ecoResDescription   = inventTable.productDescription(_languageId);

        return ecoResDescription ? firstLine(ecoResDescription) : inventTable.defaultProductName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds bill of lading record by record ID
    /// </summary>
    /// <param name="_recId">
    /// Record ID
    /// </param>
    /// <param name="_forupdate">
    /// Pass true to select for update.
    /// </param>
    /// <returns>
    /// Bill of lading record found.
    /// </returns>
    public static WMSBillOfLading findRecId(
        RecId   _recId,
        boolean _forupdate = false)
    {
        WMSBillOfLading billOfLading;

        billOfLading.selectForUpdate(_forupdate);

        select firstonly billOfLading
            where billOfLading.RecId == _recId;

        return billOfLading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNumberSeqManual</Name>
				<Source><![CDATA[
    public static boolean isNumberSeqManual()
    {
        return WMSBillOfLading::numberSequenceCode() ? NumberSequenceTable::findByNaturalKey(WMSBillOfLading::numberSequenceCode()).Manual : true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeq</Name>
				<Source><![CDATA[
    public static NumberSeq numberSeq(
        boolean _makeDecisionLater              = false,
        boolean _dontThrowOnMissingRefSetUp     = false)
    {
        return NumberSeq::newGetNum(
            WMSParameters::numRefWMSBillOfLadingId(),
            _makeDecisionLater,
            _dontThrowOnMissingRefSetUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSequenceCode</Name>
				<Source><![CDATA[
    public static NumberSequenceCode numberSequenceCode()
    {
        return NumberSequenceTable::find(WMSParameters::numRefWMSBillOfLadingId().NumberSequenceId).NumberSequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (this.billOfLadingId == this.masterBOLId)
        {
            ret = checkFailed("@SYS:NotAllowedToSetBillOfLadingAsItsOwnMaster");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SalesShipments</ConfigurationKey>
	<DeveloperDocumentation>@SYS123897</DeveloperDocumentation>
	<Label>@SYS50700</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>billOfLadingId</TitleField1>
	<TitleField2>inventLocationId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>IdIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>IdIdx</PrimaryIndex>
	<ReplacementKey>IdIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>WMSBillOfLadingCarrier</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WMSBillOfLadingCarrier</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>WMSBillOfLadingOrder</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WMSBillOfLadingOrder</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>OfficialsTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>OfficialsTrans_RU</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>billOfLadingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>custAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>billOfLadingId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address_RU</Name>
			<Label>@SYS36203</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LadingPostalAddress_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnladingPostalAddress_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Carrier</Name>
			<Label>@SYS50733</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>carrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>freightedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>trailerId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sealId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>freightChargeTerms</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Carrier_RU</Name>
			<Label>@SYS50733</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>addressCarrier_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FromGroup</Name>
			<Label>@SYS4083</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>billOfLadingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>masterBOL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>masterBOLId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LicenseCard_RU</Name>
			<Label>@GLS111069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LicenseCardType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardRegNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardSeries_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardNum_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>languageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>trailerLoaded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>freightCounted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReferenceType</Name>
			<Label>@SYS81755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSReferenceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>To</Name>
			<Label>@SYS8828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>custAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventTransRefId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transportation_RU</Name>
			<Label>@GLS111070</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleModel_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehiclePlateNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DrivingLicenseNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverContact_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportationPayer_RU</Name>
			<Label>@GLS100924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportationPayerType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationPayer_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportInvoice_RU</Name>
			<Label>@GLS221922</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportInvoiceType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportInvoiceId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CargoDescription_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CargoPacking_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>billOfLadingId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSBillOfLadingId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoDescription_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CargoDescription_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoPacking_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CargoPacking_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CarrierCode_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>carrierName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSCarrierName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CarrierType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CarrierType_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>custAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS50701</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DlvDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@SYS7924</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverContact_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DriverContact_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverName_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DriverName_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrivingLicenseNum_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DrivingLicenseNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>freightChargeTerms</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSFreightChargeTerms</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>freightCounted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSFreightCounted</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>freightedBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSFreightedBy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventTransRefId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransRefId</ExtendedDataType>
			<Label>@SYS15098</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LadingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>languageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardRegNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardRegNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardSeries_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardSeries_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LicenseCardType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LicenseCardType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>masterBOL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS99942</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>masterBOLId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSBillOfLadingId</ExtendedDataType>
			<Label>@SYS50740</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OffSessionId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OffSessionId_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>sealId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSSealId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>shipmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSShipmentId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ShippingPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@SYS50713</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ThirdPartyPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@SYS116701</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>trailerId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSTrailerId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>trailerLoaded</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSTrailerLoaded</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationPayer_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransportationPayer_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransportationPayerType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<EnumType>TransportationPayerType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>TransportationType_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportInvoiceId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>TransportInvoiceId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransportInvoiceType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TransportInvoiceType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnladingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleModel_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehicleModel_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehiclePlateNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehiclePlateNum_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaybillNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WaybillNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WMSReferenceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSReferenceType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>billOfLadingId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ShipmentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>shipmentId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>inventLocationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MasterIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>masterBOLId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LadingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LadingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnladingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UnladingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendAccountMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
					<MapFieldTo>custAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Num</MapField>
					<MapFieldTo>billOfLadingId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>Carrier_CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Carrier_CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CarrierType_RU</Name>
					<Field>CarrierType_RU</Field>
					<ValueStr>CarrierType_W::Customer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode_RU</Name>
					<Field>CarrierCode_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Carrier_VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Carrier_VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CarrierType_RU</Name>
					<Field>CarrierType_RU</Field>
					<ValueStr>CarrierType_W::Vendor</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode_RU</Name>
					<Field>CarrierCode_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>custAccount</Name>
					<Field>custAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryLogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryLogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventLocationId</Name>
					<Field>inventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransferTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123859</EntityRelationshipRole>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WMSReferenceType</Name>
					<Field>WMSReferenceType</Field>
					<ValueStr>WMSReferenceType::TransferOrderShipment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LadingPostalAddress_RU_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LadingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LadingPostalAddress_RU</Name>
					<Field>LadingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>languageId</Name>
					<Field>languageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile_Extern</Name>
					<RelatedField>LabelFile</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MasterBillOfLading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WMSBillOfLading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>masterBOLId</Name>
					<SourceEDT>WMSBillOfLadingId</SourceEDT>
					<Field>masterBOLId</Field>
					<RelatedField>billOfLadingId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OfficialsTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OfficialsTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffSessionId_RU</Name>
					<SourceEDT>OffSessionId_RU</SourceEDT>
					<Field>OffSessionId_RU</Field>
					<RelatedField>OffSessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Payer_CustTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Payer_CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TransportationPayerType_RU</Name>
					<Field>TransportationPayerType_RU</Field>
					<ValueStr>TransportationPayerType_RU::ThirdParty</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationPayer_RU</Name>
					<SourceEDT>TransportationPayer_RU</SourceEDT>
					<Field>TransportationPayer_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WMSReferenceType</Name>
					<Field>WMSReferenceType</Field>
					<ValueStr>WMSReferenceType::ProductionLine</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesCarrier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesCarrier</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>carrierName</Name>
					<Field>carrierName</Field>
					<RelatedField>CarrierName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CarrierNameIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123519</EntityRelationshipRole>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WMSReferenceType</Name>
					<Field>WMSReferenceType</Field>
					<ValueStr>WMSReferenceType::Sales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransRefId</Name>
					<Field>inventTransRefId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ShippingLogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ShippingLogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShippingPostalAddress</Name>
					<Field>ShippingPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ThirdPartyLocisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ThirdPartyLocisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ThirdPartyPostalAddress</Name>
					<Field>ThirdPartyPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransportationTypeTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TransportationTypeTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationType_RU</Name>
					<SourceEDT>TransportationType_RU</SourceEDT>
					<Field>TransportationType_RU</Field>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnladingPostalAddress_RU_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnladingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSBillOfLading</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnladingPostalAddress_RU</Name>
					<Field>UnladingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VehicleModelTable_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VehicleModelTable_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VehicleModel_RU</Name>
					<SourceEDT>VehicleModel_W</SourceEDT>
					<Field>VehicleModel_RU</Field>
					<RelatedField>VehicleModel</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ModelIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSShipment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSShipment</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>shipmentId</Name>
					<Field>shipmentId</Field>
					<RelatedField>shipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ShipmentIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>