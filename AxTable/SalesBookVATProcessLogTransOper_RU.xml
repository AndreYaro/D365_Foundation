<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesBookVATProcessLogTransOper_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesBookVATProcessLogTransOper_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountInclVAT</Name>
				<Source><![CDATA[
    public display AmountMSTinclVAT_RU amountInclVAT()
    {
        return this.AmountLiableToVAT + this.TaxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns default dimension for current record
    /// </summary>
    /// <returns>
    /// Default dimension for current record
    /// </returns>
    public DimensionDefault dimensionDefault()
    {
        return this.DeriveDim ? this.DefaultDimensionPosted : this.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTmpProcessLogTransOper</Name>
				<Source><![CDATA[
    public void initFromTmpProcessLogTransOper(TmpSalesBookVATProcessLogTransOper_RU _tmpProcessLogTransOper)
    {
        this.LedgerDimension                    = _tmpProcessLogTransOper.LedgerDimension;
        this.OffsetLedgerDimension              = _tmpProcessLogTransOper.OffsetLedgerDimension;
        this.Blocked                            = _tmpProcessLogTransOper.Blocked;
        this.DefaultDimension                   = _tmpProcessLogTransOper.DefaultDimension;
        this.DeriveDim                          = _tmpProcessLogTransOper.DeriveDim;
        this.DefaultDimensionPosted             = _tmpProcessLogTransOper.DefaultDimensionPosted;
        this.TransTxt                           = _tmpProcessLogTransOper.TransTxt;
        this.SalesBookVATProcessParameters_RU   = _tmpProcessLogTransOper.SalesBookVATProcessParameters_RU;
        this.Percent                            = _tmpProcessLogTransOper.Percent;
        this.TaxCode                            = _tmpProcessLogTransOper.TaxCode;
        this.FactureAmounts                     = _tmpProcessLogTransOper.FactureAmounts;
        this.InventTransId                      = _tmpProcessLogTransOper.InventTransId;
        this.BlockedAuto                        = _tmpProcessLogTransOper.BlockedAuto;
        this.RestoringType                      = _tmpProcessLogTransOper.RestoringType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLogTransOper</Name>
				<Source><![CDATA[
    public static boolean checkLogTransOper(FactureId_RU _factureId,
                                                   recId        _transRecId,
                                                   recId        _offsetRecId,
                                                   CompanyId    _transCompany,
                                                   CompanyId    _offsetCompany,
                                                   TransDate    _settlementDate,
                                                   RefRecId     _settlementRecId)
    {
        SalesBookVATProcessLogTransOper_RU  processLogTransOper;
        SalesBookVATProcessLogTrans_RU      processLogTrans;

        select firstonly RecId from processLogTransOper
            where processLogTransOper.Blocked           == NoYes::No &&
                  processLogTransOper.CanceledRefRecId  == 0
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId &&
                  processLogTrans.FactureId       == _factureId                   &&
                  processLogTrans.SettlementDate  == _settlementDate              &&
                ((processLogTrans.InvoiceRecIdRef == _transRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany                &&
                  processLogTrans.PaymentRecIdRef == _offsetRecId                 &&
                  processLogTrans.PaymentCompany  == _offsetCompany)              ||
                 (processLogTrans.InvoiceRecIdRef == _offsetRecId                 &&
                  processLogTrans.InvoiceCompany  == _offsetCompany               &&
                  processLogTrans.PaymentRecIdRef == _transRecId                  &&
                  processLogTrans.PaymentCompany  == _transCompany))              &&
                  processLogTrans.SettlementRecId == _settlementRecId             &&
                  processLogTrans.Reversed        == NoYes::No;

        return processLogTransOper.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsBlockedTrans</Name>
				<Source><![CDATA[
    public static boolean existsBlockedTrans(FactureId_RU     _factureId,
                                                    recId            _transRecId,
                                                    recId            _offsetRecId,
                                                    CompanyId        _transCompany,
                                                    CompanyId        _offsetCompany,
                                                    TransDate        _settlementDate,
                                                    recId            _logTableRecId = 0)
    {
        SalesBookVATProcessLogTransOper_RU  processLogTransOper;
        SalesBookVATProcessLogTrans_RU      processLogTrans;

        select firstonly RecId from processLogTransOper
            where processLogTransOper.Blocked             == NoYes::Yes &&
                  processLogTransOper.CanceledRefRecId    == 0          &&
                  ((_logTableRecId && processLogTransOper.LogTableRefRecId == _logTableRecId) || (! _logTableRecId))
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId  &&
                  processLogTrans.FactureId       == _factureId                    &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                   &&
                  processLogTrans.PaymentRecIdRef == _offsetRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany                 &&
                  processLogTrans.PaymentCompany  == _offsetCompany                &&
                  processLogTrans.SettlementDate  == _settlementDate;

        return processLogTransOper.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SalesBookVATProcessLogTransOper_RU find(recId _recId, boolean _forUpdate = false)
    {
        SalesBookVATProcessLogTransOper_RU  salesBookVATProcessLogTransOper;

        salesBookVATProcessLogTransOper.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly salesBookVATProcessLogTransOper
                where salesBookVATProcessLogTransOper.RecId == _recId;
        }
        return salesBookVATProcessLogTransOper;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts(FactureId_RU                 _factureId,
                                                                  TaxCode                      _taxCode,
                                                                  DimensionDefault             _defaultDimension,
                                                                  InventTransId                _inventTransId,
                                                                  recId                        _transRecId,
                                                                  recId                        _offsetRecId,
                                                                  CompanyId                    _transCompany,
                                                                  CompanyId                    _offsetCompany,
                                                                  recId                        _settlementRecId,
                                                                  TransDate                    _settlementDate,
                                                                  boolean                      _blocked,
                                                                  recId                        _logTableRecId = 0,
                                                                  NoYes                        _checkReversed = NoYes::No,
                                                                  SalesBookVATRestoringType_RU _restoringType = SalesBookVATRestoringType_RU::None)
    {
        SalesBookVATProcessLogTransOper_RU  processLogTransOper;
        SalesBookVATProcessLogTrans_RU      processLogTrans;
        BookStructSmallVATAmounts_RU        amounts;

        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.DefaultDimension    == _defaultDimension                   &&
                  processLogTransOper.TaxCode             == _taxCode                            &&
                  processLogTransOper.Blocked             == _blocked                            &&
                  processLogTransOper.BlockedAuto         == NoYes::No                           &&
                  processLogTransOper.CanceledRefRecId    == 0                                   &&
                  processLogTransOper.InventTransId       == _inventTransId                      &&
                  processLogTransOper.RestoringType       == _restoringType                      &&
                  (! _logTableRecId || processLogTransOper.LogTableRefRecId == _logTableRecId)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId                      &&
                 ((_factureId     ? false : true) || processLogTrans.FactureId == _factureId)          &&
                 ((_checkReversed ? false : true) || processLogTrans.Reversed  == NoYes::No)           &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                                       &&
                 ((_offsetRecId   ? false : true) || processLogTrans.PaymentRecIdRef == _offsetRecId)  &&
                 ((_offsetCompany ? false : true) || processLogTrans.PaymentCompany == _offsetCompany) &&
                  processLogTrans.InvoiceCompany  == _transCompany                                     &&
                  processLogTrans.SettlementRecId == _settlementRecId                                  &&
                  processLogTrans.SettlementDate  == _settlementDate;

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount, processLogTransOper.AmountLiableToVAT, processLogTransOper.TaxAmount);

        if (! _blocked)
        {
            amounts.addAmounts2(SalesBookVATProcessLogTransOper_RU::usedAmountsForCorrectiveFactures(_factureId,
                                                                                                     _taxCode,
                                                                                                     _defaultDimension,
                                                                                                     _inventTransId,
                                                                                                     _transRecId,
                                                                                                     _offsetRecId,
                                                                                                     _transCompany,
                                                                                                     _offsetCompany,
                                                                                                     _settlementRecId,
                                                                                                     _settlementDate));
        }
        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts_InvoiceRecId</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts_InvoiceRecId(
                                                            recId                           _transRecId,
                                                            CompanyId                       _transCompany,
                                                            boolean                         _blocked,
                                                            SalesBookVATRestoringType_RU    _restoringType  = SalesBookVATRestoringType_RU::None,
                                                            TransDate                       _toDate         = dateNull())
    {
        SalesBookVATProcessLogTransOper_RU  processLogTransOper;
        SalesBookVATProcessLogTrans_RU      processLogTrans;
        BookStructSmallVATAmounts_RU        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.Blocked  == _blocked &&
                 (prmisDefault(_restoringType) || processLogTransOper.RestoringType == _restoringType) &&
                 (prmisDefault(_toDate)        || processLogTransOper.TransDate     <= _toDate)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany;

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount, processLogTransOper.AmountLiableToVAT, processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts_OnDelivery</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts_OnDelivery(FactureId_RU                 _factureId,
                                                                             TaxCode                      _taxCode,
                                                                             DimensionDefault             _defaultDimension,
                                                                             InventTransId                _inventTransId,
                                                                             RefRecId                     _invoiceRecIdRef,
                                                                             CompanyId                    _invoiceCompany,
                                                                             boolean                      _blocked,
                                                                             SalesBookProcessingType_RU   _processingType,
                                                                             NoYes                        _checkReversed  = NoYes::No,
                                                                             TransDate                    _settlementDate = dateNull(),
                                                                             SalesBookVATRestoringType_RU _restoringType  = SalesBookVATRestoringType_RU::None)
    {
        SalesBookVATProcessLogTransOper_RU  processLogTransOper;
        SalesBookVATProcessLogTrans_RU      processLogTrans;
        BookStructSmallVATAmounts_RU        amounts;

        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.DefaultDimension == _defaultDimension &&
                  processLogTransOper.TaxCode          == _taxCode          &&
                  processLogTransOper.Blocked          == _blocked          &&
                  processLogTransOper.BlockedAuto      == NoYes::No         &&
                  processLogTransOper.CanceledRefRecId == 0                 &&
                  processLogTransOper.InventTransId    == _inventTransId    &&
                  processLogTransOper.RestoringType    == _restoringType
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId &&
                  processLogTrans.FactureId       == _factureId                   &&
                  processLogTrans.InvoiceRecIdRef == _invoiceRecIdRef             &&
                  processLogTrans.InvoiceCompany  == _invoiceCompany              &&
                  processLogTrans.ProcessingType  == _processingType              &&
                 (! _checkReversed  || processLogTrans.Reversed == NoYes::No)     &&
                 (! _settlementDate || (processLogTrans.SettlementDate && processLogTrans.SettlementDate < _settlementDate));

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount,
                           processLogTransOper.AmountLiableToVAT,
                           processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmountsForCorrectiveFactures</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmountsForCorrectiveFactures(FactureId_RU     _factureId,
                                                                                       TaxCode          _taxCode,
                                                                                       DimensionDefault _defaultDimension,
                                                                                       InventTransId    _inventTransId,
                                                                                       recId            _transRecId,
                                                                                       recId            _offsetRecId,
                                                                                       CompanyId        _transCompany,
                                                                                       CompanyId        _offsetCompany,
                                                                                       recId            _settlementRecId,
                                                                                       TransDate        _settlementDate)
    {
        BookStructSmallVATAmounts_RU        amounts;
        FactureJour_RU                      factureJour = FactureJour_RU::find(_factureId, FactureModule_RU::Cust);
        FactureJour_RU                      correctiveFacture;

        amounts = new BookStructSmallVATAmounts_RU();

        if (factureJour.ExportProcessing                                                        &&
            factureJour.FactureType     == FactureType_RU::Invoice                              &&
            (factureJour.ProcessingType == SalesBookFactureProcessingType_RU::VATZero           ||
             factureJour.ProcessingType == SalesBookFactureProcessingType_RU::VATZeroCorrection ||
             factureJour.ProcessingType == SalesBookFactureProcessingType_RU::OverdueConfirmation))
        {
            while select correctiveFacture
                where correctiveFacture.SourceExportFactureDate  == factureJour.FactureDate       &&
                      correctiveFacture.SourceExportFactureId    == factureJour.FactureId         &&
                      correctiveFacture.SourceExportFactureIdExt == factureJour.FactureExternalId &&
                      correctiveFacture.Module                   == factureJour.Module            &&
                      correctiveFacture.SettlementRecId          == _settlementRecId              &&
                      correctiveFacture.ExportProcessing
            {
                amounts.addAmounts2(SalesBookVATProcessLogTransOper_RU::usedAmounts(correctiveFacture.FactureId,
                                                                                    _taxCode,
                                                                                    _defaultDimension,
                                                                                    _inventTransId,
                                                                                    _transRecId,
                                                                                    _offsetRecId,
                                                                                    _transCompany,
                                                                                    _offsetCompany,
                                                                                    _settlementRecId,
                                                                                    _settlementDate,
                                                                                    false));
            }
        }

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS104849</DeveloperDocumentation>
	<Label>@GLS104849</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>LedgerDimension</TitleField1>
	<TitleField2>TaxCode</TitleField2>
	<ClusteredIndex>RefRecIdIdx</ClusteredIndex>
	<Modules>RSalesPurchBooks</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountLiableToVAT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@GLS101175</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountLiableToVAT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Block</Name>
			<Label>@SYS14436</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Blocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockedAuto</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Correction</Name>
			<Label>@SYS13069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Correct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DimensionPosted</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimensionPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GeneralLedger</Name>
			<Label>@SYS24097</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Operation</Name>
			<Label>@SYS4528</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CanceledRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogTableRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RestoringType</Name>
			<Label>@GLS114258</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RestoringType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountLiableToVAT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS104936</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Blocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS2675</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlockedAuto</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesBookVatProcessBlockedAuto_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesBookLogTransOperRefRecId_RU</ExtendedDataType>
			<Label>@GLS104842</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Correct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS13069</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimensionPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeriveDim</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BookDeriveDimension_RU</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>FactureAmounts</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BookAmounts_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogTableRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@GLS104941</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RestoringType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SalesBookVATRestoringType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesBookVATProcessParameters_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesBookVATProcessParametersRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountVAT_RU</ExtendedDataType>
			<Label>@GLS100870</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CanceledRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Blocked</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesBookVATProcessParameters_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesBookVATProcessParameters_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionPostedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimensionPosted</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesPurchBookVATProcessLogTransOper_RU</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TransTxt</MapField>
					<MapFieldTo>TransTxt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefRecId</MapField>
					<MapFieldTo>RefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Percent</MapField>
					<MapFieldTo>Percent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AmountLiableToVAT</MapField>
					<MapFieldTo>AmountLiableToVAT</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CanceledRefRecId</MapField>
					<MapFieldTo>CanceledRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Blocked</MapField>
					<MapFieldTo>Blocked</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LogTableRefRecId</MapField>
					<MapFieldTo>LogTableRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Correct</MapField>
					<MapFieldTo>Correct</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureAmounts</MapField>
					<MapFieldTo>FactureAmounts</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockedAuto</MapField>
					<MapFieldTo>BlockedAuto</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
					<MapFieldTo>TaxCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Marked</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SettledAmounts</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UsedAmounts</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllowDelete</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchBookVATProcessParameters_RU</MapField>
					<MapFieldTo>SalesBookVATProcessParameters_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimensionPosted</MapField>
					<MapFieldTo>DefaultDimensionPosted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Deferrals</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeriveDim</MapField>
					<MapFieldTo>DeriveDim</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension</MapField>
					<MapFieldTo>LedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetLedgerDimension</MapField>
					<MapFieldTo>OffsetLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsClosedAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsStornoRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsTransRecId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimensionPosted</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimensionPosted</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimensionPosted</Name>
					<Field>DefaultDimensionPosted</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesBookVATProcessLogTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesBookVATProcessLogTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesBookVATProcessLogTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogTableRefRecId</Name>
					<Field>LogTableRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesBookVATProcessLogTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesBookVATProcessLogTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesBookVATProcessLogTrans_RU</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesBookVATProcessLogTransOper_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesBookVATProcessLogTransOper_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesBookVATProcessLogTransOper_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CanceledRefRecId</Name>
					<Field>CanceledRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesBookVATProcessParameters_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesBookVATProcessParameters_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesBookVATProcessParameters_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesBookVATProcessParameters_RU</Name>
					<Field>SalesBookVATProcessParameters_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TaxTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>SourceTableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>SourceRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>