<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RequisitionLineFirmedOrderLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RequisitionLineFirmedOrderLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        PurchReqLine    purchReqLine;

        purchReqLine = this.purchReqLine();

        super();

        if (purchReqLine.RequisitionPurpose == RequisitionPurpose::Replenishment &&
            purchReqLine.RequisitionStatus  == PurchReqRequisitionStatus::Closed)
        {
            if (!(select firstOnly RecId
                    from requisitionLineFirmedOrderLine
                    where requisitionLineFirmedOrderLine.RequisitionLine == purchReqLine.RecId).recid)
            {
                PurchReqWFStatusTransitionHelper::setPurchReqLineStatus(purchReqLine.RecId, PurchReqRequisitionStatus::Approved);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedKanBan</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the firmed <c>Kanban</c> record associated with the <c>InventTransOrigin</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>Kanban</c> record.
    /// </returns>
    public Kanban firmedKanBan()
    {
        Kanban  kanban;

        if (this.FirmedReferenceType == ReqRefType::Kanban)
        {
            kanban = this.inventTransOriginator() as Kanban;
        }

        return kanban;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedOrderLineImageRessNo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the image number for the <c>ReqRefType</c> the firmed order line relates to.
    /// </summary>
    /// <returns>
    /// An integer.
    /// </returns>
    public int firmedOrderLineImageRessNo()
    {
        #ResAppl
        switch (this.FirmedReferenceType)
        {
            case ReqRefType::None :
                return -1;

            case ReqRefType::Purch :
                return #ImageReqRefPurch;

            case ReqRefType::Kanban :
                return #ImageReqRefKanban;

            case ReqRefType::Production :
                return #ImageReqRefProduction;

            case ReqRefType::TransferOrderReceive,
                 ReqRefType::InventTransfer:
                return #ImageReqRefTransferOrderReceive;
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedOrderLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a string containing IDs for the firmed orders.
    /// </summary>
    /// <returns>
    /// A string;
    /// </returns>
    [SysClientCacheDataMethodAttribute()]
    display public RequisitionReferenceOrderLines firmedOrderLines()
    {
        RequisitionReferenceOrderLines  requisitionReferenceOrderLines;

        switch (this.FirmedReferenceType)
        {
            case ReqRefType::Purch:
                requisitionReferenceOrderLines = this.firmedPurchaseLine().PurchId;
                break;

            case ReqRefType::Production:
                requisitionReferenceOrderLines = this.firmedProductionOrder().ProdId;
                break;

            case ReqRefType::Kanban:
                requisitionReferenceOrderLines = this.firmedKanBan().KanbanId;
                break;

            case ReqRefType::TransferOrderReceive:
                requisitionReferenceOrderLines = this.firmedTransferOrderLine().TransferId;
                break;

            case ReqRefType::InventTransfer:
                requisitionReferenceOrderLines = this.firmedTransferJournalLine().JournalId;
                break;
        }

        return requisitionReferenceOrderLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedProductionOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the firmed <c>ProdTable</c> record associated with the <c>InventTransOrigin</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>ProdTable</c> record.
    /// </returns>
    public ProdTable firmedProductionOrder()
    {
        ProdTable   prodTable;

        if (this.FirmedReferenceType == ReqRefType::Production)
        {
            prodTable = this.inventTransOriginator() as ProdTable;
        }

        return prodTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedPurchaseLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the firmed <c>PurchLine</c> record associated with the <c>InventTransOrigin</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>PurchLine</c> record.
    /// </returns>
    public PurchLine firmedPurchaseLine()
    {
        PurchLine   purchLine;

        if (this.FirmedReferenceType == ReqRefType::Purch)
        {
            purchLine = this.inventTransOriginator() as PurchLine;
        }

        return purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedTransferJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the firmed <c>InventJournalTrans</c> record associated with the <c>InventTransOrigin</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>InventJournalTrans</c> record.
    /// </returns>
    public InventJournalTrans firmedTransferJournalLine()
    {
        InventJournalTrans  inventJournalTrans;

        if (this.FirmedReferenceType == ReqRefType::InventTransfer)
        {
            inventJournalTrans = this.inventTransOriginator() as InventJournalTrans;
        }

        return inventJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firmedTransferOrderLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the firmed <c>InventTransferLine</c> record associated with the <c>InventTransOrigin</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>InventTransferLine</c> record.
    /// </returns>
    public InventTransferLine firmedTransferOrderLine()
    {
        InventTransferLine  inventTransferLine;

        if (this.FirmedReferenceType == ReqRefType::TransferOrderReceive)
        {
            inventTransferLine = this.inventTransOriginator() as InventTransferLine;
        }

        return inventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeRelationShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>RequisitionLineFirmedOrderLine</c> table buffer.
    /// </summary>
    /// <param name="_purchReqLine">
    /// The <c>PurchReqLine</c> record that the firmed order line is fulfilling.
    /// </param>
    /// <param name="_inventTransOrigin">
    /// The <c>InventTransOrigin</c> record associated with the firmed order line.
    /// </param>
    /// <param name="_firmedReferenceType">
    /// The <c>ReqRefType</c> for the firmed order line;
    /// </param>
    public void initializeRelationShip(
        PurchReqLine        _purchReqLine,
        InventTransOrigin   _inventTransOrigin,
        ReqRefType          _firmedReferenceType)
    {
        this.RequisitionLine                        = _purchReqLine.RecId;
        this.FirmedOrderLineInventTransId           = _inventTransOrigin.InventTransId;
        this.FirmedOrderLineInventTransDataAreaId   = _inventTransOrigin.dataAreaId;
        this.FirmedReferenceType                    = _firmedReferenceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>InventTransOrigin</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>InventTransOrigin</c> record.
    /// </returns>
    public InventTransOrigin inventTransOrigin()
    {
        return InventTransOrigin::findByInventTransIdInDataArea(this.FirmedOrderLineInventTransId, this.FirmedOrderLineInventTransDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransOriginator</Name>
				<Source><![CDATA[
        private Common inventTransOriginator()
    {
        Common          originator;
        CompanyId       companyId;

        companyId = this.purchReqLine().buyingLegalEntity2DataArea();

        if (companyId)
        {
            changeCompany(companyId)
            {
                originator = this.inventTransOrigin().originator();
            }
        }

        return originator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PurchReqLine</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>PurchReqLine</c> record.
    /// </returns>
    public PurchReqLine purchReqLine()
    {
        return PurchReqLine::find(this.RequisitionLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowedReferenceCategories</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether a <c>InventTransType</c> value is an allowed reference category for <c>InventTransOrigin</c> to be
    /// associated with a <c>RequisitionLineFirmedOrderLine</c> record.
    /// </summary>
    /// <param name="_referenceCategory">
    /// The <c>InventTransType</c> value to be validated.
    /// </param>
    /// <returns>
    /// True if the reference category is allowed; otherwise, false.
    /// </returns>
    public static boolean allowedReferenceCategories(InventTransType _referenceCategory)
    {
        return _referenceCategory == InventTransType::KanbanEmptied
            || _referenceCategory == InventTransType::Purch
            || _referenceCategory == InventTransType::TransferOrderReceive
            || _referenceCategory == InventTransType::InventTransfer
            || _referenceCategory == InventTransType::Production;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFromInventTransOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>RequisitionLineFirmedOrderLine</c> associated with an <c>InventTransOrigin</c> record.
    /// </summary>
    /// <param name="_inventTransOrigin">
    /// The <c>InventTransOrigin</c> record for which the <c>RequisitionLineFirmedOrderLine</c> record must be deleted.
    /// </param>
    public static void deleteFromInventTransOrigin(InventTransOrigin _inventTransOrigin)
    {
        RequisitionLineFirmedOrderLine  requisitionLineFirmedOrderLine;

        if (!_inventTransOrigin.RecId)
        {
            return;
        }

        if (RequisitionLineFirmedOrderLine::allowedReferenceCategories(_inventTransOrigin.referenceCategory))
        {
            delete_from RequisitionLineFirmedOrderLine
                where requisitionLineFirmedOrderLine.FirmedOrderLineInventTransDataAreaId   == _inventTransOrigin.dataAreaId
                   && requisitionLineFirmedOrderLine.FirmedOrderLineInventTransId           == _inventTransOrigin.InventTransId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>RequisitionLineFirmedOrderLine</c> table buffer and add the table buffer to the <c>RecordInsertList</c> for linking requisition lines and firmed order lines.
    /// </summary>
    /// <param name="_recordInsertListRequisitionLineFirmedOrderLine">
    /// The <c>RecordInsertList</c> where the <c>RequisitionLineFirmedOrderLine</c> table buffer is to be added.
    /// </param>
    /// <param name="_purchReqLine">
    /// The <c>PurchReqLine</c> record that the firmed order line is fulfilling.
    /// </param>
    /// <param name="_inventTransOrigin">
    /// The <c>InventTransOrigin</c> record associated with the firmed order line.
    /// </param>
    /// <param name="_firmedReferenceType">
    /// The <c>ReqRefType</c> for the firmed order line;
    /// </param>
    public static void insertReference(
        RecordInsertList    _recordInsertListRequisitionLineFirmedOrderLine,
        PurchReqLine        _purchReqLine,
        InventTransOrigin   _inventTransOrigin,
        ReqRefType          _firmedReferenceType)
    {
        RequisitionLineFirmedOrderLine  requisitionLineFirmedOrderLine;

        requisitionLineFirmedOrderLine.initializeRelationShip(_purchReqLine, _inventTransOrigin, _firmedReferenceType);

        _recordInsertListRequisitionLineFirmedOrderLine.add(requisitionLineFirmedOrderLine);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS4050018</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS4050017</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>FirmedOrderLineInventTransId</TitleField1>
	<TitleField2>FirmedOrderLineInventTransDataAreaId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>FirmedOrderLineIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FirmedReferenceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirmedOrderLineInventTransDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirmedOrderLineInventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FirmedOrderLineInventTransDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirmedOrderLineInventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequisitionLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReferenceType</Name>
			<Label>@SYS4050027</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FirmedReferenceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FirmedOrderLineInventTransDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FirmedOrderLineInventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RequisitionFirmedInventTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FirmedReferenceType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RequisitionFirmedReferenceType</ExtendedDataType>
			<EnumType>ReqRefType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RequisitionLine</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RequisitionLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RequisitionLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FirmedOrderLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FirmedOrderLineInventTransDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FirmedOrderLineInventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RequisitionLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ReferenceCategory_Extern</Name>
					<RelatedField>ReferenceCategory</RelatedField>
					<ValueStr>InventTransType::Production</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ReferenceCategory_Extern_1</Name>
					<RelatedField>ReferenceCategory</RelatedField>
					<ValueStr>InventTransType::InventTransfer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ReferenceCategory_Extern_2</Name>
					<RelatedField>ReferenceCategory</RelatedField>
					<ValueStr>InventTransType::TransferOrderReceive</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ReferenceCategory_Extern_3</Name>
					<RelatedField>ReferenceCategory</RelatedField>
					<ValueStr>InventTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ReferenceCategory_Extern_4</Name>
					<RelatedField>ReferenceCategory</RelatedField>
					<ValueStr>InventTransType::KanbanEmptied</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FirmedOrderLineInventTransDataAreaId</Name>
					<Field>FirmedOrderLineInventTransDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FirmedOrderLineInventTransId</Name>
					<Field>FirmedOrderLineInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchReqLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchReqLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RequisitionLine</Name>
					<Field>RequisitionLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>