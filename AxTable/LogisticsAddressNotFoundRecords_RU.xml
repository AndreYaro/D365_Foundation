<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressNotFoundRecords_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsAddressNotFoundRecords_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNameByRecId</Name>
				<Source><![CDATA[
    private Name getNameByRecId(RecId _recId, LogisticsAddressElement _element)
    {
        LogisticsAddressStreet_RU logisticsAddressStreet_RU;
        LogisticsAddressDistrict logisticsAddressDistrict;
        LogisticsAddressCity logisticsAddressCity;
        LogisticsAddressCounty logisticsAddressCounty;
        LogisticsAddressState logisticsAddressState;
        
        LogisticsAddressHouseNumber_RU logisticsAddressHouseNumber_RU;
        LogisticsAddressSteadNumber_RU logisticsAddressSteadNumber_RU;
        LogisticsAddressFlatNumber_RU logisticsAddressFlatNumber_RU;
        
        switch(_element)
        {
            case LogisticsAddressElement::StreetName:
        
                logisticsAddressStreet_RU = LogisticsAddressStreet_RU::findRecID(_recId);
                return strFmt('%1, %2, %3, %4, %5',logisticsAddressStreet_RU.stateName(),
                        logisticsAddressStreet_RU.countyName(),
                        logisticsAddressStreet_RU.cityName(),
                        logisticsAddressStreet_RU.districtName(),
                        logisticsAddressStreet_RU.Description);
        
            case LogisticsAddressElement::District:
                    select firstOnly logisticsAddressDistrict
                        where logisticsAddressDistrict.RecId == _recId;
        
                return strFmt('%1, %2, %3, %4',logisticsAddressDistrict.StateId_RU,
                        logisticsAddressDistrict.CountyId_RU,
                        logisticsAddressDistrict.cityName_RU(),
                        logisticsAddressDistrict.Description);
        
            case LogisticsAddressElement::City:
                LogisticsAddressCity = LogisticsAddressCity::findRecID(_recId);
                return strFmt('%1, %2, %3',LogisticsAddressCity.StateId,
                        LogisticsAddressCity.CountyId,
                        LogisticsAddressCity.Description);
        
            case LogisticsAddressElement::County:
                logisticsAddressCounty = logisticsAddressCounty::findRecID(_recId);
                return strFmt('%1, %2',logisticsAddressCounty.StateId,
                        logisticsAddressCounty.Name);
        
            case LogisticsAddressElement::State:
                logisticsAddressState = logisticsAddressState::findRecID(_recId);
                return strFmt('%1, %2',logisticsAddressState.StateId,
                        logisticsAddressState.Name);
        
            case LogisticsAddressElement::House_RU:
                logisticsAddressHouseNumber_RU = LogisticsAddressHouseNumber_RU::findRecID(_recId);
                return strFmt('%1, %2, %3, %4, %5, %6',logisticsAddressHouseNumber_RU.stateName(),
                        logisticsAddressHouseNumber_RU.countyName(),
                        logisticsAddressHouseNumber_RU.cityName(),
                        logisticsAddressHouseNumber_RU.districtName(),
                        logisticsAddressHouseNumber_RU.streetName(),
                        logisticsAddressHouseNumber_RU.HouseDescription);
            // TODO: implement when new Enum is ready
            /*
            case LogisticsAddressElement::Stead_RU:
                logisticsAddressSteadNumber_RU = LogisticsAddressSteadNumber_RU::findRecID(_recId);
                return strFmt('%1, %2, %3, %4, %5, %6',logisticsAddressSteadNumber_RU.stateName(),
                        logisticsAddressSteadNumber_RU.countyName(),
                        logisticsAddressSteadNumber_RU.cityName(),
                        logisticsAddressSteadNumber_RU.districtName(),
                        logisticsAddressSteadNumber_RU.streetName(),
                        logisticsAddressSteadNumber_RU.SteadDescription);
            */
            case LogisticsAddressElement::Flat_RU:
                logisticsAddressFlatNumber_RU = LogisticsAddressFlatNumber_RU::findRecId(_recId);
        
                logisticsAddressHouseNumber_RU = LogisticsAddressHouseNumber_RU::findRecID(logisticsAddressFlatNumber_RU.House);
                return strFmt('%1, %2, %3, %4, %5, %6, %7',logisticsAddressHouseNumber_RU.stateName(),
                        logisticsAddressHouseNumber_RU.countyName(),
                        logisticsAddressHouseNumber_RU.cityName(),
                        logisticsAddressHouseNumber_RU.districtName(),
                        logisticsAddressHouseNumber_RU.streetName(),
                        logisticsAddressHouseNumber_RU.HouseDescription,
                        logisticsAddressFlatNumber_RU.Name);
        }
        
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>objectNameActual</Name>
				<Source><![CDATA[
    display Name objectNameActual()
    {
        return this.getNameByRecId(this.RefRecIdTo, this.LogisticsAddressElementTo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>objectNameOriginal</Name>
				<Source><![CDATA[
    display Name objectNameOriginal()
    {
        return this.getNameByRecId(this.RefRecId, this.LogisticsAddressElement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterQueryByLog</Name>
				<Source><![CDATA[
    public static QueryBuildDataSource filterQueryByLog(QueryBuildDataSource _qbds, FieldId _recIdNum, FieldId _tableIdNum)
    {
        QueryBuildDataSource qbdsLog;
        
        qbdsLog = _qbds.addDataSource(tableNum(LogisticsAddressNotFoundRecords_RU));
        
        qbdsLog.addLink(_recIdNum,
                fieldNum(LogisticsAddressNotFoundRecords_RU, RefRecId));
        
        qbdsLog.addLink(_tableIdNum,
                fieldNum(LogisticsAddressNotFoundRecords_RU, RefTableId));
        
        qbdsLog.joinMode(JoinMode::NoExistsJoin);
        
        return _qbds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAddressAsNotFound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an entry in LogisticsAddressNotFoundRecords_RU table.
    /// </summary>
    /// <param name = "_refTableId">From which table the record been moved.</param>
    /// <param name = "_refRecId">The record recid that been moved.</param>
    /// <param name = "_refToTableId">To which table the record moved.</param>
    /// <param name = "_refToRecId">To which table the record moved to.</param>
    /// <param name = "_reason">Reason why the record hasn't been found.</param>
    internal static void markAddressAsNotFound(
        TableId _refTableId,
        RecId _refRecId,
        TableId _refToTableId,
        RecId _refToRecId,
        LogisticsAddressNotFoundReason_RU _reason)
    {
        if (_refRecId)
        {
            ttsbegin;
            LogisticsAddressNotFoundRecords_RU logisticsAddressNotFoundRecords_RU;
            select firstOnly forupdate logisticsAddressNotFoundRecords_RU
                where logisticsAddressNotFoundRecords_RU.RefRecId == _refRecId
                    && logisticsAddressNotFoundRecords_RU.RefTableId == _refTableId;

            logisticsAddressNotFoundRecords_RU.RefRecId = _refRecId;
            logisticsAddressNotFoundRecords_RU.RefTableId = _refTableId;
            logisticsAddressNotFoundRecords_RU.RefRecIdTo = _refToRecId;
            logisticsAddressNotFoundRecords_RU.LogisticsAddressNotFoundReason_RU = _reason;
            logisticsAddressNotFoundRecords_RU.LogisticsAddressElement = FiasGARImportUtils::getElement(_refTableId);
            logisticsAddressNotFoundRecords_RU.LogisticsAddressElementTo = FiasGARImportUtils::getElement(_refToTableId);

            logisticsAddressNotFoundRecords_RU.write();
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4889709</DeveloperDocumentation>
	<Label>@SYP4889709</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>RefRecId</TitleField1>
	<TitleField2>LogisticsAddressElement</TitleField2>
	<Modules>GAB</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressElement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressNotFoundReason_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecIdTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYP4880955</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressElement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressElementTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressNotFoundReason_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecIdTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@SYP4889698</HelpText>
			<Label>@SYP4889697</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LogisticsAddressElement</Name>
			<HelpText>@SYP4889690</HelpText>
			<Label>@SYP4889690</Label>
			<EnumType>LogisticsAddressElement</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LogisticsAddressElementTo</Name>
			<HelpText>@SYP4889699</HelpText>
			<Label>@SYP4889699</Label>
			<EnumType>LogisticsAddressElement</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LogisticsAddressNotFoundReason_RU</Name>
			<HelpText>@SYP4889688</HelpText>
			<Label>@SYP4889688</Label>
			<EnumType>LogisticsAddressNotFoundReason_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecIdTo</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VersionId</Name>
			<ExtendedDataType>LogisticsAddressImportVersionId_RU</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>City</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressCity</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::City</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>County</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressCounty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::County</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>State</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::State</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>District</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressDistrict</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::District</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>House</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressHouseNumber_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::House_RU</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Flat</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressFlatNumber_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<ValueStr>LogisticsAddressElement::Flat_RU</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Landplot</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressSteadNumber_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LogisticsAddressElement</Name>
					<Field>LogisticsAddressElement</Field>
					<Value>28</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Street</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsAddressStreet_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>