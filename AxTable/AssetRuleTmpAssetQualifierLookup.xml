<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRuleTmpAssetQualifierLookup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetRuleTmpAssetQualifierLookup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetGroupFromQualifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the asset group from the given asset qualifier, using <c>assetQualifierList</c>.
    /// </summary>
    /// <param name="_assetQualifier">
    /// The asset qualifier to use to fin the asset group.
    /// </param>
    /// <param name="_assetQualifierList">
    /// A list that contains the asset qualifier containers to use to look up the Asset Group.
    /// </param>
    /// <returns>
    /// An asset group that corresponds to the specified asset qualifier.
    /// </returns>
    public static AssetGroupId getAssetGroupFromQualifier(AssetRuleAssetQualifier _assetQualifier, List _assetQualifierList)
    {
        container               currVal;
        ListEnumerator          valueList;
        AssetGroupId            assetGroup;

        if (_assetQualifier)
        {
            valueList = _assetQualifierList.getEnumerator();
            while (valueList.moveNext())
            {
                currVal = valueList.current();
                if (conpeek(currVal, 1) == _assetQualifier)
                {
                    assetGroup = conpeek(currVal, 2);
                    break;
                }
            }
        }

        return assetGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAssetQualifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the lookup for asset qualifiers
    /// </summary>
    /// <param name="_ctrl">
    /// The form string control for which to show the lookup.
    /// </param>
    /// <param name="_assetQualifierList">
    /// A list that contains the asset qualifier containers to use for the lookup form.
    /// </param>
    public static void lookupAssetQualifier(FormStringControl    _ctrl,
                                                    List                _assetQualifierList)
    {
        FormRun formRun;
        Args    args;
        int i;
        container               currVal;
        ListEnumerator          valueList;
        AssetRuleTmpAssetQualifierLookup assetRuleTmpAssetQualifierLookup;

        valueList = _assetQualifierList.getEnumerator();
        while (valueList.moveNext())
        {
            currVal = valueList.current();
            assetRuleTmpAssetQualifierLookup.AssetRuleQualifier =  conpeek(currVal, i);
            assetRuleTmpAssetQualifierLookup.QualifierString = conpeek(currVal, i+1);
            assetRuleTmpAssetQualifierLookup.insert();
        }

        args = new Args();
        args.name(formstr(AssetRuleAssetQualifierLookup));
        args.caller(_ctrl);

        args.record(AssetRuleTmpAssetQualifierLookup);
        formRun = classfactory.formRunClass(args);
        formRun.init();

        _ctrl.performFormLookup(formRun);
        assetRuleTmpAssetQualifierLookup = formRun.selectRecordModeSelectedRecord();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<Label>@SYS138694</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QualifierString</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetGroupId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetGroupId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetRuleQualifier</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QualifierString</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetRuleTmpAssetQualifierLookup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetGroupId</Name>
					<SourceEDT>AssetGroupId</SourceEDT>
					<Field>AssetGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>