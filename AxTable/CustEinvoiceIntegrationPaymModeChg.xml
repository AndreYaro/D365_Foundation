<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustEinvoiceIntegrationPaymModeChg</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustEinvoiceIntegrationPaymModeChg extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the CustEinvoiceIntegrationPaymModeChg table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing CustEinvoiceIntegrationPaymModeChg table.
    /// </returns>
    public static CustEinvoiceIntegrationPaymModeChg find(
        recId               _recId,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustEinvoiceIntegrationPaymModeChg paymModeChange;

        paymModeChange.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            paymModeChange.concurrencyModel(_concurrencyModel);
        }

        select firstonly paymModeChange
            where paymModeChange.RecId == _recId;

        return paymModeChange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTypeStatusFrom</Name>
				<Source><![CDATA[
        static CustEinvoiceIntegrationPaymModeChg findByTypeStatusFrom(
        CustEInvoiceIntegrationTypeRecId _custEinvoiceIntegrationTypeTableRecId,
        CustEinvoiceIntegrationStatus    _integrationStatus,
        PaymMode                         _fromPaymMode,
        PaymSpec                         _fromPaymSpec,
        CustEinvoiceIntegrationWarning   _integrationWarning = CustEinvoiceIntegrationAllNoYes::All,
        boolean                          _forUpdate          = false)
    {
        CustEinvoiceIntegrationPaymModeChg paymModeChange;

        paymModeChange.selectForUpdate(_forUpdate);

        select firstonly paymModeChange
            where paymModeChange.CustEinvoiceIntegrationTypeTable   == _custEinvoiceIntegrationTypeTableRecId
               && paymModeChange.Status                             == _integrationStatus
               && paymModeChange.FromPaymMode                       == _fromPaymMode
               && paymModeChange.FromPaymSpec                       == _fromPaymSpec
               && paymModeChange.Warning                            == _integrationWarning;

        return paymModeChange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPri</Name>
				<Source><![CDATA[
        static CustEinvoiceIntegrationPaymModeChg findPri(
        CustEInvoiceIntegrationTypeRecId  _custEinvoiceIntegrationTypeTableRecId,
        CustEinvoiceIntegrationStatus     _integrationStatus,
        PaymMode                          _fromPaymMode,
        PaymSpec                          _fromPaymSpec,
        CustEinvoiceIntegrationWarning    _integrationWarning = CustEinvoiceIntegrationAllNoYes::All,
        boolean                           _forUpdate          = false)
    {
        CustEinvoiceIntegrationPaymModeChg paymModeChange;

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      _fromPaymMode,
                                                                                      _fromPaymSpec,
                                                                                      _integrationWarning,
                                                                                      _forUpdate);
        }

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      _fromPaymMode,
                                                                                      _fromPaymSpec,
                                                                                      CustEinvoiceIntegrationAllNoYes::All,
                                                                                      _forUpdate);
        }

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      _fromPaymMode,
                                                                                      '',
                                                                                      _integrationWarning,
                                                                                      _forUpdate);
        }

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      _fromPaymMode,
                                                                                      '',
                                                                                      CustEinvoiceIntegrationAllNoYes::All,
                                                                                      _forUpdate);
        }

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      '',
                                                                                      '',
                                                                                      _integrationWarning,
                                                                                      _forUpdate);
        }

        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findByTypeStatusFrom(_custEinvoiceIntegrationTypeTableRecId,
                                                                                      _integrationStatus,
                                                                                      '',
                                                                                      '',
                                                                                      CustEinvoiceIntegrationAllNoYes::All,
                                                                                      _forUpdate);
        }

        return paymModeChange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriActive</Name>
				<Source><![CDATA[
        static CustEinvoiceIntegrationPaymModeChg findPriActive(
        CustEInvoiceIntegrationTypeRecId    _custEinvoiceIntegrationTypeTableRecId,
        PaymMode                            _fromPaymMode,
        PaymSpec                            _fromPaymSpec,
        CustEinvoiceIntegrationWarning      _integrationWarning,
        boolean                             _forUpdate = false)
    {
        CustEinvoiceIntegrationPaymModeChg paymModeChange;

        paymModeChange = CustEinvoiceIntegrationPaymModeChg::findPri(_custEinvoiceIntegrationTypeTableRecId,
                                                                     CustEinvoiceIntegrationStatus::Active,
                                                                     _fromPaymMode,
                                                                     _fromPaymSpec,
                                                                     _integrationWarning,
                                                                     _forUpdate);
        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findPri(_custEinvoiceIntegrationTypeTableRecId,
                                                                         CustEinvoiceIntegrationStatus::Pending,
                                                                         _fromPaymMode,
                                                                         _fromPaymSpec,
                                                                         _integrationWarning,
                                                                         _forUpdate);
        }
        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findPri(_custEinvoiceIntegrationTypeTableRecId,
                                                                         CustEinvoiceIntegrationStatus::None,
                                                                         _fromPaymMode,
                                                                         _fromPaymSpec,
                                                                         _integrationWarning,
                                                                         _forUpdate);
        }
        if (!paymModeChange)
        {
            paymModeChange = CustEinvoiceIntegrationPaymModeChg::findPri(_custEinvoiceIntegrationTypeTableRecId,
                                                                         CustEinvoiceIntegrationStatus::Rejected,
                                                                         _fromPaymMode,
                                                                         _fromPaymSpec,
                                                                         _integrationWarning,
                                                                         _forUpdate);
        }

        return paymModeChange;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriDeleted</Name>
				<Source><![CDATA[
        static CustEinvoiceIntegrationPaymModeChg findPriDeleted(
        CustEInvoiceIntegrationTypeRecId   _custEinvoiceIntegrationTypeTableRecId,
        PaymMode                           _fromPaymMode,
        PaymSpec                           _fromPaymSpec,
        CustEinvoiceIntegrationWarning     _integrationWarning,
        boolean                            _forUpdate = false)
    {
        CustEinvoiceIntegrationPaymModeChg paymModeChange;

        paymModeChange = CustEinvoiceIntegrationPaymModeChg::findPri(_custEinvoiceIntegrationTypeTableRecId,
                                                                     CustEinvoiceIntegrationStatus::Deleted,
                                                                     _fromPaymMode,
                                                                     _fromPaymSpec,
                                                                     _integrationWarning,
                                                                     _forUpdate);
        return paymModeChange;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankElectronicBanking</ConfigurationKey>
	<CountryRegionCodes>NO</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123650</DeveloperDocumentation>
	<FormRef>CustEinvoiceIntegrationTypePaymMode</FormRef>
	<Label>@SYS119492</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CustEinvoiceIntegrationTypeTable</TitleField1>
	<TitleField2>Status</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TypeStatusFromIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustEinvoiceIntegrationTypeTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPaymSpec</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPaymSpec</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustEinvoiceIntegrationTypeTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPaymSpec</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warning</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FromGroup</Name>
			<Label>@SYS4083</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromPaymSpec</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS36398</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>To</Name>
			<Label>@SYS53942</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToPaymSpec</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@SYS22564</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustEinvoiceIntegrationTypeTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Warning</Name>
			<Label>@SYS866</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Warning</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustEinvoiceIntegrationTypeTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEInvoiceIntegrationTypeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromPaymMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEinvoiceFromPaymMode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromPaymSpec</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEinvoiceFromPaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustEinvoiceIntegrationStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToPaymMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEinvoiceToPaymMode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToPaymSpec</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEinvoiceToPaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Warning</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustEinvoiceIntegrationWarning</ExtendedDataType>
			<EnumType>CustEinvoiceIntegrationAllNoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeStatusFromIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustEinvoiceIntegrationTypeTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromPaymMode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromPaymSpec</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Warning</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustEinvoiceIntegrationTypeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustEinvoiceIntegrationTypeTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustEinvoiceIntegrationType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustEInvoiceIntegrationTypePaymMode</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustEinvoiceIntegrationTypeTable</Name>
					<Field>CustEinvoiceIntegrationTypeTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPaymModeTable_FromPaymMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPaymModeTable_FromPaymMode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustEinvoiceIntegrationPaymModeChg</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromPaymMode</Name>
					<SourceEDT>CustEinvoiceFromPaymMode</SourceEDT>
					<Field>FromPaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPaymModeTable_ToPaymMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPaymModeTable_ToPaymMode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustEinvoiceIntegrationPaymModeChg</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToPaymMode</Name>
					<SourceEDT>CustEinvoiceToPaymMode</SourceEDT>
					<Field>ToPaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FromPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123434</EntityRelationshipRole>
			<RelatedTable>CustPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IsPaymModeSpecificationOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsFromPaymModeSpecificationOf</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromPaymSpec</Name>
					<Field>FromPaymSpec</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromPaymMode</Name>
					<Field>FromPaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ToPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123434</EntityRelationshipRole>
			<RelatedTable>CustPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IsPaymModeSpecOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsToPaymModeSpecificationOf</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToPaymSpec</Name>
					<Field>ToPaymSpec</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToPaymMode</Name>
					<Field>ToPaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>