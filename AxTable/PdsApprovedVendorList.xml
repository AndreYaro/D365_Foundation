<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsApprovedVendorList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.ValidFrom  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.ValidTo    = dateMax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to return vendor name based on vendor account number of current record. If user does not have rights to the vendor name field, blank string is returned.
    /// </summary>
    /// <returns>Returns Vendor Name</returns>
    public display VendName vendName()
    {
        VendName    vName = '';

        if (hasFieldAccess(tablenum(DirPartyTable),
                            fieldnum(DirPartyTable, Name),
                            AccessType::View))
        {
            vName = VendTable::find(this.PdsApprovedVendor).name();
        }

        return vName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns if a record in the date range for item and vendor combination exists.
    /// </summary>
    /// <param name="_itemId">The item id to check</param>
    /// <param name="_vendor">The vendor id to check</param>
    /// <param name="_startDate">The start date for the validation check</param>
    /// <param name="_endDate">The end date for the validation check. If not specified, startDate is used as endDate as well.</param>
    /// <param name="_allowOverlapCheck">A boolean value that specifies whether overlapping dates are allowed.</param>
    /// <returns>Returns True / false</returns>
    public static boolean existValid(
        ItemId              _itemId,
        PdsApprovedVendor   _vendor,
        ValidFromDate       _startDate,
        ValidToDate         _endDate = dateNull(),
        boolean             _allowOverlapCheck = false)
    {
        PdsApprovedVendorList   pdsApprovedVendorList;
        date                    fromDate;
        date                    toDate;

        if (_endDate != dateNull() && _endDate < _startDate)
        {
            throw error(strFmt("@SYS22828", funcName()));
        }

        if (_itemId && _vendor)
        {
            fromDate = _startDate == dateNull() ? DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) : _startDate;
            toDate   = _endDate   == dateNull() ? fromDate        : _endDate;

            // validTimeState() selects any overlapping record, but this query selects records that contain the interval
            select firstOnly validTimeState(fromDate, toDate) RecId
                from pdsApprovedVendorList
                where pdsApprovedVendorList.ItemId              == _itemId
                   && pdsApprovedVendorList.PdsApprovedVendor   == _vendor
                   &&   ((  !_allowOverlapCheck
                            && (pdsApprovedVendorList.ValidFrom     <= fromDate
                                && pdsApprovedVendorList.ValidTo    >= toDate))
                         || _allowOverlapCheck );
        }

        return pdsApprovedVendorList.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns the record matching a specific record id. By default this record is not slected for update. This property way be changed via the parameters.
    /// </summary>
    /// <param name="_recId">The record id to find</param>
    /// <param name="_forUpdate">defaults to false and therefore not selected for update</param>
    /// <returns>Returns PdsApprovedVendorList record</returns>
    /// <remarks>
    /// <syntax>
    /// public static PdsApprovedVendorList find(RecId _recId,  boolean _forUpdate = false)
    /// </syntax>
    /// <example>
    /// pdsApprovedVendorList = PdsApprovedVendorList::find(avl.RecId,true);
    /// </example>
    /// </remarks>
    public static PdsApprovedVendorList find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        PdsApprovedVendorList   pdsApprovedVendorList;
        date                    minSearchDate = dateNull();
        date                    maxSearchDate = dateMax();

        if (!prmisdefault(_forUpdate))
        {
            pdsApprovedVendorList.selectForUpdate(_forUpdate);
        }

        select firstonly validTimeState(minSearchDate, maxSearchDate) pdsApprovedVendorList
            where  pdsApprovedVendorList.RecId == _recId;

        return pdsApprovedVendorList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsAVL</ConfigurationKey>
	<DeveloperDocumentation>@PDS1060</DeveloperDocumentation>
	<FormRef>PdsApprovedVendorList</FormRef>
	<Label>@PRO1545</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>PdsApprovedVendor</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ApprovedVendorItemIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ApprovedVendorItemIdx</ReplacementKey>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsApprovedVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsApprovedVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsApprovedVendorList</Name>
			<Label>@PRO1542</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsApprovedVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsApprovedVendor</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsApprovedVendor</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ApprovedVendorItemIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsApprovedVendor</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsApprovedVendor</Name>
					<SourceEDT>PdsApprovedVendor</SourceEDT>
					<Field>PdsApprovedVendor</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>