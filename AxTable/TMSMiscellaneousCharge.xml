<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSMiscellaneousCharge</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSMiscellaneousCharge extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.ModuleType = MarkupModuleType::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateChargeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate an appropriate charge type has been selected for the module type.
    /// </summary>
    /// <returns>
    /// true if misc charge types are allowed; otherwise, false
    /// </returns>
    public boolean validateChargeType()
    {
        if ((this.ModuleType == MarkupModuleType::Cust || this.ModuleType == MarkupModuleType::Invent)
            && this.MiscMarkupCategory != MarkupCategory::Fixed)
        {
            return checkFailed(strFmt("@TRX:MiscellaneousChargeValidationErrorFixed", this.ModuleType, MarkupCategory::Fixed));
        }

        if (this.ModuleType == MarkupModuleType::Vend
            && this.isChargeTypeInvalidForVendor())
        {
            return checkFailed(strFmt("@TRX:MiscellaneousChargeValidationErrorProportional", this.ModuleType, MarkupCategory::Fixed, MarkupCategory::Proportional));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isChargeTypeInvalidForVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates miscellaneous charge type for vendor.
    /// </summary>
    /// <returns>true if miscellaneous charge types for vendor are not allowed; otherwise, false</returns>
    [Replaceable]
    protected boolean isChargeTypeInvalidForVendor()
    {
        return this.MiscMarkupCategory != MarkupCategory::Fixed
            && this.MiscMarkupCategory != MarkupCategory::Proportional;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(TMSMiscellaneousCharge, InventSiteId), [fieldnum(TMSMiscellaneousCharge, InventLocationId)]],
            [fieldnum(TMSMiscellaneousCharge, InventLocationId), [fieldnum(TMSMiscellaneousCharge, InventSiteId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysDefaultingProcessor::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldnum(TMSMiscellaneousCharge, InventSiteId):
                if (this.isFieldSet(fieldNum(TMSMiscellaneousCharge, InventLocationId)))
                {
                    this.InventStorageDimMap::defaultField(fieldNum(InventStorageDimMap, InventSiteId));
                }
                break;

            case fieldnum(TMSMiscellaneousCharge, InventLocationId):
                if (this.isFieldSet(fieldNum(TMSMiscellaneousCharge, InventSiteId)))
                {
                    this.InventStorageDimMap::defaultField(fieldNum(InventStorageDimMap, InventLocationId));
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateChargeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Do not allow misc charges with C/V credit types or
    /// invent charges that do have credit/debit types of ledger account.
    /// </summary>
    /// <returns>
    /// true if misc charges are allowed; otherwise, false
    /// </returns>
    boolean validateChargeCode()
    {
        MarkupTable markupTable = MarkupTable::find(this.ModuleType, this.MiscellaneousChargeCode);

        if (markupTable.VendType == MarkupType::CustVend)
        {
            return checkFailed("@TRX1706");
        }
        
        if (this.validateChargesModuleAndDebitCreditType(markupTable))
        {
            return checkFailed("@TRX:InvalidInventMiscellaneousChargeChargeCode");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateChargesModuleAndDebitCreditType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the charge code is invalid.
    /// </summary>
    /// <param name = "_markupTable">The charges table record.</param>
    /// <returns>true if the validation succeeded; otherwise, false.</returns>
    private boolean validateChargesModuleAndDebitCreditType(MarkupTable _markupTable)
    {
        return this.ModuleType == MarkupModuleType::Invent
            && (_markupTable.VendType != MarkupType::LedgerAccount
            || (_markupTable.CustType != MarkupType::LedgerAccount
            &&  _markupTable.CustType == MarkupType::Item && !this.allowDebitTypeItem()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDebitTypeItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the charges debit type is item.
    /// </summary>
    /// <returns>true if the debit type is of type item; otherwise, false</returns>
    [Replaceable]
    protected boolean allowDebitTypeItem()
    {
        // From an extensibility point, we should only use this method if debit type is item.
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(TMSMiscellaneousCharge, InventLocationId):
                ret = this.InventStorageDimMap::validateField(fieldNum(InventStorageDimMap, InventLocationId));
                break;

            case fieldNum(TMSMiscellaneousCharge, MiscMarkupCategory):
                ret = this.validateChargeType();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super()
                        & this.validateCarrierAndCarrierServiceCode();

        if (this.MiscellaneousChargeCode == '' && this.Ignore == NoYes::No)
        {
            ret = checkFailed(strFmt("@SYS84753", fieldId2pname(tableNum(TMSMiscellaneousCharge), fieldNum(TMSMiscellaneousCharge, MiscellaneousChargeCode))));
        }

        if (ret)
        {
            ret = this.validateChargeCode();
        }

        if (ret)
        {
            ret = this.validateChargeType();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCarrierAndCarrierServiceCode</Name>
				<Source><![CDATA[
    private boolean validateCarrierAndCarrierServiceCode()
    {
        boolean result = true;
        if (this.CarrierCode && this.CarrierServiceCode)
        {
            if (!TMSCarrierService::exist(this.CarrierServiceCode, this.CarrierCode))
            {
                result = checkFailed("@TRX734");
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>tmsMiscellaneousCharge</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly tmsMiscellaneousCharge
                    where tmsMiscellaneousCharge.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSMiscellaneousCharge</c> record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSMiscellaneousCharge find(RecId   _recId,
                                              boolean _forupdate = false)
    {
        TMSMiscellaneousCharge    tmsMiscellaneousCharge;

        if (_recId)
        {
            tmsMiscellaneousCharge.selectForUpdate(_forupdate);

            select firstonly tmsMiscellaneousCharge
                where tmsMiscellaneousCharge.RecId == _recId;
        }

        return tmsMiscellaneousCharge;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupMiscChargeCodesByModuleType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup miscellaneous charge codes for a given charges module.
    /// </summary>
    /// <param name="_control">
    /// The form control invoking the lookup.
    /// </param>
    /// <param name="_moduleType">
    /// The charges module type.
    /// </param>
    public static void lookupMiscChargeCodesByModuleType(FormControl        _control,
                                                        MarkupModuleType    _moduleType)
    {
        Query                   query = new Query();
        QueryBuildDataSource    dataSource;
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(MarkupTable), _control);

        dataSource = query.addDataSource(tableNum(MarkupTable));
        dataSource.addRange(fieldNum(MarkupTable, VendType)).value(SysQuery::valueNot(MarkupType::CustVend));
        dataSource.addRange(fieldNum(MarkupTable, ModuleType)).value(queryValue(_moduleType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.addLookupfield(fieldNum(MarkupTable, MarkupCode));
        sysTableLookup.addLookupfield(fieldNum(MarkupTable, Txt));

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1932</DeveloperDocumentation>
	<Label>@TRX639</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>MiscellaneousChargeCode</TitleField1>
	<TitleField2>ModuleType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccessorialMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightTermCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerInvoiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscellaneousChargeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ignore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MethodCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTimeTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTimeFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccessorialMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightTermCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerInvoiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscellaneousChargeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ignore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiscChargeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MethodCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTimeTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveUTCDateTimeFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccessorialMasterCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSAccessorialMasterCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCarrierCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierServiceCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCarrierServiceCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomerInvoiceCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TMSCustomerInvoiceCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EffectiveUTCDateTimeFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSEffectiveUTCDateTimeFrom</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EffectiveUTCDateTimeTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSEffectiveUTCDateTimeTo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightTermCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSFreightTermCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Ignore</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSIgnore</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MethodCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSMethodCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MiscChargeType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSMiscChargeType</ExtendedDataType>
			<EnumType>TMSDiscountType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MiscellaneousChargeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSModeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupModule</ExtendedDataType>
			<EnumType>MarkupModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MiscMarkupCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCategoryType</ExtendedDataType>
			<EnumType>MarkupCategory</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventStorageDimMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>InventLocationId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustomerInvoiceCode</Name>
					<SourceEDT>TMSCustomerInvoiceCode</SourceEDT>
					<Field>CustomerInvoiceCode</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FreightTermCode</Name>
					<SourceEDT>TMSFreightTermCode</SourceEDT>
					<Field>FreightTermCode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<SourceEDT>InventSiteId</SourceEDT>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MarkupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MiscellaneousChargeCode</Name>
					<Field>MiscellaneousChargeCode</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<RelatedField>ModuleType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSAccessorialMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSAccessorialMaster</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccessorialMasterCode</Name>
					<SourceEDT>TMSAccessorialMasterCode</SourceEDT>
					<Field>AccessorialMasterCode</Field>
					<RelatedField>AccessorialMasterCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSCarrier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSCarrier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode</Name>
					<SourceEDT>TMSCarrierCode</SourceEDT>
					<Field>CarrierCode</Field>
					<RelatedField>CarrierCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CarrierCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSCarrierService</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSCarrierService</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierServiceCode</Name>
					<SourceEDT>TMSCarrierServiceCode</SourceEDT>
					<Field>CarrierServiceCode</Field>
					<RelatedField>CarrierServiceCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSMethod</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSMethod</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MethodCode</Name>
					<SourceEDT>TMSMethodCode</SourceEDT>
					<Field>MethodCode</Field>
					<RelatedField>MethodCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModeCode</Name>
					<SourceEDT>TMSModeCode</SourceEDT>
					<Field>ModeCode</Field>
					<RelatedField>ModeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>