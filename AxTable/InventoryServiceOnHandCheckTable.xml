<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventoryServiceOnHandCheckTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class InventoryServiceOnHandCheckTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>truncate</Name>
				<Source><![CDATA[
    internal static void truncate()
    {
        SQLDataDictionary sqlDict = new SQLDataDictionary();

        new SQLDataDictionaryPermission(methodstr(SQLDataDictionary, tableTruncate)).assert();
        sqlDict.tableTruncate(tableNum(InventoryServiceOnHandCheckTable), false);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateIndexQueryEvents</Name>
				<Source><![CDATA[
    internal static List generateIndexQueryEvents(RecId minRecId, RecId maxRecId)
    {
        var curCompany = curExt();
        List siteLocationDimensions = new List(Types::String);
        siteLocationDimensions.addEnd('siteId');
        siteLocationDimensions.addEnd('locationId');

        List result = new List(Types::Class);
        Map itemsPerSiteLocation = InventoryServiceOnHandCheckTable::generateItemsPerSiteLocation(minRecId, maxRecId);
            
        var itemsPerSiteLocationEnum = new MapEnumerator(itemsPerSiteLocation);
        while (itemsPerSiteLocationEnum.moveNext())
        {
            var siteId = itemsPerSiteLocationEnum.currentKey();
            var itemsPerLocation = itemsPerSiteLocationEnum.currentValue() as Map;
            
            var itemsPerLocationEnum = new MapEnumerator(itemsPerLocation);
            while (itemsPerLocationEnum.moveNext())
            {
                var locationId = itemsPerLocationEnum.currentKey();
                var items = itemsPerLocationEnum.currentValue();
                
                var indexQueryEvent = InventOnHandIndexQueryEvent::create(curCompany, items);
                indexQueryEvent.addSiteLocation(siteId, locationId);
                result.addEnd(indexQueryEvent);
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOnlyFnoData</Name>
				<Source><![CDATA[
    internal static void updateOnlyFnoData(boolean _isPartitionByProductId)
    {
        ttsbegin;
        InventoryServiceOnHandCheckTable onHandCheckTable;
        while select forupdate onHandCheckTable
            where onHandCheckTable.AvailOrdered_Fno == 0
            && onHandCheckTable.AvailPhysical_Fno == 0
            && onHandCheckTable.Arrived_Fno == 0
            && onHandCheckTable.Deducted_Fno == 0
            && onHandCheckTable.OnOrder_Fno == 0
            && onHandCheckTable.Ordered_Fno == 0
            && onHandCheckTable.PhysicalInvent_Fno == 0
            && onHandCheckTable.Picked_Fno == 0
            && onHandCheckTable.PostedQty_Fno == 0
            && onHandCheckTable.QuotationIssue_Fno == 0
            && onHandCheckTable.QuotationReceipt_Fno == 0
            && onHandCheckTable.Received_Fno == 0
            && onHandCheckTable.Registered_Fno == 0
            && onHandCheckTable.ReservOrdered_Fno == 0
            && onHandCheckTable.ReservPhysical_Fno == 0
            && onHandCheckTable.AvailOrdered_IV == 0
            && onHandCheckTable.AvailPhysical_IV == 0
            && onHandCheckTable.Arrived_IV == 0
            && onHandCheckTable.Deducted_IV == 0
            && onHandCheckTable.OnOrder_IV == 0
            && onHandCheckTable.Ordered_IV == 0
            && onHandCheckTable.PhysicalInvent_IV == 0
            && onHandCheckTable.Picked_IV == 0
            && onHandCheckTable.PostedQty_IV == 0
            && onHandCheckTable.QuotationIssue_IV == 0
            && onHandCheckTable.QuotationReceipt_IV == 0
            && onHandCheckTable.Received_IV == 0
            && onHandCheckTable.Registered_IV == 0
            && onHandCheckTable.ReservOrdered_IV == 0
            && onHandCheckTable.ReservPhysical_IV == 0
        {
            onHandCheckTable.updateFromFno(_isPartitionByProductId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateItemsPerSiteLocation</Name>
				<Source><![CDATA[
    private static Map generateItemsPerSiteLocation(RecId minRecId, RecId maxRecId)
    {
        List items;
        Map itemsPerLocations;
        Map itemsPerSiteLocation = new Map(Types::String, Types::Class);
        InventoryServiceOnHandCheckTable onHandCheckTable;
        
        while select itemId, inventSiteId, inventLocationId
            from onHandCheckTable
            group by inventSiteId, inventLocationId, itemId
            where onHandCheckTable.RecId >= minRecId
            && onHandCheckTable.RecId <= maxRecId
        {
            if (itemsPerSiteLocation.exists(onHandCheckTable.InventSiteId))
            {
                itemsPerLocations = itemsPerSiteLocation.lookup(onHandCheckTable.InventSiteId) as Map;
            }
            else
            {
                itemsPerLocations = new Map(Types::String, Types::Class);
                itemsPerSiteLocation.add(onHandCheckTable.InventSiteId, itemsPerLocations);
            }

            if (itemsPerLocations.exists(onHandCheckTable.InventLocationId))
            {
                items = itemsPerLocations.lookup(onHandCheckTable.InventLocationId) as List;
            }
            else
            {
                items = new List(Types::String);
                itemsPerLocations.add(onHandCheckTable.InventLocationId, items);
            }

            items.addEnd(onHandCheckTable.ItemId);
        }
        
        return itemsPerSiteLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateExactQueryEvents</Name>
				<Source><![CDATA[
    internal static List generateExactQueryEvents(RecId minRecId, RecId maxRecId)
    {
        var curCompany = curExt();
        List siteLocationDimensions = new List(Types::String);
        siteLocationDimensions.addEnd('siteId');
        siteLocationDimensions.addEnd('locationId');

        List result = new List(Types::Class);
        Map siteLocationPerItem = InventoryServiceOnHandCheckTable::generateSiteLocationPerItem(minRecId, maxRecId);
            
        var siteLocationPerItemEnum = new MapEnumerator(siteLocationPerItem);
        while (siteLocationPerItemEnum.moveNext())
        {
            var itemId = siteLocationPerItemEnum.currentKey();
            var siteLocations = siteLocationPerItemEnum.currentValue() as List;

            var exactQueryEvent = InventOnHandExactQueryEvent::create(curCompany, itemId, siteLocationDimensions, siteLocations);
            result.addEnd(exactQueryEvent);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateSiteLocationPerItem</Name>
				<Source><![CDATA[
    private static Map generateSiteLocationPerItem(RecId minRecId, RecId maxRecId)
    {
        InventoryServiceOnHandCheckTable onHandCheckTable;
        
        Map siteLocationPerItem = new Map(Types::String, Types::Class);

        while select ItemId, InventSiteId, InventLocationId
            from onHandCheckTable
            group by ItemId, InventSiteId, InventLocationId
            where onHandCheckTable.RecId >= minRecId
            && onHandCheckTable.RecId <= maxRecId
        {
            List siteLocation = new List(Types::String);
            siteLocation.addEnd(onHandCheckTable.InventSiteId);
            siteLocation.addEnd(onHandCheckTable.InventLocationId);

            List siteLocations;

            if (siteLocationPerItem.exists(onHandCheckTable.ItemId))
            {
                siteLocations = siteLocationPerItem.lookup(onHandCheckTable.ItemId) as List;
            }
            else
            {
                siteLocations = new List(Types::Class);
                siteLocationPerItem.add(onHandCheckTable.ItemId, siteLocations);
            }

            siteLocations.addEnd(siteLocation);
            
        }
        
        return siteLocationPerItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromFno</Name>
				<Source><![CDATA[
    internal void updateFromFno(boolean _isPartitionByProductId, boolean _deleteIfMatch = true)
    {
        InventSum inventSum;

        if (this.Type == InventInventoryDataServiceDiagnosticsLogType::Aggregation || InventInventoryDataServiceDiagnosticsLogType::WHS)
        {
            ttsbegin;
            select sum(Arrived), sum(AvailOrdered), sum(AvailPhysical), sum(Deducted), sum(OnOrder), sum(Ordered), sum(PhysicalInvent), sum(Picked), sum(PostedQty), sum(QuotationIssue), sum(QuotationReceipt), sum(Received), sum(Registered), sum(ReservOrdered), sum(ReservPhysical)
                from inventSum
                    group by inventSum.ItemId, inventSum.InventSiteId, inventSum.InventLocationId
                    where inventSum.ClosedQty == 0
                && inventSum.InventSiteId == this.InventSiteId
                && inventSum.inventLocationId == this.InventLocationId
                && inventSum.ItemId == this.ItemId;

            this.Arrived_Fno = inventSum.Arrived;
            this.Deducted_Fno = inventSum.Deducted;
            this.OnOrder_Fno = inventSum.OnOrder;
            this.Ordered_Fno = inventSum.Ordered;
            this.PhysicalInvent_Fno = inventSum.PhysicalInvent;
            this.Picked_Fno = inventSum.Picked;
            this.PostedQty_Fno = inventSum.PostedQty;
            this.QuotationIssue_Fno = inventSum.QuotationIssue;
            this.QuotationReceipt_Fno = inventSum.QuotationReceipt;
            this.Received_Fno = inventSum.Received;
            this.Registered_Fno = inventSum.Registered;

            if (this.Type == InventInventoryDataServiceDiagnosticsLogType::WHS)
            {
                InventDim inventDimCriteria;
                inventDimCriteria.InventLocationId = this.InventLocationId;
                inventDimCriteria.InventSiteId = this.InventSiteId;

                WhsInventReserveQty whsInventReserveQty = WhsInventReserveQty::newFromParms(
                    InventTable::find(this.ItemId), inventDimCriteria);

                if (!_isPartitionByProductId)
                {
                    whsInventReserveQty.parmUpperLevelOfMinimumCalculation(2);
                }

                this.AvailOrdered_Fno = whsInventReserveQty.availOrdered();
                this.AvailPhysical_Fno = whsInventReserveQty.availPhysical();
                this.ReservOrdered_Fno = whsInventReserveQty.reservOrdered();
                this.ReservPhysical_Fno = whsInventReserveQty.reservPhysical();
            }
            else
            {
                this.AvailOrdered_Fno = inventSum.AvailOrdered;
                this.AvailPhysical_Fno = inventSum.AvailPhysical;
                this.ReservOrdered_Fno = inventSum.ReservOrdered;
                this.ReservPhysical_Fno = inventSum.ReservPhysical;
            }

            if (this.isMatch() && _deleteIfMatch)
            {
                this.delete();
            }
            else
            {
                this.update();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMatch</Name>
				<Source><![CDATA[
    private boolean isMatch()
    {
        return this.Arrived_Fno == this.Arrived_IV
        && this.AvailOrdered_Fno == this.AvailOrdered_IV
        && this.AvailPhysical_Fno == this.AvailPhysical_IV
        && this.Deducted_Fno == this.Deducted_IV
        && this.OnOrder_Fno == this.OnOrder_IV
        && this.Ordered_Fno == this.Ordered_IV
        && this.PhysicalInvent_Fno == this.PhysicalInvent_IV
        && this.Picked_Fno == this.Picked_IV
        && this.PostedQty_Fno == this.PostedQty_IV
        && this.QuotationIssue_Fno == this.QuotationIssue_IV
        && this.QuotationReceipt_Fno == this.QuotationReceipt_IV
        && this.Received_Fno == this.Received_IV
        && this.Registered_Fno == this.Registered_IV
        && this.ReservOrdered_Fno == this.ReservOrdered_IV
        && this.ReservPhysical_Fno == this.ReservPhysical_IV;
	}

]]></Source>
			</Method>
			<Method>
				<Name>updateFromIV</Name>
				<Source><![CDATA[
    internal void updateFromIV(InventOnHandChangeEventModifiers _modifiers)
    {
        ttsbegin;
        this.Arrived_IV = _modifiers.parmArrived();
        this.AvailOrdered_IV = _modifiers.parmAvailOrdered();
        this.AvailPhysical_IV = _modifiers.parmAvailPhysical();
        this.Deducted_IV = _modifiers.parmDeducted();
        this.OnOrder_IV = _modifiers.parmOnOrder();
        this.Ordered_IV = _modifiers.parmOrdered();
        this.PhysicalInvent_IV = _modifiers.parmPhysicalInvent();
        this.Picked_IV = _modifiers.parmPicked();
        this.PostedQty_IV = _modifiers.parmPostedQty();
        this.QuotationIssue_IV = _modifiers.parmQuotationIssue();
        this.QuotationReceipt_IV = _modifiers.parmQuotationReceipt();
        this.Received_IV = _modifiers.parmReceived();
        this.Registered_IV = _modifiers.parmRegistered();
        this.ReservOrdered_IV = _modifiers.parmReservOrdered();
        this.ReservPhysical_IV = _modifiers.parmReservPhysical();
        this.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWithResponse</Name>
				<Source><![CDATA[
    [SysObsolete('Use updateWithResponseV2() instead', false, 21\11\2023)]
    public static void updateWithResponse(str _companyId, InventInventoryDataServiceQueryResponse _response)
    {
        var productId = _response.parmProductId();
        var dimensions = _response.parmDimensionSet();
        var quantities = _response.parmQuantities();
        
        ttsbegin;
        InventoryServiceOnHandCheckTable onHandCheckTable =  dimensions.findRelatedOnHandCheckTable(InventInventoryDataServiceDiagnosticsLogType::Aggregation, _companyId, productId);

        if (onHandCheckTable.RecId)
        {
            var fnoQuantities = quantities.parmFnoModifiers();
            onHandCheckTable.updateFromIV(fnoQuantities);
            onHandCheckTable.updateFromFno(false);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWithResponseV2</Name>
				<Source><![CDATA[
    public static void updateWithResponseV2(str _companyId, InventInventoryDataServiceQueryResponse _response, boolean _isPartitionByProductId = false, boolean _deleteIfMatch = true)
    {
        var productId = _response.parmProductId();
        var dimensions = _response.parmDimensionSet();
        var quantities = _response.parmQuantities();
        
        ttsbegin;
        InventoryServiceOnHandCheckTable onHandCheckTable =  dimensions.findRelatedOnHandCheckTable(InventInventoryDataServiceDiagnosticsLogType::Aggregation, _companyId, productId);

        if (onHandCheckTable.RecId)
        {
            var fnoQuantities = quantities.parmFnoModifiers();
            onHandCheckTable.updateFromIV(fnoQuantities);
            onHandCheckTable.updateFromFno(_isPartitionByProductId, _deleteIfMatch);
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<ClusteredIndex></ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex></PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantities</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Arrived_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Arrived_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedQty_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedQty_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered_IV</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical_Fno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical_IV</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<EnumType>InventInventoryDataServiceDiagnosticsLogType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Arrived_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>Arrived_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Arrived_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>Arrived_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailOrdered_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>AvailOrdered_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailOrdered_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>AvailOrdered_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailPhysical_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<Label>AvailPhysical_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailPhysical_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<Label>AvailPhysical_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Deducted_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyDeducted</ExtendedDataType>
			<Label>Deducted_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Deducted_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyDeducted</ExtendedDataType>
			<Label>Deducted_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OnOrder_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>OnOrder_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OnOrder_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>OnOrder_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Ordered_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>Ordered_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Ordered_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>Ordered_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PhysicalInvent_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
			<Label>PhysicalInvent_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PhysicalInvent_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
			<Label>PhysicalInvent_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Picked_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>Picked_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Picked_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<Label>Picked_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PostedQty_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPosted</ExtendedDataType>
			<Label>PostedQty_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PostedQty_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPosted</ExtendedDataType>
			<Label>PostedQty_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationIssue_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>QuotationIssue_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationIssue_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<Label>QuotationIssue_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationReceipt_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<Label>QuotationReceipt_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationReceipt_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<Label>QuotationReceipt_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Received_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReceived</ExtendedDataType>
			<Label>Received_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Received_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReceived</ExtendedDataType>
			<Label>Received_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Registered_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
			<Label>Registered_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Registered_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
			<Label>Registered_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservOrdered_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
			<Label>ReservOrdered_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservOrdered_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
			<Label>ReservOrdered_IV</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservPhysical_Fno</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
			<Label>ReservPhysical_Fno</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservPhysical_IV</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
			<Label>ReservPhysical_IV</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>