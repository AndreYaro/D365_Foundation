<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionActionBudgetAccountLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmPositionActionBudgetAccountLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isLastEffectiveVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a <c>HcmPositionActionDetail</c> record is the last effective version.
    /// </summary>
    /// <param name="_positionRecId">
    /// The record ID of a <c>HcmPosition</c> record.
    /// </param>
    /// <param name="_legalEntityRecId">
    /// The record ID of a <c>CompanyInfo</c> record.
    /// </param>
    /// <param name="_budgetPurposeTypeRecID">
    /// The record ID of a <c>HcmBudgetPurposeType</c> record.
    /// </param>
    /// <param name="_effectiveDate">
    /// The effective date to use when the last effective record is read.
    /// </param>
    /// <returns>
    /// true if the specified record is the last effective version; otherwise, false .
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isLastEffectiveVersion(HcmPositionRecId _positionRecId,
                                          CompanyInfoRecId _legalEntityRecId,
                                          HcmBudgetPurposeTypeRecId _budgetPurposeTypeRecID,
                                          EffectiveDateTime _effectiveDate = DateTimeUtil::minValue())
    {
        HcmPositionBudgetAccountLine   positionBudgetAccountLine;
        utcdatetime         endTime   = DateTimeUtil::maxValue();

        select firstonly validTimeState(_effectiveDate, endTime) ValidFrom from positionBudgetAccountLine
            order by  positionBudgetAccountLine.ValidFrom desc
                where positionBudgetAccountLine.Position == _positionRecId
                && positionBudgetAccountLine.LegalEntity == _legalEntityRecId
                && positionBudgetAccountLine.BudgetPurposeType == _budgetPurposeTypeRecID;

        return this.PositionBudgetAccountLineRecId == positionBudgetAccountLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBudgetPurposeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>BudgetPurposeType</c> value for a record.
    /// </summary>
    /// <param name="_showErrorMessage">
    /// A Boolean value that indicates whether to show any error messages; optional.
    /// </param>
    /// <returns>
    /// true if the <c>BudgetPurposeType</c> value is valid; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateBudgetPurposeType(boolean _showErrorMessage = false)
    {
        boolean isValid = true;
        LabelType errorMessage;

        if ((select firstonly hcmBudgetPurposeTypeDetail
                where hcmBudgetPurposeTypeDetail.BudgetPurposeType == this.BudgetPurposeType).RecId != 0)
        {
            // The budget purpose type must have a detail record
            if (!HcmBudgetPurposeTypeDetail::findByBudgetPurposeTypeLegalEntityOnly(this.BudgetPurposeType, this.LegalEntity))
            {
                // A budget purpose type detail cannot be found for the current company context.
                isValid = false;
                errorMessage = SysLabel::labelId2String(literalStr("@GLS190452"));
            }
        }

        if (isValid && HcmPositionActionBudgetAccountLine::findByActionStateLEBudgetPurposeType(this.ActionState, this.LegalEntity, this.BudgetPurposeType).RecId != this.RecId)
        {
            isValid = isValid && false;
            errorMessage = SysLabel::labelId2String(literalStr("@GLS190215"));
        }

        if (!isValid && _showErrorMessage)
        {
            checkFailed(errorMessage);
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(HcmPositionActionBudgetAccountLine, BudgetPurposeType):
                ret = ret && this.validateBudgetPurposeType(true);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = ret && this.validateBudgetPurposeType(true);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record ID exists in <c>HcmPositionActionBudgetAccountLine</c> table and shows an infolog message if record does not exist.
    /// </summary>
    /// <param name="_recId">
    /// The value of the record ID to check.
    /// </param>
    /// <returns>
    /// true if the record ID exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExist(HcmPositionActionBudgetAccountLineRecId _recId)
    {
        boolean ret = true;

        if (!HcmPositionActionBudgetAccountLine::exist(_recId))
        {
            ret = checkFailed(strFmt(HcmPositionActionBudgetAccountLine::txtNotExist(), tableStr(HcmPositionActionBudgetAccountLine)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record ID exists in the <c>HcmPositionActionBudgetAccountLine</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The value of the record ID to check.
    /// </param>
    /// <returns>
    /// true if the record ID exists; otherwise, false .
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(HcmPositionActionBudgetAccountLineRecId _recId)
    {
        return _recId && (select firstonly RecId from hcmPositionActionBudgetAccountLine
                    where hcmPositionActionBudgetAccountLine.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>HcmPositionActionBudgetAccountLine</c> table that is based on a record ID
    /// value.
    /// </summary>
    /// <param name="_recId">
    /// The value of the record ID to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates the concurrency settings to use on the table; optional.
    /// </param>
    /// <returns>
    /// A <c>HcmPositionActionBudgetAccountLine</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static HcmPositionActionBudgetAccountLine find(
    HcmPositionActionBudgetAccountLineRecId   _recId,
    boolean                                   _forUpdate = false,
    ConcurrencyModel                          _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionActionBudgetAccountLine hcmPositionActionBudgetAccountLine;

        hcmPositionActionBudgetAccountLine.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionActionBudgetAccountLine.concurrencyModel(_concurrencyModel);
        }

        select firstonly hcmPositionActionBudgetAccountLine
             where hcmPositionActionBudgetAccountLine.RecId == _recId;

        return hcmPositionActionBudgetAccountLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByActionStateLEBudgetPurposeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>HcmPositionActionBudgetAccountLine</c> table that is based on the
    /// specified <c>HcmActionStateRecId</c> , <c>LegalEntity</c>, and <c>BudgetPurposeType</c> values.
    /// </summary>
    /// <param name="_actionStateRecId">
    /// The value of the <c>HcmActionStateRecId</c> field to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The value of the <c>LegalEntity</c> field to find.
    /// </param>
    /// <param name="_budgetPurposeType">
    /// The value of the <c>BudgetPurposeType</c> field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates the concurrency settings to use on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>HcmPositionActionBudgetAccountLine</c> Table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static HcmPositionActionBudgetAccountLine findByActionStateLEBudgetPurposeType(
    HcmActionStateRecId         _actionStateRecId,
    CompanyInfoRecId            _legalEntity,
    HcmBudgetPurposeTypeRecId   _budgetPurposeType,
    boolean                     _forUpdate = false,
    ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionActionBudgetAccountLine hcmPositionActionBudgetAccountLine;

        hcmPositionActionBudgetAccountLine.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionActionBudgetAccountLine.concurrencyModel(_concurrencyModel);
        }

        if (_actionStateRecId && _legalEntity && _budgetPurposeType)
        {
            select firstonly hcmPositionActionBudgetAccountLine
                where hcmPositionActionBudgetAccountLine.ActionState == _actionStateRecId &&
                hcmPositionActionBudgetAccountLine.LegalEntity == _legalEntity &&
                hcmPositionActionBudgetAccountLine.BudgetPurposeType == _budgetPurposeType;
        }

        return hcmPositionActionBudgetAccountLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByActionStateLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds records in the <c>HcmPositionActionBudgetAccountLine</c> table that are based on the
    /// specified <c>HcmActionStateRecId</c> and <c>LegalEntity</c> values.
    /// </summary>
    /// <param name="_actionStateRecId">
    /// The value of the <c>HcmActionStateRecId</c> field to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The value of the <c>LegalEntity</c> field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates the concurrency settings to use on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>HcmPositionActionBudgetAccountLine</c> Table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static HcmPositionActionBudgetAccountLine findByActionStateLegalEntity(
    HcmActionStateRecId         _actionStateRecId,
    CompanyInfoRecId            _legalEntity,
    boolean                     _forUpdate = false,
    ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionActionBudgetAccountLine hcmPositionActionBudgetAccountLine;

        hcmPositionActionBudgetAccountLine.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionActionBudgetAccountLine.concurrencyModel(_concurrencyModel);
        }

        if (_actionStateRecId && _legalEntity)
        {
            select hcmPositionActionBudgetAccountLine
                where hcmPositionActionBudgetAccountLine.ActionState == _actionStateRecId &&
                hcmPositionActionBudgetAccountLine.LegalEntity == _legalEntity;
        }

        return hcmPositionActionBudgetAccountLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HRMAdministration</ConfigurationKey>
	<DeveloperDocumentation>@GLS190414</DeveloperDocumentation>
	<Label>@GLS190494</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ActionState</TitleField1>
	<TitleField2>LegalEntity</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Budget</Modules>
	<ReplacementKey>ActionStateLegalEntityPurposeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActionState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OkToExpire</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActionState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPurposeType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetAccount</Name>
			<Label>@SYS342443</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OkToExpire</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActionState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPurposeType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ActionState</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmActionStateRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPurposeType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmBudgetPurposeTypeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyInfoRecId</ExtendedDataType>
			<Label>@SYS322242</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OkToExpire</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS190522</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PositionBudgetAccountLineRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>HcmPositionBudgetAccountLineRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PositionBudgetAccountLineRecVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Version</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ActionStateLegalEntityPurposeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ActionState</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetPurposeType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmPositionBudgetAccountLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PositionBudgetAccountLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPurposeType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HcmBudgetPurposeType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPurposeType</Name>
					<Field>BudgetPurposeType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmActionState</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmActionState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActionState</Name>
					<Field>ActionState</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmPositionBudgetAccountLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmPositionBudgetAccountLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PositionBudgetAccountLineRecId</Name>
					<Field>PositionBudgetAccountLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>