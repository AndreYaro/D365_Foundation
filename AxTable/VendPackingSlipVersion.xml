<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPackingSlipVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendPackingSlipVersion extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromPurchTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>VendPackingSlipVersion</c> object by using the specified <c>PurchTotals</c>
    /// object.
    /// </summary>
    /// <param name="_purchTotals">
    /// The <c>PurchTotals</c> object to use for initialization.
    /// </param>
    void initFromPurchTotals(PurchTotals _purchTotals)
    {
        this.Qty    = _purchTotals.purchQty();
        this.Weight = _purchTotals.purchWeight();
        this.Volume = _purchTotals.purchVolume();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isArchived</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the product receipt version is archived.
    /// </summary>
    /// <returns>
    /// true if the version is archived; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The latest version is never archived, the older ones always are.
    /// </remarks>
    public boolean isArchived()
    {
        return VendPackingSlipVersion::findLatest(this.VendPackingSlipJour).RecId != this.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>VendPackingSlipJourVersion</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record identifier of the record to find.
    /// </param>
    /// <returns>
    /// A <c>VendPackingSlipJourVersion</c> record if one exists; otherwise, an empty record.
    /// </returns>
    public static VendPackingSlipVersion find(RecId _recId)
    {
        VendPackingSlipVersion vendPackingSlipVersion;

        select firstonly vendPackingSlipVersion
            where vendPackingSlipVersion.RecId == _recId;

        return vendPackingSlipVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirst</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the first packing slip version.
    /// </summary>
    /// <param name="_packingSlipJour">
    ///     The packing slip journal to search for.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    ///     The first packing slip version for packing slip.
    /// </returns>
    public static VendPackingSlipVersion findFirst(VendPackingSlipJourRecId _packingSlipJour, boolean _forUpdate = false)
    {
        VendPackingSlipVersion vendPackingSlipVersion;

        if (_packingSlipJour)
        {
            vendPackingSlipVersion.selectForUpdate(_forUpdate);

            select firstonly vendPackingSlipVersion
                order by vendPackingSlipVersion.VersionDateTime asc
                where vendPackingSlipVersion.VendPackingSlipJour == _packingSlipJour;
        }

        return vendPackingSlipVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromInterCompanyPackingSlip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the most recent packing slip for the inter-company purchase order.
    /// </summary>
    /// <param name="_purchId">
    /// The inter-company purchase order ID.
    /// </param>
    /// <param name="_salesPackingSlipId">
    /// The ID of the packing slip.
    /// </param>
    /// <param name="_deliveryDate">
    /// The delivery date for the packing slip.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    /// The most recent packing slip for the inter-company purchase order.
    /// </returns>
    /// <remarks>
    /// The <c>InternalPackingSlipId</c> attribute is not required in this query because the
    /// <c>PackingSlipId</c> attribute combined with the <c>DeliveryDate</c> is unique from the original
    /// sales packing slip.
    /// </remarks>
    static VendPackingSlipVersion findFromInterCompanyPackingSlip(
        InterCompanyPurchId   _purchId,
        PackingSlipId         _salesPackingSlipId,
        TransDate             _deliveryDate,
        boolean               _update = false)
    {
        VendPackingSlipJour     vendPackingSlipJour;
        VendPackingSlipVersion  vendPackingSlipVersion;

        if (_salesPackingSlipId)
        {
            vendPackingSlipVersion.selectForUpdate(_update);

            select firstonly vendPackingSlipVersion
                exists join vendPackingSlipJour
                where vendPackingSlipJour.RecId         == vendPackingSlipVersion.VendPackingSlipJour
                   && vendPackingSlipJour.PurchId       == _purchId
                   && vendPackingSlipJour.PackingSlipId == _salesPackingSlipId
                   && vendPackingSlipJour.DeliveryDate  == _deliveryDate;
        }

        return vendPackingSlipVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLatest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the most recent packing slip version.
    /// </summary>
    /// <param name="_packingSlipJour">
    /// The packing slip journal to search for.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    /// The most recent packing slip for packing slip.
    /// </returns>
    static VendPackingSlipVersion findLatest(VendPackingSlipJourRecId _packingSlipJour, boolean _update = false)
    {
        VendPackingSlipVersion vendPackingSlipVersion;

        if (_packingSlipJour)
        {
            container cacheKey = [_packingSlipJour];

            if (!_update)
            {
                vendPackingSlipVersion = SysTransactionScopeCache::get(tableStr(VendPackingSlipVersion), cacheKey, vendPackingSlipVersion);
            }

            if (!vendPackingSlipVersion.RecId)
            {
                vendPackingSlipVersion.selectForUpdate(_update);

                select firstonly vendPackingSlipVersion
                order by vendPackingSlipVersion.VersionDateTime desc
                    where vendPackingSlipVersion.VendPackingSlipJour == _packingSlipJour;

                if (vendPackingSlipVersion.RecId)
                {
                    SysTransactionScopeCache::set(tableStr(VendPackingSlipVersion), cacheKey, vendPackingSlipVersion);
                }
            }
        }

        return vendPackingSlipVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrevious</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the previous packing slip version.
    /// </summary>
    /// <param name="_packingSlipJour">
    ///     The packing slip journal to search for.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    ///     The previous packing slip version for packing slip.
    /// </returns>
    public static VendPackingSlipVersion findPrevious(VendPackingSlipJourRecId _packingSlipJour, boolean _forUpdate = false)
    {
        VendPackingSlipVersion vendPackingSlipVersion;

        if (_packingSlipJour)
        {
            vendPackingSlipVersion.selectForUpdate(_forUpdate);

            select firstonly vendPackingSlipVersion
                order by vendPackingSlipVersion.VersionDateTime desc
                where vendPackingSlipVersion.VendPackingSlipJour == _packingSlipJour &&
                      vendPackingSlipVersion.RecId               != VendPackingSlipVersion::findLatest(_packingSlipJour).RecId;
        }

        return vendPackingSlipVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfPackingSlipVersions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number of packing slip versions.
    /// </summary>
    /// <param name="_packingSlipJour">
    /// The packing slip journal for which to retrieve the number of versions.
    /// </param>
    /// <returns>
    /// The number of versions for the packing slip.
    /// </returns>
    static NumberOfRecords numberOfPackingSlipVersions(VendPackingSlipJourRecId _packingSlipJour)
    {
        VendPackingSlipVersion vendPackingSlipVersion;

        if (_packingSlipJour)
        {
            select count (RecId) from vendPackingSlipVersion
                where vendPackingSlipVersion.VendPackingSlipJour == _packingSlipJour;
        }

        return vendPackingSlipVersion.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the <c>VendPackingSlipVersion</c> record.
    /// </summary>
    public void insert()
    {
        SysTransactionScopeCache::remove(tableStr(VendPackingSlipVersion), [this.VendPackingSlipJour]);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>VendPackingSlipVersion</c> record.
    /// </summary>
    public void update()
    {
        SysTransactionScopeCache::remove(tableStr(VendPackingSlipVersion), [this.VendPackingSlipJour]);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>VendPackingSlipVersion</c> record.
    /// </summary>
    public void delete()
    {
        SysTransactionScopeCache::remove(tableStr(VendPackingSlipVersion), [this.VendPackingSlipJour]);
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS318107</DeveloperDocumentation>
	<Label>@SYS318115</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendPackingSlipJour</TitleField1>
	<TitleField2>VersionDateTime</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PackingSlipVersionIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendPackingSlipJour</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendPackingSlipJour</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Data</Name>
			<Label>@SYS7403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Intercompany</Name>
			<Label>@SYS74106</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterCompanyLedgerVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingSlip</Name>
			<Label>@SYS11549</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AccountingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AccountingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostLedgerVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPurchReceiptVoucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InterCompanyLedgerVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyVoucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InternalPackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchInternalPackingSlipId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchDeliveredQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendPackingSlipJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPackingSlipJourRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>VersionDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VersioningTimeStamp</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Volume</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackingSlipVersionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendPackingSlipJour</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VersionDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountingDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountingDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostLedgerVoucher</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerVoucher</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>VersioningVersionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>VersionDateTime</MapField>
					<MapFieldTo>VersionDateTime</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPackingSlipJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendPackingSlipJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendPackingSlipJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendPackingSlipJour_VendPackingSlipJourVersion</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPackingSlipJour</Name>
					<Field>VendPackingSlipJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>