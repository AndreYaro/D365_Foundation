<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXDataDistributionTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCDXDataDistributionTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RetailCDXDataDistributionTable</c> record for the specified table in the specified channel schema.
    /// </summary>
    /// <param name = "_channelSchemaRecId">Channel schema record Id.</param>
    /// <param name = "_refTableId">Reference table Id.</param>
    /// <param name = "_forUpdate">If the find is for update.</param>
    /// <returns>The <c>RetailCDXDataDistributionTable</c> record.</returns>
    internal static RetailCDXDataDistributionTable find(RefRecId _channelSchemaRecId, RefTableId _refTableId, boolean _forUpdate = false)
    {
        RetailCDXDataDistributionTable retailCDXDataDistributionTable;

        retailCDXDataDistributionTable.selectForUpdate(_forUpdate);

        select firstonly retailCDXDataDistributionTable
            where retailCDXDataDistributionTable.RetailConnChannelSchema == _channelSchemaRecId
               && retailCDXDataDistributionTable.RefTableID == _refTableId;

        return retailCDXDataDistributionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useFilteredRecordsTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the flag that indicates if the table filter type requires the use of the FilteredRecordsTempTable (i.e. <c>RetailCDXChangeRefTable2</c> temp table) to filter a subset of the records that would be sent to the target database.
    /// </summary>
    /// <param name = "_tableFilterType">Data distribution table filter type.</param>
    /// <returns>True if the table filter type requires the use of the FilteredRecordsTempTable (i.e. <c>RetailCDXChangeRefTable2</c> temp table); false otherwise.</returns>
    internal static boolean useFilteredRecordsTempTable(RetailCDXDataDistributionTableFilterType _tableFilterType)
    {
        boolean useFilteredRecordsTempTable;

        if (_tableFilterType == RetailCDXDataDistributionTableFilterType::Unset // if the filterType is set to Unset it means the "Initialize retail scheduler" is not executed and hence the table is treated as channel specific table to honor backward compatibility behavior
         || _tableFilterType == RetailCDXDataDistributionTableFilterType::ChannelSpecificFilter
         || _tableFilterType == RetailCDXDataDistributionTableFilterType::JoinBasedFilter)
        {
            useFilteredRecordsTempTable = true;
        }
        else
        {
            useFilteredRecordsTempTable = false;
        }

        return useFilteredRecordsTempTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCacheBasedQueryInitializedForChannelSchema</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the cache based query is initialized for the specified channel schema.
    /// </summary>
    /// <param name = "_channelSchemaRecId">Channel schema record Id.</param>
    /// <returns>True if cache based query is initialized for the specified channel schema; otherwise, false.</returns>
    internal static boolean isCacheBasedQueryInitializedForChannelSchema(RefRecId _channelSchemaRecId)
    {
        RetailCDXDataDistributionTable retailCDXDataDistributionTable;

        select firstonly RecId from retailCDXDataDistributionTable
            where retailCDXDataDistributionTable.RetailConnChannelSchema == _channelSchemaRecId;

        return retailCDXDataDistributionTable.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailCDXDataDistributionTableDevDoc</DeveloperDocumentation>
	<Label>@Retail:RetailCDXDataDistributionTableLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visible>No</Visible>
	<CacheLookup>Found</CacheLookup>
	<Modules>ChannelManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailConnChannelSchema</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<EnumType>RetailCDXDataDistributionTableFilterType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ChannelSchemaRefTableIDTypeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RetailConnChannelSchema</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailConnChannelSchema</Name>
			<RelatedTable>RetailConnChannelSchema</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnChannelSchema</Name>
					<Field>RetailConnChannelSchema</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>