<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTaxCountry</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayTaxCountry extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static RPayTaxCountry find(AddressCountryRegionId   _regionId, boolean _forUpdate = false)
    {
        RPayTaxCountry  taxCountry;

        taxCountry.selectForUpdate(_forUpdate);

        if (_regionId)
        {
            select firstonly taxCountry
                where taxCountry.CountryRegionId == _regionId;
        }

        return taxCountry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCountryResidence</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static void updateCountryResidence(RHRMPersonnelNumberId _personId, ReportPeriod_RU _payPeriod, RPayEmplTaxStatus _taxStatus)
    {
        RPayGroupTable                  groupTable;
        RPayTaxCountry                  taxCountry;
        LogisticsAddressCountryRegionId regionId;

        if (_taxStatus == RPayEmplTaxStatus::Resident)
            return;

        ttsbegin;
        while select taxCountry
            where taxCountry.PayGroup
        {
            RPayGroupMember::deleteMember(taxCountry.PayGroup, _personId);
        }

        regionId   = RHRMPersonTable::find(_personId).citizenshipCountryRegionId();
        taxCountry = RPayTaxCountry::find(regionId, true);

        if (taxCountry)
        {
            if (!taxCountry.PayGroup)
            {
                groupTable = RPayGroupTable::find(taxCountry.CountryRegionId);

                if (!groupTable)
                {
                    groupTable.PayGroup = taxCountry.CountryRegionId;
                    groupTable.Name     = LogisticsAddressCountryRegion::name(regionId);
                    groupTable.insert();
                }

                taxCountry.PayGroup = groupTable.PayGroup;
                taxCountry.update();
            }

            if (!RPayGroupMember::find(taxCountry.PayGroup, _personId))
            {
                RPayGroupMember::addMember(taxCountry.PayGroup, _personId);
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6153</DeveloperDocumentation>
	<Label>@RUP3135</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CountryRegionId</TitleField1>
	<TitleField2>PayGroup</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CountryRegionIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>CountryRegionIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayGroup</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CountryRegionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CountryRegionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayGroup</Name>
					<SourceEDT>RPayGroup</SourceEDT>
					<Field>PayGroup</Field>
					<RelatedField>PayGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IndxPayGroup</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>