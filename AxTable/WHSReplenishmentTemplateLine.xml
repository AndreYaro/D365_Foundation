<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReplenishmentTemplateLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSReplenishmentTemplateLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromWHSReplenishmentTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes record from <c>WHSReplenishmentTemplate</c> record.
    /// </summary>
    /// <param name="_whsReplenishmentTemplate">
    /// The record to be used to initialize.
    /// </param>
    void initFromWHSReplenishmentTemplate(WHSReplenishmentTemplate _whsReplenishmentTemplate)
    {
        this.ReplenishTemplateId = _whsReplenishmentTemplate.ReplenishTemplateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initItemQuery</Name>
				<Source><![CDATA[
    public container initItemQuery()
    {
        QueryRun    queryRun;

        if (this.ReplenFixedOnly)
        {
            queryRun = new QueryRun(queryStr(WHSInventTableFixedLoc));
            queryRun.name("@WAX:ProductQueryFixedLocations");
        }
        else
        {
            queryRun = new QueryRun(queryStr(WHSInventTable));
            queryRun.name("@SYP4980032");
        }

        queryRun.saveUserSetup(false);

        return queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLocationQuery</Name>
				<Source><![CDATA[
    internal container initLocationQuery()
    {
        return this.defaultLocationQueryRun().pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLocationQueryRun</Name>
				<Source><![CDATA[
    internal QueryRun defaultLocationQueryRun()
    {
        return new QueryRun(queryStr(WHSWMSLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProductVariantQuery</Name>
				<Source><![CDATA[
    public container initProductVariantQuery()
    {
        QueryRun    queryRun;

        if (this.ReplenFixedOnly)
        {
            queryRun = new QueryRun(queryStr(WHSReleasedProductVariantsFixedLoc));
            queryRun.name("@WAX:ProductVariantQueryFixedLocations");
        }
        else
        {
            queryRun = new QueryRun(queryStr(WHSReleasedProductVariants));
            queryRun.name("@SYP4980030");
        }

        queryRun.saveUserSetup(false);

        return queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initZoneQuery</Name>
				<Source><![CDATA[
    internal void initZoneQuery()
    {
        if (this.ReplenishmentThresholdScope == WHSReplenishmentThresholdScope::Zone
            && !this.ZoneQuery)
        {
            this.ZoneQuery = new QueryRun(queryStr(wHSZoneQuery)).pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.ItemQuery)
        {
            this.ItemQuery = this.initItemQuery();
        }

        if (!this.LocationQuery)
        {
            this.LocationQuery = this.initLocationQuery();
        }

        if (!this.ProductVariantQuery)
        {
            this.ProductVariantQuery = this.initProductVariantQuery();
        }
  
        this.initZoneQuery();

        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(WHSReplenishmentTemplateLine, ItemQuery),
                [fieldnum(WHSReplenishmentTemplateLine, ReplenFixedOnly)]],
            [fieldnum(WHSReplenishmentTemplateLine, ProductVariantQuery),
                [fieldnum(WHSReplenishmentTemplateLine, ReplenFixedOnly)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(WHSReplenishmentTemplateLine, ItemQuery):
                this.defaultItemQuery();
                break;
            case fieldnum(WHSReplenishmentTemplateLine, ProductVariantQuery):
                this.defaultProductVariantQuery();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemQuery</Name>
				<Source><![CDATA[
    private void defaultItemQuery()
    {
        if (this.ProductQueryMode == WHSProductQueryMode::Item)
        {
            this.ItemQuery = this.createItemQuery();
        }
        else if (this.ProductQueryMode == WHSProductQueryMode::Variant)
        {
            this.ItemQuery = conNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductVariantQuery</Name>
				<Source><![CDATA[
    private void defaultProductVariantQuery()
    {
        if (this.ProductQueryMode == WHSProductQueryMode::Item)
        {
            this.ProductVariantQuery = conNull();
        }
        else if (this.ProductQueryMode == WHSProductQueryMode::Variant)
        {
            this.ProductVariantQuery = this.createProductVariantQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createItemQuery</Name>
				<Source><![CDATA[
    private container createItemQuery()
    {
        container itemQuery = this.initItemQuery();

        if (this.orig().ReplenFixedOnly != this.ReplenFixedOnly
           && this.ItemQuery != conNull()
           && Box::YesNo(strFmt("@WAX:WAXCopyProdCriteria"), DialogButton::No) == DialogButton::Yes)
        {
            Query    oldQuery    = new QueryRun(this.ItemQuery).query();
            QueryRun newQueryRun = new QueryRun(itemQuery);

            this.mergeRangesAndFilters(oldQuery, newQueryRun.query());
            
            newQueryRun.saveUserSetup(false);

            return newQueryRun.pack();
        }
        else
        {
            return itemQuery;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProductVariantQuery</Name>
				<Source><![CDATA[
    private container createProductVariantQuery()
    {
        container prodVarQuery = this.initProductVariantQuery();

        if (this.orig().ReplenFixedOnly != this.ReplenFixedOnly
           && this.ProductVariantQuery != conNull()
           && Box::YesNo(strFmt("@WAX:WAXCopyProdCriteria"), DialogButton::No) == DialogButton::Yes)
        {
            Query    oldQuery = new QueryRun(this.ProductVariantQuery).query();
            QueryRun newQueryRun = new QueryRun(prodVarQuery);

            this.mergeRangesAndFilters(oldQuery, newQueryRun.query());

            newQueryRun.saveUserSetup(false);

            return newQueryRun.pack();
        }
        else
        {
            return prodVarQuery;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeRangesAndFilters</Name>
				<Source><![CDATA[
    private void mergeRangesAndFilters(Query _oldQuery, Query _newQuery)
    {
        for (int i = 1; i <= _oldQuery.dataSourceCount(); i++)
        {
            QueryBuildDataSource fromDS = _oldQuery.dataSourceNo(i);
            QueryBuildDataSource toDS = _newQuery.dataSourceTable(fromDS.table());

            if (toDS && _oldQuery.hasRangeOrFilter(fromDS))
            {
                SysQuery::mergeRanges(_newQuery, _oldQuery, i);
                SysQuery::mergeFilters(_oldQuery, _newQuery, i);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case (fieldNum(WHSReplenishmentTemplateLine, MaxQty)):
                if (this.MaxQty < 0)
                {
                    ret = checkFailed(strFmt("@WAX4605", fieldId2PName(tableNum(WHSReplenishmentTemplateLine), _fieldIdToCheck)));
                }
                break;

            case (fieldNum(WHSReplenishmentTemplateLine, MinQty)):
                if (this.MinQty < 0)
                {
                    ret = checkFailed(strFmt("@WAX4605", fieldId2PName(tableNum(WHSReplenishmentTemplateLine), _fieldIdToCheck)));
                }
                break;

            case (fieldNum(WHSReplenishmentTemplateLine, SeqNum)):
                if (this.SeqNum < 0)
                {
                    ret = checkFailed(strFmt("@WAX4605", fieldId2PName(tableNum(WHSReplenishmentTemplateLine), _fieldIdToCheck)));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.MinQty > this.MaxQty)
        {
            ret = checkFailed(strFmt("@WAX5603",
                fieldId2PName(tableNum(WHSReplenishmentTemplateLine), fieldNum(WHSReplenishmentTemplateLine, MinQty)),
                fieldId2PName(tableNum(WHSReplenishmentTemplateLine), fieldNum(WHSReplenishmentTemplateLine, MaxQty))));
        }
  
        if (this.ReplenishmentThresholdScope == WHSReplenishmentThresholdScope::Zone)
        {
            ret = this.validateWarehouseGroupAll();

            if (this.ProductQueryMode == WHSProductQueryMode::Variant)
            {
                ret = checkFailed("@WAX:Error_ZoneReplenishmentDoesNotSupportProductVariants");
            }
            if (this.ReplenFixedOnly)
            {
                ret = checkFailed(strFmt("@WAX:Error_ZoneReplenishmentDoesNotSupportReplenFixedOnly",
                    fieldId2PName(tableNum(WHSReplenishmentTemplateLine), fieldNum(WHSReplenishmentTemplateLine, ReplenFixedOnly)),
                    fieldId2PName(tableNum(WHSReplenishmentTemplateLine), fieldNum(WHSReplenishmentTemplateLine, ReplenishmentThresholdScope)),
                    enum2Str(WHSReplenishmentThresholdScope::WMSLocation)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupAll()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Warehouse:
                if (!this.InventLocationId)
                {
                    return checkFailed("@WAX:ReplenishmentTemplateLineMissingWarehouse");
                }
                break;

            case WhsWarehouseGroupAll::Group:
                if (!this.WarehouseGroupId)
                {
                    return checkFailed("@WAX:ReplenishmentTemplateLineMissingWarehouseGroup");
                }
                break;

            case WhsWarehouseGroupAll::All:
                return checkFailed("@WAX:ReplenishmentTemplateLineWarehouseSelectionAllIsNotSupported");
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>WHSReplenishmentTemplateLine</c> record exists.
    /// </summary>
    /// <param name="_whsReplenishTemplateId">
    /// Template id of the record.
    /// </param>
    /// <param name="_whsSeqNum">
    /// Sequence number of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(WHSReplenishTemplateId _whsReplenishTemplateId,
                                WHSSeqNum              _whsSeqNum)
    {
        return (_whsReplenishTemplateId && _whsSeqNum) &&
               (select firstonly WHSReplenishmentTemplateLine
                where whsReplenishmentTemplateLine.ReplenishTemplateId == _whsReplenishTemplateId &&
                      whsReplenishmentTemplateLine.SeqNum ==              _whsSeqNum).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>WHSReplenishmentTemplateLine</c> record with given parameters.
    /// </summary>
    /// <param name="_whsReplenishTemplateId">
    /// Template id of the record.
    /// </param>
    /// <param name="_whsSeqNum">
    /// Sequence number of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSReplenishmentTemplateLine find(WHSReplenishTemplateId _whsReplenishTemplateId,
                                                    WHSSeqNum              _whsSeqNum,
                                                    boolean                _forupdate = false)
    {
        WHSReplenishmentTemplateLine    whsReplenishmentTemplateLine;

        if (_whsReplenishTemplateId &&
            _whsSeqNum)
        {
            whsReplenishmentTemplateLine.selectForUpdate(_forupdate);

            select firstonly whsReplenishmentTemplateLine
                where whsReplenishmentTemplateLine.ReplenishTemplateId == _whsReplenishTemplateId &&
                      whsReplenishmentTemplateLine.SeqNum ==              _whsSeqNum;
        }

        return whsReplenishmentTemplateLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>WHSReplenishmentTemplateLine</c> record by id.
    /// </summary>
    /// <param name="_refRecId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSReplenishmentTemplateLine findByRecId(RefRecId     _refRecId,
                                                           boolean      _forupdate = false)
    {
        WHSReplenishmentTemplateLine    whsReplenishmentTemplateLine;

        if (_refRecId)
        {
            whsReplenishmentTemplateLine.selectForUpdate(_forupdate);

            select firstonly whsReplenishmentTemplateLine
                where whsReplenishmentTemplateLine.RecId == _refRecId;
        }

        return whsReplenishmentTemplateLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWHSWorkTemplateCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a drop down for the Work Template Code field for forms.
    /// </summary>
    /// <param name="_ctrl">
    /// The form control that references the Work Template Code field.
    /// </param>
    /// <param name="_transType">
    /// The Work type that will act as a range for the drop down query.
    /// </param>
    public static void lookupWHSWorkTemplateCode(FormStringControl _ctrl, WHSWorkTransType _transType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup          = SysTableLookup::newParameters(tablenum(WHSWorkTemplateTable), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tablenum(WHSWorkTemplateTable));

        sysTableLookup.addLookupfield(fieldnum(WHSWorkTemplateTable, WorkTemplateCode));
        sysTableLookup.addLookupfield(fieldnum(WHSWorkTemplateTable, WorkTemplateDesc));
        queryBuildDataSource.addRange(fieldnum(WHSWorkTemplateTable, WorkTransType)).value(queryValue(_transType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdsToEnableDisableForReplenishmentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a map that contains IDs of the fields that need to be enabled/disabled basded on the specified replenishment type.
    /// </summary>
    /// <param name = "_replenishmentType">The replenishment type.</param>
    /// <returns>A map that contains IDs of the fields as the keys and bolean values that define whether the field is enabled as the values.</returns>
    public static Map fieldIdsToEnableDisableForReplenishmentType(WHSReplenishmentType _replenishmentType)
    {
        SysDictFieldGroup fieldGroupMinMax     = new SysDictFieldGroup(tablenum(WHSReplenishmentTemplateLine), tablefieldgroupstr(WHSReplenishmentTemplateLine, MinMax));
        SysDictFieldGroup fieldGroupLoadDemand = new SysDictFieldGroup(tablenum(WHSReplenishmentTemplateLine), tablefieldgroupstr(WHSReplenishmentTemplateLine, LoadDemand));
        SysDictFieldGroup fieldGroupWaveDemand = new SysDictFieldGroup(tablenum(WHSReplenishmentTemplateLine), tablefieldgroupstr(WHSReplenishmentTemplateLine, WaveDemand));
        SysDictFieldGroup fieldGroupReplenishmentThresholdScope = new SysDictFieldGroup(tableNum(WHSReplenishmentTemplateLine), tableFieldGroupStr(WHSReplenishmentTemplateLine, ReplenishmentThresholdScope));

        Map result = new Map(Types::Integer, Types::Enum);

        WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupMinMax, false, result);
        WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupLoadDemand, false, result);
        WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupWaveDemand, false, result);
        WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupReplenishmentThresholdScope, false, result);

        switch (_replenishmentType)
        {
            case WHSReplenishmentType::MinMax:
                WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupMinMax, true, result);
                WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupReplenishmentThresholdScope, true, result);
                break;

            case WHSReplenishmentType::LoadDemand:
                WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupLoadDemand, true, result);
                break;

            case WHSReplenishmentType::WaveDemand:
                WHSReplenishmentTemplateLine::insertEnabledDisabledFieldsIntoMap(fieldGroupWaveDemand, true, result);
                break;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLocationQueryEnabledForReplenishmentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the location query is enabled for the specified replenishment type.
    /// </summary>
    /// <param name = "_replenishmentType">The replenishment type.</param>
    /// <returns>true if the location query should be enabled; otherwise, false.</returns>
    public static boolean isLocationQueryEnabledForReplenishmentType(WHSReplenishmentType _replenishmentType)
    {
        return _replenishmentType != WHSReplenishmentType::WaveDemand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEnabledDisabledFieldsIntoMap</Name>
				<Source><![CDATA[
    private static void insertEnabledDisabledFieldsIntoMap(SysDictFieldGroup _fieldGroup, boolean _enabled, Map _fieldsEnabledDisabledMap)
    {
        for (int fieldNumber = 1; fieldNumber <= _fieldGroup.numberOfFields(); fieldNumber++)
        {
            _fieldsEnabledDisabledMap.insert(_fieldGroup.field(fieldNumber), _enabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.ProductQueryMode == WHSProductQueryMode::Variant && this.ProductVariantQuery == conNull())
        {
            this.ProductVariantQuery = this.initProductVariantQuery();
        }
  
        this.initZoneQuery();

        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductSelectionFound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find if the Product query or Product variant query for the specified Replenishment template line have records for the specified Item number and Inventory dimension number.
    /// </summary>
    /// <param name="_replenishmentTemplateLineRecId">
    /// Replenishment template line RecId.
    /// </param>
    /// <param name="_itemId">
    /// Item number for which the queries are checked.
    /// </param>
    /// <param name="_inventDimId">
    /// Inventory dimension number for which the queries are checked; optional.
    /// </param>
    /// <returns>
    /// Returns true if the record is found in the queries; otherwise false.
    /// </returns>
    public static boolean isProductSelectionFound(
                                        RefRecId      _replenishmentTemplateLineRecId,
                                        ItemId        _itemId,
                                        InventDimId   _inventDimId = '')
    {
        WHSReplenishmentTemplateLine        replenishmentTemplateLine;
        QueryRun                            itemQuery;
        QueryRun                            productVariantQuery;
        InventDimCombination                inventDimCombination;
        boolean                             recordFound;

        if (_replenishmentTemplateLineRecId && _itemId)
        {
            select firstonly ProductQueryMode, ItemQuery, ProductVariantQuery from replenishmentTemplateLine
                where replenishmentTemplateLine.RecId == _replenishmentTemplateLineRecId;

            if (replenishmentTemplateLine.ProductQueryMode == WHSProductQueryMode::Item)
            {
                itemQuery = new QueryRun(replenishmentTemplateLine.ItemQuery);
                itemQuery.query().dataSourceTable(tableNum(InventTable)).addRange(fieldNum(InventTable, ItemId)).value(_itemId);

                if (itemQuery.next())
                {
                    recordFound = true;
                }
            }
            else if (replenishmentTemplateLine.ProductQueryMode == WHSProductQueryMode::Variant)
            {
                if (_inventDimId)
                {
                    inventDimCombination = inventDimCombination::findByInventDim(_itemId, InventDim::find(_inventDimId));

                    if (inventDimCombination)
                    {
                        productVariantQuery = new QueryRun(replenishmentTemplateLine.ProductVariantQuery);
                        productVariantQuery.query().dataSourceTable(tableNum(EcoResDistinctProductVariant)).addRange(fieldNum(EcoResDistinctProductVariant, RecId)).value(queryValue(inventDimCombination.DistinctProductVariant));

                        if (productVariantQuery.next())
                        {
                            recordFound = true;
                        }
                    }
                }
            }
        }

        return recordFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform any necessary initialization or validation when the given field is modified.
    /// </summary>
    /// <param name = "_fieldId">
    /// The field which was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSReplenishmentTemplateLine, ReplenishmentThresholdScope):
            case fieldNum(WHSReplenishmentTemplateLine, WarehouseGroupAll):
                this.setWarehouseSelection();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelection</Name>
				<Source><![CDATA[
    private void setWarehouseSelection()
    {
        switch (this.ReplenishmentThresholdScope)
        {
            case WHSReplenishmentThresholdScope::WMSLocation:
                this.setWarehouseSelectionForScopeLocation();
                break;
            case WHSReplenishmentThresholdScope::Zone:
                this.setWarehouseSelectionForScopeZone();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelectionForScopeZone</Name>
				<Source><![CDATA[
    private void setWarehouseSelectionForScopeZone()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Warehouse:
                this.WarehouseGroupId = '';
                break;
            case WhsWarehouseGroupAll::Group:
                this.InventLocationId = '';
                break;
            case WhsWarehouseGroupAll::All:
                throw Error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelectionForScopeLocation</Name>
				<Source><![CDATA[
    private void setWarehouseSelectionForScopeLocation()
    {
        this.InventLocationId = '';
        this.WarehouseGroupId = '';
        this.WarehouseGroupAll = WhsWarehouseGroupAll::Warehouse;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4430</DeveloperDocumentation>
	<FormRef>whsreplenishmenttemplates</FormRef>
	<Label>@WAX1908</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ReplenishTemplateId</TitleField1>
	<TitleField2>SeqNum</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ReplenishmentTemplateLineIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ReplenishmentTemplateLineIdx</PrimaryIndex>
	<ReplacementKey>ReplenishmentTemplateLineIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandIncrement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EvalEmptyFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVariantQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenFixedOnly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocDirHintCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicableDemand</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductQueryMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandIncrement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EvalEmptyFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVariantQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenFixedOnly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocDirHintCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicableDemand</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductQueryMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentThresholdScope</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZoneQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS35893</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocDirHintCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MinMax</Name>
			<Label>@WAX3974</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandIncrement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EvalEmptyFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenFixedOnly</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LoadDemand</Name>
			<Label>@WAX4209</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApplicableDemand</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WaveDemand</Name>
			<Label>@WAX3975</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentStrategy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReplenishmentThresholdScope</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentThresholdScope</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WarehouseGroupAll</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplicableDemand</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSApplicableDemand</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DemandIncrement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSDemandIncrement</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EvalEmptyFixed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEvalEmptyFixed</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ItemQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSItemQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>LocationQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocationQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LocDirHintCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocDirHintCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QtyUOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSQtyUOM</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenFixedOnly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReplenFixedOnly</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishmentUOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReplenishmentUOM</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReplenishTemplateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RequestTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRequestTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSeqNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkTemplateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProductQueryMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSProductQueryMode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ProductVariantQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSProductVariantQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentStrategy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReplenishmentStrategyType</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSReplenishmentStrategy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentThresholdScope</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSReplenishmentThresholdScope</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ZoneQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSZoneQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WarehouseGroupAll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsWarehouseGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarehouseGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReplenishmentTemplateLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplenishTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ReplenishmentUOM</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReplenishmentUOM</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentUOM</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplenishmentUOM</Name>
					<Field>ReplenishmentUOM</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QtyUOM</Name>
					<Field>QtyUOM</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocDirHint</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSLocDirHint</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LocDirHintCode</Name>
					<SourceEDT>WHSLocDirHintCode</SourceEDT>
					<Field>LocDirHintCode</Field>
					<RelatedField>LocDirHintCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSReplenishmentTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSReplenishmentTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplenishTemplateId</Name>
					<SourceEDT>WHSReplenishTemplateId</SourceEDT>
					<Field>ReplenishTemplateId</Field>
					<RelatedField>ReplenishTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSRequestType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSRequestType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RequestTypeId</Name>
					<SourceEDT>WHSRequestTypeId</SourceEDT>
					<Field>RequestTypeId</Field>
					<RelatedField>RequestTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkTemplateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWorkTemplateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTemplateCode</Name>
					<Field>WorkTemplateCode</Field>
					<RelatedField>WorkTemplateCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>WorkTransType</Name>
					<RelatedField>WorkTransType</RelatedField>
					<ValueStr>WHSWorkTransType::Replenishment</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Warehouse</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WhsWarehouseGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WhsWarehouseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarehouseGroupId</Name>
					<Field>WarehouseGroupId</Field>
					<RelatedField>WarehouseGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>