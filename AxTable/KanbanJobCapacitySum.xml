<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobCapacitySum</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanJobCapacitySum extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>KanbanJobCapacitySum</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>KanbanJobCapacitySum</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        return _recId &&
               (select firstonly RecId from kanbanJobCapacitySum
                    where kanbanJobCapacitySum.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobCapacitySum</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>kanbanJobCapacitySum</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobCapacitySum</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanJobCapacitySum find(
        recId _recId,
        boolean _forUpdate = false)
    {
        KanbanJobCapacitySum    kanbanJobCapacitySum;

        if (_recId)
        {
            kanbanJobCapacitySum.selectForUpdate(_forUpdate);

            select firstonly kanbanJobCapacitySum
                where kanbanJobCapacitySum.RecId == _recId;
        }

        return kanbanJobCapacitySum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobCapacitySum</c> table.
    /// </summary>
    /// <param name="_kanbanJobRecId">
    ///    The kanban job record ID of the <c>kanbanJobCapacitySum</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobCapacitySum</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanJobCapacitySum findJob(
        RefRecId _kanbanJobRecId,
        boolean _forUpdate = false)
    {
        KanbanJobCapacitySum    kanbanJobCapacitySum;

        if (_kanbanJobRecId)
        {
            kanbanJobCapacitySum.selectForUpdate(_forUpdate);

            select firstonly kanbanJobCapacitySum
                where kanbanJobCapacitySum.Job == _kanbanJobRecId;
        }

        return kanbanJobCapacitySum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeCapacityConsumption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the <c>KanbanJobCapacitySum</c> record for the specified <c>KanbanJob</c> record ID.
    /// </summary>
    /// <param name="_kanbanJobRecId">
    ///    The record ID to remove.
    /// </param>
    public static void removeCapacityConsumption(RefRecId _kanbanJobRecId)
    {
        KanbanJobCapacitySum    kanbanJobCapacitySum;

        ttsbegin;
        delete_from kanbanJobCapacitySum
            where kanbanJobCapacitySum.Job == _kanbanJobRecId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPlannedCapacitySeconds</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the planned capacity consumption of the specified <c>KanbanJob</c> in seconds.
    /// </summary>
    /// <param name="_kanbanJobRecId">
    ///    The record ID of the <c>KanbanJob</c> record for which to set the planned capacity consumption.
    /// </param>
    /// <param name="_seconds">
    ///    The planned capacity consumption in seconds.
    /// </param>
    /// <param name="_write">
    ///    A Boolean value that defines if the record must be written to tohe database; optional.
    /// </param>
    /// <returns>
    ///    The inserted or updated <c>KanbanJobCapacitySum</c> record.
    /// </returns>
    /// <remarks>
    ///    Any existing <c>KanbanJobCapacitySum</c> record for the specified job record will be overwritten.
    /// </remarks>
    public static KanbanJobCapacitySum setPlannedCapacitySeconds(
        RefRecId  _kanbanJobRecId,
        Seconds   _seconds,
        boolean   _write = true)
    {
        KanbanJobCapacitySum    kanbanJobCapacitySum;

        ttsbegin;
        kanbanJobCapacitySum = KanbanJobCapacitySum::findJob(_kanbanJobRecId,_write);

        kanbanJobCapacitySum.Job                                     = _kanbanJobRecId;
        kanbanJobCapacitySum.PlannedCapacitySumSeconds               = _seconds;
        kanbanJobCapacitySum.PlannedCapacitySumThroughput            = 0;
        kanbanJobCapacitySum.PlannedCapacityThroughputUnit           = 0;
        if (_write)
        {
            kanbanJobCapacitySum.write();
        }
        ttscommit;

        return kanbanJobCapacitySum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPlannedCapacityThroughput</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the planned capacity consumption of a specified <c>KanbanJob</c> table in throughput quantity.
    /// </summary>
    /// <param name="_kanbanJobRecId">
    ///    The record ID of the <c>KanbanJob</c> record for which to set the planned capacity consumption.
    /// </param>
    /// <param name="_inventQty">
    ///    The planned capacity consumption quantity.
    /// </param>
    /// <param name="_unitOfMeasure">
    ///    The unit in which the planned capacity consumption is stated.
    /// </param>
    /// <param name="_seconds">
    ///    The number of capacity seconds consumed by the job.
    /// </param>
    /// <param name="_write">
    ///    A Boolean value that defines if the record must be written to tohe database; optional.
    /// </param>
    /// <returns>
    ///    The inserted or updated <c>KanbanJobCapacitySum</c> record.
    /// </returns>
    /// <remarks>
    ///    Any existing <c>KanbanJobCapacitySum</c> tables for the specified job record will be overwritten.
    /// </remarks>
    public static KanbanJobCapacitySum setPlannedCapacityThroughput(
        RefRecId   _kanbanJobRecId,
        InventQty  _inventQty,
        RefRecId   _unitOfMeasure,
        Seconds    _seconds,
        boolean    _write = true)
    {
        KanbanJobCapacitySum    kanbanJobCapacitySum;

        ttsbegin;
        kanbanJobCapacitySum = KanbanJobCapacitySum::findJob(_kanbanJobRecId,_write);

        kanbanJobCapacitySum.Job                                     = _kanbanJobRecId;
        kanbanJobCapacitySum.PlannedCapacitySumSeconds               = _seconds;
        kanbanJobCapacitySum.PlannedCapacitySumThroughput            = _inventQty;
        kanbanJobCapacitySum.PlannedCapacityThroughputUnit           = _unitOfMeasure;
        if (_write)
        {
            kanbanJobCapacitySum.write();
        }
        ttscommit;

        return kanbanJobCapacitySum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS325874</DeveloperDocumentation>
	<Label>@SYS301787</Label>
	<SingularLabel>@SYS301787</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Job</TitleField1>
	<TitleField2>PlannedCapacitySumSeconds</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>KanbanJobIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumThroughput</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumSeconds</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CapacitySeconds</Name>
			<Label>@SYS301795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumSeconds</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CapacityThroughput</Name>
			<Label>@SYS301796</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumThroughput</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Job</Name>
			<Label>@SYS131642</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PlannedCapacitySumSeconds</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Seconds</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PlannedCapacitySumThroughput</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlannedCapacityThroughputUnit</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KanbanJobIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanJob</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanJob</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CapacitySum</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJobCapacitySum</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlannedCapacityThroughputUnit</Name>
					<Field>PlannedCapacityThroughputUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>