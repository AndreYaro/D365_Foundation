<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatExternalCatalogVendor</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatExternalCatalogVendor extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>VendTable</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>VendTable</c> record.
    /// </returns>
    public VendTable vendTable()
    {
        return VendTable::findByDataAreaId(this.VendorAccountNumber, this.VendorDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>CatExternalCatalogVendor</c> table.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    ///    The account number of the record to find.
    /// </param>
    /// <param name="_vendorDataAreaId">
    ///    The company name of the record to find.
    /// </param>
    /// <param name="_externalCatalog">
    ///    The record ID of a record in the <c>CatExternalCatalog</c> table.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(
        VendAccount _vendorAccountNumber,
        DataAreaId
        _vendorDataAreaId,
        RefRecId _externalCatalog)
    {
        if (!CatExternalCatalogVendor::exist(_vendorAccountNumber, _vendorDataAreaId, _externalCatalog))
        {
            return checkFailed(strfmt("@SYS102208", _vendorAccountNumber, _externalCatalog));
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a specified record is located in the <c>CatExternalCatalogVendor</c> table.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    /// The account number of the record to find.
    /// </param>
    /// <param name="_vendorDataAreaId">
    /// The company name of the record to find.
    /// </param>
    /// <param name="_externalCatalog">
    /// The record ID of a record in the <c>CatExternalCatalog</c> table.
    /// </param>
    /// <returns>
    /// true if the specified record is located in the <c>CatExternalCatalogVendor</c> table; otherwise,
    /// false.
    /// </returns>

    public static boolean exist(
        VendAccount _vendorAccountNumber,
        DataAreaId
        _vendorDataAreaId,
        RefRecId _externalCatalog)
    {
        return (CatExternalCatalogVendor::find(_vendorAccountNumber, _vendorDataAreaId, _externalCatalog).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>CatExternalCatalogVendor</c> table.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    /// The account number of the record to find.
    /// </param>
    /// <param name="_vendorDataAreaId">
    /// The company name of the record to find.
    /// </param>
    /// <param name="_externalCatalog">
    /// The record ID of a record that is located in the <c>CatExternalCatalog</c> table.
    /// </param>
    /// <returns>
    /// A record that is located in the <c>CatExternalCatalogVendor</c> table; otherwise, an empty record.
    /// </returns>
    public static CatExternalCatalogVendor find(
        VendAccount _vendorAccountNumber,
        DataAreaId _vendorDataAreaId,
        RefRecId _externalCatalog)
    {
        CatExternalCatalogVendor catExternalCatalogVendor;

        if (_vendorAccountNumber && _externalCatalog)
        {
            select firstonly catExternalCatalogVendor
                index hint CatalogVendorIdx
                where catExternalCatalogVendor.ExternalCatalog == _externalCatalog
                    && catExternalCatalogVendor.VendorAccountNumber == _vendorAccountNumber
                    && catExternalCatalogVendor.VendorDataAreaId == _vendorDataAreaId;
        }
        return catExternalCatalogVendor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCatalogVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a <c>CatExternalCatalogVendor</c> record from the table.
    /// </summary>
    /// <param name = "_vendorAccountNumber">The <c>VendAccount</c> number of the <c>CatExternalCatalogVendor</c> to be deleted.</param>
    /// <param name = "_vendorDataAreaId">The <c>DataAreaId</c> of the <c>CatExternalCatalogVendor</c> to be deleted.</param>
    /// <param name = "_externalCatalog">>The <c>RefRecId</c> of the associated <c>CatExternalCatalog.</c></param>
    public static void deleteCatalogVendor(
        VendAccount _vendorAccountNumber,
        DataAreaId _vendorDataAreaId,
        RefRecId _externalCatalog)
    {
        CatExternalCatalogVendor catalogVendor;
        // NOTE: deleting CatExternalCatalogVendor will cascade to catExternalCatalogCategories (which will cascade to catExternalHostedProduct)
        delete_from catalogVendor
                        where catalogVendor.ExternalCatalog == _externalCatalog
                            && catalogVendor.VendorAccountNumber == _vendorAccountNumber
                            && catalogVendor.VendorDataAreaId == _vendorDataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertVendCatalogIfNotFound</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the vendor instance on a legal entity from the external catalog in <c>CatExternalCatalogVendor</c> table.
    /// </summary>
    /// <param name="_vendorAccountNumber">
    ///     The account number of the vendor to update this record to.
    /// </param>
    /// <param name="_vendorDataAreaId">
    ///    The data area of the vendor to update this record to.
    /// </param>
    /// <param name="_catExternalCatalogRecId">
    ///    The record ID of the <c>CatExternalCatalog</c> record.
    /// </param>
    public static void insertVendCatalogIfNotFound(VendAccount _vendorAccountNumber, LegalEntityDataAreaId _vendorDataAreaId, CatExternalCatalogRecId _catExternalCatalogRecId)
    {
        if (!_catExternalCatalogRecId || !_vendorAccountNumber || !_vendorDataAreaId)
        {
            throw error("@SYS104799");
        }
        
        if (!CatExternalCatalogVendor::find(_vendorAccountNumber, _vendorDataAreaId, _catExternalCatalogRecId))
        {
            ttsbegin;
            CatExternalCatalogVendor  catExternalCatalogVendor;
            catExternalCatalogVendor.ExternalCatalog = _catExternalCatalogRecId;
            catExternalCatalogVendor.VendorAccountNumber = _vendorAccountNumber;
            catExternalCatalogVendor.VendorDataAreaId = _vendorDataAreaId;
            catExternalCatalogVendor.insert();
            ttscommit;
        }        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS317879</DeveloperDocumentation>
	<Label>@SYS131263</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ExternalCatalog</TitleField1>
	<TitleField2>VendorAccountNumber</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CatalogVendorIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExternalCatalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExternalCatalog</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendExternalCatalog</Name>
			<Label>@SYS131263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExternalCatalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExternalCatalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorAccountNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatalogVendorIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExternalCatalog</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CatExternalCatalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatExternalCatalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatExternalCatalog</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CatExternalCatalog_CatExternalCatalogVendor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExternalCatalog</Name>
					<Field>ExternalCatalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataAreaId</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>VendorDataAreaId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_CatExternalCatalogVendor</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataAreaId</Name>
					<Field>VendorDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorAccountNumber</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendorAccountNumber</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>