<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxAuthorityAddress</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxAuthorityAddress extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>okatoSet_RU</Name>
				<Source><![CDATA[
    public Set okatoSet_RU()
    {
        OKATO_RU                okato       = VendTable::find(this.AccountNum).partyOKATOasOfDate_RU();
        Set                     okatoSet    = new Set(Types::String);
        TaxAuthorityOKATO_RU    taxAuthorityOKATO;

        if (okato)
        {
            okatoSet.add(okato);
        }

        while select okato from taxAuthorityOKATO
            where taxAuthorityOKATO.TaxAuthority == this.TaxAuthority
        {
            okatoSet.add(taxAuthorityOKATO.okato);
        }

        return okatoSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundOffTaxAmount</Name>
				<Source><![CDATA[
    TaxAmount roundOffTaxAmount(TaxAmount _taxAmount)
    {
        TaxAmount   roundedOffAmount;
        ;

        switch (this.RoundOffType)
        {
            case TaxRepRoundOffType::Ordinary :
                if (this.RoundOff)
                {
                    roundedOffAmount = round(_taxAmount, this.RoundOff);
                }
                else
                {
                    roundedOffAmount = round(_taxAmount,0.01);
                }
                break;

            case TaxRepRoundOffType::RoundDown:
                if (this.RoundOff)
                {
                    if (_taxAmount >= 0)
                    {
                        roundedOffAmount = round(_taxAmount - this.RoundOff / 2, this.RoundOff);
                    }
                    else
                    {
                        roundedOffAmount = round(_taxAmount + this.RoundOff / 2, this.RoundOff);
                    }
                }
                else
                {
                    roundedOffAmount = trunc(_taxAmount);
                }
                break;

            case TaxRepRoundOffType::RoundUp  :
                if (_taxAmount >= 0)
                {
                    roundedOffAmount = roundUp(_taxAmount, this.RoundOff ? this.RoundOff : 1.00);
                }
                else
                {
                    roundedOffAmount = roundDown(_taxAmount, this.RoundOff ? this.RoundOff : 1.00);
                }
                break;
            case TaxRepRoundOffType::Advantage:
                // Only used by tax settlement
                // When _taxAmount is positive, for a debit balance, RoundUp(_taxAmount) should be received, for example, 49.1 round to 50
                // When _taxAmount is negative, for a credit balance, RoundUp(_taxAmount) = -RoundDown(-taxAmount) should be paid to tax authority, for example, -49.1 round to -49
                roundedOffAmount = roundUp(_taxAmount, this.RoundOff ? this.RoundOff : 1.00);
                break;
        }

        return roundedOffAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        ;

        ret = super(_fieldIdToCheck);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes the current record to the database.
    /// </summary>

    #ISOCountryRegionCodes
    public void write()
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) &&
            this.Location != this.orig().Location)
        {
            this.GniCode_RU = LogisticsPostalAddressMap::getGNICode_RU(this.Location);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>address</Name>
				<Source><![CDATA[
    static Addressing  address(TaxAuthority  _taxAuthority)
    {
        TaxAuthorityAddress taxAuthorityAddress;
        ;
        taxAuthorityAddress= TaxAuthorityAddress::find(_taxAuthority);
        if (taxAuthorityAddress.AccountNum)
        {
            return VendTable::find(taxAuthorityAddress.AccountNum).postalAddress().Address;
        }
        else
            return LogisticsLocationEntity::location2PostalAddress(taxAuthorityAddress.Location).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(TaxAuthority  _taxAuthority)
    {
        if (_taxAuthority  && !TaxAuthorityAddress::exist(_taxAuthority))
            return checkFailed(strFmt(TaxAuthorityAddress::txtNotExist(),_taxAuthority));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(TaxAuthority  _taxAuthority)
    {
        if (_taxAuthority)
        {
            return (select firstonly taxAuthorityAddress
                        where taxAuthorityAddress.TaxAuthority== _taxAuthority
                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static TaxAuthorityAddress find(TaxAuthority  _taxAuthority)
    {
        TaxAuthorityAddress taxAuthorityAddress;

        if (_taxAuthority)
        {
            select firstonly taxAuthorityAddress
                where taxAuthorityAddress.TaxAuthority== _taxAuthority;
        }
        return taxAuthorityAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByOKATO_RU</Name>
				<Source><![CDATA[
    static TaxAuthorityAddress findByOKATO_RU(OKATO_RU _okato, boolean _forupdate = false)
    {
        TaxAuthorityAddress                 taxAuthorityAddress;
        VendTable                           vendTable;
        TaxAuthorityOKATO_RU                authorityOKATO;
        DirPartyLocation                    dirPartyLocation;
        TaxRegistration                     taxRegistration;
        TaxRegistrationLegislationTypes     legislationTypes;

        taxAuthorityAddress.selectForUpdate(_forupdate);

        if (_okato)
        {
            select firstonly taxAuthorityAddress
                exists join vendTable
                    where taxAuthorityAddress.AccountNum    == vendTable.AccountNum
                exists join dirPartyLocation
                    where dirPartyLocation.Party           == vendTable.Party
                       && dirPartyLocation.IsPostalAddress == NoYes::Yes
                exists join taxRegistration
                    where taxRegistration.DirPartyLocation   == dirPartyLocation.RecId
                       && taxRegistration.RegistrationNumber == _okato
                exists join legislationTypes
                    where legislationTypes.TaxRegistrationTypeApplicabilityRule == taxRegistration.TaxRegistrationTypeApplicabilityRule
                       && legislationTypes.TaxRegistrationTypesList             == TaxRegistrationTypesList::OKATO;

            if (!taxAuthorityAddress)
            {
                select firstonly taxAuthorityAddress
                    join TableId from authorityOKATO
                    where taxAuthorityAddress.TaxAuthority  == authorityOKATO.TaxAuthority
                       && authorityOKATO.okato              == _okato;
            }
        }

        return taxAuthorityAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTaxAuthority_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tax authority lookup according to Brazilian requirements.
    /// </summary>
    /// <param name="_formStringControl">Form control which the lookup is performed to.</param>
    public static void lookupTaxAuthority_BR(FormStringControl _formStringControl)
    {
        SysTableLookup          tableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        ;
        tableLookup = SysTableLookup::newParameters(tableNum(TaxAuthorityAddress), _formStringControl);

        query = new Query();
        queryBuildDataSource = query.addDataSource(tableNum(TaxAuthorityAddress));

        tableLookup.addLookupfield(fieldNum(TaxAuthorityAddress, TaxAuthority));
        tableLookup.addLookupfield(fieldNum(TaxAuthorityAddress, Name));
        tableLookup.addLookupfield(fieldNum(TaxAuthorityAddress, AccountNum));
        tableLookup.addLookupfield(fieldNum(TaxAuthorityAddress, Agency_BR));

        tableLookup.parmQuery(query);
        tableLookup.performFormLookup();

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>phone</Name>
				<Source><![CDATA[
    static Phone  phone(TaxAuthority  _taxAuthority)
    {
        TaxAuthorityAddress taxAuthorityAddress;
        ;
        taxAuthorityAddress= TaxAuthorityAddress::find(_taxAuthority);
        if (taxAuthorityAddress.AccountNum)
        {
            return VendTable::find(taxAuthorityAddress.AccountNum).phone();
        }
        else
            return taxAuthorityAddress.Phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAuthorityName</Name>
				<Source><![CDATA[
    static CompanyName taxAuthorityName(TaxAuthority  _taxAuthority)
    {
        TaxAuthorityAddress taxAuthorityAddress;
        ;
        if (_taxAuthority)
        {
            taxAuthorityAddress= TaxAuthorityAddress::find(_taxAuthority);
            if (taxAuthorityAddress.AccountNum)
            {
                return VendTable::find(taxAuthorityAddress.AccountNum).name();
            }
            else
                return taxAuthorityAddress.Name;
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS22423";
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);
        
        switch (_fieldName)
        {
            case fieldStr(TaxAuthorityAddress, TaxReportLayout) :
                if (TaxParameters::find().TaxReportFormatMappingID_UK
                    && this.TaxReportLayout != TaxReportLayout::Default)
                {
                        this.UseDefaultLayout = NoYes::No;
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS126027</DeveloperDocumentation>
	<FormRef>TaxAuthority</FormRef>
	<Label>@SYS21937</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxAuthority</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TaxAuthorityIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Tax</Modules>
	<PrimaryIndex>TaxAuthorityIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxAuthorityOKATO_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxAuthorityOKATO_RU</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxPeriodHead</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxPeriodHead</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxAuthorityAddressRegistration</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxAuthorityAddressRegistration</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAuthority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportLayout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAuthority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportLayout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS21663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhoneLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CellularPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pager</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TeleFax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telex</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAuthority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Agency_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAuthorityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GniCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReportLayout</Name>
			<Label>@SYS17666</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReportLayout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintBlankPage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeparateTaxSummary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseDefaultLayout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RoundOff</Name>
			<Label>@SYS8172</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoundOffType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOffGainLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOffLossLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Agency_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>Agency_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CellularPhone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneMobile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GniCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>GniCode_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyName</ExtendedDataType>
			<Label>@SYS7399</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Pager</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Pager</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhoneLocal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneLocal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintBlankPage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<Label>@SYS107601</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundOff</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RoundOff</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RoundOffGainLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<Label>@SYS74678</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RoundOffLossLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<Label>@SYS74676</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RoundOffType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxRepRoundOffType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SeparateTaxSummary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<Label>@SYS107608</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SMS</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMS</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxAuthority</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAuthority</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxAuthorityId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAuthorityId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReportLayout</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxReportLayout</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TeleFax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telex</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Telex</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>URL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseDefaultLayout</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@VATDeclaration:UseDefaultLayoutHelpText</HelpText>
			<Label>@VATDeclaration:UseDefaultLayoutLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxAuthorityIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxAuthority</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Ta</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RoundOffGainLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RoundOffLossLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Location_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxAuthorityAddress</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RoundOffGainLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RoundOffGainLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxAuthorityAddress</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoundOffGainLedgerDimension</Name>
					<Field>RoundOffGainLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RoundOffLossLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RoundOffLossLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxAuthorityAddress</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoundOffLossLedgerDimension</Name>
					<Field>RoundOffLossLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>