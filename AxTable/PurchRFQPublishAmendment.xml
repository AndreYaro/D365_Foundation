<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQPublishAmendment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQPublishAmendment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a value that indicates whether there is at least one document attached to the amendment.
    /// </summary>
    /// <returns>
    /// true if the amendment has documents; otherwise, false.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    public display PurchRFQVendHasDocuments hasDocuments()
    {
        return this.RecId && DocuRef::exist(this.DataAreaId, this.TableId, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDocumentIcon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document handling icon for the address book record.
    /// </summary>
    /// <returns>
    /// The icon number of the handling icon for the address book record.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    public display smmDocIconNum showDocumentIcon()
    {
        #macrolib.resource

        if (this.RecId
            && DocuRef::exist(curext(), tableNum(PurchRFQAmendment), this.RecId))
        {
            return #RES_NODE_DOC;
        }

        return #RES_AM_NEW;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a specified record exists in the <c>PurchRFQPublishAmendment</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return PurchRFQPublishAmendment::find(_recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record on the <c>PurchRFQPublishAmendment</c> table associated with the given <c>PurchRFQPublishAmendment</c> record ID.
    /// </summary>
    /// <param name="_purchRFQPublishAmendmentRecId">
    /// The record ID to be used to find the record.
    /// </param>
    /// <param name="_forupdate">
    ///    A boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>PurchRFQPublishAmendment</c> table buffer.
    /// </returns>
    public static PurchRFQPublishAmendment find(
        PurchRFQPublishAmendmentRecId _purchRFQPublishAmendmentRecId,
        boolean                       _forupdate = false)
    {
        PurchRFQPublishAmendment purchRFQPublishAmendment;

        if (_purchRFQPublishAmendmentRecId)
        {
            purchRFQPublishAmendment.selectForUpdate(_forUpdate);

            select firstonly purchRFQPublishAmendment
                where purchRFQPublishAmendment.RecId == _purchRFQPublishAmendmentRecId;
        }

        return purchRFQPublishAmendment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRFQCaseRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific record in the <c>PurchRFQPublishAmendment</c> table.
    /// </summary>
    /// <param name="_purchRFQCaseRecId">
    /// The record ID of the <c>PurchRFQCaseTable</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PurchRFQPublishAmendment</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchRFQPublishAmendment findByRFQCaseRecId(
        PurchRFQCaseRecId  _purchRFQCaseRecId,
        boolean            _forUpdate = false)
    {
        PurchRFQPublishAmendment purchRFQPublishAmendment;

        if (_purchRFQCaseRecId)
        {
            purchRFQPublishAmendment.selectForUpdate(_forUpdate);

            select firstonly purchRFQPublishAmendment
                where purchRFQPublishAmendment.PurchRFQCaseTable == _purchRFQCaseRecId;
        }

        return purchRFQPublishAmendment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowEdit_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disallow the attachment reference document to be modified.
    /// </summary>
    public boolean docuAllowEdit_W()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>PurchRFQPublishAmendment</c> record
    /// </summary>
    public void delete()
    {
        ttsbegin;

        PurchRFQDeleteDocuRef::deleteDocuRef(this);

        super();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendorCollaboration_PSN</ConfigurationKey>
	<DeveloperDocumentation>@EPR4460248</DeveloperDocumentation>
	<Label>@EPR4460250</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amendment</Name>
			<Label>@EPR4460054</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQAmendment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQCaseTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentDescription</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQAmendment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQCaseTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQCaseRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchRFQAmendmentIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchRFQAmendment</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQAmendment</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchRFQAmendment</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQAmendment</Name>
					<Field>PurchRFQAmendment</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQCaseTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchRFQCaseTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQCaseTable</Name>
					<Field>PurchRFQCaseTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>