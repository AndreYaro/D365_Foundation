<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCalcGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOMCalcGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCostPriceModel</Name>
				<Source><![CDATA[
    public BOMCalcCostPrice getCostPriceModel(BOMCostPriceModel _costPriceModel)
    {
        BOMCalcCostPrice    ret;

        switch (_costPriceModel)
        {
            case BOMCostPriceModel::BOMCalcGroup :
                ret = this.CostPrice;
                break;

            case BOMCostPriceModel::ItemCostPrice :
                ret = BOMCalcCostPrice::CostPrice;
                break;

            default :
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostPriceModelAlt</Name>
				<Source><![CDATA[
    public BOMCalcCostPrice getCostPriceModelAlt(BOMCostPriceModel _costPriceModel)
    {
        BOMCalcCostPrice    ret;

        switch (_costPriceModel)
        {
            case BOMCostPriceModel::BOMCalcGroup :
                ret = this.CostPriceAlt;
                break;

            case BOMCostPriceModel::ItemCostPrice :
                ret = BOMCalcCostPrice::CostPrice;
                break;

            default :
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesPriceModel</Name>
				<Source><![CDATA[
    public BOMCalcSalesPrice getSalesPriceModel(BOMCostPriceModel _costPriceModel)
    {
        BOMCalcSalesPrice   ret;

        switch (_costPriceModel)
        {
            case BOMCostPriceModel::BOMCalcGroup :
                ret = this.SalesPrice;
                break;

            case BOMCostPriceModel::ItemCostPrice :
                ret = BOMCalcSalesPrice::CostGroup;
                break;

            default :
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(BOMCalcGroupId  _calcGroupId)
    {
        if (_calcGroupId  && !BOMCalcGroup::exist(_calcGroupId))
            return checkFailed(strfmt(BOMCalcGroup::txtNotExist(),_calcGroupId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(BOMCalcGroupId _calcGroupId)
    {
        return _calcGroupId &&
               (select firstonly bomCalcGroup
                    index hint CalcGroupIdx
                    where bomCalcGroup.CalcGroupId  == _calcGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static BOMCalcGroup find(BOMCalcGroupId _calcGroupId, boolean _forUpdate = false)
    {
        BOMCalcGroup bomCalcGroup;
        bomCalcGroup.selectForUpdate(_forUpdate);

        if (_calcGroupId)
        {
            select firstonly bomCalcGroup
                index hint CalcGroupIdx
                where bomCalcGroup.CalcGroupId  == _calcGroupId;
        }

        return bomCalcGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemProcured</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the item is procured or produced at a given site.
    /// </summary>
    /// <param name="_inventTable">
    ///    The inventory table.
    /// </param>
    /// <param name="_inventDimId">
    ///    The dimension ID.
    /// </param>
    /// <param name="_newSiteId">
    ///    The specific site that might be different from the dimension ID.
    /// </param>
    /// <returns>
    ///    true if the item is procured at the given site; otherwise, false.
    /// </returns>
    public static boolean isItemProcured(
        InventTable     _inventTable,
        InventDimId     _inventDimId,
        InventSiteId    _newSiteId)
    {
        NoYes                               ret = false;
        InventDim                           inventDim;
        InventDim                           newInventDim;
        InventDimGroupSetup                 inventDimGroupSetup = InventDimGroupSetup::newInventTable(_inventTable);
        InventDimGroupFieldSetup            inventDimGroupFieldSetup;

        inventDimGroupFieldSetup = inventDimGroupSetup.getFieldSetup(fieldNum(InventDim, InventSiteId));
        if (inventDimGroupFieldSetup.isActive() && inventDimGroupFieldSetup.isCoveragePlanByDimensionEnabled())
        {
            inventDim = InventDim::find(InventDim::dimId2ReqCovDimId(_inventDimId, inventDimGroupSetup));

            if (inventDim.InventSiteId != _newSiteId)
            {
                inventDim.InventSiteId  = _newSiteId;
                newInventDim            = InventDim::findDim(inventDim);
            }
            else
            {
                newInventDim.data(inventDim);
            }

            if (newInventDim.RecId)
            {
                switch (ReqSetupDim::newInventTable(_inventTable, newInventDim.InventDimId).plannedOrderTypeReq(NoYes::No, true))
                {
                    case ReqRefType::ItemPlannedOrder,
                        ReqRefType::TransferPlannedOrder:
                        ret = true;
                        break;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(BOMCalcGroupId _calcGroupId)
    {
        return BOMCalcGroup::find(_calcGroupId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>stopExplodePrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the sub items on the Bill of Materials (BOM) item should be expanded.
    /// </summary>
    /// <param name="_bomCalcGroup">
    ///    The BOM calculation group.
    /// </param>
    /// <param name="_inventTable">
    ///    The inventory table.
    /// </param>
    /// <param name="_inventDimId">
    ///    The dimension ID.
    /// </param>
    /// <param name="_newSiteId">
    ///    The specific site that might be different from the inventory dimension ID.
    /// </param>
    /// <returns>
    ///    true if the sub items should not be expanded; otherwise, false.
    /// </returns>
    public static ItemStopExplodePrice stopExplodePrice(
        BOMCalcGroup    _bomCalcGroup,
        InventTable     _inventTable,
        InventDimId     _inventDimId,
        InventSiteId    _newSiteId
        )
    {
        ItemStopExplodePrice    ret;

        ret = _bomCalcGroup.StopExplodePrice;

        if (ret == NoYes::No)
        {
            if (BOMCalcGroup::isItemProcured(_inventTable, _inventDimId, _newSiteId))
            {
                ret = NoYes::Yes;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS94079";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124234</DeveloperDocumentation>
	<Label>@SYS94031</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CalcGroupId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CalcGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CalcGroupIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BOMParameters</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>BOMParameters</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>InventTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>InventTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPriceAlt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StopExplodePrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CostPrice</Name>
			<Label>@SYS13134</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPriceAlt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StopExplodePrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesPrice</Name>
			<Label>@SYS5755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Warnings</Name>
			<Label>@SYS59278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckNoBOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckNoRoute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckNoResource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckNoConsump</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckNoCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckAgeCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckMinContribution</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalcGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CheckAgeCostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckAgeCostPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CheckMinContribution</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckMinContribution</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNoBOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckNoBOM</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNoConsump</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckNoConsump</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNoCostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckNoCostPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNoResource</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckNoResource</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNoRoute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCheckNoRoute</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BOMCalcCostPrice</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostPriceAlt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcCostPriceAlt</ExtendedDataType>
			<EnumType>BOMCalcCostPrice</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcGroupName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BOMCalcSalesPrice</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StopExplodePrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemStopExplodePrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CalcGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CalcGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>