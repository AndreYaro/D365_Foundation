<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationISVTaxPostLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxIntegrationISVTaxPostLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findBySource</Name>
				<Source><![CDATA[
    public static TaxIntegrationISVTaxPostLog findBySource(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        TaxModuleType _taxModuleType,
        boolean _forUpdate = false)
    {
        TaxIntegrationISVTaxPostLog taxPostLog;

        if (_sourceTableId && _sourceRecId)
        {
            if (_forUpdate)
            {
                taxPostLog.selectForUpdate(true);
            }

            select firstonly taxPostLog
                where taxPostLog.SourceTableId == _sourceTableId
                    && taxPostLog.SourceRecId == _sourceRecId
                    && taxPostLog.Source == _taxModuleType;
        }

        return taxPostLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    internal static TaxIntegrationISVTaxPostLog findOrCreate(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        TaxModuleType _taxModuleType,
        boolean _isReverse = false,
        RefRecId _origTaxPostLogRecId = 0)
    {
        TaxIntegrationISVTaxPostLog taxPostLog = TaxIntegrationISVTaxPostLog::findBySource(_sourceTableId, _sourceRecId, _taxModuleType);

        if (!taxPostLog)
        {
            taxPostLog.SourceTableId = _sourceTableId;
            taxPostLog.SourceRecId = _sourceRecId;
            taxPostLog.Status = TaxIntegrationISVTaxPostStatus::NotStarted;
            taxPostLog.Source = _taxModuleType;
            taxPostLog.IsReverse = _isReverse;
            taxPostLog.OrigTaxPostLogRecId = _origTaxPostLogRecId;
            taxPostLog.initFromSourceTable(_sourceTableId, _sourceRecId);
            taxPostLog.insert();
        }

        return taxPostLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSourceTable</Name>
				<Source><![CDATA[
    internal void initFromSourceTable(RefTableId _sourceTableId, RefRecId _sourceRecId)
    {
        switch (_sourceTableId)
        {
            case tableNum(CustInvoiceJour):
                CustInvoiceJour custInvoiceJour = CustInvoiceJour::findRecId(_sourceRecId);
                this.Voucher = custInvoiceJour.LedgerVoucher;
                this.TransDate = custInvoiceJour.InvoiceDate;
                break;

            case tableNum(VendInvoiceJour):
                VendInvoiceJour vendInvoiceJour = VendInvoiceJour::findRecId(_sourceRecId);
                this.Voucher = vendInvoiceJour.LedgerVoucher;
                this.TransDate = vendInvoiceJour.InvoiceDate;
                break;

            case tableNum(InventTransferJour):
                InventTransferJour inventTransferJour = InventTransferJour::findRecId(_sourceRecId);
                this.Voucher = inventTransferJour.VoucherId;
                this.TransDate = inventTransferJour.TransDate;
                break;

            case tableNum(LedgerJournalTrans):
                LedgerJournalTrans ledgerJournalTrans = LedgerJournalTrans::findRecId(_sourceRecId, false);
                this.Voucher = ledgerJournalTrans.Voucher;
                this.TransDate = ledgerJournalTrans.TransDate;
                break;

            case tableNum(CustTrans):
                CustTrans custTrans = CustTrans::find(_sourceRecId);
                this.Voucher = custTrans.Voucher;
                this.TransDate = custTrans.TransDate;
                break;

            case tableNum(VendTrans):
                VendTrans vendTrans = VendTrans::find(_sourceRecId);
                this.Voucher = vendTrans.Voucher;
                this.TransDate = vendTrans.TransDate;
                break;

            case tableNum(GeneralJournalEntry):
                GeneralJournalEntry generalJournalEntry = GeneralJournalEntry::find(_sourceRecId);
                this.Voucher = generalJournalEntry.SubledgerVoucher;
                this.TransDate = generalJournalEntry.AccountingDate;
                break;

            case tableNum(ProjAdvancedJournalLine):
                ProjAdvancedJournalLine projAdvancedJournalLine = ProjAdvancedJournalLine::find(_sourceRecId);
                this.Voucher = projAdvancedJournalLine.Voucher;
                this.TransDate = projAdvancedJournalLine.AccountingDate;
                break;

            case tableNum(ProjInvoiceJour):
                ProjInvoiceJour projInvoiceJour = ProjInvoiceJour::findRecId(_sourceRecId);
                this.Voucher = projInvoiceJour.LedgerVoucher;
                this.TransDate = projInvoiceJour.InvoiceDate;
                break;
        }

        if (this.Voucher && this.TransDate)
        {
            TaxTrans taxTrans = TaxTrans::find(this.Voucher, this.TransDate);

            this.TaxSolution = taxTrans.ISVFeatureSetupName;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatus</Name>
				<Source><![CDATA[
    internal void updateStatus(TaxIntegrationISVTaxPostStatus _status, TaxIntegrationErrorMessage _errorMessage = '')
    {
        ttsbegin;

        this.Status = _status;
        if (_status == TaxIntegrationISVTaxPostStatus::InProgress)
        {
            this.DateSubmitted = DateTimeUtil::getSystemDateTime();
        }
        this.ErrorMessage = _errorMessage;
        this.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Voucher</TitleField1>
	<TitleField2>DateSubmitted</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ISVPostExecution</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxSolution</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateSubmitted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Source</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<HelpText>@TaxTrans:VoucherHelpText</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@TaxTrans:TransDateHelpText</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DateSubmitted</Name>
			<ExtendedDataType>DateSubmitted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<EnumType>TaxIntegrationISVTaxPostStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ErrorMessage</Name>
			<ExtendedDataType>TaxIntegrationErrorMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxSolution</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationFeatureSetupName</ExtendedDataType>
			<FeatureClass>TaxIntegrationISVTaxPostToggle</FeatureClass>
			<Label>@TaxIntegration:TaxSolution</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Source</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxModuleTypeId</ExtendedDataType>
			<HelpText>@TaxTrans:SourceHelpText</HelpText>
			<EnumType>TaxModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsReverse</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OrigTaxPostLogRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceTableIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Source</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>