<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveLabelTemplateLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveLabelTemplateLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
    
        this.initWorkQuery();
        this.setSeqNum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes query field on label template detail record.
    /// </summary>
    private void initWorkQuery()
    {
        this.PackedQueryRun = this.defaultPackedQueryRun().pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPackedQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default query run.
    /// </summary>
    /// <returns>The default query run.</returns>
    [Hookable(false)]
    internal QueryRun defaultPackedQueryRun()
    {
        return new QueryRun(queryStr(WHSWork));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSeqNum</Name>
				<Source><![CDATA[
    private void setSeqNum()
    {
        WHSWaveLabelTemplateLine    labelTemplateLine;
    
        select firstOnly maxof(LabelTemplateSequenceNumber) from labelTemplateLine
            where labelTemplateLine.LabelTemplate == this.LabelTemplate;
    
        this.LabelTemplateSequenceNumber = labelTemplateLine.LabelTemplateSequenceNumber + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineUpDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Change <c>WHSWaveLabelTemplateLine</c> line numbers with adjacent line numbers based on up or down button click
    /// </summary>
    /// <param name = "_up">Boolean used to determine if the up button or down button was pressed</param>
    /// <returns>An instance of <c>WHSWaveLabelTemplateLine</c> that represents the line that was moved</returns>
    [SysObsolete('Use WHSSequenceNumberMoverForm for Move up/down buttons logic', false, 13\09\2022)]
    public WHSWaveLabelTemplateLine lineUpDown(boolean _up)
    {
        WHSWaveLabelTemplateLine    labelTemplateLineOld;
        WHSWaveLabelTemplateLine    labelTemplateLineNew;
        int                         change;
        WHSWaveLabelTemplateSequenceNumber oldSeqNum;

        if (this.validateWrite())
        {
            ttsbegin;

            this.write();

            labelTemplateLineNew.data(this);
            labelTemplateLineOld.data(this);

            if (_up == true)
            {
                if (this.LabelTemplateSequenceNumber > 1)
                {
                    change--;
                }
            }
            else
            {
                if (this.LabelTemplateSequenceNumber < WHSWaveLabelTemplateLine::getMaxLabelTemplateSequenceNumber(this.LabelTemplate)
                &&  this.LabelTemplateSequenceNumber != 0)
                {
                    change++;
                }
            }

            if (change)
            {
                select forupdate labelTemplateLineNew
                    where labelTemplateLineNew.RecId == this.RecId;

                if (labelTemplateLineNew)
                {
                    oldSeqNum = labelTemplateLineNew.LabelTemplateSequenceNumber;
                    labelTemplateLineNew.LabelTemplateSequenceNumber += change;

                    select forupdate firstonly labelTemplateLineOld
                        where labelTemplateLineOld.LabelTemplateSequenceNumber == labelTemplateLineNew.LabelTemplateSequenceNumber
                            && labelTemplateLineOld.LabelTemplate == labelTemplateLineNew.LabelTemplate
                            && labelTemplateLineOld.RecId    != labelTemplateLineNew.RecId;

                    if (labelTemplateLineOld && change)
                    {
                        labelTemplateLineOld.LabelTemplateSequenceNumber = maxInt(); 
                        labelTemplateLineOld.update();
                    }

                    labelTemplateLineNew.update();

                    if (labelTemplateLineOld && change)
                    {
                        labelTemplateLineOld.LabelTemplateSequenceNumber = oldSeqNum;
                        labelTemplateLineOld.update();
                    }
                }
            }

            ttscommit;
        }
        else
        {
            labelTemplateLineNew = this;
        }

        return labelTemplateLineNew;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxLabelTemplateSequenceNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the highest <c>LabelTemplateSequenceNumber</c> for the lines for the given label template line.
    /// </summary>
    /// <param name="_labelTemplateRecId">
    /// <c>RecId</c> representing a label template.  Used to find the label template line with the highest <c>LabelTemplateSequenceNumber</c>.
    /// </param>
    /// <returns>
    /// The highest <c>LabelTemplateSequenceNumber</c> found for the given location directive.
    /// </returns>
    public static WHSWaveLabelTemplateSequenceNumber getMaxLabelTemplateSequenceNumber(WHSWaveLabelTemplateRecId _labelTemplateRecId)
    {
        WHSWaveLabelTemplateLine   labelTemplateLine;

        select maxof(LabelTemplateSequenceNumber) from labelTemplateLine
            where labelTemplateLine.LabelTemplate == _labelTemplateRecId;

        return labelTemplateLine.LabelTemplateSequenceNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:LabelTemplateLineDevDoc</DeveloperDocumentation>
	<FormRef>WHSWaveLabelTemplate</FormRef>
	<Label>@WAX:LabelTemplateLine</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>LabelTemplateSequenceNumber</TitleField1>
	<TitleField2>LabelLayoutId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<ReplacementKey>LabelTemplateLabelTemplateSeqNumIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelTemplateSequenceNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelGeneratorType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelLayoutId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelTemplateSequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrinterName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RunQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LabelGeneratorType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSWaveLabelGeneratorType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LabelLayoutId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelLayoutId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LabelTemplateSequenceNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTemplateSequenceNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LabelTemplate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTemplateRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedQueryRun</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrinterName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrinterName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RunQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRunQuery</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LabelTemplateLabelTemplateSeqNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LabelTemplateSequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LabelLayoutIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelLayoutId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelLayout</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWaveLabelLayout</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LabelLayoutId</Name>
					<Field>LabelLayoutId</Field>
					<RelatedField>LabelLayoutId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWaveLabelTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LabelTemplate</Name>
					<Field>LabelTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>