<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPurchParmCleanupOverride</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class VendPurchParmCleanupOverride extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentOverrideExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does an override exist with an expiration date in the future?
    /// </summary>
    /// <param name = "_untilDate">The override must allow the cleanup of transactions created prior to this date.</param>
    /// <returns>true if a currently non-expired override exists, which allows cleanup up including the providid date, otherwise false.</returns>
    internal static boolean currentOverrideExists(TransDate _untilDate = dateNull())
    {
        VendPurchParmCleanupOverride vendPurchParmCleanupOverride;
        select firstonly RecId from vendPurchParmCleanupOverride 
            where vendPurchParmCleanupOverride.OverrideExpirationDate >= DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())
            && vendPurchParmCleanupOverride.AllowCleanupOfTransactionsDatedBefore >= _untilDate;

        return vendPurchParmCleanupOverride.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBypassSelectionUsableForDateSilent</Name>
				<Source><![CDATA[
    internal static boolean validateBypassSelectionUsableForDateSilent(TransDate _untilDate)
    {
        boolean result = true;

        if (!VendPurchParmCleanupOverride::currentOverrideExists(_untilDate))
        {
            result = false;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBypassSelectionUsableForDate</Name>
				<Source><![CDATA[
    internal static boolean validateBypassSelectionUsableForDate(TransDate _untilDate)
    {
        boolean result = VendPurchParmCleanupOverride::validateBypassSelectionUsableForDateSilent(_untilDate);

        if (!result)
        {
            warning("@AccountsPayable:PurchParmCleanupBypassNotApplicableForDateWarning");
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<Visibility>Internal</Visibility>
	<Visible>No</Visible>
	<Modules>AccountsPayable</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AllowCleanupOfTransactionsDatedBefore</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>OverrideExpirationDate</Name>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>