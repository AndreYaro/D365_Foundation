<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkAuditTemplateLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkAuditTemplateLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>whsWorkAuditTemplateLine</c> record exists.
	/// </summary>
	/// <param name="_templateId">
	/// Work audit template id of the record.
	/// </param>
	/// <param name="_seqNum">
	/// Audit sequence number of the record.
	/// </param>
	/// <returns>
	/// true if the record exists.
	/// </returns>
    public static boolean exist(WHSWorkAuditTemplateId _templateId, WHSAuditSeqNum _seqNum)
    {
        return _templateId && _seqNum &&
               (select firstonly RecId from whsWorkAuditTemplateLine
                where whsWorkAuditTemplateLine.WorkAuditTemplateId == _templateId    &&
                      whsWorkAuditTemplateLine.AuditSeqNum == _seqNum).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSWorkAuditTemplateLine</c> record with given parameters.
	/// </summary>
	/// <param name="_templateId">
	/// Work audit template id of the record.
	/// </param>
	/// <param name="_seqNum">
	/// Audit sequence number of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSWorkAuditTemplateLine find(WHSWorkAuditTemplateId _templateId,
                                                 WHSAuditSeqNum _seqNum,
                                                 boolean _forupdate = false)
    {
        WHSWorkAuditTemplateLine templateLine;

        if (_templateId && _seqNum)
        {
            templateLine.selectForUpdate(_forupdate);

            select firstonly templateLine
                where templateLine.WorkAuditTemplateId   == _templateId &&
                      templateLine.AuditSeqNum           == _seqNum;
        }

        return templateLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processWorkAuditBreak</Name>
				<Source><![CDATA[
    /// <summary>
    /// Process custom code for work audit break.
    /// </summary>
    /// <param name = "_parameters">An instance of <c>WHSWorkAuditTemplateCustomProcessParameters</c> object.</param>
    public void processWorkAuditBreak(WHSWorkAuditTemplateCustomProcessParameters _parameters)
    {
        if (this.WorkAuditTemplateCustomMethod)
        {
            WhsWorkAuditTemplateCustomProcessorFactoryAttribute attribute = new WhsWorkAuditTemplateCustomProcessorFactoryAttribute(this.WorkAuditTemplateCustomMethod);
            WhsIWorkAuditTemplateCustomProcessor processor = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WhsIWorkAuditTemplateCustomProcessor), attribute) as WhsIWorkAuditTemplateCustomProcessor;

            if (processor)
            {
                processor.process(_parameters);
            }
            else
            {
                //To support the old style
                WHSWorkAuditTemplateLine::callCustomMethod(this.WorkAuditTemplateCustomMethod, _parameters.workTable, _parameters.captureDataRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>callCustomMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls a custom method on an <c>WHSWorkAuditTemplateCustomMethod</c> instance.
    /// </summary>
    /// <param name="_customMethod">
    /// Name of the method to be called.
    /// </param>
    /// <param name="_workTable">
    /// Work table as parameter to be passed to method call.
    /// </param>
    /// <param name="_captureDataRecId">
    /// Captured data record Id as parameter to be passed to method call.
    /// </param>
    public static void callCustomMethod(
        WHSWorkAuditTemplateCustomMethod _customMethod,
        WHSWorkTable                     _workTable,
        RecId                            _captureDataRecId)
    {
        DictClass                           customClass       = new DictClass(classNum(WHSWorkAuditTemplateMethodCustom));
        WHSWorkAuditTemplateMethodCustom    customData        = new WHSWorkAuditTemplateMethodCustom();

        customClass.callObject(_customMethod, customData, _workTable, _captureDataRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>methodExistsOnWHsWorkCustomData</Name>
				<Source><![CDATA[
    private boolean methodExistsOnWHsWorkCustomData()
    {
        SysDictClass dictClass = SysDictClass::newName(classStr(WHSWorkAuditTemplateMethodCustom));
        return dictClass.hasObjectMethod(this.WorkAuditTemplateCustomMethod);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processorExists</Name>
				<Source><![CDATA[
    private boolean processorExists()
    {
        WhsWorkAuditTemplateCustomProcessorFactoryAttribute attribute = new WhsWorkAuditTemplateCustomProcessorFactoryAttribute(this.WorkAuditTemplateCustomMethod);
        WhsIWorkAuditTemplateCustomProcessor processor = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WhsIWorkAuditTemplateCustomProcessor), attribute) as WhsIWorkAuditTemplateCustomProcessor;

        return processor != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomMethodImplemented</Name>
				<Source><![CDATA[
    private boolean isCustomMethodImplemented()
    {
        if (this.processorExists() ||
            this.methodExistsOnWHsWorkCustomData())
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean     ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WHSWorkAuditTemplateLine, WorkAuditTemplateCustomMethod):
                    if (this.WorkAuditTemplateCustomMethod &&
                        !this.isCustomMethodImplemented())
                    {
                        ret = checkFailed("@WAX3721");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCustomMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the custom method is specified.
    /// </summary>
    /// <returns>true if a custom method is specified.</returns>
    public boolean hasCustomMethod()
    {
        return this.WorkAuditTemplateCustomMethod != '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4487</DeveloperDocumentation>
	<Label>@WAX4188</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AuditBreakFunction</TitleField1>
	<TitleField2>AuditRFLabel</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WorkAuditTemplateIdSeqNumIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>WorkAuditTemplateIdSeqNumIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuditBreakFunction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditSeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditRFLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateEvents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateCustomMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSettings</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditSeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuditBreakFunction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditSeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuditRFLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateEvents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateCustomMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkAuditTemplateReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSettings</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AuditBreakFunction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSAuditBreakFunction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuditRFLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAuditRFLabel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AuditSeqNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAuditSeqNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PrintSettings</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintSettings</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkAuditTemplateCustomMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkAuditTemplateCustomMethod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkAuditTemplateEvents</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSWorkAuditTemplateEvents</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkAuditTemplateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkAuditTemplateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkAuditTemplateReportName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkAuditTemplateReportName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkAuditTemplateIdSeqNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkAuditTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AuditSeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSWorkAuditTemplateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorkAuditTemplateTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkAuditTemplateId</Name>
					<SourceEDT>WHSWorkAuditTemplateId</SourceEDT>
					<Field>WorkAuditTemplateId</Field>
					<RelatedField>WorkAuditTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>