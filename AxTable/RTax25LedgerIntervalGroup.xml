<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25LedgerIntervalGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTax25LedgerIntervalGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static boolean checkExist(RTax25AccountIntervalGroup _intervalGroup)
    {
        boolean ret = true;

        if (_intervalGroup  && !RTax25LedgerIntervalGroup::exist(_intervalGroup))
        {
            ret = checkFailed(strFmt(RTax25LedgerIntervalGroup::txtNotExist(), _intervalGroup));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static boolean exist(RTax25AccountIntervalGroup _intervalGroup)
    {
        return _intervalGroup && (select firstonly RecId from rTax25LedgerIntervalGroup
            where rTax25LedgerIntervalGroup.IntervalGroup== _intervalGroup
                   ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RTax25LedgerIntervalGroup table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing RTax25LedgerIntervalGroup table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25LedgerIntervalGroup find(
        RecId             _recId,
        boolean           _forupdate = false,
        ConcurrencyModel  _concurrencyModel = ConcurrencyModel::Auto)
    {
        RTax25LedgerIntervalGroup rTax25LedgerIntervalGroup;

        rTax25LedgerIntervalGroup.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            rTax25LedgerIntervalGroup.concurrencyModel(_concurrencyModel);
        }

        select firstonly rTax25LedgerIntervalGroup
            where rTax25LedgerIntervalGroup.RecId == _recId;

        return rTax25LedgerIntervalGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByIntervalGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RTax25LedgerIntervalGroup table for the specified interval group.
    /// </summary>
    /// <param name="_intervalGroup">
    /// The interval group to find.
    /// </param>
    /// <returns>
    /// A buffer containing RTax25LedgerIntervalGroup table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25LedgerIntervalGroup findByIntervalGroup(RTax25AccountIntervalGroup _intervalGroup)
    {
        RTax25LedgerIntervalGroup rTax25LedgerIntervalGroup;

        select firstonly rTax25LedgerIntervalGroup
               where rTax25LedgerIntervalGroup.IntervalGroup == _intervalGroup;

        return rTax25LedgerIntervalGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static TxtNotExist txtNotExist()
    {
        return "@GLS113820";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTax25LedgerIntervalGroup</FormRef>
	<Label>@GLS103905</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>IntervalGroup</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>RTax25</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>IntervalGroupIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RTax25LedgerInterval</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RTax25LedgerInterval</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntervalGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntervalGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntervalGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntervalGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25AccountIntervalGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IntervalGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IntervalGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>