<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysWindowsAppApprovalsConfig</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SysWindowsAppApprovalsConfig extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>approvalDisplayName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method to translate the labelID to the translated value based on the client language.
    /// </summary>
    /// <returns>
    /// The translated value of the Workflow approval.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display Description approvalDisplayName()
    {
        return SysLabel::labelId2String2(this.ApprovalDisplayLabel);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the default hex color value per Workflow approval.
    /// </summary>
    /// <param name="_approvalName">
    /// The AOT Workflow approval name
    /// </param>
    /// <returns>
    /// The hex value of the default color.
    /// </returns>
    private static SysColorHex getDefaultColor(WorkflowElementName _approvalName)
    {
        #SysWindowsApp
        SysColorHex colorHex;

        switch (_approvalName)
        {
            case workFlowApprovalStr(TrvDocumentApproval) :
                colorHex = #DEFAULT_TILE_COLOR_EXPENSE;
                break;

            case workFlowApprovalStr(TSTimesheetApproval) :
                colorHex = #DEFAULT_TILE_COLOR_TIMESHEET;
                break;

            case workFlowApprovalStr(ProjBudgetRevisionApproval) :
                colorHex = #DEFAULT_TILE_COLOR_BUDGET_REVISION;
                break;

            default :
                colorHex = #DEFAULT_TILE_COLOR_OTHER;
        }
        return colorHex;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadDefaultFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the default configuration fields for the given approval.
    /// </summary>
    /// <param name="_approvalConfigRecId">
    /// The Workflow approval record ID associated to the configuration fields.
    /// </param>
    /// <param name="_documentTableId">
    /// The Workflow approval table ID associated to the configuration fields.
    /// </param>
    /// <param name="_documentFieldGroup">
    /// The Workflow approval field group associated to the configuration fields.
    /// </param>
    private static void loadDefaultFields(
        SysWindowsAppApprovalsConfigRecId   _approvalConfigRecId,
        WorkflowDocumentTableId             _documentTableId,
        str                                 _documentFieldGroup)
    {
        Counter             controlIndex;
        SysDictField        sysDictField;
        SysDictFieldGroup   sysDictFieldGroup = new SysDictFieldGroup(_documentTableId, _documentFieldGroup);

        if (sysDictFieldGroup)
        {
            SysWindowsAppApprovalsConfigFields approvalConfigFields;

            for (controlIndex = 1; controlIndex <= sysDictFieldGroup.numberOfFields(); controlIndex++)
            {
                Name dataFieldName = sysDictFieldGroup.methodName(sysDictFieldGroup.field(controlIndex));
                approvalConfigFields.clear();
                approvalConfigFields.initValue();

                if (dataFieldName)
                {
                    // Display method
                    approvalConfigFields.DocumentFieldType = WorkflowDocumentFieldType::Method;
                    var sysDictMethod   = new SysDictMethod(UtilElementType::TableInstanceMethod, _documentTableId, dataFieldName);
                    var sysDictType     = new SysDictType(sysDictMethod.displayId());

                    approvalConfigFields.DocumentPlaceholderName    = strFmt('%1.%2', tableId2Name(_documentTableId), dataFieldName);
                    approvalConfigFields.DocumentBaseType           = sysDictType.baseType();
                    approvalConfigFields.DocumentFieldId            = sysDictType.id();
                    approvalConfigFields.DocumentEnumId             = sysDictType.enumId();
                    approvalConfigFields.DocumentFieldName          = dataFieldName;
                    approvalConfigFields.DocumentFieldLabel         = sysDictType.labelLabel();
                }
                else
                {
                    // Table field
                    approvalConfigFields.DocumentFieldType = WorkflowDocumentFieldType::Field;
                    FieldId fieldId = sysDictFieldGroup.field(controlIndex);
                    sysDictField    = new SysDictField(_documentTableId, fieldId);

                    approvalConfigFields.DocumentPlaceholderName    = strFmt('%1.%2', tableId2Name(_documentTableId), sysDictField.name());
                    approvalConfigFields.DocumentBaseType           = sysDictField.baseType();
                    approvalConfigFields.DocumentFieldId            = sysDictField.id();
                    approvalConfigFields.DocumentEnumId             = sysDictField.enumId();
                    approvalConfigFields.DocumentFieldName          = sysDictField.name();
                    approvalConfigFields.DocumentFieldLabel         = sysDictField.labelLabel();
                }

                approvalConfigFields.DocumentTableId = _documentTableId;
                approvalConfigFields.ApprovalsConfig = _approvalConfigRecId;

                // Get the approval field type based on the fieldgroup name
                if (_documentFieldGroup == identifierStr(WorkflowSummary))
                {
                    switch (controlIndex)
                    {
                        case 1: approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Value; break;
                        case 2: approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Description; break;
                        case 3: approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Unit; break;
                        default: approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Generic; break;
                    }
                }
                approvalConfigFields.insert();
            }
        }
        else
        {
            var sysDictTable = new SysDictTable(_documentTableId);

            if (sysDictTable)
            {
                // Get the TitleField1
                sysDictField = new SysDictField(_documentTableId, sysDictTable.titleField1());
                if (sysDictField)
                {
                    SysWindowsAppApprovalsConfigFields approvalConfigFields;
                    approvalConfigFields.initFromSysDictField(sysDictField, _approvalConfigRecId,  _documentTableId);

                    if (_documentFieldGroup == identifierStr(WorkflowSummary))
                    {
                        approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Title;
                    }

                    approvalConfigFields.insert();
                }

                // Get the TitleField2
                sysDictField = new SysDictField(_documentTableId, sysDictTable.titleField2());
                if (sysDictField)
                {
                    SysWindowsAppApprovalsConfigFields approvalConfigFields;
                    approvalConfigFields.initFromSysDictField(sysDictField, _approvalConfigRecId,  _documentTableId);

                    if (_documentFieldGroup == identifierStr(WorkflowSummary))
                    {
                        approvalConfigFields.TileFieldType = SysWindowsAppTileFieldType::Description;
                    }

                    approvalConfigFields.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadDefaultOverviewFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the default configuration fields for the overview of a given approval.
    /// </summary>
    /// <param name="_approvalConfigRecId">
    /// The Workflow approval record ID associated to the configuration fields.
    /// </param>
    /// <param name="_documentTableId">
    /// The Workflow approval table ID associated to the configuration fields.
    /// </param>
    /// <param name="_documentFieldGroup">
    /// The Workflow approval field group associated to the configuration fields.
    /// </param>
    private static void loadDefaultOverviewFields(
        SysWindowsAppApprovalsConfigRecId   _approvalConfigRecId,
        WorkflowDocumentTableId             _documentTableId,
        str                                 _documentFieldGroup)
    {
        SysWindowsAppApprovalsConfig::loadDefaultFields(_approvalConfigRecId, _documentTableId, _documentFieldGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadDefaults</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the default configuration table for the Workflow approval.
    /// </summary>
    /// <param name="_force">
    /// true if the existing records should be deleted first before loading; otherwise, false.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void loadDefaults(boolean _force = false)
    {
        #AOT
        #Properties

        SysWindowsAppApprovalsConfig        approvalConfig;
        SysWindowsAppApprovalsConfigFields  approvalConfigFields;

        try
        {
            ttsBegin;
            if (_force)
            {
                delete_from approvalConfig;
                delete_from approvalConfigFields;
            }

            TreeNodeIterator    templateNodes   = TreeNode::findNode(#WorkflowApprovalTasksPath).AOTiterator();
            TreeNode            templateNode    = templateNodes.next();

            while (templateNode)
            {
                templateNode.AOTrefresh();

                //check to see if configuration key is enabled.
                str configKey = findProperty(templateNode.AOTgetProperties(), #PropertyConfigurationkey);

                if (isConfigurationkeyEnabled(configurationKeyName2Id(configKey)))
                {
                    var template = new SysDictWorkflowElement(WorkflowElementType::Approval, templateNode.AOTgetProperty(#PropertyName));

                    select firstOnly approvalConfig
                        where approvalConfig.ApprovalName == template.name();

                    if (!approvalConfig)
                    {
                        approvalConfig.initValue();
                        approvalConfig.ApprovalName         = template.name();
                        approvalConfig.ApprovalDisplayLabel = template.labelLabel();
                        approvalConfig.TileColor            = SysWindowsAppApprovalsConfig::getDefaultColor(approvalConfig.ApprovalName);

                        TableId templateTableId         = tableName2id(template.documentTableName());
                        var workflowSummaryFieldGroup   = new SysDictFieldGroup(templateTableId, identifierStr(WorkflowSummary));

                        if (workflowSummaryFieldGroup)
                        {
                            approvalConfig.TileStyle = SysWindowsApprovalsTileStyle::ValueUnitDescription;
                        }
                        else
                        {
                            approvalConfig.TileStyle = SysWindowsApprovalsTileStyle::TitleDescription;
                        }

                        approvalConfig.write();

                        // Populate the configuration fields
                        SysWindowsAppApprovalsConfig::loadDefaultSummaryFields(approvalConfig.RecId, templateTableId);

                        var workflowOverviewFieldGroup = new SysDictFieldGroup(templateTableId, identifierStr(WorkflowOverview));
                        FieldGroupName overviewFieldGroup;

                        if (workflowOverviewFieldGroup)
                        {
                            overviewFieldGroup = workflowOverviewFieldGroup.name();
                        }
                        else
                        {
                            overviewFieldGroup = template.documentPreviewFieldGroup();
                        }

                        SysWindowsAppApprovalsConfig::loadDefaultOverviewFields(approvalConfig.RecId, templateTableId, overviewFieldGroup);
                    }
                }

                templateNode = templateNodes.next();
            }

            ttsCommit;
        }
        catch
        {
            ttsAbort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadDefaultSummaryFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the default configuration fields for the summary of a given approval.
    /// </summary>
    /// <param name="_approvalConfigRecId">
    /// The Workflow approval record ID associated to the configuration fields.
    /// </param>
    /// <param name="_documentTableId">
    /// The Workflow approval table ID associated to the configuration fields.
    /// </param>
    private static void loadDefaultSummaryFields(SysWindowsAppApprovalsConfigRecId _approvalConfigRecId, WorkflowDocumentTableId _documentTableId)
    {
        SysWindowsAppApprovalsConfig::loadDefaultFields(_approvalConfigRecId, _documentTableId, identifierStr(WorkflowSummary));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SysWindowsApp</ConfigurationKey>
	<DeveloperDocumentation>@SYS4007917</DeveloperDocumentation>
	<Label>@SYS4007916</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ApprovalNameIdx</ClusteredIndex>
	<Modules>Project</Modules>
	<ReplacementKey>ApprovalNameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SystemTable>Yes</SystemTable>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TileColor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TileStyle</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalDisplayLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApprovalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TileColor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TileStyle</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApprovalDisplayLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LabelId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApprovalName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WorkflowApprovalName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TileColor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysColorHex</ExtendedDataType>
			<Label>@SYS4007918</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TileStyle</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SysWindowsApprovalsTileStyle</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ApprovalNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ApprovalName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>