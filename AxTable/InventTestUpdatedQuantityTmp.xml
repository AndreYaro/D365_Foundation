<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTestUpdatedQuantityTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTestUpdatedQuantityTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pdsCWTotalUpdatedQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total updated catch weight quantity for an instance of the <c>InventTestUpdatedQuantityTmp</c> temporary table.
    /// </summary>
    /// <param name="_inventTestUpdatedQuantityTmp">
    /// A <c>InventTestUpdatedQuantityTmp</c> temporary table buffer.
    /// </param>
    /// <returns>
    /// The total updated catch weight quantity for an instance of the <c>InventTestUpdatedQuantityTmp</c> temporary table.
    /// </returns>
    public static PdsCWInventQty pdsCWTotalUpdatedQuantity(InventTestUpdatedQuantityTmp _inventTestUpdatedQuantityTmp)
    {
        select sum(PdsCWUpdatedQuantity) from _inventTestUpdatedQuantityTmp;

        return _inventTestUpdatedQuantityTmp.PdsCWUpdatedQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerUpdatedQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers the stored updated quantity per inventory dimension.
    /// </summary>
    /// <param name="_inventTestUpdatedQuantityTmp">
    /// A <c>InventTestUpdatedQuantityTmp</c> temporary table buffer.
    /// </param>
    /// <param name="_inventDimId">
    /// An inventory dimension ID.
    /// </param>
    /// <param name="_updatedQuantity">
    /// An inventory quantity.
    /// </param>
    /// <param name="_cwUpdatedQuantity">
    /// A catch weight quantity.
    /// </param>
    public static void registerUpdatedQuantity(
        InventTestUpdatedQuantityTmp    _inventTestUpdatedQuantityTmp,
        InventDimId                     _inventDimId,
        InventQty                       _updatedQuantity
        , PdsCWInventQty                _cwUpdatedQuantity = 0
        )
    {
        ttsbegin;

        select forupdate _inventTestUpdatedQuantityTmp
            where _inventTestUpdatedQuantityTmp.InventDimId  == _inventDimId;

        _inventTestUpdatedQuantityTmp.InventDimId       = _inventDimId;
        _inventTestUpdatedQuantityTmp.UpdatedQuantity   += _updatedQuantity;
        _inventTestUpdatedQuantityTmp.PdsCWUpdatedQuantity += _cwUpdatedQuantity;
        _inventTestUpdatedQuantityTmp.write();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalUpdatedQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total updated quantity for an instance of the <c>InventTestUpdatedQuantityTmp</c>
    /// table.
    /// </summary>
    /// <param name="_inventTestUpdatedQuantityTmp">
    /// An <c>InventTestUpdatedQuantityTmp</c> buffer.
    /// </param>
    /// <returns>
    /// The total updated quantity for an instance of the <c>InventTestUpdatedQuantityTmp</c> table.
    /// </returns>
    public static InventQty totalUpdatedQuantity(InventTestUpdatedQuantityTmp _inventTestUpdatedQuantityTmp)
    {
        select sum(UpdatedQuantity) from _inventTestUpdatedQuantityTmp;

        return _inventTestUpdatedQuantityTmp.UpdatedQuantity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS335638</DeveloperDocumentation>
	<TableGroup>Transaction</TableGroup>
	<Visible>No</Visible>
	<ClusteredIndex>InventDimIdx</ClusteredIndex>
	<ReplacementKey>InventDimIdx</ReplacementKey>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWUpdatedQuantity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UpdatedQuantity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventDimIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>