<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanBoardTmpProcessJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanBoardTmpProcessJob extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>firstKanbanJobRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the record ID of the first kanban job of the kanban related to the current record.
    /// </summary>
    /// <param name="_leanKanbanJobType">
    /// The type of the kanban job to find.
    /// </param>
    /// <returns>
    /// A record ID of the <c>KanbanJob</c> table.
    /// </returns>
    public KanbanJobRefRecId firstKanbanJobRefRecId(LeanKanbanJobType _leanKanbanJobType)
    {
        Kanban      kanban;
        KanbanJob   firstKanbanJob;
        KanbanJob   kanbanJob;

        select firstonly RecId from firstKanbanJob
            order by Sequence
            where firstKanbanJob.Type == _leanKanbanJobType
            exists join kanban
                where kanban.RecId == firstKanbanJob.Kanban
                exists join kanbanJob
                    where kanbanJob.RecId  == this.Job
                       && kanbanJob.Kanban == kanban.RecId;

        return firstKanbanJob.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new records in this table by adding the kanban process jobs of the different statuses, by
    /// specifying the maximum number of desired records for some of them.
    /// </summary>
    /// <param name="_workCellFilterRecId">
    /// A work cell record identifier by which to filter.
    /// </param>
    /// <param name="_maxCompleted">
    /// The maximum number of completed kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxPlanned">
    /// The maximum number of planned kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxPrepared">
    /// The maximum number of prepared kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxInProgress">
    /// The maximum number of in-progress kanban jobs to retrieve.
    /// </param>
    public void init(
        WrkCtrResourceGroupRefRecId _workCellFilterRecId,
        int                         _maxCompleted,
        int                         _maxPlanned,
        int                         _maxPrepared,
        int                         _maxInProgress)
    {
        container results = KanbanBoardTmpProcessJob::processJobsServer(_workCellFilterRecId, _maxCompleted, _maxPlanned, _maxPrepared, _maxInProgress);
        this.populateTable(results);
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanban</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the related <c>Kanban</c> record.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that defines if the record must be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>Kanban</c> record.
    /// </returns>
    public Kanban kanban(boolean _forUpdate = false)
    {
        return Kanban::find(this.Kanban,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanbanJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the related <c>KanbanJob</c> record.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that defines if the record must be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>KanbanJob</c> record.
    /// </returns>
    public KanbanJob kanbanJob(boolean _forUpdate = false)
    {
        return KanbanJob::find(this.Job,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts new records to this table by adding the kanban process jobs from the container.
    /// </summary>
    /// <param name="_kanbanProcessJobs">
    /// A container with the job records of the kanban process to add to this table.
    /// </param>
    public void populateTable(container _kanbanProcessJobs)
    {
        int           currentRecord;
        int           numRecords;

        numRecords = conLen(_kanbanProcessJobs);
        for (currentRecord=1; currentRecord<=numRecords; currentRecord++)
        {
            this.clear();
            this.data(conPeek(_kanbanProcessJobs,currentRecord));
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>jobStatusImage</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Given the current job status type this method will return the appropriate symbol.
    /// </summary>
    /// <returns>
    ///     Container with the image for the current record.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display container jobStatusImage()
    {
        return KanbanJob::getJobStatusImage(this.Status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processJobsFromStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends to a container the kanban process jobs as retrieved from the <c>KanbanJobScheduleCard</c>
    /// query, that match the specified filters.
    /// </summary>
    /// <param name="_status">
    /// A kanban job status by which to filter.
    /// </param>
    /// <param name="_workCellFilterRecId">
    /// A work cell record identifier by which to filter.
    /// </param>
    /// <param name="_maxRecords">
    /// The maximum number of records to retrieve.
    /// </param>
    /// <param name="_targetContainer">
    /// A container to which to append the kanban process jobs.
    /// </param>
    /// <returns>
    /// The container with the required kanban process jobs appended.
    /// </returns>
    public static container processJobsFromStatus(
        LeanKanbanJobStatus         _status,
        WrkCtrResourceGroupRefRecId _workCellFilterRecId,
        int                         _maxRecords,
        container                   _targetContainer)
    {
        QueryRun queryRun = KanbanBoardTmpProcessJob::initQueryRun(_status, _workCellFilterRecId, _maxRecords);

        // Fill the table from the results of the query
        while (queryRun.next())
        {
            _targetContainer += KanbanBoardTmpProcessJob::initKanbanBoardTmpProcessJob(queryRun);
        }

        return _targetContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initKanbanBoardTmpProcessJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fields of the buffer with the result of the query.
    /// </summary>
    /// <param name = "_queryrun"> The current query run result. </param>
    /// <returns> Returns a <c>KanbanBoardTmpProcessJob</c> object bo be added on the container. </returns>
    protected static KanbanBoardTmpProcessJob initKanbanBoardTmpProcessJob(QueryRun _queryRun)
    {
        Kanban              kanban              = _queryRun.get(tableNum(Kanban));
        KanbanJob           kanbanJob           = _queryRun.get(tableNum(KanbanJob));
        KanbanJobSchedule   kanbanJobSchedule   = _queryRun.get(tableNum(KanbanJobSchedule));
        WrkCtrResourceGroup wrkCtrResourceGroup = _queryRun.get(tableNum(WrkCtrResourceGroup));

        KanbanRule      kanbanRule        = KanbanRule::find(kanban.KanbanRule);
        KanbanRuleFixed kanbanRuleFixed   = KanbanRuleFixed::findParentRecId(kanbanRule.RecId);
        InventTable     inventTable       = InventTable::find(kanban.ItemId);
        
        
        KanbanBoardTmpProcessJob    kanbanBoardTmpProcessJob;
        kanbanBoardTmpProcessJob.clear();
        kanbanBoardTmpProcessJob.Kanban                  = kanban.RecId;
        kanbanBoardTmpProcessJob.KanbanRule              = kanban.KanbanRule;
        kanbanBoardTmpProcessJob.ItemId                  = kanban.ItemId;
        kanbanBoardTmpProcessJob.InventDimId             = kanban.InventDimId;
        kanbanBoardTmpProcessJob.Express                 = kanban.Express;
        kanbanBoardTmpProcessJob.KanbanId                = kanban.KanbanId;
        kanbanBoardTmpProcessJob.CardId                  = kanban.KanbanCardId;
        kanbanBoardTmpProcessJob.QuantityOrdered         = kanbanJob.QuantityOrdered;
        kanbanBoardTmpProcessJob.Status                  = kanbanJob.Status;
        kanbanBoardTmpProcessJob.Job                     = kanbanJob.RecId;
        kanbanBoardTmpProcessJob.ExpectedDateTime        = kanbanJob.ExpectedDateTime;
        kanbanBoardTmpProcessJob.DueDateTime             = kanbanJob.DueDateTime;
        kanbanBoardTmpProcessJob.ActualEndDateTime       = kanbanJob.ActualEndDateTime;
        kanbanBoardTmpProcessJob.PlannedPeriod           = kanbanJobSchedule.PlannedPeriod;
        kanbanBoardTmpProcessJob.Sequence                = kanbanJobSchedule.Sequence;
        kanbanBoardTmpProcessJob.ActivityName            = kanbanJob.PlanActivityName;
        kanbanBoardTmpProcessJob.ReceiptInventLocationId = kanbanJob.InventLocationId;
        kanbanBoardTmpProcessJob.ReceiptWMSLocationId    = kanbanJob.wmsLocationId;
        kanbanBoardTmpProcessJob.ItemName                = inventTable.defaultProductName();
        kanbanBoardTmpProcessJob.Color                   = kanbanJob.LeanScheduleGroupColor;
        kanbanBoardTmpProcessJob.ScheduleGroupName       = kanbanJob.LeanScheduleGroupName;
        kanbanBoardTmpProcessJob.WorkCell                = wrkCtrResourceGroup.WrkCtrId;
        kanbanBoardTmpProcessJob.IsOverdue               = KanbanJob::isOverdue(
                                                                            kanbanJob.DueDateTime,
                                                                            kanbanJob.ExpectedDateTime,
                                                                            kanbanJob.Status,
                                                                            kanbanRule.ReplenishmentStrategy,
                                                                            kanbanRuleFixed.ReplenishmentLeadTime);

        return kanbanBoardTmpProcessJob;

    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the query run to be run.
    /// </summary>
    /// <param name = "_status"> The Kanban Job status. </param>
    /// <param name = "_workCellFilterRecId"> The Kanban job schedule WrkCtrResourceGroupRefRecId record. </param>
    /// <param name = "_maxRecords"> The number of maximum records. </param>
    /// <returns> The <c>QueryRun</c> object to be run. </returns>
    protected static QueryRun initQueryRun(LeanKanbanJobStatus _status, WrkCtrResourceGroupRefRecId _workCellFilterRecId, int _maxRecords)
    {        
        QueryBuildDataSource        kanbanJobSchedule_ds;
        QueryBuildDataSource        kanbanJob_ds;
        QueryBuildDataSource        kanban_ds;
        QueryBuildDataSource        wrkCtrResourceGroup_ds;
        QueryBuildRange             queryBuildRange;

        QueryRun queryRun = new QueryRun(queryStr(KanbanJobScheduleCard));

        if (_maxRecords != 0)
        {
            queryRun.enablePositionPaging(true);
            queryRun.addPageRange(1,_maxRecords);
        }

        kanbanJobSchedule_ds = queryRun.query().dataSourceTable(tableNum(KanbanJobSchedule));
        kanbanJobSchedule_ds.fields().clearFieldList();
        kanbanJobSchedule_ds.fields().addField(fieldNum(KanbanJobSchedule, PlannedPeriod));
        kanbanJobSchedule_ds.fields().addField(fieldNum(KanbanJobSchedule, Sequence));

        kanbanJob_ds = queryRun.query().dataSourceTable(tableNum(KanbanJob));
        kanbanJob_ds.fields().clearFieldList();
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, RecId));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, Status));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, RecId));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, LeanScheduleGroupColor));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, LeanScheduleGroupName));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, QuantityOrdered));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, DueDateTime));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, ExpectedDateTime));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, ActualEndDateTime));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, PlanActivityName));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, InventLocationId));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, wmsLocationId));
        kanbanJob_ds.fields().addField(fieldNum(KanbanJob, wmsLocationDataAreaId));

        kanban_ds = queryRun.query().dataSourceTable(tableNum(Kanban));
        kanban_ds.fields().clearFieldList();
        kanban_ds.fields().addField(fieldNum(Kanban, RecId));
        kanban_ds.fields().addField(fieldNum(Kanban, Express));
        kanban_ds.fields().addField(fieldNum(Kanban, ItemId));
        kanban_ds.fields().addField(fieldNum(Kanban, KanbanRule));
        kanban_ds.fields().addField(fieldNum(Kanban, InventDimId));
        kanban_ds.fields().addField(fieldNum(Kanban, KanbanCardId));
        kanban_ds.fields().addField(fieldNum(Kanban, KanbanId));

        wrkCtrResourceGroup_ds = queryRun.query().dataSourceTable(tableNum(WrkCtrResourceGroup));
        wrkCtrResourceGroup_ds.fields().clearFieldList();
        wrkCtrResourceGroup_ds.fields().addField(fieldNum(WrkCtrResourceGroup, RecId));
        wrkCtrResourceGroup_ds.fields().addField(fieldNum(WrkCtrResourceGroup, WrkCtrId));

        queryBuildRange = kanbanJob_ds.addRange(fieldNum(KanbanJob, Type));
        queryBuildRange.value(queryValue(LeanKanbanJobType::Process));
        queryBuildRange = kanbanJob_ds.addRange(fieldNum(KanbanJob, Status));
        queryBuildRange.value(queryValue(_status));

        if (_workCellFilterRecId)
        {
            queryBuildRange = kanbanJobSchedule_ds.addRange(fieldNum(KanbanJobSchedule, WorkCell));
            queryBuildRange.value(queryValue(_workCellFilterRecId));
        }

        // Completed jobs are sorted by recently completed, not sequence
        queryRun.query().clearOrderBy();
        if (_status == LeanKanbanJobStatus::Completed)
        {
            kanbanJob_ds.addOrderByField(fieldNum(KanbanJob, ActualEndDateTime), SortOrder::Descending);
        }
        else
        {
            kanbanJobSchedule_ds.addOrderByField(fieldNum(KanbanJobSchedule, PlannedPeriod), SortOrder::Ascending);
            kanbanJobSchedule_ds.addOrderByField(fieldNum(KanbanJobSchedule, Sequence), SortOrder::Ascending);
        }
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processJobsServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a container by adding the kanban process jobs of the different statuses, by specifying the
    /// maximum number of desired records for some of them.
    /// </summary>
    /// <param name="_workCellFilterRecId">
    /// A work cell record identifier by which to filter.
    /// </param>
    /// <param name="_maxCompleted">
    /// The maximum number of completed kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxPlanned">
    /// The maximum number of planned kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxPrepared">
    /// The maximum number of prepared kanban jobs to retrieve.
    /// </param>
    /// <param name="_maxInProgress">
    /// The maximum number of in-progress kanban jobs to retrieve.
    /// </param>
    /// <returns>
    /// The container with the required kanban process jobs.
    /// </returns>
    public static container processJobsServer(
        WrkCtrResourceGroupRefRecId _workCellFilterRecId,
        int                         _maxCompleted,
        int                         _maxPlanned,
        int                         _maxPrepared,
        int                         _maxInProgress)
    {
        container results = conNull();

        if (_maxCompleted > 0)
        {
            // Completed results are taken in descending sort and reverse order to get the most recent N completed jobs
            results = KanbanBoardTmpProcessJob::processJobsFromStatus(LeanKanbanJobStatus::Completed, _workCellFilterRecId,_maxCompleted,results);
            results = conReverse(results);
        }

        if (_maxInProgress > 0)
        {
            results = KanbanBoardTmpProcessJob::processJobsFromStatus(LeanKanbanJobStatus::InProgress, _workCellFilterRecId,_maxInProgress,results);
        }

        if (_maxPrepared > 0)
        {
            results = KanbanBoardTmpProcessJob::processJobsFromStatus(LeanKanbanJobStatus::Prepared, _workCellFilterRecId,_maxPrepared,results);
        }

        if (_maxPlanned > 0)
        {
            results = KanbanBoardTmpProcessJob::processJobsFromStatus(LeanKanbanJobStatus::Planned, _workCellFilterRecId,_maxPlanned,results);
        }

        return results;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<Label>@SYS133267</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>JobDetails</Name>
			<Label>@SYS131642</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CardId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScheduleGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptWMSLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PlanActivityName</ExtendedDataType>
			<Label>@SYS302381</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ActualEndDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanJobEndDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KanbanId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CardId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanCardId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Color</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LeanScheduleGroupColor</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DueDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanJobDueDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpectedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanJobExpectedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Express</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanExpress</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>IconImage</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LeanKanbanJobIcon</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverdue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS131642</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Kanban</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KanbanRule</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS131579</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PlannedPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanJobSchedulePlannedPeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityOrdered</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>KanbanJobQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptInventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptWMSLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Label>@SYS131934</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ScheduleGroupName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LeanScheduleGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Sequence</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@SYS131666</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>LeanKanbanJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkCell</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WrkCtrGroupId</ExtendedDataType>
			<Label>@SYS131859</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventDim</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Item</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Kanban</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Kanban</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Kanban</Name>
					<Field>Kanban</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KanbanCard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanCard</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Card</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CardId</Name>
					<Field>CardId</Field>
					<RelatedField>CardId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KanbanJob</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanJob</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KanbanJobSchedule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanJobSchedule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PlannedPeriod</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlannedPeriod</Name>
					<Field>PlannedPeriod</Field>
					<RelatedField>PlannedPeriod</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Sequence</Name>
					<Field>Sequence</Field>
					<RelatedField>Sequence</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KanbanRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanRule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KanbanRule</Name>
					<Field>KanbanRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReceiptInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReceiptInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanBoardTmpProcessJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiptInventLocationId</Name>
					<Field>ReceiptInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReceiptWMSLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReceiptWMSLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiptInventLocationId</Name>
					<Field>ReceiptInventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiptWMSLocationId</Name>
					<Field>ReceiptWMSLocationId</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>