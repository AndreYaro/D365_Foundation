<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerInterCompany</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerInterCompany extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>impliedDataAreaFieldNameDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(DimensionObjectStorageTableReferenceProcessor), delegatestr(DimensionObjectStorageTableReferenceProcessor, impliedDataAreaFieldNameDelegate))]
    static void impliedDataAreaFieldNameDelegate(TableId _tableId, FieldId _fieldId, EventHandlerResult _result)
    {
        if (_tableId == tableNum(LedgerInterCompany))
        {
            switch(_fieldId)
            {
                case(fieldNum(LedgerInterCompany, CreditLedgerDimension)):
                case(fieldNum(LedgerInterCompany, DebitLedgerDimension)):
                    _result.result(fieldStr(LedgerInterCompany, Company));
                    break;
                case(fieldNum(LedgerInterCompany, DestinationCreditLedgerDimension)):
                case(fieldNum(LedgerInterCompany, DestinationDebitLedgerDimension)):
                    _result.result(fieldStr(LedgerInterCompany, DestinationCompany));
                    break;
                case(fieldNum(LedgerInterCompany, OriginatingCreditLedgerDimension)):
                case(fieldNum(LedgerInterCompany, OriginatingDebitLedgerDimension)):
                    _result.result(fieldStr(LedgerInterCompany, OriginatingCompany));
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the journal name.
    /// </summary>
    /// <param name = "_ledgerJournalName">The journal name.</param>
    /// <param name = "_companyId">The company id.</param>
    /// <returns>True if the journal name is valid for the company; otherwise, false.</returns>
    public boolean checkJournalName(
        LedgerJournalNameId _ledgerJournalName = this.JournalName,
        CompanyId _companyId = this.DestinationCompany)
    {
        LedgerJournalName ledgerJournalName;
        boolean           ok = true;

        if (!xDataArea::exist(_companyId))
        {
            return checkFailed(strfmt("@SYS10666",_companyId));
        }

        changecompany(_companyId)
        {
            ledgerJournalName = LedgerJournalName::find(_ledgerJournalName);
            if (! ledgerJournalName.RecId)
            {
                ok = checkFailed(strfmt("@SYS25355",_ledgerJournalName, _companyId));
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>originatingCompanyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The originating company name.
    /// </summary>
    /// <returns>The originating company name.</returns>
    public display CompanyName originatingCompanyName()
    {
        DataArea dataArea = xDataArea::find(this.OriginatingCompany);

        return dataArea.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>destinationCompanyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The destination company name.
    /// </summary>
    /// <returns>The destination company name.</returns>
    public display CompanyName destinationCompanyName()
    {
        DataArea dataArea = xDataArea::find(this.DestinationCompany);

        return dataArea.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCashDiscPostOptions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves either the customer or vendor cash discount posting options for the specified parameters.
    /// </summary>
    /// <param name="_module">
    ///    The module that is used to determine the correct posting option to retrieve.
    /// </param>
    /// <returns>
    ///    The <c>CustVendSettleCompanyPostOption</c> enumeration value for the cash discount posting.
    /// </returns>
    /// <remarks>
    ///    Returns the <c>CustCashDiscPostOption</c> field if the module is a customer module; otherwise,
    ///    returns the <c>VendCashDiscPostOption</c> field.
    /// </remarks>
    public CustVendSettleCompanyPostOption getCashDiscPostOptions(SysModule _module)
    {
        CustVendSettleCompanyPostOption postOption;

        if (_module == SysModule::Cust)
        {
            postOption = this.CustCashDiscPostOption;
        }
        else
        {
            postOption = this.VendCashDiscPostOption;
        }

        return postOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyExchPostOptions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves either the customer or vendor currency exchange posting options for the specified
    ///    parameters.
    /// </summary>
    /// <param name="_module">
    ///    The module that is used to determine the correct posting option to retrieve.
    /// </param>
    /// <returns>
    ///    The <c>CustVendSettleCompanyPostOption</c> enumeration value for the currency exchange posting.
    /// </returns>
    /// <remarks>
    ///    Returns the <c>CustCurrencyExchPostOption</c> field if the module is a customer module; otherwise,
    ///    returns the <c>VendCurrencyExchPostOption</c> field.
    /// </remarks>
    public CustVendSettleCompanyPostOption getCurrencyExchPostOptions(SysModule _module)
    {
        CustVendSettleCompanyPostOption postOption;

        if (_module == SysModule::Cust)
        {
            postOption = this.CustCurrencyExchPostOption;
        }
        else
        {
            postOption = this.VendCurrencyExchPostOption;
        }

        return postOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFinePostOptions_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets either the customer or vendor Fine posting options for the specified parameters.
    /// </summary>
    /// <param name="_module">
    /// The module used to determine the correct posting option to return.
    /// </param>
    /// <returns>
    /// The CustVendSettleCompanyPostOption enum for the Fine posting.
    /// </returns>
    /// <remarks>
    /// Will return the value in the CustPostFinInterestOption field if the module is customer; otherwise, it returns the
    /// VendPostFinInterestOption field.
    /// </remarks>
    public CustVendSettleCompanyPostOption getFinePostOptions_BR(SysModule _module)
    {
        CustVendSettleCompanyPostOption postOption;

        if (_module == SysModule::Cust)
        {
            postOption = this.CustPostFineOption_BR;
        }
        else
        {
            postOption = this.VendPostFineOption_BR;
        }

        return postOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFinInterestPostOptions_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets either the customer or vendor Interest posting options for the specified parameters.
    /// </summary>
    /// <param name="_module">
    /// The module used to determine the correct posting option to return.
    /// </param>
    /// <returns>
    /// The CustVendSettleCompanyPostOption enum for the Interest posting.
    /// </returns>
    /// <remarks>
    /// Will return the value in the CustPostFinInterestOption field if the module is customer; otherwise, it returns the
    /// VendPostFinInterestOption field.
    /// </remarks>
    public CustVendSettleCompanyPostOption getFinInterestPostOptions_BR(SysModule _module)
    {
        CustVendSettleCompanyPostOption postOption;

        if (_module == SysModule::Cust)
        {
            postOption = this.CustPostFinInterestOption_BR;
        }
        else
        {
            postOption = this.VendPostFinInterestOption_BR;
        }

        return postOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInterestPostOptions_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets either the customer or vendor Interest posting options for the specified parameters.
    /// </summary>
    /// <param name="_module">
    /// The module used to determine the correct posting option to return.
    /// </param>
    /// <returns>
    /// The CustVendSettleCompanyPostOption enum for the Interest posting.
    /// </returns>
    /// <remarks>
    /// Will return the value in the CustPostFinInterestOption field if the module is customer; otherwise, it returns the
    /// VendPostFinInterestOption field.
    /// </remarks>
    public CustVendSettleCompanyPostOption getInterestPostOptions_BR(SysModule _module)
    {
        CustVendSettleCompanyPostOption postOption;

        if (_module == SysModule::Cust)
        {
            postOption = this.CustPostFinInterestOption_BR;
        }
        else
        {
            postOption = this.VendPostFinInterestOption_BR;
        }

        return postOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId field)
    {
        boolean ok = super(field);

        if (ok)
        {
            switch (field)
            {
                case fieldnum(LedgerInterCompany,JournalName) :
                    ok = this.checkJournalName(this.JournalName, this.DestinationCompany);
                    break;

                case fieldnum(LedgerInterCompany, OriginatingCompany) :
                    ok = xDataArea::checkAccessible(this.OriginatingCompany);
                    break;

                case fieldnum(LedgerInterCompany, DestinationCompany) :
                    ok = xDataArea::checkAccessible(this.DestinationCompany);
                    break;
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistForCompanyPair</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for existence of the originating/destination company pair.
    /// </summary>
    /// <param name = "_originatingCompany">The source company id.</param>
    /// <param name = "_destinationCompany">The destination company id.</param>
    /// <returns>True if the company pairs exists; otherwise, false.</returns>
    public static boolean checkExistForCompanyPair(
        CompanyId _originatingCompany,
        CompanyId _destinationCompany)
    {
        boolean ret = true;

        if (!LedgerInterCompany::existForCompanyPair(_originatingCompany, _destinationCompany))
        {
            ret = checkFailed(strfmt(LedgerInterCompany::txtNotExist(), _originatingCompany, _destinationCompany));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForCompanyPair</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for existence of the originating/destination company pair.
    /// </summary>
    /// <param name = "_originatingCompany">The originating company id.</param>
    /// <param name = "_destinationCompany">The destination company id.</param>
    /// <returns>True if the company pair exists; otherwise, false.</returns>
    public static boolean existForCompanyPair(CompanyId _originatingCompany, CompanyId _destinationCompany)
    {
        boolean found;

        found = (
            select firstonly RecId
                from ledgerInterCompany
                    where ledgerInterCompany.DestinationCompany == _destinationCompany &&
                        ledgerInterCompany.OriginatingCompany == _originatingCompany).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCompanyPair</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>LedgerInterCompany</c> record for the specified values.
    /// </summary>
    /// <param name = "_originatingCompany">The originating company id.</param>
    /// <param name = "_destinationCompany">The destination company id.</param>
    /// <param name = "_forupdate">True to select for update; otherwise, false (default value is false).</param>
    /// <param name = "_concurrencyModel">The concurrency model (default value is Auto).</param>
    /// <returns>The <c>LedgerInterCompany</c> record.</returns>
    public static LedgerInterCompany findCompanyPair(
        CompanyId _originatingCompany,
        CompanyId _destinationCompany,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerInterCompany ledgerInterCompany;

        ledgerInterCompany.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerInterCompany.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerInterCompany
            where ledgerInterCompany.OriginatingCompany == _originatingCompany &&
                ledgerInterCompany.DestinationCompany == _destinationCompany;

        return ledgerInterCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginatingCompanyLedgerDimensionWithAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the originating company debit or credit account using the transaction amount as a basis to determine the account to retrieve
    /// for the company pair.
    /// </summary>
    /// <param name = "_amount">The amount used to determine retrieval of debit or credit account.</param>
    /// <param name = "_originatingCompany">The originating company id.</param>
    /// <param name = "_destinationCompany">The destination company id.</param>
    /// <returns>The debit account for the originating company if the amount is of debit; otherwise, the credit account.</returns>
    public static LedgerDimensionDefaultAccount getOriginatingCompanyLedgerDimensionWithAmount(
        Amount _amount,
        CompanyId _originatingCompany,
        CompanyId _destinationCompany)
    {
        LedgerDimensionDefaultAccount ledgerDimension;

        if (_amount >= 0)
        {
            ledgerDimension = LedgerInterCompany::findCompanyPair(_originatingCompany, _destinationCompany).OriginatingDebitLedgerDimension;
        }
        else
        {
            ledgerDimension = LedgerInterCompany::findCompanyPair(_originatingCompany, _destinationCompany).OriginatingCreditLedgerDimension;
        }

        return ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDestinationCompanyLedgerDimensionWithAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the destination company debit or credit account using the transaction amount as a basis to determine the account to retrieve
    /// for the company pair.
    /// </summary>
    /// <param name = "_amount">The amount used to determine retrieval of debit or credit account.</param>
    /// <param name = "_originatingCompany">The originating company id.</param>
    /// <param name = "_destinationCompany">The destination company id.</param>
    /// <returns>The debit account for the destination company if the amount is of debit; otherwise, the credit account.</returns>
    public static LedgerDimensionDefaultAccount getDestinationCompanyLedgerDimensionWithAmount(
        Amount _amount,
        CompanyId _originatingCompany,
        CompanyId _destinationCompany)
    {
        LedgerDimensionDefaultAccount ledgerDimension;

        if (_amount >= 0)
        {
            ledgerDimension = LedgerInterCompany::findCompanyPair(_originatingCompany, _destinationCompany).DestinationDebitLedgerDimension;
        }
        else
        {
            ledgerDimension = LedgerInterCompany::findCompanyPair(_originatingCompany, _destinationCompany).DestinationCreditLedgerDimension;
        }

        return ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS113857";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ok = super();

        if (this.OriginatingCompany == this.DestinationCompany)
        {
            ok = checkFailed("@Ledger:IntercompanyPairSameValues");
        }

        ok = ok && this.checkJournalName(this.JournalName, this.DestinationCompany);

        ok = ok && xDataArea::checkAccessible(this.OriginatingCompany);

        ok = ok && xDataArea::checkAccessible(this.DestinationCompany);

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAllDestinationCompanies</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is finding all of the destination companies for the current company.
    /// </summary>
    /// <param name = "_dataArea">The originating company id.</param>   
    /// <returns>Returns list of all of the destination companies for the current company.</returns>
    public static List findAllDestinationCompanies(SelectableDataArea _dataArea = curExt())
    {
        LedgerInterCompany   ledgerInterCompany;
        List                 destinationCompaniesList = new List(Types::String);

        while select DestinationCompany from ledgerInterCompany
            where ledgerInterCompany.OriginatingCompany == _dataArea
                && ledgerInterCompany.DestinationCompany != _dataArea                   
        {            
            destinationCompaniesList.addEnd(ledgerInterCompany.DestinationCompany);
        }
        return destinationCompaniesList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdvIntercompanyAccounting</ConfigurationKey>
	<DeveloperDocumentation>@SYS125927</DeveloperDocumentation>
	<FormRef>LedgerInterCompany</FormRef>
	<Label>@SYS3805</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>OriginatingCompany</TitleField1>
	<TitleField2>DestinationCompany</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CompanyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>CompanyIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OriginatingCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginatingCreditLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginatingDebitLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationCreditLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationDebitLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OriginatingAccounts</Name>
			<Label>@SYS11800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OriginatingCreditLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginatingDebitLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DestinationAccounts</Name>
			<Label>@SYS11800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DestinationCreditLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationDebitLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustSettle</Name>
			<Label>@SYS106986</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustCashDiscPostOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustCurrencyExchPostOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPostFinInterestOption_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPostFineOption_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OriginatingCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationCompany</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journal</Name>
			<Label>@SYS6790</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendSettle</Name>
			<Label>@SYS106987</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendCashDiscPostOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendCurrencyExchPostOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPostFinInterestOption_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPostFineOption_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginatingCompany</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Ledger:OriginatingCompany</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestinationCompany</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Ledger:DestinationCompany</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginatingCreditLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS3965</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginatingDebitLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS15996</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DestinationCreditLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS3965</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DestinationDebitLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS15996</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS303387</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CreditLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS3965</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DebitLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@SYS15996</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustCashDiscPostOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS106988</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustCurrencyExchPostOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS106989</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustPostFineOption_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS50810</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustPostFinInterestOption_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS50807</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalNameIdIntercompany</ExtendedDataType>
			<Label>@SYS6790</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendCashDiscPostOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS106988</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendCurrencyExchPostOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS106989</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendPostFineOption_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS50810</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendPostFinInterestOption_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS50807</Label>
			<EnumType>CustVendSettleCompanyPostOption</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CompanyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OriginatingCompany</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DestinationCompany</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OriginatingCreditLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OriginatingCreditLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OriginatingDebitLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OriginatingDebitLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DestinationCreditLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DestinationCreditLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DestinationDebitLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DestinationDebitLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginatingCreditLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OriginatingCreditLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerInterCompany</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginatingCreditLedgerDimension</Name>
					<Field>OriginatingCreditLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginatingDebitLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OriginatingDebitLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerInterCompany</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginatingDebitLedgerDimension</Name>
					<Field>OriginatingDebitLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DestinationCreditLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DestinationCreditLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerInterCompany</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationCreditLedgerDimension</Name>
					<Field>DestinationCreditLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DestinationDebitLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DestinationDebitLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerInterCompany</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationDebitLedgerDimension</Name>
					<Field>DestinationDebitLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS125928</EntityRelationshipRole>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JournalName</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerInterCompany</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationCompany</Name>
					<Field>DestinationCompany</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalName</Name>
					<Field>JournalName</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OriginatingCompany</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginatingCompany</Name>
					<Field>OriginatingCompany</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual</Name>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DestinationCompany</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationCompany</Name>
					<Field>DestinationCompany</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual</Name>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CreditLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CreditLedgerDimension</Name>
					<Field>CreditLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DebitLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DebitLedgerDimension</Name>
					<Field>DebitLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>