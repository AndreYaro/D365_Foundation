<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSTmpNumberSequenceExtSegment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSTmpNumberSequenceExtSegment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method of the segment length field.
    /// </summary>
    /// <returns>
    /// Segment length.
    /// </returns>
    public display Integer displayLength()
    {
        return strLen(this.DisplayValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        WHSTmpNumberSequenceExtSegment tmpNumberSequenceExtSegmentLocal;

        super();

        tmpNumberSequenceExtSegmentLocal.setTmpData(this);

        select firstonly maxof(LineNum) from tmpNumberSequenceExtSegmentLocal;

        this.LineNum = tmpNumberSequenceExtSegmentLocal.LineNum + 1;
        this.SegmentType = WHSNumberSequenceExtSegmentType::Constant;
        this.DisplayValue = WHSNumberSeqExtSegmentTypeHandler::singletonFromType(this.SegmentType).getDefaultDisplayValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSTmpNumberSequenceExtSegment, SegmentType):
                this.DisplayValue = WHSNumberSeqExtSegmentTypeHandler::singletonFromType(this.SegmentType).getDefaultDisplayValue();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSTmpNumberSequenceExtSegment, DisplayValue):
                ret = WHSNumberSeqExtSegmentTypeHandler::singletonFromType(this.SegmentType).checkDisplayValue(this.DisplayValue) && ret;
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSTmpNumberSequenceExtSegment_DeveloperDocumantation</DeveloperDocumentation>
	<Label>@WAX:NumberSequenceExtensionSegments</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>SegmentType</TitleField1>
	<TitleField2>DisplayValue</TitleField2>
	<PrimaryIndex>LineNumIdx</PrimaryIndex>
	<ReplacementKey>LineNumIdx</ReplacementKey>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SegmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SegmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SegmentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS321060</Label>
			<EnumType>WHSNumberSequenceExtSegmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DisplayValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS321061</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@WAX148</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>