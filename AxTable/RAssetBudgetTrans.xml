<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetBudgetTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetBudgetTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOffsetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// return ledger dimension account for the current LedgerJournalTrans table record
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// the current LedgerJournalTrans table record
    /// </param>
    /// <returns>
    /// ledger dimension account
    /// </returns>
    public LedgerDimensionAccount findOffsetLedgerDimension(LedgerJournalTrans _ledgerJournalTrans)
    {
        LedgerDimensionAccount offsetLedgerDimension;

        if (_ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
        {
            offsetLedgerDimension = _ledgerJournalTrans.OffsetLedgerDimension;
        }
        else
        {
            // Offset account type is not ledger, need to get default account & merge with dimensions
            LedgerJournalTrans ledgerJournalTransSwapped = _ledgerJournalTrans.data();
            ledgerJournalTransSwapped.swapAccountOffsetAccount();

            LedgerJournalTransUpdate ledgerJournalTransUpdate = LedgerJournalTransUpdate::construct(ledgerJournalTransSwapped);
            LedgerDimensionDefaultAccount defaultAccount = ledgerJournalTransUpdate.ledgerDimension(ledgerJournalTransSwapped);

            List dimensionSources = new List(Types::Class);
            dimensionSources.addEnd(LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(ledgerJournalTransSwapped.DefaultDimension));

            offsetLedgerDimension = LedgerDimensionDefaultingEngine::createLedgerDimension(defaultAccount, dimensionSources);
        }

        return offsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    public void initFromLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        LedgerJournalTrans_RAsset ledgerJournalTrans_RAsset = LedgerJournalTrans_RAsset::find(_ledgerJournalTrans.RecId);
        RAssetStandards assetStandards = RAssetStandards::find(ledgerJournalTrans_RAsset.AssetId, ledgerJournalTrans_RAsset.StandardId);

        this.BudgetModel = ledgerJournalTrans_RAsset.BudgetModel;
        this.AssetTransType = ledgerJournalTrans_RAsset.TransType;
        this.TransDate = _ledgerJournalTrans.TransDate;
        this.AssetId = ledgerJournalTrans_RAsset.AssetId;
        this.AmountCur = _ledgerJournalTrans.amount();
        this.CurrencyCode = _ledgerJournalTrans.CurrencyCode;
        this.Txt = _ledgerJournalTrans.Txt;
        this.AssetBudgetPostingStatus = RAssetBudgetPostingStatus::Notposted;
        this.AssetStandardId = ledgerJournalTrans_RAsset.StandardId;
        this.AssetDeprPeriod = ledgerJournalTrans_RAsset.DeprPeriod;
        this.LedgerDimension = LedgerDimensionFacade::serviceCreateLedgerDimension(assetStandards.assetLedgerDimension(ledgerJournalTrans_RAsset.StandardId, _ledgerJournalTrans.PostingProfile, ledgerJournalTrans_RAsset.TransType), _ledgerJournalTrans.DefaultDimension, assetStandards.defaultDimension(_ledgerJournalTrans.TransDate));
        this.OffsetLedgerDimension = this.findOffsetLedgerDimension(_ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean isValid = super();

        if (isValid)
        {
            BudgetTransactionLine budgetTrans;
            select firstonly RecId from budgetTrans
                where budgetTrans.AssetBudget_RU == this.RecId;

            if (budgetTrans.RecId != 0)
            {
                isValid = checkFailed(strFmt("@SYS71084", this.AssetId, this.BudgetModel, this.TransDate));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the existence of  the RAssetBudgetTrans table record.
    /// </summary>
    /// <param name="_recId">
    /// The record id of RAssetBudgetTrans table to find.
    /// </param>
    /// <returns>
    /// a boolean sign, true - if the RAssetBudgetTrans record exists
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return (select firstonly RecId from rAssetBudgetTrans
            where rAssetBudgetTrans.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RAssetBudgetTrans table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The record id of RAssetBudgetTrans table to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing RAssetBudgetTrans table.
    /// </returns>
    public static RAssetBudgetTrans find(RecId _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        RAssetBudgetTrans budgetTrans;

        budgetTrans.selectForUpdate(_forupdate);

        if (_forupdate
            && _concurrencyModel != ConcurrencyModel::Auto)
        {
            budgetTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly budgetTrans
            where budgetTrans.RecId == _recId;

        return budgetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRange</Name>
				<Source><![CDATA[
    public static RAssetBudgetTrans findRange(RAssetId _assetId,
        RAssetTransType _assetTransType,
        RAssetStandardId _assetStandardId = '',
        RAssetBudgetModelId _assetBudgerModelId = '')
    {
        RAssetBudgetTrans assetBudgetTrans;

        if (_assetId
            && _assetTransType)
        {
            select firstonly assetBudgetTrans
                where assetBudgetTrans.AssetId == _assetId
                    && assetBudgetTrans.AssetTransType == _assetTransType
                    && (! _assetStandardId
                        || assetBudgetTrans.AssetStandardId == _assetStandardId)
                    && (! _assetBudgerModelId
                        || assetBudgetTrans.BudgetModel == _assetBudgerModelId);
        }

        return assetBudgetTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS127337</DeveloperDocumentation>
	<FormRef>RAssetBudgetTrans</FormRef>
	<Label>@GLS116425</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>BudgetModel</TitleField2>
	<ClusteredIndex>ModelAssetIdx</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetModel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FixedAssets</Name>
			<Label>@SYS12578</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetModel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetStandardId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@GLS101101</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDeprPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@GLS101412</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetBudgetPostingStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetBudgetPostingStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>RAssetBudgetPostingStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AssetDeprPeriod</Name>
			<ExtendedDataType>RAssetTransDate</ExtendedDataType>
			<Label>@SYS67451</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<ExtendedDataType>RAssetId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetStandardId</Name>
			<ExtendedDataType>RAssetStandardId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetTransType</Name>
			<EnumType>RAssetTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BudgetModel</Name>
			<ExtendedDataType>RAssetBudgetModelId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>RAssetTransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<ExtendedDataType>BudgetComment</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModelAssetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetModel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BudgetModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetModel</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetModel</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<SourceEDT>RAssetBudgetModelId</SourceEDT>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetModel</Name>
					<Field>BudgetModel</Field>
					<RelatedField>ModelId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetStandards</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetStandards</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetStandards</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetStandardId</Name>
					<Field>AssetStandardId</Field>
					<RelatedField>AssetStandardId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetStandardTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAssetStandardTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetStandardId</Name>
					<SourceEDT>RAssetStandardId</SourceEDT>
					<Field>AssetStandardId</Field>
					<RelatedField>AssetStandardId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>assetStandardIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>RAssetId</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>