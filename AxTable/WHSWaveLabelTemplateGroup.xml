<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveLabelTemplateGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveLabelTemplateGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>groupFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays field name based off of referenced field Id.
    /// </summary>
    /// <returns>
    /// The field name of the label template group record's referenced field Id.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true), Hookable(false)]
    internal display WHSGroupFieldLabel groupFieldName()
    {
        return fieldId2PName(this.GroupTableId, this.GroupFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays table name based off of referenced table Id.
    /// </summary>
    /// <returns>
    /// The table name of the label template group record's referenced table Id.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true), Hookable(false)]
    internal display WHSGroupTableLabel groupTableName()
    {
        return tableId2PName(this.GroupTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates label template grouping records based off a query's sort criteria.
    /// </summary>
    /// <param name="_labelTemplate">
    /// The specific label template header record the groups will be created for.
    /// </param>
    /// <param name="_packedQueryRun">
    /// The packed query run object whose query's sort fields will be used to create grouping records.
    /// </param>
    [Hookable(false)]
    internal static void createGroups(WHSWaveLabelTemplateRecId _labelTemplate, container _packedQueryRun)
    {
        if (_packedQueryRun != conNull())
        {
            ttsBegin;
    
            WHSWaveLabelTemplateGroup   labelTemplateGroup;

            var queryRun = new QueryRun(_packedQueryRun);
    
            delete_from labelTemplateGroup
                where labelTemplateGroup.LabelTemplate == _labelTemplate;
    
            int sortCount = queryRun.query().orderByFieldCount();
    
            var ril = new RecordInsertList(tableNum(WHSWaveLabelTemplateGroup));
            
            LineNum lineNumber;
    
            for (int i = 1; i <= sortCount; ++i)
            {
                QueryOrderByField qobf = queryRun.query().orderByField(i);
    
                if (qobf)
                {
                    ++lineNumber;
    
                    labelTemplateGroup.clear();
                    labelTemplateGroup.LineNumber       = lineNumber;
                    labelTemplateGroup.LabelTemplate    = _labelTemplate;
                    labelTemplateGroup.GroupTableId     = qobf.dataSource().table();
                    labelTemplateGroup.GroupFieldId     = qobf.fieldID();
    
                    ril.add(labelTemplateGroup);
                }
            }
    
            if (lineNumber > 0)
            {
                ril.insertDatabase();
            }
    
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates field
    /// </summary>
    /// <param name = "_fieldIdToCheck">Field id to check</param>
    /// <returns>True if field is valid</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        switch(_fieldIdToCheck)
        {
            case fieldNum(WHSWaveLabelTemplateGroup, IsLabelBuildIdField):
                if (this.IsLabelBuildIdField)
                {
                    WHSWaveLabelTemplateGroup   waveLabelTemplateGroup;

                    select firstonly TableId from waveLabelTemplateGroup
                        where  waveLabelTemplateGroup.LabelTemplate      == this.LabelTemplate
                            && waveLabelTemplateGroup.RecId              != this.RecId
                            && waveLabelTemplateGroup.IsLabelBuildIdField == NoYes::Yes;

                    if (waveLabelTemplateGroup)
                    {
                        ret = checkFailed("@WAX:WaveLabelBuildIdError");
                    }
                }
                break;

            case fieldNum(WHSWaveLabelTemplateGroup, LabelTemplateGroupBy)  :
                if (this.LabelTemplateGroupBy == NoYes::No && this.IsLabelBuildIdField == NoYes::Yes)
                {
                    ret = checkFailed("@WAX:WaveLabelGrouplByError");
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:LabelTemplateGroupDevDoc</DeveloperDocumentation>
	<FormRef>WHSWaveLabelTemplateGroup</FormRef>
	<Label>@WAX:LabelTemplateGroup</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>GroupTableId</TitleField1>
	<TitleField2>GroupFieldId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<ReplacementKey>LabelTemplateTableLineNumberIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LabelTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsLabelBuildIdField</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LabelLayoutId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelLayoutId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LabelTemplateGroupBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTemplateGroupBy</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LabelTemplate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTemplateRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintBreakLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintBreakLabel</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GroupFieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GroupTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrinterName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrinterName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsLabelBuildIdField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelBuildIdField</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LabelTemplateTableGroupTableIdGroupFieldIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>GroupTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupFieldId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LabelTemplate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LabelTemplateTableLineNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LabelLayoutIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LabelLayoutId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelLayout</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWaveLabelLayout</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LabelLayoutId</Name>
					<Field>LabelLayoutId</Field>
					<RelatedField>LabelLayoutId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWaveLabelTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LabelTemplate</Name>
					<Field>LabelTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>