<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSLoadBuildStrategyInputSet</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSLoadBuildStrategyInputSet extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>TMSLoadBuildStrategyInputSet</c> table exists.
    /// </summary>
    /// <param name="_loadBuildStrategyInputSet">
    /// The record ID of the <c>TMSLoadBuildStrategyInputSet</c> table.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(TMSLoadBuildStrategyInputId _loadBuildStrategyInputSet)
    {
        return _loadBuildStrategyInputSet &&
            (select firstonly RecId from TMSLoadBuildStrategyInputSet
                where TMSLoadBuildStrategyInputSet.RecID == _loadBuildStrategyInputSet).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TMSLoadBuildStrategyInputSet</c> table.
    /// </summary>
    /// <param name="_loadBuildStrategyInputSet">
    /// The record ID of the <c>TMSLoadBuildStrategyInputSet</c> to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TMSLoadBuildStrategyInputSet</c> table; otherwise, an empty record.
    /// </returns>
    public static TMSLoadBuildStrategyInputSet find(TMSLoadBuildStrategyInputId  _loadBuildStrategyInputSet,
                                                    boolean                      _forUpdate = false)
    {
        TMSLoadBuildStrategyInputSet    loadBuildStrategyInputSet;

        if (_loadBuildStrategyInputSet)
        {
            loadBuildStrategyInputSet.selectForUpdate(_forUpdate);

            select firstonly loadBuildStrategyInputSet
                where loadBuildStrategyInputSet.RecId == _loadBuildStrategyInputSet;
        }

        return loadBuildStrategyInputSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYP4861073</DeveloperDocumentation>
	<Label>@SYP4861074</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>LoadBuildSession</TitleField1>
	<TitleField2>LoadPaysFreight</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>Transportation</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadPaysFreight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildSession</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadPaysFreight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildSession</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadBuildSession</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadBuildSessionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadPaysFreight</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadPaysFreight</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LoadBuildSessionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadBuildSession</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LoadBuildSession</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSLoadBuildSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadBuildSession</Name>
					<Field>LoadBuildSession</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>