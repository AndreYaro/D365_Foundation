<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqSourcingHoldByVendorRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqSourcingHoldByVendorRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buyingCompanyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record referenced by the buying legal entity.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo buyingCompanyInfo()
    {
        return CompanyInfo::findRecId(this.BuyingLegalEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the company-specific fields on a changed field value.
    /// </summary>
    /// <param name="_fieldId">
    /// The field number in the <c>PurchReqConsolidationHoldByVendorRule</c> table.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldNum(PurchReqSourcingHoldByVendorRule, BuyingLegalEntity))
        {
            this.setDefaultCompany();
            this.resetCompanySpecificFields();
            this.VendDataAreaId =
                                  getCompany(tableNum(VendTable), this.buyingCompanyInfo().DataArea);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a field in a form when the <c>super</c> method is called.
    /// </summary>
    /// <param name="_fieldName">
    /// A string that contains the field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// An integer that contains the array index; applies only if the field has array elements.
    /// </param>
    /// <remarks>
    /// This system-defined method provided as an event to apply logic before and after a field is modified.
    /// </remarks>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        this.setDataAreaForModifiedField(fieldName2id(this.TableId, _fieldName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetCompanySpecificFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets field values if the value of the legal entity is changed.
    /// </summary>
    private void resetCompanySpecificFields()
    {
        this.VendAccountNum = "";
        this.VendDataAreaId = "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataAreaForModifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>DataArea</c> field if a corresponding field value is modified.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field number in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </param>
    private void setDataAreaForModifiedField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(PurchReqSourcingHoldByVendorRule, VendAccountNum) :
                this.VendDataAreaId = this.VendAccountNum ? getCompany(tableNum(VendTable)) : "";
                break;

            default :
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default company that corresponds to the buying legal entity of a
    /// <c>PurchReqSourcingHoldByVendorRule</c> record
    /// </summary>
    public void setDefaultCompany()
    {
        DataAreaId  dataAreaId;

        if (this.BuyingLegalEntity)
        {
            dataAreaId = CompanyInfo::findRecId(this.BuyingLegalEntity).DataArea;
            if (dataAreaId != curext())
            {
                appl.setDefaultCompany(dataAreaId, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates the field value and changes the current company .
    /// </summary>
    /// <param name="_fieldIdToCheck">
    ///    The field number in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </param>
    /// <returns>
    ///     True/False after validating the field.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        if (_fieldIdToCheck == fieldNum(PurchReqSourcingHoldByVendorRule, BuyingLegalEntity))
        {
            if (this.BuyingLegalEntity)
            {
                this.setDefaultCompany();
            }
            ret = super(_fieldIdToCheck);
        }
        else if (this.BuyingLegalEntity)
        {
            ret = super(_fieldIdToCheck);
        }
        else
        {
            ret = checkFailed("@SYS301955");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendName</Name>
				<Source><![CDATA[
    display Name vendName()
    {
        return DirPartyTable::findRec(VendTable::find(this.VendAccountNum).Party).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether the specified record exists in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldByVendorRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _purchReqSourcingHoldByVendorRuleId)
    {
        PurchReqSourcingHoldByVendorRule purchReqSourcingHoldByVendorRule = null;

        select RecId from purchReqSourcingHoldByVendorRule where purchReqSourcingHoldByVendorRule.RecId == _purchReqSourcingHoldByVendorRuleId;

        return _purchReqSourcingHoldByVendorRuleId && purchReqSourcingHoldByVendorRule.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldByVendorId">
    ///     The record ID in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByVendorRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByVendorRule find(RefRecId _purchReqSourcingHoldByVendorId, boolean _forUpdate = false)
    {
        PurchReqSourcingHoldByVendorRule purchReqSourcingHoldByVendorRule = null;

        if (_purchReqSourcingHoldByVendorId)
        {
            purchReqSourcingHoldByVendorRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByVendorRule where purchReqSourcingHoldByVendorRule.RecId == _purchReqSourcingHoldByVendorId;
        }

        return purchReqSourcingHoldByVendorRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///    The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the item type for the purchase order creation.
    /// </param>
    /// <param name="_procurementCategory">
    ///    The record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>PurchReqSourcingHoldByVendorRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByVendorRule findByCategory(RefRecId         _purchReqSourcingHoldRuleId,
                                                                  PurchReqLineType _purchReqSourcingItemType,
                                                                  RefRecId         _procurementCategory,
                                                                  boolean          _forUpdate = false)
    {
        PurchReqSourcingHoldByCategoryRule  purchReqSourcingHoldByCategoryRule;
        PurchReqSourcingHoldByVendorRule    purchReqSourcingHoldByVendorRule;

        purchReqSourcingHoldByVendorRule.selectForUpdate(_forUpdate);

        select purchReqSourcingHoldByVendorRule
            exists join purchReqSourcingHoldByCategoryRule where
               purchReqSourcingHoldByCategoryRule.RecId                    == purchReqSourcingHoldByVendorRule.PurchReqSourcingHoldByCategoryRule &&
               purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId                                         &&
               purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType                                           &&
               purchReqSourcingHoldByCategoryRule.ProcurementCategory      == _procurementCategory;

        return purchReqSourcingHoldByVendorRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHoldRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///    The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///    An enumeration value that specifies the type of the item type for the purchase order creation.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>PurchReqSourcingHoldByVendorRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByVendorRule findByHoldRule(RefRecId         _purchReqSourcingHoldRuleId,
                                                                  PurchReqLineType _purchReqSourcingItemType,
                                                                  boolean          _forUpdate = false)
    {
        PurchReqSourcingHoldByVendorRule    purchReqSourcingHoldByVendorRule = null;
        PurchReqSourcingHoldByCategoryRule  purchReqSourcingHoldByCategoryRule;

        if (_purchReqSourcingHoldRuleId)
        {
            purchReqSourcingHoldByVendorRule.selectForUpdate(_forUpdate);
            select purchReqSourcingHoldByVendorRule
              join RecId from purchReqSourcingHoldByCategoryRule
             where purchReqSourcingHoldByCategoryRule.RecId                    == purchReqSourcingHoldByVendorRule.PurchReqSourcingHoldByCategoryRule
                && purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId
                && purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType;
        }

        return purchReqSourcingHoldByVendorRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PurchReqSourcingHoldByVendorRule</c> table.
    /// </summary>
    /// <param name="_purchReqSourcingHoldRuleId">
    ///     The record ID in the <c>PurchReqSourcingHoldRule</c> table.
    /// </param>
    /// <param name="_purchReqSourcingItemType">
    ///     An enumeration value that specifies the type of the purchase order creation item type.
    /// </param>
    /// <param name="_procurementCategory">
    ///     The record ID in the <c>EcoResCategory</c> table.
    /// </param>
    /// <param name="_vendAccount">
    ///     The vendor account in the <c>VendAccount</c> table.
    /// </param>
    /// <param name="_vendAccountDataAreaId">
    ///     The dataarea ID in the <c>VendAccount</c> table.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>PurchReqSourcingHoldByVendorRule</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static PurchReqSourcingHoldByVendorRule findByVendAccount(RefRecId         _purchReqSourcingHoldRuleId,
                                                                     PurchReqLineType _purchReqSourcingItemType,
                                                                     RefRecId         _procurementCategory,
                                                                     VendAccount      _vendAccount,
                                                                     DataAreaId       _vendAccountDataAreaId,
                                                                     boolean          _forUpdate = false)
    {
        PurchReqSourcingHoldByVendorRule    purchReqSourcingHoldByVendorRule = null;
        PurchReqSourcingHoldByCategoryRule  purchReqSourcingHoldByCategoryRule;

        if (_purchReqSourcingHoldRuleId)
        {
            purchReqSourcingHoldByVendorRule.selectForUpdate(_forUpdate);

            select purchReqSourcingHoldByVendorRule where
                    purchReqSourcingHoldByVendorRule.VendDataAreaId             == _vendAccountDataAreaId &&
                    purchReqSourcingHoldByVendorRule.VendAccountNum             == _vendAccount
                exists join purchReqSourcingHoldByCategoryRule where
                    purchReqSourcingHoldByCategoryRule.RecId                    == purchReqSourcingHoldByVendorRule.PurchReqSourcingHoldByCategoryRule &&
                    purchReqSourcingHoldByCategoryRule.PurchReqSourcingHoldRule == _purchReqSourcingHoldRuleId                                         &&
                    purchReqSourcingHoldByCategoryRule.PurchReqSourcingItemType == _purchReqSourcingItemType                                           &&
                    purchReqSourcingHoldByCategoryRule.ProcurementCategory      == _procurementCategory;
        }

        return purchReqSourcingHoldByVendorRule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS315406</DeveloperDocumentation>
	<Label>@SYS300524</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PurchReqSourcingHoldByCategoryRule</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>VendTableIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldByCategoryRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldByCategoryRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldByCategoryRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HoldByVendorRule</Name>
			<Label>@SYS300600</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchReqSourcingHoldByCategoryRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BuyingLegalEntity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS304469</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchReqSourcingHoldByCategoryRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccountNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchReqSourcingHoldByCategoryRule</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendAccountNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyingLegalEntity</Name>
					<Field>BuyingLegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchReqSourcingHoldByCategoryRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchReqSourcingHoldByCategoryRule</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchReqSourcingHoldByCategoryRule</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchReqSourcingHoldByCategoryRule_PurchReqSourcingHoldByVendorRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchReqSourcingHoldByCategoryRule</Name>
					<Field>PurchReqSourcingHoldByCategoryRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_PurchReqSourcingHoldByVendorRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendDataAreaId</Name>
					<Field>VendDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccountNum</Name>
					<Field>VendAccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>