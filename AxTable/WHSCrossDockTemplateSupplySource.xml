<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCrossDockTemplateSupplySource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSCrossDockTemplateSupplySource extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.initializePackedQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSCrossDockTemplateSupplySource, SupplySource):
                this.initializePackedQuery();
                break;                
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePackedQuery</Name>
				<Source><![CDATA[
    private void initializePackedQuery()
    {
        QueryRun queryRun = this.defaultPackedQueryRun();

        if (queryRun)
        {
            this.PackedQueryRun = queryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPackedQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default query.
    /// </summary>
    /// <returns>The default query.</returns>
    public QueryRun defaultPackedQueryRun()
    {
        switch (this.SupplySource)
        {
            case WHSCrossDockSupplySource::PurchaseOrder:
                return new QueryRun(queryStr(WHSCrossDockPurchase));

            case WHSCrossDockSupplySource::ProductionOrder:
                return new QueryRun(queryStr(WHSCrossDockProduction));

            case WHSCrossDockSupplySource::TransferOrderReceipt:
                return new QueryRun(queryStr(WHSCrossDockInventTransfer));

            case WHSCrossDockSupplySource::PmfProdCoBy:
                return new QueryRun(queryStr(WHSCrossDockPmfProdCoByQuery));

        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsTemplateAndSourceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a supply source of given type exists on given template
    /// </summary>
    /// <param name = "_crossDockTemplateId">The Id of Cross-docking template, which sources are to be searched</param>
    /// <param name = "_supplySource">The source type to be looked for</param>
    /// <returns>true if exists; otherwise false</returns>
    [Hookable(false)]
    public static boolean existsTemplateAndSourceType(WHSCrossDockTemplateId _crossDockTemplateId, WHSCrossDockSupplySource _supplySource)
    {
        return WHSCrossDockTemplateSupplySource::find(_crossDockTemplateId, _supplySource).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a cross dock supply source record by the cross dock template Id and the source type.
    /// </summary>
    /// <param name = "_crossDockTemplateId">The Id of Cross-docking template, which sources are to be searched</param>
    /// <param name = "_supplySource">The source type to be looked for</param>
    /// <param name = "_forUpdate">Boolean to determine if the record should be selected for update.<</param>
    /// <returns>A cross dock supply source record </returns>
    [Hookable(false)]
    public static WHSCrossDockTemplateSupplySource find(WHSCrossDockTemplateId _crossDockTemplateId, WHSCrossDockSupplySource _supplySource, boolean _forUpdate = false)
    {
        WHSCrossDockTemplateSupplySource crossDockTemplateSupplySource;

        if (_crossDockTemplateId)
        {
            crossDockTemplateSupplySource.selectForUpdate(_forUpdate);

            select firstonly crossDockTemplateSupplySource
                where crossDockTemplateSupplySource.CrossDockTemplateId == _crossDockTemplateId
                    && crossDockTemplateSupplySource.SupplySource       == _supplySource;
        }

        return crossDockTemplateSupplySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:CrossDockSupplySourceDocumentation</DeveloperDocumentation>
	<Label>@WAX:SupplySource</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SequenceNumber</TitleField1>
	<TitleField2>SupplySource</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CrossDockTemplateIdSupplySourceIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CrossDockTemplateIdSupplySourceIdx</PrimaryIndex>
	<ReplacementKey>CrossDockTemplateIdSupplySourceIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplySource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplySource</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplySource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CrossDockTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockTemplateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SupplySource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSCrossDockSupplySource</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedQueryRun</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockSeqNum</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CrossDockTemplateIdSequenceNumberIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CrossDockTemplateIdSupplySourceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SupplySource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSCrossDockTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSCrossDockTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CrossDockTemplateId</Name>
					<Field>CrossDockTemplateId</Field>
					<RelatedField>CrossDockTemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>