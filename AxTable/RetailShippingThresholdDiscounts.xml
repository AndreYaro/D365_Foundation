<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailShippingThresholdDiscounts</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailShippingThresholdDiscounts extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the initial value of the field.
    /// </summary>
    public void initValue()
    {
        super();

        this.PeriodicDiscountType = RetailDiscountOfferTypeBase::Shipping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>RetailShippingThresholdDiscounts</c> table.
    /// </summary>
    /// <param name="_offerId">
    /// The offer number of the discount.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailShippingThresholdDiscounts</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailShippingThresholdDiscounts find(RecId _recId, boolean _forUpdate = false)
    {
        RetailShippingThresholdDiscounts shippingThreshold;

        if (_recId)
        {
            shippingThreshold.selectForUpdate(_forUpdate);

            select firstonly shippingThreshold where shippingThreshold.RecId == _recId;
        }

        return shippingThreshold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateEnable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the discount can be enabled.
    /// </summary>
    /// <returns>
    /// true if the discount can be enabled; otherwise, false.
    /// </returns>
    public boolean validateEnable()
    {
        boolean ret;
    
        ret = super();

        if (ret && this.Status == RetailDisabledEnabled::Enabled)
        {
            if (this.DlvModeId == '')
            {
                this.promptAndWriteValidationLog(
                    RetailPricingValidationMessageSeverity::Error,
                    "@Retail:ShippingThresholdDiscountDlvModeIdIsBlank");
                ret = false;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts and copies a new record in the <c>RetailShippingThresholdDiscount</c> table.
    /// </summary>
    /// <param name="_original">
    /// The current instance of the <c>RetailShippingThresholdDiscount</c> table.
    /// </param>
    /// <remarks>
    /// Copies all the data except for the shiping discountcfrom one line to another.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// When trying to copy a line from the same <c>OfferId</c> field.
    /// </exception>
    public void copyFrom(retailPeriodicDiscount _original)
    {
        RetailPeriodicDiscountLine        retailPeriodicDiscountLine;
        RetailPeriodicDiscountLine        retailPeriodicDiscountLineNew;
        RetailDiscountThresholdTiers      retailThresholdDiscountTiers;
        RetailDiscountThresholdTiers      retailThresholdDiscountTiersNew;
        RetailShippingThresholdDiscounts  retailShippingThresholdDiscounts;

        ttsbegin;
        this.copyDiscountOfferInfo(_original);
        retailShippingThresholdDiscounts = retailShippingThresholdDiscounts::find(_original.RecId);
        this.DlvModeId = retailShippingThresholdDiscounts.DlvModeId;
        this.update();

        while select retailPeriodicDiscountLine
            where retailPeriodicDiscountLine.OfferId == _original.OfferId
        {
            retailPeriodicDiscountLineNew.clear();
            retailPeriodicDiscountLineNew.data(retailPeriodicDiscountLine);
            retailPeriodicDiscountLineNew.initValue();
            retailPeriodicDiscountLineNew.OfferId = this.OfferId;
            retailPeriodicDiscountLineNew.insert();

            retailPeriodicDiscountLineNew.copyGroupMemberLineInternal(retailPeriodicDiscountLine.groupMemberLine(), true);
            retailPeriodicDiscountLineNew.copyRetailDiscountApplicabilityRuleInternal(retailPeriodicDiscountLine);
        }

        while select retailThresholdDiscountTiers
            where retailThresholdDiscountTiers.OfferId == _original.OfferId
        {
            retailThresholdDiscountTiersNew.clear();
            retailThresholdDiscountTiersNew.data(retailThresholdDiscountTiers);
            retailThresholdDiscountTiersNew.OfferId = this.OfferId;
            retailThresholdDiscountTiersNew.insert();
        }

        this.copyDiscountPriceGroups(_original.OfferId);
        ttscommit;

        this.refreshDS();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailShippingThresoldDiscountDeveloperDoc</DeveloperDocumentation>
	<Label>Retail shipping threshold discount</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>DataAreaId</TitleField1>
	<TitleField2>DlvModeId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Extends>RetailPeriodicDiscount</Extends>
	<Modules>Retail</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvModeId</Name>
			<ExtendedDataType>DlvModeId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPeriodicDiscount</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailPeriodicDiscount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DeliveryMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvModeId</Name>
					<Field>DlvModeId</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>