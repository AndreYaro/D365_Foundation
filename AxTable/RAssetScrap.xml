<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetScrap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetScrap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>availableScrapQty</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display RAssetInventQty availableScrapQty()
    {
        RAssetScrap scrap;

        select sum(Qty) from scrap
            where scrap.Assembling        == NoYes::No  &&
                  scrap.ComponentRefRecId == this.RecId;

        return this.Qty - scrap.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>balanceCost</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display RAssetScrapBalanceCost balanceCost()
    {
        return this.calcCostPrice(this.Qty, this.BalanceAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcCostAmount</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display CostAmount calcCostAmount(InventQty     _qty       = this.Qty,
                                      ItemCostPrice _costPrice = this.CostPrice)
    {
        ;

        return PriceDisc::price2Amount(_costPrice,
                                       this.priceUnit(),
                                       0,
                                       _qty,
                                       _qty,
                                       0,
                                       0,
                                       "",
                                       0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcCostPrice</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display CostAmount calcCostPrice(InventQty  _qty        = this.Qty,
                                     CostAmount _costAmount = this.CostAmount)
    {
        ;

        return PriceDisc::amount2Price(_costAmount,
                                       0,
                                       0,
                                       _qty,
                                       0,
                                       this.priceUnit(),
                                       "",
                                       0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkComponentCreating</Name>
				<Source><![CDATA[
        public boolean checkComponentCreating()
    {
        RAssetScrap assetScrap;
        RAssetTable assetTable  = RAssetTable::find(this.AssetId);
        boolean     ret         = true;
        ;

        if (assetTable.AssetType == RAssetType::Cloths  ||
            assetTable.AssetType == RAssetType::Rigging ||
            assetTable.AssetType == RAssetType::LowCostAssets)
        {
            select firstonly RecId from assetScrap
                where assetScrap.AssetId    == this.AssetId &&
                      assetScrap.Assembling == NoYes::Yes   &&
                      ! assetScrap.StornoRecId;

            ret = ! assetScrap.RecId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentCostAmount</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display CostAmount currentCostAmount()
    {
        return this.calcCostAmount(this.availableScrapQty());
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        ttsbegin;

        super();

        if (this.Assembling)
        {
            InventUpd_DeleteMovement::newMovement(InventMovement::construct(this)).updateNow();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>depreciationCost</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display RAssetScrapDepreciationCost depreciationCost()
    {
        return this.calcCostPrice(this.Qty, this.DepreciationAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
        public void initFromInventTable(InventTable _inventTable)
    {
        InventTableModule   inventTableModule;
        InventDim           inventDim = this.inventDim();
        ;

        this.ItemId           = _inventTable.ItemId;
        this.DefaultDimension = _inventTable.DefaultDimension;

        if (this.Assembling == NoYes::No)
        {
            inventTableModule = this.inventTableModuleInvent();
            this.CostPrice          = inventTableModule.price();
            this.PriceUnit          = inventTableModule.priceUnit();
            this.CostAmount         = this.calcCostAmount();
        }

        if (this.InventDimId)
        {
            inventDim = InventDim::find(this.InventDimId);
        }

        inventDim.initFromInventTable(_inventTable);

        this.InventDimId            = InventDim::findOrCreate(inventDim).InventDimId;
        this.Qty                    = _inventTable.inventItemInventSetup(this.InventDimId).standardQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
        public void initFromPurchLine(PurchLine _purchLine)
    {
        this.ItemId             = _purchLine.ItemId;
        this.InventDimId        = _purchLine.InventDimId;
        this.DefaultDimension   = _purchLine.DefaultDimension;
        if (RAssetTable::find(this.AssetId).isFixedAssetType())
            this.Qty            = _purchLine.PurchQty;
        else
            this.Qty            = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert(NoYes _dropEstimated = NoYes::No)
    {
        InventUpd_Estimated     estimated;

        try
        {
            ttsbegin;

            if (this.Assembling)
            {
                this.InventTransId = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();

                if (! _dropEstimated)
                {
                    estimated = InventUpd_Estimated::newInventMovement(InventMovement::construct(this));
                    estimated.updateNow();
                }
            }

            super();

            if (estimated)
            {
                estimated.updateOwnerRelationship();

                estimated.updateReservation();
            }
            ttscommit;
        }
        catch (Exception::Error)
        {
            this.InventTransId = "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
        public InventDim inventDim(boolean _forUpdate = false)
    {
        return InventDim::find(this.InventDimId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
        public InventTable inventTable()
    {
        return InventTable::find(this.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableModuleInvent</Name>
				<Source><![CDATA[
        private InventTableModule inventTableModuleInvent()
    {
        return InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
        //BP Deviation documented
    public display ItemName itemName()
    {
        return InventTable::find(this.ItemId).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>netBookAmount</Name>
				<Source><![CDATA[
        //BP Deviation documented
    display RAssetNetBookValue netBookAmount()
    {
        return this.BalanceAmount + this.DepreciationAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceUnit</Name>
				<Source><![CDATA[
        private PriceUnit priceUnit()
    {
        return (this.PriceUnit ? this.PriceUnit : 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update(NoYes _dropEstimated = NoYes::No)
    {
        InventUpd_Estimated     estimated;

        ttsbegin;

        if (this.Assembling && ! _dropEstimated)
        {
            estimated = InventUpd_Estimated::newInventMovement(InventMovement::construct(this));
            estimated.updateNow();
        }

        super();

        if (estimated)
        {
            estimated.updateReservation();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        ret = ret && this.TransDate == dateNull();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean     ret;
        RAssetTable assetTable;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(RAssetScrap, Qty):
                if (this.Assembling        == NoYes::No &&
                    this.ComponentRefRecId              &&
                    this.Qty > RAssetScrap::find(this.ComponentRefRecId).Qty)
                {
                    ret = checkFailed("@GLS116965");
                }

                assetTable = RAssetTable::find(this.AssetId);
                if (ret                                                &&
                   (assetTable.AssetType == RAssetType::Cloths         ||
                    assetTable.AssetType == RAssetType::Rigging        ||
                    assetTable.AssetType == RAssetType::LowCostAssets) &&
                    this.Qty != 1)
                {
                    ret = checkFailed("@GLS113877");
                }
                break;

            case fieldNum(RAssetScrap, ItemId):
                if (RAssetTable::find(this.AssetId).AssetType != RAssetType::LowCostAssets &&
                    InventTable::find(this.ItemId).AssetGroupId_RU)
                {
                    ret = checkFailed(strFmt("@GLS116065", this.ItemId));
                }
                if (InventTable::find(this.ItemId).ItemType != ItemType::Item)
                {
                    ret = checkFailed(strFmt("@SYS88192", InventTable::find(this.ItemId).ItemType));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean     ret         = super();
        RAssetTable assetTable  = RAssetTable::find(this.AssetId);
        InventTable inventTable = InventTable::find(this.ItemId);

        if (! this.RecId && ! this.checkComponentCreating())
        {
            ret = checkFailed("@SYS35216") && ret;
        }

        if (! assetTable.isFixedAssetType() &&
            this.Qty != 1)
        {
            ret = checkFailed("@GLS113877");
        }

        ret = ret && this.TransDate == dateNull();

        if (ret                                               &&
            assetTable.AssetType != RAssetType::LowCostAssets &&
            inventTable.AssetGroupId_RU)
        {
            ret = checkFailed(strFmt("@GLS116065", this.ItemId));
        }

        if (ret && inventTable.ItemType != ItemType::Item)
        {
            ret = checkFailed(strFmt("@SYS88192", inventTable.ItemType));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>componentAcquisitionAmount</Name>
				<Source><![CDATA[
        public static CostAmount componentAcquisitionAmount(RAssetId _assetId)
    {
        RAssetScrap component, scrap;
        CostAmount  acqAmount;

        while select CostPrice, RecId, Qty from component
            where component.AssetId    == _assetId   &&
                  component.Assembling == NoYes::Yes &&
                  component.TransDate                &&
                  ! component.StornoRecId
        {
            select sum(Qty) from scrap
                where scrap.Assembling        == NoYes::No       &&
                      scrap.ComponentRefRecId == component.RecId &&
                      scrap.TransDate;

            acqAmount += component.calcCostAmount(component.Qty - scrap.Qty, component.CostPrice);
        }
        return acqAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsAssetScrapAssembling</Name>
				<Source><![CDATA[
        public static boolean existsAssetScrapAssembling(RAssetId _assetId, RecId _recId = 0)
    {
        RAssetScrap assetScrap;
        ;

        if (!_assetId)
        {
            return false;
        }

        if (_recId)
        {
            select firstonly RecId from assetScrap
            where assetScrap.AssetId    == _assetId   &&
                  assetScrap.Assembling == NoYes::Yes &&
                  assetScrap.RecId      != _recId     &&
                  ! assetScrap.StornoRecId;
        }
        else
        {
            select firstonly RecId from assetScrap
                where assetScrap.AssetId    == _assetId   &&
                      assetScrap.Assembling == NoYes::Yes &&
                      ! assetScrap.StornoRecId;
        }

        return assetScrap.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static RAssetScrap find(RecId        _recId,
                                   boolean      _forUpdate = false)
    {
        RAssetScrap      rAssetScrap;
        ;

        if (_recId)
        {
            rAssetScrap.selectForUpdate(_forUpdate);

            select firstonly rAssetScrap
                where rAssetScrap.RecId == _recId;
        }
        return rAssetScrap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>scrapNetBookValue</Name>
				<Source><![CDATA[
        public static CostAmount scrapNetBookValue(RAssetId  _assetId,
                                               Voucher   _voucher,
                                               TransDate _transDate)
    {
        RAssetScrap rAssetScrap;
        ;

        select sum(BalanceAmount), sum(DepreciationAmount) from rAssetScrap
            where rAssetScrap.AssetId    == _assetId   &&
                  rAssetScrap.Assembling == NoYes::No  &&
                  rAssetScrap.Voucher    == _voucher   &&
                  rAssetScrap.TransDate  == _transDate &&
                  ! rAssetScrap.StornoRecId;

        return rAssetScrap.BalanceAmount + rAssetScrap.DepreciationAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RAssetComponents</FormRef>
	<Label>@GLS116191</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Assembling</Name>
			<Label>@GLS116495</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Assembling</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Asset</Name>
			<Label>@SYS25653</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ComponentRealtion</Name>
			<Label>@GLS117080</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ComponentRefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Components</Name>
			<Label>@GLS117080</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssemblingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Cost</Name>
			<Label>@GLS116497</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>balanceCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>depreciationCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BalanceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepreciationAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>netBookAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@sys5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MarketValue</Name>
			<Label>@GLS116978</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OriginalCost</Name>
			<Label>@GLS116141</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InitialCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InitialCostAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Priceunit</Name>
			<Label>@SYS9102</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Qty</Name>
			<Label>@SYS59970</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>availableScrapQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Storno</Name>
			<Label>@SYS22850</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StornoRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransDate</Name>
			<Label>@GLS110044</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Assembling</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS116495</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AssemblingDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS116963</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BalanceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetScrapBalanceAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ComponentRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLineAmount</ExtendedDataType>
			<Label>@SYS6928</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemCostPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DepreciationAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetScrapDepreciationAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InitialCostAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchLineAmount</ExtendedDataType>
			<Label>@GLS116486</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InitialCostPrice</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemCostPrice</ExtendedDataType>
			<Label>@GLS116141</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetInventQty</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StornoRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS116328</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DefaultDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RAssetItemIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Assembling</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ComponentRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RassetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventDim</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetScrap</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetScrap</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetScrap</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ComponentRefRecId</Name>
					<Field>ComponentRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetScrapStorno</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetScrap</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetScrapStorno</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StornoRecId</Name>
					<Field>StornoRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RAssetScrap</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>RAssetId</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>