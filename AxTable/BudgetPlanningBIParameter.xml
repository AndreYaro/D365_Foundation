<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanningBIParameter</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanningBIParameter extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanningBIParameter</c> table.
    /// </summary>
    /// <param name='_budgetPlanningBIParameterRecId'>
    /// The record ID of the <c>BudgetPlanningBIParameter</c> record.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanningBIParameter</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanningBIParameter find(
        BudgetPlanningBIParameterRecId  _budgetPlanningBIParameterRecId,
        boolean                         _forUpdate = false,
        ConcurrencyModel                _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanningBIParameter budgetPlanningBIParameter;

        if (_budgetPlanningBIParameterRecId)
        {
            budgetPlanningBIParameter.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanningBIParameter.concurrencyModel(_concurrencyModel);
            }

            select firstOnly budgetPlanningBIParameter
                where budgetPlanningBIParameter.RecId == _budgetPlanningBIParameterRecId;
        }

        return budgetPlanningBIParameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanningBIParameter</c> table.
    /// </summary>
    /// <param name='_budgetPlanningProcessRecId'>
    /// The record ID of the <c>BudgetPlanningProcess</c> record.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanningBIParameter</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanningBIParameter findByProcess(
        BudgetPlanningProcessRecId  _budgetPlanningProcessRecId,
        boolean                     _forUpdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanningBIParameter budgetPlanningBIParameter;

        if (_budgetPlanningProcessRecId)
        {
            budgetPlanningBIParameter.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanningBIParameter.concurrencyModel(_concurrencyModel);
            }

            select firstOnly budgetPlanningBIParameter
                where budgetPlanningBIParameter.Process == _budgetPlanningProcessRecId;
        }

        return budgetPlanningBIParameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProcessName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanningBIParameter</c> table.
    /// </summary>
    /// <param name='_budgetPlanningProcessName'>
    /// The name of the <c>BudgetPlanningProcess</c> record to use to find the <c>BudgetPlanningBIParameter</c> record.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanningBIParameter</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanningBIParameter findByProcessName(
        BudgetPlanningProcessName   _budgetPlanningProcessName,
        boolean                     _forUpdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanningBIParameter budgetPlanningBIParameter;

        if (_budgetPlanningProcessName)
        {
            budgetPlanningBIParameter.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanningBIParameter.concurrencyModel(_concurrencyModel);
            }

            BudgetPlanningProcess budgetPlanningProcess;

            select firstOnly budgetPlanningBIParameter
                exists join budgetPlanningProcess
                    where budgetPlanningProcess.RecId == budgetPlanningBIParameter.Process
                        && budgetPlanningProcess.Name == _budgetPlanningProcessName;
        }

        return budgetPlanningBIParameter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetPlanningBIParameterDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetPlanningBIParameters</FormRef>
	<Label>@Budget:BudgetPlanningParameters</Label>
	<SingularLabel>@Budget:BudgetPlanningParameterSingular</SingularLabel>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>Process</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>ProcessAK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>BIParameter</Relation>
			<Table>BudgetPlanningBIParameterDetail</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Process</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Process</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanningProcessRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProcessAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Process</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanningProcess</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BudgetPlanningProcess</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Process</Name>
					<Field>Process</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>