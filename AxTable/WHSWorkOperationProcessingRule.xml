<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkOperationProcessingRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkOperationProcessingRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSWorkOperationProcessingRule find(
        WHSWorkProcessingPolicyName _policyName,
        WHSWorkTransType            _workTransType,
        WHSWorkType                 _workType,
        boolean                     _forUpdate = false)
    {
        WHSWorkOperationProcessingRule rule;

        rule.selectForUpdate(_forUpdate);
        if (_policyName)
        {
            select firstonly rule
                where rule.PolicyName       == _policyName
                    && rule.WorkTransType   == _workTransType
                    && rule.Operation       == _workType;
        }

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the record.
    /// </summary>
    public void initValue()
    {
        super();
        this.Operation = WHSWorkType::Put;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(WHSWorkOperationProcessingRule, Operation):
                ret = this.validateOperationField();
                break;

            case fieldStr(WHSWorkOperationProcessingRule, WorkTransType):
                ret = this.validateWorkTransType();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOperationField</Name>
				<Source><![CDATA[
    private boolean validateOperationField()
    {
        if (this.Operation != WHSWorkType::Put)
        {
            return checkFailed(strFmt("@WAX:WHSWorkOperationProcessingRule_OperationFieldValidationError", this.Operation, WHSWorkType::Put));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkTransType</Name>
				<Source><![CDATA[
    private boolean validateWorkTransType()
    {
        Set supportedWorkTransTypesSet = WHSWorkOperationProcessingRule::supportedWorkTransTypes();
        if (!supportedWorkTransTypesSet.in(this.WorkTransType))
        {
            str supportedWorkTransTypesString = WHSWorkOperationProcessingRule::supportedWorkTransTypesString(supportedWorkTransTypesSet);
            
            return checkFailed(strFmt("@WAX:WHSWorkOperationProcessingRule_WorkTransTypeFieldValidationError", this.WorkTransType, supportedWorkTransTypesString));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportedWorkTransTypesString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string representation of the <c>WHSWorkTransTypes</c> types that are supported.
    /// </summary>
    /// <param name = "_supportedWorkTransTypesSet">A set with the supported types.</param>
    /// <returns>A string representation of the <c>WHSWorkTransTypes</c> types that are supported.</returns>
    internal static str supportedWorkTransTypesString(Set _supportedWorkTransTypesSet)
    {
        str supportedWorkTransTypes;
        SetEnumerator se = _supportedWorkTransTypesSet.getEnumerator();

        while (se.moveNext())
        {
            if (supportedWorkTransTypes)
            {
                supportedWorkTransTypes += ', ';
            }

            supportedWorkTransTypes += enum2Str(se.current());
        }

        return supportedWorkTransTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportedWorkTransTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a set with the <c>WHSWorkTransType</c> types that are supported.
    /// </summary>
    /// <returns>A set with the <c>WHSWorkTransType</c> types that are supported.</returns>
    public static Set supportedWorkTransTypes()
    {
        Set supportedWorkTransTypes = new Set(Types::Enum);

        supportedWorkTransTypes.add(WHSWorkTransType::Sales);
        supportedWorkTransTypes.add(WHSWorkTransType::TransferIssue);
        supportedWorkTransTypes.add(WHSWorkTransType::Replenishment);
        supportedWorkTransTypes.add(WHSWorkTransType::Invent);
		supportedWorkTransTypes.add(WHSWorkTransType::SortedInventoryPicking);
        
        return supportedWorkTransTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        //if the worktranstype is not an allowed value but the default one field validation will not be triggered so we need to do it here
        ret = this.validateWorkTransType() && ret;
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSAndTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSWorkOperationProcessingRuleTableDeveloperDoc</DeveloperDocumentation>
	<Label>@WAX:WHSWorkOperationProcessingRuleTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>PolicyName</TitleField1>
	<TitleField2>WorkTransType</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PolicyNameTransTypeOperationIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>PolicyNameTransTypeOperationIdx</PrimaryIndex>
	<ReplacementKey>PolicyNameTransTypeOperationIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferredProcessingThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferredProcessingBatchGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PolicyName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkProcessingPolicyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkTransType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSWorkTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Operation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@WAX:WHSWorkOperationProcessingRule_OperationFieldLabel</Label>
			<EnumType>WHSWorkType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProcessingMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSWorkProcessingMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DeferredProcessingThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkDeferredProcessingThreshold</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferredProcessingBatchGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BatchGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@WAX:WHSWorkOperationProcessingRule_DeferredProcessingBatchGroupIdFieldLabel</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PolicyNameTransTypeOperationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PolicyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkTransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Operation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BatchGroup</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferredProcessingBatchGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkProcessingPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkProcessingPolicy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PolicyName</Name>
					<Field>PolicyName</Field>
					<RelatedField>PolicyName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BatchGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BatchGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferredProcessingBatchGroupId</Name>
					<Field>DeferredProcessingBatchGroupId</Field>
					<RelatedField>Group</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>