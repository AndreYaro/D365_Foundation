<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EGAISClient_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EGAISClient_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromClient</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies EGAIS-related fields from the <paramref name="_client"/> to the current record.
    /// </summary>
    /// <param name="_client">
    /// <c>EGAISClient_RU</c> table variable used to initialize the current record.
    /// </param>
    /// <returns>
    /// true if any change was made to the current record; otherwise, false.
    /// </returns>
    public boolean initFromClient(EGAISClient_RU _client)
    {
        boolean isAnythingChanged = false;
        void setField(FieldId _fieldId, anytype _value)
        {
            if (this.(_fieldId) != _value)
            {
                this.(_fieldId)     = _value;
                isAnythingChanged   = true;
            }
        }

        setField(fieldNum(EGAISClient_RU, FullName),        _client.FullName);
        setField(fieldNum(EGAISClient_RU, ShortName),       _client.ShortName);
        setField(fieldNum(EGAISClient_RU, INN),             _client.INN);
        setField(fieldNum(EGAISClient_RU, KPP),             _client.KPP);
        setField(fieldNum(EGAISClient_RU, UNP),             _client.UNP);
        setField(fieldNum(EGAISClient_RU, RNN),             _client.RNN);
        setField(fieldNum(EGAISClient_RU, State),           _client.State);
        setField(fieldNum(EGAISClient_RU, Type),            _client.Type);
        setField(fieldNum(EGAISClient_RU, WaybillVersion),  _client.WaybillVersion);

        // Address fields
        setField(fieldNum(EGAISClient_RU, Country),     _client.Country);
        setField(fieldNum(EGAISClient_RU, ZipCode),     _client.ZipCode);
        setField(fieldNum(EGAISClient_RU, RegionCode),  _client.RegionCode);
        setField(fieldNum(EGAISClient_RU, Area),        _client.Area);
        setField(fieldNum(EGAISClient_RU, City),        _client.City);
        setField(fieldNum(EGAISClient_RU, Place),       _client.Place);
        setField(fieldNum(EGAISClient_RU, Street),      _client.Street);
        setField(fieldNum(EGAISClient_RU, House),       _client.House);
        setField(fieldNum(EGAISClient_RU, Building),    _client.Building);
        setField(fieldNum(EGAISClient_RU, Liter),       _client.Liter);
        setField(fieldNum(EGAISClient_RU, Description), _client.Description);

        return isAnythingChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isINNMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the INN field is mandatory for the current record.
    /// </summary>
    /// <returns>
    ///    true, if the INN field is mandatory for the current record; otherwise, false.
    /// </returns>
    public boolean isINNMandatory()
    {
        return this.Type == EGAISClientType_RU::LegalEntity
        || this.Type == EGAISClientType_RU::IndividualEntrepreneur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isKPPMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the KPP field is mandatory for the current record.
    /// </summary>
    /// <returns>
    ///    true, if the KPP field is mandatory for the current record; otherwise, false.
    /// </returns>
    public boolean isKPPMandatory()
    {
        return this.Type == EGAISClientType_RU::LegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRegionCodeMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the RegionCode field is mandatory for the current record.
    /// </summary>
    /// <returns>
    ///    true, if the RegionCode field is mandatory for the current record; otherwise, false.
    /// </returns>
    public boolean isRegionCodeMandatory()
    {
        return this.Type == EGAISClientType_RU::LegalEntity
        || this.Type == EGAISClientType_RU::IndividualEntrepreneur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.INN)
        {
            ret = CompanyInfoHelper::checkInn_RU(this.INN) && ret;
        }

        if (!this.INN && this.isINNMandatory())
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(EGAISClient_RU, INN)));
        }

        if (!this.KPP && this.isKPPMandatory())
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(EGAISClient_RU, KPP)));
        }

        if (!this.RegionCode && this.isRegionCodeMandatory())
        {
            ret = checkFailed(strFmt("@SYS26332", fieldPName(EGAISClient_RU, RegionCode)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(EGAISClientRegId_RU _clientRegId,
        boolean _throwError = false)
    {
        boolean ret = true;
        str errorMsg;

        if (_clientRegId && !EGAISClient_RU::exist(_clientRegId))
        {
            errorMsg = strFmt(EGAISClient_RU::txtNotExist(), _clientRegId);

            if (_throwError)
            {
                throw error(errorMsg, '', SysInfoAction_MenuFunction::newMenuItem(menuitemDisplayStr(EGAISClient_RU), MenuItemType::Display));
            }

            ret = checkFailed(errorMsg);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(EGAISClientRegId_RU _clientRegId)
    {
        return _clientRegId && (select firstonly RecId from EGAISClient_RU
                                index hint RegIdx
                                where EGAISClient_RU.RegId == _clientRegId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>EGAISClient_RU</c> table.
    /// </summary>
    /// <param name="_clientRegId">
    ///    Registration ID of the EGAIS counteragent.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    A record in the <c>EGAISClient_RU</c> table.
    /// </returns>
    public static EGAISClient_RU find(EGAISClientRegId_RU _clientRegId,
        boolean _forUpdate = false)
    {
        EGAISClient_RU eGAISClient;

        if (_clientRegId)
        {
            if (_forUpdate)
            {
                eGAISClient.selectForUpdate(_forUpdate);
            }

            select firstonly eGAISClient
            index hint RegIdx
            where eGAISClient.RegId == _clientRegId;
        }

        return eGAISClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByParty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>EGAISClient_RU</c> table which was settled with the specific AX Party.
    /// </summary>
    /// <param name="_dirPartyRecId">
    ///    Party RecId to use for the searching.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EGAISClient_RU</c> table.
    /// </returns>
    public static EGAISClient_RU findByParty(DirPartyRecId _dirPartyRecId,
        boolean _forUpdate = false)
    {
        EGAISClient_RU  eGAISClient;

        if (_dirPartyRecId)
        {
            if (_forUpdate)
            {
                eGAISClient.selectForUpdate(_forUpdate);
            }

            select firstonly eGAISClient
            index hint PartyIdx
            where eGAISClient.Party == _dirPartyRecId;
        }

        return eGAISClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static EGAISClient_RU findRecId(RecId _recId,
        boolean _forUpdate = false)
    {
        EGAISClient_RU   eGAISclient;

        if (_recId)
        {
            eGAISclient.selectForUpdate(_forUpdate);

            select firstonly eGAISclient
            where eGAISclient.RecId == _recId;
        }

        return eGAISclient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@EGAIS:EgaisCounteragentDoesNotExist";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@EGAIS:TableContainsAListOfEgaisCounteragents</DeveloperDocumentation>
	<FormRef>EGAISClient_RU</FormRef>
	<Label>@EGAIS:EgaisCounteragents</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>RegId</TitleField1>
	<TitleField2>FullName</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>EGAIS</Modules>
	<ReplacementKey>RegIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FullName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShortName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS124648</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Country</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Area</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Place</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Street</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>House</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Building</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Liter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FullName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShortName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Name</Name>
			<Label>@SYS92116</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FullName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShortName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FullName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxRegistration</Name>
			<Label>@GLS221026</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>INN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KPP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UNP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RNN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Area</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@GLS109067</HelpText>
			<Label>@SYS50334</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Building</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@GLS114674</HelpText>
			<Label>@SYS4080942</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>City</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@SYS303350</HelpText>
			<Label>@SYS22249</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Country</Name>
			<ExtendedDataType>EGAISClientCountry_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>EGAISClientDescription_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FullName</Name>
			<ExtendedDataType>EGAISFullName_RU</ExtendedDataType>
			<HelpText>@EGAIS:EgaisCounteragentFullName</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>House</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@GLS105912</HelpText>
			<Label>@EGAIS:House</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>INN</Name>
			<ExtendedDataType>INN_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KPP</Name>
			<ExtendedDataType>KPPU_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Liter</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@EGAIS:AlphabeticPostalCode</HelpText>
			<Label>@EGAIS:Letter</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<HelpText>@EGAIS:PartyWhichIsSettledWithTheEgaisCounteragent</HelpText>
			<Label>@SYS126057</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Place</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@EGAIS:PlaceDescription</HelpText>
			<Label>@EGAIS:Place</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>EGAISClientRegId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegionCode</Name>
			<ExtendedDataType>EGAISClientRegionCode_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RNN</Name>
			<ExtendedDataType>RNN_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShortName</Name>
			<ExtendedDataType>EGAISShortName_RU</ExtendedDataType>
			<HelpText>@EGAIS:EgaisCounteragentShortName</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>State</Name>
			<EnumType>EGAISClientState_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Street</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@SYS344687</HelpText>
			<Label>@SYS323505</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<EnumType>EGAISClientType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UNP</Name>
			<ExtendedDataType>UNP_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaybillVersion</Name>
			<ExtendedDataType>EGAISWaybillVersion_RU</ExtendedDataType>
			<EnumType>EGAISDocumentVersion_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ZipCode</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@EGAIS:ZippostalCodeOfTheRegion</HelpText>
			<Label>@SYS113530</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RegIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RegId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PartyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>