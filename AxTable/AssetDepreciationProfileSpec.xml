<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepreciationProfileSpec</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetDepreciationProfileSpec extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accumulatedPercent</Name>
				<Source><![CDATA[
    display AssetDepreciationPercentage accumulatedPercent()
    {
        return  (select sum(Percentage) from assetDepreciationProfileSpec
                     where assetDepreciationProfileSpec.Profile  == this.Profile &&
                           assetDepreciationProfileSpec.Interval <= this.Interval  ).Percentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextInterval</Name>
				<Source><![CDATA[
    public void nextInterval()
    {
        AssetDepreciationProfileSpec    assetDepreciationProfileSpecLocal;

        select maxof(Interval)
            from assetDepreciationProfileSpecLocal
            where assetDepreciationProfileSpecLocal.Profile == this.Profile;

        this.Interval = assetDepreciationProfileSpecLocal.Interval + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumProfileId</Name>
				<Source><![CDATA[
    display AssetDepreciationPercentage sumProfileId()
    {
        return  (select sum(Percentage) from assetDepreciationProfileSpec
                     where assetDepreciationProfileSpec.Profile  == this.Profile).Percentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(
        AssetDepreciationProfileId  _assetDepreciationProfileId,
        AssetInterval               _assetInterval)
    {
        boolean ret = true;

        if (!AssetDepreciationProfileSpec::exist(_assetDepreciationProfileId, _assetInterval))
        {
            ret = checkFailed(strFmt(AssetDepreciationProfileSpec::txtNotExist(), _assetDepreciationProfileId, _assetInterval));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        AssetDepreciationProfileId  _assetDepreciationProfileId,
        AssetInterval               _assetInterval)
    {
        boolean found;

        found = (select firstonly
                     RecId
                 from
                     assetDepreciationProfileSpec
                 where
                     assetDepreciationProfileSpec.Profile == _assetDepreciationProfileId &&
                     assetDepreciationProfileSpec.Interval == _assetInterval).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static AssetDepreciationProfileSpec find(
        AssetDepreciationProfileId  _assetDepreciationProfileId,
        AssetInterval               _assetInterval  = 1,
        boolean                     _forUpdate      = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetDepreciationProfileSpec assetDepreciationProfileSpec;

        assetDepreciationProfileSpec.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetDepreciationProfileSpec.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            assetDepreciationProfileSpec
        where
            assetDepreciationProfileSpec.Profile  == _assetDepreciationProfileId
            && assetDepreciationProfileSpec.Interval == _assetInterval;

        return assetDepreciationProfileSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfIntervals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the number of intervals from <b>AssetDepreciationProfileSpec</b> specified for a given depreciation profile.
    /// </summary>
    /// <param name="_profileId">
    /// A depreciation profile for which depreciation schedule is defined.
    /// </param>
    /// <returns>
    /// Returns number of intervals if the depreciation schedule is defined; otherwise 0 is returned.
    /// </returns>
    public static AssetInterval getNumberOfIntervals(AssetDepreciationProfileId _profileId)
    {
        AssetDepreciationProfileSpec assetDepreciationProfileSpec;
        AssetInterval returnValue;

        if (_profileId)
        {
            returnValue = (select count(Interval) from assetDepreciationProfileSpec
                                where assetDepreciationProfileSpec.Profile == _profileId).Interval;
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS100062";
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// The insert method creates and assigns a new Interval value if it is not provided.
    /// </summary>
    public void insert()
    {
        if (!this.Interval)
        {
            this.nextInterval();
        }
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@SYS127365</DeveloperDocumentation>
	<FormRef>AssetDepreciationProfile</FormRef>
	<Label>@FixedAssets:FA_TableTitle_AssetDepreciationProfileSpec</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>Profile</TitleField1>
	<TitleField2>Percentage</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>DeprProfileTransIdx</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>DeprProfileTransIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Profile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Profile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Percentage</Name>
			<Label>@SYS67344</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Interval</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetInterval</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciationPercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Profile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciationProfileId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DeprProfileTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Profile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Interval</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AssetDepreciationProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS127399</EntityRelationshipRole>
			<RelatedTable>AssetDepreciationProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetDepreciationProfile</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>AssetDepreciationProfileSpec</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Profile</Name>
					<SourceEDT>AssetDepreciationProfileId</SourceEDT>
					<Field>Profile</Field>
					<RelatedField>Profile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>