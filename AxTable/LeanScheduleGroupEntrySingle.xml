<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanScheduleGroupEntrySingle</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanScheduleGroupEntrySingle extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        super();
        LeanScheduleGroupCache::construct().clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        super();
        LeanScheduleGroupCache::construct().clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        if (   this.ItemId      != this.orig().ItemId
            || this.InventDimId != this.orig().InventDimId)
        {
            LeanScheduleGroupCache::construct().clearCache();
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUniqueness</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the uniqueness of the record among cell locations.
    /// </summary>
    /// <param name="_parentLeanScheduleGroup">
    /// The <c>LeanScheduleGroup</c> parent record.
    /// </param>
    /// <returns>
    /// true if the record is unique; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The method parameter is required because at the point it is created, the chain up to the
    /// <c>LeanScheduleGroup</c> record is not yet established.
    /// </remarks>
    public boolean validateUniqueness(LeanScheduleGroup _parentLeanScheduleGroup)
    {
        LeanScheduleGroupItem leanScheduleGroupItem;
        LeanScheduleGroup leanScheduleGroup;
        LeanScheduleGroupEntrySingle leanScheduleGroupEntrySingle;

        boolean ret = true;

        // check if there's another group that's using the same item + dimensions
        // on the same lean location
        select firstonly RecId
        from leanScheduleGroupEntrySingle
            where leanScheduleGroupEntrySingle.ItemId                   == this.ItemId
                  && leanScheduleGroupEntrySingle.InventDimId           == this.InventDimId
                  && leanScheduleGroupEntrySingle.RecId                 != this.RecId
        join TableId from leanScheduleGroupItem
            where leanScheduleGroupItem.RecId == leanScheduleGroupEntrySingle.LeanScheduleGroupItem
        join WorkCell, Name from leanScheduleGroup
            where leanScheduleGroup.RecId == leanScheduleGroupItem.ScheduleGroup
               && leanScheduleGroup.WorkCell == _parentLeanScheduleGroup.WorkCell;

        if (leanScheduleGroupEntrySingle.RecId != 0)
        {
            ret = leanScheduleGroup.WorkCell != 0 ?
                checkFailed(strFmt("@SYS139126", WrkCtrResourceGroup::find(leanScheduleGroup.WorkCell).WrkCtrId)) :
                checkFailed(strFmt("@SYS139127", leanScheduleGroup.Name));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>LeanScheduleGroupEntrySingle</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>LeanScheduleGroupEntrySingle</c> record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return _recId &&
               (select firstonly RecId from leanScheduleGroupEntrySingle
                    where leanScheduleGroupEntrySingle.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LeanScheduleGroupEntrySingle</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>LeanScheduleGroupEntrySingle</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LeanScheduleGroupEntrySingle</c> table; otherwise, an empty record.
    /// </returns>
    public static LeanScheduleGroupEntrySingle find(
        RefRecId _recId,
        boolean  _forUpdate = false)
    {
        LeanScheduleGroupEntrySingle leanScheduleGroupEntrySingle;

        if (_recId)
        {
            leanScheduleGroupEntrySingle.selectForUpdate(_forUpdate);

            select firstonly leanScheduleGroupEntrySingle
                where leanScheduleGroupEntrySingle.RecId == _recId;
        }

        return leanScheduleGroupEntrySingle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLeanScheduleGroupItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LeanScheduleGroupEntrySingle</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the parent LeanScheduleGroupItem record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LeanScheduleGroupEntrySingle</c> table; otherwise, an empty record.
    /// </returns>
    public static LeanScheduleGroupEntrySingle findLeanScheduleGroupItem(
        RefRecId _recId,
        boolean  _forUpdate = false)
    {
        LeanScheduleGroupEntrySingle leanScheduleGroupEntrySingle;

        if (_recId)
        {
            leanScheduleGroupEntrySingle.selectForUpdate(_forUpdate);

            select firstonly leanScheduleGroupEntrySingle
                where leanScheduleGroupEntrySingle.LeanScheduleGroupItem == _recId;
        }

        return leanScheduleGroupEntrySingle;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS325881</DeveloperDocumentation>
	<FormRef>LeanScheduleGroup</FormRef>
	<Label>@SYS132035</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>LeanScheduleGroupItem</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>LeanScheduleGroupItem</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeanScheduleGroupItem</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeanScheduleGroupItem</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS131988</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeanScheduleGroupItem</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ItemRelation</Name>
			<Label>@SYS131924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LeanScheduleGroupItem</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeanScheduleGroupItemRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemRelation</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LeanScheduleGroupItem</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LeanScheduleGroupItem</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventoryDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LeanScheduleGroupEntrySingle</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Item</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LeanScheduleGroupEntrySingle</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LeanScheduleGroupItem</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LeanScheduleGroupItem</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Parent</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LeanScheduleGroupEntrySingle</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LeanScheduleGroupItem</Name>
					<Field>LeanScheduleGroupItem</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>