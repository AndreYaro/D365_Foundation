<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveErroredIndicator</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveErroredIndicator extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRecordIfUnique</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>WHSWaveErroredIndicator</c> record if it is unique.
    /// </summary>
    /// <param name="_waveId">
    /// The waveId for the record.
    /// </param>
    /// <param name="_waveExecutionId">
    /// The waveExecutionId for the record.
    /// </param>
    public static void createRecordIfUnique(WHSWaveId _waveId, WHSWaveExecutionId _waveExecutionId)
    {
        UserConnection          conn = new UserConnection();

        try
        {
            conn.ttsbegin();

            if (!WHSWaveErroredIndicator::exists(_waveId, _waveExecutionId))
            {
                WHSWaveErroredIndicator waveErroredIndicator;
                waveErroredIndicator.setConnection(conn);

                waveErroredIndicator.WaveId = _waveId;
                waveErroredIndicator.WaveExecutionID = _waveExecutionId;

                // Calling validate write should prevent duplicate records from being created for the same wave run if mulitple allocation threads fail
                if (waveErroredIndicator.validateWrite())
                {
                    waveErroredIndicator.insert();
                }
            }

            conn.ttscommit();
        }
        catch (Exception::DuplicateKeyException)
        {
            conn.ttsabort();
            // If we still hit duplicate key exception we should just utilize the existing WHSWaveErroredIndicator record.
        }
        finally
        {
            conn.finalize();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    public static boolean exists(
        WHSWaveId           _waveId,
        WHSWaveExecutionId  _waveExecutionId)
    {
        return (_waveId && _waveExecutionId)
        &&     (select firstOnly RecId from WHSWaveErroredIndicator
                    where WHSWaveErroredIndicator.WaveId            == _waveId
                    &&    WHSWaveErroredIndicator.WaveExecutionID   == _waveExecutionId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WaveErrorIndicatorDeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:WaveErrorIndicatorLabel</Label>
	<TitleField1>WaveId</TitleField1>
	<TitleField2>WaveExecutionID</TitleField2>
	<ClusteredIndex>WaveIdWaveExecutionIdIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveIdWaveExecutionIdIdx</PrimaryIndex>
	<ReplacementKey>WaveidWaveExecutionIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveExecutionID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveExecutionID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveidWaveExecutionIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveExecutionID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWaveTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveId</Name>
					<SourceEDT>WHSWaveId</SourceEDT>
					<Field>WaveId</Field>
					<RelatedField>WaveId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>