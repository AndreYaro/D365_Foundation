<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegisterTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTax25RegisterTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display NotesLine description()
    {
        return RTax25RegType::construct(this.RegisterType).description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>descriptionExt</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display NotesLine descriptionExt()
    {
        return RTax25RegType::construct(this.RegisterType).descriptionExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillHiddenFields</Name>
				<Source><![CDATA[
    private void fillHiddenFields(container _contain)
    {
        RTax25RegisterHideSetup hideSetup;
        int                     i;
        ;

        for (i = 1; i <= conlen(_contain); i++)
        {
            hideSetup.RegisterId = this.RegisterId;
            hideSetup.FieldId    = conpeek(_contain, i);
            hideSetup.TableTrans = NoneTableTrans::Table;
            hideSetup.Hided      = NoYes::Yes;
            hideSetup.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        this.fillHiddenFields(RTax25RegType::construct(this.RegisterType).hiddenFields());

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _p1)
    {
        boolean       ret;
        RTax25RegType rTax25RegType;

        ret = super(_p1);

        if (ret)
        {
            switch (_p1)
            {
                case fieldnum(RTax25RegisterTable,RegisterType):
                    rTax25RegType   = RTax25RegType::construct(this.RegisterType);
                    this.RegisterName = enum2str(rTax25RegType.registerType());
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistRegisterId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExistRegisterId(RTax25RegisterId _registerId)
    {
        if (_registerId && ! RTax25RegisterTable::existRegisterId(_registerId))
            return checkFailed(strfmt(RTax25RegisterTable::txtNotExist(), _registerId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RTax25RegisterType registerType)
    {
        return (select  rTax25RegisterTable
                where rTax25RegisterTable.RegisterType == registerType).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRegisterId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existRegisterId(RTax25RegisterId _registerId)
    {
        return (select firstonly RecId from rTax25RegisterTable
                    where rTax25RegisterTable.RegisterId == _registerId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterTable  find(RTax25RegisterType _registerType,
                                     boolean            _update = false)
    {
        RTax25RegisterTable  registerTable;
        ;
        registerTable.selectForUpdate(_update);

        select firstonly registerTable
            index TypeIdx
            where registerTable.RegisterType == _registerType;

        return registerTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRegisterId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterTable  findRegisterId(RTax25RegisterId _registerId,
                                               boolean          _update = false)
    {
        RTax25RegisterTable  registerTable;
        ;
        registerTable.selectForUpdate(_update);

        select firstonly registerTable
            index TypeIdx
            where registerTable.RegisterId == _registerId;

        return registerTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>notExistsOrDisabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if record in RTax25RegisterTable does not exist for specified registerID or it is disabled.
    /// </summary>
    /// <param name="registerId">
    /// Register ID
    /// </param>
    /// <returns>
    /// true if the record does not exist or disabled; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean notExistsOrDisabled(RTax25RegisterId registerId)
    {
        RTax25RegisterTable registerTable;
        registerTable = RTax25RegisterTable::findRegisterId(registerId);
        return !registerTable || registerTable.Disabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerId2Type</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterType registerId2Type(RTax25RegisterId _registerId)
    {
        return (select firstonly RegisterType from rTax25RegisterTable
                    index hint RegisterIdx
                    where rTax25RegisterTable.RegisterId == _registerId).RegisterType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterName registerName(RTax25RegisterId _registerId)
    {
        RTax25RegisterTable  registerTable;
        
        select firstonly registerTable
            index TypeIdx
            where registerTable.RegisterId == _registerId;

        return registerTable.RegisterName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerType2Id</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterId registerType2Id(RTax25RegisterType _registerType)
    {
        return (select firstonly RegisterId from rTax25RegisterTable
                    index hint TypeIdx
                    where rTax25RegisterTable.RegisterType == _registerType).RegisterId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TxtNotExist txtNotExist()
    {
        return "@GLS104114";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return RTax25DebtModel::checkRegisterType(this.RegisterType, this.PeriodType) && super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTax25RegisterTable</FormRef>
	<Label>@GLS103742</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RegisterId</TitleField1>
	<TitleField2>RegisterName</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RegisterIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>RTax25</Modules>
	<PrimaryIndex>TypeIdx</PrimaryIndex>
	<ReplacementKey>TypeIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RTax25ProfitTotalsSetup</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RTax25ProfitTotalsSetup</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RTax25RegisterHideSetup</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RTax25RegisterHideSetup</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RTax25RegisterJournalTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RTax25RegisterJournalTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RTax25RegisterParameters</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RTax25RegisterParameters</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RTax25RegisterProfit</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RTax25RegisterProfit</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegisterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegisterType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Disabled</Name>
			<Label>@SYS4082125</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Disabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegisterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Periodicity</Name>
			<Label>@GLS104210</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Expand</Name>
			<Label>@SYS22914</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Expand</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Disabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS4082125</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25PeriodType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegisterId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25RegisterId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegisterName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25RegisterName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RegisterType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25RegisterType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Expand</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS22914</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RegisterType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RegisterIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RegisterId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>