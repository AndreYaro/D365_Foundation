<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgShopSupervisorMyTeam</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgShopSupervisorMyTeam extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks for a <c>JmgShopSupervisorMyTeam</c> record with a given user/worker combination,
    /// and creates a record if it did not find one.
    /// </summary>
    /// <param name="_user">
    ///    User for which <c>JmgShopSupervisorMyTeam</c> record is being searched.
    /// </param>
    /// <param name="_worker">
    ///    RecId from <c>HcmWorker</c> record for which <c>JmgShopSupervisorMyTeam</c> record is being searched.
    /// </param>
    /// <returns>
    ///    <c>JmgShopSupervisorMyTeam</c> record created or found.
    /// </returns>
    public static JmgShopSupervisorMyTeam findOrCreate(UserId _user, JmgWorkerRecId _worker)
    {
        JmgShopSupervisorMyTeam team = JmgShopSupervisorMyTeam::find(_user, _worker);

        if (!team.RecId)
        {
            team.UserId = _user;
            team.Worker = _worker;
            team.insert();
        }

        return team;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find <c>JmgShopSupervisorMyTeam</c> record with a given user/worker combination,
    /// </summary>
    /// <param name="_user">
    ///    User for which <c>JmgShopSupervisorMyTeam</c> record is being searched.
    /// </param>
    /// <param name="_worker">
    ///    RecId from <c>HcmWorker</c> record for which <c>JmgShopSupervisorMyTeam</c> record is being searched.
    /// </param>
    /// <returns>
    ///  The <c>JmgShopSupervisorMyTeam</c> record if found else null buffer.
    /// </returns>
    public static JmgShopSupervisorMyTeam find(UserId _user, JmgWorkerRecId _worker)
    {
        JmgShopSupervisorMyTeam team;

        if (_user && _worker)
        {
            select firstonly team
                where team.UserId == _user
                   && team.Worker == _worker;
        }

        return team;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Jmg</ConfigurationKey>
	<DeveloperDocumentation>@SCM:JmgShopSupervisorMyTeam</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS338766</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>UserId</TitleField1>
	<TitleField2>Worker</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductionControl</Modules>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>HcmWorker</Name>
			<Relation></Relation>
			<Table>HcmWorker</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
			<Label>@SYS4517</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWorkerRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UserIdWorkerIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>UserId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Worker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>