<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocumentEmailAccount_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EFDocumentEmailAccount_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editPassword</Name>
				<Source><![CDATA[
    /// <summary>
    /// An edit method for the password field
    /// </summary>
    /// <param name="_set">
    /// True if the value is being set on the edit field, false otherwise
    /// </param>
    /// <param name="_pwd">
    /// The value that is being set on the field
    /// </param>
    /// <returns>
    /// A masked string value representing the password entered on the field
    /// </returns>
    edit Password editPassword(boolean _set = false, Password _pwd = '')
    {
        if (_set)
        {
            Global::editEncryptedField(this, _pwd, fieldNum(EFDocumentEmailAccount_BR, Password), _set);
        }

        return (this.Password == connull()) ? '' : 'xxxxxxxx';
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        Global::handleEncryptedTablePreInsert(this);
        super();
        Global::handleEncryptedTablePostInsert(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        Global::handleEncryptedTablePreUpdate(this);
        super();
        Global::handleEncryptedTablePostUpdate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (ret && this.UseModernAuth && !this.checkAllModernAuthParametersProvided())
        {
            ret = checkFailed("@Brazil:ModernAuthMissingParameterError");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        switch(_fieldIdToCheck)
        {
            case fieldNum(EFDocumentEmailAccount_BR, LoginAuthority):
                ret = ret && this.validateLoginAuthority();
                break;

            case fieldNum(EFDocumentEmailAccount_BR, ResourceId):
                ret = ret && this.validateResourceId();
                break;

            default:
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAllModernAuthParametersProvided</Name>
				<Source><![CDATA[
    private boolean checkAllModernAuthParametersProvided()
    {
        return this.ClientIdKeyVaultRef &&
               this.ClientSecretKeyVaultRef &&
               this.TenantIdKeyVaultRef &&
               this.ResourceId &&
               this.LoginAuthority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLoginAuthority</Name>
				<Source><![CDATA[
    private boolean validateLoginAuthority()
    {
        boolean ret = true;

        if (this.LoginAuthority)
        {
            const str LoginAuthorityUriPattern = @"^https:\/\/(?<%1>[\w-]+)\.microsoftonline\.com[\/]?$";
            const str LoginAuthorityUriCapturedGroupName = "name";

            System.Text.RegularExpressions.Regex regEx = new System.Text.RegularExpressions.Regex(strFmt(LoginAuthorityUriPattern, LoginAuthorityUriCapturedGroupName));
            System.Text.RegularExpressions.Match regExMatch = regEx.Match(this.LoginAuthority);

            if (!regExMatch.get_Success())
            {
                ret = checkFailed("@Brazil:EFDocumentEmailLoginAuthorityValidationMessage");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateResourceId</Name>
				<Source><![CDATA[
    private boolean validateResourceId()
    {
        boolean ret = true;

        if (this.ResourceId)
        {
            const str ResourceIdUriPattern = @"^https:\/\/(?<%1>[\w-]+)\.(office|office365)\.com[\/]?$";
            const str ResourceIdUriCapturedGroupName = "name";

            System.Text.RegularExpressions.Regex regEx = new System.Text.RegularExpressions.Regex(strFmt(ResourceIdUriPattern, ResourceIdUriCapturedGroupName));
            System.Text.RegularExpressions.Match regExMatch = regEx.Match(this.ResourceId);

            if (!regExMatch.get_Success())
            {
                ret = checkFailed("@Brazil:EFDocumentEmailServerResourceURIValidationMessage");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4003355</DeveloperDocumentation>
	<Label>@SYS4003352</Label>
	<TitleField1>Username</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>FiscalBooksBrazil</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Username</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServerAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS4003352</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServerAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Port</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseSsl</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Username</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editPassword</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseModernAuth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TenantIdKeyVaultRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClientIdKeyVaultRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClientSecretKeyVaultRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoginAuthority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Password</Name>
			<AssetClassification>Access Control Data</AssetClassification>
			<ExtendedDataType>SysEmailPopServerPassword</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Port</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SysEmailPopServerPort</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServerAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SysEmailPopServerAddress</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Username</Name>
			<AssetClassification>End User Identifiable Information (EUII)</AssetClassification>
			<ExtendedDataType>SysEmailReadUsername</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseSsl</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysEmailPopServerUseSsl</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ClientIdKeyVaultRef</Name>
			<ExtendedDataType>KeyVaultCertificateRef</ExtendedDataType>
			<HelpText>@Brazil:EFDocEmailClientIdHelpText</HelpText>
			<Label>@Brazil:EfDocEmailClientIdLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ClientSecretKeyVaultRef</Name>
			<ExtendedDataType>KeyVaultCertificateRef</ExtendedDataType>
			<HelpText>@Brazil:EfDocEmailClientSecretHelpText</HelpText>
			<Label>@Brazil:EfDocEmailClientSecretLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TenantIdKeyVaultRef</Name>
			<ExtendedDataType>KeyVaultCertificateRef</ExtendedDataType>
			<HelpText>@Brazil:EfDocEmailTenantIdHelpText</HelpText>
			<Label>@ApplicationFoundation:B2BTenantID</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ResourceId</Name>
			<ExtendedDataType>SysOAuthResourceId</ExtendedDataType>
			<HelpText>@Brazil:EfDocEmailResourceIdHelpText</HelpText>
			<Label>@Brazil:EfDocEmailResourceIdLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoginAuthority</Name>
			<ExtendedDataType>SysEmailAuthLoginAuthority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseModernAuth</Name>
			<ExtendedDataType>SysEmailPopServerUseModernAuth</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EmailAccountIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Username</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ClientIdKeyVaultRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>KeyVaultCertificateRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ClientId</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClientIdKeyVaultRef</Name>
					<Field>ClientIdKeyVaultRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ClientSecretKeyVaultRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>KeyVaultCertificateRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ClientSecret</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClientSecretKeyVaultRef</Name>
					<Field>ClientSecretKeyVaultRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TenantIdKeyVaultRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>KeyVaultCertificateRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TenantId</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TenantIdKeyVaultRef</Name>
					<Field>TenantIdKeyVaultRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>