<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdParmUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdParmUpdate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the specified <c>ProdParmUpdate</c> record from the <c>ProdParmUpdate</c> table.
    /// </summary>
    /// <param name="_parmId">
    /// The parameter ID to which the <c>ProdParmUpdate</c> and <c>ParmId</c> fields correspond.
    /// </param>
    static void deleteParameters(ParmId _parmId)
    {
        ProdParmUpdate prodParmUpdate;

        ttsbegin;
        delete_from prodParmUpdate
            where prodParmUpdate.ParmId == _parmId;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>ProdParmUpdate</c> table to find the specified <c>ProdParmUpdate</c> record.
    /// </summary>
    /// <param name="_parmId">
    /// The parameter ID to which the <c>ProdParmUpdate</c> and <c>ParmId</c> fields correspond.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>ProdParmUpdate</c> buffer.
    /// </returns>
    static ProdParmUpdate find(
        ParmId              _parmId,
        boolean             _forUpdate = false)
    {
        ProdParmUpdate     prodParmUpdate;

        prodParmUpdate.selectForUpdate(_forUpdate);

        if (_parmId)
        {
            select firstonly prodParmUpdate
                where prodParmUpdate.ParmId == _parmId;
        }

        return prodParmUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@GLS3800001</DeveloperDocumentation>
	<Label>@GLS3800002</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ParmId</TitleField1>
	<TitleField2>LateSelection</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>ParmIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LateSelection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Parameters</Name>
			<Label>@SYS7764</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LateSelection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LateSelection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LateSelection</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>LateSelectionQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LateSelectionQuery</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ParmUpdate</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
					<MapFieldTo>LateSelectionQuery</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
					<MapFieldTo>LateSelection</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Storno_RU</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>