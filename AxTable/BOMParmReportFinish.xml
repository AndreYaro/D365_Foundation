<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMParmReportFinish</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOMParmReportFinish extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>CompanyInfo</c> record that is associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>configId</Name>
				<Source><![CDATA[
    display EcoResItemConfigurationName configId()
    {
        return this.inventDim().ConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that is applied to the <c>defaultDimension</c> field on the
    /// <c>BOMParmReportFinish</c> table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set that is applied to the <c>defaultDimension</c> field on the
    /// <c>BOMParmReportFinish</c> table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// An instance of the <c>dimensionCopy</c> object created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set applied to the <c>defaultDimension</c> field on the <c>BOMParmReportFinish</c>
    /// table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBOMVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current <c>BOMParmReportFinish</c> record with settings from a <c>BOMVersion</c>
    ///    record.
    /// </summary>
    /// <param name="_bomVersion">
    ///    A record of type <c>BOMVersion</c>.
    /// </param>
    void initFromBOMVersion(BOMVersion  _bomVersion)
    {
        InventTable     inventTable = _bomVersion.inventTable();
        InventDim       inventDim;

        this.ItemId                 = _bomVersion.ItemId;
        this.bomId                  = _bomVersion.bomId;
        this.Qty                    = _bomVersion.FromQty > 0 ? _bomVersion.FromQty : inventTable.inventStandardQty(inventDim.InventDimId);

        if (inventTable.pdsCWItem())
        {
            this.PdsCWQty           = _bomVersion.PdsCWSize;
            this.Qty                = PdsCatchWeight::inventQty(this.ItemId, this.PdsCWQty);
        }
        else
        if (_bomVersion.PmfTypeId == PmfBOMFormula::Formula)
        {
            this.Qty                = _bomVersion.PmfBatchSize;
        }

        this.Height                 = inventTable.Height;
        this.Width                  = inventTable.Width;
        this.Depth                  = inventTable.Depth;
        this.Density                = inventTable.Density;

        inventDim = _bomVersion.inventDim().data();

        inventDim.initFromInventTable(inventTable, InventItemOrderSetupType::Invent, inventDim);
        inventDim = InventDim::findOrCreate(inventDim);

        this.setInventDimIdFromInventDim(inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventJournalTrans</Name>
				<Source><![CDATA[
    void initFromInventJournalTrans(InventJournalTrans inventJournalTrans)
    {
        this.JournalId   = inventJournalTrans.JournalId;
        if (! this.JournalId && FormDataUtil::getFormDataSource(inventJournalTrans))
        {
            FormDataUtil::getFormDataSource(inventJournalTrans).initValue();
            this.JournalId = inventJournalTrans.JournalId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventParameters</Name>
				<Source><![CDATA[
    void initFromInventParameters()
    {
        this.JournalNameId = InventParameters::find().bomJournalNameId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    void initFromInventTable(InventTable _inventTable, InventSiteId _siteId = '')
    {
        this.initReleasedProductSpecificDefaulting(_inventTable);
        this.initDimensionsSpecificDefaulting(_inventTable, _siteId, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReleasedProductSpecificDefaulting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes settings that are based on the released product.
    /// </summary>
    /// <param name = "_inventTable">The item record; optional.</param>
    public void initReleasedProductSpecificDefaulting(InventTable _inventTable)
    {
        this.ItemId                 = _inventTable.ItemId;
        this.Height                 = _inventTable.Height;
        this.Width                  = _inventTable.Width;
        this.Depth                  = _inventTable.Depth;
        this.Density                = _inventTable.Density;

        this.DefaultDimension       = this.copyDimension(_inventTable.DefaultDimension);

        InventDim inventDim = this.inventDim();
        inventDim.initProductDimensionsFromInventTable(_inventTable, inventDim);
        this.setInventDimIdFromInventDim(inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDimensionsSpecificDefaulting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes dimension dependent fields.
    /// </summary>
    /// <param name = "_inventTable">The item record; optional.</param>
    /// <param name = "_siteId">Input for initial defaulting of site; optional</param>
    /// <param name = "_forceQtyUpdate">Determines if the quantity field should always be re-defaulted even if it is already set; optional.</param>
    public void initDimensionsSpecificDefaulting(InventTable _inventTable = this.inventTable(), InventSiteId _siteId = '', boolean _forceQtyUpdate = false)
    {
        InventDim inventDim = this.inventDim();

        if (!InventDistinctProductValidator::construct().isDistinctProductFullySpecified(this.ItemId, inventDim))
        {
            return;
        }

        if (_siteId)
        {
            inventDim.InventSiteId = _siteId;
        }

        inventDim.initFromInventTable(_inventTable, InventItemOrderSetupType::Invent, inventDim);
        inventDim = InventDim::findOrCreate(inventDim);

        this.setInventDimIdFromInventDim(inventDim);

        if (!this.Qty || _forceQtyUpdate)
        {
            this.Qty = _inventTable.inventStandardQty(inventDim.InventDimId);

            if (this.inventTable().pdsCWItem())
            {
                this.PdsCWQty           = this.Qty;
                this.Qty                = PdsCatchWeight::inventQty(this.ItemId, this.PdsCWQty);
            }
        }

        BOMId activeBOMId = _inventTable.bomId(this.TransDate, this.Qty, inventDim);
        if (activeBOMId != this.BOMId &&
            (!this.BOMId || !this.isFormDataSource() || this.promptChangeBOM()))
        {
            this.bomId = activeBOMId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptChangeBOM</Name>
				<Source><![CDATA[
    public boolean promptChangeBOM()
    {
        return Box::yesNo("@SYS102617", DialogButton::Yes, "@SYS102643", "") == DialogButton::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles reinitialization if needed when an associated <c>InventDim</c> buffer is changed.
    /// </summary>
    /// <param name = "_inventDim">The <c>InventDim</c> buffer.</param>
    /// <param name = "_inventDimFieldId">The field that was changed.</param>
    public void modifiedInventDim(InventDim _inventDim, FieldId _inventDimFieldId)
    {
        boolean isFieldProductOrSiteDimension = _inventDim.siteOrProductDimFieldModified(_inventDimFieldId);
        this.InventDimId = _inventDim.inventDimId;

        if (isFieldProductOrSiteDimension)
        {
            this.initDimensionsSpecificDefaulting();
        }

        _inventDim.refreshFormDataSource(this.inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransIdReturn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current <c>BOMParmReportFinish</c> record with settings based on the return lot ID.
    /// </summary>
    public void initFromInventTransIdReturn()
    {
        InventTransOrigin       inventTransOrigin;
        InventTrans             inventTrans;
        InventJournalTrans      journalTransReturn;

        if (this.InventTransIdReturn)
        {
            if (this.InventTransIdReturn != this.orig().InventTransIdReturn)
            {
                select TableId from inventTransOrigin
                    where inventTransOrigin.InventTransId       == this.InventTransIdReturn
                    join sum(Qty),sum(CostAmountPosted),sum(CostAmountAdjustment) from inventTrans
                        where inventTrans.InventTransOrigin     == inventTransOrigin.RecId
                           && inventTrans.StatusIssue           == StatusIssue::None
                           && inventTrans.StatusReceipt         == StatusReceipt::Purchased
                           && inventTrans.PackingSlipReturned   == NoYes::No;

                this.ReturnCostPrice = inventTrans.costPrice();

                if (this.Qty)
                {
                    this.Qty = max(- inventTrans.Qty, - abs(this.Qty));
                }
                else
                {
                    this.Qty = - inventTrans.Qty;
                }

                this.PdsCWQty = PdsCatchWeight::cwQty(this.ItemId, this.Qty);

                journalTransReturn = InventJournalTrans::findInventTransId(this.InventTransIdReturn);
                if (journalTransReturn)
                {
                    this.setInventDimId(journalTransReturn.InventDimId);
                }
                else
                {
                    this.setInventDimId(InventDim::inventDimIdBlank());
                }
            }
        }
        else
        {
            this.ReturnCostPrice = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        this.initFromInventParameters();

        this.ProfitSet           = CostProfitSet::Standard;
        this.Explode             = BOMExplode::Never;
        this.OverrideDimension   = NoYes::No;
        this.PostNow             = NoYes::Yes;
        this.TransDate           = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.JournalNameId       = InventParameters::find().bomJournalNameId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();
        this.TransDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim(boolean _forUpdate = false)
    {
        return InventDim::find(this.InventDimId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    InventTable inventTable()
    {
        return InventTable::find(this.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInventDim2Dimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies default <c>BOMParmReportFinish.dimension</c> values that are based on the <c>InventDim</c>
    ///    record buffer values.
    /// </summary>
    /// <param name="_newInventDim">
    ///    The <c>InventDim</c> record buffer linked to the current <c>BOMParmReportFinish</c> record buffer.
    /// </param>
    /// <param name="_oldInventDim">
    ///    The <c>InventDim</c> record buffer that was previously linked to the current
    ///    <c>BOMParmReportFinish</c> record buffer.
    /// </param>
    public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
    {
        _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    ///    field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was initialized by using the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    ///    this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(BOMParmReportFinish, InventTransIdReturn):
                this.initFromInventTransIdReturn();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsValidateCWQty</Name>
				<Source><![CDATA[
    private boolean pdsValidateCWQty()
    {
        if (this.PdsCWQty >= 0 && this.InventTransIdReturn)
        {
            return checkFailed("@PDS1882");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies the <c>InventDimId</c> parameter to the <c>BOMParmReportFinish.inventDimId</c> field and
    ///    assigns default values that are based on the new inventory dimensions.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The <c>InventDimId</c> value that should be applied to the <c>BOMParmReportFinish.InventDimId</c>
    ///    field.
    /// </param>
    /// <param name="_inventDim">
    ///    The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
    /// </param>
    public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
    {
        InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();

        this.InventDimId = _inventDimId;
        this.linkInventDim2Dimension(_inventDim, currentInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimIdFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
    ///    found <c>InventDimId</c> to the <c>BOMParmReportFinish.inventDimId</c> field.
    /// </summary>
    /// <param name="_inventDim">
    ///    An <c>InventDim</c> record buffer that should be referenced by the current
    ///    <c>BOMParmReportFinish</c> record buffer.
    /// </param>
    public void setInventDimIdFromInventDim(InventDim _inventDim)
    {
        InventDim   inventDim;

        inventDim = InventDim::findOrCreate(_inventDim);
        this.setInventDimId(inventDim.InventDimId, inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean     ret;
        InventTable inventTable;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(BOMParmReportFinish, ItemId) :

                inventTable = this.inventTable();
                if (! inventTable.inventItemType().canBeProduced())
                {
                    ret = checkFailed(strfmt("@SYS78162",this.inventTable().ItemType));
                }
                if (! inventTable.isStocked())
                {
                    ret = checkFailed("@SYS301854");
                }
                break;

            case fieldstr(BOMParmReportFinish, InventTransIdReturn) :

                ret = ret && this.validateReturnLotId();
                break;

            case fieldstr(BOMParmReportFinish, Qty) :

                ret = ret && this.validateQty();
                break;

            case fieldstr(BOMParmReportFinish, PdsCWQty) :

                ret = ret && this.pdsValidateCWQty();
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQty</Name>
				<Source><![CDATA[
    boolean validateQty()
    {
        if (this.Qty >= 0 && this.InventTransIdReturn)
        {
            return checkFailed("@SYS84666");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReturnLotId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates whether the return lot ID is valid for the current <c>BOMParmReportFinish</c> record.
    /// </summary>
    /// <returns>
    ///    true if the return lot ID is valid; otherwise false.
    /// </returns>
    public boolean validateReturnLotId()
    {
        ItemId      returnItemId;

        if (this.InventTransIdReturn)
        {
            returnItemId = InventTransOrigin::findByInventTransId(this.InventTransIdReturn).ItemId;
            if (this.ItemId != returnItemId)
            {
                return checkFailed(strfmt("@SYS84670",returnItemId,this.InventTransIdReturn,this.ItemId));
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean             ret;
        InventTable         inventTable;
        UnitOfMeasureSymbol inventUnit;

        ret = super();

        inventTable = InventTable::find(this.ItemId);
        ret         = inventTable.checkValid(this.ItemId) && ret;
        ret         = BOMTable::find(this.bomId).checkValid() && ret;

        inventUnit = InventTableModule::find(inventTable.ItemId,ModuleInventPurchSales::Invent).UnitId;

        if (this.Qty != decround(this.Qty,UnitOfMeasure::unitOfMeasureDecimalPrecision(
                UnitOfMeasure::unitOfMeasureIdBySymbol(inventUnit))))
        {
            ret = checkFailed(strfmt("@SYS25364",inventUnit));
        }

        ret = ret && PdsCatchWeight::validateInventQty(this.ItemId, this.Qty, this.PdsCWQty);

        ret = ret && InventTable::checkProductDimensions(this.ItemId, this.inventDim());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    static void deleteParameters(ParmId parmId)
    {
        BOMParmReportFinish bomParmReportFinish;

        ttsbegin;

        delete_from bomParmReportFinish
            index hint ParmLineNumIdx
            where bomParmReportFinish.ParmId  == parmId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    static LineNum lastLineNum(ParmId parmId)
    {
        return (select maxof(LineNum) from bomParmReportFinish
                    where bomParmReportFinish.ParmId  == parmId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomParmReportFinish_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the <c>BOMParmReportFinish_IN</c> table.
    /// </summary>
    /// <returns>
    /// The table <c>BOMParmReportFinish_IN</c> associated with the current record.
    /// </returns>
    public BOMParmReportFinish_IN bomParmReportFinish_IN()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(BOMParmReportFinish_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        // <GIN>
        #ISOcountryRegionCodes
        // </GIN>

        super();

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.SysExtensionSerializerMap::postInsert();
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>packBOMParmReportFinish_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the <c>BOMParmReportFinish_IN</c> table
    /// </summary>
    /// <param name="_bomParmReportFinish_IN">
    /// BOMParmReportFinish_IN is packed.
    /// </param>
    public void packBOMParmReportFinish_IN(BOMParmReportFinish_IN _bomParmReportFinish_IN)
    {
        _bomParmReportFinish_IN.BOMParmReportFinish = this.RecId;

        this.SysExtensionSerializerMap::packExtensionTable(_bomParmReportFinish_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            this.TransitDocumentTransactionMap_IN::deleteTransitDocuments();
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124227</DeveloperDocumentation>
	<Label>@SYS12772</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>Qty</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmLineNumIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS7523</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OverrideDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journal</Name>
			<Label>@SYS6790</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostNow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Measurement</Name>
			<Label>@SYS2021</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Height</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Width</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Density</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Depth</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnGrouip</Name>
			<Label>@SYS16512</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransIdReturn</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnCostPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Update</Name>
			<Label>@SYS2934</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Explode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Info</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOMId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteLinkedDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Density</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMMeasureDensity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Depth</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMMeasureDepth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Explode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9304</Label>
			<EnumType>BOMExplode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Height</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMMeasureHeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Info</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS53922</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransIdReturn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransIdReturn</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemIdProduction</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNameId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalNameId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS19458</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostNow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS19388</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProfitSet</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CostProfitSet</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnCostPrice</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnCostPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Width</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMMeasureWidth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmLineNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>ParmBuffer</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Linenum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobStatus</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDateTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TransitDocumentTransactionMap_IN</MappingTable>
			<Connections />
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMId</Name>
					<Field>BOMId</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReportAsFinishedParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124228</EntityRelationshipRole>
			<RelatedTable>InventJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventoryJournalName</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReportAsFinished</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>InventJournalType::BOM</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNameId</Name>
					<Field>JournalNameId</Field>
					<RelatedField>JournalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransIdReturn</Name>
					<Field>InventTransIdReturn</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>