<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxablePaymentsAnnualReportPeriod_AU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxablePaymentsAnnualReportPeriod_AU extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds the specified record in the <c>TaxablePaymentsAnnualReportPeriod_AU</c> table.
    /// </summary>
    /// <param name="_recId">The record ID to find.</param>
    /// <param name="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <param name="_concurrencyModel">The concurrency model option to use when reading the record; optional.</param>
    /// <returns>
    ///   The specified record in the <c>TaxablePaymentsAnnualReportPeriod_AU</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxablePaymentsAnnualReportPeriod_AU findByRecId(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxablePaymentsAnnualReportPeriod_AU ret;

        ret.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ret.concurrencyModel(_concurrencyModel);
        }

        if (_recId)
        {
            select firstonly ret
                where ret.RecId == _recId;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByReportingPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds the specified record in the <c>TaxablePaymentsAnnualReportPeriod_AU</c> table by the given from and to dates.
    /// </summary>
    /// <param name="_dateFrom">The from date to find.</param>
    /// <param name="_dateTo">The to date to find.</param>
    /// <param name="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>
    ///   The specified record in the <c>TaxablePaymentsAnnualReportPeriod_AU</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxablePaymentsAnnualReportPeriod_AU findByReportingPeriod(
        FromDate _dateFrom,
        ToDate _dateTo,
        boolean _forUpdate = false)
    {
        TaxablePaymentsAnnualReportPeriod_AU ret;
        ret.selectForUpdate(_forUpdate);

        select firstonly ret
            where ret.DateFrom == _dateFrom
                && ret.DateTo == _dateTo;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        TaxablePaymentsAnnualReportPeriod_AU period;
        select firstonly RecId from period
            where !(period.DateFrom == this.DateFrom && period.DateTo == this.DateTo)
                && ((period.DateFrom <= this.DateFrom && period.DateTo >= this.DateFrom)
                    || (period.DateFrom <= this.DateTo && period.DateTo >= this.DateTo)
                    || (period.DateFrom >= this.DateFrom && period.DateTo <= this.DateTo));
        if (period.RecId)
        {
            ret = checkFailed("@Tax:DateIntervalOverlap");
        }
   
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
        switch (_fieldId)
        {
            case fieldNum(TaxablePaymentsAnnualReportPeriod_AU, DateFrom):
                if (this.DateFrom && this.DateTo < this.DateFrom)
                {
                    this.DateTo = DateTimeUtil::getEndOfYearDate(new Session().preferredLocale(), this.DateFrom);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOpenVersion</Name>
				<Source><![CDATA[
    internal boolean isOpenVersion()
    {
        return (select RecId from TaxablePaymentsAnnualReportVersion_AU
            where TaxablePaymentsAnnualReportVersion_AU.ReportPeriodId == this.RecId
            && (TaxablePaymentsAnnualReportVersion_AU.Status == TaxablePaymentsAnnualReportVersionStatus_AU::New
            ||  TaxablePaymentsAnnualReportVersion_AU.Status == TaxablePaymentsAnnualReportVersionStatus_AU::Processing)).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLatestVersionNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Retrieves the latest version number for the current period.
    /// </summary>
    /// <returns>
    ///   The latest version.
    /// </returns>
    public Version getLatestVersionNum()
    {
        return (select maxof(VersionNum) from TaxablePaymentsAnnualReportVersion_AU
            where TaxablePaymentsAnnualReportVersion_AU.ReportPeriodId == this.RecId).VersionNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>AU,SE</CountryRegionCodes>
	<DeveloperDocumentation>@TaxablePaymentsAnnualReport:TaxablePaymentsAnnualReportPeriodDevDoc</DeveloperDocumentation>
	<FormRef>TaxablePaymentsAnnualReportPeriod_AU</FormRef>
	<Label>@TaxablePaymentsAnnualReport:TaxablePaymentsAnnualReportPeriod</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>DateFrom</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>StatisticsOfVendorPaymentsPeriodsStats_SE</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>StatisticsOfVendorPaymentsPeriodsStats_SE</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>VendorSizeCategory_SE</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>VendorSizeCategory_SE</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PeriodDates</Name>
			<Label>@PaymentTimesBill:PeriodDatesGroupLabel</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@TaxablePaymentsAnnualReport:ReportPeriodDescription</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS316573</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RunType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateTo</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@TaxablePaymentsAnnualReport:ReportPeriodDescriptionHelpText</HelpText>
			<Label>@TaxablePaymentsAnnualReport:ReportPeriodDescription</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RunType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxablePaymentsAnnualReportRunType_AU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PeriodDatesIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DateFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DateTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DateFromIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DateFrom</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>