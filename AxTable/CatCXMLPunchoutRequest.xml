<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatCXMLPunchoutRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatCXMLPunchoutRequest extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>requestType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the punchout request protocol of the request.
    /// </summary>
    /// <returns>
    ///    The <c>CatPunchoutEntityType</c> data type.
    /// </returns>
    public display CatPunchoutEntityType requestType()
    {
        return CatPunchoutEntityType::cXML;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the punchout request from a related record.
    /// </summary>
    /// <param name="_relatedRecord">
    /// The related record to initialize the punchout request from.
    /// </param>
    public void initFrom(Common _relatedRecord)
    {
        CatCXMLPunchoutSession cXMLPunchoutSession = _relatedRecord as CatCXMLPunchoutSession;

        if (!cXMLPunchoutSession.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        this.initValue();
        this.CXMLPunchoutSession = cXMLPunchoutSession.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cXMLPunchoutSession</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the related <c>CatCXMLPunchoutSession</c> table record.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatCXMLPunchoutSession</c> table; otherwise, an empty record.
    /// </returns>
    public CatCXMLPunchoutSession cXMLPunchoutSession(boolean _forUpdate = false)
    {
        CatCXMLPunchoutSession  cXMLPunchoutSession;

        if (this.CXMLPunchoutSession)
        {
            cXMLPunchoutSession = CatCXMLPunchoutSession::find(this.CXMLPunchoutSession, _forUpdate);
        }

        if (!cXMLPunchoutSession.RecId)
        {
            throw error(Error::missingRecord(tableStr(CatCXMLPunchoutSession)));
        }
    
        return cXMLPunchoutSession;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SCM:PunchoutRequestBaseTableDeveloperDocumentation</DeveloperDocumentation>
	<Label>@SCM:PunchoutRequest</Label>
	<TableGroup>Worksheet</TableGroup>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Extends>CatPunchoutRequest</Extends>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CXMLPunchoutSession</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatCXMLPunchoutSessionRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CXMLPunchoutSessionIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CXMLPunchoutSession</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatPunchoutRequest</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CatPunchoutRequest</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatCXMLPunchoutSession</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CatCXMLPunchoutSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CXMLPunchoutSession</Name>
					<Field>CXMLPunchoutSession</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>