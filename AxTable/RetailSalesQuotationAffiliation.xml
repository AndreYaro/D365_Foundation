<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesQuotationAffiliation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;
public class RetailSalesQuotationAffiliation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>AppendAffiliatonsAndLoyaltyTiersToXML</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the XML formatted affiliations and loyalty tiers associated with the sales quote.
    /// </summary>
    /// <param name="_salesQuotationId">
    /// The sales quotation id.
    /// </param>
    /// <param name="_xmlDocument">
    /// The xml document.
    /// </param>
    /// <param name="_appendToXmlElement">
    /// The xml element.
    /// </param>
    public static void AppendAffiliatonsAndLoyaltyTiersToXML(SalesQuotationId _salesQuotationId, XmlDocument _xmlDocument, XmlElement _appendToXmlElement)
    {
        #RetailCustAffiliation
        XmlElement xmlAffiliation,xmlAffiliations;
        RetailSalesQuotationAffiliation salesQuotationAffiliation;
        RetailAffiliation retailAffiliation;

        xmlAffiliations = _xmlDocument.createElement(#Affiliations);

        while select RecId, Affiliation, LoyaltyTier from salesQuotationAffiliation
        where salesQuotationAffiliation.QuotationId == _salesQuotationId
            join AffiliationType, RecId from retailAffiliation
                where retailAffiliation.RecId == salesQuotationAffiliation.Affiliation
        {
            xmlAffiliation = _xmlDocument.createElement(#Affiliation);
            xmlAffiliation.setAttribute(#RetailAffiliationId, int642str(salesQuotationAffiliation.Affiliation));
            xmlAffiliation.setAttribute(#RetailLoyaltyTierId, int642str(salesQuotationAffiliation.LoyaltyTier));
            xmlAffiliation.setAttribute(#RetailAffiliationType, enum2Symbol(enumNum(RetailAffiliationType), retailAffiliation.AffiliationType));

            XmlElement infoCodeLines;

            if (RetailInfoCodeLineTableV2Feature::isEnabled())
            {
                infoCodeLines = RetailTransactionServiceOrders::setAffiliationLineInfoCodeLinesV2(_xmlDocument, SalesQuotationTable::find(_salesQuotationId).RecId, retailAffiliation.RecId, RetailInfoCodeLineRelatedTableType::Quote);
            }
            else
            {
                using (RetailTransactionServiceOrdersContext context = RetailTransactionServiceOrdersContext::construct())
                {
                    context.parmAffiliationRecordId(retailAffiliation.RecId);
                    infoCodeLines = RetailTransactionServiceOrders::setAffiliationLineInfoCodeLines(_xmlDocument, SalesQuotationTable::find(_salesQuotationId).RecId);
                }
            }

            xmlAffiliation.appendChild(infoCodeLines);
            xmlAffiliations.appendChild(xmlAffiliation);
        }

        _appendToXmlElement.appendChild(xmlAffiliations);
    }

]]></Source>
			</Method>
			<Method>
				<Name>SetAffiliatonsAndLoyaltyTiers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the affiliations and loyalty tiers for the sales quote. Any old associated records are deleted.
    /// </summary>
    /// <param name="_salesQuotationId">
    /// The sales quotation id.
    /// </param>
    /// <param name="_affiliationsAndTiers">
    /// The affiliations and loyalty tiers in collection of affiliation info.
    /// </param>
    public static void SetAffiliatonsAndLoyaltyTiers(SalesQuotationId _salesQuotationId, AffiliationInfoCollection _affiliationsAndTiers)
    {
        #RetailCustAffiliation

        RetailSalesQuotationAffiliation salesQuotationAffiliation;

        ttsbegin;

        delete_from salesQuotationAffiliation
        where salesQuotationAffiliation.QuotationId == _salesQuotationId;

        for (int i = 0; i < _affiliationsAndTiers.get_Count(); i++)
        {
            AffiliationInfo affiliationInfo = _affiliationsAndTiers.get_Item(i) as AffiliationInfo;
            salesQuotationAffiliation.Affiliation = affiliationInfo.AffiliationRecordId;
            salesQuotationAffiliation.LoyaltyTier = affiliationInfo.LoyaltyTierRecordId;
            salesQuotationAffiliation.QuotationId = _salesQuotationId;
            salesQuotationAffiliation.insert();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>affiliationDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Description for Affiliation.
    /// </summary>
    /// <returns>
    /// Description for Affiliation.
    /// </returns>
    display RetailDescriptionEx5 affiliationDescription()
    {
        RetailAffiliationTranslation affiliationTranslation;
        RetailAffiliation            retailAffiliation;

        select firstOnly Description from affiliationTranslation
        where affiliationTranslation.Affiliation == this.Affiliation &&
           affiliationTranslation.LanguageId == SystemParameters::getSystemLanguageId();

        retailAffiliation = RetailAffiliation::find(this.Affiliation);
        if (affiliationTranslation && affiliationTranslation.Description)
        {
            return affiliationTranslation.Description;
        }
        else
        {
            return retailAffiliation.Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByQuotationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record that matches the parameters.
    /// </summary>
    /// <param name="_quotationId">
    /// The sales quotation id.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <param name="_concurrencyModel">
    /// Concurrency model type.
    /// </param>
    static RetailSalesQuotationAffiliation findByQuotationId(QuotationId   _quotationId,
                           boolean          _forUpdate = false,
                           ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        RetailSalesQuotationAffiliation  salesQuotationAffiliation;

        if (_quotationId)
        {
            salesQuotationAffiliation.selectForUpdate(_forUpdate);
            if (_concurrencyModel != ConcurrencyModel::Auto)
            {
                salesQuotationAffiliation.concurrencyModel(_concurrencyModel);
            }            
            salesQuotationAffiliation.selectLocked(_forUpdate);

            select firstonly salesQuotationAffiliation
                where salesQuotationAffiliation.QuotationId == _quotationId;
        }

        return salesQuotationAffiliation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSalesQuotationAffiliatonSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the set of Affiliations on the Sales quotation.
    /// </summary>
    /// <param name="salesId">
    /// The id of sales order.
    /// </param>
    /// <returns>
    /// The set of Affiliations on the Sales quotation.
    /// </returns>
    public static Set getSalesQuotationAffiliatonSet(SalesQuotationId _salesQuotationId)
    {
        RetailSalesQuotationAffiliation retailSalesQuotationAffiliation;
        RetailAffiliation retailAffiliation;
        Set salesQuotationAffiliations = new Set(Types::Int64);

        while select Affiliation from retailSalesQuotationAffiliation
        where retailSalesQuotationAffiliation.QuotationId == _salesQuotationId
        {
            salesQuotationAffiliations.add(retailSalesQuotationAffiliation.Affiliation);
        }

        return salesQuotationAffiliations;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX4160948</DeveloperDocumentation>
	<Label>@REX4160949</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Affiliation</TitleField1>
	<TitleField2>LoyaltyTier</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SalesQuotationAffiliationLoyaltyIdx</ClusteredIndex>
	<Modules>TransactionsAndOrders</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoyaltyTier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Affiliation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoyaltyTier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Affiliation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Affiliation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AffiliationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoyaltyTier</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LoyaltyTierRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QuotationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>SalesQuotationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesQuotationAffiliationLoyaltyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>QuotationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Affiliation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LoyaltyTier</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>RetailSalesAffiliationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Affiliation</MapField>
					<MapFieldTo>Affiliation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>QuotationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LoyaltyTier</MapField>
					<MapFieldTo>LoyaltyTier</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailAffiliation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailAffiliation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Affiliation</Name>
					<Field>Affiliation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyTier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailLoyaltyTier</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoyaltyTier</Name>
					<Field>LoyaltyTier</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesQuotationTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesQuotationTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QuotationId</Name>
					<Field>QuotationId</Field>
					<RelatedField>QuotationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>QuotationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>