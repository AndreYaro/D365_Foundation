<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjForecastEmpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjForecastEmpl extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the record ID of the activity that represents this record.
    /// </summary>
    /// <returns>
    ///    The record ID of the activity that represents this record.
    /// </returns>
    public RefRecId activity()
    {
        WrkCtrProjForecastEmplActivity wrkCtrProjForecastEmplActivity;

        select firstonly Activity from wrkCtrProjForecastEmplActivity
            where wrkCtrProjForecastEmplActivity.TransId == this.TransId
               && wrkCtrProjForecastEmplActivity.ForecastEmplDataAreaId == this.DataAreaId;

        return wrkCtrProjForecastEmplActivity.Activity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityRequirementSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first activity requirement set that represents this record.
    /// </summary>
    /// <returns>
    /// The first activity requirement set that represents this record.
    /// </returns>
    public WrkCtrActivityRequirementSet activityRequirementSet()
    {
        WrkCtrProjForecastEmplActivity wrkCtrProjForecastEmplActivity;
        WrkCtrActivityRequirementSet wrkCtrActivityRequirementSet;

        select firstonly wrkCtrActivityRequirementSet
            join Activity from wrkCtrProjForecastEmplActivity
            where wrkCtrProjForecastEmplActivity.TransId == this.TransId
                && wrkCtrProjForecastEmplActivity.ForecastEmplDataAreaId == this.DataAreaId
                && wrkCtrActivityRequirementSet.Activity == wrkCtrProjForecastEmplActivity.Activity;

        return wrkCtrActivityRequirementSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>blankDateFields</Name>
				<Source><![CDATA[
    private void blankDateFields()
    {
        this.InvoiceDate = dateNull();
        this.EliminationDate = dateNull();
        this.CostPaymDate = dateNull();
        this.SalesPaymDate = dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcIndirectAmount</Name>
				<Source><![CDATA[
    public Amount calcIndirectAmount(PSAIndirectComponentType _compType)
    {
        PSAIndirectCostCalculation indCostCalc;
        PSAIndirectCompoundingSetup tCompoundingSetup;
        TransDate transDate = this.SchedFromDate;

        Amount amt = 0;
        PSAIndirectComponentGroupId groupID;
        Amount base;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            groupID = this.indirectComponentGroupID();
            base = _compType == PSAIndirectComponentType::Cost ? this.CostPrice : this.SalesPrice;

            indCostCalc = new PSAIndirectCostCalculation();

            while select ComponentId from tCompoundingSetup
                group by ComponentId
                    where tCompoundingSetup.ProjComponentGroupId == groupID
                        && tCompoundingSetup.DateFrom <= transDate
            {
                amt += indCostCalc.calculate(base,
                                             groupID,
                                             _compType,
                                             tCompoundingSetup.ComponentId,
                                             transDate,
                                             0,
                                             this.Qty);
            }
        }

        return amt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the activity specified for the forecast journal.
    /// </summary>
    /// <returns>
    ///    True if the activity used in this journal valid; otherwise, false.
    /// </returns>
    private boolean checkActivity()
    {
        boolean ret = true;

        if (this.ActivityNumber)
        {
            ret = ProjActivityHelper::validateProjActivityParentLinkV2(this.ProjId, this.ActivityNumber);
        
            if ( ret && !ProjParameters::allowParentActivitySelection(this.ActivityNumber))
            {
                ret = checkFailed("@Proj:ParentActivityError");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkModel</Name>
				<Source><![CDATA[
    private boolean checkModel()
    {
        ForecastModel budgetModel = ForecastModel::find(HeadingSub::Heading,this.ModelId);

        if (!budgetModel)
        {
            return checkFailed(strFmt("@SYS25942",this.ModelId));
        }

        if (budgetModel.Blocked)
        {
            return checkFailed(strFmt("@SYS25943",budgetModel.ModelId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReqActivity</Name>
				<Source><![CDATA[
    public boolean checkReqActivity(ProjForecastEmpl   projForecastEmpl)
    {
        RequireActivity requireActivity;
        boolean ret = true;

        requireActivity = ProjTable::checkRequireActivity(projForecastEmpl.ProjId,tableNum(ProjForecastEmpl));
        if (requireActivity && (!projForecastEmpl.ActivityNumber))
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set to apply to the <c>dimension</c> field.
    /// </summary>
    /// <param name="_dimension">
    ///    A dimension set to apply to the <c>dimension</c> field.
    /// </param>
    /// <param name="_dimensionCopy">
    ///    A <c>dimensionCopy</c> object that was initialized by using the current <c>ProjForecastEmpl</c>
    ///    buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that can be applied to the <c>dimension</c> field.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>
    public DimensionDefault copyDimension(DimensionDefault _dimension, DimensionCopy _dimensionCopy = DimensionCopy::newFromTable(this, CompanyInfo::findDataArea(curext()).RecId))
    {
        return _dimensionCopy.copy(_dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    display ProjCostAmount costAmount()
    {
        return this.Qty * this.CostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defBudget</Name>
				<Source><![CDATA[
    private ProjForecastEmpl defBudget()
    {
        ProjForecastEmpl projForecastEmpl = null;

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        WrkCtrCapRes wrkCtrCapRes;

        ttsbegin;

        super();

        delete_from wrkCtrCapRes
            where wrkCtrCapRes.RefType == WrkCtrCapRefType::Project
                && wrkCtrCapRes.RefId == this.ProjId
                && wrkCtrCapRes.JobId == int642str(this.RecId);

        // Shop Floor Control - begin
        if (Global::isConfigurationkeyEnabled(configurationKeyNum(Jmgjob)))
        {
            JmgJobTable::synchronizeProjBudgetEmpl(this, true);
        }
        // Shop Floor Control - end

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>indirectComponentGroupID</Name>
				<Source><![CDATA[
    public display PSAIndirectComponentGroupId indirectComponentGroupID()
    {
        return PSAComponentGroupAssignment::findAssignment(
            this.ProjId,
            this.Resource,
            this.CategoryId,
            this.SchedFromDate).IndirectComponentGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>indirectCostAmount</Name>
				<Source><![CDATA[
    public display PSAIndirectCost indirectCostAmount()
    {
        return this.calcIndirectAmount(PSAIndirectComponentType::Cost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>indirectCostTotal</Name>
				<Source><![CDATA[
    public display ProjTotalCostAmount indirectCostTotal()
    {
        if (this.ProjForecastBudgetType)
        {
            return this.costAmount();
        }
        else
        {
            return this.costAmount() + this.indirectCostAmount();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>indirectSalesAmount</Name>
				<Source><![CDATA[
    public display PSAIndirectSalesAmount indirectSalesAmount()
    {
        return this.calcIndirectAmount(PSAIndirectComponentType::Invoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>indirectSalesTotal</Name>
				<Source><![CDATA[
    public display ProjTotalSalesAmount indirectSalesTotal()
    {
        return this.SalesPrice*this.Qty + this.indirectSalesAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the values of line property and category.
    /// </summary>
    public void initFromCategory()
    {
        this.LinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.CategoryId);
        this.Txt = ProjCategory::find(this.CategoryId).Name;
        this.setCostSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromEstimate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes values from a project estimate.
    /// </summary>
    /// <param name = "_psaActivityEstimates">A <c>PSAActivityEstimates</c> record from which to initialize the fields.</param>
    public void initFromEstimate(PSAActivityEstimates _psaActivityEstimates)
    {
        this.CategoryId = _psaActivityEstimates.ProjCategoryId;
        this.LinePropertyId = _psaActivityEstimates.LinePropertyId;
        this.Qty = _psaActivityEstimates.Quantity;
        this.Resource = _psaActivityEstimates.Resource;
        this.ResourceCategory = _psaActivityEstimates.ResourceCategory;
        this.Txt = _psaActivityEstimates.Description;
        this.ActivityNumber = _psaActivityEstimates.ActivityNumber;
        this.initFromTransDate();
        this.CostPrice = _psaActivityEstimates.UnitCostPrice;
        this.SalesPrice = _psaActivityEstimates.UnitSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoiceDate</Name>
				<Source><![CDATA[
    public void initFromInvoiceDate()
    {
        PaymTermId paymentTermsID;
        ProjFundingSource projFundingSource;
        ProjTable projTable = this.projTable();
        ProjParameters projParameters = ProjParameters::find();

        // Sales payment date
        if (projTable && ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethodForContractLine(projTable, this.ContractLineId, ProjTransType::Hour))
        {
            if (this.ProjFundingSource)
            {
                paymentTermsID = ProjFundingSource::find(this.ProjFundingSource).PaymentTermsId;
            }
            else
            {
                if (ProjFundingSource::numberOfFundingSources(projTable.ProjInvoiceProjId) == 1)
                {
                    select PaymentTermsId from projFundingSource
                        where projFundingSource.ContractId == projTable.ProjInvoiceProjId
                            && projFundingSource.FundingType == ProjFundingType::Customer;

                    paymentTermsID = projFundingSource.PaymentTermsId;
                }
            }

            if (paymentTermsID)
            {
                this.SalesPaymDate = PaymTerm::advanceDate(paymentTermsID, this.InvoiceDate) + projParameters.ForecastBufferDays;
            }
            else
            {
                this.SalesPaymDate = this.InvoiceDate + projParameters.ForecastBufferDays;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjActivity</Name>
				<Source><![CDATA[
    void initFromProjActivity(ProjActivity _projActivity)
    {
        if (!_projActivity 
            || !_projActivity.CategoryDefault 
            || ProjCategory::find(_projActivity.CategoryDefault).CategoryType != ProjCategoryType::Hour)
        {
            return;
        }

        this.CategoryId = _projActivity.CategoryDefault;

        if (_projActivity.CategoryDefault)
        {
            this.setCostSalesPrice();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjTable</Name>
				<Source><![CDATA[
    public void initFromProjTable(ProjTable _projTable)
    {
        if (!_projTable)
        {
            return;
        }

        if (!this.SchedFromDate)
        {
            this.SchedFromDate = DateTimeUtil::date(DateTimeUtil::getSystemDateTime());
        }

        this.CurrencyId = _projTable.currencyId();
        this.ExchRate = _projTable.exchRateSales(this.SchedFromDate,this.CurrencyId);
        this.TaxGroupId = _projTable.TaxGroupId;

        if (!this.ModelId)
        {
            this.ModelId =  ProjTable::modelId(this.ProjId);
        }

        this.DefaultDimension = _projTable.DefaultDimension;

        if (!ProjValProjCategorySetUp::checkProjCategory(this.ProjId, this.CategoryId))
        {
            this.CategoryId = '';
        }

        this.LinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.CategoryId);

        this.setCostSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractLineItems</Name>
				<Source><![CDATA[
    public PSAContractLineItems getContractLineItems(ProjForecastEmpl _projForecastEmpl)
    {
        return ProjMultipleContractLinesForProjectFeatureHelper::getContractLineItems(_projForecastEmpl.ProjId, _projForecastEmpl.ContractLineId, ProjTransType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    public void initFromSalesQuotationLine(SalesQuotationLine _salesQuotationLine)
    {
        this.ProjId = _salesQuotationLine.salesQuotationTable().ProjIdRef;

        this.initFromProjTable(ProjTable::find(this.ProjId));

        this.ModelId = _salesQuotationLine.salesQuotationTable().ModelId;
        this.CategoryId = _salesQuotationLine.ProjCategoryId;
        this.Resource = _salesQuotationLine.ProjectResource;
        this.LinePropertyId = _salesQuotationLine.LinePropertyId;
        this.Qty = _salesQuotationLine.SalesQty;
        this.DefaultDimension = _salesQuotationLine.DefaultDimension;
        this.SchedFromDate = _salesQuotationLine.TransDate;
        this.SchedToDate = _salesQuotationLine.EndDate;
        this.Txt = _salesQuotationLine.ProjDescription;
        this.CostPrice = _salesQuotationLine.CostPrice;
        this.CurrencyId = _salesQuotationLine.CurrencyCode;

        this.initFromTransDate();
        if (!_salesQuotationLine.SalesPrice && _salesQuotationLine.LineAmount && _salesQuotationLine.SalesQty)
        {
            this.SalesPrice = _salesQuotationLine.LineAmount / _salesQuotationLine.SalesQty;
        }
        else
        {
            this.SalesPrice = _salesQuotationLine.SalesPrice;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTransDate</Name>
				<Source><![CDATA[
    public void initFromTransDate()
    {
        ProjTable projTable = this.projTable();
        ProjParameters projParameters = ProjParameters::find();

        if (projTable && !this.CurrencyId)
        {
            this.CurrencyId = projTable.currencyId();
        }

        if (!this.CurrencyId)
        {
            this.CurrencyId = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
        }

        this.ExchRate = projTable.exchRateSales(this.SchedFromDate, this.CurrencyId);

        boolean isTM = ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethodForContractLine(projTable, this.ContractLineId, ProjTransType::Hour);
        boolean isFixedPrice = ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethodForContractLine(projTable, this.ContractLineId, ProjTransType::Hour);

        // Invoice date
        if (isTM)
        {
            if (projTable.projInvoice().ForecastInvoiceFrequency)
            {
                this.InvoiceDate = ProjInvoiceTable::forecastInvoiceDate(this.SchedFromDate, this.ProjId);
            }
            else
            {
                this.InvoiceDate = this.SchedFromDate;
            }
        }
        else if (isFixedPrice || projTable.Type == ProjType::Investment || ProjMultipleContractLinesForProjectFeatureHelper::isInternalProject(projTable))
        {
            // Invoice date is not used for Fixed price or Investment or Internal projects
            this.InvoiceDate = dateNull();
        }

        this.initFromInvoiceDate();

        // Elimination date
        if (isFixedPrice || projTable.Type == ProjType::Investment)
        {
            if (ProjTable::exist(projTable.wipProject))
            {
                this.EliminationDate = ProjTable::find(projTable.wipProject).EndDate;
            }
            else
            {
                this.EliminationDate = projTable.EndDate;
            }

            if (!this.EliminationDate)
            {
                this.EliminationDate = this.SchedFromDate;
            }
        }

        // Cost payment date
        if (projTable.Type != ProjType::Time)
        {
            if (projParameters.ForecastPaymHour)
            {
                this.CostPaymDate = PaymTerm::advanceDate(projParameters.ForecastPaymHour, this.SchedFromDate);
            }
            else
            {
                this.CostPaymDate = this.SchedFromDate;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWrkCtrTable</Name>
				<Source><![CDATA[
    void initFromWrkCtrTable(WrkCtrTable _wrkCtrTable)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            this.Resource  = ResourceFacade::findByResourceBackingEntity(_wrkCtrTable);
            this.setResourceCategory();

            //To set cost/sales price based on workcenter
            this.setCostSalesPrice();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize values for <c>ProjForecastEmpl</c> table record.
    /// </summary>
    /// <param name = "_costBudget">This parameter is no longer being used.</param>
    public void initValue(boolean _costBudget = false)
    {
        if (!this.TransId)
        {
            ttsbegin;

            NumberSeq numberSeq = NumberSeq::newGetNum(ProjParameters::numRefProjTransIdBase());
            this.TransId = numberSeq.num();

            ttscommit;
        }

        this.Active = NoYes::Yes;
        this.Report = NoYes::Yes;
        this.SchedCapacity = NoYes::Yes;
        this.SchedLink = SchedJobLink::FS;
        this.SchedLinkType = SchedJobLinkType::Soft;
        this.SchedWorkTime = NoYes::Yes;
        
        if (this.shouldInitializeByScheduleDate())
        {
            if (!this.SchedFromDate)
            {
                ProjTable projTable = this.projTable();
                this.SchedFromDate  = projTable.returnForecastDate();
            }

            this.initFromTransDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldInitializeByScheduleDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Whether to initialize the schedule from date field of <c>ProjForecastEmpl</c> table
    /// record and initialize the other fields related to the schedule from date field.
    /// </summary>
    /// <returns>true by default; otherwise, return value can be updated by extension.</returns>
    /// <remarks>This method is added for extension purpose.</remarks>
    public boolean shouldInitializeByScheduleDate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        NumberSeq numberSeq;

        WrkCtrActivity wrkCtrActivity;
        WrkCtrProjForecastEmplActivity wrkCtrProjForecastEmplActivity;
        WrkCtrActivityRequirementSet wrkCtrActivityRequirementSet;

        ttsbegin;

        if (!this.TransId)
        {
            numberSeq = NumberSeq::newGetNum(ProjParameters::numRefProjTransIdBase());
            this.TransId = numberSeq.num();
        }

        this.LineNum = this.lineNum();

        // Shop Floor Control - begin
        if (Global::isConfigurationkeyEnabled(configurationKeyNum(Jmgjob)))
        {
            this.JobId = NumberSeq::newGetNum(JmgParameters::numRefIpcActivityId()).num();
        }
        // Shop Floor Control - end


        if (ProjFeatureStateHelper::isProjDefaultDimensionRuleFeatureEnabled())
        {
            this.DefaultDimension = ProjDefaultDimensionRule::getDefaultDimension(this.ProjId, this.ContractLineId);
        }

        this.mergeResourceDimensionDefault();

        super();

        ProjForecastPost::newPostForecastEmpl(this).run();

        // Shop Floor Control - begin
        if (Global::isConfigurationkeyEnabled(configurationKeyNum(Jmgjob)))
        {
            JmgJobTable::synchronizeProjBudgetEmpl(this);
        }
        // Shop Floor Control - end

        //Add activity
        wrkCtrActivity.EntityType = WrkCtrActivityType::ProjForecastEmpl;
        wrkCtrActivity.insert();

        //Add requirement set
        wrkCtrActivityRequirementSet.initValue();
        wrkCtrActivityRequirementSet.Activity = wrkCtrActivity.RecId;
        wrkCtrActivityRequirementSet.insert();

        wrkCtrProjForecastEmplActivity.Activity = wrkCtrActivity.RecId;
        wrkCtrProjForecastEmplActivity.TransId = this.TransId;
        wrkCtrProjForecastEmplActivity.ForecastEmplDataAreaId = this.DataAreaId;
        wrkCtrProjForecastEmplActivity.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isForecastModelStopped</Name>
				<Source><![CDATA[
    public boolean isForecastModelStopped()
    {
        return ForecastModel::find(HeadingSub::Heading,this.ModelId).Blocked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProjForecastReduced</Name>
				<Source><![CDATA[
    private boolean isProjForecastReduced()
    {
        return ProjForecastReductionHistory::existProjForecastTransId(this.TransId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineNum</Name>
				<Source><![CDATA[
    LineNum lineNum()
    {
        LineNum lineBefore;
        LineNum lineAfter;

        LineNum lineNum;

        lineBefore = (select firstonly LineNum from projForecastEmpl
                        order by LineNum desc
                        where projForecastEmpl.ProjId == this.ProjId
                            && projForecastEmpl.ModelId == this.ModelId
                            && projForecastEmpl.LineNum < this.LineNum).LineNum;

        lineAfter = (select firstonly LineNum from projForecastEmpl
                        order by LineNum
                        where projForecastEmpl.ProjId == this.ProjId
                            && projForecastEmpl.ModelId == this.ModelId
                            && projForecastEmpl.LineNum > this.LineNum).LineNum;

        if (lineAfter)
        {
            lineNum = (lineBefore + lineAfter) / 2;
        }

        lineNum = this.LineNum ? this.LineNum : 1;

        return lineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set that contains the merged combination of the current
    ///    <c>defaultDimension</c> field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was initialized by using the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
    ///    on this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>
    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge _dimensionMerge = DimensionMerge::newFromTable(this, this.companyInfo().RecId)
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeResourceDimensionDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merges the default dimension for the forecast line with default dimension.
    /// </summary>
    public void mergeResourceDimensionDefault()
    {
        if (this.Resource)
        {
            DimensionDefault defaultDimension;

            if (ProjFeatureStateHelper::isProjDefaultDimensionRuleFeatureEnabled())
            {
                defaultDimension = this.DefaultDimension;
            }
            else
            {
                defaultDimension = ProjTable::find(this.ProjId).DefaultDimension;
            }
            
            DimensionDefault resourceDims = ResourceFacade::getDefaultDimensionByDate(this.Resource, DateTimeUtil::newDateTime(this.SchedFromDate, 0));

            // With the new feature we want to use the dimensions from the resource as the primary dimension set to use.
            if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled() && FeatureStateProvider::isFeatureEnabled(ProjAdvancedJournalEmployeeDimensionFeature::instance()))
            {
                this.DefaultDimension = this.mergeDimension(resourceDims, defaultDimension);
            }
            else
            {
                this.DefaultDimension = this.mergeDimension(defaultDimension, resourceDims);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjForecastEmpl, ProjId) :
                this.initFromProjTable(ProjTable::find(this.ProjId));
                // blank and reinitialize the date fields
                this.blankDateFields();
                this.initFromTransDate();
                this.mergeResourceDimensionDefault();
                break;

            case fieldNum(ProjForecastEmpl, Resource) :
                this.initFromResource();
                this.mergeResourceDimensionDefault();
                break;

            case fieldNum(ProjForecastEmpl, ResourceCategory) :
                this.setCostSalesPrice();
                break;

            case fieldNum(ProjForecastEmpl, CategoryId) :
                this.initFromCategory();
                break;

            case fieldNum(ProjForecastEmpl, LinePropertyId) :
                this.setCostSalesPrice();
                break;

            case fieldNum(ProjForecastEmpl, CurrencyId) :
                if (!this.CurrencyId)
                {
                    this.CurrencyId = ProjTable::find(this.ProjId).currencyId();
                }
                // Update only the sales price based on new currency.
                this.setCostSalesPrice(false);
                this.ExchRate = this.projTable().exchRateSales(this.SchedFromDate,this.CurrencyId);
                break;

            case fieldNum(ProjForecastEmpl, ActivityNumber) :
                this.setSchedFromDateToSourceActivity();
                ProjCategoryId categoryDefault = ProjActivity::find(this.ActivityNumber).CategoryDefault;

                if (categoryDefault)
                {
                    this.CategoryId = categoryDefault;
                    this.initFromCategory();
                }
                break;

            case fieldNum(ProjForecastEmpl, SchedFromDate) :
                this.initFromTransDate();
                if (this.SchedFromDate > this.SchedToDate)
                {
                    this.SchedToDate = this.SchedFromDate;
                }
                break;

            case fieldNum(ProjForecastEmpl, SchedToDate) :
                if (this.SchedToDate < this.SchedFromDate)
                {
                    this.SchedFromDate = this.SchedToDate;
                    this.initFromTransDate();
                }
                break;

            case fieldNum(ProjForecastEmpl, InvoiceDate) :
                this.initFromInvoiceDate();
                break;

            case fieldNum(ProjForecastEmpl, Qty) :
                this.setCostSalesPrice(false);
                break;

            case fieldNum(ProjForecastEmpl, CostPrice) :
                this.setCostSalesPrice(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTable</Name>
				<Source><![CDATA[
    public ProjTable projTable()
    {
        return ProjTable::find(this.ProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>psAeditActivityPurpose</Name>
				<Source><![CDATA[
    public edit smmActivityPurpose psAeditActivityPurpose(boolean _set, ProjActivityNumber _activityNumber)
    {
        smmActivities smmActivities;
        str name;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            if (_set)
            {
                this.ActivityNumber = _activityNumber;
                this.initFromProjActivity(ProjActivity::find(_activityNumber));
            }
            else
            {
                smmActivities = smmActivities::find(this.ActivityNumber);
                name = smmActivities.Purpose;
            }
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostSalesPrice</Name>
				<Source><![CDATA[
    public void setCostSalesPrice(boolean _setCostPrice = true)
    {
        TransDate transDate;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            transDate = this.SchedFromDate;
        }
        else
        {
            transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }

        if (_setCostPrice)
        {
            if (!ResourceFacade::isResourceInCurrentCompany(this.Resource))
            {
                this.CostPrice = ProjTransferPrice::getResBorrowingCostPriceEstimate(
                    this.Resource,
                    ResourceFacade::getLegalEntityId(this.Resource),
                    this.ProjId,
                    this.CategoryId,
                    transDate);
            }
            else
            {
                ProjPriceParameters priceParams = ProjHourCostPrice::constructPriceParametersForFindCostPrice(
                    this.ProjId,
                    this.Resource,
                    this.CategoryId,
                    this.LinePropertyId,
                    transDate,
                    '',
                    '',
                    '',
                    this.ResourceCategory);
                this.CostPrice = ProjHourCostPrice::findCostPriceByPriceParameters(priceParams, false);
            }
        }

        ProjPriceParameters priceParams = ProjHourSalesPrice::constructPriceParametersForFindHourSalesPrice(
            this.ProjId,
            this.Resource,
            this.CategoryId,
            this.LinePropertyId,
            this.CostPrice,
            this.CurrencyId,
            transDate,
            '',
            '',
            '',
            this.ResourceCategory);
        [this.SalesPrice] = ProjHourSalesPrice::findHourSalesPriceByPriceParameters(priceParams, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePropertyId</Name>
				<Source><![CDATA[
    public void setLinePropertyId()
    {
        this.LinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.CategoryId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSchedFromDateToSourceActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Updates the enddate of PSAActivitySetup to ProjForecastEmpl for calculation of invoicedate
    /// </summary>
    private void setSchedFromDateToSourceActivity()
    {
        boolean isSchedFromModified = false;

        PSAActivitySetup psaActivitySetup = PSAActivitySetup::findActivityNumber(this.ActivityNumber);

        if (psaActivitySetup && psaActivitySetup.psaSchedEnd)
        {
            this.SchedFromDate = psaActivitySetup.psaSchedEnd;
            isSchedFromModified = true;
        }

        if (isSchedFromModified)
        {
            this.modifiedField(fieldNum(ProjForecastEmpl, SchedFromDate));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        FormRun formRun;
        FormObjectSet formObjSet;
        int i;
        ProjForecastEmpl this_Orig = this.orig();

        ttsbegin;

        this.CovStatus = (this.CovStatus  == 2 ? 1 : 0);

        super();
        
        ProjForecastPost::newPostForecastEmpl(this).run();

        // Shop Floor Control - begin
        if (Global::isConfigurationkeyEnabled(configurationKeyNum(Jmgjob)))
        {
            JmgJobTable::synchronizeProjBudgetEmpl(this);
        }
        // Shop Floor Control - end

        if (ProjParameters::find().HourDeleteZero && (this.Qty <= 0))
        {
            this.delete();

            if (FormDataUtil::isFormDataSource(this))
            {
                // refresh and reread ProjForecastEmpl datasource if exists in form
                formRun = FormDataUtil::getFormDataSource(this).formRun();

                for (i=1; i<= formRun.dataSourceCount(); i++)
                {
                    if (formRun.dataSource(i).cursor().TableId == tableNum(ProjForecastEmpl))
                    {
                        formObjSet = formRun.dataSource(i);
                        break;
                    }
                }
                if (formObjSet)
                {
                    formObjSet.refresh();
                    formObjSet.reread();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    boolean validateDelete()
    {
        boolean ok;

        if (!ForecastModel::find(HeadingSub::Heading,this.ModelId).checkOpen())
        {
            ok = checkFailed("@SYS23721");
        }
        else
        {
            ok = super();
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(FieldId _p1)
    {
        ForecastModel oldBudgetModel;
        ForecastModel forecastModel;

        boolean ret = super(_p1);

        switch (_p1)
        {
            case fieldNum(ProjForecastEmpl,CategoryId):
                if (this.CategoryId)
                {
                    if (ProjCategory::find(this.CategoryId).CategoryType != ProjCategoryType::Hour)
                    {
                        ret = checkFailed(strFmt("@SYS54897",this.CategoryId));
                    }

                    if (ret
                        && isConfigurationkeyEnabled(configurationKeyNum(Project)) 
                        && !ProjCategory::validCategory(this.CategoryId))
                    {
                        ret = checkFailed("@PSA11059");
                    }
                }
                break;

            case fieldNum(ProjForecastEmpl,ModelId):
                if (this.ModelId != this.orig().ModelId)
                {
                    oldBudgetModel = ForecastModel::find(HeadingSub::Heading, this.orig().ModelId);

                    if (oldBudgetModel.Blocked)
                    {
                        ret = checkFailed(strFmt("@SYS25943", oldBudgetModel.ModelId));
                    }

                    forecastModel = ForecastModel::find(HeadingSub::Heading, this.ModelId);

                    if (forecastModel.Blocked)
                    {
                        ret = checkFailed(strFmt("@SYS25943", forecastModel.ModelId));
                    }
                }
                break;

            case fieldNum(ProjForecastEmpl, ExchRate):
                if (this.CurrencyId && ! this.ExchRate)
                {
                    ret = checkFailed(strFmt("@SYS20792", this.CurrencyId));
                }
                break;

            case fieldNum(ProjForecastEmpl, ActivityNumber):
                ret = this.checkActivity();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSchedFromDateToSourceActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the scheduled date to source activity.
    /// </summary>
    public void initSchedFromDateToSourceActivity()
    {
        if (this.isNewRecord() && this.ActivityNumber)
        {
            this.setSchedFromDateToSourceActivity();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addErrorToList</Name>
				<Source><![CDATA[
    private boolean addErrorToList(str _msg, List _errorList)
    {
        _errorList.addEnd(_msg);
        return checkFailed(_msg);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(tablestr(ProjForecastEmpl));

        using (var activityContext = logger.projOpsManagementActivity().projForecastUpsertContext())
        {
            activityContext.addCustomProperty(ProjOpsManagementInstrumentationActivities::ProjForecastOperation, strFmt("ProjForecastEmpl ValidateWrite on %1", this.RecId ? ProjOpsManagementInstrumentationActivities::ProjForecastUpdate : ProjOpsManagementInstrumentationActivities::ProjForecastInsert));
            activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::ProjectIdProperty, this.ProjId);

            List errorMessages = new List(Types::String);

            ret = super();

            if (ret)
            {
                ret = this.checkModel() && ret;
                ret = this.checkActivity() && ret;
                ret = ProjTable::find(this.ProjId).status().validateWriteBudgetEmpl() && ret;
                ret = (new ProjValCheckTrans()).validateMandatory(this) && ret;
                ret = ProjForecastPost::newPostForecastEmpl(this).runCheck() && ret;

                if (ret && !ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
                {
                    if (ProjTable::find(this.ProjId).StartDate > this.SchedFromDate)
                    {
                        ret = this.addErrorToList("@SYS107206", errorMessages);
                    }
                }
                
                if (ret && this.isProjForecastReduced())
                {
                    if (this.orig().ProjId != this.ProjId)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, ProjId)), errorMessages);
                    }
                    if (this.orig().CategoryId != this.CategoryId)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, CategoryId)), errorMessages);
                    }
                    if (this.orig().ActivityNumber != this.ActivityNumber)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, ActivityNumber)), errorMessages);
                    }
                    if (this.orig().Resource != this.Resource)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, Resource)), errorMessages);
                    }
                    if (this.orig().ResourceCategory != this.ResourceCategory)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, ResourceCategory)), errorMessages);
                    }
                    if (this.orig().ModelId != this.ModelId)
                    {
                        ret = this.addErrorToList(strFmt("@SYS113137",fieldStr(ProjForecastEmpl, ModelId)), errorMessages);
                    }
                }

                if (ret)
                {
                    if (this.InvoiceDate != dateNull() && this.InvoiceDate < this.SchedFromDate)
                    {
                        ret = this.addErrorToList("@SYS96098", errorMessages) && ret;
                    }
                    if (this.EliminationDate != dateNull() && this.ModelId)
                    {
                        ForecastModel forecastModel = ForecastModel::find(HeadingSub::Heading,this.ModelId);
                        if (forecastModel && this.EliminationDate < this.SchedFromDate)
                        {
                            ProjTable projTableLocal = ProjTable::find(this.ProjId);

                            //Check WIP is being used by model
                            switch (projTableLocal.Type)
                            {
                                case ProjType::FixedPrice :
                                    if (forecastModel.ProjForecastWIPFixedPrice)
                                    {
                                        ret = this.addErrorToList("@SYS96097", errorMessages) && ret;
                                    }
                                    break;

                                case ProjType::TimeMaterial :
                                    if (forecastModel.ProjForecastWIPTimeMaterial)
                                    {
                                        ret = this.addErrorToList("@SYS96097", errorMessages) && ret;
                                    }
                                    break;

                                case ProjType::Investment :
                                    if (forecastModel.ProjForecastWIPInvestment)
                                    {
                                        ret = this.addErrorToList("@SYS96097", errorMessages) && ret;
                                    }
                                    break;

                                case ProjType::None:
                                    if (forecastModel.ProjForecastWIPFixedPrice
                                        && ProjMultipleContractLinesForProjectFeatureHelper::isTransTypeIncludedByBillingMethod(projTableLocal.ProjId, projTableLocal.ProjInvoiceProjId, ProjTransType::Hour, ProjContractBillingMethod::FixedPrice))
                                    {
                                        ret = this.addErrorToList("@SYS96097", errorMessages) && ret;
                                    }
                                    else if (forecastModel.ProjForecastWIPTimeMaterial
                                        && ProjMultipleContractLinesForProjectFeatureHelper::isTransTypeIncludedByBillingMethod(projTableLocal.ProjId, projTableLocal.ProjInvoiceProjId, ProjTransType::Hour, ProjContractBillingMethod::TimeMaterial))
                                    {
                                        ret = this.addErrorToList("@SYS96097", errorMessages) && ret;
                                    }
                                    break;

                                default :
                            }
                        }
                    }
                }
            }

            if (!errorMessages.empty())
            {
                ListEnumerator le = errorMessages.getEnumerator();
                while(le.moveNext())
                {
                    logger.logWarning(le.current());
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>budgetHours</Name>
				<Source><![CDATA[
    static ProjQtyEmpl budgetHours(ProjId _projId, ForecastModelId _modelId, ProjActivityNumber _activityId)
    {
        return (select sum(Qty) from projForecastEmpl
                    where projForecastEmpl.ProjId == _projId
                        && projForecastEmpl.ModelId == _modelId
                        && projForecastEmpl.ActivityNumber == _activityId).Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(ProjId _projId)
    {
        return (select firstonly projForecastEmpl
                 where projForecastEmpl.ProjId == _projId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjForecastEmpl find(ProjEmplTransId _transId, boolean _forUpdate = false)
    {
        ProjForecastEmpl projForecastEmpl = null;

        projForecastEmpl.selectForUpdate(_forUpdate);

        if (_transId)
        {
            select firstonly projForecastEmpl 
                where projForecastEmpl.TransId == _transId;
        }

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJobId</Name>
				<Source><![CDATA[
    public static ProjForecastEmpl findJobId(JmgJobId _jmgJobId, boolean _forUpdate = false)
    {
        ProjForecastEmpl projForecastEmpl;

        projForecastEmpl.selectForUpdate(_forUpdate);
        if (_jmgJobId)
        {
            select firstonly projForecastEmpl
                where projForecastEmpl.JobId == _jmgJobId;
        }

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    static ProjForecastEmpl findLast(ProjId _projId, ForecastModelId _modelId, boolean _forUpdate = false)
    {
        ProjForecastEmpl projForecastEmpl;

        projForecastEmpl.selectForUpdate(_forUpdate);

        if (_projId && _modelId)
        {
            select firstonly projForecastEmpl
                index ProjIdx
                order by LineNum desc
                where projForecastEmpl.ProjId == _projId
                    && projForecastEmpl.ModelId == _modelId;
        }

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProjectBudgetForecast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ProjForecastEmpl</c> table.
    /// </summary>
    /// <param name="_projId">
    /// A <c>ProjId</c> value that specifies the project ID of the record to find.
    /// </param>
    /// <param name="_categoryId">
    /// A <c>CategoryId</c> value that specofies the category ID of the record to find.
    /// </param>
    /// <param name="_activityNumber">
    /// A <c>Activity Number</c> value that specofies the category ID of the record to find.
    /// </param>
    /// <param name="_projForecastBudgetType">
    /// A <c>CategoryId</c> value that specofies the forecast budget type of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>ProjForecastEmpl</c> table buffer containing the budget forecast row.
    /// </returns>
    public static ProjForecastEmpl findProjectBudgetForecast(
        ProjId _projId, 
        CategoryId _categoryId, 
        ProjActivityNumber _activityNumber,
        ProjForecastBudgetType _projForecastBudgetType,
        boolean _forUpdate = false)
    {
        ProjForecastEmpl projForecastEmpl;

        if (_projId && _categoryId && _projForecastBudgetType)
        {
            projForecastEmpl.selectForUpdate(_forUpdate);

            select firstonly projForecastEmpl
                where projForecastEmpl.ProjId == _projId
                    &&  projForecastEmpl.CategoryId == _categoryId
                    &&  projForecastEmpl.ActivityNumber == _activityNumber
                    &&  projForecastEmpl.ProjForecastBudgetType == _projForecastBudgetType;
        }

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static ProjForecastEmpl findRecId(RecId _recId, boolean _forUpdate = false)
    {
        ProjForecastEmpl projForecastEmpl;

        projForecastEmpl.selectForUpdate(_forUpdate);

        select firstonly projForecastEmpl
            where projForecastEmpl.RecId == _recId;

        return projForecastEmpl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromResource</Name>
				<Source><![CDATA[
    void initFromResource()
    {
        this.setResourceCategory();

        if (!ProjValEmplProjSetup::checkResourceProj(this.Resource, this.ProjId))
        {
            this.ProjId = '';
        }

        if (!ProjValEmplCategorySetUp::checkResourceCategory(this.Resource, this.CategoryId))
        {
            this.CategoryId = '';
        }

        this.setCostSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceCategory</Name>
				<Source><![CDATA[
    public void setResourceCategory()
    {
        this.ResourceCategory = ResourceFacade::getResourceCategory(this.Resource,
        (this.SchedFromDate ? this.SchedFromDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteForProjIdAndModelId</Name>
				<Source><![CDATA[
    public void deleteForProjIdAndModelId(ProjId _projId, ProjForecastModelId _modelId)
    {
        if(ProjBudgetManagementFeatureHelper::isFeatureEnabled())
        {
            ProjForecastEmpl forecastEmpl;

            ttsBegin;

            delete_from forecastEmpl
                where forecastEmpl.ProjId == _projId 
                    && forecastEmpl.ModelId == _modelId;

            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124885</DeveloperDocumentation>
	<FormRef>ProjForecastEmpl</FormRef>
	<Label>@SYS60276</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ModelId</TitleField1>
	<TitleField2>SchedFromDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>TransIdx</PrimaryIndex>
	<ReplacementKey>TransIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ProjTransBudget</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ProjTransBudget</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>WrkCtrProjForecastEmplActivity</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WrkCtrProjForecastEmplActivity</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetRevision</Name>
			<Label>@PSA2281</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetType</Name>
			<Label>@SYS153332</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjForecastBudgetType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CostPrice</Name>
			<Label>@SYS13134</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>costAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>indirectCostAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>indirectCostTotal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dates</Name>
			<Label>@SYS80293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchedFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EliminationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPaymDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPaymDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjFundingSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>JobId</Name>
			<Label>@SYS22890</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS4534</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PSA</Name>
			<Label>@PSA43</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesPrice</Name>
			<Label>@SYS5755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>indirectSalesAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>indirectSalesTotal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Scheduled</Name>
			<Label>@SYS11771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchedWrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedFromTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedToTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedTimeHours</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Scheduling</Name>
			<Label>@SYS21838</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchedWrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedLink</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedLinkType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedWorkTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedCapacity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SpecialReport</Name>
			<Label>@SYS10223</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Report</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CovStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetActive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivityNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CostPaymDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastCostPaymDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCostPriceEmpl</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CovStatus</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EliminationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastEliminationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastInvoiceDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JobId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgJobId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LinePropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastModelId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjForecastBudgetType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjForecastBudgetType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProjFundingSource</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProjFundingSourceRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjQtyEmpl</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Report</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportType</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SalesPaymDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastSalesPaymDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesPriceEmpl</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SchedCapacity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS8345</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SchedFromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromDate</ExtendedDataType>
			<Label>@SYS54242</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>SchedFromTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SchedLink</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WrkCtr</ConfigurationKey>
			<EnumType>SchedJobLink</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SchedLinkType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WrkCtr</ConfigurationKey>
			<EnumType>SchedJobLinkType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SchedTimeHours</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WrkCtr</ConfigurationKey>
			<ExtendedDataType>RouteJobSchedTimeHours</ExtendedDataType>
			<Label>@SYS53037</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SchedToDate</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>SchedToTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SchedWorkTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS11965</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SchedWrkCtrId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WrkCtrId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjEmplForecastTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceCategory</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ResourceValidationSkipped</Name>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractLineId</Name>
			<ExtendedDataType>PSAContractLineNum</ExtendedDataType>
			<FeatureClass>ProjProjectOperationsIntegrationToggle</FeatureClass>
			<Label>@Proj:ContractLineId</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>projModelIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedTransactionIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedTransactionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BudgetMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Active</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocateMethod</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Amount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
					<MapFieldTo>CategoryId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Comment</MapField>
					<MapFieldTo>Txt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPaymDate</MapField>
					<MapFieldTo>CostPaymDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPrice</MapField>
					<MapFieldTo>CostPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CovStatus</MapField>
					<MapFieldTo>CovStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Currency</MapField>
					<MapFieldTo>CurrencyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>defaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EliminationDate</MapField>
					<MapFieldTo>EliminationDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDate</MapField>
					<MapFieldTo>SchedToDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExpandId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Freq</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FreqCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemGroupId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Key</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePropertyId</MapField>
					<MapFieldTo>LinePropertyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ModelNum</MapField>
					<MapFieldTo>ModelId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PdsCWQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Report</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Resource</MapField>
					<MapFieldTo>Resource</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPaymDate</MapField>
					<MapFieldTo>SalesPaymDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPrice</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>SchedFromDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransId</MapField>
					<MapFieldTo>TransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>PSAProjBudgetTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ActivityNumber</MapField>
					<MapFieldTo>ActivityNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
					<MapFieldTo>CategoryId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPrice</MapField>
					<MapFieldTo>CostPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyId</MapField>
					<MapFieldTo>CurrencyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ModelId</MapField>
					<MapFieldTo>ModelId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPrice</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>SchedFromDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Txt</MapField>
					<MapFieldTo>Txt</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RouteJobMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CalcTimeHours</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FromDate</MapField>
					<MapFieldTo>SchedFromDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FromTime</MapField>
					<MapFieldTo>SchedFromTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobId</MapField>
					<MapFieldTo>JobId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Link</MapField>
					<MapFieldTo>SchedLink</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinkType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumPrimary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumSecondary</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OprNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OprPriority</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PropertyId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SchedCancelled</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SchedTimeHours</MapField>
					<MapFieldTo>SchedTimeHours</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ToDate</MapField>
					<MapFieldTo>SchedToDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ToTime</MapField>
					<MapFieldTo>SchedToTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>WrkCtrId</MapField>
					<MapFieldTo>SchedWrkCtrId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyId</Name>
					<SourceEDT>ProjSalesCurrencyCode</SourceEDT>
					<Field>CurrencyId</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ForecastModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastModel</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>HeadingSub::Heading</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModelId</Name>
					<SourceEDT>ProjForecastModelId</SourceEDT>
					<Field>ModelId</Field>
					<RelatedField>ModelId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FundingSource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjFundingSource</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjFundingSource</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjFundingSource_ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjFundingSource</Name>
					<Field>ProjFundingSource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjActivity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124886</EntityRelationshipRole>
			<RelatedTable>ProjActivity</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjActivity</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjActivity_ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjLineProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjLineProperty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjLineProperty</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinePropertyId</Name>
					<SourceEDT>ProjLinePropertyId</SourceEDT>
					<Field>LinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjTable_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmActivities</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<SourceEDT>ProjActivityNumber</SourceEDT>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupId</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WrkCtrTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastEmpl</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SchedWrkCtrId</Name>
					<SourceEDT>WrkCtrId</SourceEDT>
					<Field>SchedWrkCtrId</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsIndividualResource</Name>
					<SourceEDT>WrkCtrId</SourceEDT>
					<RelatedField>IsIndividualResource</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceCategoryView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResourceCategory</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ResResourceIdentifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WbsEstimates</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>HourForecast</EntityRelationshipRole>
			<RelatedTable>ProjWBSEstimatesView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WbsActivities</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>