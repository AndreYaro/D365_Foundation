<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankDocumentFacilityType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankDocumentFacilityType extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();
        this.BankDocumentType = BankDocumentType::LetterOfCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
        public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldstr(BankDocumentFacilityType, BankDocumentType) :
                    if (this.BankDocumentType == BankDocumentType::None)
                    {
                        // Please select the facility nature.
                        ret = checkFailed("@SYS313703");
                    }

                    if (ret)
                    {
                        if (this.orig().BankDocumentType != this.BankDocumentType)
                        {
                            if (BankDocumentFacilityAgreementLine::existByFacilityType(this.RecId))
                            {
                                // The facility nature could not be changed, because the facility type has been used by facility agreements.
                                ret = checkFailed("@SYS313704");
                            }
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistByFacilityTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>BankDocumentFacilityType</c> table;
    /// if not, an error message is displayed.
    /// </summary>
    /// <param name="_bankDocumentFacilityTypeName">
    /// The facility type name of <c>BankDocumentFacilityType</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExistByFacilityTypeName(
        BankDocumentFacilityTypeName _bankDocumentFacilityTypeName)
    {
        boolean ret = true;

        if (!BankDocumentFacilityType::existByFacilityTypeName(_bankDocumentFacilityTypeName))
        {
            ret = checkFailed(strfmt(BankDocumentFacilityType::txtNotExist(), _bankDocumentFacilityTypeName));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByFacilityTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>BankDocumentFacilityType</c> table exists based on
    ///    the specified facility type name.
    /// </summary>
    /// <param name="_bankDocumentFacilityTypeName">
    ///    The facility type name of the <c>BankDocumentFacilityType</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByFacilityTypeName(BankDocumentFacilityTypeName _bankDocumentFacilityTypeName)
    {
        BankDocumentFacilityType bankDocumentFacilityType;

        if (_bankDocumentFacilityTypeName)
        {
            select firstonly RecId from bankDocumentFacilityType
                where bankDocumentFacilityType.FacilityTypeName == _bankDocumentFacilityTypeName;

            if (bankDocumentFacilityType && bankDocumentFacilityType.RecId != 0)
            {
                return true;
            }
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BankDocumentFacilityType</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BankDocumentFacilityType</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankDocumentFacilityType</c> table; otherwise, an empty record.
    /// </returns>
    public static BankDocumentFacilityType find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        BankDocumentFacilityType bankDocumentFacilityType;

        if (_recId)
        {
            bankDocumentFacilityType.selectForUpdate(_forUpdate);

            select firstonly bankDocumentFacilityType
                where bankDocumentFacilityType.RecId == _recId;
        }

        return bankDocumentFacilityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByFacilityTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BankDocumentFacilityType</c> table by using the specified
    ///    facility type name.
    /// </summary>
    /// <param name="_bankDocumentFacilityTypeName">
    ///    The facility type name of the <c>BankDocumentFacilityType</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankDocumentFacilityType</c> table; otherwise, an empty record.
    /// </returns>
    public static BankDocumentFacilityType findByFacilityTypeName(
        BankDocumentFacilityTypeName _bankDocumentFacilityTypeName,
        boolean                      _forUpdate = false)
    {
        BankDocumentFacilityType bankDocumentFacilityType;

        if (_bankDocumentFacilityTypeName)
        {
            bankDocumentFacilityType.selectForUpdate(_forUpdate);

            select firstonly bankDocumentFacilityType
                where bankDocumentFacilityType.FacilityTypeName == _bankDocumentFacilityTypeName;
        }

        return bankDocumentFacilityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the Go to Main Table Form option to the context menu.
    /// </summary>
    /// <param name="_bankDocumentFacilityType">
    ///    An instance of the <c>BankDocumentFacilityType</c> table.
    /// </param>
    public static void jumpRef(BankDocumentFacilityType _bankDocumentFacilityType)
    {
        Args args = new Args();

        args.lookupField(fieldnum(BankDocumentFacilityType, RecId));
        args.lookupValue(int642str(_bankDocumentFacilityType.RecId));
        args.parmEnumType(enumnum(BankDocumentSetupConfigurationType));
        args.parmEnum(BankDocumentSetupConfigurationType::BankDocumentFacilityType);

        new MenuFunction(menuitemDisplayStr(BankDocumentSetup), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupFacilityTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the lookup option to the context menu for the <c>FacilityTypeName</c> field.
    /// </summary>
    /// <param name="_formStringControl">
    ///    An instance of the <c>FormStringControl</c> class.
    /// </param>
    public static void lookupFacilityTypeName(FormStringControl _formStringControl)
    {
        SysTableLookup sysTableLookup;

        sysTableLookup = SysTableLookup::newParameters(tableNum(BankDocumentFacilityType), _formStringControl);
        sysTableLookup.addLookupfield(fieldNum(BankDocumentFacilityType, FacilityTypeName), true);
        sysTableLookup.addLookupfield(fieldNum(BankDocumentFacilityType, Description), false);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        // The Bank document facility type record does not exist for RecId %1.
        return "@SYS313654";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS313662</DeveloperDocumentation>
	<Label>@SYS313711</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FacilityTypeName</TitleField1>
	<TitleField2>BankDocumentType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Bank</Modules>
	<ReplacementKey>FacilityTypeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BankDocumentFacilityAgreementLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>BankDocumentFacilityAgreementLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>BankDocumentPosting</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BankDocumentPosting</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacilityTypeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacilityTypeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacilityTypeName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacilityTypeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FacilityTypeName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankDocumentFacilityGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityGroupRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankDocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityNature</ExtendedDataType>
			<EnumType>BankDocumentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityTypeDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FacilityTypeName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityTypeName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FacilityTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FacilityTypeName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BankDocumentTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankDocumentType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BankDocumentFacilityGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankDocumentFacilityGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankDocumentFacilityGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankDocumentFacilityGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankDocumentFacilityGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDocumentFacilityGroup_BankDocumentFacilityType</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankDocumentFacilityGroup</Name>
					<Field>BankDocumentFacilityGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>