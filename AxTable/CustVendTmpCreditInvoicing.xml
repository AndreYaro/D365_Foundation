<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTmpCreditInvoicing</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendTmpCreditInvoicing extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustVendTrans</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustVendTmpCreditInvoicing initFromCustVendTrans(tableId _tableId, InvoiceId _invoiceId, CustVendAC _custVendAccount)
    {
        #ISOCountryRegionCodes
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoES, GlobalizationConstants::FeatureReferenceES00016] ],
            funcName()
        );

        CustVendTmpCreditInvoicing custVendTmpCreditInvoicing;
        CustVendCreditInvoicingJour custVendCreditInvoicingJour;

        #ISOCountryRegionCodes

        ttsbegin;

        switch (_tableId)
        {
            case tableNum(CustTrans):
                CustTrans custTrans;
                custTrans.recordLevelSecurity(true);
                custVendCreditInvoicingJour.recordLevelSecurity(true);

                while select InvoiceRecId, RecId, CustVendCorrectedInvoiceId, TableId, CustVendCorrectiveReason, CustVendInvoiceAccount, ReasonRefRecID from custVendCreditInvoicingJour
                    index CorrectedInvoiceIdx
                    where custVendCreditInvoicingJour.CustVendCorrectedInvoiceId == _invoiceId
                        && custVendCreditInvoicingJour.InvoiceTableId == tableNum(CustInvoiceJour)
                        && custVendCreditInvoicingJour.CustVendInvoiceAccount == _custVendAccount
                {
                    CustInvoiceJour custInvoiceJour;
                    select firstonly InvoiceId, InvoiceAccount, InvoiceDate from custInvoiceJour
                        where custInvoiceJour.RecId == custVendCreditInvoicingJour.InvoiceRecId;

                    select firstonly AmountMST, Invoice, CurrencyCode, TransDate, RecId from custTrans
                        where custTrans.Invoice == custInvoiceJour.InvoiceId
                            && custTrans.AccountNum == custInvoiceJour.InvoiceAccount
                            && custTrans.TransDate == custInvoiceJour.InvoiceDate;

                    custVendTmpCreditInvoicing.AmountMST = custTrans.AmountMST;
                    custVendTmpCreditInvoicing.InvoiceId = custTrans.Invoice;
                    custVendTmpCreditInvoicing.CurrencyCode = custTrans.CurrencyCode;
                    custVendTmpCreditInvoicing.TransDate = custTrans.TransDate;
                    custVendTmpCreditInvoicing.CustVendCorrectiveReason = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoES, #isoSE, #isoPL])
                        ? custVendCreditInvoicingJour.CustVendCorrectiveReason
                        : ReasonTableRef::find(custVendCreditInvoicingJour.ReasonRefRecID).ReasonComment;
                    custVendTmpCreditInvoicing.RefTableId = tableNum(CustTrans);
                    custVendTmpCreditInvoicing.RefRecId = custTrans.RecId;
                    custVendTmpCreditInvoicing.insert();
                }

                while select InvoiceRecId, RecId, CustVendCorrectedInvoiceId, TableId, CustVendCorrectiveReason, CustVendInvoiceAccount from custVendCreditInvoicingJour
                    index CorrectedInvoiceIdx
                    where custVendCreditInvoicingJour.CustVendCorrectedInvoiceId == _invoiceId
                        && custVendCreditInvoicingJour.InvoiceTableId == tableNum(ProjInvoiceJour)
                        && custVendCreditInvoicingJour.CustVendInvoiceAccount == _custVendAccount
                {
                    ProjInvoiceJour projInvoiceJour;
                    select firstonly ProjInvoiceId, InvoiceAccount, InvoiceDate from projInvoiceJour
                        where projInvoiceJour.RecId == custVendCreditInvoicingJour.InvoiceRecId;

                    select firstonly AmountMST, Invoice, CurrencyCode, TransDate, RecId from custTrans
                        where custTrans.Invoice == projInvoiceJour.ProjInvoiceId
                            && custTrans.AccountNum == projInvoiceJour.InvoiceAccount
                            && custTrans.TransDate == projInvoiceJour.InvoiceDate;

                    custVendTmpCreditInvoicing.AmountMST = custTrans.AmountMST;
                    custVendTmpCreditInvoicing.InvoiceId = custTrans.Invoice;
                    custVendTmpCreditInvoicing.CurrencyCode = custTrans.CurrencyCode;
                    custVendTmpCreditInvoicing.TransDate = custTrans.TransDate;
                    custVendTmpCreditInvoicing.CustVendCorrectiveReason = custVendCreditInvoicingJour.CustVendCorrectiveReason;
                    custVendTmpCreditInvoicing.RefTableId = tableNum(CustTrans);
                    custVendTmpCreditInvoicing.RefRecId = custTrans.RecId;
                    custVendTmpCreditInvoicing.insert();
                }

                break;

            case tableNum(VendTrans):
                VendTrans vendTrans;
                vendTrans.recordLevelSecurity(true);
                custVendCreditInvoicingJour.recordLevelSecurity(true);

                while select InvoiceRecId, RecId, CustVendCorrectedInvoiceId, TableId, CustVendCorrectiveReason from custVendCreditInvoicingJour
                    index CorrectedInvoiceIdx
                    where custVendCreditInvoicingJour.CustVendCorrectedInvoiceId == _invoiceId
                        && custVendCreditInvoicingJour.InvoiceTableId == tableNum(VendInvoiceJour)
                        && custVendCreditInvoicingJour.CustVendInvoiceAccount == _custVendAccount
                {
                    VendInvoiceJour vendInvoiceJour;
                    select firstonly InvoiceId, InvoiceAccount, InvoiceDate from vendInvoiceJour
                        where vendInvoiceJour.RecId == custVendCreditInvoicingJour.InvoiceRecId;

                    select firstonly AmountMST, Invoice, CurrencyCode, TransDate, RecId from vendTrans
                        where vendTrans.Invoice == vendInvoiceJour.InvoiceId
                            && vendTrans.AccountNum == vendInvoiceJour.InvoiceAccount
                            && vendTrans.TransDate == vendInvoiceJour.InvoiceDate;

                    custVendTmpCreditInvoicing.AmountMST = vendTrans.AmountMST;
                    custVendTmpCreditInvoicing.InvoiceId = vendTrans.Invoice;
                    custVendTmpCreditInvoicing.CurrencyCode = vendTrans.CurrencyCode;
                    custVendTmpCreditInvoicing.TransDate = vendTrans.TransDate;
                    custVendTmpCreditInvoicing.CustVendCorrectiveReason = custVendCreditInvoicingJour.CustVendCorrectiveReason;
                    custVendTmpCreditInvoicing.RefTableId = tableNum(VendTrans);
                    custVendTmpCreditInvoicing.RefRecId = vendTrans.RecId;
                    custVendTmpCreditInvoicing.insert();
                }
                break;

            default:
                break;
        }

        ttscommit;

        return custVendTmpCreditInvoicing;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>AT,BE,DK,FI,FR,DE,IS,IE,IT,NL,NO,PL,ES,SE,CH,GB</CountryRegionCodes>
	<Label>@SYS73611</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InvoiceId</TitleField1>
	<TitleField2>TransDate</TitleField2>
	<ClusteredIndex>ReferenceIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>ReferenceIdx</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendCorrectiveReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendCorrectiveReason</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustVendCorrectiveReason</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReferenceIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvoiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendTmpCreditInvoicing</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendTmpCreditInvoicing</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>