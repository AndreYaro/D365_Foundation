<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSEcoResProductTransportationCodes</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSEcoResProductTransportationCodes extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromEcoResProduct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table values from the <c>EcoResProduct</c> record.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>EcoResProduct</c> record.
    /// </param>
    public void initFromEcoResProduct(EcoResProductRecId _recId)
    {
        this.Product = _recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes the current record to the database
    /// </summary>
    /// <remarks>
    /// Some products don't have a transportation codes record
    /// so record is deleted or not inserted if there are no transportation codes
    /// </remarks>
    public void write()
    {
        if (this.mustBeSaved())
        {
            super();
        }
        else
        {
            if (this.RecId != 0)
            {
                this.delete();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeSaved</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the record must be saved to the database.
    /// </summary>
    /// <returns>true must be saved to the database; otherwise, false.</returns>
    private boolean mustBeSaved()
    {
        return this.NMFCCode
            || this.HarmonizedCode
            || this.STCCCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>WHSEcoResProductTransportationCodes</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(EcoResProductRecId _recId)
    {
        return (_recId) &&
               (select firstOnly RecId from WHSEcoResProductTransportationCodes
                    where WHSEcoResProductTransportationCodes.Product == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSEcoResProductTransportationCodes</c> table.
    /// </summary>
    /// <param name="_ecoResProductRecId">
    /// The record ID of the <c>EcoResProduct</c> to find.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSEcoResProductTransportationCodes</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSEcoResProductTransportationCodes find(
        EcoResProductRecId _ecoResProductRecId,
        boolean            _forupdate = false)
    {
        WHSEcoResProductTransportationCodes whsEcoResProductTransportationCodes;

        if (_ecoResProductRecId)
        {
            whsEcoResProductTransportationCodes.selectForUpdate(_forupdate);

            select firstonly whsEcoResProductTransportationCodes
                where whsEcoResProductTransportationCodes.Product == _ecoResProductRecId;
        }

        return whsEcoResProductTransportationCodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSEcoResProductTransportationCodes</c> table.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID of the <c>InventTable</c> to find.
    /// </param>
    /// <param name="_itemDataAreaId">
    /// The company context in which to process the current field.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSEcoResProductTransportationCodes</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSEcoResProductTransportationCodes findByItemId(
        ItemId     _itemId,
        DataAreaId _itemDataAreaId = appl.company().dataArea(tableNum(InventTable)),
        boolean    _forupdate  = false)
    {
        WHSEcoResProductTransportationCodes whsEcoResProductTransportationCodes;
        InventTable                         inventTable;

        if (_itemId)
        {
            whsEcoResProductTransportationCodes.selectForUpdate(_forupdate);

            select firstonly whsEcoResProductTransportationCodes
                exists join inventTable
                     where inventTable.Product == whsEcoResProductTransportationCodes.Product
                         && inventTable.ItemId == _itemId
                         && inventTable.dataAreaId == _itemDataAreaId;
        }

        return whsEcoResProductTransportationCodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4526</DeveloperDocumentation>
	<Label>@WAX3490</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Product</TitleField1>
	<TitleField2>NMFCCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>EcoResProductIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>EcoResProductIdx</PrimaryIndex>
	<ReplacementKey>EcoResProductIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HarmonizedCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NMFCCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>STCCCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HarmonizedCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NMFCCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>STCCCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HarmonizedCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSHarmonizedCode</ExtendedDataType>
			<Label>@WAX5417</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NMFCCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSNMFCCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>STCCCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSTCCCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResProductIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSHarmonized</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSHarmonized</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HarmonizedCode</Name>
					<SourceEDT>WHSHarmonizedCode</SourceEDT>
					<Field>HarmonizedCode</Field>
					<RelatedField>HarmonizedCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>HarmonizedCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSNMFC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSNMFC</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NMFCCode</Name>
					<SourceEDT>WHSNMFCCode</SourceEDT>
					<Field>NMFCCode</Field>
					<RelatedField>NMFCCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NMFCCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSSTCC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSSTCC</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>STCCCode</Name>
					<SourceEDT>WHSSTCCCode</SourceEDT>
					<Field>STCCCode</Field>
					<RelatedField>STCCCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>STCCCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>