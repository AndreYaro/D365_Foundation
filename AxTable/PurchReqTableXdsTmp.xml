<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqTableXdsTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqTableXdsTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>xds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the table with the <c>PurchReqTable</c> that the current user has access to.
    /// </summary>
    /// <returns>
    /// Returns the frequency with which the data in the table is refreshed.
    /// </returns>
    public RefreshFrequency xds()
    {
        Unchecked(Uncheck::XDS)
        {
            Set resultSet = new Set(Types::Int64);
            var insertList = new RecordInsertList(tableNum(PurchReqTableXdsTmp));

            this.insertFromPurchReqQueries(queryStr(PurchReqTableAssignedToMe), resultSet, insertList);
            this.insertFromPurchReqQueries(queryStr(PurchReqTableCreatedByMe), resultSet, insertList);
            this.insertFromPurchReqQueries(queryStr(PurchReqTableMyRequisitions), resultSet, insertList);

            if (HcmSecurity::allowAllRowsByMenuItem(AccessRight::View, SecurableType::MenuItemDisplay, menuItemDisplayStr(PurchReqAllMyReports)))
            {
                this.insertFromPurchReqQueries(queryStr(PurchReqTableAllMyReports), resultSet, insertList);
            }

            if (HcmSecurity::allowAllRowsByMenuItem(AccessRight::View, SecurableType::MenuItemDisplay, menuItemDisplayStr(PurchReqMyDirectReports)))
            {
                this.insertFromPurchReqQueries(queryStr(PurchReqTableMyDirectReports), resultSet, insertList);
            }

            if (HcmSecurity::allowAllRowsByMenuItem(AccessRight::View, SecurableType::MenuItemDisplay, menuItemDisplayStr(PurchReqWorkflowWorkItemAssignedToQueues)))
            {
                this.insertFromPurchReqQueries(queryStr(PurchReqTableAssignedToMyQueues), resultSet, insertList);
            }

            if (HcmSecurity::allowAllRowsByMenuItem(AccessRight::View, SecurableType::MenuItemDisplay, menuItemDisplayStr(PurchReqTableNotRecorded)))
            {
                this.insertFromPurchReqQueries(queryStr(PurchReqTableNotRecorded), resultSet, insertList);
            }

            if (HcmSecurity::allowAllRowsByMenuItem(AccessRight::View, SecurableType::MenuItemDisplay, menuItemDisplayStr(PurchReqCreatePurchListPage)))
            {
                this.insertFromPurchReqLineQueries(queryStr(PurchReqCreatePurchListPageGroupByPurchTable), resultSet, insertList);
            }

            if (resultSet.elements())
            {
                insertList.insertDatabase();
            }
        }

        return RefreshFrequency::PerSession;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromPurchReqQueries</Name>
				<Source><![CDATA[
    private void insertFromPurchReqQueries(str _queryName, Set _resultSet, RecordInsertList _insertList)
    {
        Query query = new Query(_queryName);
        QueryRun queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            PurchReqTable purchReq = queryRun.get(tableNum(PurchReqTable));
            if (!_resultSet.in(purchReq.RecId))
            {
                PurchReqTableXdsTmp purchReqTableXdsTmp;
                purchReqTableXdsTmp.PurchReqRefRecId = purchReq.RecId;
                _insertList.add(purchReqTableXdsTmp);

                _resultSet.add(purchReq.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromPurchReqLineQueries</Name>
				<Source><![CDATA[
    private void insertFromPurchReqLineQueries(str _queryName, Set _resultSet, RecordInsertList _insertList)
    {
        Query query = new Query(_queryName);
        QueryRun queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            PurchReqLine purchReqLine = queryRun.get(tableNum(PurchReqLine));
            if (!_resultSet.in(purchReqLine.PurchReqTable))
            {
                PurchReqTableXdsTmp purchReqTableXdsTmp;
                purchReqTableXdsTmp.PurchReqRefRecId = purchReqLine.PurchReqTable;
                _insertList.add(purchReqTableXdsTmp);

                _resultSet.add(purchReqLine.PurchReqTable);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchReqRefRecId</Name>
			<ExtendedDataType>PurchReqRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchReqRefRecId</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchReqRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PurchReqTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchReqTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchReqRefRecId</Name>
					<Field>PurchReqRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>