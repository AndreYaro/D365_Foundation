<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventBaileeCalcTable_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventBaileeCalcTable_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        InventTrans inventTrans;
        ttsbegin;

        update_recordset inventTrans
            setting GroupRefType_RU = InventTransGroupRefType_RU::None,
                    GroupRefId_RU   = ''
            where inventTrans.GroupRefType_RU   == InventTransGroupRefType_RU::InventBaileeCalc
               && inventTrans.GroupRefId_RU     == this.CalcId;

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.CalcDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventOwner</Name>
				<Source><![CDATA[
    public InventOwner_RU inventOwner(boolean _forUpdate = false)
    {
        return InventOwner_RU::find(this.InventOwnerId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextCalcTable</Name>
				<Source><![CDATA[
    public InventBaileeCalcTable_RU nextCalcTable(boolean _forUpdate = false)
    {
        InventBaileeCalcTable_RU    inventBaileeCalcTable;
        inventBaileeCalcTable.selectForUpdate(_forUpdate);
        select firstonly inventBaileeCalcTable
            order by CalcDate asc
            where inventBaileeCalcTable.InventLocationId    == this.InventLocationId
               && inventBaileeCalcTable.InventOwnerId       == this.InventOwnerId
               && inventBaileeCalcTable.CalcDate            >  this.CalcDate;
        return inventBaileeCalcTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prevCalcTable</Name>
				<Source><![CDATA[
    public InventBaileeCalcTable_RU prevCalcTable(boolean _forUpdate = false)
    {
        InventBaileeCalcTable_RU    inventBaileeCalcTable;
        inventBaileeCalcTable.selectForUpdate(_forUpdate);
        select firstonly inventBaileeCalcTable
            order by CalcDate desc
            where inventBaileeCalcTable.InventLocationId    == this.InventLocationId
               && inventBaileeCalcTable.InventOwnerId       == this.InventOwnerId
               && inventBaileeCalcTable.CalcDate            <  this.CalcDate;
        return inventBaileeCalcTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean                     ok = super();
        if (this.nextCalcTable())
        {
            ok = checkFailed(strfmt("@GLS115686", this.nextCalcTable().CalcId));
        }
        if (this.Closed)
        {
            ok = checkFailed("@GLS115687");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(InventBaileeCalcId_RU _inventBaileeCalcId)
    {
        if (_inventBaileeCalcId && ! InventBaileeCalcTable_RU::exist(_inventBaileeCalcId))
        {
            return checkFailed(strfmt(InventBaileeCalcTable_RU::txtNotExist(), _inventBaileeCalcId));
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(InventBaileeCalcId_RU _calcId)
    {
        return _calcId
            && (select inventBaileeCalcTable_RU
                    where inventBaileeCalcTable_RU.CalcId == _calcId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventBaileeCalcTable_RU find(InventBaileeCalcId_RU _calcId, boolean _forUpdate = false)
    {
        InventBaileeCalcTable_RU   inventBaileeCalcTable;
        inventBaileeCalcTable.selectForUpdate(_forUpdate);

        if (_calcId)
        {
            select firstonly inventBaileeCalcTable
                where inventBaileeCalcTable.CalcId == _calcId;
        }
        return inventBaileeCalcTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transCount</Name>
				<Source><![CDATA[
    static Counter transCount(InventBaileeCalcId_RU _calcId)
    {
        InventBaileeCalcTrans_RU    calcTrans;
        select count(RecId) from calcTrans
            where calcTrans.CalcId == _calcId;

        return any2int(calcTrans.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@GLS115648";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@GLS115582</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CalcId</TitleField1>
	<TitleField2>CalcDate</TitleField2>
	<ClusteredIndex>CalcIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventBaileeCalcTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>InventBaileeCalcTrans_RU</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@sys5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventBaileeCalc</Name>
			<Label>@GLS114984</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Closed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimension</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendContract</Name>
			<Label>Клиент/договор</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CalcDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalcId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBaileeCalcId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Closed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS67267</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventJournalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventOwnerId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventOwnerId_RU</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CalcIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CalcId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventJournalId</Name>
					<SourceEDT>InventJournalId</SourceEDT>
					<Field>InventJournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventOwner_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventOwner_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventOwnerId</Name>
					<SourceEDT>InventOwnerId_RU</SourceEDT>
					<Field>InventOwnerId</Field>
					<RelatedField>InventOwnerId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventOwnerIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>