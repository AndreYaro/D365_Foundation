<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailKitComponentSubstitute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailKitComponentSubstitute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createFromTmpProductTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>RetailKitComponentSubstitute</c> table.
    /// </summary>
    /// <param name="_tmpProductTable">
    /// A buffer from products table.
    /// </param>
    /// <param name="_retailKitComponent">
    /// A reference to <c>RetailKitComponent</c> record.
    /// </param>
    /// <returns>
    /// true if any rows were created; otherwise, false.
    /// </returns>
    public static boolean createFromTmpProductTable(
        TmpRetailProductsToAdd _tmpProductTable,
        RetailKitComponent _retailKitComponent)
    {
        UnitOfMeasure uom, productUom;
        int numberOfRows;
        RefRecId   ecoResProductId;

        uom = UnitOfMeasure::findBySymbol(InventParameters::find().DefaultUnitId);

        ttsbegin;
        while select _tmpProductTable
        {
            if (_tmpProductTable.Quantity == 0)
            {
                _tmpProductTable.Quantity++;
            }

            ecoResProductId = _tmpProductTable.EcoResDistinctProductVariant ? _tmpProductTable.EcoResDistinctProductVariant : _tmpProductTable.EcoResProduct;

            //Validate if the Retail kit component substitute is not same as component.
            if (RetailKitConfigurator::kitComponentSubstitutevalidation(_retailKitComponent,_tmpProductTable.EcoResDistinctProductVariant?_tmpProductTable.EcoResDistinctProductVariant:_tmpProductTable.EcoResProduct))
            {
                productUom = UnitOfMeasure::findBySymbol(InventTable::findByProduct(ecoResProductId).inventUnitId());

                if (RetailKitComponentSubstitute::insertRetailKitComponentSubstitute(_retailKitComponent,
                EcoResProduct::find(ecoResProductId), _tmpProductTable.Quantity, productUom.RecId ? productUom.RecId : uom.RecId))
                {
                    numberOfRows ++;
                }
            }
        }
        ttscommit;
        return numberOfRows > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>RetailKitComponentSubstitute</c> table.
    /// </summary>
    /// <param name="_retailKitComponentSubstitute">
    ///    The ID of the retail Kit Component Substitute record to find.
    /// </param>
    /// <param name="_retailKitComponent">
    ///    The ID of the retail Kit Component record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>RetailKitComponent</c> table; otherwise, an empty record.
    /// </returns>
    static public RetailKitComponentSubstitute find(RecId _retailKitComponentSubstitute, RefRecId _retailKitComponent,boolean _forUpdate = false)
    {
        RetailKitComponentSubstitute retailKitComponentSubstitute;

        if (_retailKitComponentSubstitute)
        {
                retailKitComponentSubstitute.selectForUpdate(_forUpdate);
                select firstonly retailKitComponentSubstitute
                    where retailKitComponentSubstitute.SubstituteProduct == _retailKitComponentSubstitute
                    && retailKitComponentSubstitute.KitComponent == _retailKitComponent;
        }
        return retailKitComponentSubstitute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRetailKitComponentSubstitute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates record into table <c>RetailKitComponentSubstitute</c>.
    /// </summary>
    /// <param name="_retailKitComponent">
    /// A record in table <c>RetailKitComponent</c>.
    /// </param>
    /// <param name="_ecoResProduct">
    /// A record buffer of table <c>EcoResProduct</c>
    /// </param>
    /// <param name="_quantityProduct">
    /// The quantity of ecoResDistinctProduct.
    /// </param>
    /// <param name="_uomId">
    /// The unit of measure of the component product.
    /// </param>
    /// <returns>
    ///  A record in the <c>RetailKitComponentSubstitute</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailKitComponentSubstitute insertRetailKitComponentSubstitute(RetailKitComponent _retailKitComponent,
                                            EcoResProduct _ecoResProduct,Qty _quantityProduct,UnitOfMeasureRecId _uomId)
    {
        RetailKitComponentSubstitute   newRetailKitComponentSubstitute;

        if (!RetailKitComponentSubstitute::find(_ecoResProduct.RecId,_retailKitComponent.RecId))
        {
            newRetailKitComponentSubstitute.initValue();
            newRetailKitComponentSubstitute.KitComponent = _retailKitComponent.RecId;
            newRetailKitComponentSubstitute.SubstituteProduct  = _ecoResProduct.RecId;
            newRetailKitComponentSubstitute.Quantity = _quantityProduct;
            newRetailKitComponentSubstitute.UnitOfMeasure = _uomId;
            newRetailKitComponentSubstitute.insert();
        }

        return newRetailKitComponentSubstitute;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX1076</DeveloperDocumentation>
	<Label>@REX1072</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>KitComponent</TitleField1>
	<TitleField2>SubstituteProduct</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Merchandising</Modules>
	<ReplacementKey>KitComponentSubstituteIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KitComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubstituteProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KitComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubstituteProduct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET5150</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KitComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubstituteProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KitComponent</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailKitComponentRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SubstituteProduct</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KitComponentSubstituteIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>KitComponent</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SubstituteProduct</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailKitComponent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailKitComponent</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KitComponent</Name>
					<Field>KitComponent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SubstituteProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SubstituteProduct</Name>
					<Field>SubstituteProduct</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>