<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkVendApprovalMethodsExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks whether or not vendor approval methods are already assigned to released products.
    /// </summary>
    /// <returns>
    ///     Returns true if vendor approval methods are already assigned to released products.
    /// </returns>
    public boolean checkVendApprovalMethodsExist()
    {
        InventTable         inventTable;
        WHSInventEnabled    whsInventEnabled;
        boolean             ret;

        select firstonly RecId from inventTable
            where inventTable.PdsVendorCheckItem    != PdsVendorCheckItem::NoCheck
            exists join whsInventEnabled
            where whsInventEnabled.ItemId           == inventTable.ItemId;

        if (inventTable.RecId != 0)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
		this.EnableSystemDirectedWorkSequencing = true;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableExecuteWaveInBatchAndConfigureWaveLockWait</Name>
				<Source><![CDATA[
    private void enableExecuteWaveInBatchAndConfigureWaveLockWait()
    {
        this.enableExecuteWaveInBatch();
        this.configureWaveLockWaitToDefaultValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryEnableWarehouseSpecificInventoryTransactionsInAllScenarios</Name>
				<Source><![CDATA[
    /// <summary>
    /// Attempts to configure the system so that warehouse-specific inventory transactions are used in all scenarios.
    /// </summary>
    /// <remarks>
    /// Validates that there are no incompatible customizations before enabling warehouse-specific inventory transactions.
    /// </remarks>
    private void tryEnableWarehouseSpecificInventoryTransactionsInAllScenarios()
    {
        // external code (like tests) can opt-out from auto-enablement.
        if (   WHSSkipAutoEnableWarehouseInventoryTransactionsInAllScenariosContext::instance()
            && WHSSkipAutoEnableWarehouseInventoryTransactionsInAllScenariosContext::instance().parmSkipAutoEnable())
        {
            return;
        }

        // if any company uses the warehouse-specific inventory transactions, than the validation was already performed and can skip the heavy validation.
        if (   WHSInventoryScenarioInventoryTransactionMechanism::anyScenarioUsesWarehouseSpecificInventoryTransactionsCrossCompany()
            || WHSWarehouseInventoryTransactionFeatureExtensionValidator::checkExtensionsAreCompatible(false, true))    // silent check since here we are attempting to just set the default parameters.
        {
            WHSInventoryScenarioInventoryTransactionMechanism::initTransactionScenarios();
            WHSInventoryScenarioInventoryTransactionMechanism::setInventoryTransactionMechanismToAllScenarios(WHSInventoryTransactionMechanismEnum::WHSInventoryTransaction);
            WHSInventoryScenarioInventoryTransactionMechanism::setWarehouseTransactionEnabledByDefault();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableArchivedReservationTransactionsCleanup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures cleanup of archived warehouse-specific reservation transactions.
    /// </summary>
    private void enableArchivedReservationTransactionsCleanup()
    {
        this.CleanupArchivedWarehouseReservationTransactions = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeInventoryUpdateLogCleanup</Name>
				<Source><![CDATA[
    private void initializeInventoryUpdateLogCleanup()
    {
        this.CleanupInventoryUpdateLogAfterDays = WHSParametersConstants::DefaultCleanupInventoryUpdateLogAfterDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupInventoryUpdateLogAfterDays</Name>
				<Source><![CDATA[
    internal WHSCleanupInventoryUpdateLogAfterDays cleanupInventoryUpdateLogAfterDays()
    {
        return this.CleanupInventoryUpdateLogAfterDays
            ? this.CleanupInventoryUpdateLogAfterDays
            : WHSParametersConstants::DefaultCleanupInventoryUpdateLogAfterDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableExecuteWaveInBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures wave to be executed in batch.
    /// </summary>
    [Hookable(false)]
    internal void enableExecuteWaveInBatch()
    {
        this.ExecuteWaveInBatch = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureWaveLockWaitToDefaultValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures the wave lock wait time to the default value if it is not configured.
    /// </summary>
    [Hookable(false)]
    internal void configureWaveLockWaitToDefaultValue()
    {
        if (!this.WaveLockWait)
        {
            this.WaveLockWait = WHSParametersConstants::DefaultWaveLockWaitInMS;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isScheduleWorkCreationEnabled</Name>
				<Source><![CDATA[
    internal boolean isScheduleWorkCreationEnabled()
    {
        if (this.EnableScheduleWorkCreation
            || WHSPostMethod::exist(identifierStr(ScheduleWorkCreationMethodName)))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>configurePutLocDirWaitToDefaultValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures the put location directive lock wait time to the default value if it is not configured.
    /// </summary>
    [Hookable(false)]
    internal void configurePutLocDirWaitToDefaultValue()
    {
        if (!this.PutLocationDirectiveLockWait)
        {
            this.PutLocationDirectiveLockWait = WHSParametersConstants::DefaultPutLocDirLockWaitInMS;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        using (var activityContext = WHSInstrumentationLogger::createLoggerForTable(this).configuration().changeEvent(funcName(), this))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.enableExecuteWaveInBatchAndConfigureWaveLockWait();

        // Default warehouse-specific inventory transactions settings.
        this.tryEnableWarehouseSpecificInventoryTransactionsInAllScenarios();
        this.enableArchivedReservationTransactionsCleanup();
        
        this.initializeInventoryUpdateLogCleanup();

        this.UseWHSLabelLayoutForDocumentRoutingLine = true;
        this.GS1UnknownDataElementAIPolicy = WhsGS1UnknownDataElementAIPolicy::Ignore;

        using (var activityContext = WHSInstrumentationLogger::createLoggerForTable(this).configuration().changeEvent(funcName(), this))
        {
            super();
        }

        this.createRFGenericUserLocations();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        boolean isGenericWorkUserIdChanged = this.GenericWorkUserId != this.orig().GenericWorkUserId;

        using (var activityContext = WHSInstrumentationLogger::createLoggerForTable(this).configuration().changeEvent(funcName(), this))
        {        
            super();
        }

        if (isGenericWorkUserIdChanged)
        {
            this.createRFGenericUserLocations();
        }

        flush WHSParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        return super(_fieldName, _arrayIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkCreateHistoryLogUntilDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void initWorkCreateHistoryLogUntilDate()
    {
        utcdatetime timeNow = DateTimeUtil::utcNow();
        int daysToAdd = this.workCreateHistoryLogDurationInDays();
        this.WorkCreateHistoryLogUntilDate = DateTimeUtil::addDays(timeNow, daysToAdd);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSParameters, WorkCreateHistoryLog):
                if (this.WorkCreateHistoryLog)
                {
                    this.initWorkCreateHistoryLogUntilDate();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WHSParameters, DefaultStatusId):
                    if (this.DefaultStatusId && WHSInventStatus::isBlockingStatus(this.DefaultStatusId))
                    {
                        ret = checkFailed("@WAX5431");
                    }
                    break;
                case fieldNum(WHSParameters, EnableVendFilters):
                    if (this.orig().EnableVendFilters != this.EnableVendFilters
                    &&  this.EnableVendFilters
                    &&  this.checkVendApprovalMethodsExist())
                    {
                        warning("@WAX5491");
                    }
                    break;
                case fieldNum(WHSParameters, UserLocType):
                    if (this.UserLocType && !WHSLocationProfile::find(this.UserLocType).LPControlled)
                    {
                        ret = checkFailed("@WAX:UserLocProfileMustBeLPTracked");
                    }
                    break;
                case fieldNum(WHSParameters, TransferOrderFulFillmentPolicy):
                    if (!WHSFulfillmentPolicy::find(this.TransferOrderFulFillmentPolicy).canTypeBeUsedForTransferOrders())
                    {
                        ret = checkFailed(strfmt("@WAX:Table_ErrorFulfillmentTypeNotSupportedForTransferOrders_Label", WHSFulfillmentPolicy::find(this.TransferOrderFulFillmentPolicy).FulfillmentType));
                    }
                    break;
                case fieldNum(WHSParameters, EnableReturnDetailsCreation):
                    if (this.EnableReturnDetailsCreation)
                    {
                        WHSParameters::validateCanEnableReturnDetailsCreation();
                        
                        if (!WHSParameters::isSalesLoadLinePickingRouteEnabled())
                        {
                            warning("@WAX:EnableReturnDetailsCreationDisabledEnableSalesLoadPickingRoute");
                        }
                    }
                    break;
                case fieldNum(WHSParameters, EnableReturnOrderCreationFromMobileDevice):
                    if (!this.EnableReturnOrderCreationFromMobileDevice)
                    {
                        ret = this.validateDisableReturnOrderCreationFromMobileDevice();
                    }
                    break;
                case fieldNum(WHSParameters, EnableSalesLoadLinePickingRoute):
                    if (this.EnableSalesLoadLinePickingRoute)
                    {
                        NumberSequenceReference loadLineInventoryPickIdNumSeqRef = WHSParameters::numRefWhsLoadLineInventoryPickId();

                        if (!loadLineInventoryPickIdNumSeqRef
                            || !loadLineInventoryPickIdNumSeqRef.NumberSequenceId)
                        {
                            warning("@WAX:EnableSalesLoadLinePickingRouteMissingLoadLineInventoryPickIdNumSeqRef");
                        }
                    }
                    else
                    {
                        if (WHSShipmentTable::existForOrderLineInventTransLinkType(WHSShipmentOrderLineInventTransLinkType::PickingRoute))
                        {
                            ret = checkFailed("@WAX:EnableSalesLoadLinePickingRouteCanNotBeDisabledShipmentWithPickingRouteExists");
                        }
                    }
                    break;
                case fieldNum(WHSParameters, CleanupInventoryUpdateLogAfterDays):
                    ret = this.validateCleanupInventoryUpdateLogAfterDays();
                    break;
                case fieldNum(WHSParameters, AllowMultipleProductReceiptsForLoad):
                    ret = this.validateLoadReceivingCompletedPolicy();
                    break;
                case fieldNum(WHSParameters, LoadReceivingCompletedPolicyForPurchaseOrders):
                    ret = this.validateLoadReceivingCompletedPolicy();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCanEnableReturnDetailsCreation</Name>
				<Source><![CDATA[
    internal static void validateCanEnableReturnDetailsCreation()
    {
        NumberSequenceReference returnIdNumSeqRef = WHSParameters::numRefWHSReturnId();

        if (!returnIdNumSeqRef
         || !returnIdNumSeqRef.NumberSequenceId)
        {
            warning("@WAX:EnableReturnDetailsCreationMissingReturnIdNumSeqRef");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLoadReceivingCompletedPolicy</Name>
				<Source><![CDATA[
    private boolean validateLoadReceivingCompletedPolicy()
    {
        if (this.AllowMultipleProductReceiptsForLoad == WHSAllowMultipleProductReceiptsForLoad::Yes
            && this.LoadReceivingCompletedPolicyForPurchaseOrders == WHSLoadReceivingCompletedPolicyForPurchaseOrders::EnabledWithAutoPost)
        {
            return checkFailed("@WAX:InvalidReceivingCompletedPolicyForPurchaseOrdersConfiguration");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCleanupInventoryUpdateLogAfterDays</Name>
				<Source><![CDATA[
    internal boolean validateCleanupInventoryUpdateLogAfterDays()
    {
        if (WHSInventoryUpdateLogToggle::instance().isEnabled()
            && this.CleanupInventoryUpdateLogAfterDays < WHSParametersConstants::MinimumCleanupInventoryUpdateLogAfterDays)
        {
            return checkFailed(strFmt("@WAX:InvalidCleanupInventoryUpdateLogAfterDaysValueError", WHSParametersConstants::MinimumCleanupInventoryUpdateLogAfterDays));
        }
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDisableReturnOrderCreationFromMobileDevice</Name>
				<Source><![CDATA[
    private boolean validateDisableReturnOrderCreationFromMobileDevice()
    {
        WHSLicensePlateId mixedLicensePlateId = WHSMixedLicensePlateReceipt::findFirstLicensePlateIdWithReceiptPlannedLine();

        if (mixedLicensePlateId)
        {
            return checkFailed(strfmt("@WAX:DisableReturnOrderCreationFromMobileDeviceError", mixedLicensePlateId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
               
        if (this.PackingLocType != '' && this.PackingLocationType != '')
        {
            ret = checkFailed("@WAX:ErrorLegacyPackingMustBeRemoved");
        }

        WHSParameters origParameters = this.orig();

        if (this.PackingLocType && !origParameters.PackingLocType)
        {
            ret = checkFailed("@WAX:ErrorProfileIdForPackingStationCannotBeUsed");
        }

        if (ret
            && this.UserLocType != origParameters.UserLocType)
        {
            ret = this.updateProfileLocationStatusFields(this.UserLocType);
        }

        if (ret 
            && this.StageLocType != origParameters.StageLocType)
        {
            ret = this.updateTypeLocationStatusFields(this.StageLocType);
        }

        if (ret 
            && this.PackingLocationType != origParameters.PackingLocationType)
        {
            ret = this.updateTypeLocationStatusFields(this.PackingLocationType);
        }

        if (ret 
            && this.ShipFinalLocType != origParameters.ShipFinalLocType)
        {
            ret = this.updateTypeLocationStatusFields(this.ShipFinalLocType);
        }

        if (ret
            && this.CleanupInventoryUpdateLogAfterDays != origParameters.CleanupInventoryUpdateLogAfterDays)
        {
            ret = this.validateCleanupInventoryUpdateLogAfterDays();
        }

        if (ret
            && this.AllowMultipleProductReceiptsForLoad != origParameters.AllowMultipleProductReceiptsForLoad)
        {
            ret = this.validateLoadReceivingCompletedPolicy();
        }

        if (ret
            && this.LoadReceivingCompletedPolicyForPurchaseOrders != origParameters.LoadReceivingCompletedPolicyForPurchaseOrders)
        {
            ret = this.validateLoadReceivingCompletedPolicy();
        }

        ret = this.validateAutoCreateLoad(ret);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTypeLocationStatusFields</Name>
				<Source><![CDATA[
    private boolean updateTypeLocationStatusFields(WHSLocType _locationType)
    {
        WHSLocationProfile locationProfile;

        select firstonly RecId from locationProfile
            where locationProfile.LocType == _locationType
            &&    (locationProfile.EnableItemInLocationUpdate == NoYes::Yes
            ||     locationProfile.EnableLocationActivityDateTimeUpdate == NoYes::Yes
            ||     locationProfile.EnableLocationStatusUpdate == NoYes::Yes);

        if (locationProfile.RecId)
        {
            if (Box::confirm(strFmt("@WAX:WarehouseParameterTypeMessage", _locationType)))
            {
                ttsbegin;

                update_recordset locationProfile
                    setting EnableItemInLocationUpdate = NoYes::No,
                            EnableLocationActivityDateTimeUpdate = NoYes::No,
                            EnableLocationStatusUpdate = NoYes::No
                    where locationProfile.LocType == _locationType;
    
                ttscommit;
            }
            else
            {
                return checkFailed("@WAX:UpdateCancelled");
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProfileLocationStatusFields</Name>
				<Source><![CDATA[
    private boolean updateProfileLocationStatusFields(WHSLocProfileId _profileId)
    {
        WHSLocationProfile locationProfile = WHSLocationProfile::find(_profileId);

        if (locationProfile.EnableItemInLocationUpdate
            || locationProfile.EnableLocationActivityDateTimeUpdate
            || locationProfile.EnableLocationStatusUpdate)
        {
            if (Box::confirm(strFmt("@WAX:WarehouseParameterProfileMessage", _profileId)))
            {
                ttsbegin;

                locationProfile = WHSLocationProfile::find(_profileId, true);
                locationProfile.resetLocationStatusFields();
                locationProfile.update();

                ttscommit;
            }
            else
            {
                return checkFailed("@WAX:UpdateCancelled");
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAutoCreateLoad</Name>
				<Source><![CDATA[
    private boolean validateAutoCreateLoad(boolean _ret)
    {
        if (InventLocation::isAutoUpdateShipmentAlwaysEnabledForAnyWarehouse())
        {
            if (this.AutoCreateLoad)
            {
                _ret = checkFailed("@WAX:AutoCreateLoadSOShipmentAutoUpdateValidation");
            }

            if (this.AutoCreateLoadTO)
            {
                _ret = checkFailed("@WAX:AutoCreateLoadTOShipmentAutoUpdateValidation");
            }
        }

        return _ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workCreateHistoryLogDurationInDays</Name>
				<Source><![CDATA[
    protected int workCreateHistoryLogDurationInDays()
    {
        return 7;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkCreateHistoryLogEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isWorkCreateHistoryLogEnabled()
    {
        if (this.WorkCreateHistoryLog)
        {
            if (DateTimeUtil::utcNow() < this.WorkCreateHistoryLogUntilDate)
            {
                return true;
            }

            boolean mustEnable = this.WorkCreateHistoryLogUntilDate == utcDateTimeNull();

            if (this.canUpdateWHSParameters())
            {
                WHSParameters updateParameters;
                updateParameters.readPast(true);

                ttsbegin;
                select pessimisticlock firstonly updateParameters
                where updateParameters.ParametersKey == this.ParametersKey
                    && updateParameters.WorkCreateHistoryLogUntilDate == this.WorkCreateHistoryLogUntilDate
                    && updateParameters.WorkCreateHistoryLog == true;

                if (updateParameters)
                {
                    if (mustEnable)
                    {
                        updateParameters.initWorkCreateHistoryLogUntilDate();
                    }
                    else
                    {
                        updateParameters.WorkCreateHistoryLog = false;
                    }
                    updateParameters.update();
                }
                ttscommit;
            }

            return mustEnable;
        }

        return this.WorkCreateHistoryLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUpdateWHSParameters</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    internal boolean canUpdateWHSParameters()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRFGenericUserLocations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>WHSWorkUserWarehouse</c> table with entries that do not already exist for the RF generic worker.
    /// </summary>
    public void createRFGenericUserLocations()
    {
        WHSWorkUserWarehouse    newWorkUserWarehouse;
        WHSWorkUserWarehouse    existingWorkUserWarehouse;
        InventLocation          inventLocation;
        WHSUserId               genericWorkUserId = this.GenericWorkUserId;

        if (genericWorkUserId)
        {
            ttsbegin;

            insert_recordset newWorkUserWarehouse (InventLocationId, UserId)
                select InventLocationId, genericWorkUserId
                from inventLocation
                    where inventLocation.WHSEnabled     == NoYes::Yes
                notexists join existingWorkUserWarehouse
                    where existingWorkUserWarehouse.inventLocationId    == inventLocation.inventLocationId
                       && existingWorkUserWarehouse.UserId              == genericWorkUserId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBatchJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method will create a batch job.
    /// </summary>
    /// <param name="_batchTaskSet">
    /// The batch tasks that will be associated to the batch job.
    /// </param>
    /// <param name="_caption">
    /// The caption used for the batch job.
    /// </param>
    /// <param name="_startDateTime">
    /// The date/time the batch job will start.
    /// </param>
    /// <param name="_batchLogLevel">
    /// The logging configuration for the batch job.
    /// </param>
    /// <returns>
    /// The RecId of the Batch table record that is created.
    /// </returns>
    public static RefRecId createBatchJob(Set   _batchTaskSet,
        str             _caption = '',
        StartDateTime   _startDateTime = DateTimeUtil::getSystemDateTime(),
        BatchLogLevel   _batchLogLevel = BatchLogLevel::Always)
    {
        boolean             taskCreated;

        BatchHeader batchHeader = WHSParameters::initializeBatchHeader(_caption, _startDateTime, _batchLogLevel);

        SetEnumerator se = _batchTaskSet.getEnumerator();

        while (se.moveNext())
        {
            RunBaseBatch batchTask    = se.current();
            batchHeader.addTask(batchTask);
            taskCreated = true;
        }

        // If at least one batch task was added then create batch job.
        if (taskCreated)
        {
            batchHeader.save();
        }

        return taskCreated ? batchHeader.parmBatchHeaderId() : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeBatchHeader</Name>
				<Source><![CDATA[
    internal static BatchHeader initializeBatchHeader(
        str             _caption,
        StartDateTime   _startDateTime,
        BatchLogLevel   _batchLogLevel)
    {
        BatchHeader batchHeader = BatchHeader::construct();
        
        var waveBatchGroup = WHSParameters::find().WaveBatchGroup;
            
        if (BatchGroup::exist(waveBatchGroup))
        {
            batchHeader.parmBatchGroup(waveBatchGroup);
        }
        batchHeader.parmCaption(_caption);
        batchHeader.parmStartDateTime(_startDateTime);
        batchHeader.parmLogLevel(_batchLogLevel);
        
        if (WHSParameters::find().WaveBatchDisableNotifications)
        {
            batchHeader.parmAlerts(NoYes::No, NoYes::No, NoYes::No, NoYes::No, NoYes::No);
        }
        else
        {
            batchHeader.parmAlerts(NoYes::Yes, NoYes::Yes, NoYes::Yes, NoYes::Yes, NoYes::No);
        }
        return batchHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(ParametersKey _parametersKey)
    {
        return _parametersKey && (select firstonly RecId from whsParameters
                 where whsParameters.ParametersKey == _parametersKey).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static WHSParameters find(boolean _forUpdate = false)
    {
        WHSParameters parameters;

        // Check if the configuration key for the WHSParameters table is off. When the configuration key is off the isTmp() method returns true.
        if (parameters.isTmp())
        {
            return parameters;
        }
        
        parameters.selectForUpdate(_forUpdate);

        select firstonly parameters
            where parameters.ParametersKey == 0;

        if (!parameters && !parameters.isTmp())
        {
            Company::createParameter(parameters);
            ISOCurrencyCode::createDefaultData();
        }

        return parameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the preferred date format for the current user
    /// </summary>
    /// <param name="_userId">
    ///  The user ID to get the date culture. Optional.
    /// </param>
    /// <returns>
    /// A string representation of the system's date format.
    /// </returns>
    public static str getDateFormat(WHSUserId _userId = '')
    {
        System.Globalization.CultureInfo ci = new System.Globalization.CultureInfo(WHSParameters::getCurrentUserDateCulture(_userId));

        return ci.get_DateTimeFormat().get_ShortDatePattern();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupMovJournalNameId</Name>
				<Source><![CDATA[
    public static void lookupMovJournalNameId(FormStringControl _ctrl, InventJournalType _journalType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup          = SysTableLookup::newParameters(tableNum(InventJournalName), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tableNum(InventJournalName));

        sysTableLookup.addLookupfield(fieldNum(InventJournalName, JournalNameId));
        sysTableLookup.addLookupfield(fieldNum(InventJournalName, Description));
        queryBuildDataSource.addRange(fieldNum(InventJournalName, JournalType)).value(enum2str(_journalType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReturnArrivalJournal</Name>
				<Source><![CDATA[
    public static void lookupReturnArrivalJournal(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup          = SysTableLookup::newParameters(tableNum(WMSJournalName), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tableNum(WMSJournalName));

        sysTableLookup.addLookupfield(fieldNum(WMSJournalName, JournalNameId));
        queryBuildDataSource.addRange(fieldNum(WMSJournalName, JournalType)).value(SysQuery::value(WMSJournalType::Reception));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSBillOfLadingId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSBillOfLadingId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSBillOfLadingId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSClusterId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSClusterId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSClusterId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSContainerBuildId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSContainerBuildId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSContainerBuildId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSContainerId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSContainerId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSContainerId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSContainerTransId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSContainerTransId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSContainerTransId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSInventVoucherId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSInventVoucherId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSInventVoucherId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSLabelId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSLabelId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSLabelId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSLicensePlateId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSLicensePlateId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSLicensePlateId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSLoadId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSLoadId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSLoadId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSReceiptId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSReceiptId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSReceiptId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSReleaseToWarehouseId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSReleaseToWarehouseId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSReleaseToWarehouseId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSShipmentId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSShipmentId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSShipmentId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSTmpToteId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSTmpToteId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSTmpToteId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWaveExecutionId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWaveExecutionId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWaveExecutionID));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWaveId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWaveId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWaveId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWorkCreateId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWorkCreateId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWorkCreateId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWorkGroupingId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWorkGroupingId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWorkGroupingId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWorkId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWorkId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWorkId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWorkTransId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefWHSWorkTransId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWorkTransId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSCrossDockId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefWHSCrossDockId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSCrossDockId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSCatchWeightTagNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number sequence reference for the catch weight tag.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the catch weight tag.
    /// </returns>
    [Hookable(false)]
    internal static NumberSequenceReference numRefWHSCatchWeightTagNumber()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSCatchWeightTagNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSWaveLabelId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number sequence reference for the wave label id.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the wave label id.
    /// </returns>
    [Hookable(false)]
    static NumberSequenceReference numRefWHSWaveLabelId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSWaveLabelId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSReturnId</Name>
				<Source><![CDATA[
    internal static NumberSequenceReference numRefWHSReturnId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSReturnID));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWHSExternalInventoryAdjustmentId</Name>
				<Source><![CDATA[
    internal static NumberSequenceReference numRefWHSExternalInventoryAdjustmentId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WHSExternalInventoryAdjustmentId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetSeqNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to reorder tables with a sequence/priority number to eliminate gaps in the sequence.
    /// </summary>
    /// <param name="_tableId">
    /// Table Id of the table to be reordered.
    /// </param>
    /// <param name="_fieldId">
    /// Field Id of the sequence/priority field.
    /// </param>
    /// <param name="_listOfCriteria">
    /// A list of containers which represents addtional criteria(ranges) that must be used when selecting records for the reordering of the table.
    /// Each container must be in the following format [fieldId, value].
    /// </param>
    public static void resetSeqNum(TableId _tableId, FieldId _fieldId, List _listOfCriteria = new List(Types::Container))
    {
        Common                  common;
        int                     i; // Assume sequence starts at 0
        QueryBuildDataSource    qbds;
        Query                   q;
        QueryRun                qr;
        DictField               dictField;
        ListEnumerator          enumerator;
        container               curCriteria;

        // Check that the field passed in is an integer.
        dictField = new DictField(_tableId, _fieldId);
        if (dictField.baseType() != Types::Integer)
        {
            error ("@WAX3734");
            return;
        }

        q = new Query();

        qbds = q.addDataSource(_tableId);

        qbds.update(true);
        qbds.addOrderByField(_fieldId);

        // Add the criteria as ranges to the query.
        enumerator = _listOfCriteria.getEnumerator();
        while (enumerator.moveNext())
        {
            curCriteria = enumerator.current();
            qbds.addRange(conPeek(curCriteria, 1)).value(SysQuery::value(conPeek(curCriteria, 2)));
        }

        qr = new QueryRun(q);

        ttsbegin;

        // Loop over query results and update sequence.
        while (qr.next())
        {
            common = qr.get(_tableId);
            common.(_fieldId) = i;
            common.update();
            ++i;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>str2con</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom str2con method that supports multi character delimiters.
    /// Splits the given string by the specified delimiters and returns the contents in a container.
    /// </summary>
    /// <param name="_value">
    /// The String value to be split.
    /// </param>
    /// <param name="_delimiter">
    /// The delimiters
    /// </param>
    /// <returns>
    /// A container, which has the String split by the specified delimiters.
    /// </returns>
    public static container str2con(str _value, str _delimiter)
    {
        container   ret;
        int         i = 1;
        int         length = strLen(_value);
        int         j = strScan(_value, _delimiter, 1, length);

        while (j)
        {
            ret += subStr(_value, i, j-i);
            i   =  j+strLen(_delimiter);
            j   =  strScan(_value, _delimiter, i, length);
        }

        ret += subStr(_value, i, length - i + 1);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUsePackFunctionality</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether packing is setup.
    /// </summary>
    /// <returns>
    /// A <c>boolean</c> value indicating whether packing is setup.
    /// </returns>
    public static boolean canUsePackFunctionality()
    {
        boolean             ret = false;
        WHSLocationProfile  whsLocationProfile;
        WHSParameters       whsParameters = WHSParameters::find();

        // Is the system set up to use the legacy packing profile parameter
        if (whsParameters.PackingLocType)
        {
            ret = true;
        }
        // is the system set up to use the packing location type
        else if (whsParameters.PackingLocationType && WHSLocationProfile::isPackLocationProfileDefined())
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreditMaxCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// If a parameter to display the credit limit check value is enabled, display the dialog so the value can be overidden.
    /// </summary>
    /// <returns>
    /// The credit limit check value to apply to a sales order that is being released.
    /// </returns>
    public static CustCreditMaxCheck getCreditMaxCheck()
    {
        Dialog             dialog;
        DialogField        dfCreditMaxCheck;
        CustCreditMaxCheck creditMaxCheck = CustParameters::find().CreditMaxCheck;

        if (WHSParameters::find().DisplayCreditMaxCheckDialog)
        {
            dialog = new Dialog();
            dialog.caption("@WAX:MaxCreditLimitCheckParameter");
            dialog.windowType(FormWindowType::PopUp);

            dfCreditMaxCheck = dialog.addFieldValue(extendedTypeStr(CustCreditMaxCheck), creditMaxCheck);

            if (dialog.run())
            {
                creditMaxCheck = dfCreditMaxCheck.value();
            }
        }

        return creditMaxCheck;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentUserDateCulture</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current user preferred date format.
    /// </summary>
    /// <param name="_userId">
    ///     The user ID to get the date culture. Optional.
    /// </param>
    /// <returns>
    /// A string representing the date format.
    /// </returns>
    public static str getCurrentUserDateCulture(WHSUserId _userId = '')
    
    {
        if(_userId)
        {
            UserInfo      userInfo;
            DirPersonUser dirPersonUser;
            HcmWorker     hcmWorker;
            WHSWorker     whsWorker;
            WHSWorkUser   whsWorkUser;

            select firstonly Language, PreferredLocale from userInfo
                exists join dirPersonUser
                    where dirPersonUser.User == userInfo.Id
                exists join hcmWorker
                    where hcmWorker.Person == dirPersonUser.PersonParty
                exists join whsWorker
                    where whsWorker.Worker == hcmWorker.RecId
                exists join whsWorkUser
                    where whsWorkUser.Worker == whsWorker.RecId
                        && whsWorkUser.userid == _userId;

            if (!userInfo)
            {
                 userInfo = xUserInfo::find(false, curUserId());
            }
 
            return (userInfo.PreferredLocale ? userInfo.PreferredLocale: userInfo.Language);
        }
        else
        {
            return infolog.language();
        }
   }

]]></Source>
			</Method>
			<Method>
				<Name>HMIMNumRefMultimodalDGId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns new Multimodal Dangerous Goods document Id
    /// </summary>
    /// <returns>New Multimodal Dangerous Goods document Id</returns>
    static NumberSequenceReference HMIMNumRefMultimodalDGId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(HMIMMultimodalDGId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>HMIMNumRefCarrOfMerchByRoadId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns new Carriage of Merchandise by Road document Id
    /// </summary>
    /// <returns>New CMR document Id</returns>
    static NumberSequenceReference HMIMNumRefCarrOfMerchByRoadId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(HMIMCarrOfMerchByRoadId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>HMIMNumRefAirWayBillId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns new AirWaybillNum number
    /// </summary>
    /// <returns>New AirWaybillNum number</returns>
    static NumberSequenceReference HMIMNumRefAirWayBillId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(HMIMAirWaybillNum));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLicensePlateTracking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Either throw error, warn, or ignore when a license plate gets specified together with a location which does not use the license plate tracking option.
    /// </summary>
    /// <param name = "_inventDimId">Inventory dimensions to check</param>
    [Hookable(false)]
    internal static void validateLicensePlateTracking(InventDimId _inventDimId)
    {
        WHSParameters parameters = WHSParameters::find();

        if (parameters.LicensePlateTrackingValidation != WHSLicensePlateTrackingValidation::Ignore)
        {
            InventDim inventDim = InventDim::find(_inventDimId);

            if (inventDim.LicensePlateId && (!inventDim.wmsLocationId || !inventDim.wmsLocation().whsLocationIsLPControlled()))
            {
                switch(parameters.LicensePlateTrackingValidation)
                {
                    case WHSLicensePlateTrackingValidation::Error:
                        throw error(strFmt("@SCM:LicensePlateSpecifiedOnNonPLControlledLocation", inventDim.LicensePlateId, inventDim.wMSLocationId, inventDim.inventLocationId));
                        break;

                    case WHSLicensePlateTrackingValidation::Warn:
                        warning(strFmt("@SCM:LicensePlateSpecifiedOnNonPLControlledLocation", inventDim.LicensePlateId, inventDim.wMSLocationId, inventDim.inventLocationId));
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasGS1Prefix</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if there is one of GS1 prefixes in the beggining of the string.
    /// </summary>
    /// <param name = "_str">String, to search in.</param>
    /// <returns>0 if there is no prefix, end position of prefix if it was found.</returns>
    [Hookable(false), SysObsolete('Use WHSBarcodeDataParserFactory::canParseBarcodeDataFromString() instead, as it covers the extensible barcode data parsers in addition to the GS1 parser', false, 10\10\2023)]
    public static int hasGS1Prefix(str _str)
    {
        WHSParameters   parameters = WHSParameters::find();
        int             prefixEndPosition;

        if (parameters.GS1FNC1Character && subStr(_str, 1, strLen(parameters.GS1FNC1Character)) == parameters.GS1FNC1Character)
        {
            prefixEndPosition = strLen(parameters.GS1FNC1Character);
        }
        else if (parameters.GS1DataMatrixCharacter && subStr(_str, 1, strLen(parameters.GS1DataMatrixCharacter)) == parameters.GS1DataMatrixCharacter)
        {
            prefixEndPosition = strLen(parameters.GS1DataMatrixCharacter);
        }
        else if (parameters.GS1QRCodeCharacter && subStr(_str, 1, strLen(parameters.GS1QRCodeCharacter)) == parameters.GS1QRCodeCharacter)
        {
            prefixEndPosition = strLen(parameters.GS1QRCodeCharacter);
        }

        return prefixEndPosition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isGS1Enabled</Name>
				<Source><![CDATA[
    // Method should be removed after WhsBarcodeDataParserExtensibilityFlight and WHSCanParseBarcodeDataFromStringFlight are removed
    [Hookable(false), SysObsolete('Use WHSBarcodeDataParserFactory::isBarcodeDataParsingEnabled() instead, as it covers the extensible barcode data parsers in addition to the GS1 parser', false, 10\10\2023)]
    internal static boolean isGS1Enabled()
    {
        WHSParameters parameters = WHSParameters::find();

        return parameters.GS1FNC1Character
                || parameters.GS1DataMatrixCharacter
                || parameters.GS1QRCodeCharacter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWhsLoadLineInventoryPickId</Name>
				<Source><![CDATA[
    internal static NumberSequenceReference numRefWhsLoadLineInventoryPickId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WhsLoadLineInventoryPickId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefWhsLoadLineInventoryReceiptId</Name>
				<Source><![CDATA[
    internal static NumberSequenceReference numRefWhsLoadLineInventoryReceiptId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WhsLoadLineInventoryReceiptId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReturnDetailsCreationEnabled</Name>
				<Source><![CDATA[
    internal static boolean isReturnDetailsCreationEnabled()
    {
        return WHSReturnDetailsFlight::instance().isEnabled()
            && WHSParameters::find().EnableReturnDetailsCreation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isShipmentReturnDetailsCreationEnabled</Name>
				<Source><![CDATA[
    internal static boolean isShipmentReturnDetailsCreationEnabled()
    {
        return WHSReturnDetailsFlight::instance().isEnabled()
            && WHSParameters::find().EnableReturnDetailsCreation
            && WHSParameters::isSalesLoadLinePickingRouteEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReturnOrderCreationFromMobileDeviceEnabled</Name>
				<Source><![CDATA[
    internal static boolean isReturnOrderCreationFromMobileDeviceEnabled()
    {
        return WHSReturnItemReceivingMobileFlowEnabledFlight::instance().isEnabled()
            && WHSParameters::find().EnableReturnOrderCreationFromMobileDevice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesLoadLinePickingRouteEnabled</Name>
				<Source><![CDATA[
    internal static boolean isSalesLoadLinePickingRouteEnabled()
    {
        return WHSSalesLoadLinePickingRouteFlight::instance().isEnabled()
            && WHSParameters::find().EnableSalesLoadLinePickingRoute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceivingCompletedEnabledForPOLoads</Name>
				<Source><![CDATA[
    internal static boolean isReceivingCompletedEnabledForPOLoads()
    {
        WHSParameters parameters = WHSParameters::find();
        WHSLoadReceivingCompletedPolicyForPurchaseOrders policy = parameters.LoadReceivingCompletedPolicyForPurchaseOrders;

        return WHSParameters::isLoadReceivingCompletedPolicyForPurchaseOrdersEnabled(policy)
            || WHSParameters::isLoadReceivingCompletedPolicyForPurchaseOrdersEnabledWithAutoPost(policy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceivingCompletedWithAutoPostEnabledForPOLoads</Name>
				<Source><![CDATA[
    internal static boolean isReceivingCompletedWithAutoPostEnabledForPOLoads()
    {
        WHSParameters parameters = WHSParameters::find();
        WHSLoadReceivingCompletedPolicyForPurchaseOrders policy = parameters.LoadReceivingCompletedPolicyForPurchaseOrders;

        return WHSParameters::isLoadReceivingCompletedPolicyForPurchaseOrdersEnabledWithAutoPost(policy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLoadReceivingCompletedPolicyForPurchaseOrdersEnabled</Name>
				<Source><![CDATA[
    private static boolean isLoadReceivingCompletedPolicyForPurchaseOrdersEnabled(WHSLoadReceivingCompletedPolicyForPurchaseOrders _policy)
    {
        return _policy == WHSLoadReceivingCompletedPolicyForPurchaseOrders::Enabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLoadReceivingCompletedPolicyForPurchaseOrdersEnabledWithAutoPost</Name>
				<Source><![CDATA[
    private static boolean isLoadReceivingCompletedPolicyForPurchaseOrdersEnabledWithAutoPost(WHSLoadReceivingCompletedPolicyForPurchaseOrders _policy)
    {
        return _policy == WHSLoadReceivingCompletedPolicyForPurchaseOrders::EnabledWithAutoPost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4415</DeveloperDocumentation>
	<Label>@WAX322</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParametersKey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipFinalLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCleanEmptyLoadManifest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ASNMissingItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StageLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BarcodeSetupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UCCCompanyPrefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSettings</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLabelReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustFilterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendFilterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelFormat</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportFileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FilterWildcard</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLPUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadPlanning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultAdjustmentTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountAdjustmentTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoadTO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkCreateHistoryLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkCreateHistoryLogUntilDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumDaysToMix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultCycleCountWorkClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConsolidateLoads</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetainTmpWorkTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GenericWorkUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOLNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipPickListNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnregisterAtWorkCancel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingScreenNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoadPO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountWorkPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToteReuse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecuteWaveInBatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScannedQtyLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFSessionLogging</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveBatchGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionHistoryLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLockWait</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFErrorRecords</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultReturnJournal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultWhseTransJournal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultStatusOnSOTO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableCustFilters</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableVendFilters</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatePendingAllocationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferOrderReceivingProcess</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableLicensePlateReceivingHistory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1QRCodeCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1FNC1Character</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1DataMatrixCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1GroupSeparator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1IdentifierMaxLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PutLocationDirectiveLockWait</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SkipDefaultItemStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CleanupInventoryUpdateLogAfterDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMMultimodalDGRegCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMCarrOfMerchByRoadGroupProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMHazardousMaterialGroupDesc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMDomesticLanguage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMExportLanguage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMStockListLimitsRegCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMWarning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMFooterMsg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMDefaultRegCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PutLocationDirectiveConcStrictness</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseWHSLabelLayoutForDocumentRoutingLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CleanupArchivedWarehouseReservationTransactions</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CleanupArchivedWarehouseReservationTransactionsAfterDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonHMIMMaterialGroupDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMEMSCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParametersKey</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParametersKey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipFinalLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCleanEmptyLoadManifest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ASNMissingItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StageLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BarcodeSetupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UCCCompanyPrefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSettings</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLabelReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustFilterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendFilterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelFormat</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportFileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FilterWildcard</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLPUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadPlanning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultAdjustmentTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountAdjustmentTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoadTO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkCreateHistoryLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkCreateHistoryLogUntilDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumDaysToMix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultCycleCountWorkClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConsolidateLoads</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetainTmpWorkTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GenericWorkUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOLNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipPickListNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnregisterAtWorkCancel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingScreenNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingLocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoCreateLoadPO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScannedQtyLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecuteWaveInBatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadNoteType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadSynchronizationPolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToteReuse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountWorkPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFSessionLogging</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveBatchGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionHistoryLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLockWait</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFErrorRecords</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultReturnJournal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultWhseTransJournal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultStatusOnSOTO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableCustFilters</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableVendFilters</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableWarehouseLoadHistory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableOrderLoadHistory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultFreightCounted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultTrailerLoaded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultContainerTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatePendingAllocationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableWaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkProcessingPolicyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLabelBOLNumGen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingLocationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnablePurchaseOrderRegistrationInExternalReview</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowMultipleProductReceiptsForLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransitWarehouseLicensePlatePolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableLicensePlateReceivingHistory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveBatchDisableNotifications</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableReleaseToWarehouseErrorOnBatchFailure</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1FNC1Character</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1DataMatrixCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1QRCodeCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1GroupSeparator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1IdentifierMaxLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PutLocationDirectiveLockWait</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PutLocationDirectiveConcStrictness</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SkipDefaultItemStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransDatePolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Execution</Name>
			<Label>@WAX3117</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveBatchGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecuteWaveInBatch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveProgressLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveExecutionHistoryLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatePendingAllocationLog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLockWait</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveBatchDisableNotifications</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CreditMaxCheck</Name>
			<Label>@MCR20667</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayCreditMaxCheckDialog</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesOrderFulfillmentPolicy</Name>
			<Label>@WAX:SalesOrderFulfillmentPolicy_Label</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesOrderFulfillmentPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransferOrderFulfillmentPolicy</Name>
			<Label>@WAX:TransferOrderFulfillmentPolicy_Label</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferOrderFulfillmentPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMMultiModalDG</Name>
			<Label>@SCM:MultimodalDangerousGoodsReport</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMMultimodalDGRegCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMCarrOfMerchByRoad</Name>
			<Label>@SCM:CarrOfMerchByRoadReport</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMCarrOfMerchByRoadGroupProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMHazardousMaterialGroupDesc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonHMIMMaterialGroupDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMReportLanguage</Name>
			<Label>@SCM:HazardousGoodsReportLangage</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMDomesticLanguage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMExportLanguage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMStockListLimits</Name>
			<Label>@SCM:MaterialStockLimits</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMStockListLimitsRegCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMShipperDeclaration</Name>
			<Label>@SCM:ShipperDeclaration</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMWarning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMIMFooterMsg</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMDefaultRegulation</Name>
			<Label>@SCM:MaterialRegulationCode</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMDefaultRegCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GS1</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GS1GroupSeparator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BarcodeDataEndOfTransmission</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BarcodeDataRecordSeparator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1FNC1Character</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1DataMatrixCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1QRCodeCharacter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1DigitalLinkPrefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1IdentifierMaxLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GS1UnknownDataElementAIPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HMIMEmergencyResponse</Name>
			<Label>@SCM:EmergencyResponseInformation</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMIMEMSCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultAdjustmentTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultAdjustmentTypeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserLocType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUserLocType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ASNMissingItemCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSASNMissingItemCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCleanEmptyLoadManifest</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoCleanEmptyLoadManifest</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCreateLoad</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoCreateLoad</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCreateLoadPO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoCreateLoadPO</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCreateLoadTO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoCreateLoadTO</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BarcodeSetupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BarcodeSetupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOLNoteType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBOLNoteType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConsolidateLoads</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSConsolidateLoads</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContainerizationLog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerizationLog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustFilterCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFilterCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CycleCountAdjustmentTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCycleCountAdjustmentTypeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CycleCountWorkPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkPriority</ExtendedDataType>
			<Label>@WAX2377</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisplayCreditMaxCheckDialog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDisplayCreditMaxCheckDialog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultCycleCountWorkClassId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultCycleCountWorkClassId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultLabelReportName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultLabelReportName</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultLPUOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultLPUOM</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultReturnJournal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultReturnJournal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultStatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultStatusId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultStatusOnSOTO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultStatusOnSOTO</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultWhseTransJournal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultWhseTransJournal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableCustFilters</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableCustFilters</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableVendFilters</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableVendFilters</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExecuteWaveInBatch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSExecuteWaveInBatch</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FilterWildcard</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFilterWildcard</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FulfillmentRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects73</ConfigurationKey>
			<ExtendedDataType>WHSFulfillmentRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects73</ConfigurationKey>
			<EnumType>WHSFulfillmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GenericWorkUserId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WHSUserId</ExtendedDataType>
			<Label>@WAX2144</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LabelFormat</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLabelFormat</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadNoteType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadNoteType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadPlanning</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>WHSLoadPlanning</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadSynchronizationPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSLoadSynchronizationPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumDaysToMix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSNumDaysToMix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingLocType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackingLocType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingLocationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackingLocationType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingScreenNoteType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackingScreenNoteType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ParametersKey</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PrintSettings</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPrintSettings</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportFileName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReportFileName</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetainTmpWorkTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRetainTmpWorkTable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RFErrorRecords</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRFErrorRecords</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFNoteType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRFNoteType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RFSessionLogging</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRFSessionLogging</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ScannedQtyLimit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSScannedQtyLimit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipFinalLocType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSShipFinalLocType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipPickListNoteType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSShipPickListNoteType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StageLocType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSStageLocType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ToteReuse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSToteReuse</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UCCCompanyPrefix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUCCCompanyPrefix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UnregisterAtWorkCancel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUnregisterAtWorkCancel</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendFilterCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFilterCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveBatchGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveBatchGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveExecutionHistoryLog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveExecutionHistoryLog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>WaveLockWait</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLockWait</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkCreateHistoryLog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkCreateHistoryLog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>WorkCreateHistoryLogUntilDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>WorkPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableOrderLoadHistory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableOrderLoadHistory</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableWarehouseLoadHistory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableWarehouseLoadHistory</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveProgressLog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveProgressLog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentErrorTolerance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects73</ConfigurationKey>
			<Label>@SYP4881127</Label>
			<EnumType>ErrorTolerance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultFreightCounted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSFreightCounted</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultTrailerLoaded</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WMSTrailerLoaded</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultContainerTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultContainerTypeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreatePendingAllocationLog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCreatePendingAllocationLog</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentRateCheck</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects73</ConfigurationKey>
			<ExtendedDataType>WHSFulfillmentRateCheck</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesOrderFulfillmentPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFulfillmentPolicyRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@WAX:SalesOrderFulfillmentPolicy_Label</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransferOrderFulfillmentPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFulfillmentPolicyRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@WAX:TransferOrderFulfillmentPolicy_Label</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferOrderReceivingProcess</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSTransferOrderReceivingProcess</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableSystemDirectedWorkSequencing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableSystemDirectedWorkSequencing</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableWaveStepCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableWaveStepCode</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkProcessingPolicyName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkProcessingPolicyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveLabelBOLNumGen</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@WAX:WaveLabelGenerateBOL</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortingLocationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSortingLocationType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableBlockingReasons</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IsObsolete>Yes</IsObsolete>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowMultipleProductReceiptsForLoad</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSAllowMultipleProductReceiptsForLoad</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMMultimodalDGRegCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMRegCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMIMCarrOfMerchByRoadGroupProduct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMCarrOfMerchByRoadGroupProduct</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMHazardousMaterialGroupDesc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMHazardousMaterialGroupDesc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMDomesticLanguage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageId</ExtendedDataType>
			<Label>@SCM:HazardousGoodsDomesticReportLanguage</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMExportLanguage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageId</ExtendedDataType>
			<Label>@SCM:HazardousGoodsExportReportLanguage</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMStockListLimitsRegCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMRegCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnablePurchaseOrderRegistrationInExternalReview</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnablePurchaseRegistrationInExternalReview</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMWarning</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
			<Label>@SYS6998</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMFooterMsg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
			<Label>@SCM:FooterDeclaration</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransitWarehouseLicensePlatePolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSTransitWarehouseLicensePlatePolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMDefaultRegCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMRegCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LicensePlateTrackingValidation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSLicensePlateTrackingValidation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveBatchDisableNotifications</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWaveBatchDisableNotifications</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableLicensePlateReceivingHistory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableLicensePlateReceivingHistory</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableReleaseToWarehouseErrorOnBatchFailure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableReleaseToWarehouseErrorOnBatchFailure</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LocationDistanceCalculationEngine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>WHSWarehouseSpatialAwarenessFeature</FeatureClass>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>WHSWarehouseLocationDistanceCalculationEngineEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GS1FNC1Character</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1FNC1Character</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GS1DataMatrixCharacter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1DataMatrixCharacter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GS1QRCodeCharacter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1QRCodeCharacter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GS1GroupSeparator</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1GroupSeparator</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GS1IdentifierMaxLength</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1IdentifierMaxLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PutLocationDirectiveLockWait</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPutLocationDirectiveLockWait</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PutLocationDirectiveConcStrictness</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSPutLocationDirectiveConcStrictness</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipDefaultItemStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSSkipDefaultItemStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMIMEMSCode</Name>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>HMIMEMSCode</ExtendedDataType>
			<HelpText>@SCM:DefaultEmergencyResponseHelpText</HelpText>
			<Label>@SCM:DefaultEmergencyResponse</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NonHMIMMaterialGroupDescription</Name>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@SCM:NonHMIMMaterialGroupDescriptionHelpText</HelpText>
			<Label>@SCM:NonHMIMMaterialGroupDescription</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BillOfLadingFooterText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBillOfLadingFooterText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseWHSLabelLayoutForDocumentRoutingLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoyesId</ExtendedDataType>
			<Label>@WAX:UseLabelLayoutForLicensePlateLabels</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableScheduleWorkCreation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableScheduleWorkCreation</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustomLabelsPrintButtonsDisplay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsCustomLabelsPrintButtonsDisplay</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CleanupArchivedWarehouseReservationTransactions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCleanupArchivedWarehouseReservationTransactions</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CleanupArchivedWarehouseReservationTransactionsAfterDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCleanupArchivedWarehouseReservationTransactionsAfterDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GS1UnknownDataElementAIPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsGS1UnknownDataElementAIPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GS1DigitalLinkPrefix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSGS1DigitalLinkPrefix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CaptureReceivingCompletedPackingSlip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSCaptureReceivingCompletedPackingSlip</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadReceivingCompletedPolicyForPurchaseOrders</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSLoadReceivingCompletedPolicyForPurchaseOrders</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BarcodeDataEndOfTransmission</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBarcodeDataEndOfTransmission</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BarcodeDataRecordSeparator</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBarcodeDataRecordSeparator</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableReturnDetailsCreation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableReturnDetailsCreation</ExtendedDataType>
			<FeatureClass>WHSReturnDetailsFlight</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableReturnOrderCreationFromMobileDevice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableReturnOrderCreationFromMobileDevice</ExtendedDataType>
			<FeatureClass>WHSReturnItemReceivingMobileFlowEnabledFlight</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CleanupInventoryUpdateLogAfterDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCleanupInventoryUpdateLogAfterDays</ExtendedDataType>
			<FeatureClass>WHSInventoryUpdateLogToggle</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableSalesLoadLinePickingRoute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSEnableSalesLoadLinePickingRoute</ExtendedDataType>
			<FeatureClass>WHSSalesLoadLinePickingRouteFlight</FeatureClass>
			<HelpText>@FieldDescriptions_WHS:WHSParameters_EnableSalesLoadLinePickingRoute_HelpText</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCreateLoadAtPOReceiving</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPOReceivingAutoCreateLoad</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkTransDatePolicy</Name>
			<EnumType>WHSWorkTransDatePolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LicensePlateCreationRule</Name>
			<FeatureClass>WHSLicensePlateCreationRuleFlight</FeatureClass>
			<EnumType>WHSLicensePlateCreationRule</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LicensePlateIdMinLength</Name>
			<ExtendedDataType>WHSLicensePlateIdMinLength</ExtendedDataType>
			<FeatureClass>WHSLicensePlateCreationRuleFlight</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParametersKey</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BarcodeSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BarcodeSetup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BarcodeSetupId</Name>
					<SourceEDT>BarcodeSetupId</SourceEDT>
					<Field>BarcodeSetupId</Field>
					<RelatedField>barcodeSetupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BarcodeSetupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BatchGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BatchGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveBatchGroup</Name>
					<SourceEDT>WHSWaveBatchGroup</SourceEDT>
					<Field>WaveBatchGroup</Field>
					<RelatedField>Group</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuTypeBOL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOLNoteType</Name>
					<SourceEDT>WHSBOLNoteType</SourceEDT>
					<Field>BOLNoteType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuTypeLoadNote</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LoadNote</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadNoteType</Name>
					<SourceEDT>WHSLoadNoteType</SourceEDT>
					<Field>LoadNoteType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuTypePackNote</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PackNote</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingScreenNoteType</Name>
					<SourceEDT>WHSPackingScreenNoteType</SourceEDT>
					<Field>PackingScreenNoteType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuTypeRFNote</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RFNote</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFNoteType</Name>
					<SourceEDT>WHSRFNoteType</SourceEDT>
					<Field>RFNoteType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuTypeShipNote</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ShipNote</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipPickListNoteType</Name>
					<SourceEDT>WHSShipPickListNoteType</SourceEDT>
					<Field>ShipPickListNoteType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultWhseTransJournal</Name>
					<SourceEDT>WHSDefaultWhseTransJournal</SourceEDT>
					<Field>DefaultWhseTransJournal</Field>
					<RelatedField>JournalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NamesIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultLPUOM</Name>
					<Field>DefaultLPUOM</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSAdjustmentTypeCycleCount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSAdjustmentType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CycleCountAdjustType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CycleCountAdjustmentTypeCode</Name>
					<SourceEDT>WHSCycleCountAdjustmentTypeCode</SourceEDT>
					<Field>CycleCountAdjustmentTypeCode</Field>
					<RelatedField>AdjustmentTypeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSAdjustmentTypeDefault</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSAdjustmentType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultAdjustType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultAdjustmentTypeCode</Name>
					<SourceEDT>WHSDefaultAdjustmentTypeCode</SourceEDT>
					<Field>DefaultAdjustmentTypeCode</Field>
					<RelatedField>AdjustmentTypeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSInventStatus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSInventStatus</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultStatusId</Name>
					<SourceEDT>WHSDefaultStatusId</SourceEDT>
					<Field>DefaultStatusId</Field>
					<RelatedField>InventStatusId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocationProfilePacking</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLocationProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PackLoc</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingLocType</Name>
					<SourceEDT>WHSPackingLocType</SourceEDT>
					<Field>PackingLocType</Field>
					<RelatedField>LocProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocationProfileUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLocationProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UserLoc</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserLocType</Name>
					<SourceEDT>WHSUserLocType</SourceEDT>
					<Field>UserLocType</Field>
					<RelatedField>LocProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocationTypeShip</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLocationType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ShipLoc</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipFinalLocType</Name>
					<SourceEDT>WHSShipFinalLocType</SourceEDT>
					<Field>ShipFinalLocType</Field>
					<RelatedField>LocType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocationTypeStageLoc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLocationType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>StageLoc</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StageLocType</Name>
					<SourceEDT>WHSStageLocType</SourceEDT>
					<Field>StageLocType</Field>
					<RelatedField>LocType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkClassCycleCount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorkClassTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultCycleCountWorkClassId</Name>
					<Field>DefaultCycleCountWorkClassId</Field>
					<RelatedField>WorkClassId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkException</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorkException</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ExceptionType_Extern</Name>
					<RelatedField>ExceptionType</RelatedField>
					<ValueStr>WHSExceptionType::Receiving</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ASNMissingItemCode</Name>
					<Field>ASNMissingItemCode</Field>
					<RelatedField>WorkExceptionCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWorkUser</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GenericWorkUserId</Name>
					<SourceEDT>WHSUserId</SourceEDT>
					<Field>GenericWorkUserId</Field>
					<RelatedField>UserId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WMSJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultReturnJournal</Name>
					<SourceEDT>WHSDefaultReturnJournal</SourceEDT>
					<Field>DefaultReturnJournal</Field>
					<RelatedField>journalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSContainerType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSContainerType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultContainerTypeCode</Name>
					<SourceEDT>WHSDefaultContainerTypeCode</SourceEDT>
					<Field>DefaultContainerTypeCode</Field>
					<RelatedField>ContainerTypeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesOrderFulfillmentPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSFulfillmentPolicy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesOrderFulfillmentPolicy</Name>
					<Field>SalesOrderFulfillmentPolicy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransferOrderFulfillmentPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSFulfillmentPolicy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferOrderFulfillmentPolicy</Name>
					<Field>TransferOrderFulfillmentPolicy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WorkProcessingPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWorkProcessingPolicy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkProcessingPolicyName</Name>
					<Field>WorkProcessingPolicyName</Field>
					<RelatedField>PolicyName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSLocationTypeSort</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSLocationType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SortLoc</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingLocationType</Name>
					<Field>SortingLocationType</Field>
					<RelatedField>LocType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMIMMultimodalDGRegulation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMIMRegulation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>MultimodalDG</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMIMMultimodalDGRegCode</Name>
					<Field>HMIMMultimodalDGRegCode</Field>
					<RelatedField>RegCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMIMStockListLimitsRegulation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMIMRegulation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>StockListLimits</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMIMStockListLimitsRegCode</Name>
					<Field>HMIMStockListLimitsRegCode</Field>
					<RelatedField>RegCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMIMDefaultRegulation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMIMRegulation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>StockListLimits</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMIMDefaultRegCode</Name>
					<Field>HMIMDefaultRegCode</Field>
					<RelatedField>RegCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMIMEMS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMIMEMS</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMIMEMSCode</Name>
					<Field>HMIMEMSCode</Field>
					<RelatedField>EMSCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>