<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpRetailKitPricing</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpRetailKitPricing extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>AddKitElement</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Add price of specific component or substitute in the <c>TmpRetailKitPricing</c> table.
    /// </summary>
    /// <param name="_kitElementRecId">
    ///    The record ID of the <c>RetailKitComponent</c> or <c>RetailKitComponentSubstitute</c> record to add.
    /// </param>
    /// <param name="_kitElement">
    ///     The record of the component or substitute product to add.
    /// </param>
    /// <param name="_KitElementPrice">
    ///     The sales price of the component or substitute.
    /// </param>
    /// <param name="_TmpRetailKitPricing">
    ///     The temporary table buffer to add record to.
    /// </param>
    static public void AddKitElement(RecId _kitElementRecId, EcoResProductRecId  _kitElement, AmountCur _KitElementPrice, TmpRetailKitPricing _TmpRetailKitPricing)
    {
        //Update the price if price already exists for a specific component or substitute
        if (TmpRetailKitPricing::exist(_kitElementRecId, _kitElement, _TmpRetailKitPricing))
        {
            ttsBegin;
            select forUpdate _TmpRetailKitPricing
                where _TmpRetailKitPricing.kitElementRecId == _kitElementRecId && _TmpRetailKitPricing.KitElement == _kitElement;
                _TmpRetailKitPricing.KitElementPrice = _kitElementPrice;
                _TmpRetailKitPricing.update();
            ttsCommit;
        }
        else
        {
            ttsBegin;
            _TmpRetailKitPricing.kitElementRecId = _kitElementRecId;
            _TmpRetailKitPricing.KitElement = _kitElement;
            _TmpRetailKitPricing.KitElementPrice = _kitElementPrice;
            _TmpRetailKitPricing.insert();
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified Retail kit element exists in the <c>TmpRetailKitPricing</c> table.
    /// </summary>
    /// <param name="_kitElementRecId">
    ///    The record ID of the <c>RetailKitComponent</c> or <c>RetailKitComponentSubstitute</c> record.
    /// </param>
    /// <param name="_kitElement">
    ///     The record of the component or substitute product.
    /// </param>
    /// <param name="_TmpRetailKitPricing">
    ///     The temporary table buffer to add record.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _kitElementRecId, EcoResProductRecId  _kitElement, TmpRetailKitPricing _TmpRetailKitPricing)
    {
        select RecId from _TmpRetailKitPricing
                where (_TmpRetailKitPricing.kitElementRecId == _kitElementRecId && _TmpRetailKitPricing.kitElement == _kitElement);

        if (_TmpRetailKitPricing.RecId != 0)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>LookUpPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the price of specific component and substitute in the <c>TmpRetailKitPricing</c> table.
    /// </summary>
    /// <param name="_kitElementRecId">
    ///    The record ID of the <c>RetailKitComponent</c> or <c>RetailKitComponentSubstitute</c> record to find.
    /// </param>
    /// <param name="_kitElement">
    ///     The record of the component or substitute product to find.
    /// </param>
    /// <param name="_TmpRetailKitPricing">
    ///     The temporary table buffer to search records in.
    /// </param>
    /// <returns>
    ///     Returns the price of the kit component or substitute line item
    /// </returns>
    static public AmountCur LookUpPrice(RecId _kitElementRecId,EcoResProductRecId  _kitElement,TmpRetailKitPricing _TmpRetailKitPricing)
    {
        select firstonly KitElementPrice from _TmpRetailKitPricing
            where _TmpRetailKitPricing.kitElementRecId == _kitElementRecId && _TmpRetailKitPricing.KitElement==_kitElement;

        return _TmpRetailKitPricing.KitElementPrice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@REX4520661</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KitElement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>KitElementPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>kitElementRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@REX4160032</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TmpRetailKitPricingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>kitElementRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>KitElementPrice</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>