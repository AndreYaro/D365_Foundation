<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkTemplateLineGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkTemplateLineGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
    /// Checks if a specific <c>WHSWorkTemplateLineGroup</c> record exists.
	/// </summary>
    /// <param name="_workTemplateLineRecId">
	/// Referenced record id of the record.
	/// </param>
    /// <param name="_groupField">
	/// Field used for grouping.
	/// </param>
	/// <returns>
	/// true if the record exists; otherwise false.
	/// </returns>
    public static boolean exist(WHSWorkTemplateLineRecId _workTemplateLineRecId, WHSWorkTemplateLineGroupField _groupField)
    {
        return _workTemplateLineRecId
            && (select firstonly RecId from whsWorkTemplateLineGroup
					where whsWorkTemplateLineGroup.WorkTemplateLine	== _workTemplateLineRecId
						&& whsWorkTemplateLineGroup.GroupField		== _groupField).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByWorkTemplateLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>WHSWorkTemplateLineGroup</c> record exists for the specified referenced record id.
    /// </summary>
    /// <param name="_workTemplateLineRecId">
    /// Referenced record id of the record.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise false.
    /// </returns>
    public static boolean existByWorkTemplateLineRecId(WHSWorkTemplateLineRecId _workTemplateLineRecId)
    {
        return _workTemplateLineRecId
            && (select firstonly RecId from whsWorkTemplateLineGroup
					where whsWorkTemplateLineGroup.WorkTemplateLine == _workTemplateLineRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForWorkTemplateLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>WHSWorkTemplateLineGroup</c> record exists.
    /// </summary>
    /// <param name="_workTransType">
	/// Work order type used in search.
	/// </param>
    /// <param name="_workTemplateCode">
	/// Work template code used in search.
	/// </param>
    /// <param name="_lineNumber">
	/// Work line number; optional.
	/// </param>
    /// <returns>
    /// true if the record exists; otherwise false.
    /// </returns>
    public static boolean existForWorkTemplateLine(
        WHSWorkTransType	_workTransType,
        WHSWorkTemplateCode	_workTemplateCode,
        LineNum				_lineNumber			= 1)
    {
        WHSWorkTemplateLineGroup	workTemplateLineGroup;
        WHSWorkTemplateLine			workTemplateLine;

		if (_workTransType && _workTemplateCode && _lineNumber)
        {
            select firstonly RecId from workTemplateLineGroup
                exists join workTemplateLine
                    where workTemplateLine.RecId				== workTemplateLineGroup.WorkTemplateLine
                        && workTemplateLine.WorkTransType		== _workTransType
                        && workTemplateLine.WorkTemplateCode	== _workTemplateCode
                        && workTemplateLine.LineNum				== _lineNumber;
        }
        return workTemplateLineGroup.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForWorkTemplateLineAndGroupField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>WHSWorkTemplateLineGroup</c> record exists.
    /// </summary>
    /// <param name="_workTransType">
    /// Work order type used in search.
    /// </param>
    /// <param name="_workTemplateCode">
    /// Work template code used in search.
    /// </param>
    /// <param name="_groupField">
    /// Group by field used in search.
    /// </param>
    /// <param name="_lineNumber">
    /// Work line number; optional.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise false.
    /// </returns>
    public static boolean existForWorkTemplateLineAndGroupField(
        WHSWorkTransType				_workTransType,
        WHSWorkTemplateCode				_workTemplateCode,
        WHSWorkTemplateLineGroupField	_groupField,
        LineNum							_lineNumber			= 1)
    {
        WHSWorkTemplateLineGroup	workTemplateLineGroup;
        WHSWorkTemplateLine			workTemplateLine;

        if (_workTransType && _workTemplateCode && _groupField && _lineNumber)
        {
            select firstonly RecId from workTemplateLineGroup
                where workTemplateLineGroup.GroupField == _groupField
                exists join workTemplateLine
                    where workTemplateLine.RecId				== workTemplateLineGroup.WorkTemplateLine
                        && workTemplateLine.WorkTransType		== _workTransType
                        && workTemplateLine.WorkTemplateCode	== _workTemplateCode
                        && workTemplateLine.LineNum				== _lineNumber;
        }
        return workTemplateLineGroup.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSWorkTemplateLineGroup</c> record with given parameters.
	/// </summary>
    /// <param name="_workTemplateLineRecId">
	/// Referenced record id of the record.
    /// </param>
    /// <param name="_groupField">
    /// Field used for grouping.
    /// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSWorkTemplateLineGroup find(
        WHSWorkTemplateLineRecId		_workTemplateLineRecId,
        WHSWorkTemplateLineGroupField	_groupField,
        boolean							_forupdate				= false)
    {
        WHSWorkTemplateLineGroup workTemplateLineGroup;

        if (_workTemplateLineRecId)
        {
            workTemplateLineGroup.selectForUpdate(_forupdate);

            select firstonly workTemplateLineGroup
                where workTemplateLineGroup.WorkTemplateLine	== _workTemplateLineRecId
                    && workTemplateLineGroup.GroupField			== _groupField;
        }

        return workTemplateLineGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForWorkTemplateLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>WHSWorkTemplateLineGroup</c> record with given parameters.
    /// </summary>
    /// <param name="_workTransType">Work order type used in search.</param>
    /// <param name="_workTemplateCode">Work template code used in search.</param>
    /// <param name="_lineNumber">Work line number; optional.</param>
    /// <param name="_forupdate">Determines whether the record is selected for update.</param>
    /// <returns>The record that is searched for.
    /// </returns>
    public static WHSWorkTemplateLineGroup findForWorkTemplateLine(
        WHSWorkTransType	_workTransType,
        WHSWorkTemplateCode	_workTemplateCode,
		LineNum				_lineNumber			= 1,
        boolean				_forupdate			= false)
    {
        WHSWorkTemplateLineGroup	workTemplateLineGroup;
        WHSWorkTemplateLine			workTemplateLine;

        if (_workTransType && _workTemplateCode && _lineNumber)
        {
            workTemplateLineGroup.selectForUpdate(_forupdate);

            select firstonly workTemplateLineGroup
                exists join workTemplateLine
                    where workTemplateLine.RecId				== workTemplateLineGroup.WorkTemplateLine
                        && workTemplateLine.WorkTransType		== _workTransType
                        && workTemplateLine.WorkTemplateCode	== _workTemplateCode
                        && workTemplateLine.LineNum				== _lineNumber;
        }

        return workTemplateLineGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.validateWriteGroupField();
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteGroupField</Name>
				<Source><![CDATA[
    private boolean validateWriteGroupField()
    {
        boolean ret = true;

        if (this.GroupField == WHSWorkTemplateLineGroupField::ProductVariantNumber)
        {
            WHSWorkTemplateLineGroup workTemplateLineGroupWithItemNumber = WHSWorkTemplateLineGroup::find(this.WorkTemplateLine, WHSWorkTemplateLineGroupField::ItemNumber);

            if (workTemplateLineGroupWithItemNumber)
            {
                if (this.SequenceNumber <= workTemplateLineGroupWithItemNumber.SequenceNumber)
                {
                    ret = checkFailed("@WAX:ErrorWHSWorkTemplateLineGroupProductVarianNumberBeforeItemNumber");
                }
            }
			else
            {
                ret = checkFailed("@WAX:ErrorWHSWorkTemplateLineGroupItemNumberMustExist");
            }
        }
        else if (this.GroupField == WHSWorkTemplateLineGroupField::ItemNumber)
        {
            WHSWorkTemplateLineGroup workTemplateLineGroupWithProductVariantNumber = WHSWorkTemplateLineGroup::find(this.WorkTemplateLine, WHSWorkTemplateLineGroupField::ProductVariantNumber);

            if (workTemplateLineGroupWithProductVariantNumber
                && this.SequenceNumber >= workTemplateLineGroupWithProductVariantNumber.SequenceNumber)
            {
                ret = checkFailed("@WAX:ErrorWHSWorkTemplateLineGroupProductVarianNumberBeforeItemNumber");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = super();

        ret = ret && this.validateDeleteGroupField();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDeleteGroupField</Name>
				<Source><![CDATA[
    private boolean validateDeleteGroupField()
    {
        boolean ret = true;

        if (this.GroupField == WHSWorkTemplateLineGroupField::ItemNumber
            && WHSWorkTemplateLineGroup::exist(this.WorkTemplateLine, WHSWorkTemplateLineGroupField::ProductVariantNumber))
        {
            ret = checkFailed("@WAX:ErrorWHSWorkTemplateLineGroupCantDeleteItemNumberWhileProductVariantNumberExist");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WorkTemplateLineGroupDeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:WHSWorkTemplateLineGroup</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SequenceNumber</TitleField1>
	<TitleField2>GroupField</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WorkTemplateLineSequenceNumberIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<ReplacementKey>WorkTemplateLineGroupFieldIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupField</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkTemplateLine</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateLineRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateLineGroupSequenceNumber</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GroupField</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSWorkTemplateLineGroupField</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkTemplateLineGroupFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkTemplateLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupField</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkTemplateLineSequenceNumberIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkTemplateLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSWorkTemplateLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkTemplateLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTemplateLine</Name>
					<Field>WorkTemplateLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>