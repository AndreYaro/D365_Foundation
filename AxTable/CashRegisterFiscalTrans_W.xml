<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashRegisterFiscalTrans_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashRegisterFiscalTrans_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CashRegisterFiscalTrans_W, URL) :
                this.URL = CashRegister_W::normalizeURL(this.URL);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>terminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the related terminal.
    /// </summary>
    /// <returns>
    /// The related terminal.
    /// </returns>
    public CashRegisterTerminal_W terminal()
    {
        return CashRegisterTerminal_W::find(this.Terminal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the receipt number if it was not set previously.
    /// </summary>
    /// <param name="_receiptNumber">
    /// The receipt number.
    /// </param>
    /// <remarks>
    /// Since the receipt number is not necessarilly continuous, Sorting is updated with unique incremental value.
    /// </remarks>
    public void setReceiptNumber(CashRegisterReceiptNumber_W _receiptNumber)
    {
        if (!this.ReceiptNumber)
        {
            this.ReceiptNumber  = _receiptNumber;
            this.Sorting        = CashRegisterFiscalTrans_W::nextSorting(this.CashRegister);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Function validates URL field on beeing valid URL
    /// </summary>
    /// <parameter name="_filedIdToCheck">
    /// Field Id that should be checked
    /// </parameter>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (!ret)
        {
            return false;
        }

        switch (_fieldIdToCheck)
        {
            case fieldNum(CashRegisterFiscalTrans_W, URL) :
                ret = isValidURL(this.URL);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCustTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Cash register fiscal transaction for the given customer transaction.
    /// </summary>
    /// <param name="_custTrans">
    /// The customer transaction.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The Cash register fiscal transaction.
    /// </returns>
    public server static CashRegisterFiscalTrans_W findCustTrans(
        CustTrans _custTrans, 
        boolean   _forUpdate = false)
    {
        CashRegisterFiscalTrans_W fiscalTrans;

        if (_forUpdate)
        {
            fiscalTrans.selectForUpdate(true);
        }

        if (_custTrans)
        {
            fiscalTrans = CashRegisterFiscalTrans_W::findVoucherDate(_custTrans.Voucher, _custTrans.TransDate, _forUpdate);
        }

        return fiscalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReceiptNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds cash register fiscal transaction. for given cash register and receipt number
    /// </summary>
    /// <param name = "_cashRegister">
    /// Cash register
    /// </param>
    /// <param name = "_receiptNumber">
    /// Receipt number
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The Cash register fiscal transaction.
    /// </returns>
    public server static CashRegisterFiscalTrans_W findReceiptNumber(
        CashRegisterRecId_W           _cashRegister,
        CashRegisterReceiptNumber_W   _receiptNumber,
        boolean                       _forUpdate = false)
    {
        CashRegisterFiscalTrans_W fiscalTrans;

        if (_forUpdate)
        {
            fiscalTrans.selectForUpdate(true);
        }

        if (_cashRegister && _receiptNumber)
        {
            select firstOnly fiscalTrans
                where fiscalTrans.CashRegister   == _cashRegister
                    && fiscalTrans.ReceiptNumber == _receiptNumber;
        }

        return fiscalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Cash register fiscal transaction for the given record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The Cash register fiscal transaction.
    /// </returns>
    public server static CashRegisterFiscalTrans_W findRecId(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        CashRegisterFiscalTrans_W fiscalTrans;

        if (_forUpdate)
        {
            fiscalTrans.selectForUpdate(true);
        }

        if (_recId)
        {
            select firstOnly fiscalTrans
                where fiscalTrans.RecId == _recId;
        }

        return fiscalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSorting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Cash register fiscal transaction for the given cash register record ID and sorting number.
    /// </summary>
    /// <param name="_cashRegister">
    /// The cash register record ID.
    /// </param>
    /// <param name="_sorting">
    /// The sorting number.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The Cash register fiscal transaction.
    /// </returns>
    public server static CashRegisterFiscalTrans_W findSorting(
        CashRegisterRecId_W                 _cashRegister,
        CashRegisterFiscalTransSorting_W    _sorting,
        boolean                             _forUpdate = false)
    {
        CashRegisterFiscalTrans_W fiscalTrans;

        if (_forUpdate)
        {
            fiscalTrans.selectForUpdate(true);
        }

        if (_cashRegister && _sorting)
        {
            select firstOnly fiscalTrans
                where fiscalTrans.CashRegister  == _cashRegister
                    && fiscalTrans.Sorting      == _sorting;
        }

        return fiscalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVoucherDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Cash register fiscal transaction for the given voucher and date.
    /// </summary>
    /// <param name="_voucher">
    /// The voucher.
    /// </param>
    /// <param name="_transDate">
    /// The date.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The Cash register fiscal transaction.
    /// </returns>
    public server static CashRegisterFiscalTrans_W findVoucherDate(
        Voucher     _voucher,
        TransDate   _transDate,
        boolean     _forUpdate = false)
    {
        CashRegisterFiscalTrans_W fiscalTrans;

        if (_forUpdate)
        {
            fiscalTrans.selectForUpdate(true);
        }

        if (_voucher && _transDate)
        {
            select firstOnly fiscalTrans
                where fiscalTrans.Voucher    == _voucher
                    && fiscalTrans.TransDate == _transDate;
        }

        return fiscalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextSorting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next sorting unallocated number for the cash register transaction.
    /// </summary>
    /// <param name="_cashRegisterRecid">
    /// The cash regisetr record ID.
    /// </param>
    /// <returns>
    /// The next sorting number.
    /// </returns>
    public static CashRegisterFiscalTransSorting_W nextSorting(CashRegisterRecId_W _cashRegisterRecid)
    {
        CashRegisterFiscalTrans_W lastFiscalTrans;

        select firstOnly maxOf(Sorting) from lastFiscalTrans
            where lastFiscalTrans.CashRegister == _cashRegisterRecid;

        return lastFiscalTrans.Sorting + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAllConnectedDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all connected documents from archive.
    /// </summary>
    public void deleteAllConnectedDocuments()
    {
        DocuRef docuRef;
        delete_from docuRef
            where docuRef.RefCompanyId == this.DataAreaId
                && docuRef.RefTableId  == DocuRef::GetRootTableID(this.TableId)
                && docuRef.RefRecId    == this.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>AT,CZ</CountryRegionCodes>
	<DeveloperDocumentation>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_DeveloperDocumentation</DeveloperDocumentation>
	<FormRef>CashRegisterFiscalTrans_W</FormRef>
	<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_Title</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Voucher</TitleField1>
	<TitleField2>Terminal</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>VoucherIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<Relation>CashRegisterFiscalTransTax_W</Relation>
			<Table>CashRegisterFiscalTransTax_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DeleteAction2</Name>
			<Relation>CashRegisterFiscalTransCode_W</Relation>
			<Table>CashRegisterFiscalTransCode_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CashRegister</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldsGroupGeneral</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldsGroupGrid</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CashRegister</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOffline</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldsGroupOverview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CashRegister</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Terminal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Various</Name>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldsGroupVarious</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Sorting</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CashRegister</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CashRegisterRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOffline</Name>
			<ExtendedDataType>CashRegisterOfflineTransaction_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Operator</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CashRegisterOperatorRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReceiptAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldReceiptAmount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CashRegisterReceiptNumber_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Sorting</Name>
			<ExtendedDataType>CashRegisterFiscalTransSorting_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>CashRegisterFiscalTransStatus_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Terminal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CashRegisterTerminalRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TransDateTime</Name>
			<ExtendedDataType>CashRegisterDateTime_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TransId</Name>
			<ExtendedDataType>Counter</ExtendedDataType>
			<HelpText>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldTransIdHelp</HelpText>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldTransId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<ExtendedDataType>URL</ExtendedDataType>
			<Label>@FiscalServices:AS_CashRegisterFiscalTrans_WTable_FieldURL</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TerminalIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Terminal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CashRegisterIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CashRegister</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RegisterTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CashRegister</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OperatorIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Operator</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RegisterSortingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CashRegister</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sorting</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CashRegister_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CashRegister_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CashRegister</Name>
					<Field>CashRegister</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CashRegisterTerminal_W</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CashRegisterTerminal_w</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Terminal</Name>
					<Field>Terminal</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CashRegisterOperator_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CashRegisterOperator_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Operator</Name>
					<Field>Operator</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>