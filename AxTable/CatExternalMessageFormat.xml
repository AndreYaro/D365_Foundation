<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatExternalMessageFormat</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatExternalMessageFormat extends common
{  
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>CatExternalMessageFormat</c> record with the specific name.
    /// </summary>
    /// <param  name='_externalMessageFormatRecId'>
    /// The record id of the record.
    /// </param>
    /// <param  name='_forUpdate'>
    /// A <c>Boolean</c> indicating whether the record should be selected for update.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatExternalMessageFormat</c> data type.
    /// </returns>
    public static CatExternalMessageFormat find(RefRecId _externalMessageFormatRecId, boolean _forUpdate = false)
    {
        CatExternalMessageFormat externalMessageFormat;

        if (_externalMessageFormatRecId)
        {
            externalMessageFormat.selectForUpdate(_forUpdate);

            select firstonly externalMessageFormat
                where externalMessageFormat.RecId == _externalMessageFormatRecId;
        }
        return externalMessageFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExternalCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>CatExternalMessageFormat</c> record with the specific relation to external catalog instance.
    /// </summary>
    /// <param  name='_catExternalCatalogRecId'>
    /// Reference record id to the external catalog.
    /// </param>
    /// <param  name='_forUpdate'>
    /// A <c>Boolean</c> indicating whether the record should be selected for update.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatExternalMessageFormat</c> data type.
    /// </returns>
    public static CatExternalMessageFormat findByExternalCatalog(RefRecId _catExternalCatalogRecId, boolean _forUpdate = false)
    {
        CatExternalMessageFormat externalMessageFormat;

        if (_catExternalCatalogRecId)
        {
            externalMessageFormat.selectForUpdate(_forUpdate);

            select firstonly externalMessageFormat
                where externalMessageFormat.ExternalCatalog == _catExternalCatalogRecId;
        }
        return externalMessageFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMessageFormat</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the message format based on the <c>CatPunchoutEntityType</c> type.
    /// </summary>
    /// <param name = "_punchoutEntityType"> The the punchout entity type.</param>
    public void initMessageFormat(CatPunchoutEntityType _punchoutEntityType)
    {
        if (_punchoutEntityType == CatPunchoutEntityType::Unknown)
        {
            error("@SCM:UnknownMessageFormat");
        }

        CatPunchoutMessageFormat punchoutMessageFormat = CatPunchoutMessageFormat::construct(_punchoutEntityType);

        this.PunchoutEntityType = punchoutMessageFormat.entityType();
        this.MessageBody = punchoutMessageFormat.entityMessageBody();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromExternalCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the message format record with reference from external catalog based on the format type.
    /// </summary>
    /// <param name = "_externalCatalogRecId">Reference record id of the external catalog.</param>
    /// <param name = "_messageFormat">The message format to be used.</param>
    public static void insertFromExternalCatalog(RefRecId _externalCatalogRecId, CatPunchoutEntityType _punchoutEntityType)
    {
        ttsbegin;

        CatExternalMessageFormat externalMessageFormat;

        externalMessageFormat.initMessageFormat(_punchoutEntityType);
        externalMessageFormat.ExternalCatalog = _externalCatalogRecId;
        externalMessageFormat.insert();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS317874</DeveloperDocumentation>
	<Label>@SYS131262</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>PunchoutEntityType</TitleField1>
	<TitleField2>ExternalCatalog</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>FormatIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PunchoutEntityType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PunchoutEntityType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExternalCatalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatExternalCatalogRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MessageBody</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatExternalMessageBody</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PunchoutEntityType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CatPunchoutEntityType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FormatIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PunchoutEntityType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExternalCatalog</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ExternalCatalogIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExternalCatalog</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatExternalCatalog</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>CatExternalCatalog</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExternalCatalog</Name>
					<Field>ExternalCatalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>