<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDirectDebitMandateLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustDirectDebitMandateLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cancelRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes status of <c>CustDirectDebitMandateLog</c> records to Cancelled.
    /// </summary>
    /// <param name="_custDirectDebitMandateRecId">
    /// The mandate ID.
    /// </param>
    /// <param name="_voucher">
    /// The voucher.
    /// </param>
    public static void cancelRecord(CustDirectDebitMandateRecId _custDirectDebitMandateRecId, Voucher _voucher)
    {
        CustDirectDebitMandateLog custDirectDebitMandateLog;

        update_recordSet custDirectDebitMandateLog
        setting
            State = CustDirectDebitMandateState::Cancelled
        where custDirectDebitMandateLog.Mandate == _custDirectDebitMandateRecId
           && custDirectDebitMandateLog.Voucher == _voucher
           && custDirectDebitMandateLog.State   != CustDirectDebitMandateState::Cancelled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record with specified Mandate ID and latest CreatedDateTime in the <c>CustDirectDebitMandateLog</c> table.
    /// </summary>
    /// <param name="_custDirectDebitMandateRecId">
    /// The <c>CustDirectDebitMandateRecId</c> of the <c>CustDirectDebitMandateLog</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustDirectDebitMandateLog</c> table; otherwise, an empty record.
    /// </returns>
    public static CustDirectDebitMandateLog findLast(
        CustDirectDebitMandateRecId _custDirectDebitMandateRecId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustDirectDebitMandateLog custDirectDebitMandateLog;

        if (_custDirectDebitMandateRecId)
        {
            custDirectDebitMandateLog.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                custDirectDebitMandateLog.concurrencyModel(_concurrencyModel);
            }

            select firstonly custDirectDebitMandateLog
                order by custDirectDebitMandateLog.createdDateTime desc
                where custDirectDebitMandateLog.Mandate == _custDirectDebitMandateRecId;
        }

        return custDirectDebitMandateLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastWithState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record with specified Mandate ID and latest CreatedDateTime in the <c>CustDirectDebitMandateLog</c> table.
    /// </summary>
    /// <param name="_custDirectDebitMandateRecId">
    /// The <c>CustDirectDebitMandateRecId</c> of the <c>CustDirectDebitMandateLog</c> record to find.
    /// </param>
    /// <param name="_state">
    /// The <c>CustDirectDebitMandateState</c> of the <c>CustDirectDebitMandateLog</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustDirectDebitMandateLog</c> table; otherwise, an empty record.
    /// </returns>
    public static CustDirectDebitMandateLog findLastWithState(
        CustDirectDebitMandateRecId _custDirectDebitMandateRecId,
        CustDirectDebitMandateState _state,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustDirectDebitMandateLog custDirectDebitMandateLog;

        if (_custDirectDebitMandateRecId)
        {
            custDirectDebitMandateLog.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                custDirectDebitMandateLog.concurrencyModel(_concurrencyModel);
            }

            select firstonly custDirectDebitMandateLog
                order by custDirectDebitMandateLog.createdDateTime desc
                where custDirectDebitMandateLog.Mandate == _custDirectDebitMandateRecId &&
                       custDirectDebitMandateLog.State == _state ;
        }

        return custDirectDebitMandateLog;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4003649</DeveloperDocumentation>
	<Label>@SYS4003648</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Mandate</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Mandate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Mandate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Mandate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustDirectDebitMandateRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>State</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>CustDirectDebitMandateState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LogNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Counter</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MandateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Mandate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MandateStateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Mandate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>State</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustDirectDebitMandate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustDirectDebitMandate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Mandate</Name>
					<Field>Mandate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>