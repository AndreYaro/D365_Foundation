<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntervatDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxIntervatDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(TaxBox _taxIntervatTaxBox, RefRecId _taxIntervatGeneral)
    {
        boolean         ret = true;
        TaxIntervatID   taxIntervatID;

        if (!TaxIntervatDetail::exist(_taxIntervatTaxBox, _taxIntervatGeneral))
        {
            taxIntervatID = TaxIntervatGeneral::find(_taxIntervatGeneral).TaxIntervatId;
            ret = checkFailed(strfmt(TaxIntervatDetail::txtNotExist(), _taxIntervatTaxBox, taxIntervatID));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(TaxBox _taxIntervatTaxBox, RefRecId _taxIntervatGeneral)
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxIntervatDetail
                 where
                     taxIntervatDetail.TaxIntervatTaxBox    == _taxIntervatTaxBox &&
                     taxIntervatDetail.TaxIntervatGeneral   == _taxIntervatGeneral).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxIntervatDetail</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>TaxIntervatDetail</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value the indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxIntervatDetail</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxIntervatDetail find(
        RefRecId            _recId ,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxIntervatDetail taxIntervatDetail;

        taxIntervatDetail.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxIntervatDetail.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxIntervatDetail
            where taxIntervatDetail.RecId == _recId;

        return taxIntervatDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDetails</Name>
				<Source><![CDATA[
        public static TaxIntervatDetail findByDetails(
        TaxBox              _taxIntervatTaxBox,
        RefRecId            _taxIntervatGeneral ,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxIntervatDetail taxIntervatDetail;

        taxIntervatDetail.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxIntervatDetail.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxIntervatDetail
            where
            taxIntervatDetail.TaxIntervatTaxBox == _taxIntervatTaxBox &&
                    taxIntervatDetail.TaxIntervatGeneral == _taxIntervatGeneral;

        return taxIntervatDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS103300";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>BE</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123635</DeveloperDocumentation>
	<FormRef>TaxIntervatDetail</FormRef>
	<Label>@SYS92383</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>TaxIntervatTaxBox</TitleField1>
	<TitleField2>TaxIntervatTaxValue</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DetailIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatTaxBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatTaxValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatTaxBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatGeneral</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatGeneral</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax</Name>
			<Label>@SYS28668</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatTaxBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxIntervatTaxValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxIntervatGeneral</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS92369</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxIntervatTaxBox</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBox</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxIntervatTaxValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DetailIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxIntervatTaxBox</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxIntervatGeneral</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxIntervatGeneralIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxIntervatGeneral</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxIntervatGeneral</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123636</EntityRelationshipRole>
			<RelatedTable>TaxIntervatGeneral</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InterVATTaxDeclaration</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>InterVATTaxDeclarationDetails</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxIntervatGeneral</Name>
					<Field>TaxIntervatGeneral</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>