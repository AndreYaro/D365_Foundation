<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSContainerType extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcContainerVolume</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the container volume based on physical dimension, length, width, and height.
    /// </summary>
    /// <returns>
    /// The volume of the container.
    /// </returns>
    public Volume calcContainerVolume()
    {
        return this.Length * this.Height * this.Width;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeCreatedForUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Verifies that a container type code does not match an existing unit id.
    /// </summary>
    /// <returns>
    ///  Returns true if the container type code does not match an existing unit id; false otherwise.
    /// </returns>
    private boolean canBeCreatedForUnitId()
    {
        UnitOfMeasure   unitOfMeasure;

        select firstOnly Symbol from unitOfMeasure
            where unitOfMeasure.Symbol == this.ContainerTypeCode;

        return (unitOfMeasure.RecId == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.updateContainerVolume();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateContainerVolume</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Updates container volume if the container length, width or height have changed.
    /// </summary>
    private void updateContainerVolume()
    {
        if (this.orig().ContainerLength != this.ContainerLength
        ||  this.orig().ContainerWidth  != this.ContainerWidth
        ||  this.orig().ContainerHeight != this.ContainerHeight)
        {
            this.ContainerVolume = this.ContainerLength * this.ContainerWidth * this.ContainerHeight;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateContainerTypeNotOnLocationLoad</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Verify whether the container type is tied to license plate in a location tracking volumetrics.
    /// </summary>
    /// <returns>
    ///  Returns true if the container type is tied to license plate in a location tracking volumetrics; otherwise, false.
    /// </returns>
    private boolean validateContainerTypeNotOnLocationLoad()
    {
        InventSum           inventSum;
        WHSLicensePlate     licensePlate;
        WHSLocationLoad     locationLoad;
        boolean             ret = true;
        
        if (InventUseDimOfInventSumToggle::instance().isEnabled())
        {
            select firstOnly RecId from inventSum
            where inventSum.ClosedQty      == NoYes::No
               && inventSum.PhysicalInvent > 0
                exists join licensePlate
                    where licensePlate.LicensePlateId    == inventSum.LicensePlateId
                    &&    licensePlate.ContainerTypeCode == this.containerTypeCode
                exists join locationLoad
                    where locationLoad.InventLocationId  == inventSum.InventLocationId
                    &&    locationLoad.WMSLocationId     == inventSum.wMSLocationId;
        }
        else
        {
            InventDim           inventDim;

            select firstOnly RecId from inventSum
            where inventSum.ClosedQty      == NoYes::No
               && inventSum.PhysicalInvent > 0
            join WMSLocationId, InventLocationId, LicensePlateId from inventDim
                where inventDim.InventDimId == inventSum.InventDimId
                exists join licensePlate
                    where licensePlate.LicensePlateId    == inventDim.LicensePlateId
                    &&    licensePlate.ContainerTypeCode == this.containerTypeCode
                exists join locationLoad
                    where locationLoad.InventLocationId  == inventDim.InventLocationId
                    &&    locationLoad.WMSLocationId     == inventDim.wMSLocationId;
        }

        if (inventSum.RecId != 0)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        UnitOfMeasure unit;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSContainerType, ContainerTypeCode):
                select firstonly RecId from unit
                    where unit.Symbol == this.ContainerTypeCode;

                if (unit.RecId)
                {
                    ret = checkFailed("@WAX3794");
                }
                break;

            case fieldNum(WHSContainerType, TareWeight):
            case fieldNum(WHSContainerType, ContainerLength):
            case fieldNum(WHSContainerType, ContainerWidth):
            case fieldNum(WHSContainerType, ContainerHeight):
            case fieldNum(WHSContainerType, ContainerVolume):
            case fieldNum(WHSContainerType, FlexibleVolumeDimensions):
                if (!this.validateContainerTypeNotOnLocationLoad())
                {
                    ret = checkFailed("@WAX:ErrorContainerTypeOnLPVolumetricsUpdateFailure");
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.canBeCreatedForUnitId())
        {
            ret = checkFailed("@WAX:ErrorContainerTypeMatchesUnitId") && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks whether a specific <c>whsContainerType</c> record exists.
	/// </summary>
	/// <param name="_containerTypeCode">
	/// Type code of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(WHSContainerTypeCode _containerTypeCode)
    {
        return (_containerTypeCode) &&
               (select firstonly whsContainerType
                    where whsContainerType.ContainerTypeCode == _containerTypeCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSContainerType</c> record with given parameters.
	/// </summary>
	/// <param name="_containerTypeCode">
	/// Type Code of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSContainerType find(WHSContainerTypeCode _containerTypeCode, boolean _forupdate = false)
    {
        WHSContainerType containerType;

        if (_containerTypeCode)
        {
            containerType.selectForUpdate(_forupdate);

            select firstonly containerType
                where containerType.ContainerTypeCode == _containerTypeCode;
        }

        return containerType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupContainerTypeByLocProfile</Name>
				<Source><![CDATA[
    public static void lookupContainerTypeByLocProfile(
        FormStringControl _ctrl,
        RefRecId _allowedContainerTypes)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(WHSContainerType), _ctrl);
        Query query = new Query();
        QueryBuildDataSource qbdsContainerType          = query.addDataSource(tableNum(WHSContainerType));
        QueryBuildDataSource qbdsAllowedContainerType   = qbdsContainerType.addDataSource(tableNum(WHSAllowedContainerType));
        qbdsAllowedContainerType.addLink(fieldNum(WHSContainerType, ContainerTypeCode), fieldNum(WHSAllowedContainerType, ContainerTypeCode));
        qbdsAllowedContainerType.joinMode(JoinMode::ExistsJoin);
        qbdsAllowedContainerType.addRange(fieldNum(WHSAllowedContainerType, AllowedContainerTypeGroup)).value(int642str(_allowedContainerTypes));
        qbdsContainerType.addRange(fieldNum(WHSContainerType, UnitId)).value(SysQuery::valueNotEmptyString());

        sysTableLookup.addLookupfield(fieldNum(WHSContainerType, ContainerTypeCode));
        sysTableLookup.addLookupfield(fieldNum(WHSContainerType, UnitId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4341</DeveloperDocumentation>
	<Label>@WAX1423</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ContainerTypeCode</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ContainerCodeIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ContainerCodeIdx</PrimaryIndex>
	<ReplacementKey>ContainerCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Height</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Width</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TareWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Length</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerAttributeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Height</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Width</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TareWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Length</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerAttributeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerHeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerWidth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FlexibleVolumeDimensions</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContainerAttributeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerAttributeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContainerTypeCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerTypeCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@WAX5443</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Height</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSHeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Length</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxVolume</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMaxVolume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMaxWeight</ExtendedDataType>
			<Label>@WAX:ContainerTypeMaximumNetWeight</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TareWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSTareWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Width</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWidth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ContainerHeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerHeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ContainerLength</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ContainerVolume</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerVolume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ContainerWidth</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerWidth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FlexibleVolumeDimensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFlexibleVolumeDimensions</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<HelpText>@WAX:WHSContainerTypeUnitIdHelpText</HelpText>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ContainerCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContainerTypeCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ContainerAttributeCode1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSContainerAttributes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Code1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>AttributeTitle_Extern</Name>
					<RelatedField>AttributeTitle</RelatedField>
					<ValueStr>WHSAttributeTitle::Attribute1</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerAttributeCode</Name>
					<Field>ContainerAttributeCode[1]</Field>
					<RelatedField>AttributeNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContainerAttributeCode2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSContainerAttributes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Code2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>AttributeTitle_Extern</Name>
					<RelatedField>AttributeTitle</RelatedField>
					<ValueStr>WHSAttributeTitle::Attribute2</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerAttributeCode</Name>
					<Field>ContainerAttributeCode[2]</Field>
					<RelatedField>AttributeNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContainerAttributeCode3</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSContainerAttributes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Code3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>AttributeTitle_Extern</Name>
					<RelatedField>AttributeTitle</RelatedField>
					<ValueStr>WHSAttributeTitle::Attribute3</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerAttributeCode</Name>
					<Field>ContainerAttributeCode[3]</Field>
					<RelatedField>AttributeNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContainerAttributesCode4</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSContainerAttributes</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Code4</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>AttributeTitle_Extern</Name>
					<RelatedField>AttributeTitle</RelatedField>
					<ValueStr>WHSAttributeTitle::Attribute4</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerAttributeCode</Name>
					<Field>ContainerAttributeCode[4]</Field>
					<RelatedField>AttributeNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>