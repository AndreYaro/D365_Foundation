<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanQuantityPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanQuantityPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formulaToString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the kanban quantity calculation formula.
    /// </summary>
    /// <param name="_safetyStock">
    /// A Boolean value that indicates whether safety stock must be used or not; optional.
    /// </param>
    /// <returns>
    /// A string that holds the kanban quantity calculation formula.
    /// </returns>
    public display KanbanQuantityCalculationFormula formulaToString(
        boolean  _safetyStock = KanbanQuantityPolicySafetyStock::findKanbanQuantityPolicy(this.RecId).RecId)
    {
        if (this.SafetyFactor)
        {
            if (this.MinimumKanbanQuantity)
            {
                if (_safetyStock)
                {
                    return strfmt("@SYS315579",this.safetyMultiplicator(),this.MinimumKanbanQuantity);
                }
                else
                {
                    return strfmt("@SYS315585",this.safetyMultiplicator(),this.MinimumKanbanQuantity);
                }
            }
            else
            {
                if (_safetyStock)
                {
                    return strfmt("@SYS315584", this.safetyMultiplicator());
                }
                else
                {
                    return strfmt("@SYS315580", this.safetyMultiplicator());
                }
            }
        }
        else
        {
            if (this.MinimumKanbanQuantity)
            {
                if (_safetyStock)
                {
                    return strfmt("@SYS315586",this.MinimumKanbanQuantity);
                }
                else
                {
                    return strfmt("@SYS315587",this.MinimumKanbanQuantity);
                }
            }
            else
            {
                if (_safetyStock)
                {
                    return "@SYS315581";
                }
                else
                {
                    return "@SYS315583";
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numOfKanbanRuleRelationships</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the number of <c>KanbanQuantityPolicyKanbanRuleFixed</c> records that relate to the
    /// current <c>KanbanQuantityPolicy</c> record.
    /// </summary>
    /// <returns>
    /// An integer value that represents the number of kanban rules that are associated to the current
    /// <c>KanbanQuantityPolicy</c> record.
    /// </returns>
    private Counter numOfKanbanRuleRelationships()
    {
        KanbanQuantityPolicyKanbanRuleFixed     kanbanQuantityPolicyKanbanRuleFixed;

        if (this.RecId)
        {
            select count(RecId) from kanbanQuantityPolicyKanbanRuleFixed
                where kanbanQuantityPolicyKanbanRuleFixed.KanbanQuantityPolicy == this.RecId;
        }

        return any2int(kanbanQuantityPolicyKanbanRuleFixed.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqPlan</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>ReqPlan</c> record referenced by the current record.
    /// </summary>
    /// <returns>
    /// The <c>ReqPlan</c> record.
    /// </returns>
    public ReqPlan reqPlan()
    {
        return ReqPlan::findReqPlanId(this.ReqPlanId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>safetyMultiplicator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the safety multiplier.
    /// </summary>
    /// <returns>
    /// A real value that holds the safety multiplier for the average demand during lead time.
    /// </returns>
    public real safetyMultiplicator()
    {
        return 1 + this.SafetyFactor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        Counter                     numOfKanbanRuleRelationships;
        boolean                     ret;
        KanbanQuantityCalculation   kanbanQuantityCalculation;

        ret = super();

        // check for no exists of KanbanRules
        numOfKanbanRuleRelationships = this.numOfKanbanRuleRelationships();

        if (numOfKanbanRuleRelationships > 0)
        {
            if (! FormDataUtil::isFormDataSource(this)
               || appl.ttsLevel() > 0
               || Box::yesNo(strfmt("@SYS315556",numOfKanbanRuleRelationships), DialogButton::No) != DialogButton::Yes)
            {
                ret = false;
            }
        }

        // check for no exists of kanbanQuantityCalculation with status before updated
        select firstonly Name from kanbanQuantityCalculation
            where  kanbanQuantityCalculation.KanbanQuantityPolicy == this.RecId
                && kanbanQuantityCalculation.CalculationStatus != KanbanQuantityCalculationStatus::Updated;

        if (ret && kanbanQuantityCalculation.Name)
        {
            ret = checkFailed(strfmt("@SYS315557",kanbanQuantityCalculation.Name));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether a value in a field is valid.
    /// </summary>
    /// <param name="_fieldName">
    /// A string that contains the field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// An integer that contains the array index, applies only if the field has array elements.
    /// </param>
    /// <returns>
    /// true if the specified field contains a valid value; otherwise, false.
    /// </returns>
    /// <remarks>
    /// A system defined method provided as an event for applying logic after a field is modified.
    /// </remarks>
    public boolean validateFieldValue(
        fieldName _fieldName,
        int       _arrayIndex = 1)
    {
        #define.minimumKanbanQuantityMin(0)
        #define.minimumKanbanQuantityMax(1)

        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(KanbanQuantityPolicy, MinimumKanbanQuantity):
                if (   this.MinimumKanbanQuantity < #minimumKanbanQuantityMin
                    || this.MinimumKanbanQuantity > #minimumKanbanQuantityMax)
                {
                    ret = checkFailed(strfmt("@SYS95262",fieldid2pname(tablenum(KanbanQuantityPolicy),fieldnum(KanbanQuantityPolicy,MinimumKanbanQuantity)),#minimumKanbanQuantityMin,#minimumKanbanQuantityMax));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>kanbanQuantityPolicy</c> record based on a specified kanban quantity policy <c>RecId</c>.
    /// </summary>
    /// <param name="_kanbanQuantityPolicy">
    /// An integer that contains the kanban quantity policy <c>RecId</c>.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that indicates whether to select the record forupdate; optional.
    /// </param>
    /// <returns>
    /// A <c>kanbanQuantityPolicy</c> record; otherwise, an empty record.
    /// </returns>
    public static KanbanQuantityPolicy   find(
        RefRecId    _kanbanQuantityPolicy,
        boolean     _forupdate = false)
    {
        KanbanQuantityPolicy    kanbanQuantityPolicy;

        if (_kanbanQuantityPolicy)
        {
            kanbanQuantityPolicy.selectForUpdate(_forupdate);

            select firstonly kanbanQuantityPolicy
                where kanbanQuantityPolicy.RecId == _kanbanQuantityPolicy;
        }

        return kanbanQuantityPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReferenceKanbanQuantityPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a lookup in order to select a <c>KanbanQuantityPolicy</c> record.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// An object of the <c>FormReferenceControl</c> type.
    /// </param>
    /// <returns>
    /// A <c>KanbanQuantityPolicy</c> record.
    /// </returns>
    public static KanbanQuantityPolicy lookupReferenceKanbanQuantityPolicy(FormReferenceControl _formReferenceControl)
    {
        SysReferenceTableLookup     sysTableLookup           = SysReferenceTableLookup::newParameters(tablenum(KanbanQuantityPolicy),_formReferenceControl);
        Query                       query                    = new Query();
        QueryBuildDataSource        qbdsKanbanQuantityPolicy = query.addDataSource(tablenum(KanbanQuantityPolicy));

        sysTableLookup.addLookupfield(fieldnum(KanbanQuantityPolicy,Name));

        sysTableLookup.parmQuery(query);
        return sysTableLookup.performFormLookup() as KanbanQuantityPolicy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS315552</DeveloperDocumentation>
	<FormRef>kanbanQuantityPolicy</FormRef>
	<Label>@SYS315578</Label>
	<SingularLabel>@SYS315561</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>createdBy</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>KanbanQuantityCalculation</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanQuantityCalculation</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanQuantityPolicyDemandPeriod</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanQuantityPolicyDemandPeriod</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanQuantityPolicyKanbanRuleFixed</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanQuantityPolicyKanbanRuleFixed</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanQuantityPolicySafetyStock</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanQuantityPolicySafetyStock</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SafetyFactor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumKanbanQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS7523</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumKanbanQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SafetyFactor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Formula</Name>
			<Label>@SYS672</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>formulaToString</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumKanbanQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanMinimumQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanQuantityPolicyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReqPlanId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqPlanId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS25320</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SafetyFactor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanQuantityPolicySafetyFactor</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPlan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReqPlan</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReqPlan</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanQuantityPolicy</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReqPlanId</Name>
					<Field>ReqPlanId</Field>
					<RelatedField>ReqPlanId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PlanIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>