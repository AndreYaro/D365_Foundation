<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayPFRegister</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayPFRegister extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dateEndQuarter</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    TransDate dateEndQuarter()
    {
        TransDate startQuarter;

        switch (this.Period)
        {
            case RPayReportSocialTaxPeriod::Quarter:
                startQuarter = mkdate(31, 03, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::HalfYear:
                startQuarter = mkdate(31, 06, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::NineMonth:
                startQuarter = mkdate(31, 09, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::Year:
                startQuarter = mkdate(31, 12, year(this.Year));
                break;
        }

        return startQuarter;
    }
]]></Source>
			</Method>
			<Method>
				<Name>dateStartQuarter</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    TransDate dateStartQuarter()
    {
        TransDate startQuarter;

        switch (this.Period)
        {
            case RPayReportSocialTaxPeriod::Quarter:
                startQuarter = mkdate(01, 01, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::HalfYear:
                startQuarter = mkdate(01, 04, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::NineMonth:
                startQuarter = mkdate(01, 07, year(this.Year));
                break;
            case RPayReportSocialTaxPeriod::Year:
                startQuarter = mkdate(01, 10, year(this.Year));
                break;
        }

        return startQuarter;
    }
]]></Source>
			</Method>
			<Method>
				<Name>existsLaterRegister</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    boolean existsLaterRegister()
    {
        RPayPFRegister rPayPFRegisterNext;
        boolean ret = false;

        select firstonly recId from rPayPFRegisterNext
            where rPayPFRegisterNext.Year > this.Year ||
                  (rPayPFRegisterNext.Year == this.Year &&
                   rPayPFRegisterNext.Period > this.Period) ||
                  (rPayPFRegisterNext.Year == this.Year &&
                   rPayPFRegisterNext.Period == this.Period &&
                   rPayPFRegisterNext.CorrNum > this.CorrNum);

        ret = rPayPFRegisterNext.RecId != 0;

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>getPreviousPeriod</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public container getPreviousPeriod()
    {
        container ret;

        switch (this.Period)
        {
            case RPayReportSocialTaxPeriod::Quarter:
                ret = [RPayReportSocialTaxPeriod::Year, year(this.Year) - 1];
                break;
            case RPayReportSocialTaxPeriod::HalfYear:
                ret = [RPayReportSocialTaxPeriod::Quarter, year(this.Year)];
                break;
            case RPayReportSocialTaxPeriod::NineMonth:
                ret = [RPayReportSocialTaxPeriod::HalfYear, year(this.Year)];
                break;
            case RPayReportSocialTaxPeriod::Year:
                ret = [RPayReportSocialTaxPeriod::NineMonth, year(this.Year)];
                break;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>isCorrRegister</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    boolean isCorrRegister()
    {
        return this.CorrType != RPayPFCorrectionType::None;
    }
]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        RPayPFRegister  rPayPFRegisterPrev;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(RPayPFRegister, Year):
                this.Year = dateEndYr(this.Year);
            case fieldnum(RPayPFRegister, Period):
                this.CorrType = RPayPFCorrectionType::None;
                this.CorrNum = '';
                this.CorrDate = datenull();
                break;

            case fieldnum(RPayPFRegister, CorrType):

                if (this.CorrType == RPayPFCorrectionType::None)
                {
                    this.CorrNum = '';
                    this.CorrDate = datenull();
                }

                if (this.CorrType != RPayPFCorrectionType::None &&
                    this.CorrNum == '' &&
                    this.Year)
                {
                    select count(recId) from rPayPFRegisterPrev
                        where rPayPFRegisterPrev.Year == this.Year &&
                              rPayPFRegisterPrev.Period == this.Period;

                    this.CorrNum = num2str0(any2int(rPayPFRegisterPrev.RecId), 3);
                }

                break;
            case fieldnum(RPayPFRegister, CorrDate):
                this.CorrDate = endmth(this.CorrDate);
                break;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    #define.Year2014(01\01\2014)
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean                 ret;
        RPayPFRegisterTotals    rPayPFRegisterTotals;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(RPayPFRegister, CorrDate):

                if (this.CorrDate <= this.dateEndQuarter() ||
                    this.CorrDate > dateEndQtr(this.dateEndQuarter() + 1))
                {
                    ret = checkFailed("@SYP4881344");
                }

                break;
            case fieldnum(RPayPFRegister, Year):

                if (this.Year < #Year2014)
                {
                    ret = checkFailed(strfmt("@SYP4881345", year(#Year2014)));
                }

                break;
            case fieldnum(RPayPFRegister, FirstBatchNum):

                select firstonly RecId from rPayPFRegisterTotals
                    where rPayPFRegisterTotals.RegisterRefRecId == this.RecId;

                if (rPayPFRegisterTotals.RecId)
                {
                    ret = Box::yesNo("@SYP4881576", DialogButton::No) == DialogButton::No ? false : ret;
                }

                break;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.CorrType != RPayPFCorrectionType::None)
        {
            if (!this.CorrDate)
            {
                ret = checkfailed(strfmt("@GLS102641", "@SYP4881384"));
            }

            if (!this.CorrNum)
            {
                ret = checkfailed(strfmt("@GLS102641", "@SYS4002918"));
            }
        }

        if (ret)
        {
            if (this.existsLaterRegister())
            {
                ret = checkfailed("@SYP4881346");
            }
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>existsPeriod</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existsPeriod(
        RPayYearPeriod              _year,
        RPayReportSocialTaxPeriod   _period)
    {
        return (select firstonly recId from RPayPFRegister
                    where RPayPFRegister.Year   == _year &&
                          RPayPFRegister.Period == _period).recId != 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayPFRegister find(
        RPayYearPeriod              _year,
        RPayReportSocialTaxPeriod   _period,
        RPayPFCorrectionNum         _corrNum = '',
        RPayPFCorrectionType        _corrType = RPayPFCorrectionType::None,
        boolean                     _forupdate = false)
    {
        RPayPFRegister rPayPFRegister;

        if (_year)
        {
            rPayPFRegister.selectForUpdate(_forupdate);

            select firstonly rPayPFRegister
                where rPayPFRegister.Year       == _year &&
                      rPayPFRegister.Period     == _period &&
                      rPayPFRegister.CorrType   == _corrType &&
                      rPayPFRegister.CorrNum    == _corrNum;
        }

        return rPayPFRegister;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4881387</DeveloperDocumentation>
	<Label>@SYP4881303</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>Year</TitleField1>
	<TitleField2>Period</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PeriodYearIdx</ClusteredIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RPayPFRegisterTotals</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RPayPFRegisterTotals</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RPayPFBatches</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RPayPFBatches</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RPayPFRegisterAdd</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RPayPFRegisterAdd</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RPayPFRegisterStudents</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RPayPFRegisterStudents</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RPayPFRegisterTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RPayPFRegisterTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EmplQty</Name>
			<Label>@GLS100761</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsuredPersonsNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AverageHeadCount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Termination</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignerCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Signer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FilePath</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstBatchNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AverageHeadCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYP4881394</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CertType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayPFCertType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CorrDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportPeriod_RU</ExtendedDataType>
			<Label>@SYP4881384</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayPFCorrectionNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CorrType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayPFCorrectionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Label>@RUP3257</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FilePath</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FilePath</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FirstBatchNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYP4881341</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InsuredPersonsNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYP4881342</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Period</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayReportSocialTaxPeriod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReportDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS100733</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Signer</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RHRMEmplId</ExtendedDataType>
			<Label>@SYS138179</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SignerCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayPFOfficialsType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Termination</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS38434</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Year</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayYearPeriod</ExtendedDataType>
			<Label>@SYS107162</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PeriodYearIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Year</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Period</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CorrNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>EmplTableSigner</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Signer</Name>
					<Field>Signer</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>