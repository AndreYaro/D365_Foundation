<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgProfileTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgProfileTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the profile from this <c>JmgProfileTable</c> to the specified profile ID.
    /// </summary>
    /// <param name="toProfile">
    /// The ID of the profile to write to.
    /// </param>
    /// <param name="doOverwrite">
    /// A Boolean value that specifies whether an existing profile must be overwritten.
    /// </param>
    void copyProfile(JmgProfileId toProfile, NoYes doOverwrite)
    {
        JmgProfileTable     copyProfTab;
        JmgProfileDay       copyProfDay;
        Integer             wrkCntErr;

        if (this.Profile == toProfile)
        {
            return;
        }

        ttsbegin;

        select forupdate copyProfTab
            where copyProfTab.Profile == toProfile;

        copyProfTab.doDelete();

        select copyProfTab
            where copyProfTab.RecId == this.RecId;

        copyProfTab.Profile = toProfile;
        copyProfTab.insert();

        while select copyProfDay
            where copyProfDay.Profile == this.Profile
        {
            wrkCntErr = wrkCntErr + (copyProfDay.copyDay(toProfile,copyProfDay.DayId, doOverwrite) ? 0 : 1);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a <c>JmgProfileTable</c> record into database.
    /// </summary>
    /// <remarks>
    /// Related <c>JmgProfileDay</c> records are created upon insertion.
    /// </remarks>
    void insert()
    {
        JmgProfileDay      copyProfDay;

        copyProfDay.Profile = this.Profile;
        copyProfDay.DayId = JmgDayIdEnum::Monday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Tuesday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Wednesday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Thursday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Friday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Saturday;
        copyProfDay.doInsert();
        copyProfDay.DayId = JmgDayIdEnum::Sunday;
        copyProfDay.doInsert();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardTimeTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the calculated amount of standard time that is defined on the profile.
    /// </summary>
    /// <returns>
    /// The calculated amount of standard time that is defined on the profile formatted as a string.
    /// </returns>
    public display JmgLabelProfileTimeTotal standardTimeTotal()
    {
        JmgProfileDay           profileDay;
        JmgProfiles             jmgProfiles;
        JmgStampJournalTable    stampJournalTable;
        JmgSeconds              ret;
        ret = 0;
        while select Profile, DayId
            from  profileDay
            where profileDay.Profile    == this.Profile
        {
            jmgProfiles = new JmgProfiles(false);
            jmgProfiles.getProfile(profileDay.Profile, profileDay.DayId);
            jmgProfiles.initStampJournalTable(stampJournalTable);
            ret += stampJournalTable.ProfileSeconds;
            stampJournalTable = null;
        }

        return JmgProfileSeconds::formattedSeconds(ret, JmgSecondPresentationEnum::Centitime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>JmgProfileTable</c> record in the database.
    /// </summary>
    void update()
    {
        JmgProfileTable    jmgProfileTable;
        JmgProfileDay      jmgProfileDay;

        select    Profile
            from  jmgProfileTable
            where jmgProfileTable.RecId == this.RecId;

        super();

        if (this.Profile != jmgProfileTable.Profile)
        {
            while select forupdate jmgProfileDay
                where jmgProfileDay.Profile == jmgProfileTable.Profile
            {
                jmgProfileDay.changeDayProfile(this.Profile);
            }

            if (FormDataUtil::getFormDataSource(this))
                FormDataUtil::getFormDataSource(this).research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>JmgProfileTable</c> record that has the specified profile ID from the database.
    /// </summary>
    /// <param name="profileId">
    /// The profile ID to search for.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether the returned record must be selected for updated.
    /// </param>
    /// <returns>
    /// A <c>JmgProfileTable</c> record that has the specified profile ID from the database.
    /// </returns>
    static JmgProfileTable find(JmgProfileId profileId, boolean  _forUpdate = false)
    {
        JmgProfileTable jmgProfileTable;

        if (profileId)
        {
            jmgProfileTable.selectForUpdate(_forUpdate);

            select firstonly jmgProfileTable
                where jmgProfileTable.Profile == profileId;
        }

        return jmgProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Jmg</ConfigurationKey>
	<DeveloperDocumentation>@SYS317300</DeveloperDocumentation>
	<Label>@SYS38519</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>Profile</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProfileIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>ProfileIdx</PrimaryIndex>
	<ReplacementKey>ProfileIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>JmgEmployee</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgEmployee</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgPayAgreementLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgPayAgreementLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgProfileCalendar</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgProfileCalendar</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgProfileDay</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>JmgProfileDay</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JmgProfileRelation</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>JmgProfileRelation</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Profile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayAgreement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Profile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Color</Name>
			<Label>@SYS67221</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Profile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Properties</Name>
			<Label>@SYS10344</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayAgreement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Color</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgProfileColor</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayAgreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgPayAgreement</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Profile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgProfileId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Profile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JmgPayAgreementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgPayAgreementTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayAgreement</Name>
					<Field>PayAgreement</Field>
					<RelatedField>PayAgreement</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AgreementIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>