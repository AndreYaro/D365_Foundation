<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSMobileAppField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSMobileAppField find(WHSMobileAppFieldRefRecId _recId, boolean _forUpdate = false)
    {
        WHSMobileAppField mobileAppField;

        mobileAppField.selectForUpdate(_forUpdate);

        select firstonly mobileAppField
            where mobileAppField.RecId == _recId;

        return mobileAppField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExtendedType</Name>
				<Source><![CDATA[
    public static WHSMobileAppField findByExtendedType(ExtendedTypeId _edt)
    {
        WHSMobileAppField mobileAppField;
        var edtAttribute = new WHSFieldEDTAttribute(extendedTypeId2name(_edt));
        WHSField field = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WHSField), edtAttribute);
        if (field)
        {
            mobileAppField = WHSMobileAppField::findByClassName(field.GetType().Name);
        }
        return mobileAppField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByClassName</Name>
				<Source><![CDATA[
    public static WHSMobileAppField findByClassName(WHSFieldClassName _fieldClassName, boolean _forUpdate = false)
    {
        WHSMobileAppField mobileAppField;

        mobileAppField.selectForUpdate(_forUpdate);

        select firstonly mobileAppField
            where mobileAppField.FieldClassName == _fieldClassName;

        return mobileAppField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    public display WHSFieldName name()
    {
        if (this.RecId != 0)
        {
            WHSField appField = this.createFieldClassObject();
            if (appField)
            {
                return appField.getName();
            }
        }
        return "@WAX:NameNotFound";
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFieldClassObject</Name>
				<Source><![CDATA[
    private WHSField createFieldClassObject()
    {
        SysDictClass dictClass = new SysDictClass(className2Id(this.FieldClassName));
        if (dictClass)
        {
            return dictClass.makeObject();
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);;

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSMobileAppField, InputType):
                if (!this.validInputType())
                {
                    ret = checkFailed("@WAX:ErrorInvalidInputType");
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validInputType</Name>
				<Source><![CDATA[
    private boolean validInputType()
    {
        WHSField appField = this.createFieldClassObject();
        if (appField)
        {
            WHSFieldInputType defaultInputType = appField.getInputType();
            switch (defaultInputType)
            {
                case WHSFieldInputType::Date,
                     WHSFieldInputType::Selection,
                     WHSFieldInputType::Numeric:
                    if (this.InputType != defaultInputType)
                    {
                        return false;
                    }
                    break;
                case WHSFieldInputType::Alpha:
                    if (this.InputType == WHSFieldInputType::Selection)
                    {
                        return false;
                    }
                    break;
            }
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSMobileAppFieldDevDoc</DeveloperDocumentation>
	<FormRef>WHSMobileAppField</FormRef>
	<Label>@WAX:WHSMobileAppField</Label>
	<TitleField1>FieldClassName</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldClassName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldClassName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldClassName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldClassName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldClassName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldClassName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFieldClassName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InputType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSFieldInputType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InputMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSFieldInputMode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumOfDecimals</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFieldDecimals</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldClassName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>