<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDiscountLineOffer</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailDiscountLineOffer extends RetailPeriodicDiscountLine
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the discount on the price based on the discount method defined for the discount offer.
    /// </summary>
    /// <param name="_price">
    /// The given price value.
    /// </param>
    /// <returns>
    /// The price after discounted amount.
    /// </returns>
    /// <remarks>
    /// If the price passed is <c>0</c>, it returns <c>0</c>.
    /// </remarks>
    public real applyDiscount(real _price)
    {
        RetailDiscountOffer discountOffer;
        int decimalPrecision = new SysDictType(extendedTypeNum(Price)).effectivePrecision();

        if (_price == 0)
            return 0;

        discountOffer = RetailDiscountOffer::find(this.OfferId);

        if (discountOffer)
        {
            switch (this.DiscountMethod)
            {
                case RetailDiscountOfferLineDiscMethodBase::AmountOff:     return decRound(_price - this.DiscAmount, decimalPrecision);
                case RetailDiscountOfferLineDiscMethodBase::PercentOff:    return decRound(_price - (_price * this.DiscPct/ 100), decimalPrecision);
                case RetailDiscountOfferLineDiscMethodBase::Price:         return decRound(this.OfferPrice, decimalPrecision);
            }
        }

        return _price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupMemberLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailGroupMemberLine</c> table.
    /// </summary>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailGroupMemberLine</c> table; otherwise, an empty record.
    /// </returns>
    public RetailGroupMemberLine  groupMemberLine(boolean  _update = false)
    {
        return RetailGroupMemberLine::find(this.RetailGroupMemberLine, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls methods appropriate to modified fields.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the field that is modified.
    /// </param>
    /// <remarks>
    /// This method executes when any field in the table is modified.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        if (_fieldId == fieldNum(RetailDiscountLineOffer, discPct))
        {
            this.validateDiscPct();
        }

        super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the standard price of the item or the variant selected.
    /// </summary>
    /// <returns>
    /// The standard price of the item or the variant selected.
    /// </returns>
    display RetailStandardPrice standardPrice()
    {
        Price                   standardPrice;
        InventTableModule       inventTableModule;
        ItemId                  itemId;
        InventDimCombination    inventDimCombination;
        RetailGroupMemberLine   groupMemberLine;

        groupMemberLine = this.groupMemberLine();

        if (groupMemberLine && (groupMemberLine.Product || groupMemberLine.Variant))
        {
            if (groupMemberLine.Variant)
            {
                select firstonly ItemId from inventDimCombination
                    index hint VariantIdx
                    where inventDimCombination.DistinctProductVariant == groupMemberLine.Variant;

                itemId = inventDimCombination.ItemId;
            }
            else
            {
                itemId = InventTable::findByProduct(groupMemberLine.Product).ItemId;
            }

            if (itemId)
            {
                inventTableModule   = InventTableModule::find(itemId ,ModuleInventPurchSales::Sales);
                standardPrice       = inventTableModule.Price;

                if (this.UnitOfMeasure != UnitOfMeasure::unitOfMeasureIdBySymbol(inventTableModule.UnitId))
                {
                    standardPrice   = UnitOfMeasureConverter::convert(standardPrice,
                                                                    this.UnitOfMeasure,
                                                                    UnitOfMeasure::unitOfMeasureIdBySymbol(inventTableModule.UnitId),
                                                                    NoYes::No);
                }
            }
        }
        else
        {
            standardPrice = 0;
        }

        return standardPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountLineOfferQuantityLimit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the quantity limit for the line.
    /// </summary>
    /// <returns>
    /// The quantity limit for the discount line.
    /// </returns>
    display RetailDiscountQuantityLimit discountLineOfferQuantityLimit()
    {
        return RetailDiscountOffer::find(this.OfferId).QuantityLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDiscPct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the discount pct is between 0 to 100
    /// </summary>
    /// <returns>
    /// true if the range is valid; otherwise, false.
    /// </returns>
    protected boolean validateDiscPct()
    {
        boolean ret = true;
        RetailPeriodicDiscount discount = RetailPeriodicDiscount::findByOfferId(this.OfferId);

        if (this.discountMethod == RetailDiscountOfferLineDiscMethodBase::PercentOff
            && this.LineType == RetailDiscountLineIncludeExcludeTypeBase::Include)
        {
            if (discount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion)
            {
                ret = RetailPricingConfigurationValidator::isValidPriceAdjustmentPercentage(this.discPct);
            }
            else
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountPercentage(this.discPct);
            }
        }
        else
        {
            if (discount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion)
            {
                ret = RetailPricingConfigurationValidator::isValidPriceAdjustmentPercentageAllowZero(this.discPct);
            }
            else
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountPercentageAllowZero(this.discPct);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDiscAmount</Name>
				<Source><![CDATA[
    protected boolean validateDiscAmount()
    {
        boolean ret = true;

        RetailPeriodicDiscount discount = RetailPeriodicDiscount::findByOfferId(this.OfferId);

        if (this.discountMethod == RetailDiscountOfferLineDiscMethodBase::AmountOff
            && this.LineType == RetailDiscountLineIncludeExcludeTypeBase::Include)
        {
            if (discount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion)
            {
                ret = RetailPricingConfigurationValidator::isValidPriceAdjustmentAmount(this.discAmount);
            }
            else
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountAmount(this.discAmount);
            }
        }
        else
        {
            if (discount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Promotion)
            {
                ret = RetailPricingConfigurationValidator::isValidPriceAdjustmentAmountAllowZero(this.discAmount);
            }
            else
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountAmountAllowZero(this.discAmount);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOfferPrice</Name>
				<Source><![CDATA[
    private boolean validateOfferPrice()
    {
        boolean ret = true;

        if (this.discountMethod == RetailDiscountOfferLineDiscMethodBase::Price)
        {
            ret = RetailPricingConfigurationValidator::isValidDiscountDealPrice(this.offerPrice);
        }
        else
        {
            ret = RetailPricingConfigurationValidator::isValidDiscountDealPriceAllowZero(this.offerPrice);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate unit of measure.
    /// </summary>
    /// <returns>
    /// true if unit of measure is validated; otherwise, false.
    /// </returns>
    public boolean validateUnitOfMeasure()
    {
        boolean isValid = true;

        if (!this.UnitOfMeasure)
        {
            if (this.discountMethod != RetailDiscountOfferLineDiscMethodBase::PercentOff && this.LineType == RetailDiscountLineIncludeExcludeTypeBase::Include )
            {
                isValid = false;
            }
        }

        if (!isValid)
        {
            return checkFailed(strFmt("@REX4520428", fieldstr(RetailPeriodicDiscountLine, UnitOfMeasure)));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        RetailDiscountOfferTypeBase discountType;
        boolean ret;

        ret = super();
        discountType = RetailPeriodicDiscount::findByOfferId(this.OfferId).PeriodicDiscountType;


        // do not need to validate offerlines for threshold since those fields are hidden from UI
        if (ret && (discountType != RetailDiscountOfferTypeBase::Threshold && discountType != RetailDiscountOfferTypeBase::Shipping))
        {
            ret = this.validateDiscPct() && this.validateDiscAmount() && this.validateOfferPrice();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET6365</DeveloperDocumentation>
	<Label>@RET6364</Label>
	<CacheLookup>NotInTTS</CacheLookup>
	<Extends>RetailPeriodicDiscountLine</Extends>
	<Modules>Merchandising</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>discAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>discountMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>discPct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>offerPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>offerPriceInclTaxN1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>discountMethodN1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>offerPriceN1</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>discAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<Label>@RetailPricing:DiscountCalcValueAmountOff</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>discountMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountOfferLineDiscountMethod</ExtendedDataType>
			<EnumType>RetailDiscountOfferLineDiscMethodBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>discPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPriceDiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>offerPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOfferPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>offerPriceInclTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>RetailOfferPriceInclTax</ExtendedDataType>
			<Label>@RET6370</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>discountMethodN1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>RetailCDXBackwardCompatibility</ConfigurationKey>
			<ExtendedDataType>RetailOfferLineDiscountMethodN1</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>RetailOfferLineDiscountMethodBaseN1</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>offerPriceN1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>RetailCDXBackwardCompatibility</ConfigurationKey>
			<ExtendedDataType>RetailOfferPrice</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>offerPriceInclTaxN1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>RetailCDXBackwardCompatibility</ConfigurationKey>
			<ExtendedDataType>RetailOfferPriceInclTax</ExtendedDataType>
			<Label>@RET6370</Label>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPeriodicDiscountLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailPeriodicDiscountLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>