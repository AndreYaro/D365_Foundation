<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DIOTDeclarationTaxCode_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DIOTDeclarationTaxCode_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkIfTaxCodeIsNotLInkedToAnyone</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the main account in combination with the concept category is already marked.
    /// </summary>
    /// <param name="_taxCode">
    ///    The sales tax code to check whether is marked or not.
    /// </param>
    /// <param name="_diotConceptRecID">
    ///    The <c>RecID</c> value of the DIOT concept table.
    /// </param>
    /// <returns>
    ///    true if the sales tax code is already marked for another DIOT concept ID; otherwise, false.
    /// </returns>
    public boolean checkIfTaxCodeIsNotLInkedToAnyone(
        TaxCode     _taxCode,
        RefRecID    _diotConceptRecID)
    {
        DIOTDeclarationTaxCode_MX   diotDeclartionTaxCode;
        DIOTDeclarationConcept_MX   diotDeclarationconcept;
        DIOTDeclarationConcept_MX   diotDeclarationconceptLoc;
        boolean                     ret = true;

        diotDeclarationconceptLoc = DIOTDeclarationConcept_MX::find(_diotConceptRecID);

        while select diotDeclarationConcept, TaxCode from diotDeclartionTaxCode
            where diotDeclartionTaxCode.TaxCode                == _taxCode
               && diotDeclartionTaxCode.diotDeclarationConcept != _diotConceptRecID
            join ColumnType, ConceptId from diotDeclarationconcept
                where diotDeclarationconcept.RecId == diotDeclartionTaxCode.DIOTDeclarationConcept
        {
            if (diotDeclarationconcept.ColumnType == diotDeclarationconceptLoc.ColumnType)
            {
                ret = checkFailed(strfmt("@SYS4003523", _taxCode,diotDeclarationconcept.ColumnType,diotDeclarationconcept.ConceptId));
                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>DIOTDeclarationTaxCode_MX</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>DIOTDeclarationTaxCode_MX</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>DIOTDeclarationTaxCode_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static DIOTDeclarationTaxCode_MX find(
        RecId               _recId,
        boolean             _forUpdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        DIOTDeclarationTaxCode_MX diotDeclartionTaxCode;

        diotDeclartionTaxCode.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            diotDeclartionTaxCode.concurrencyModel(_concurrencyModel);
        }

        select diotDeclartionTaxCode
            where diotDeclartionTaxCode.RecId == _recId;

        return diotDeclartionTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySalesTaxCodeAndConcept</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>DIOTDeclarationTaxCode_MX</c> table.
    /// </summary>
    /// <param name="_taxCode">
    ///    The tax code of the record to find.
    /// </param>
    /// <param name="_diotConceptRecID">
    ///    The unique concept <c>RecId</c> value of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    An optional value that is used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    ///    A buffer that contains the <c>DIOTDeclarationTaxCode_MX</c> table.
    /// </returns>
    public static DIOTDeclarationTaxCode_MX findBySalesTaxCodeAndConcept(
        TaxCode             _taxCode,
        RefRecID            _diotConceptRecID,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        DIOTDeclarationTaxCode_MX diotDeclartionTaxCode;

        diotDeclartionTaxCode.selectForUpdate(_forUpdate);

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            diotDeclartionTaxCode.concurrencyModel(_concurrencyModel);
        }

        select diotDeclartionTaxCode
            where diotDeclartionTaxCode.TaxCode                 == _taxCode
               && diotDeclartionTaxCode.diotDeclarationConcept  == _diotConceptRecID;

        return diotDeclartionTaxCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS328099</DeveloperDocumentation>
	<Label>@SYS314924</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>DIOTDeclarationConcept</TitleField1>
	<TitleField2>TaxCode</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DIOTDeclarationConcept</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DIOTDeclarationConcept</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DIOTDeclarationConcept</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DIOTDeclarationConcept_MXIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DIOTDeclarationConcept</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DIOTDeclarationConcept</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DIOTDeclarationConcept_MX</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DIOTDeclarationConcept_MX</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>DIOTDeclarationConcept_MX_DIOTDeclarationTaxCode_MX</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DIOTDeclarationConcept</Name>
					<Field>DIOTDeclarationConcept</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxTable_DIOTDeclarationTaxCode_MX</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>