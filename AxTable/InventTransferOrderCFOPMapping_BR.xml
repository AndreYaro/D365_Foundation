<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferOrderCFOPMapping_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferOrderCFOPMapping_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cfopExistsInCFOPMatrix</Name>
				<Source><![CDATA[
    private boolean cfopExistsInCFOPMatrix(RecId _cfopTable, FiscalDocDirection_BR _direction)
    {
        boolean ret = true;
        Query query;

        query = this.lookupQuery(_direction);
        query.dataSourceTable(tablenum(CFOPTable_BR)).addRange(fieldNum(CFOPTable_BR, RecId)).value(queryValue(_cfopTable));

        if (SysQuery::countTotal(new QueryRun(query)) == 0)
        {
            ret = checkFailed(strFmt("@GLS160286",
                    CFOPTable_BR::find(_cfopTable).CFOPId,
                    tablePName(CFOPMatrix_BR),
                    fieldPName(CFOPMatrix_BR, Transactiontype)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the <c>Query</c> object used to lookup
    /// </summary>
    /// <param name="_direction">
    ///     The CFOP direction
    /// </param>
    /// <returns>
    ///     The <c>Query</c> object
    /// </returns>
    public query lookupQuery(FiscalDocDirection_BR _direction)
    {
        QueryBuildDataSource    qbds;
        Query                   query;

        query = new Query();

        qbds = query.addDataSource(tablenum(CFOPTable_BR));
        qbds.addRange(fieldnum(CFOPTable_BR, Direction)).value(queryValue(_direction));

        qbds = qbds.addDataSource(tablenum(CFOPMatrix_BR));
        qbds.relations(true);
        qbds.joinMode(JoinMode::ExistsJoin);
        qbds.addRange(fieldnum(CFOPMatrix_BR, Transactiontype)).value(
            strFmt('%1,%2', queryValue(SalesPurchTrntype_BR::FiscalEstablishmentTransfer), queryValue(SalesPurchTrntype_BR::ThirdPartyTransfer)));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InventTransferOrderCFOPMapping_BR, ReceiveCFOPTable_BR) :
                if (CFOPTable_BR::find(this.ReceiveCFOPTable_BR).Direction != FiscalDocDirection_BR::Incoming)
                {
                    ret = checkFailed(strFmt("@GLS63432",
                                          CFOPTable_BR::find(this.ReceiveCFOPTable_BR).CFOPId,
                                          FiscalDocDirection_BR::Incoming));
                }
                else
                {
                    ret = this.cfopExistsInCFOPMatrix(this.ReceiveCFOPTable_BR, FiscalDocDirection_BR::Incoming);
                }
                break;

            case fieldNum(InventTransferOrderCFOPMapping_BR, ShipCFOPTable_BR) :
                if (CFOPTable_BR::find(this.ShipCFOPTable_BR).Direction != FiscalDocDirection_BR::Outgoing)
                {
                    ret = checkFailed(strFmt("@GLS63432",
                                          CFOPTable_BR::find(this.ShipCFOPTable_BR).CFOPId,
                                          FiscalDocDirection_BR::Outgoing));
                }
                else
                {
                    ret = this.cfopExistsInCFOPMatrix(this.ShipCFOPTable_BR, FiscalDocDirection_BR::Outgoing);
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceiveCFOP</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the receive CFOP for a given shipment CFOP
    /// </summary>
    /// <param name="_shipCFOPRecID">
    ///     The shipment CFOP
    /// </param>
    /// <returns>
    ///     The CFOP recId
    /// </returns>
    public static CFOPTableRecId_BR getReceiveCFOP(CFOPTableRecId_BR _shipCFOPRecID)
    {
        return (select ReceiveCFOPTable_BR
                    from InventTransferOrderCFOPMapping_BR
                        where InventTransferOrderCFOPMapping_BR.ShipCFOPTable_BR == _shipCFOPRecID).ReceiveCFOPTable_BR;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@GLS222405</DeveloperDocumentation>
	<Label>@GLS222403</Label>
	<TitleField1>ShipCFOPTable_BR</TitleField1>
	<TitleField2>ReceiveCFOPTable_BR</TitleField2>
	<Modules>Inventory</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipCFOPTable_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiveCFOPTable_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReceiveCFOPTable_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCFOPTable_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReceiveCFOPTable_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CFOPTableRecId_BR</ExtendedDataType>
			<Label>@GLS222407</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ShipCFOPTable_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CFOPTableRecId_BR</ExtendedDataType>
			<Label>@GLS222406</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ShipCFOPTable_BRIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ShipCFOPTable_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReceiveCFOPTable_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReceiveCFOPTable_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReceiveCFOPTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>CFOPTable_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReceiveCFOPTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiveCFOPTable_BR</Name>
					<Field>ReceiveCFOPTable_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ShipCFOPTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>CFOPTable_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ShipCFOPTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCFOPTable_BR</Name>
					<Field>ShipCFOPTable_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>