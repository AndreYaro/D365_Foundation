<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayProductCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayProductCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayProductCategory</c> table by duplicating this record.
    /// </summary>
    /// <param  name='_tblSharedData'>
    /// The <c>CatDisplayCategorySharedInfo</c> record the cloned <c>CatDisplayProductCategory</c> record will point to.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayProductCategory</c> data type.
    /// </returns>
    /// <remarks>
    /// The cloned record is not inserted into the database.
    /// </remarks>
    public CatDisplayProductCategory cloneRecord(CatDisplayCategorySharedInfo _tblSharedData)
    {
        CatDisplayProductCategory tblProductCategoryDup;

        tblProductCategoryDup.clear();
        tblProductCategoryDup.Origin = this.Origin;
        tblProductCategoryDup.SharedData = _tblSharedData.RecId;
        tblProductCategoryDup.ProductCategory = this.ProductCategory;

        return tblProductCategoryDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_productCategory</paramref> parameter of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_productCategory'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean checkExist(RefRecId _sharedData, RefRecId _productCategory)
    {
        if (!CatDisplayProductCategory::exist(_sharedData, _productCategory))
        {
            return checkFailed(strfmt(CatDisplayProductCategory::txtNotExist(), _sharedData, _productCategory));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_productCategory</paramref> parameter of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_productCategory'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean exist(RefRecId _sharedData, RefRecId _productCategory)
    {
        return (CatDisplayProductCategory::find(_sharedData, _productCategory).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_productCategory</paramref> parameter of type <c>RefRecId</c>.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_productCategory'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An instance of the boolean data type.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatDisplayProductCategory</c> data type.
    /// </returns>
    public static CatDisplayProductCategory find(RefRecId _sharedData, RefRecId _productCategory, boolean _forUpdate = false)
    {
        CatDisplayProductCategory tblCatDisplayProductCategory;

        if (_sharedData && _productCategory)
        {
            tblCatDisplayProductCategory.selectForUpdate(_forUpdate);

            select firstonly * from tblCatDisplayProductCategory
                where tblCatDisplayProductCategory.SharedData == _sharedData
                    && tblCatDisplayProductCategory.ProductCategory == _productCategory;
        }

        return tblCatDisplayProductCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS131157";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS130978</DeveloperDocumentation>
	<Label>@SYS130977</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SharedData</TitleField1>
	<TitleField2>ProductCategory</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>SharedDataProductCategoryIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>SharedDataProductCategoryIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Origin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CatDisplayOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS190908</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SharedData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS190904</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SharedDataProductCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SharedData</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProductCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatDisplayCategorySharedInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatDisplayCategorySharedInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategorySharedInfo</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategorySharedInfo_CatDisplayProductCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SharedData</Name>
					<Field>SharedData</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProductCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProductCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResProductCategory_CatDisplayProductCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductCategory</Name>
					<Field>ProductCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryProductRecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>