<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailColorGroupTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailColorGroupTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkColorLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the number in bar code if the length is not same as the number in the bar code of all codes in the current color group.
    /// </summary>
    /// <remarks>
    /// throws error if the barcode is too long.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// Maximum length error in barcode.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// Number mismatch error in bar code.
    /// </exception>
    void checkColorLength()
    {
        RetailColorGroupTrans   colorGroupTrans,colorGroupTrans2;
        int newLength, lengthOfOthers;
        str newNumber;

        select firstonly colorGroupTrans
        where   colorGroupTrans.ColorGroup == this.ColorGroup
        &&      colorGroupTrans.Color != this.Color;

        if (colorGroupTrans)
        {
            newLength = strLen(this.NoInBarcode);
            lengthOfOthers = strLen(colorGroupTrans.NoInBarcode);
            if ((newLength > lengthOfOthers) && (lengthOfOthers != 0))
            {
                if (Global::hasGUI()
                    && Box::yesNo(strFmt('%1 %2', "@RET3934", "@RET3935"), DialogButton::Yes, "@RET3499", "@RET3936") == DialogButton::Yes)
                {
                    ttsbegin;
                    while select forupdate colorGroupTrans2
                    where   colorGroupTrans2.ColorGroup == this.ColorGroup
                    &&      colorGroupTrans2.Color != this.Color
                    {
                        newNumber = strIns(colorGroupTrans2.NoInBarcode,subStr('0000000000',1,(newLength - strLen(colorGroupTrans2.NoInBarcode))),1);
                        colorGroupTrans2.NoInBarcode = newNumber;
                        colorGroupTrans2.update();
                        ttscommit;
                    }
                }
                else
                {
                    throw error(strFmt("@RET3937",lengthOfOthers));
                }
            }
            else
            {
                if (newLength < lengthOfOthers)
                {
                    throw error(strFmt("@RET3938",lengthOfOthers));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateVariantDescriptions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the variant descriptions for all variants of product masters in the ColorGroup.
    /// </summary>
    /// <remarks>
    ///     All existing variant descriptions related to the color group will be replaced.
    /// </remarks>
    public void generateVariantDescriptions()
    {
        EcoResProductMaster ecoResProductMaster;

        while select RecId from ecoResProductMaster
                where ecoResProductMaster.RetailColorGroupId == this.ColorGroup
        {
            EcoResProductMaster::updateVariantDescriptions(ecoResProductMaster.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUpdateInventColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts or updates the record in <c>EcoResProductMasterColor</c> table.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    /// <remarks>
    /// This method is used to insert the records into <c>EcoResProductMasterColor</c> table if does not exist else update.
    /// </remarks>
    public boolean insertUpdateInventColor()
    {
        EcoResProductMaster         ecoResProductMaster;
        EcoResColor                 ecoResColor;
        EcoResProduct               ecoResProduct;
        EcoResProductMasterColor    ecoResProductMasterColor;

        ttsbegin;

        while select RecId from ecoResProductMaster
                where ecoResProductMaster.RetailColorGroupId == this.ColorGroup
        {
            // To check whether Color is existing or not into table EcoResProductMasterColor for particular product.
            select firstonly RecId from ecoResProduct
                where ecoResProduct.RecId == ecoResProductMaster.RecId
                 join forupdate ecoResProductMasterColor
                    where ecoResProductMasterColor.ColorProductMaster == ecoResProduct.RecId
                 join Name, RecId from ecoResColor
                    where ecoResColor.RecId == ecoResProductMasterColor.Color
                    &&    ecoResColor.Name  == this.Color;
            
            if (ecoResProductMasterColor.RecId)
            {
                this.populateColorGroupProperties(ecoResProductMasterColor);
                ecoResProductMasterColor.update();
            }
            else
            {
                // to check whether color exist.
                select firstonly Name from ecoResColor
                    where ecoResColor.Name == this.Color;
                
                if (ecoResColor)
                {
                    ecoResProductMasterColor.clear();
                    RetailColorGroupTrans::populateInventColorProperties(ecoResProductMasterColor, ecoResColor, ecoResProductMaster);
                    this.populateColorGroupProperties(ecoResProductMasterColor);
                    ecoResProductMasterColor.insert();
                }
            }
        }

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateColorGroupProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the given <c>EcoResProductMasterColor</c> record with the properties from <c>RetailColorGroupTrans</c>.
    /// </summary>
    /// <param name = "_ecoResProductMasterColor">The <c>EcoResProductMasterColor</c> record to be updated.</param>
    public void populateColorGroupProperties(EcoResProductMasterColor _ecoResProductMasterColor)
    {
        _ecoResProductMasterColor.RetailWeight          = this.Weight;
        _ecoResProductMasterColor.RetailDisplayOrder    = this.DisplayOrder;

        if (!_ecoResProductMasterColor.noInBarcode)
        {
            _ecoResProductMasterColor.noInBarcode = this.noInBarcode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInventColorProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates an uninitialized <c>EcoResProductMasterColor</c> record.
    /// </summary>
    /// <param name = "_ecoResProductMasterColor">The <c>EcoResProductMasterColor</c> record to be updated.</param>
    /// <param name = "_ecoResColor">The <c>EcoResColor</c> that referenced by the color group.</param>
    /// <param name = "_ecoResProductMaster">The <c>EcoResProductMaster</c> that the color belongs to.</param>
    public static void populateInventColorProperties(
        EcoResProductMasterColor    _ecoResProductMasterColor,
        EcoResColor                 _ecoResColor,
        EcoResProductMaster         _ecoResProductMaster)
    {
        _ecoResProductMasterColor.ColorProductDimensionAttribute    = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldNum(InventDim, InventColorId));
        _ecoResProductMasterColor.Color                             = _ecoResColor.RecId;
        _ecoResProductMasterColor.ColorProductMaster                = _ecoResProductMaster.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        System.Text.RegularExpressions.Match regExMatch;
        str expectedFormat = '^#[a-fA-F0-9]{6}$';

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailColorGroupTrans, NoInBarcode))
        {
            ret = ret && this.validateNoInBarcode();
        }

        if (this.HexCode)
        {
            regExMatch = System.Text.RegularExpressions.Regex::Match(this.HexCode, expectedFormat);
            ret = regExMatch.get_Success();

            if (!ret)
            {
                ret = checkFailed("@Retail:RetailHexCodeValidationError");
            }

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNoInBarcode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the number in bar code.
    /// </summary>
    /// <returns>
    /// true if two different colors have the same bar code number; otherwise, false.
    /// </returns>
    boolean validateNoInBarcode()
    {
        RetailColorGroupTrans   colorGroupTrans;

        if (this.NoInBarcode != "")
        {
            select firstonly colorGroupTrans
            where   colorGroupTrans.ColorGroup == this.ColorGroup
            &&      colorGroupTrans.Color != this.Color
            &&      colorGroupTrans.NoInBarcode == this.NoInBarcode;

            if (colorGroupTrans)
            {
                return checkFailed(strfmt("@RET3939", this.Color));
            }

            this.checkColorLength();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordHasChanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the record has changes.
    /// </summary>
    /// <returns>True if there are changes; otherwise, false.</returns>
    public boolean recordHasChanges()
    {
        return this.weight != this.orig().weight
            || this.DisplayOrder != this.orig().DisplayOrder
            || this.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInventColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the <c>EcoResProductMasterColor</c> table for all products using the given color group.
    /// </summary>
    /// <param name="_colorGroupId">
    /// The color group ID number.
    /// </param>
    /// <param name="_colorId">
    /// The color ID number.
    /// </param>
    /// <returns>
    /// true if record found; otherwise, false.
    /// </returns>
    public static boolean deleteInventColor(RetailColorGroupId _colorGroupId, RetailColorId _colorId)
    {
        EcoResProductMaster         ecoResProductMaster;
        EcoResProduct               ecoResProduct;
        EcoResProductMasterColor    ecoResProductMasterColor;
        EcoResColor                 ecoResColor;

        while select RecId from ecoResProductMaster
            where ecoResProductMaster.RetailColorGroupId == _colorGroupId
        {
            select firstonly RecId from ecoResProduct
                where ecoResProduct.RecId == ecoResProductMaster.RecId
                 join forupdate ecoResProductMasterColor
                    where ecoResProductMasterColor.ColorProductMaster == ecoResProduct.RecId
                 join Name, RecId from ecoResColor
                    where ecoResColor.RecId == ecoResProductMasterColor.Color
                    &&    ecoResColor.Name  == _colorId;

            if (ecoResProductMasterColor)
            {
                if (ecoResProductMasterColor.validateDelete())
                {
                    ecoResProductMasterColor.delete();
                }
                else
                {
                    return false;
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailColorGroupTrans</c> table.
    /// </summary>
    /// <param name="_groupId">
    /// The color group ID number of the color group lines record to find.
    /// </param>
    /// <param name="_colorId">
    /// The color ID number of the color group lines record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailColorGroupTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailColorGroupTrans find(RetailColorGroupId   _groupId,
                                         RetailColorId         _colorId,
                                         boolean _forUpdate = false)
    {
        RetailColorGroupTrans  colorGroupTrans;

        if (_groupId && _colorId)
        {
            colorGroupTrans.selectForUpdate(_forUpdate);

            select firstonly colorGroupTrans
                index hint ColorGroupColorIdIdx
                where   colorGroupTrans.ColorGroup == _groupId
                &&      colorGroupTrans.Color == _colorId;
        }

        return colorGroupTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailColorGroupTrans</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The reference record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailColorGroupTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailColorGroupTrans findByRecId(RefRecId _recId,
                                                    boolean  _forUpdate = false)
    {
        RetailColorGroupTrans    retailColorGroupTrans;

        if (_recId)
        {
            retailColorGroupTrans.selectForUpdate(_forUpdate);

            select firstOnly retailColorGroupTrans
                where retailColorGroupTrans.RecId == _recId;
        }

        return retailColorGroupTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the record in <c>RetailColorGroupTrans</c> table
    /// </summary>
    public void insert()
    {
        super();

        if (RetailMerchandisingKillSwitch::enableUpdateProductDimensionsInBatchJob())
        {
            RetailUpdateProductDimensionsWithVariantGroupsController::runFromColorGroupTransTable(this.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailColorGroupTrans</c> table
    /// </summary>
    public void update()
    {
        if (RetailMerchandisingKillSwitch::enableUpdateProductDimensionsInBatchJob() && this.recordHasChanges())
        {
            RetailUpdateProductDimensionsWithVariantGroupsController::runFromColorGroupTransTable(this.RecId);
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EcoResProductColor</ConfigurationKey>
	<DeveloperDocumentation>@RET4160443</DeveloperDocumentation>
	<Label>@RET3052</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>colorGroup</TitleField1>
	<TitleField2>color</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ColorGroupColorIdIdx</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ColorGroupColorIdIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>colorGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>color</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>noInBarcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>colorGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>colorGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>color</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>noInBarcode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Barcode</Name>
			<Label>@RET3053</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>noInBarcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>colorGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Weight</Name>
			<Label>@RET3055</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>weight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>color</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailColorId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>colorGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailColorGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DisplayOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDisplayOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>noInBarcode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNoInBarcode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>RetailShortName</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Url</Name>
			<ExtendedDataType>MediaUrl</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HexCode</Name>
			<ExtendedDataType>RetailHexCode</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefinerGroup</Name>
			<ExtendedDataType>RetailRefinerGroup</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ColorGroupColorIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>colorGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>color</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>RetailDimensionGroupTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Dimension</MapField>
					<MapFieldTo>color</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DimensionGroup</MapField>
					<MapFieldTo>colorGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DisplayOrder</MapField>
					<MapFieldTo>DisplayOrder</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>noInBarcode</MapField>
					<MapFieldTo>noInBarcode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>EcoResColor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResColor</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>color</Name>
					<SourceEDT>RetailColorId</SourceEDT>
					<Field>color</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailColorGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailColorGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>colorGroup</Name>
					<SourceEDT>RetailColorGroupId</SourceEDT>
					<Field>colorGroup</Field>
					<RelatedField>colorGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>groupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>