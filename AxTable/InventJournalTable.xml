<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventJournalTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
     public void delete()
    {
        InventJournalTrans  inventJournalTrans;

        ttsBegin;
        if (this.OffSessionId_RU)
        {
            OfficialsServ_RU::releaseOffsessionId(this.OffSessionId_RU);
        }

        delete_from inventJournalTrans where inventJournalTrans.JournalId == this.JournalId;

        super();

        InventBatchJournal::onJournalDelete(this);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventJournalName</Name>
				<Source><![CDATA[
    void initFromInventJournalName(InventJournalName inventJournalName)
    {
        JournalTableData::newTable(this).initFromJournalName(inventJournalName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void insert()
    {
        // <GEERU>
        InventJournalReportParms_RU inventJournalReportParms;
         // </GEERU>

        ttsbegin;

        if (!this.JournalId)
        {
            this.JournalId = JournalTableData::newTable(this).nextJournalId();
        }
        // <GEERU>
        select count(RecId) from inventJournalReportParms
            where inventJournalReportParms.InventJournalNameId == this.JournalNameId;

        if (inventJournalReportParms.RecId)
        {
            this.OffSessionId_RU = new OfficialsServ_RU().getNewSessionId();
        }
        // </GEERU>

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventBatchJournalRelated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a value indicating if this inventory journal was created from an inventory batch journal.
    /// </summary>
    /// <returns>
    ///    true if this inventory journal was created from an inventory batch journal.
    /// </returns>
    public boolean isInventBatchJournalRelated()
    {
        return this.JournalType == InventJournalType::BOM
            && InventBatchJournal::existForBOMJournalId(this.JournalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    #isoCountryRegionCodes
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            if (this.Posted &&
                !InventJournalName::find(this.JournalNameId).DeletePostedLines)
            {
                ret = false;
            }
        }

        ret = ret & this.checkJournalCanBeModifiedByCurrentUser();

        if (!this.Posted)
        {
            if (ret && this.isWFApprovalApproved())
            {
                ret = checkFailed("@SYS109636");
            }

            if (ret && this.isWorkflowUsed() && !this.editableInWorkflow())
            {
                ret = checkFailed("@SCM:CannotDeleteJournalInWorkflowProcess");
            }
        }
        else if (this.JournalType == InventJournalType::project)
        {
            ret = checkFailed("@SYS21497");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite(JournalTableData  _journalTableData = JournalTableData::newTable(this))
    {
        boolean ret = true;

        ret = _journalTableData.validateWritePre(ret);

        if (!this.VoucherNumberSequenceTable && this.voucherNumberSequenceTableMandatory())
        {
            ret = checkFailed(strFmt("@SYS26332", new DictField(this.TableId, fieldNum(InventJournalTable, VoucherNumberSequenceTable)).label()));
        }

        ret = ret & this.checkJournalNameHasSameJournalType();

        ret = ret & this.checkJournalCanBeModifiedByCurrentUser(_journalTableData);

        ret = ret & this.checkJournalIsNotPosted();

        if (ret && this.isWFApprovalApproved())
        {
            ret = checkFailed("@SYS109636");
        }

        ret = super() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherNumberSequenceTableMandatory</Name>
				<Source><![CDATA[
    public boolean voucherNumberSequenceTableMandatory()
    {
        if (this.JournalType == InventJournalType::TagCounting)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(InventJournalId inventJournalId)
    {
        if (inventJournalId && !InventJournalTable::exist(inventJournalId))
        {
            return checkFailed(strFmt(InventJournalTable::txtNotExist(),inventJournalId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(InventJournalId inventJournalId)
    {
        return inventJournalId && (select firstonly inventJournalTable
                    where inventJournalTable.JournalId == inventJournalId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventJournalTable find(InventJournalId inventJournalId, boolean _forUpdate = false)
    {
        InventJournalTable inventJournalTable;

        inventJournalTable.selectForUpdate(_forUpdate);

        if (inventJournalId)
        {
            select firstonly inventJournalTable
                where inventJournalTable.JournalId == inventJournalId;
        }

        return inventJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    static InventJournalTable findByRecId(RecId _recId, boolean _forUpdate = false)
    {
        InventJournalTable inventJournalTable;

        if (_recId)
        {
            inventJournalTable.selectForUpdate(_forUpdate);

            select firstonly inventJournalTable
                where inventJournalTable.RecId == _recId;
        }
        
        return inventJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventJournalUnlockButtonProperties</Name>
				<Source><![CDATA[
    public static void setInventJournalUnlockButtonProperties(FormFunctionButtonControl inventJournalUnlockButton, NoYes _isSystemBlocked, NoYes _isPosted)
    {
        inventJournalUnlockButton.visible(true);
        if (_isSystemBlocked == NoYes::No || _isPosted == NoYes::Yes)
        {
            inventJournalUnlockButton.enabled(false);
        }
        else
        {
            inventJournalUnlockButton.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the total number of lines for an inventory journal header.
    /// </summary>
    /// <param name = "_inventJournalTable">An inventory journal header record.</param>
    public static void initTotal(InventJournalTable _inventJournalTable)
    {
        InventJournalTrans      inventJournalTrans;
        InventJournalTrans_Tag  inventJournalTrans_Tag;

        switch (_inventJournalTable.JournalType)
        {
            case InventJournalType::Movement:
            case InventJournalType::LossProfit:
            case InventJournalType::Transfer:
            case InventJournalType::BOM:
            case InventJournalType::Count:
            case InventJournalType::project:
            case InventJournalType::OwnershipChange:
                select count(RecId) from inventJournalTrans
                    where inventJournalTrans.JournalId == _inventJournalTable.JournalId;

                _inventJournalTable.NumOfLines     = any2int(inventJournalTrans.RecId);
                break;
            case InventJournalType::TagCounting:
                select count(RecId) from inventJournalTrans_Tag
                    where inventJournalTrans_Tag.JournalId == _inventJournalTable.JournalId;

                _inventJournalTable.NumOfLines     = any2int(inventJournalTrans_Tag.RecId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalId2inventDimParm</Name>
				<Source><![CDATA[
    static InventDimParm journalId2inventDimParm(InventJournalId inventJournalId)
    {
        InventDimParm inventDimParm;

        InventDimFixedClass::inventDimFixed2InventDimParm(InventJournalTable::find(inventJournalId).InventDimFixed,inventDimParm);
        return inventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(InventJournalId inventJournalId)
    {
        return InventJournalTable::find(inventJournalId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS17145";
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventJournalTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the <c>InventJournalTable_IN</c> table.
    /// </summary>
    /// <returns>
    /// The table <c>InventJournalTable_IN</c> associated with the current record.
    /// </returns>
    public InventJournalTable_IN InventJournalTable_IN()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(InventJournalTable_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInventJournalTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the <c>InventJournalTable_IN</c> table
    /// </summary>
    /// <param name="_inventJournalTable_IN">
    /// InventJournalTable_IN is packed.
    /// </param>
    public void packInventJournalTable_IN(InventJournalTable_IN _inventJournalTable_IN)
    {
        _inventJournalTable_IN.InventJournalTable = this.RecId;
        this.SysExtensionSerializerMap::packExtensionTable(_inventJournalTable_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>type</Name>
				<Source><![CDATA[
    RetailInventJournalType type()
    {
        return RetailInventJournalType::construct(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        RetailInventJournalType  inventJournalType;

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            inventJournalType = this.type();
            inventJournalType.modifiedField(_fieldId);

            // Refresh to update any other form controls displaying this field.
            if (FormDataUtil::isFormDataSource(this))
            {
                FormDataUtil::getFormDataSource(this).refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimParmAllowedForCounting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the <c>InventDimParm</c> record with the dimensions that can be enabed for counting.
    /// </summary>
    /// <returns>The <c>InventDimParm</c> record with the dimensions that can be enabed for counting.</returns>
    public static InventDimParm inventDimParmAllowedForCounting()
    {
        InventDimParm enabled;

        enabled.initConsistentDimensionsGeneral();
        enabled.toggleAllInventDim();

        return enabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDimParmEnabledForCounting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the <c>InventDimParm</c> record with the dimensions that must be enabed for counting by default.
    /// </summary>
    /// <param name="_lastSelectedInventDimParm">The dimensions that were enabled for the last journal.</param>
    /// <returns>The <c>InventDimParm</c> record with the default fixed dimensions marked.</returns>
    public static InventDimParm defaultInventDimParmEnabledForCounting(InventDimParm _lastEnabledInventDimParm = null)
    {
        InventDimParm consistent;
        InventDimParm used;
        InventDimParm unUsedConsistent;
        InventDimParm checked;
        InventDimParm visible;

        consistent.initConsistentDimensionsGeneral();    // all consistent dimensions enabled
        used.initConsistentDimAllGrp();               // used consistent dimensions (active in at least 1 group)
        unUsedConsistent = InventDimParm::xorParms(consistent, used); // not used consistent dimensions
        unUsedConsistent.toggleAllInventDim();        // all but unused consistent dimensions

        checked = InventDimParm::orParms(_lastEnabledInventDimParm, used);    // mark consistent dimensions and previously used
        checked = InventDimParm::andParms(checked, unUsedConsistent); // clear unused consistent dimensions

        return checked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalCanBeModifiedByCurrentUser</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies that the journal can be modified by the current user.
    /// </summary>
    /// <param name="_journalTableData">The <c>JournalTableData</c> object for the current journal; optional.</param>
    /// <returns>true, if the journal can be modified by the current user; otherwise, false.</returns>
    public boolean checkJournalCanBeModifiedByCurrentUser(InventJournalTableData _journalTableData = null)
    {
        if (this.RecId)
        {
            InventJournalTableData journalTableData = _journalTableData ? _journalTableData : new InventJournalTableData(this);

            if (journalTableData.isJournalInUseAndCannotBeAutoUnlocked())
            {
                return checkFailed(journalTableData.journalIsInUseAndCannotBeAutoUnlockedValidationMessage());
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalIsNotPosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies that the journal is not posted.
    /// </summary>
    /// <returns>true, if the journal is not posted; otherwise, false.</returns>
    public boolean checkJournalIsNotPosted()
    {
        if (this.Posted)
        {
            return checkFailed("@SCM:InventPostedJournalsCannotBeEdited");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournalNameHasSameJournalType</Name>
				<Source><![CDATA[
    private boolean checkJournalNameHasSameJournalType()
    {
        if (!this.RecId && this.JournalNameId)
        {
            InventJournalName journalName = InventJournalName::find(this.JournalNameId);
            if (this.JournalType != journalName.JournalType)
            {
                return checkFailed(strFmt("@SCM:InventJournalNameCannotBeUsedBecauseJournalTypesMismatch", this.JournalNameId, journalName.JournalType));
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canJournalTypeUseCountingStatusRegistration</Name>
				<Source><![CDATA[
	/// <summary>
    /// Determines if the journal type can use counting status registration.
    /// </summary>
    /// <param name = "_journalType">The journal type.</param>
    /// <returns>true if the journal type can use counting status registration; otherwise, false.</returns>
    public static boolean canJournalTypeUseCountingStatusRegistration(InventJournalType _journalType)
    {
        return (_journalType == InventJournalType::Count);
	}

]]></Source>
			</Method>
			<Method>
				<Name>isCountingStatusRegistrationEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if counting status registration is enabled. 
    /// </summary>
    /// <returns>true if counting status registration is enabled; otherwise, false.</returns>
    public boolean isCountingStatusRegistrationEnabled()
    {
        if (!InventJournalTable::canJournalTypeUseCountingStatusRegistration(this.JournalType))
        {
            return false;
		}

		return (this.CountingStatusRegistrationPolicy == InventCountingStatusRegistrationPolicy::EnableCountingStatusRegistration);
    }

]]></Source>
			</Method>
			<Method>
				<Name>consistencyCheckFix</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Detect and correct wrong posted status of <c>InventJournalTable</c> records.
    /// </summary>
    /// <param name="_inventConsistencyCheck_Journal">
    ///    An instance of the <c>InventConsistencyCheck_Journal</c> class.
    /// </param>
    /// <remarks>
    ///    Any <c>InventJournalTable</c> records with unposted status and its journal line has already been posted, then a warning will be reported.
    ///    If all of its journal lines have been posted, then the status of <c>InventJournalTable</c> will be corrected to posted status.
    /// </remarks>
    public void consistencyCheckFix(InventConsistencyCheck_Journal  _inventConsistencyCheck_Journal)
    {
        if (!this.Posted)
        {
            InventTrans         inventTrans;
            InventTransOrigin   inventTransOrigin;
            InventJournalTrans  inventJournalTrans;

            select firstonly RecId from inventTrans
                where (  inventTrans.StatusIssue   == StatusIssue::Sold
                      || inventTrans.StatusReceipt == StatusReceipt::Purchased)
                exists join inventTransOrigin
                where inventTransOrigin.RecId  == inventTrans.InventTransOrigin
                exists join inventJournalTrans
                where inventJournalTrans.InventTransId == inventTransOrigin.InventTransId
                   && inventJournalTrans.JournalId     == this.JournalId;

            if (inventTrans.RecId)
            {
                InventTrans inventTransWithoutFinancialUpdate;
                inventTransOrigin = null;
                inventJournalTrans = null;

                SysDictEnum dictEnum = new SysDictEnum(enumnum(InventJournalType));
                boolean existsPartialJournalLinesUpdated = false;

                while select LineNum from inventJournalTrans
                    where inventJournalTrans.JournalId     == this.JournalId
                    exists join inventTransOrigin
                    where inventTransOrigin.InventTransId  == inventJournalTrans.InventTransId
                    exists join inventTransWithoutFinancialUpdate
                    where (  inventTransWithoutFinancialUpdate.StatusIssue    > StatusIssue::Sold
                          || inventTransWithoutFinancialUpdate.StatusReceipt  > StatusReceipt::Purchased)
                       && inventTransWithoutFinancialUpdate.InventTransOrigin == inventTransOrigin.RecId
                {
                    if (!existsPartialJournalLinesUpdated)
                    {
                        checkFailed(strFmt("@SCM:InventoryJournalStatusNotPostedWhenPartialLinesAlreadyPosted",
                                    this.JournalId,
                                    dictEnum.value2Label(this.JournalType)));
                        _inventConsistencyCheck_Journal.updateNotCorrected();
                        existsPartialJournalLinesUpdated = true;
                    }

                    checkFailed(strFmt("@SCM:InventoryJournalLineNotPosted", this.JournalId, inventJournalTrans.LineNum));
                }              
               
                if (!existsPartialJournalLinesUpdated)
                {                
                    checkFailed(strFmt("@SCM:InventoryJournalStatusNotPostedWhenAllLinesAlreadyPosted",
                                    this.JournalId,
                                    dictEnum.value2Label(this.JournalType)));

                    if (_inventConsistencyCheck_Journal.checkFix() == CheckFix::Fix)
                    {
                        ttsbegin;
                        if (!this.selectForUpdate())
                        {
                            this.selectForUpdate(true);
                        }
                        this.Posted = NoYes::Yes;
                        if (this.PostedDateTime == utcDateTimeNull())
                        {
                            this.PostedDateTime = DateTimeUtil::getSystemDateTime();
                        }
                        this.doUpdate();
                        ttscommit;
                        _inventConsistencyCheck_Journal.updateCorrected();
                    }
                    else
                    {
                        _inventConsistencyCheck_Journal.updateNotCorrected();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWFApprovalStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// If the journal is created using journal name that workflow is enabled the approval status should initialized as Draft.
    /// </summary>
    public void initWFApprovalStatus(InventJournalName _inventJournalName, boolean _isJournalAlreadyApproved = false)
    {
        // Is the current status not associated to an active running workflow instance?
        if (this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::Approved &&
            this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::None     &&
            this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::NotSubmitted)
        {
            throw error(strFmt("@SYS111649", this.JournalId, this.JournalNameId));
        }

        if (_inventJournalName.checkWorkflowApprovalEnabled(true))
        {
            // Workflow approval is enabled for the journal.
            this.WorkflowApprovalStatus = InventJournalWorkflowApprovalStatus::NotSubmitted;
        }
        else
        {
            // Workflow approval is disabled for the journal.
            this.WorkflowApprovalStatus = InventJournalWorkflowApprovalStatus::None;

            if (_isJournalAlreadyApproved)
            {
                // Notify the user that the journal's workflow status has been reset to "None".
                info("@SYS111654");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the related journal name.
    /// </summary>
    /// <returns>
    /// The <c>InventJournalName</c> record.
    /// </returns>
    public InventJournalName inventJournalName()
    {
        return InventJournalName::find(this.JournalNameId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWFApprovalApproved</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a journal has been approved.
    /// </summary>
    /// <returns>
    /// True if the workflow approval status for the journal is <c>Approved</c>; otherwise, false.
    /// </returns>
    public boolean isWFApprovalApproved()
    {
        return this.WorkflowApprovalStatus == InventJournalWorkflowApprovalStatus::Approved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInWFApprovalProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a journal is in the workflow approval process.
    /// </summary>
    /// <returns>
    /// True if the journal is in the workflow approval process; otherwise, false.
    /// </returns>
    public boolean isInWFApprovalProcess()
    {
        return this.WorkflowApprovalStatus && this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editableInWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates where a journal in WF process is editable.
    /// </summary>
    /// <returns>
    /// True if the journal is not in submit status; otherwise, false.
    /// </returns>
    public boolean editableInWorkflow()
    {
        if (!this.isInWFApprovalProcess())
        {
            return true;
        }

        return this.isInWFApprovalProcess() && 
            this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::Submitted &&
            this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::PendingApproval &&
            this.WorkflowApprovalStatus != InventJournalWorkflowApprovalStatus::Approved;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkflowUsed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates where a journal is workflow enabled type.
    /// </summary>
    /// <returns>
    /// True is the journal name is with workflow enabled; otherwise, false.
    /// </returns>
    public boolean isWorkflowUsed()
    {
        InventJournalName journalName =  InventJournalName::find(this.JournalNameId);
        if (journalName)
        {
            return journalName.checkWorkflowApprovalEnabled();
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>needEnableWFDropDialog</Name>
				<Source><![CDATA[
    public boolean needEnableWFDropDialog(boolean _isWorkflowUsed = false)
    {
        return _isWorkflowUsed && this.Posted == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InventJournalTable, InventSiteId):
            case fieldNum(InventJournalTable, InventLocationId):
                if (this.InventSiteId
                    && this.InventLocationId
                    && InventSiteWarehouseValidationFlight::instance().isEnabled()
                    && InventLocation::find(this.InventLocationId).InventSiteId != this.InventSiteId)
                {
                    ret = checkFailed(strFmt("@SYS104861", this.InventLocationId, this.InventSiteId));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123819</DeveloperDocumentation>
	<Label>@SYS22111</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowArchival>Yes</AllowArchival>
	<AllowRetention>Yes</AllowRetention>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JournalIdx</ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Inventory</Modules>
	<PrimaryIndex>JournalIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventJournalTrans_Tag</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>InventJournalTrans_Tag</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>JournalError</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>JournalError</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumOfLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SystemBlocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reservation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailRetailStatusType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Blocking</Name>
			<Label>@SYS50247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BlockUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SystemBlocked</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocType_PL</Name>
			<Label>@GLS110071</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDocType_PL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Employee</Name>
			<Label>@SYS4705</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>History</Name>
			<Label>@SYS10575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalIdOrignal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reservation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DetailSummary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeletePostedLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Storno_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RetailReplenishment</Name>
			<Label>@RET771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailReplenishmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FSHReplenishmentRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RetailStoreInventory</Name>
			<Label>@RET1575</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Source</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberSequenceTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totals</Name>
			<Label>@SYS8311</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumOfLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherDraw</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Counting</Name>
			<Label>@SYS2828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountingStatusRegistrationPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalBlockUserGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalBlockUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeletePostedLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDeletePostedLines</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DetailSummary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDetailSummary</ExtendedDataType>
			<EnumType>DetailSummary</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FSHReplenishmentRef</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplenishmentRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventDimFixed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimFixed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventDocType_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<EnumType>PlInventDocType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchInventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalIdOrignal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalIdOrignal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNameId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalNameId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@Sys11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumOfLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalNumOfLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OffSessionId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OffSessionId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>PostedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalPostedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostedUserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JournalPostedUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reservation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ItemReservation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailReplenishmentType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailReplenishmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailRetailStatusType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailRetailStatusType</ExtendedDataType>
			<EnumType>RetailRetailStatusTypeBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Source</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalSource</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Storno_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Storno_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SystemBlocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalSystemBlocked</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherChange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalVoucherChange</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherDraw</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JournalVoucherDraw</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VoucherNumberSequenceTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalVoucherNumberSeq</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRetailCommitted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CountingStatusRegistrationPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventCountingStatusRegistrationPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalOriginType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalOriginType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowApprovalStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalWorkflowApprovalStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventoryServiceJournalExpectedStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>InventInventoryDataServiceTransactionFeature</FeatureClass>
			<EnumType>InventoryServiceJournalExpectedStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PostedJouirnalIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FSHPurchIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>FSHReplenishmentRef</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PostedNumOfLinesJournalOriginTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<ConfigurationKey>CDSIntegration</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NumOfLines</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalOriginType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalTypePostedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PostedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>JournalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionLoginDateTime</MapField>
					<MapFieldTo>SessionLoginDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedDateTime</MapField>
					<MapFieldTo>PostedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimesheetNbr</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SystemBlocked</MapField>
					<MapFieldTo>SystemBlocked</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
					<MapFieldTo>Posted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherNumberSeq</MapField>
					<MapFieldTo>VoucherNumberSequenceTable</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>JournalNameId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserId</MapField>
					<MapFieldTo>BlockUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherDraw</MapField>
					<MapFieldTo>VoucherDraw</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DetailSummary</MapField>
					<MapFieldTo>DetailSummary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeletePostedLines</MapField>
					<MapFieldTo>DeletePostedLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalType</MapField>
					<MapFieldTo>JournalType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SessionId</MapField>
					<MapFieldTo>SessionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumOfLines</MapField>
					<MapFieldTo>NumOfLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherChange</MapField>
					<MapFieldTo>VoucherChange</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostedUserId</MapField>
					<MapFieldTo>PostedUserId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserGroupId</MapField>
					<MapFieldTo>BlockUserGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalIdOriginal</MapField>
					<MapFieldTo>JournalIdOrignal</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxObligationCompany</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventStorageDimMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>InventLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventSiteId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
					<MapFieldTo>Posted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BlockingUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BlockingUser</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserId</Name>
					<SourceEDT>JournalBlockUserId</SourceEDT>
					<Field>BlockUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BlockingUserGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserGroupId</Name>
					<Field>BlockUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNameId</Name>
					<Field>JournalNameId</Field>
					<RelatedField>JournalNameId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NamesIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventLocation_InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventSite</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventSite_InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JournalError</Name>
			<EntityRelationshipRole>@SYS123820</EntityRelationshipRole>
			<RelatedTable>JournalError</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>RefTableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerDimension_InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequenceTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VoucherNumberSequenceTable</Name>
					<Field>VoucherNumberSequenceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OfficialsTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OfficialsTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OfficialsTrans</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>InventJournalTable</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffSessionId_RU</Name>
					<Field>OffSessionId_RU</Field>
					<RelatedField>OffSessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginalJournal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalIdOrignal</Name>
					<SourceEDT>InventJournalIdOrignal</SourceEDT>
					<Field>JournalIdOrignal</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PostingUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PostingUser</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostedUserId</Name>
					<SourceEDT>JournalPostedUserId</SourceEDT>
					<Field>PostedUserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>RetailReplenishmentType</Name>
					<Field>RetailReplenishmentType</Field>
					<ValueStr>RetailReplenishmentType::CrossDocking</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FSHReplenishmentRef</Name>
					<Field>FSHReplenishmentRef</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailBuyersPushTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailBuyersPushTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RetailBuyersPushTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>RetailReplenishmentType</Name>
					<Field>RetailReplenishmentType</Field>
					<ValueStr>RetailReplenishmentType::BuyersPush</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FSHReplenishmentRef</Name>
					<Field>FSHReplenishmentRef</Field>
					<RelatedField>BuyersPushId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>