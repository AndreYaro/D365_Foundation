<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAServiceTaskRelation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAServiceTaskRelation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementDescription</Name>
				<Source><![CDATA[
    display Description agreementDescription()
    {
        Description description = '';

        if (this.RelTableId == tableNum(SMAAgreementTable))
        {
            description = SMAAgreementTable::find(this.RelKeyId).AgreementDescription;
        }

        return description;
    }
]]></Source>
			</Method>
			<Method>
				<Name>serviceDescription</Name>
				<Source><![CDATA[
    display Description serviceDescription()
    {
        Description description = '';

        if (this.RelTableId == tableNum(SMAServiceOrderTable))
        {
            description = SMAServiceOrderTable::find(this.RelKeyId).Description;
        }

        return description;
    }
]]></Source>
			</Method>
			<Method>
				<Name>showRelationOrigin</Name>
				<Source><![CDATA[
    display SMARelationType showRelationOrigin()
    {
        SMARelationType relationType;

        switch (this.RelTableId)
        {
            case tableNum(SMAAgreementTable):
                relationType = SMARelationType::Agreement;
                break;

            case tableNum(SMAServiceOrderTable):
                relationType = SMARelationType::ServiceOrder;
                break;

            default:
                relationType = SMARelationType::None;
        }

        return relationType;
    }
]]></Source>
			</Method>
			<Method>
				<Name>taskDesciption</Name>
				<Source><![CDATA[
    display SMAServiceTaskDesciption taskDesciption()
    {
        return SMAServiceTask::find(this.ServiceTaskId).Description;
    }
]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;
        SMAAgreementId  agreementId;

        ret = super();

        if (this.RelTableId == tableNum(SMAServiceOrderTable))
        {
            agreementId = SMAServiceOrderTable::find(this.RelKeyId).AgreementId;
        }

        if (agreementId && SMAServiceTaskRelation::existRelation(tableNum(SMAAgreementTable), agreementId, this.ServiceTaskId))
        {
            // Task is already created on the agreement. It cannot be created on the service order.
            ret = ret && checkFailed("@SYS109214");
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>createRelation</Name>
				<Source><![CDATA[
        public static void createRelation(SMAServiceTaskId _taskId, SMATableKeyId _keyId, tableId _tableId, SMADescription _extNote = '', SMADescription _intNote = '')
    {
        SMAServiceTaskRelation newRelation;

        if (_taskId && _tableId && _keyId)
        {
            ttsbegin;

            newRelation.clear();

            newRelation.ServiceTaskId       = _taskId;
            newRelation.RelTableId          = _tableId;
            newRelation.RelKeyId            = _keyId;
            newRelation.DescriptionExternal = _extNote;
            newRelation.DescriptionInternal = _intNote;

            newRelation.insert();

            ttscommit;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>existRelation</Name>
				<Source><![CDATA[
        public static boolean existRelation(tableId _tableId, SMATableKeyId _keyId, SMAServiceTaskId _taskId)
    {
        SMAAgreementId  agreementId;
        boolean         ret         = false;

        if (!(_tableId && _keyId && _taskId))
        {
            return ret;
        }

        switch (_tableId)
        {
            case tableNum(SMAServiceOrderTable):
                agreementId = SMAServiceOrderTable::find(_keyId).AgreementId;
                ret = (select firstonly RecId from smaServiceTaskRelation
                                    where smaServiceTaskRelation.RelTableId == tableNum(SMAAgreementTable)
                                    && smaServiceTaskRelation.RelKeyId      == agreementId
                                    && smaServiceTaskRelation.ServiceTaskId == _taskId).RecId != 0;
                if (ret)
                {
                    break;
                }

            case tableNum(SMAAgreementTable):

                ret = (select firstonly RecId from smaServiceTaskRelation
                                    where smaServiceTaskRelation.RelTableId == _tableId
                                    && smaServiceTaskRelation.RelKeyId      == _keyId
                                    && smaServiceTaskRelation.ServiceTaskId == _taskId).RecId != 0;
                break;
            default:
                // Table %1 has no relation.
               throw error(strFmt("@SYS89145", tableId2name(_tableId)));
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static SMAServiceTaskRelation find(tableId _tableId, SMATableKeyId _keyId, SMAServiceTaskId _taskId, boolean _forupdate = false)
    {
        SMAServiceTaskRelation serviceTaskRelation = null;

        if (_tableId && _keyId && _taskId)
        {
            serviceTaskRelation.selectForUpdate(_forupdate);

            select firstonly serviceTaskRelation
                where serviceTaskRelation.RelTableId     == _tableId &&
                      serviceTaskRelation.RelKeyId      == _keyId &&
                      serviceTaskRelation.ServiceTaskId == _taskId ;
        }

        return serviceTaskRelation;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findAgreement</Name>
				<Source><![CDATA[
        public static SMAServiceTaskRelation findAgreement(SMAAgreementId _agreement, boolean _forupdate = false)
    {
        SMAServiceTaskRelation serviceTaskRelation = null;

        if (_agreement)
        {
            serviceTaskRelation.selectForUpdate(_forupdate);

            select firstonly serviceTaskRelation where serviceTaskRelation.RelTableId == tableNum(SMAAgreementTable) && serviceTaskRelation.RelKeyId == _agreement;
        }

        return serviceTaskRelation;
    }
]]></Source>
			</Method>
			<Method>
				<Name>findServiceOrder</Name>
				<Source><![CDATA[
        public static SMAServiceTaskRelation findServiceOrder(SMAAgreementId _serviceOrder, boolean _forupdate = false)
    {
        SMAServiceTaskRelation serviceTaskRelation = null;

        if (_serviceOrder)
        {
            serviceTaskRelation.selectForUpdate(_forupdate);

            select firstonly serviceTaskRelation where serviceTaskRelation.RelTableId == tableNum(SMAServiceOrderTable) && serviceTaskRelation.RelKeyId == _serviceOrder;
        }

        return serviceTaskRelation;
    }
]]></Source>
			</Method>
			<Method>
				<Name>queryFilterValue</Name>
				<Source><![CDATA[
        static str queryFilterValue(QueryBuildDataSource _qbds, SMAAgreementId _agreementId, SMAServiceOrderId _serviceOrderId)
    {
        return strFmt('(((%6 == \"%3\") && (%1.%7 == %2)) || ((%6 == \"%4\") && (%1.%7 == %5)))',
                      _qbds.name(),
                      tableNum(SMAServiceOrderTable),
                      _serviceOrderId,
                      _agreementId,
                      tableNum(SMAAgreementTable),
                      fieldStr(SMAServiceTaskRelation, RelKeyId),
                      fieldStr(SMAServiceTaskRelation, RelTableId));
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122719</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>SMAServiceTaskRelations</FormRef>
	<Label>@SYS328831</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ServiceTaskId</TitleField1>
	<TitleField2>RelKeyId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TableKeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>TableKeyIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS80470</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DescriptionInternal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DescriptionExternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExternalHide</Name>
			<Label>@SYS30502</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DescriptionExternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InternalHide</Name>
			<Label>@SYS30501</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DescriptionInternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>taskDesciption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relation</Name>
			<Label>@SYS9114</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceTask</Name>
			<Label>@SYS87527</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DescriptionExternal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMADescription</ExtendedDataType>
			<Label>@SYS30502</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DescriptionInternal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMADescription</ExtendedDataType>
			<Label>@SYS30501</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RelKeyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATableKeyId</ExtendedDataType>
			<Label>@SYS9114</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RelTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SMA</ConfigurationKey>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Label>@SYS2720</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceTaskId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceTaskId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TableKeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RelTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RelKeyId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ServiceTaskId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AgreementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceAgreement</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ServiceTask</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ServiceOrderTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceOrderTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceOrder</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceTask</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>ServiceOrderId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ServiceTask</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceTask</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceTask</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceTask</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceTaskId</Name>
					<Field>ServiceTaskId</Field>
					<RelatedField>ServiceTaskId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAAgreementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceAgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceTask</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceTaskId</Name>
					<Field>ServiceTaskId</Field>
					<RelatedField>ServiceTaskId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAServiceOrderLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceOrderLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceOrderLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceTask</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>ServiceOrderId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceTaskId</Name>
					<Field>ServiceTaskId</Field>
					<RelatedField>ServiceTaskId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>