<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmpVendStandardInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class tmpVendStandardInvoice extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromVendInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>tmpVendStandardInvoice</c> record from a <c>VendInvoiceJour</c> record.
    /// </summary>
    /// <param name="_vendInvoiceJour">
    /// The <c>VendInvoiceJour</c> record from which to initialize.
    /// </param>
    internal void initFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
    {
        this.clear();
        this.PurchId = _vendInvoiceJour.PurchId;
        this.InvoiceNum = _vendInvoiceJour.InvoiceId;
        this.CurrencyCode = _vendInvoiceJour.CurrencyCode;
        this.InvoiceDate = _vendInvoiceJour.InvoiceDate;
        this.InvoiceAccount = _vendInvoiceJour.InvoiceAccount;
        this.InvoiceAmount = _vendInvoiceJour.InvoiceAmount;
        this.LedgerVoucher = _vendInvoiceJour.LedgerVoucher;
        this.InvoiceRecId = _vendInvoiceJour.RecId;
        this.SettlementPostingDate = this.getDateInOpenPeriod(this.InvoiceDate);
        this.IsPosted = NoYes::Yes;

        this.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(tmpVendStandardInvoice, SettlementPostingDate):
                    if (this.SettlementPostingDate < this.InvoiceDate)
                    {
                        // The settlement posting date must be the same date or later than the invoice.
                        ret = checkFailed("@AccountsPayable:SettlementDateLessThanInvoice");
                    }

                    if (ret)
                    {
                        ret = LedgerFiscalCalendar::checkDateIsValid(CompanyInfoHelper::fiscalCalendarRecId(), this.SettlementPostingDate);
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(tmpVendStandardInvoice, SettlementPostingDate):
                this.settlementPostingDateModified();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>settlementPostingDateModified</Name>
				<Source><![CDATA[
    private void settlementPostingDateModified()
    {
        VendAdvanceApplicationTransQueryBuilder qb = VendAdvanceApplicationTransQueryBuilder::construct();
        qb.parmInvoiceRecId(this.InvoiceRecId);
        qb.parmIsPosted(this.IsPosted);

        Query q = qb.buildQuery(false, false);

        QueryBuildDataSource qbds = q.dataSourceTable(tableNum(VendAdvanceApplicationTrans));
        qbds.addRange(fieldNum(VendAdvanceApplicationTrans, SettlementPostingDate)).value(SysQuery::valueNot(this.SettlementPostingDate));

        Map fieldSetMap = new Map(Types::String, Types::String);

        fieldSetMap.insert(fieldId2Name(tableNum(VendAdvanceApplicationTrans), fieldNum(VendAdvanceApplicationTrans, SettlementPostingDate)),
            date2StrXpp(this.SettlementPostingDate));

        Query::update_recordset(fieldSetMap, q, true, true, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateInOpenPeriod</Name>
				<Source><![CDATA[
    private TransDate getDateInOpenPeriod(TransDate _transDate)
    {
        TransDate newTransDate = _transDate;

        if (!LedgerFiscalCalendar::checkLedgerPeriodDateModule(CompanyInfoHelper::fiscalCalendarRecId(), _transDate, SysModule::Purch, false))
        {
            newTransDate = LedgerFiscalCalendar::findFirstOpenStartDateModule(CompanyInfoHelper::fiscalCalendarRecId(), _transDate, SysModule::Purch);
        }

        return newTransDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@SYS331474</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailableApplicationRemaining</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceAccount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VendInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoiceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SettlementPostingDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS114020</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPosted</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>VendCurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchIdBase</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAccount</Name>
					<SourceEDT>VendInvoiceAccount</SourceEDT>
					<Field>InvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>