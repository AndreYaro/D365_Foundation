<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXDataGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCDXDataGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>RetailCDXDataGroup</c> record corresponding to the specified record Id.
    /// </summary>
    /// <param name = "_dataGroupRecId">The data group record Id.</param>
    /// <param name = "_forUpdate">The flag indicating whether the record found can be updated or not.</param>
    /// <returns>The <c>RetailCDXDataGroup</c> record object</returns>
    public static RetailCDXDataGroup find(RefRecId _dataGroupRecId, boolean _forUpdate = false)
    {
        RetailCDXDataGroup retailCDXDataGroup;

        retailCDXDataGroup.selectForUpdate(_forUpdate);

        select firstonly retailCDXDataGroup
            where retailCDXDataGroup.RecId == _dataGroupRecId;

        return retailCDXDataGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>RetailCDXDataGroup</c> record corresponding to the specified data group name.
    /// </summary>
    /// <param name = "_dataGroupName">The data group name.</param>
    /// <param name = "_forUpdate">The flag indicating whether the record found can be updated or not.</param>
    /// <returns>The <c>RetailCDXDataGroup</c> record object</returns>
    public static RetailCDXDataGroup findByName(Name _dataGroupName, boolean _forUpdate = false)
    {
        RetailCDXDataGroup retailCDXDataGroup;

        retailCDXDataGroup.selectForUpdate(_forUpdate);

        select firstonly retailCDXDataGroup where retailCDXDataGroup.Name == _dataGroupName;

        return retailCDXDataGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDefaultIfNotExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a default CDX data group record.
    /// </summary>
    /// <param name = "_type">The type of the retail channel schema.</param>
    /// <returns>True if the default database was created; otherwise, false.</returns>
    public static boolean insertDefaultIfNotExists(RetailConnChannelSchemaTypeEnum _type)
    {
        #RetailCDX
        RetailCDXDataGroup  dataGroup;
        boolean             dataGroupCreated = false;

        if (_type == RetailConnChannelSchemaTypeEnum::AX7)
        {
            dataGroup = RetailCDXDataGroup::findByName(#RetailCdxDataGroup_DefaultName);

            if (!dataGroup)
            {
                ttsbegin;

                dataGroup.Name          = #RetailCdxDataGroup_DefaultName;
                dataGroup.Description   = #RetailCdxDataGroup_DefaultName;
                dataGroup.ChannelSchema = RetailConnChannelSchema::findByName(#AX7SchemaName).RecId;
                dataGroup.insert();

                ttscommit;

                dataGroupCreated = true;
            }
        }

        return dataGroupCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>associateDefaultDataGroupToDistributionSchedules</Name>
				<Source><![CDATA[
    /// <summary>
    /// Associates the default CDX data group to all existing distribution schedules.
    /// </summary>
    /// <param name = "_type">The type of the schema of the default data group.</param>
    public static void associateDefaultDataGroupToDistributionSchedules(RetailConnChannelSchemaTypeEnum _type)
    {
        #RetailCDX
        RetailCDXDataGroup          dataGroup;
        RetailConnSchedule          retailConnSchedule;
        RetailCDXScheduleDataGroup  retailCdxScheduleDataGroup, newScheduleDataGroup;

        if (_type == RetailConnChannelSchemaTypeEnum::AX7)
        {
            dataGroup = RetailCDXDataGroup::findByName(#RetailCdxDataGroup_DefaultName);

            if (dataGroup)
            {
                ttsbegin;

                while select retailConnSchedule 
                    notexists join retailCdxScheduleDataGroup
                        where   retailCdxScheduleDataGroup.DataGroup    == dataGroup.RecId
                            &&  retailCdxScheduleDataGroup.Schedule     == retailConnSchedule.RecId
                {
                    newScheduleDataGroup.clear();

                    newScheduleDataGroup.DataGroup  = dataGroup.RecId;
                    newScheduleDataGroup.Schedule   = retailConnSchedule.RecId;

                    newScheduleDataGroup.insert();
                }

                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfAnyChannelExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if given channel database group has any channel assigned to it or not.
    /// </summary>
    /// <param name = "_dataGroupRecId"> RecId of Channel database group.</param>
    /// <returns>True if any Channel exists for given channel database group, else False.</returns>
    internal static boolean checkIfAnyChannelExists(RefRecId _dataGroupRecId)
    {
        RetailConnDatabaseProfile dbProfile;
        RetailCDXDataStoreChannel dataStoreChannel;

        select firstonly RecId from dbProfile
            where dbProfile.DataGroup == _dataGroupRecId
                join RecId from dataStoreChannel
                    where dataStoreChannel.DatabaseProfile == dbProfile.RecId;

        return dataStoreChannel.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the table fields when a new record is created
    /// </summary>
    public void initValue()
    {
        super();
        this.maxNumberOfRecordsAllowedInsideStoreHours = this.GetDefaultMaxNumberOfRecordsAllowedInsideStoreHours();      
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetDefaultMaxNumberOfRecordsAllowedInsideStoreHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the default max number of records that can be synched inside of store hours.
    /// </summary>
    /// <returns>The number of records.</returns>
    internal int GetDefaultMaxNumberOfRecordsAllowedInsideStoreHours()
    {
        return 1000 * 1000;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetMaxNumberOfRecordsAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the max number of records that can be synched inside of store hours.
    /// </summary>
    /// <returns>The value of max number of records.</returns>
    internal int GetMaxNumberOfRecordsAllowed()
    {
        int maxNumberOfRecordsAllowed = this.maxNumberOfRecordsAllowedInsideStoreHours == 0
             ?this.GetDefaultMaxNumberOfRecordsAllowedInsideStoreHours()
             : this.maxNumberOfRecordsAllowedInsideStoreHours;

        return maxNumberOfRecordsAllowed;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX1523</DeveloperDocumentation>
	<FormRef>RetailCDXDataGroup</FormRef>
	<Label>@REX1522</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET607</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChannelSchema</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileStorageProvider</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForceLocale</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ChannelSchema</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FileStorageProvider</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ForceLocale</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageId</ExtendedDataType>
			<Label>@REX4520030</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PauseSyncDuringStoreHours</Name>
			<ExtendedDataType>RetailCDXPauseDataStoreSync</ExtendedDataType>
			<HelpText>@Retail:PauseSyncDuringStoreHoursHelpText</HelpText>
			<Label>@Retail:PauseSyncDuringStoreHoursDataGroup</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>maxNumberOfRecordsAllowedInsideStoreHours</Name>
			<ExtendedDataType>RetailCDXRowsAffected</ExtendedDataType>
			<HelpText>@Retail:MaximumNumberOfRecordsHelpText</HelpText>
			<Label>@Retail:MaximumNumberOfRecords</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>modifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ForceLocale</Name>
					<SourceEDT>LanguageId</SourceEDT>
					<Field>ForceLocale</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile_Extern</Name>
					<SourceEDT>LanguageId</SourceEDT>
					<RelatedField>LabelFile</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailCDXFileStorageProvider</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailCDXFileStorageProvider</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FileStorageProvider</Name>
					<Field>FileStorageProvider</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailConnChannelSchema</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailConnChannelSchema</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChannelSchema</Name>
					<Field>ChannelSchema</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>