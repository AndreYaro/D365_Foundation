<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSiteGateEntry_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSiteGateEntry_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existInventSiteGateEntryLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check gate entry line exist.
    /// </summary>
    /// <returns>
    /// A boolean value return true if record exist otherwise return false.
    /// </returns>
    public boolean existInventSiteGateEntryLine()
    {
        InventSiteGateEntryLine_IN  inventSiteGateEntryLine;
        boolean ret = false;

        select firstonly inventSiteGateEntryLine
            where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId;

        if (inventSiteGateEntryLine)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert the current record into the database.
    /// </summary>
    public void insert()
    {
        InventSiteGateEntryLine_IN  InventSiteGateEntryLine;

        this.initGateEntryID();

        if (this.ReferenceDocumentType == InventSiteGateRefDocType_IN::ReturnableGatePass || this.ReferenceDocumentType == InventSiteGateRefDocType_IN::SubContract)
        {
            ttsBegin;

            update_recordSet InventSiteGateEntryLine
            setting RetrunableGatePassNumber = this.RetrunableGatePassNumber
                where InventSiteGateEntryLine.InventSiteGateEntry == this.RecId;

            ttsCommit;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initGateEntryID</Name>
				<Source><![CDATA[
    private void initGateEntryID()
    {
        InventSite_IN inventSite = InventSite_IN::findSiteId(InventSite::find(InventSiteGate_IN::find(this.InventSiteGate).SiteId).SiteId);

        RefRecId numberSequenceId; 
        if (this.Type == InventSiteGateEntryType_IN::Inward)
        {
            numberSequenceId = inventSite.GateInwardNumberSequence;
        }
        else
        {
            numberSequenceId = inventSite.GateOutWardNumberSequence;
        }

        NumberSequenceTable numberSequenceTable = NumberSequenceTable::find(numberSequenceId);
        if (numberSequenceTable.Manual)
        {
            warning(strFmt("@SYS26209", numberSequenceTable.NumberSequence));
            throw error("@Inventory_Localization:ManualNumberSequencesAreNotSupportedForGateEntriesBothInwardAndOutward");
        }

        this.EntryId = NumberSeq::newGetNumFromId(numberSequenceId).num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteGateInwardRefDocType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method acts as edit method for the reference document type of inward gate entry.
    /// </summary>
    /// <param name="_set">
    /// Boolean value to set the value.
    /// </param>
    /// <param name="_inventSiteGateInwardRefDocType">
    /// InventSiteGateInwardRefDocType_IN value to set.
    /// </param>
    /// <returns>
    /// InventSiteGateInwardRefDocType_IN enum value.
    /// </returns>
    edit InventSiteGateInwardRefDocType_IN inventSiteGateInwardRefDocType(
        boolean                 _set,
        InventSiteGateInwardRefDocType_IN    _inventSiteGateInwardRefDocType)
    {
        InventSiteGateInwardRefDocType_IN   inventSiteGateInwardRefDocType;

        this.ReferenceDocumentType = InventSiteGateEntryControllerHelper_IN::gateInwardRefDocType2GateRefDocType(
        _set,
        _inventSiteGateInwardRefDocType,
        this.ReferenceDocumentType);

        this.ReferencePartyId = '';

        inventSiteGateInwardRefDocType = InventSiteGateEntryControllerHelper_IN::gateRefDocType2GateInwardRefDocType(this.ReferenceDocumentType);
        return inventSiteGateInwardRefDocType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteGateOutwardRefDocType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method acts as edit method for the reference document type of outward gate entry.
    /// </summary>
    /// <param name="_set">
    /// Boolean value to set the value.
    /// </param>
    /// <param name="_inventSiteGateOutwardRefDocType">
    /// InventSiteGateOutwardRefDocType_IN value to set.
    /// </param>
    /// <returns>
    /// InventSiteGateOutwardRefDocType_IN enum value.
    /// </returns>
    edit InventSiteGateOutwardRefDocType_IN inventSiteGateOutwardRefDocType(
        boolean _set,
        InventSiteGateOutwardRefDocType_IN  _inventSiteGateOutwardRefDocType)
    {
        InventSiteGateOutwardRefDocType_IN   inventSiteGateOutwardRefDocType;

        this.ReferenceDocumentType = InventSiteGateEntryControllerHelper_IN::gateOutwardRefDocType2GateRefDocType(
        _set,
        _inventSiteGateOutwardRefDocType,
        this.ReferenceDocumentType);

        this.ReferencePartyId = '';

        inventSiteGateOutwardRefDocType = InventSiteGateEntryControllerHelper_IN::gateRefDocType2GateOutwardRefDocType(this.ReferenceDocumentType);
        return inventSiteGateOutwardRefDocType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the current record in the database.
    /// </summary>
    public void update()
    {
        if (this.Status == InventSiteGateEntryStatus_IN::Canceled &&
            this.Status != this.orig().Status &&
            (this.ReferenceDocumentType == InventSiteGateRefDocType_IN::ReturnableGatePassReturn ||
             this.ReferenceDocumentType == InventSiteGateRefDocType_IN::SubContractReturn))
        {
            InventSiteGateEntryLine_IN inventSiteGateEntryLine;
            InventSiteGateEntryLine_IN inventSiteGateEntryLineRGP;

            update_recordSet inventSiteGateEntryLineRGP
                setting ReturnableGatePassStatus = NoYes::No
                exists join inventSiteGateEntryLine
                    where inventSiteGateEntryLine.OutwardGateId == inventSiteGateEntryLineRGP.RecId &&
                        inventSiteGateEntryLine.InventSiteGateEntry == this.RecId;
        }

        if (this.ReferenceDocumentType == InventSiteGateRefDocType_IN::ReturnableGatePass || this.ReferenceDocumentType == InventSiteGateRefDocType_IN::SubContract)
        {
            InventSiteGateEntryLine_IN inventSiteGateEntryLine;
            update_recordSet inventSiteGateEntryLine
                setting RetrunableGatePassNumber = this.RetrunableGatePassNumber
                where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCanceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validation while user will change the status of gate entry as Canceled.
    /// </summary>
    /// <returns>
    /// A boolean return true if all validations will passed otherwise return false.
    /// </returns>
    public boolean validateCanceled()
    {
        InventSiteGateEntryLine_IN  inventSiteGateEntryLine;
        boolean isValid = true;

        if (isValid && !this.existInventSiteGateEntryLine())
        {
            isValid = checkFailed(strFmt("@SYP4860424"));
        }

        if (isValid)
        {
            while select * from inventSiteGateEntryLine where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId
            {
                isValid = inventSiteGateEntryLine.validateCanceled();
                if (!isValid)
                {
                    break;
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMeasured</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validation while user will change the status of gate entry as Measured.
    /// </summary>
    /// <returns>
    /// A boolean return true if all validations will passed otherwise return false.
    /// </returns>
    public boolean validateMeasured()
    {
        InventSiteGateEntryLine_IN  inventSiteGateEntryLine;
        boolean isValid = true;

        if (isValid && !this.existInventSiteGateEntryLine())
        {
            isValid = checkFailed(strFmt("@SYP4860424"));
        }

        if (isValid)
        {
            while select * from inventSiteGateEntryLine where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId
            {
                isValid = inventSiteGateEntryLine.validateMeasured();
                if (!isValid)
                {
                    break;
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTareCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validation while user will change the status of gate entry as Tare Check.
    /// </summary>
    /// <returns>
    /// A boolean return true if all validations will passed otherwise return false.
    /// </returns>
    public boolean validateTareCheck()
    {
        InventSiteGateEntryLine_IN  inventSiteGateEntryLine;
        boolean isValid = true;

        if (isValid && !this.existInventSiteGateEntryLine())
        {
            isValid = checkFailed(strFmt("@SYP4860424"));
        }

        if (isValid)
        {
            while select * from inventSiteGateEntryLine where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId
            {
                isValid = inventSiteGateEntryLine.validateTareCheck();
                if (!isValid)
                {
                    break;
                }
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVehicleEntered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validation while user will change the status of gate entry as Vehicle Entered.
    /// </summary>
    /// <returns>
    /// A boolean return true if all validations will passed otherwise return false.
    /// </returns>
    public boolean validateVehicleEntered()
    {
        InventSiteGateEntryLine_IN  inventSiteGateEntryLine;
        InventSiteGateEntryLine_IN  inventSiteGateEntryLineRGP;
        boolean isValid = true;

        if (isValid && !this.InventLocationId)
        {
            isValid = checkFailed(strFmt("@SYP4860425"));
        }

        if (isValid && !this.VehicleNumber)
        {
            isValid = checkFailed(strFmt("@SYP4860426"));
        }

        if (isValid && !this.ChallanNumber)
        {
            isValid = checkFailed(strFmt("@SYP4860431"));
        }

        if (isValid && !this.ChallanDate)
        {
            isValid = checkFailed(strFmt("@SYP4860433"));
        }

        if (isValid && (this.ReferenceDocumentType == InventSiteGateRefDocType_IN::ReturnableGatePass ||
            this.ReferenceDocumentType == InventSiteGateRefDocType_IN::SubContract) && !this.RetrunableGatePassNumber)
        {
            isValid = checkFailed(strFmt("@SYP4860436"));
        }

        if (isValid && !this.existInventSiteGateEntryLine())
        {
            isValid = checkFailed(strFmt("@SYP4860424"));
        }

        if (isValid)
        {
            while select * from inventSiteGateEntryLine where inventSiteGateEntryLine.InventSiteGateEntry == this.RecId
            {
                isValid = inventSiteGateEntryLine.validateVehicleEntered();
                if (!isValid)
                {
                    break;
                }
            }
        }

        if (isValid &&
            (this.ReferenceDocumentType == InventSiteGateRefDocType_IN::ReturnableGatePassReturn || this.ReferenceDocumentType == InventSiteGateRefDocType_IN::SubContractReturn))
        {
            update_recordSet inventSiteGateEntryLineRGP
                setting ReturnableGatePassStatus = NoYes::Yes
            join inventSiteGateEntryLine
                where inventSiteGateEntryLine.OutwardGateId == inventSiteGateEntryLineRGP.RecId &&
                    inventSiteGateEntryLine.InventSiteGateEntry == this.RecId;
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVehicleExit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validation while user will change the status of gate entry as Vehicle Exit.
    /// </summary>
    /// <returns>
    /// A boolean return true if all validations will passed otherwise return false.
    /// </returns>
    public boolean validateVehicleExit()
    {
        boolean isValid = true;

        if (isValid && !this.existInventSiteGateEntryLine())
        {
            isValid = checkFailed(strFmt("@SYP4860424"));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>InventSiteGateEntry_IN</c> table; if not,
    ///    an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>InventSiteGateEntry_IN</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean checkExist(RecId _recId)
    {
        boolean doesExist = true;

        if (!InventSiteGateEntry_IN::exist(_recId))
        {
            doesExist = checkFailed(strFmt("@SPS1280", _recId));
        }

        return doesExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>InventSiteGateEntry_IN</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the <c>InventSiteGateEntry_IN</c> table to check for existence.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean exist(RecId _recId)
    {
        InventSiteGateEntry_IN inventSiteGateEntry;

        select firstonly RecId from inventSiteGateEntry
            where inventSiteGateEntry.RecId == _recId;

        return inventSiteGateEntry.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <C>InventSiteGateEntry_IN</C> record based on record ID of <C>InventSiteGateEntry_IN</C> record.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of <C>InventSiteGateEntry_IN</C> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <C>InventSiteGateEntry_IN</C> record.
    /// </returns>
    static public InventSiteGateEntry_IN find(RecId _recId, boolean _forUpdate = false)
    {
        InventSiteGateEntry_IN  inventSiteGateEntry;
        if (_recId)
        {
            inventSiteGateEntry.selectForUpdate(_forUpdate);
            select firstOnly inventSiteGateEntry
                where inventSiteGateEntry.RecId == _recId;
        }

        return inventSiteGateEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate field
    /// </summary>
    /// <param name = "_fieldIdToCheck">Field id to check</param>
    /// <returns>True if the field is validate, otherwise false.</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InventSiteGateEntry_IN, InventLocationId):
                ret = InventLocation::find(this.InventLocationId).InventSiteId == InventSiteGate_IN::find(this.InventSiteGate).SiteId;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4860418</DeveloperDocumentation>
	<Label>@SYP4860381</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>EntryId</TitleField1>
	<TitleField2>Type</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>EntryIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EntryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EntryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Employee</Name>
			<Label>@SYS35880</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApproverEmployee</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GateInformation</Name>
			<Label>@SYP4860369</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EntryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteGate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SkipMeasurement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InwardDocumentReference</Name>
			<Label>@SYP4860422</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventSiteGateInwardRefDocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReferencePartyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OutwardDocumentReference</Name>
			<Label>@SYP4860422</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventSiteGateOutwardRefDocType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReferencePartyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnableGatePass</Name>
			<Label>@SYP4860423</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetrunableGatePassNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportInformation</Name>
			<Label>@SYP4860371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VehicleNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationCompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationDriverName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverMobilePhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChallanNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChallanDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ArrivalDateAndTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExitDateAndTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ApproverEmployee</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ArrivalDateAndTime</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteGateEntryArrivalDateAndTime_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ChallanDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ChallanDate_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChallanNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ChallanNumber_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverMobilePhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DriverMobilePhone_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EntryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteGateEntryId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExitDateAndTime</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteGateEntryExitDateAndTime_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventSiteGate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventSiteGateRecId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginCity</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>OriginCity_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReferenceDocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>InventSiteGateRefDocType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReferencePartyId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteGateRefPartyId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetrunableGatePassNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetrunableGatePassNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipMeasurement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYP4860419</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>InventSiteGateEntryStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationCompanyName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransportationCompanyName_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationDriverName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransportationDriverName_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransportationReceiptDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransportationReceiptDate_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationReceiptNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransportationReceiptNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>InventSiteGateEntryType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VehicleNumber_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EntryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EntryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApproverEmployee</Name>
					<Field>ApproverEmployee</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSiteGate</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventSiteGate_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteGate</Name>
					<Field>InventSiteGate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchaseOrderVendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchaseOrderVendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderVendTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::PurchaseOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchaseReturnOrderVendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchaseReturnOrderVendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseReturnOrderVendTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::PurchaseReturnOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReturnableGatePassReturnVendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReturnableGatePassReturnVendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReturnableGatePassReturnVendTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::ReturnableGatePassReturn</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReturnableGatePassVendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReturnableGatePassVendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReturnableGatePassVendTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::ReturnableGatePass</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesOrderCustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesOrderCustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesOrderCustTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::SalesOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesReturnOrderCustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesReturnOrderCustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesReturnOrderCustTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::SalesReturnOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>StockTransferInInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>StockTransferInInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>StockTransferInInventLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::StockTransferIn</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>StockTransferOutInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>StockTransferOutInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>StockTransferOutInventLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::StockTransferOut</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SubContractInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SubContractInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SubContractInventLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::SubContract</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SubContractReturnInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SubContractReturnInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SubContractReturnInventLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReferenceDocumentType</Name>
					<Field>ReferenceDocumentType</Field>
					<ValueStr>InventSiteGateRefDocType_IN::SubContractReturn</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReferencePartyId</Name>
					<Field>ReferencePartyId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>