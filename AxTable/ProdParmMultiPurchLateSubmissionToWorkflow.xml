<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdParmMultiPurchLateSubmissionToWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdParmMultiPurchLateSubmissionToWorkflow extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>ProdParmMultiPurchLateSubmissionToWorkflow</c> record.
    /// </summary>
    /// <param name ="_purchId">The Id of purchase order</param>
    /// <param name="_forUpdate">A boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A <c>ProdParmMultiPurchLateSubmissionToWorkflow</c> buffer.</returns>
    [Hookable(false)]
    internal final static ProdParmMultiPurchLateSubmissionToWorkflow find(PurchId _purchId, boolean _forUpdate = false)
    {
        ProdParmMultiPurchLateSubmissionToWorkflow parmMultiPurchLateSubmissionToWorkflow;

        if (_purchId)
        {
            parmMultiPurchLateSubmissionToWorkflow.selectForUpdate(_forUpdate);

            select firstonly parmMultiPurchLateSubmissionToWorkflow
                where parmMultiPurchLateSubmissionToWorkflow.PurchId == _purchId
                   && parmMultiPurchLateSubmissionToWorkflow.UserId == curUserId();
        }

        return parmMultiPurchLateSubmissionToWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the IsModified field value for a given purchase order. 
    /// </summary>
    /// <param name = "_purchId">The Id of purchase order</param>
    /// <param name = "_isModified">The value to be set for the IsModified field.</param>
    [Hookable(false)]
    internal final static void setModified(PurchId _purchId, NoYes _isModified)
    {
        ProdParmMultiPurchLateSubmissionToWorkflow parmMultiPurchLateSubmissionToWorkflow;

        if (_purchId)
        {
            update_recordset parmMultiPurchLateSubmissionToWorkflow
               setting  IsModified = _isModified
                  where parmMultiPurchLateSubmissionToWorkflow.PurchId == _purchId
                     && parmMultiPurchLateSubmissionToWorkflow.UserId == curUserId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExecutionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>ProdParmMultiPurchLateSubmissionToWorkflow</c> record.
    /// </summary>
    /// <param name ="_purchId">The Id of purchase order</param>
    /// <param name ="_executionId">The execution id </param>
    /// <param name="_forUpdate">A boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A <c>ProdParmMultiPurchLateSubmissionToWorkflow</c> buffer.</returns>
    [Hookable(false)]
    internal final static ProdParmMultiPurchLateSubmissionToWorkflow findByExecutionId(
        PurchId _purchId,
        SysGuid _executionId,
        boolean _forUpdate = false)
    {
        ProdParmMultiPurchLateSubmissionToWorkflow parmMultiPurchLateSubmissionToWorkflow;

        if (_purchId && _executionId)
        {
            parmMultiPurchLateSubmissionToWorkflow.selectForUpdate(_forUpdate);

            select firstonly parmMultiPurchLateSubmissionToWorkflow
                where parmMultiPurchLateSubmissionToWorkflow.PurchId == _purchId
                   && parmMultiPurchLateSubmissionToWorkflow.ExecutionId == _executionId
                   && parmMultiPurchLateSubmissionToWorkflow.UserId == curUserId();
        }

        return parmMultiPurchLateSubmissionToWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setModifiedByExecutionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the IsModified field value for a given purchase order.
    /// </summary>
    /// <param name = "_purchId">The Id of purchase order</param>
    /// <param name ="_executionId">The execution id </param>
    /// <param name = "_isModified">The value to be set for the IsModified field.</param>
    [Hookable(false)]
    internal final static void setModifiedByExecutionId(
        PurchId _purchId,
        SysGuid _executionId,
        NoYes _isModified)
    {
        ProdParmMultiPurchLateSubmissionToWorkflow parmMultiPurchLateSubmissionToWorkflow;

        if (_purchId && _executionId)
        {
            update_recordset parmMultiPurchLateSubmissionToWorkflow
               setting  IsModified = _isModified
                  where parmMultiPurchLateSubmissionToWorkflow.PurchId == _purchId
                     && parmMultiPurchLateSubmissionToWorkflow.ExecutionId == _executionId
                     && parmMultiPurchLateSubmissionToWorkflow.UserId == curUserId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Worksheet</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PurchNumIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>PurchNumIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ExecutionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SysGuid</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>End User Identifiable Information (EUII)</AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsModified</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ExecutionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UserId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>