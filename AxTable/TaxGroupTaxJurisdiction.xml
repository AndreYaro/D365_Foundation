<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGroupTaxJurisdiction</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxGroupTaxJurisdiction extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        TaxJurisdiction         taxJurisdiction;
        TaxTable                taxTable;
        TaxGroupData            taxGroupData;

        ttsbegin;

        while select RecId from taxJurisdiction
        where taxJurisdiction.TaxJurisdictionCode == this.TaxJurisdictionCode
        join TaxCode from taxTable
        where taxTable.TaxJurisdictionCode == taxJurisdiction.TaxJurisdictionCode
        {
            delete_from taxGroupData
            where taxGroupData.TaxGroup == this.TaxGroup
              && taxGroupData.TaxCode == taxTable.TaxCode;
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDataSourceFields</Name>
				<Source><![CDATA[
    public void enableDataSourceFields()
    {
        FormDataObject  formDataObject;

        if (FormDataUtil::isFormDataSource(this))
        {
            formDataObject = FormDataUtil::getFormDataSource(this).object(fieldnum(TaxGroupTaxJurisdiction, TaxExemptCode));
            formDataObject.allowEdit(this.TaxExemptTax == NoYes::Yes);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        TaxJurisdiction         taxJurisdiction;
        TaxTable                taxTable;
        TaxGroupData            taxGroupData;

        ttsbegin;

        super();

        while select TaxJurisdictionCode from taxJurisdiction
            where taxJurisdiction.TaxJurisdictionCode == this.TaxJurisdictionCode
            join TaxCode from taxTable
                where taxTable.TaxJurisdictionCode == taxJurisdiction.TaxJurisdictionCode
        {
            taxGroupData.TaxCode = taxTable.TaxCode;
            taxGroupData.initFromTaxGroupTaxJurisdiction(this);
            taxGroupData.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(TaxGroupTaxJurisdiction, TaxExemptTax):
                if (this.TaxExemptTax == NoYes::No)
                {
                    this.TaxExemptCode = '';
                }
                this.enableDataSourceFields();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxJurisdictionName</Name>
				<Source><![CDATA[
    display TaxJurisdictionName taxJurisdictionName()
    {
        return TaxJurisdiction::find(this.TaxJurisdictionCode).TaxJurisdictionName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        TaxJurisdiction         taxJurisdiction;
        TaxTable                taxTable;
        TaxGroupData            taxGroupData;

        ttsbegin;

        if (this.TaxExemptTax != this.orig().TaxExemptTax ||
            this.TaxExemptCode != this.orig().TaxExemptCode ||
            this.TaxUseTax != this.orig().TaxUseTax)
        {
            while select TaxJurisdictionCode from taxJurisdiction
                where taxJurisdiction.TaxJurisdictionCode == this.TaxJurisdictionCode
                join TaxCode from taxTable
                    where taxTable.TaxJurisdictionCode == taxJurisdiction.TaxJurisdictionCode
            {
                select forupdate taxGroupData
                    where taxGroupData.TaxGroup == this.TaxGroup
                        && taxGroupData.TaxCode == taxTable.TaxCode;

                if (this.TaxExemptTax != this.orig().TaxExemptTax)
                {
                    taxGroupData.ExemptTax     = this.TaxExemptTax;
                }

                if ((this.TaxExemptCode != this.orig().TaxExemptCode) &&
                   ((this.TaxExemptTax  != this.orig().TaxExemptTax)  ||
                    taxGroupData.ExemptTax))
                {
                    taxGroupData.TaxExemptCode = this.TaxExemptCode;
                }

                if (this.TaxUseTax != this.orig().TaxUseTax)
                {
                    taxGroupData.UseTax = this.TaxUseTax;
                }

                taxGroupData.update();
            }
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TaxGroup _taxGroup, TaxJurisdictionCode _taxJurisdictionCode )
    {
        boolean ret = true;

        if (!TaxGroupTaxJurisdiction::exist(_taxGroup, _taxJurisdictionCode))
        {
            ret = checkFailed(strfmt(TaxGroupTaxJurisdiction::txtNotExist(), _taxGroup, _taxJurisdictionCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TaxGroup _taxGroup, TaxJurisdictionCode _taxJurisdictionCode )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxGroupTaxJurisdiction
                 where
                     taxGroupTaxJurisdiction.TaxGroup == _taxGroup &&
                    taxGroupTaxJurisdiction.TaxJurisdictionCode == _taxJurisdictionCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxGroupTaxJurisdiction find(
        TaxGroup _taxGroup,
        TaxJurisdictionCode _taxJurisdictionCode ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxGroupTaxJurisdiction taxGroupTaxJurisdiction;

        taxGroupTaxJurisdiction.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxGroupTaxJurisdiction.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxGroupTaxJurisdiction
            where
            taxGroupTaxJurisdiction.TaxGroup == _taxGroup &&
                    taxGroupTaxJurisdiction.TaxJurisdictionCode == _taxJurisdictionCode;

        return taxGroupTaxJurisdiction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102247";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS328801</DeveloperDocumentation>
	<FormRef>TaxGroup</FormRef>
	<Label>@SYS91176</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxGroup</TitleField1>
	<TitleField2>TaxJurisdictionCode</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TaxGroupTaxJurisdictionCodeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>TaxGroupTaxJurisdictionCodeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxJurisdictionCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Exemption</Name>
			<Label>@SYS88006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxExemptTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxExemptCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxJurisdictionCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxUseTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxExemptCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxExemptCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxExemptTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxExemptTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxJurisdictionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxJurisdictionCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxUseTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxUseTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxJurisdictionCodeTaxGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxJurisdictionCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxGroupTaxJurisdictionCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxJurisdictionCode</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxExemptCodeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxExemptCodeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxExemptCode</Name>
					<SourceEDT>TaxExemptCode</SourceEDT>
					<Field>TaxExemptCode</Field>
					<RelatedField>ExemptCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ExemptCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxJurisdiction</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxJurisdiction</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxJurisdictionCode</Name>
					<SourceEDT>TaxJurisdictionCode</SourceEDT>
					<Field>TaxJurisdictionCode</Field>
					<RelatedField>TaxJurisdictionCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxJurisdictionCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>