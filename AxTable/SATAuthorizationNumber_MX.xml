<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SATAuthorizationNumber_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SATAuthorizationNumber_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkForOverlapNumbers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether there is overlap between the <c>FromNumber</c> field and the <c>ToNumber</c>
    /// field for the series and year.
    /// </summary>
    /// <param name="_series">
    /// The series information that is used to define which records must be checked.
    /// </param>
    /// <param name="_numberSequenceTable">
    /// The number sequence table information that is used to define which records must be checked.
    /// </param>
    /// <param name="_year">
    /// The year information that is used to define which records must be checked.
    /// </param>
    /// <param name="_firstNumber">
    /// The initial number that is used to validate the overlapping scenario.
    /// </param>
    /// <param name="_lastNumber">
    /// The last number that is used to validate the overlapping scenario.
    /// </param>
    /// <returns>
    /// true if overlapping numbers are found; otherwise, false.
    /// </returns>
    public boolean checkForOverlapNumbers(
        InvoiceSeries_MX      _series,
        RefRecId              _numberSequenceTable,
        AuthorizationYear_MX  _year,
        Integer               _firstNumber,
        Integer               _lastNumber)
    {
        SATAuthorizationNumber_MX  satAuthorizationNumber;

        select RecId from satAuthorizationNumber
            where satAuthorizationNumber.Series               == _series
                && satAuthorizationNumber.NumberSequenceTable == _numberSequenceTable
                && satAuthorizationNumber.AuthorizationYear   == _year
                && ((satAuthorizationNumber.FromNumber <= _firstNumber && satAuthorizationNumber.ToNumber >= _firstNumber)
                ||  (satAuthorizationNumber.FromNumber <= _lastNumber && satAuthorizationNumber.ToNumber  >= _lastNumber));

        return satAuthorizationNumber.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate.
    /// </param>
    /// <returns>
    /// True if the field is valid; otherwise, false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(SATAuthorizationNumber_MX, AuthorizationYear):
                if (!this.yearIsValid(this.AuthorizationYear))
                {
                    ret = checkFailed(strFmt("@SYS341177", this.Series, this.AuthorizationYear));
                }
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the overlaping between "FromNumber" and "ToNumber" fields for the same serie and year before it is written to the database.
    /// </summary>
    /// <returns>
    ///  retruns true olvelapping numbers are found for same sequence code, series and year otherwise, false
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (! this.RecId
            && this.checkForOverlapNumbers(this.Series, this.NumberSequenceTable, this.AuthorizationYear, this.FromNumber, this.ToNumber))
        {
            return checkFailed(strFmt("@SYS341178", this.Series, NumberSequenceTable::find(this.NumberSequenceTable).NumberSequence, this.AuthorizationYear));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>yearIsValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the year information is valid.
    /// </summary>
    /// <param name="_year">
    /// The year to verify.
    /// </param>
    /// <returns>
    /// true if the year is valid; otherwise, false.
    /// </returns>
    public  boolean yearIsValid(int _year)
    {
        TransDate resultingDate;

        resultingDate = str2Date(strFmt("01/01/%1", _year), 123);

        if (!resultingDate)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>SATAuthorizationNumber_MX</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>SATAuthorizationNumber_MX</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId    _recId)
    {
        return _recId && (select firstonly RecId from satAuthorizationNumber_MX
                          where satAuthorizationNumber_MX.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>SATAuthorizationNumber_MX</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is being read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>SATAuthorizationNumber_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static SATAuthorizationNumber_MX find(
        recId            _recId,
        boolean          _forUpdate        = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        SATAuthorizationNumber_MX    satAuthorizationNumber;

        satAuthorizationNumber.selectForUpdate(_forUpdate);

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            satAuthorizationNumber.concurrencyModel(_concurrencyModel);
        }

        select firstonly satAuthorizationNumber
            where satAuthorizationNumber.RecId == _recId;

        return satAuthorizationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNumberSequenceInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the SAT authorization record.
    /// </summary>
    /// <param name="_numberSequenceTable">
    /// The number sequence table that is used to search for the authorization code.
    /// </param>
    /// <param name="_invoiceId">
    /// The invoice ID of the invoice document.
    /// </param>
    /// <returns>
    /// The SAT authorization record.
    /// </returns>
    public static SATAuthorizationNumber_MX findByNumberSequenceInvoiceId(
        RefRecId    _numberSequenceTable,
        InvoiceId   _invoiceId)
    {
        SATAuthorizationNumber_MX   satAuthorizationNumber;
        Integer                     invoiceNumber;

        invoiceNumber   = str2int(_invoiceId);

        select firstonly satAuthorizationNumber
            where satAuthorizationNumber.NumberSequenceTable == _numberSequenceTable
               && satAuthorizationNumber.FromNumber          <= invoiceNumber
               && satAuthorizationNumber.ToNumber            >= invoiceNumber;

        return satAuthorizationNumber;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS341960</DeveloperDocumentation>
	<Label>@SYS341135</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>NumberSequenceTable</TitleField1>
	<TitleField2>Series</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>NumSeqSeriesYearNumberIdx</ClusteredIndex>
	<Modules>APARShared</Modules>
	<PrimaryIndex>NumSeqSeriesYearNumberIdx</PrimaryIndex>
	<ReplacementKey>NumSeqSeriesYearNumberIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Series</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Series</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Authorization</Name>
			<Label>@SYS76375</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AuthorizationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationYear</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NumberRange</Name>
			<Label>@SYS24771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Series</Name>
			<Label>@SYS15825</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Series</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuthorizationCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AuthorizationCode_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AuthorizationYear</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AuthorizationYear_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FromNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS341160</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NumberSequenceTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS1161</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Series</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceSeries_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ToNumber</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS341162</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumSeqSeriesYearNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>NumberSequenceTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AuthorizationYear</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Series</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AuthorizationCode</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AuthorizationCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequenceTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SATAuthorizationNumber</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NumberSequenceTable</Name>
					<Field>NumberSequenceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>