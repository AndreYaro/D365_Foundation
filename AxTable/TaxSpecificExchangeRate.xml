<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSpecificExchangeRate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxSpecificExchangeRate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteBySourceRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the related <c>TaxSpecificExchangeRate</c> records.
    /// </summary>
    /// <param name="_sourceTableId">
    /// A source table Id.
    /// </param>
    /// <param name="_sourceRecId">
    /// A source record Id.
    /// </param>
    internal static void deleteBySourceRecord(RefTableId _sourceTableId, RefRecId _sourceRecId)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        delete_from taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOrDeleteByVATDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates or deletes the <c>TaxSpecificExchangeRate</c> by specific date of VAT register.
    /// </summary>
    /// <param name = "_sourceTableId">The source table Id.</param>
    /// <param name = "_sourceRecId">The source record Id.</param>
    /// <param name = "_dateOfVATRegister">The date of vat register.</param>
    internal static void updateOrDeleteByVATDueDate(RefTableId _sourceTableId, RefRecId _sourceRecId, VatDueDate_W _dateOfVATRegister)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate = TaxSpecificExchangeRate::findBySourceRecord(_sourceTableId, _sourceRecId);
        if (taxSpecificExchangeRate && taxSpecificExchangeRate.DateOfVATRegister != _dateOfVATRegister)
        {
            if (taxSpecificExchangeRate.KeepOriginalExchangeRate)
            {
                ttsbegin;
                update_recordset taxSpecificExchangeRate
                    setting DateOfVATRegister = _dateOfVATRegister
                    where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                        && taxSpecificExchangeRate.SourceRecId == _sourceRecId;
                ttscommit;
            }
            else
            {
                TaxSpecificExchangeRate::deleteBySourceRecord(_sourceTableId, _sourceRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySourceRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>TaxSpecificExchangeRate</c> record by using a specified source record ID.
    /// </summary>
    /// <param name="_sourceTableId">
    /// The source table ID of the source record.
    /// </param>
    /// <param name="_sourceRecId">
    /// The source record ID.
    /// </param>
    /// <returns>
    /// A <c>TaxSpecificExchangeRate</c> record.
    /// </returns>
    internal static TaxSpecificExchangeRate findBySourceRecord(RefTableId _sourceTableId, RefRecId _sourceRecId)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        select firstonly taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId;

        return taxSpecificExchangeRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySourceRecordAndCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>TaxSpecificExchangeRate</c> record by using a specified source record ID and currency code.
    /// </summary>
    /// <param name="_sourceTableId">
    /// The source table ID of the source record.
    /// </param>
    /// <param name="_sourceRecId">
    /// The source record ID.
    /// </param>
    /// /// <param name="_currencyCode">
    /// The target currency code.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>TaxSpecificExchangeRate</c> record.
    /// </returns>
    internal static TaxSpecificExchangeRate findBySourceRecordAndCurrencyCode(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        CurrencyCode _currencyCode,
        boolean _forUpdate = false)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        taxSpecificExchangeRate.selectForUpdate(_forUpdate);

        select firstonly taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId
                && taxSpecificExchangeRate.CurrencyCode == _currencyCode;

        return taxSpecificExchangeRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record exists in the <c>TaxSpecificExchangeRate</c> table with specific currency code.
    /// </summary>
    /// <param name = "_sourceTableId">The source table id.</param>
    /// <param name = "_sourceRecId">The source record id.</param>
    /// <param name = "_currencyCode">The currency code.</param>
    /// <returns>true if the record exists; otherwise, false.</returns>
    internal static boolean existByCurrencyCode(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        CurrencyCode _currencyCode)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        select firstonly RecId from taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId
                && taxSpecificExchangeRate.CurrencyCode == _currencyCode;

        return taxSpecificExchangeRate.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record exists in the <c>TaxSpecificExchangeRate</c> table with specific source record Id.
    /// </summary>
    /// <param name = "_sourceTableId">The source table id.</param>
    /// <param name = "_sourceRecId">The source record id.</param>
    /// <returns>true if the record exits; otherwise, false.</returns>
    internal static boolean exist(RefTableId _sourceTableId, RefRecId _sourceRecId)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        select firstonly RecId from taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId;

        return taxSpecificExchangeRate.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveTaxSpecificExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Save the sales tax transaction exchange rate record.
    /// </summary>
    /// <param name="_sourceTableId">
    /// The source table id
    /// </param>
    /// <param name="_sourceRecId">
    /// The source record id.
    /// </param>
    /// <param name="_transactionCurrencyCode">
    /// The transaction currency code.
    /// </param>
    /// <param name="_targetCurrencyCode">
    /// The target currency code.
    /// </param>
    /// <param name="_exchangeRate">
    /// The tax specific exchange rate for transaction currency to target currency.
    /// </param>
    /// <param name="_dateOfVATRegister">
    /// The register date fo VAT.
    /// </param>
    /// <param name="_keepOriginalExchangeRate">
    /// true if the original exchange rate should be kept and used; optional.
    /// </param>
    internal static void saveTaxSpecificExchangeRate(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        CurrencyCode _transactionCurrencyCode,
        CurrencyCode _targetCurrencyCode,
        CurrencyExchangeRate _exchangeRate,
        VatDueDate_W _dateOfVATRegister,
        NoYes _keepOriginalExchangeRate = NoYes::No)
    {
        if (_dateOfVATRegister != dateNull()
            && _sourceTableId
            && _sourceRecId
            && (TaxIntegrationSpecExchRateForSameCurrencyFlight::instance().isEnabled()
                || _transactionCurrencyCode != _targetCurrencyCode))
        {
            ttsbegin;
            TaxSpecificExchangeRate taxSpecificExchangeRate = TaxSpecificExchangeRate::findBySourceRecordAndCurrencyCode(
                _sourceTableId,
                _sourceRecId,
                _targetCurrencyCode,
                true);

            if (taxSpecificExchangeRate)
            {
                if (taxSpecificExchangeRate.KeepOriginalExchangeRate == NoYes::No)
                {
                    taxSpecificExchangeRate.ExchangeRate = _exchangeRate;
                    taxSpecificExchangeRate.KeepOriginalExchangeRate = _keepOriginalExchangeRate;
                }

                if (_dateOfVATRegister)
                {
                    taxSpecificExchangeRate.DateOfVATRegister = _dateOfVATRegister;
                }

                TaxSpecificExchangeRate TaxSpecificExchangeRate_orig = taxSpecificExchangeRate.orig();
                if (TaxSpecificExchangeRate_orig.ExchangeRate != taxSpecificExchangeRate.ExchangeRate
                    || TaxSpecificExchangeRate_orig.DateOfVATRegister != taxSpecificExchangeRate.DateOfVATRegister)
                {
                    taxSpecificExchangeRate.update();
                }
            }
            else
            {
                taxSpecificExchangeRate.SourceTableId = _sourceTableId;
                taxSpecificExchangeRate.SourceRecId = _sourceRecId;
                taxSpecificExchangeRate.ExchangeRate = _exchangeRate;
                taxSpecificExchangeRate.CurrencyCode = _targetCurrencyCode;
                taxSpecificExchangeRate.DateOfVATRegister = _dateOfVATRegister;
                taxSpecificExchangeRate.KeepOriginalExchangeRate = _keepOriginalExchangeRate;
                taxSpecificExchangeRate.insert();
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateOfVATRegister</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date of VAT register.
    /// </summary>
    /// <param name = "_sourceTableId">The source table id.</param>
    /// <param name = "_sourceRecId">The source record id.</param>
    /// <returns>The VAT register date.</returns>
    internal static VatDueDate_W getDateOfVATRegister(RefTableId _sourceTableId, RefRecId _sourceRecId)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        select firstonly DateOfVATRegister from taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId;

        return taxSpecificExchangeRate.DateOfVATRegister;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExchangeRateByCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the exchange rate by the given currency code and source document.
    /// </summary>
    /// <param name = "_sourceTableId">The source table id.</param>
    /// <param name = "_sourceRecId">The source reccord id.</param>
    /// <param name = "_currencyCode">The currency code.</param>
    /// <returns>The exchange rate.</returns>
    internal static CurrencyExchangeRate getExchangeRateByCurrency(
        RefTableId _sourceTableId,
        RefRecId _sourceRecId,
        CurrencyCode _currencyCode)
    {
        TaxSpecificExchangeRate taxSpecificExchangeRate;

        select firstonly ExchangeRate from taxSpecificExchangeRate
            where taxSpecificExchangeRate.SourceTableId == _sourceTableId
                && taxSpecificExchangeRate.SourceRecId == _sourceRecId
                && taxSpecificExchangeRate.CurrencyCode == _currencyCode;

        return taxSpecificExchangeRate.ExchangeRate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<Label>@TaxIntegration:TaxSpecificExchangeRateFeature</Label>
	<TitleField1>SourceTableId</TitleField1>
	<TitleField2>SourceRecId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOfVATRegister</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTaxExchangeRate</Name>
			<Label>@GLS112406</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateOfVATRegister</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KeepOriginalExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateOfVATRegister</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>KeepOriginalExchangeRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyExchangeRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Identification</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustConfirmJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustConfirmJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceInfoTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendInvoiceInfoTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>