<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOverdueCITPITJournalLineDetail_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendOverdueCITPITJournalLineDetail_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>excludeDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns exclude value for source overdue CIT and PIT journal line
    /// </summary>
    /// <returns>
    /// Exclude field value
    /// </returns>
    display public Exclude_W excludeDisplay()
    {
        return VendOverdueCITPITTurnJournalLine_W::findRecId(this.LineRefRecId).Exclude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromOverdueCITPITJournalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current <c>VendOverdueCITPITReportLineTmp_W</c> record using the <c>VendOverdueCITPITTurnJournalLine_W</c> record.
    /// </summary>
    /// <param name="_overdueTurnJournalLine">
    /// The <c>VendOverdueCITPITTurnJournalLine_W</c> record from which to initialize the
    /// </param>
    void initFromOverdueCITPITJournalLine(VendOverdueCITPITTurnJournalLine_W  _overdueTurnJournalLine)
    {
        this.LineRefRecId   = _overdueTurnJournalLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overdueAmountCurDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns overdue amount in transaction currency for current line.
    /// </summary>
    /// <returns>
    /// Overdue amount in transaction currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountCur field value is negative(debt), otherwise amount is payment.
    /// </remarks>
    display public OverdueAmountCur_W overdueAmountCurDisplay()
    {
        OverdueAmountCur_W overdueAmountCur;

        if (this.OverdueAmountCur < 0)
        {
            overdueAmountCur = - this.OverdueAmountCur;
        }
        return overdueAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overdueAmountMSTDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns overdue amount in accounting currency for current line.
    /// </summary>
    /// <returns>
    /// Overdue amount in accounting currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountMST field value is negative(debt), otherwise amount is payment.
    /// </remarks>
    display public OverdueAmountMST_W overdueAmountMSTDisplay()
    {
        OverdueAmountMST_W overdueAmountMST;

        if (this.OverdueAmountMST < 0)
        {
            overdueAmountMST = - this.OverdueAmountMST;
        }
        return overdueAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paidAmountCurDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns paid amount in transaction currency for current line.
    /// </summary>
    /// <returns>
    /// Paid amount in transaction currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountCur field value is positive(payment), otherwise amount is debt.
    /// </remarks>
    display public OverduePaidAmountCur_W paidAmountCurDisplay()
    {
        OverduePaidAmountCur_W  paidAmountCur;

        if (this.OverdueAmountCur > 0)
        {
            paidAmountCur = this.OverdueAmountCur;
        }
        return paidAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paidAmountMSTDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns paid amount in accounting currency for current line.
    /// </summary>
    /// <returns>
    /// Paid amount in accounting currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountMST field value is negative(payment), otherwise amount is debt.
    /// </remarks>
    display public OverduePaidAmountMST_W paidAmountMSTDisplay()
    {
        OverduePaidAmountMST_W  paidAmountMST;

        if (this.OverdueAmountMST > 0)
        {
            paidAmountMST = this.OverdueAmountMST;
        }
        return paidAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalLineDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method calculates the overdue and paid amounts by query
    /// </summary>
    /// <param name="_query">
    /// The query with ranges on search
    /// </param>
    /// <param name="_exclude">
    /// Excludes from the calculation the rows that was excluded
    /// </param>
    /// <returns>
    /// A contaniner with results of search. Firs value is overdue amount, second is paid amount
    /// </returns>
    /// <remarks>
    /// Values ​​are considered on the same field OverdueAmount. If the value is less than zero - this is overdue amount,
    /// if greater than zero - this is paid amount.
    /// </remarks>
    public static container calcTotalLineDetails(Query _query, boolean  _exclude = false)
    {
        VendOverdueCITPITJournalLineDetail_W    overdueJournalLineDetail;
        Query                                   query;
        QueryBuildDataSource                    qbds;
        QueryBuildRange                         qbr;
        QueryRun                                queryRun;

        OverdueAmountMST_W                      totalTurnOverdueAmountMST;
        OverduePaidAmountMST_W                  totalTurnPaidAmountMST;

        VendOverdueCITPITJournalLineDetail_W getTotals(boolean   _less   = false)
        {
            query = new Query(_query);
            qbds    = SysQuery::findOrCreateDataSource(query, tableNum(VendOverdueCITPITJournalLineDetail_W));
            qbds.addSelectionField(fieldNum(VendOverdueCITPITJournalLineDetail_W, OverdueAmountCur), SelectionField::Sum);
            qbds.addSelectionField(fieldNum(VendOverdueCITPITJournalLineDetail_W, OverdueAmountMST), SelectionField::Sum);

            qbr     = qbds.addRange(fieldNum(VendOverdueCITPITJournalLineDetail_W, RecId));
            if (_less)
            {
                qbr.value(strFmt('(%1.%2 < 0)',
                                    qbds.name(),
                                    fieldStr(VendOverdueCITPITJournalLineDetail_W, OverdueAmountMST)));
            }
            else
            {
                qbr.value(strFmt('(%1.%2 > 0)',
                                    qbds.name(),
                                    fieldStr(VendOverdueCITPITJournalLineDetail_W, OverdueAmountMST)));
            }

            if (_exclude)
            {
                qbds    = SysQuery::findOrCreateDataSource(query, tableNum(VendOverdueCITPITTurnJournalLine_W));
                qbds.relations(true);
                qbds.joinMode(JoinMode::ExistsJoin);
                findOrCreateRange_W(qbds, fieldNum(VendOverdueCITPITTurnJournalLine_W, Exclude), queryValue(NoYes::No));
            }

            queryRun    = new QueryRun(query);
            queryRun.next();

            return queryRun.get(tableNum(VendOverdueCITPITJournalLineDetail_W));
        }

        overdueJournalLineDetail    = getTotals(true);
        totalTurnOverdueAmountMST   = overdueJournalLineDetail.overdueAmountMSTDisplay();

        overdueJournalLineDetail    = getTotals();
        totalTurnPaidAmountMST      = overdueJournalLineDetail.paidAmountMSTDisplay();

        return [totalTurnOverdueAmountMST, totalTurnPaidAmountMST];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4004004</DeveloperDocumentation>
	<Label>@SYS4004003</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>LedgerAccount</TitleField1>
	<TitleField2>OverdueAmountMST</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OverdueAmount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>overdueAmountMSTDisplay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>overdueAmountCurDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaidAmount</Name>
			<Label>@SYS59532</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>paidAmountCurDisplay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>paidAmountMSTDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDisplayValueLTR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LineRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OverdueAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCurDebCred</ExtendedDataType>
			<Label>@SYS4003544</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OverdueAmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<Label>@SYS4003546</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LineRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendOverdueCITPITJournalLineDetail_W</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendOverdueCITPITTurnJournalLine_W</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>VendOverdueCITPITTurnJournalLine_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LineRefRecId</Name>
					<Field>LineRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>