<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqSitePolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqSitePolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ReqSitePolicy</c> table.
    /// </summary>
    /// <param name="_siteId">
    /// The site ID of the record to find.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ReqSitePolicy</c> table; otherwise, an empty record.
    /// </returns>
    public static ReqSitePolicy find(InventSiteId _siteId, boolean _update = false)
    {
        ReqSitePolicy   reqSitePolicy;

        reqSitePolicy.selectForUpdate(_update);

        if (_siteId)
        {
            select reqSitePolicy
                where reqSitePolicy.InventSiteId == _siteId;
        }

        return reqSitePolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes record in the <c>ReqSitePolicy</c> table.
    /// </summary>
    /// <param name = "_inventSiteId">The site ID of the record to delete.</param>
    internal static void deleteInventSiteId(InventSiteId _inventSiteId)
    {
        ReqSitePolicy reqSitePolicy;

        delete_from reqSitePolicy
            where reqSitePolicy.InventSiteId == _inventSiteId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SYS318610</DeveloperDocumentation>
	<Label>@SYS318611</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>InventSiteId</TitleField1>
	<TitleField2>UseTransferJournals</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>InventSiteIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseTransferJournals</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MasterPlanning</Name>
			<Label>@SYS25606</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UseTransferJournals</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseTransferJournals</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqUseTransferJournals</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventSiteIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Site</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Site</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>SitePolicy</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>