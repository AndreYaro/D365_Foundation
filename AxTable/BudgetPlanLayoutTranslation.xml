<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanLayoutTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanLayoutTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutTranslation</c> table.
    /// </summary>
    /// <param name="_budgetPlanLayoutTranslationRecId"> The <c>BudgetPlanLayoutTranslation</c> record ID to find. </param>
    /// <param name="_forUpdate"> A Boolean value that specifies whether to read the record for update; optional. </param>
    /// <param name="_concurrencyModel"> An enumeration value that indicates the concurrency settings to use on the table; optional. </param>
    /// <returns> A <c>BudgetPlanLayoutTranslation</c> record. </returns>
    public static BudgetPlanLayoutTranslation find(
        BudgetPlanLayoutTranslationRecId    _budgetPlanLayoutTranslationRecId,
        boolean                             _forUpdate = false,
        ConcurrencyModel                    _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanLayoutTranslation budgetPlanLayoutTranslation;

        if (_budgetPlanLayoutTranslationRecId)
        {
            budgetPlanLayoutTranslation.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanLayoutTranslation.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanLayoutTranslation
                where budgetPlanLayoutTranslation.RecId == _budgetPlanLayoutTranslationRecId;
        }

        return budgetPlanLayoutTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLayoutLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutTranslation</c> table that is based on the specified
    /// <c>BudgetPlanLayout</c> and <c>LanguageId</c> values.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId"> The value of the <c>BudgetPlanLayout</c> field to find. </param>
    /// <param name="_languageId"> The value of the <c>LanguageId</c> field to find. </param>
    /// <param name="_forUpdate"> A Boolean value that specifies whether to read the record for update; optional. </param>
    /// <param name="_concurrencyModel"> An enumeration value that indicates the concurrency settings to use on the table; optional. </param>
    /// <returns> A <c>BudgetPlanLayoutTranslation</c> record. </returns>
    public static BudgetPlanLayoutTranslation findByLayoutLanguage(
        BudgetPlanLayoutRecId   _budgetPlanLayoutRecId,
        LanguageId              _languageId,
        boolean                 _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanLayoutTranslation budgetPlanLayoutTranslation;

        if (_budgetPlanLayoutRecId && _languageId)
        {
            budgetPlanLayoutTranslation.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanLayoutTranslation.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanLayoutTranslation
                where budgetPlanLayoutTranslation.Layout == _budgetPlanLayoutRecId
                    && budgetPlanLayoutTranslation.LanguageId == _languageId;
        }

        return budgetPlanLayoutTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNameLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutTranslation</c> table that is based on the specified
    /// <c>BudgetPlanLayoutName</c> and <c>LanguageId</c> values.
    /// </summary>
    /// <param name="_budgetPlanLayoutName"> The value of the <c>BudgetPlanLayout</c> name to find. </param>
    /// <param name="_languageId"> The value of the <c>LanguageId</c> field to find. </param>
    /// <param name="_forUpdate"> A Boolean value that specifies whether to read the record for update; optional. </param>
    /// <returns> A <c>BudgetPlanLayoutTranslation</c> record. </returns>
    public static BudgetPlanLayoutTranslation findByNameLanguage(
        BudgetPlanLayoutName    _budgetPlanLayoutName,
        boolean                 _forUpdate = false,
        LanguageId              _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutTranslation budgetPlanLayoutTranslation;

        if (budgetPlanLayoutTranslation)
        {
            budgetPlanLayoutTranslation.selectForUpdate(_forUpdate);

            select firstonly budgetPlanLayoutTranslation
                where budgetPlanLayoutTranslation.Name == _budgetPlanLayoutName
                    && budgetPlanLayoutTranslation.LanguageId == _languageId;
        }

        return budgetPlanLayoutTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates a <c>BudgetPlanLayoutTranslation</c> record.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId"> The record ID of a <c>BudgetPlanLayout</c> record. </param>
    /// <param name="_name"> A specified budget plan layout name value. </param>
    /// <param name="_description"> A specified budget plan layout description value. </param>
    /// <param name="_languageId"> A specified <c>LanguageId</c> value. </param>
    public static void createOrUpdateTranslation(
        BudgetPlanLayoutRecId       _budgetPlanLayoutRecId,
        BudgetPlanLayoutName        _name,
        BudgetPlanLayoutDescription _description = BudgetPlanningConstants::emptyString,
        LanguageId                  _languageId = BudgetPlanningConstants::emptyString)
    {
        BudgetPlanLayoutTranslation budgetPlanLayoutTranslation;
        LanguageId                  languageId = _languageId;

        if (!_languageId)
        {
            languageId = SystemParameters::systemLanguageId();
        }

        if (languageId)
        {
            ttsbegin;

            budgetPlanLayoutTranslation = BudgetPlanLayoutTranslation::findByLayoutLanguage(_budgetPlanLayoutRecId, languageId, true);

            if (budgetPlanLayoutTranslation)
            {
                budgetPlanLayoutTranslation.Name        = _name;
                budgetPlanLayoutTranslation.Description = _description;
                budgetPlanLayoutTranslation.update();
            }
            else
            {
                budgetPlanLayoutTranslation.Layout          = _budgetPlanLayoutRecId;
                budgetPlanLayoutTranslation.Name            = _name;
                budgetPlanLayoutTranslation.Description     = _description;
                budgetPlanLayoutTranslation.LanguageId      = languageId;
                budgetPlanLayoutTranslation.insert();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>Name</c> field of the <c>BudgetPlanLayout</c> table.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId"> The ID of a <c>BudgetPlanLayout</c> record for which a name is retrieved. </param>
    /// <returns> The localized name of a <c>BudgetPlanLayout</c> record. </returns>
    public static BudgetPlanLayoutName getLocalizedName(BudgetPlanLayoutRecId _budgetPlanLayoutRecId)
    {
        BudgetPlanLayoutName budgetPlanLayoutName;

        budgetPlanLayoutName = BudgetPlanLayoutTranslation::findByLayoutLanguage(
                                    _budgetPlanLayoutRecId,
                                    currentUserLanguage()
                                    ).Name;
        if (!budgetPlanLayoutName)
        {
            budgetPlanLayoutName = BudgetPlanLayoutTranslation::findByLayoutLanguage(
                                        _budgetPlanLayoutRecId,
                                        SystemParameters::getSystemLanguageId()
                                        ).Name;
        }

        if (!budgetPlanLayoutName)
        {
            budgetPlanLayoutName = BudgetPlanLayout::find(_budgetPlanLayoutRecId).Name;
        }

        return budgetPlanLayoutName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@Budget:LayoutTranslationDeveloperDocumentation</DeveloperDocumentation>
	<Label>@Budget:LayoutTranslation</Label>
	<SingularLabel>@Budget:LayoutTranslationSingular</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>LayoutLanguageAK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Layout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Layout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Layout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanLayoutName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Layout</Name>
			<AssetClassification>System metadata</AssetClassification>
			<ExtendedDataType>BudgetPlanLayoutRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanLayoutDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Label>@SYS66040</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LayoutLanguageAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Layout</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameLanguageAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanLayoutRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanLayout</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LayoutRecId</Name>
					<Field>Layout</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageIdRecId</Name>
					<Field>LanguageId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>