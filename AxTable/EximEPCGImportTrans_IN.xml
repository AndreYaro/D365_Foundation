<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximEPCGImportTrans_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximEPCGImportTrans_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays item name.
    /// </summary>
    /// <returns>
    /// The item name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display ItemName displayItemName()
    {
        return EximEPCGImportTrans_IN::itemName(this.CustomsVendBOETransRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayMaxUlilizationPct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays maximum utilization pct.
    /// </summary>
    /// <returns>
    /// The maximum utilization pct.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Percent displayMaxUlilizationPct()
    {
        return EximParameters_IN::find().epcgMaxUtilizationPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPurchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays purchase unit id.
    /// </summary>
    /// <returns>
    /// The purchase unit id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display PurchUnit displayPurchUnit()
    {
        return EximEPCGImportTrans_IN::purchUnit(this.CustomsVendBOETransRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowableImpValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets allowableValue for specified EximEPCGSchemeTableRecId_IN.
    /// </summary>
    /// <param name="_schemeTableRecId">EximEPCGSchemeTableRecId_IN</param>
    /// <returns>AmountMST</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST allowableImpValue(EximEPCGSchemeTableRecId_IN _schemeTableRecId)
    {
        AmountMST allowableValue;

        allowableValue = EximEPCGSchemeTable_IN::findRecId(_schemeTableRecId).ImportValueMST;

        if (allowableValue)
        {
            allowableValue += allowableValue * (EximParameters_IN::find().epcgMaxUtilizationPct / 100);
        }

        return allowableValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cumulativeImportValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Cumulative ImportValue from EximEPCGImportTrans_IN for specified EximEPCGSchemeTableRecId_IN.
    /// </summary>
    /// <param name="_schemeTableRecId">EximEPCGSchemeTableRecId_IN</param>
    /// <returns>AmountMST</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST cumulativeImportValue(EximEPCGSchemeTableRecId_IN _schemeTableRecId)
    {
        return (select sum(ImportValue) from eximEPCGImportTrans_IN
            where eximEPCGImportTrans_IN.SchemeTableRecId == _schemeTableRecId).ImportValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximEPCGImportTrans_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximEPCGImportTrans_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximEPCGImportTrans_IN find(
        RefRecId            _recId,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximEPCGImportTrans_IN  eximEPCGImportTrans;

        eximEPCGImportTrans.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximEPCGImportTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximEPCGImportTrans
            where eximEPCGImportTrans.RecId == _recId;

        return eximEPCGImportTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>importValueExpObligation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the obligationImpValue from EximEPCGImportTrans_IN table for specified EximEPCGSchemeTableRecId_IN.
    /// </summary>
    /// <param name="_schemeTableRecId">EximEPCGSchemeTableRecId_IN</param>
    /// <returns>AmountMST</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST importValueExpObligation(EximEPCGSchemeTableRecId_IN _schemeTableRecId)
    {
        AmountMST   obligationImpValue;
        AmountMST   cumulativeImportValue;
        AmountMST   allowableImportValue;

        cumulativeImportValue = EximEPCGImportTrans_IN::cumulativeImportValue(_schemeTableRecId);
        allowableImportValue  = EximEPCGImportTrans_IN::allowableImpValue(_schemeTableRecId);

        obligationImpValue = (cumulativeImportValue < allowableImportValue) ? cumulativeImportValue : allowableImportValue;

        if (cumulativeImportValue == 0)
        {
            obligationImpValue = allowableImportValue;
        }
        if (allowableImportValue == 0)
        {
            obligationImpValue = cumulativeImportValue;
        }

        return obligationImpValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets ItemName for specified CustomsVendBOETransRecId_IN.
    /// </summary>
    /// <param name="_customsVendBOETransRecId">CustomsVendBOETransRecId_IN</param>
    /// <returns>ItemName</returns>
    private static ItemName itemName(CustomsVendBOETransRecId_IN _customsVendBOETransRecId)
    {
        CustomsVendBOETrans_IN customsVendBOETrans;

        select firstonly ItemId, RecId
            from customsVendBOETrans
            where customsVendBOETrans.RecId == _customsVendBOETransRecId;

        return inventTable::find(customsVendBOETrans.ItemId).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets UnitId for given CustomsVendBOETransRecId_IN.
    /// </summary>
    /// <param name="_customsVendBOETransRecId">CustomsVendBOETransRecId_IN</param>
    /// <returns>UnitOfMeasureSymbol</returns>
    private static UnitOfMeasureSymbol purchUnit(CustomsVendBOETransRecId_IN _customsVendBOETransRecId)
    {
        CustomsVendBOETrans_IN customsVendBOETrans;
        InventTableModule      inventTableModule;

        select firstonly ItemId, RecId
            from customsVendBOETrans
            where customsVendBOETrans.RecId == _customsVendBOETransRecId
        join UnitId, ItemId
            from inventTableModule
            where inventTableModule.ItemId     == customsVendBOETrans.ItemId
               && inventTableModule.ModuleType == ModuleInventPurchSales::Purch;

        return inventTableModule.UnitId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62450</DeveloperDocumentation>
	<Label>@SYS15191</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ImportValue</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchemeTableRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS23497</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchemeTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomsVendBOETransRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustomsVendBOETransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ImportValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS5298</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SchemeTableRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustomsVendBOETransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustomsVendBOETransRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EximEPCGSchemeTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SchemeTableRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustomsVendBOETrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustomsVendBOETrans_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustomsVendBOETrans_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomsVendBOETrans_IN_EximEPCGImportTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustomsVendBOETransRecId</Name>
					<Field>CustomsVendBOETransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximEPCGSchemeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximEPCGSchemeTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximEPCGSchemeTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximEPCGSchemeTable_IN_EximEPCGImportTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SchemeTableRecId</Name>
					<Field>SchemeTableRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>