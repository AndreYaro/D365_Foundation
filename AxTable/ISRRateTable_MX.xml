<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ISRRateTable_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ISRRateTable_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified field can be modified.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field ID of the field to modify.
    /// </param>
    public void modifiedField(fieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldnum(ISRRateTable_MX, Month):
                this.setLowerAmount();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLowerAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Assigns the lower amount field based on the records found in the <c>isrRateTable</c> table.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setLowerAmount()
    {
        ISRRateTable_MX isrRateTable;

        select firstonly maxof(UpperAmount), RecId
            from isrRateTable
            where isrRateTable.Year  == this.Year
               && isrRateTable.Month == this.Month;

        this.LowerAmount = isrRateTable ? isrRateTable.UpperAmount + 0.01 : 0.00;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the current ISR rate setup record before it is deleted from the database.
    /// </summary>
    /// <returns>
    ///    true if the current upper amount is larger than past upper amounts; otherwise, false.
    /// </returns>
    boolean validateDelete()
    {
        ISRRateTable_MX localISRRateTable;
        boolean         ret;

        ret = super();

        if (ret)
        {
            select maxof(UpperAmount) from localISRRateTable
                where localISRRateTable.Year  == this.Year
                   && localISRRateTable.Month == this.Month;

            if (localISRRateTable.UpperAmount > this.UpperAmount)
            {
                ret = checkFailed("@SYS312433");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified field to be verified.
    /// </summary>
    /// <param name="_fieldId">
    /// The field ID of the field to verfiy.
    /// </param>
    /// <returns>
    /// Returns true if the Month field vaue is between 1 and 12, otherwise returns false
    /// </returns>
    public boolean validateField(fieldId _fieldId)
    {
        boolean ret;

        ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case fieldnum(ISRRateTable_MX, Month):
                    ret = this.validateMonth();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFixedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the current ISR rate setup <c>FixedAmount</c> fields before they are written to the
    /// database.
    /// </summary>
    /// <returns>
    /// true if the fixed amount is less than zero; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateFixedAmount()
    {
        ISRRateTable_MX localISRRateTable;
        boolean ret = true;

        if (this.FixedAmount < 0.00)
        {
            ret = checkFailed("@SYS314741");
        }
        else if (this.FixedAmount == 0.00)
        {
            select RecId  from  localISRRateTable
                where localISRRateTable.Year  == this.Year
                   && localISRRateTable.Month == this.Month
                   && this.LowerAmount        != 0.00;

            if (localISRRateTable)
            {
                ret = checkFailed("@SYS312582");
            }
        }
        else
        {
            select RecId from localISRRateTable
                where localISRRateTable.Year  == this.Year
                && localISRRateTable.Month == this.Month
                && localISRRateTable.RecId != this.RecId;

            if (!localISRRateTable)
            {
                ret = checkfailed("@SYS320828");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMonth</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the current ISR rate setup Rate fields before it is written to the database.
    /// </summary>
    /// <returns>
    ///    true if the Month field is between 0 and 12 ; otherwise, false
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateMonth()
    {
        boolean ret = true;

        // Blank months (month = 0) are handled by the framework
        if (this.Month < 0 || this.Month > 12)
        {
            ret = checkFailed("@SYS321275");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the current ISR rate setup rate fields before they are written to the database.
    /// </summary>
    /// <returns>
    ///    true if the rate percentage is not equal to zero ; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateRate()
    {
        boolean ret = true;

        if (this.Rate == 0.00)
        {
            ret = checkFailed("@SYS312437");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUpperLowerAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the current ISR rate setup lower and upper amount fields before they are written to the
    ///    database.
    /// </summary>
    /// <returns>
    ///    true if the upper amount is more than or equal to the lower amount; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateUpperLowerAmount()
    {
        boolean ret = true;

        if (this.UpperAmount < this.LowerAmount)
        {
            ret = checkFailed("@SYS312435");
        }

        if (this.UpperAmount == this.LowerAmount)
        {
            ret = checkFailed("@SYS314742");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the current ISR rate setup record before it is written to the database.
    /// </summary>
    /// <returns>
    ///    true if the month is between 1 and 12; otherwise, false
    ///    true if the upper amount is more than lower amount; otherwise, false
    ///    true if the upper amount is equal to lower amount; otherwise, false
    ///    true if the Rate percentage is not equal to zero ; otherwise, false
    ///    true if the fixed amount is not equal to zero ; otherwise, false
    ///    true if the fixed amount is less than zero, otherwise, false
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret = true;

        ret = super();

        ret = this.validateMonth() && ret;
        ret = this.validateUpperLowerAmount() && ret;
        ret = this.validateRate() && ret;
        ret = this.validateFixedAmount() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ISRRateTable_MX</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>ISRRateTable_MX</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>ISRRateTable_MX</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ISRRateTable_MX find(
        RecId               _recId,
        boolean             _forUpdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        ISRRateTable_MX isrRateTable;

        isrRateTable.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            isrRateTable.concurrencyModel(_concurrencyModel);
        }

        select isrRateTable
            where isrRateTable.RecId == _recId;

        return isrRateTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByYearMonthMinMaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>ISRRateTable_MX</c> table for the specified year and whether the specified amount is
    /// between the lower and upper amount.
    /// </summary>
    /// <param name="_isrYear">
    /// The specified year to find.
    /// </param>
    /// <param name="_isrMonth">
    /// The specified month to find.
    /// </param>
    /// <param name="_amount">
    /// The specified amount to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value that is used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer that contains the <c>ISRRateTable_MX</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ISRRateTable_MX findByYearMonthMinMaxAmount(
        ISRYear_MX          _isrYear,
        ISRMonth_MX         _isrMonth,
        Amount              _amount,
        boolean             _forupdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        ISRRateTable_MX isrRateTable;

        isrRateTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            isrRateTable.concurrencyModel(_concurrencyModel);
        }

        select isrRateTable
            where isrRateTable.Year        == _isrYear
               && isrRateTable.Month       == _isrMonth
               && isrRateTable.UpperAmount >= _amount
               && isrRateTable.LowerAmount <= _amount;

        return isrRateTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        // Necessary due to cases where the data is does not come from the form, therefore modifieldField() is not triggered
        // e.g data inserted using data entities.
        if (!this.LowerAmount)
        {
            this.setLowerAmount();
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS328086</DeveloperDocumentation>
	<Label>@SYS312432</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Year</TitleField1>
	<TitleField2>LowerAmount</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Ledger</Modules>
	<ReplacementKey>YearRangeAmountIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LowerAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpperAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LowerAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpperAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Month</Name>
			<Label>@SYS11451</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Range</Name>
			<Label>@SYS24771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LowerAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpperAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rate</Name>
			<Label>@SYS7405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Rate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Year</Name>
			<Label>@SYS107162</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FixedAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRFixedAmount_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LowerAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRLowerAmount_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Month</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRMonth_MX</ExtendedDataType>
			<Label>@SYS11451</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Rate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRRate_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UpperAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRUpperAmount_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Year</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ISRYear_MX</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>YearRangeAmountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Year</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Month</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LowerAmount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UpperAmount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>