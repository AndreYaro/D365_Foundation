<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerInvoiceIssueDueDateSetup_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
public class LedgerInvoiceIssueDueDateSetup_W extends common
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInvoiceIssueDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates the date of invoice issue.
    /// </summary>
    /// <param name="_shipmentDate">
    ///     A date value that is used as the basis for calculating date of invoice issue.
    /// </param>
    /// <returns>
    ///     The <c>InvoiceIssueDueDate_W</c> value.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public InvoiceIssueDueDate_W getInvoiceIssueDueDate(TransDate    _shipmentDate)
    {
        InvoiceIssueDueDate_W   invoiceIssueDueDate;
        LedgerPeriodCode        ledgerPeriodCode;

        if (_shipmentDate && this.LedgerPeriodCode)
        {
            ledgerPeriodCode = LedgerPeriodCode::find(this.LedgerPeriodCode);
            if (ledgerPeriodCode)
            {
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoAE, #isoSA, #isoBH, #isoKW, #isoOM, #isoQA]))
                {
                    GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceGCC00001, funcName());
                }
                else
                {
                    GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceGBL00002, funcName());
                }

                invoiceIssueDueDate = ledgerPeriodCode.toDate(_shipmentDate);
            }
        }
        return invoiceIssueDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.StartDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record in the <c>LedgerInvoiceIssueDueDateSetup_W</c> table.
    /// </summary>
    /// <param name="_countryRegionType">
    ///     A enum value <c>CountryRegionType</c> that is used for the search.
    /// </param>
    /// <param name="_validFromDate">
    ///     A date value that is used for the search.
    /// </param>
    /// <param name="_forUpdate">
    ///     A boolean value that determines whether the record is updated; optional.
    /// </param>
    /// <returns>
    ///     A record from the <c>LedgerInvoiceIssueDueDateSetup_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public LedgerInvoiceIssueDueDateSetup_W findActive(
        CountryRegionType   _countryRegionType,
        TransDate           _validFromDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        boolean             _forUpdate      = false)
    {
        LedgerInvoiceIssueDueDateSetup_W  ledgerInvoiceIssueDueDateSetup;
        ;

        ledgerInvoiceIssueDueDateSetup.selectForUpdate(_forUpdate);

        select firstonly ledgerInvoiceIssueDueDateSetup
            order by StartDate desc
            where   ledgerInvoiceIssueDueDateSetup.CountryRegionType  == _countryRegionType
               &&   ledgerInvoiceIssueDueDateSetup.StartDate          <= _validFromDate;

        return ledgerInvoiceIssueDueDateSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCountryRegionDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record in the <c>LedgerInvoiceIssueDueDateSetup_W</c> table by AddresCountryRegionId and Date.
    /// </summary>
    /// <param name="_countryRegionId">
    ///     The <c>AddressCountryRegionId</c> parameter that is used for the search.
    /// </param>
    /// <param name="_validFromDate">
    ///      A date value that is used for the search.
    /// </param>
    /// <param name="_forUpdate">
    ///     A boolean value that determines whether the record is updated; optional.
    /// </param>
    /// <returns>
    ///     A record from the <c>LedgerInvoiceIssueDueDateSetup_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public LedgerInvoiceIssueDueDateSetup_W findCountryRegionDate(
        AddressCountryRegionId  _countryRegionId,
        TransDate               _validFromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        boolean                 _forUpdate = false)
    {
        LedgerInvoiceIssueDueDateSetup_W    ledgerInvoiceIssueDueDateSetup;
        IntrastatCountryRegionParameters    intrastatCountryRegionParameters;

        if (_countryRegionId)
        {
            intrastatCountryRegionParameters = IntrastatCountryRegionParameters::find(_countryRegionId);
            if (intrastatCountryRegionParameters)
            {
                ledgerInvoiceIssueDueDateSetup = LedgerInvoiceIssueDueDateSetup_W::findActive(intrastatCountryRegionParameters.CountryRegionType, _validFromDate, _forUpdate);
            }
        }

        return ledgerInvoiceIssueDueDateSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPostalAddressIssueDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record in the <c>LedgerInvoiceIssueDueDateSetup_W</c> table by AddresCountryRegionId, State and Date.
    /// </summary>
    /// <param name="_postalAddress">
    ///     The <c>LogisticsPostalAddress</c> parameter that is used for the search.
    /// </param>
    /// <param name="_validFromDate">
    ///      A date value that is used for the search.
    /// </param>
    /// <param name="_forUpdate">
    ///     A boolean value that determines whether the record is updated; optional.
    /// </param>
    /// <returns>
    ///     A record from the <c>LedgerInvoiceIssueDueDateSetup_W</c> table; otherwise, an empty record.
    /// </returns>
    static internal LedgerInvoiceIssueDueDateSetup_W findPostalAddressIssueDate(
        LogisticsPostalAddress  _postalAddress,
        TransDate               _validFromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        boolean                 _forUpdate = false)
    {
        LedgerInvoiceIssueDueDateSetup_W    ledgerInvoiceIssueDueDateSetup;

        if (_postalAddress)
        {
            IntrastatStateParameters intrastatStateParameters;
            if (FeatureStateProvider::isFeatureEnabled(IntrastatCountryRegionStateFeature::instance()))
            {
                intrastatStateParameters = IntrastatStateParameters::find(_postalAddress.CountryRegionId, _postalAddress.State);

                if (intrastatStateParameters)
                {
                    ledgerInvoiceIssueDueDateSetup = LedgerInvoiceIssueDueDateSetup_W::findActive(intrastatStateParameters.CountryRegionType, _validFromDate, _forUpdate);
                }
            }

            if (!intrastatStateParameters)
            {
                IntrastatCountryRegionParameters intrastatCountryRegionParameters = IntrastatCountryRegionParameters::find(_postalAddress.CountryRegionId);
                if (intrastatCountryRegionParameters)
                {
                    ledgerInvoiceIssueDueDateSetup = LedgerInvoiceIssueDueDateSetup_W::findActive(intrastatCountryRegionParameters.CountryRegionType, _validFromDate, _forUpdate);
                }
            }
        }

        return ledgerInvoiceIssueDueDateSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS4009620</DeveloperDocumentation>
	<Label>@SYS4009633</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>CountryRegionType</TitleField1>
	<TitleField2>StartDate</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>Ledger</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerPeriodCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerPeriodCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CountryRegionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CountryRegionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerPeriodCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DateCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<ExtendedDataType>StartDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeDateIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CountryRegionType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerPeriodCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerPeriodCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerPeriodCode</Name>
					<Field>LedgerPeriodCode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>