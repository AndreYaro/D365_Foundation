<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMJournalAggregationField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CFMJournalAggregationField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Description for record
    /// </summary>
    /// <returns>Description of the record</returns>
    public display Description description()
    {
        FieldId fieldId = fieldName2id(tableNum(CFMJournalTrans), this.FieldName);
        Description fieldDescription = fieldId2pname(tableNum(CFMJournalTrans), fieldId);

        switch (fieldId)
        {
            case fieldNum(CFMJournalTrans, LedgerDimension):
                fieldDescription += (' - ' + DimensionAttribute::find(this.DimensionAttribute).Name);
                break;

            case fieldNum(CFMJournalTrans, AccountNumParty):
                fieldDescription = "@SYS126057";
                break;

            case fieldNum(CFMJournalTrans, SourceDataArea):
                fieldDescription = "@SYS305493";
                break;
        }

        return fieldDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init record from Source record
    /// </summary>
    /// <param name = "_source"></param>
    public void initFromSource(Common _source)
    {
        this.SetupSourceType = CFMJournalName::tableIdToSourceType(_source.TableId);
        this.SourceRecId = _source.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRecord</Name>
				<Source><![CDATA[
    private void initRecord(Common _source, FieldId _fieldId, DimensionAttributeRecID _dimensionAttribute = 0)
    {
        this.initFromSource(_source);
        this.FieldName = fieldId2name(CFMJournalAggregationField::aggregationTableId(), _fieldId);
        this.DimensionAttribute = _dimensionAttribute;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        FieldName dimensionAttributeFieldName = fieldId2name(tableNum(CFMJournalTrans), fieldNum(CFMJournalTrans, LedgerDimension));

        if (this.FieldName == dimensionAttributeFieldName &&
            !this.DimensionAttribute)
        {
            throw error("@CashFlowManagement:DimensionAttributeFilledForDimensionField");
        }

        if (this.FieldName != dimensionAttributeFieldName &&
            this.DimensionAttribute)
        {
            throw error("@CashFlowManagement:DimensionAttrFieldEmptyForNonDimensionField");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationFieldsList</Name>
				<Source><![CDATA[
    /// <summary>
    /// List of agrregation fields
    /// </summary>
    /// <param name = "_source"></param>
    /// <returns>return List of aggregation fields</returns>
    public static List aggregationFieldsList(Common _source)
    {
        List list = new List(Types::Record);
        DimensionHierarchyId dimensionSet = CFMParameters::findInCentralizedPaymentsCompany().DimensionSet;

        void clearInitAddToSet(FieldId _fieldId, DimensionAttributeRecId _dimensionAttribute = 0)
        {
            if (isConfigurationkeyEnabled(new sysDictField(tablenum(CFMJournalTrans), _fieldId).configurationKeyId()))
            {
                CFMJournalAggregationField aggregationField;

                aggregationField.clear();
                aggregationField.initRecord(_source, _fieldId, _dimensionAttribute);
                list.addEnd(aggregationField);
            }
        }

        if (_source.TableId != tableNum(CFMJournalTable) && _source.TableId != tableNum(CFMJournalName))
        {
            throw error("@CashFlowManagement:OnlyJourTableOrJourNamePossibleForMethod");
        }

        clearInitAddToSet(fieldNum(CFMJournalTrans, PaymentAccountType));
        clearInitAddToSet(fieldNum(CFMJournalTrans, PaymentAccountNum));
        clearInitAddToSet(fieldNum(CFMJournalTrans, SourceDataArea));
        clearInitAddToSet(fieldNum(CFMJournalTrans, CashflowDirection));
        clearInitAddToSet(fieldNum(CFMJournalTrans, PaymentPriority));
        clearInitAddToSet(fieldNum(CFMJournalTrans, Status));
        clearInitAddToSet(fieldNum(CFMJournalTrans, PaymMode));
        clearInitAddToSet(fieldNum(CFMJournalTrans, AccountNumParty));

        if (dimensionSet && isConfigurationkeyEnabled(new sysDictField(tablenum(CFMJournalTrans), fieldNum(CFMJournalTrans, LedgerDimension)).configurationKeyId()))
        {
            DimensionHierarchyLevel dimensionHierarchyLevel;

            while select dimensionHierarchyLevel
                where dimensionHierarchyLevel.DimensionHierarchy == dimensionSet
            {
                clearInitAddToSet(fieldNum(CFMJournalTrans, LedgerDimension), dimensionHierarchyLevel.DimensionAttribute);
            }
        }

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationFieldsNotSelectedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// None selected aggregation fields list
    /// </summary>
    /// <param name = "_source"></param>
    /// <returns>return None selected aggregation fields list </returns>
    public static List aggregationFieldsNotSelectedList(Common _source)
    {
        List listSelected = CFMJournalAggregationField::aggregationFieldsSelectedList(_source);
        List listAll = CFMJournalAggregationField::aggregationFieldsList(_source);
        List listNotSelected = new List(Types::Record);

        ListEnumerator listEnumAll = listAll.getEnumerator();
        ListEnumerator listEnumSelected = listSelected.getEnumerator();

        boolean existsInSelectedFields;

        while (listEnumAll.moveNext())
        {
            CFMJournalAggregationField aggregationFieldAll = listEnumAll.current();
            existsInSelectedFields = false;
            listEnumSelected.reset();

            // There are limited number of values, so the while-while is not so complex for this number of elements
            while (listEnumSelected.moveNext())
            {
                CFMJournalAggregationField aggregationFieldSel = listEnumSelected.current();

                if (aggregationFieldAll.FieldName == aggregationFieldSel.FieldName &&
                    aggregationFieldAll.DimensionAttribute == aggregationFieldSel.DimensionAttribute)
                {
                    existsInSelectedFields = true;
                }
            }

            if (!existsInSelectedFields)
            {
                listNotSelected.addEnd(aggregationFieldAll);
            }
        }

        return listNotSelected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationFieldsSelectedList</Name>
				<Source><![CDATA[
    /// <summary>
    /// selected aggregation fields list
    /// </summary>
    /// <param name = "_source"></param>
    /// <returns>return selected aggregation fields list</returns>
    public static List aggregationFieldsSelectedList(Common _source)
    {
        List list = new List(Types::Record);
        CFMJournalAggregationField aggregationField;

        while select aggregationField
            where aggregationField.SetupSourceType == CFMJournalName::tableIdToSourceType(_source.TableId)
               && aggregationField.SourceRecId == _source.RecId
        {
            list.addEnd(aggregationField);
        }

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregationTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// aggregation TableId
    /// </summary>
    /// <returns>return aggregation TableId</returns>
    public static TableId aggregationTableId()
    {
        return tableNum(CFMJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRecId</Name>
				<Source><![CDATA[
    public static boolean existRecId(RefRecId _recId)
    {
        CFMJournalAggregationField aggregationField;

        if (_recId)
        {
            select firstOnly RecId from aggregationField
                where aggregationField.RecId == _recId;
        }

        return aggregationField.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static CFMJournalAggregationField findRecId(RefRecId _recId, boolean _forupdate = false)
    {
        CFMJournalAggregationField aggregationField;

        if (_recId)
        {
            aggregationField.selectForUpdate(_forupdate);

            select firstOnly aggregationField
                where aggregationField.RecId == _recId;
        }

        return aggregationField;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CFMCashflowManagement</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@CashFlowManagement:JournalAggregationFieldDevDescription</DeveloperDocumentation>
	<Label>@CashFlowManagement:PaymSchedJourAggregationParameters</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>FieldName</TitleField1>
	<TitleField2>DimensionAttribute</TitleField2>
	<Modules>RCashFlowManagement</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionAttribute</Name>
			<ExtendedDataType>DimensionAttributeRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<ExtendedDataType>FieldName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SetupSourceType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Visible>No</Visible>
			<EnumType>CFMJournalSetupSourceType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FieldDimIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SetupSourceType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DimensionAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CFMRefrecIdMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>SourceRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceType</MapField>
					<MapFieldTo>SetupSourceType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>CFMJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CFMJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SetupSourceType</Name>
					<Field>SetupSourceType</Field>
					<ValueStr>CFMJournalSetupSourceType::JournalName</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CFMJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CFMJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SetupSourceType</Name>
					<Field>SetupSourceType</Field>
					<ValueStr>CFMJournalSetupSourceType::JournalTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DimensionAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionAttribute</Name>
					<Field>DimensionAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>