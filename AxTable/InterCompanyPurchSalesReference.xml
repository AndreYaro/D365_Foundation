<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyPurchSalesReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InterCompanyPurchSalesReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(SalesId _salesId, PurchId _purchId)
    {
        return _salesId && _purchId && (select RecId from interCompanyPurchSalesReference
                    index hint SalesPurchIdx
                    where interCompanyPurchSalesReference.SalesId == _salesId
                    &&    interCompanyPurchSalesReference.PurchId == _purchId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InterCompanyPurchSalesReference find(SalesId _salesId,
                                                PurchId _purchId,
                                                boolean _update = false)
    {
        InterCompanyPurchSalesReference interCompanyPurchSalesReference;

        interCompanyPurchSalesReference.selectForUpdate(_update);

        if (_salesId && _purchId)
        {
            select firstonly interCompanyPurchSalesReference
                index hint SalesPurchIdx
                where interCompanyPurchSalesReference.SalesId == _salesId
                &&    interCompanyPurchSalesReference.PurchId == _purchId;
        }

        return interCompanyPurchSalesReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesTableReferenced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks does <c>InterCompanyPurchSalesReference</c> has any reference for a specified sales order.
    /// </summary>
    /// <param name="_salesId">
    /// A sales order Id.
    /// </param>
    /// <returns>
    /// true if given sales order has at least one reference; otherwise, false.
    /// </returns>
    public static boolean isSalesTableReferenced(SalesId _salesId)
    {
        InterCompanyPurchSalesReference interCompanyPurchSalesReference;

        select firstonly RecId from interCompanyPurchSalesReference
            where interCompanyPurchSalesReference.SalesId == _salesId;

        return interCompanyPurchSalesReference.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchTableForIntercompanyReuse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns a <c>PurchTable</c> record that can be reused for sourcing for a given sales order and a given vendor.
    /// </summary>
    /// <param name = "_salesId">The sales order to create sourcing for.</param>
    /// <param name = "_vendAccount">The vendor to source from.</param>
    /// <returns>The <c>PurchTable</c> record if it exists, otherwise an empty buffer.</returns>
    public static PurchTable findPurchTableForIntercompanyReuse(SalesId _salesId, VendAccount _vendAccount)
    {
        InterCompanyPurchSalesReference interCompanyPurchSalesReference;
        PurchTable                      purchTable;

        select forceplaceholders firstonly PurchId from interCompanyPurchSalesReference
                   index hint SalesPurchIdx
                   where interCompanyPurchSalesReference.SalesId == _salesId
            join   purchTable
                   index hint PurchIdx
                   where purchTable.PurchId      == interCompanyPurchSalesReference.PurchId
                   &&    purchTable.OrderAccount == _vendAccount
                   &&    purchTable.PurchStatus  == PurchStatus::Backorder;

        boolean isExternalVendor = !(purchTable.vendTable_OrderAccount().interCompanyTradingRelationActive());

        if (!purchTable.RecId
            || (!isExternalVendor && purchTable.interCompanySalesTable().SalesStatus != SalesStatus::Backorder)
            || (isExternalVendor && purchTable.DocumentState != VersioningDocumentState::Approved))
        {
            // There are no POs associated to IC or external vendor chain where to add new lines. It's necessary to create a new PO header.
            PurchTable empty;
            return empty;
        }

        return purchTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124565</DeveloperDocumentation>
	<FormRef>SalesTable</FormRef>
	<Label>@SYS94559</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>SalesId</TitleField1>
	<TitleField2>PurchId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SalesPurchIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>SalesPurchIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS11696</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesPurchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchSalesIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>