<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOverdueCITPITTurnJournalLine_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendOverdueCITPITTurnJournalLine_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method is called when field on record is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// Id of field.
    /// </param>
    /// <remarks>
    /// Method sets Exclude mark for all lines in current journal related to invoice if set for one line.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        VendOverdueCITPITTurnJournalLine_W line;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(VendOverdueCITPITTurnJournalLine_W, Exclude):
                update_recordset line
                        setting Exclude = this.Exclude
                    where line.JournalId     == this.JournalId &&
                          line.TransRefRecId == this.TransRefRecId;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>overdueAmountCurDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns overdue amount in transaction currency for current line.
    /// </summary>
    /// <returns>
    /// Overdue amount in transaction currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountCur field value is negative(debt), otherwise amount is payment.
    /// </remarks>
    display client public OverdueAmountCur_W overdueAmountCurDisplay()
    {
        OverdueAmountCur_W overdueAmountCur;

        if (this.OverdueAmountCur < 0)
        {
            overdueAmountCur = - this.OverdueAmountCur;
        }

        return overdueAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overdueAmountMSTDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns overdue amount in accounting currency for current line.
    /// </summary>
    /// <returns>
    /// Overdue amount in accounting currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountMST field value is negative(debt), otherwise amount is payment.
    /// </remarks>
    display client public OverdueAmountMST_W overdueAmountMSTDisplay()
    {
        OverdueAmountMST_W overdueAmountMST;

        if (this.OverdueAmountMST < 0)
        {
            overdueAmountMST = - this.OverdueAmountMST;
        }

        return overdueAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paidAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns paid amount in transaction currency for current line.
    /// </summary>
    /// <returns>
    /// Paid amount in transaction currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountCur field value is positive(payment), otherwise amount is debt.
    /// </remarks>
    display client public OverduePaidAmountCur_W paidAmountCur()
    {
        OverduePaidAmountCur_W paidAmountCur;

        if (this.OverdueAmountCur > 0)
        {
            paidAmountCur = this.OverdueAmountCur;
        }

        return paidAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paidAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returns paid amount in accounting currency for current line.
    /// </summary>
    /// <returns>
    /// Paid amount in accounting currency.
    /// </returns>
    /// <remarks>
    /// Method returns value only if OverdueAmountMST field value is positive(payment), otherwise amount is debt.
    /// </remarks>
    display client public OverduePaidAmountMST_W paidAmountMST()
    {
        OverduePaidAmountMST_W paidAmountMST;

        if (this.OverdueAmountMST > 0)
        {
            paidAmountMST = this.OverdueAmountMST;
        }

        return paidAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(VendOverdueCITPITTurnJournalLine_W, Exclude):
                if (this.Exclude && OverdueTurnJournalLine_W::existsPostedInvoice(OverdueJournalType_W::VendCITPITJournal, this.TransRefRecId))
                {
                    ret = checkFailed("@SYS4003965");
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotalTurnover</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method calculates the overdue and paid amounts by query
    /// </summary>
    /// <param name="_query">
    /// The query with ranges on search
    /// </param>
    /// <returns>
    /// A contaniner with results of search. Firs value is overdue amount, second is paid amount
    /// </returns>
    /// <remarks>
    /// Values ​​are considered on the same field OverdueAmount. If the value is less than zero - this is overdue amount,
    /// if greater than zero - this is paid amount.
    /// </remarks>
    public static container calcTotalTurnover(Query _query)
    {
        VendOverdueCITPITTurnJournalLine_W  totalTurnLines;
        Query                               query;
        QueryBuildDataSource                qbds;
        QueryBuildRange                     qbr;
        QueryRun                            queryRun;

        OverdueAmountMST_W                  totalTurnOverdueAmountMST;
        OverduePaidAmountMST_W              totalTurnPaidAmountMST;

        VendOverdueCITPITTurnJournalLine_W getTotals(boolean _less = false)
        {
            query   = new Query(_query);
            qbds    = SysQuery::findOrCreateDataSource(query, tableNum(VendOverdueCITPITTurnJournalLine_W));
            qbds.addSelectionField(fieldNum(VendOverdueCITPITTurnJournalLine_W, OverdueAmountMST), SelectionField::Sum);

            qbr     = qbds.addRange(fieldNum(VendOverdueCITPITTurnJournalLine_W, RecId));
            if (_less)
            {
                qbr.value(strFmt('(%1.%2 < 0)',
                                    qbds.name(),
                                    fieldStr(VendOverdueCITPITTurnJournalLine_W, OverdueAmountMST)));
            }
            else
            {
                qbr.value(strFmt('(%1.%2 > 0)',
                                    qbds.name(),
                                    fieldStr(VendOverdueCITPITTurnJournalLine_W, OverdueAmountMST)));
            }

            queryRun    = new QueryRun(query);
            queryRun.next();

            return queryRun.get(tableNum(VendOverdueCITPITTurnJournalLine_W));
        }

        totalTurnLines                  = getTotals(true);
        totalTurnOverdueAmountMST       = totalTurnLines.overdueAmountMSTDisplay();

        totalTurnLines                  = getTotals();
        totalTurnPaidAmountMST          = totalTurnLines.paidAmountMST();

        return [totalTurnOverdueAmountMST, totalTurnPaidAmountMST];
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method searches for <c>VendOverdueCITPITTurnJournalLine_W</c> record by given id
    /// </summary>
    /// <param name="_journalId">
    /// The journal number value
    /// </param>
    /// <param name="_vendTransRefRecId">
    /// The recId of <c>VendTrans</c> referenced by search record
    /// </param>
    /// <param name="_settingRecId">
    /// The RecId of <c>OverdueJournalSettings_W</c> referenced by search record
    /// </param>
    /// <param name="_dueDate">
    /// The due date value for payment
    /// </param>
    /// <param name="_forUpdate">
    /// Indicates that record must be selected for update
    /// </param>
    /// <returns>
    /// <c>VendOverdueCITPITTurnJournalLine_W</c> record
    /// </returns>
    public static VendOverdueCITPITTurnJournalLine_W find(
        VendOverdueCITPITJournalId_W    _journalId,
        VendTransRefRecId               _vendTransRefRecId,
        RefRecId                        _settingRecId,
        DueDate                         _dueDate,
        boolean                         _forUpdate = false)
    {
        VendOverdueCITPITTurnJournalLine_W  overdueJournalTurnLine;

        if (_journalId && _vendTransRefRecId && _dueDate)
        {
            overdueJournalTurnLine.selectForUpdate(_forUpdate);

            select firstonly overdueJournalTurnLine
                where overdueJournalTurnLine.JournalId     == _journalId
                   && overdueJournalTurnLine.TransRefRecId == _vendTransRefRecId
                   && overdueJournalTurnLine.SettingRecId  == _settingRecId
                   && overdueJournalTurnLine.DueDate       == _dueDate;
        }

        return overdueJournalTurnLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method searches for <c>VendOverdueCITPITTurnJournalLine_W</c> record by RecId value
    /// </summary>
    /// <param name="_recId">
    /// The RecId value of record
    /// </param>
    /// <param name="_forUpdate">
    /// Indicates that record must be selected for update
    /// </param>
    /// <returns>
    /// <c>VendOverdueCITPITTurnJournalLine_W</c> record
    /// </returns>
    public static VendOverdueCITPITTurnJournalLine_W findRecId(
        RecId       _recId,
        boolean     _forUpdate = false)
    {
        VendOverdueCITPITTurnJournalLine_W  overdueJournalTurnLine;

        if (_recId)
        {
            overdueJournalTurnLine.selectForUpdate(_forUpdate);

            select firstonly overdueJournalTurnLine
                where overdueJournalTurnLine.RecId     == _recId;
        }

        return overdueJournalTurnLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4003964</DeveloperDocumentation>
	<Label>@SYS4003963</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>DueDate</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>JournalTransDueIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>JournalTransDueIdx</PrimaryIndex>
	<ReplacementKey>JournalTransDueIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>VendOverdueCITPITJournalLineDetail_W</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>VendOverdueCITPITJournalLineDetail_W</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettingRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS40777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Exclude</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverdueAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OverdueAmount</Name>
			<Label>@SYS4003572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>overdueAmountCurDisplay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>overdueAmountMSTDisplay</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaidAmount</Name>
			<Label>@SYS4003577</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>paidAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>paidAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Exclude</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Exclude_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendOverdueCITPITJournalId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OverdueAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCurDebCred</ExtendedDataType>
			<Label>@SYS4003544</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OverdueAmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<Label>@SYS4003546</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SettingRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VendTransRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalTransDueIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SettingRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DueDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>OverdueTurnJournalLine_W</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>JournalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransRefRecId</MapField>
					<MapFieldTo>TransRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DueDate</MapField>
					<MapFieldTo>DueDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverdueAmountCur</MapField>
					<MapFieldTo>OverdueAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverdueAmountMST</MapField>
					<MapFieldTo>OverdueAmountMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverdueTaxAmountCur</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverdueTaxAmountMST</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SettingRecId</MapField>
					<MapFieldTo>SettingRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Exclude</MapField>
					<MapFieldTo>Exclude</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>OverdueJournalSettings_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OverdueJournalSettings_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SettingRecId</Name>
					<Field>SettingRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendOverdueCITPITDebtJournalLine_W</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendOverdueCITPITDebtJournalLine_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DueDate</Name>
					<Field>DueDate</Field>
					<RelatedField>DueDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRefRecId</Name>
					<Field>TransRefRecId</Field>
					<RelatedField>TransRefRecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SettingRecId</Name>
					<Field>SettingRecId</Field>
					<RelatedField>SettingRecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendOverdueCITPITJournalTable_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendOverdueCITPITJournalTable_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRefRecId</Name>
					<SourceEDT>VendTransRefRecId</SourceEDT>
					<Field>TransRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>