<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSFulfillmentPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSFulfillmentPolicy extends common
{  

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// Recid of the record.
    /// </param>
    /// <param name="_forUpdate">
    /// Determines whether record is selected for update. Optional.
    /// </param>    
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSFulfillmentPolicy find(WHSFulfillmentPolicyRecId _recId, boolean _forUpdate = false)
    {
        WHSFulfillmentPolicy policy;

        policy.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly policy
                where policy.RecId == _recId;
        }

        return policy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canTypeBeUsedForTransferOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is called when Transfer Order types needs to be validated.
    /// </summary>   
    /// <returns>
    /// True if the fulfillment type can be used for transfer orders; otherwise, false.
    /// </returns>
    public boolean canTypeBeUsedForTransferOrders()
    {
        return (this.FulfillmentType != WHSFulfillmentType::Price);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WHSFulfillmentPolicy, FulfillmentType):
                    
                    if (this.RecId && WHSParameters::find().TransferOrderFulFillmentPolicy == this.RecId
                        && !this.canTypeBeUsedForTransferOrders())
                    {
                        ret = checkfailed(strfmt("@WAX:Table_ErrorPolicyUsedForTransferOrdersTypeNotSupported_Label", this.FulfillmentType));
                    }
                    break;
                case fieldNum(WHSFulfillmentPolicy, FulfillmentRate):
                    
                    if (this.FulfillmentRate > 100 
                        || this.FulfillmentRate < 0)
                    {
                        ret = checkFailed("@WAX2931");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific record with given parameters.
    /// </summary>
    /// <param name="_name">
    /// Name of the record.
    /// </param>
    /// <param name="_forUpdate">
    /// Determines whether record is selected for update. Optional.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSFulfillmentPolicy findByName(WHSFulfillmentPolicyName _name, boolean _forUpdate = false)
    {
        WHSFulfillmentPolicy policy;

        policy.selectForUpdate(_forUpdate);

        if (_name)
        {
            select firstonly policy
                where policy.Name == _name;
        }

        return policy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSFulfillmentPolicy_DeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WHSFulfillmentPolicy</FormRef>
	<Label>@WAX:FulfillmentPolicies_Label</Label>
	<TableGroup>Main</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentErrorTolerance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FulfillmentPolicy</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentErrorTolerance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FulfillmentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFulfillmentPolicyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentErrorTolerance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYP4881127</Label>
			<EnumType>ErrorTolerance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FulfillmentRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFulfillmentRate</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FulfillmentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSFulfillmentType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>