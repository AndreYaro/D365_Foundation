<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReport347Table</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxReport347Table extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkPhoneContainsOnlyDigits</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the Phone field.
    /// </summary>
    /// <returns>
    /// false if validation fails; otherwise, true.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean checkPhoneContainsOnlyDigits()
    {
        if (strLen(strKeep(this.Phone, '0123456789')) != strLen(this.Phone))
        {
            return checkFailed(strFmt("@SYS319364", fieldPName(TaxReport347Table, Phone)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextDeclaration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next report in the same fiscal year as the current one.
    /// </summary>
    /// <returns>
    /// The next report in the same fiscal year as the current one.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxReport347Table getNextDeclaration()
    {
        TaxReport347Table nextDeclaration;

        select firstonly * from nextDeclaration
            order by nextDeclaration.CreatedDateTime, nextDeclaration.Replacement
            where  nextDeclaration.Year == this.Year
                && (!this.Replacement || nextDeclaration.CreatedDateTime > this.CreatedDateTime)
                && nextDeclaration.RecId != this.RecId
                && nextDeclaration.Replacement;

        return nextDeclaration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginalDeclaration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the original report in the same fiscal year as the current report.
    /// </summary>
    /// <returns>
    /// The original report in the same fiscal year as the current report.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxReport347Table getOriginalDeclaration()
    {
        TaxReport347Table taxReport347Table;

        select firstonly * from taxReport347Table
            where  taxReport347Table.Year == this.Year
                && !taxReport347Table.Replacement;

        return taxReport347Table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeltaTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets all Delta transactions linked with current record.
    /// </summary>
    /// <returns><c>RecordLinkList</c> containing all found records.</returns>
    [ERTableName(tableStr(TaxReport347Trans)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RecordLinkList getDeltaTransactions()
    {
        RecordLinkList recordList = new RecordLinkList();

        TaxReport347Table prevTaxReport347Table = this.getPreviousDeclaration();

        TaxReport347Trans transPrev;
        TaxReport347Trans transCurrent;
        while select transCurrent
            where transCurrent.TaxReport347Table == this.RecId
            exists join transPrev
                where transPrev.TaxReport347Table == prevTaxReport347Table.RecId
                    && transPrev.OperationKey == transCurrent.OperationKey
                    && transPrev.CashInvoiceYear == transCurrent.CashInvoiceYear
                    && transPrev.vatNum == transCurrent.vatNum
                    && transPrev.CountryRegionId == transCurrent.CountryRegionId
                    && (transCurrent.Amount != transPrev.Amount
                        || transCurrent.AmountQuarter1 != transPrev.AmountQuarter1
                        || transCurrent.AmountQuarter2 != transPrev.AmountQuarter2
                        || transCurrent.AmountQuarter3 != transPrev.AmountQuarter3
                        || transCurrent.AmountQuarter4 != transPrev.AmountQuarter4
                        || transCurrent.AmountInCash != transPrev.AmountInCash)
        {
            recordList.ins(transCurrent);
        }

        while select transCurrent
            where transCurrent.TaxReport347Table == this.RecId
            notexists join transPrev
                where  transPrev.TaxReport347Table == prevTaxReport347Table.RecId
                    && transCurrent.CashInvoiceYear == transPrev.CashInvoiceYear
                    && transCurrent.OperationKey == transPrev.OperationKey
                    && transCurrent.vatNum == transPrev.vatNum
                    && transCurrent.CountryRegionId == transPrev.CountryRegionId
        {
            recordList.ins(transCurrent);
        }

        TaxReport347Trans transTmp;
        transTmp.setTmp();

        while select transPrev
            where transPrev.TaxReport347Table == prevTaxReport347Table.RecId
            notexists join transCurrent
                where  transCurrent.TaxReport347Table == this.RecId
                    && transCurrent.CashInvoiceYear == transPrev.CashInvoiceYear
                    && transCurrent.OperationKey == transPrev.OperationKey
                    && transCurrent.vatNum == transPrev.vatNum
                    && transCurrent.CountryRegionId == transPrev.CountryRegionId
        {
            transTmp.data(transPrev);
            transTmp.Amount = 0;
            transTmp.AmountQuarter1 = 0;
            transTmp.AmountQuarter2 = 0;
            transTmp.AmountQuarter3 = 0;
            transTmp.AmountQuarter4 = 0;
            transTmp.AmountInCash = 0;
            transTmp.TaxReport347Table = this.RecId;
            transTmp.insert();

            recordList.ins(transTmp);
        }

        return recordList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPreviousDeclaration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the previous report in the same fiscal year as the current one.
    /// </summary>
    /// <returns>
    /// The previous report in the same fiscal year as the current one.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxReport347Table getPreviousDeclaration()
    {
        TaxReport347Table taxReport347Table;

        select firstonly * from taxReport347Table
            order by taxReport347Table.CreatedDateTime desc, taxReport347Table.Replacement desc
            where  taxReport347Table.Year == this.Year
                && (!taxReport347Table.Replacement || taxReport347Table.CreatedDateTime < this.CreatedDateTime)
                && taxReport347Table.RecId != this.RecId
                && this.Replacement;

        return taxReport347Table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method gets called after field value was modified on form.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the table field that was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TaxReport347Table, Reported):
                this.updateReported();
                break;

            case fieldNum(TaxReport347Table, DocumentNum):
                this.DocumentNum = strkeep(this.DocumentNum, '0123456789');
                break;

            case fieldNum(TaxReport347Table, OrigDocumentNum):
                this.OrigDocumentNum = strkeep(this.OrigDocumentNum, '0123456789');
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReported</Name>
				<Source><![CDATA[
    private void updateReported()
    {
        if (this.Reported)
        {
            this.ReportedDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            this.ReportedBy = curuserid();
        }
        else
        {
            this.ReportedDate = datenull();
            this.ReportedBy = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        TaxReport347Table nextDeclaration;
        boolean ret;

        ret = super();

        nextDeclaration = this.getNextDeclaration();

        if (nextDeclaration)
        {
            ret = false;

            if (this.Replacement)
            {
                error("@SYS319354");
            }
            else
            {
                error("@SYS319343");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(FieldId _fieldId)
    {
        boolean ret;

        ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TaxReport347Table, vatNum):
                ret = TaxVATNumTable::checkVATNum(this.vatNum, this, _fieldId) && ret;
                break;

            case fieldNum(TaxReport347Table, Phone):
                ret = this.checkPhoneContainsOnlyDigits() && ret;
                break;

            case fieldnum(TaxReport347Table, OrigDocumentNum):
                if (this.Replacement && strkeep(this.OrigDocumentNum, '0123456789') == '')
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(TaxReport347Table, OrigDocumentNum)));
                }
                break;

            case fieldnum(TaxReport347Table, DocumentNum):
                if (strkeep(this.DocumentNum, '0123456789') == '')
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(TaxReport347Table, DocumentNum)));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether there exists any report in the specified fiscal year.
    /// </summary>
    /// <param name="_year">
    /// Fiscal year.
    /// </param>
    /// <returns>
    /// True if there exists a report in the specified fiscal year; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existForYear(TaxRep347Year _year)
    {
        TaxReport347Table taxReport347Table;

        select firstonly RecId from taxReport347Table
            where taxReport347Table.Year == _year;

        return taxReport347Table.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TaxReport347Table</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>TaxReport347Table</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value the indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TaxReport347Table</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxReport347Table find(
        recId              _recId,
        boolean            _forUpdate        = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReport347Table taxReport347Table;

        taxReport347Table.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReport347Table.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxReport347Table
            where taxReport347Table.RecId == _recId;

        return taxReport347Table;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>ES</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123471</DeveloperDocumentation>
	<FormRef>TaxReport347Table</FormRef>
	<Label>@SYS54366</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>Year</TitleField1>
	<TitleField2>DocumentNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxReport347Trans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxReport347Trans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reported</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Replacement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompanyAccounts</Name>
			<Label>@SYS10499</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompanyContactInfo</Name>
			<Label>@SYS92164</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Corrections</Name>
			<Label>@SYS23845</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Replacement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigDocumentNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentNum</Name>
			<Label>@SYS8434</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MinimumAmount</Name>
			<Label>@SYS23897</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinimumAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumAmountInCash</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Presentation</Name>
			<Label>@SYS54931</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Presentation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reported</Name>
			<Label>@SYS17767</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reported</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxOffice</Name>
			<Label>@SYS54300</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxOffice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347DocumentNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinimumAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS17335</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinimumAmountInCash</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS319347</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxRep34XName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigDocumentNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347DocumentNum</ExtendedDataType>
			<Label>@SYS319346</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Presentation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxRep347Presentation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Replacement</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS84714</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reported</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Reported_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportedBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportedBy_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReportedDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportedDate_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxOffice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep34xTaxOffice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Year</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347Year</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>YearIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Year</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Replacement</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>createdDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UserInfo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReport347Table</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReportedBy</Name>
					<SourceEDT>ReportedBy_ES</SourceEDT>
					<Field>ReportedBy</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>