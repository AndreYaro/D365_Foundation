<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashRegisterLocation_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashRegisterLocation_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>businessPremisesIdAsOfDate_CZ</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the business premises Id as of the given date.
    /// </summary>
    /// <param name="_date">
    /// The effective date; optional.
    /// </param>
    /// <returns>
    /// The business premises Id.
    /// </returns>
    public str businessPremisesIdAsOfDate_CZ(TransDate _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        DirPartyLocation                dirPartyLocation;
        TaxRegistration                 taxRegistration;
        TaxRegistrationLegislationTypes taxRegTypes;

        select firstOnly RecId from dirPartyLocation
            where dirPartyLocation.Party                        == this.OMOperatingUnit
                && dirPartyLocation.IsPostalAddress             == NoYes::Yes
                && dirPartyLocation.IsPrimaryTaxRegistration    == NoYes::Yes;


        select firstonly validtimestate(_date) registrationnumber from taxregistration
            where taxregistration.dirpartylocation                  == dirpartylocation.recid
        exists join taxregtypes
            where taxregtypes.taxregistrationtypeapplicabilityrule  == taxregistration.taxregistrationtypeapplicabilityrule
                && taxregtypes.taxregistrationtypeslist             == taxregistrationtypeslist::businesspremiseid;

        return taxRegistration.RegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsRegisteredFiscalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if registered fiscal transactions exist for the current location.
    /// </summary>
    /// <returns>
    /// true, if registered fiscal transactions exist for the current location; otherwise, false;
    /// </returns>
    public boolean existsRegisteredFiscalTrans()
    {
        CashRegisterFiscalTrans_W   cashRegisterFiscalTrans;
        CashRegisterTerminal_W      cashRegisterTerminal;

        select firstOnly RecId from cashRegisterFiscalTrans
            where cashRegisterFiscalTrans.Status    == CashRegisterFiscalTransStatus_W::Registered
        exists join cashRegisterTerminal
            where cashRegisterTerminal.RecId        == cashRegisterFiscalTrans.Terminal
                && cashRegisterTerminal.Location    == this.RecId;

        return cashRegisterFiscalTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CashRegisterLocation_W, OMOperatingUnit):
                if (!this.Code)
                {
                    this.Code = OMOperatingUnit::find(this.OMOperatingUnit, OMOperatingUnitType::OMAnyOU).OMOperatingUnitNumber;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the cash register location record by the record ID.
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID.
    /// </param>
    /// <param name="_selectForUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The cash register location record.
    /// </returns>
    public static CashRegisterLocation_W find(RefRecId _refRecId, boolean _selectForUpdate = false)
    {
        CashRegisterLocation_W cashRegisterLocation;

        if (_selectForUpdate)
        {
            cashRegisterLocation.selectForUpdate(true);
        }

        select cashRegisterLocation
            where cashRegisterLocation.RecId == _refRecId;

        return cashRegisterLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the cash register location record by the location code.
    /// </summary>
    /// <param name="_locationCode">
    /// The location code.
    /// </param>
    /// <param name="_selectForUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The cash register location record.
    /// </returns>
    public static CashRegisterLocation_W findByCode(CashRegisterLocationCode_W _locationCode, boolean _selectForUpdate = false)
    {
        CashRegisterLocation_W cashRegisterLocation;

        if (_selectForUpdate)
        {
            cashRegisterLocation.selectForUpdate(true);
        }

        if (_locationCode)
        {
            select cashRegisterLocation
                where cashRegisterLocation.Code == _locationCode;
        }

        return cashRegisterLocation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>AT,CZ</CountryRegionCodes>
	<DeveloperDocumentation>@FiscalServices:AS_CashRegisterLocation_WTable_HelpText</DeveloperDocumentation>
	<FormRef>CashRegisterLocation_W</FormRef>
	<Label>@FiscalServices:AS_CashRegisterLocation_WTable_Title</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>AccountsReceivable</Modules>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>CashRegisterLocation_W</Relation>
			<Table>CashRegisterOperator_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DeleteAction2</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>CashRegisterLocation_W</Relation>
			<Table>CashRegisterTerminal_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@FiscalServices:AS_CashRegisterLocation_WTable_FieldsGroupGeneral</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OMOperatingUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<ExtendedDataType>CashRegisterLocationCode_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OMOperatingUnit</Name>
			<ExtendedDataType>OMOperatingUnitRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OMOperatingUnitIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OMOperatingUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>OMOperatingUnit</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OMOperatingUnit</Name>
					<Field>OMOperatingUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>