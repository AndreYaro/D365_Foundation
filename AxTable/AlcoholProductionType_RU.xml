<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholProductionType_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AlcoholProductionType_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(AlcoholProductionTypeId_RU    _typeId)
    {
        boolean ret = true;

        if (_typeId && !AlcoholProductionType_RU::exist(_typeId))
        {
            ret = checkFailed(strFmt(AlcoholProductionType_RU::txtNotExist(), _typeId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(AlcoholProductionTypeId_RU     _typeId)
    {
        return _typeId && (select firstonly RecId from AlcoholProductionType_RU
                           index hint TypeIdx
                           where AlcoholProductionType_RU.TypeId == _typeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>AlcoholProductionType_RU</c> table.
    /// </summary>
    /// <param name="_typeId">
    ///    The type of the production.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>AlcoholProductionType_RU</c> table.
    /// </returns>
    static AlcoholProductionType_RU find(AlcoholProductionTypeId_RU   _typeId,
                                         boolean                      _forUpdate = false)
    {
        AlcoholProductionType_RU  alcoholProductionType_RU;

        if (_typeId)
        {
            if (_forUpdate)
                alcoholProductionType_RU.selectForUpdate(_forUpdate);

            select firstonly alcoholProductionType_RU
                index hint TypeIdx
                where alcoholProductionType_RU.TypeId == _typeId;
        }
        return alcoholProductionType_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates a record in the <c>AlcoholProductionType_RU</c> table by the specifed alcohol product type ID.
    /// </summary>
    /// <param name="_alcoholProductionTypeId">
    ///    Alcohol product type ID.
    /// </param>
    /// <returns>
    ///    Found or created record in the <c>AlcoholProductionType_RU</c> table.
    /// </returns>
    static public AlcoholProductionType_RU findOrCreate(AlcoholProductionTypeId_RU  _alcoholProductionTypeId)
    {
        #OCCRetryCount
        AlcoholProductionType_RU    alcoholProductionType;

        try
        {
            alcoholProductionType = AlcoholProductionType_RU::find(_alcoholProductionTypeId);
            if (!alcoholProductionType.RecId)
            {
                ttsBegin;

                alcoholProductionType.TypeId = _alcoholProductionTypeId;
                alcoholProductionType.doInsert();

                ttsCommit;
            }
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::DuplicateKeyExceptionNotRecovered;
            }
            else
            {
                retry;
            }
        }

        return alcoholProductionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs lookup to use it on the forms.
    /// </summary>
    /// <param name="_ctrl">
    ///    <c>FormStringControl</c> object where to perform the lookup.
    /// </param>
    static public void lookup(FormStringControl _ctrl)
    {
        SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tablenum(AlcoholProductionType_RU), _ctrl, true);
        Query                query          = new Query();
        QueryBuildDataSource qbds1, qbds2;

        qbds1 = query.addDataSource(tablenum(AlcoholProductionType_RU));
        qbds2 = qbds1.addDataSource(tablenum(AlcoholProductionType_RU));
        qbds2.addLink(fieldNum(AlcoholProductionType_RU, TypeId), fieldNum(AlcoholProductionType_RU, ParentTypeId));

        qbds2.joinMode(JoinMode::NoExistsJoin);

        sysTableLookup.addLookupfield(fieldnum(AlcoholProductionType_RU, TypeId), true);
        sysTableLookup.addLookupfield(fieldnum(AlcoholProductionType_RU, Name));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@EGAIS:AlcoholProductTypeDoesNotExist";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4002957</DeveloperDocumentation>
	<FormRef>AlcoholProductionType_RU</FormRef>
	<Label>@SYS4002956</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>TypeId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TypeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>EGAIS</Modules>
	<PrimaryIndex>TypeIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>InventTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBeer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Name</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBeer</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS26269</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBeer</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TypeId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>AlcoholProductionTypeId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBeer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholIsBeer_RU</ExtendedDataType>
			<EnumType>NoYesCombo</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentTypeId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AlcoholProductionTypeId_RU</ExtendedDataType>
			<Label>@SYS4002796</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ParentProductionType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AlcoholProductionType_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentTypeId</Name>
					<SourceEDT>AlcoholProductionTypeId_RU</SourceEDT>
					<Field>ParentTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>