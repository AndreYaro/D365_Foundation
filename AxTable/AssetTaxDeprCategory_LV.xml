<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetTaxDeprCategory_LV</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetTaxDeprCategory_LV extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates tax depreciation for the specified category.
    /// </summary>
    /// <param name="_assetTaxCategory">
    ///     The tax depreciation category.
    /// </param>
    /// <returns>
    ///     A boolean value indicating whether the calculation had any errors.
    /// </returns>
    public static boolean calculate(AssetTaxDeprCategory_LV _assetTaxCategory)
    {
        AssetTable assetTable;
        AssetBookTable assetBookTable;
        AssetBook assetBook;
        AssetDepreciationProfile assetDepreciationProfile;

        AssetTaxDepr_LV assetTaxPeriod;
        AssetTaxDepreciationCategoryDetail assetTaxCategoryDetails;

        TransDate periodStart, periodEnd;
        AssetTaxDepreciationCoefficient coefficient;
        AssetDepreciationPercentage depreciationPercentage;
        boolean assetFoundInCategory;

        if (!_assetTaxCategory)
        {
            return false;
        }

        // The category may have been moved to a non-Tax layer after being assigned to an asset
        assetBookTable = AssetBookTable::find(_assetTaxCategory.CategoryId);
        if (!assetBookTable || assetBookTable.CurrentOperationsTax != CurrentOperationsTax::Tax)
        {
            error(strFmt("@GLS223529", _assetTaxCategory.CategoryId));
            return false;
        }

        // A depreciation profile and percentage are needed in order to perform depreciation
        assetDepreciationProfile = AssetDepreciationProfile::find(assetBookTable.DepreciationProfile);
        if (!assetDepreciationProfile)
        {
            error(strFmt("@GLS223530", _assetTaxCategory.CategoryId));
            return false;
        }
        else if (!assetDepreciationProfile.Percentage)
        {
            error(strFmt("@GLS223531", _assetTaxCategory.CategoryId));
            return false;
        }
        else
        {
            depreciationPercentage = assetDepreciationProfile.Percentage;
        }

        assetTaxPeriod = AssetTaxDepr_LV::find(_assetTaxCategory.AssetTaxDeprRecId);
        periodStart = mkDate(1,1,year(assetTaxPeriod.ValidFrom));
        periodEnd = mkDate(1,1,year(assetTaxPeriod.ValidTo));

        coefficient = AssetBookTaxCoefficient::findCoefficient(_assetTaxCategory.CategoryId, periodStart, periodEnd);

        // Coefficients must be positive; any other value indicates an error
        if (coefficient <= 0)
        {
            return false;
        }

        // It is possible to recalculate details for a category and the set of assets mapped to the category could have changed from
        // the time of the last calculation so we need to delete any existing details for the category
        delete_from assetTaxCategoryDetails
            where assetTaxCategoryDetails.AssetTaxDeprCategoryRecId == _assetTaxCategory.RecId;

        while select AssetId, Name from assetTable
            where assetTable.CategoryId_LV == _assetTaxCategory.CategoryId
        {
            // Since the category would be in the Tax layer, we need to find the value model for the asset belonging to the
            // Current layer as that would contain all the transactions. The assumption is that an asset will have a single
            // value model in the Current layer so we select the 'firstOnly' such value model
            select firstOnly BookId from assetBook
                join assetBookTable
                    where assetBook.BookId == assetBookTable.BookId
                        && assetBook.AssetId == assetTable.AssetId
                        && assetBookTable.CurrentOperationsTax == CurrentOperationsTax::Current;

            AssetTaxDepreciationCategoryDetail::calculate(assetTable.AssetId, assetBook.BookId, assetTaxPeriod.ValidFrom,
                assetTaxPeriod.ValidTo, coefficient, depreciationPercentage, _assetTaxCategory.RecId);

            assetFoundInCategory = true;
        }

        if (!assetFoundInCategory)
        {
            info(strFmt("@GLS223532", _assetTaxCategory.CategoryId));
        }

        // Update category record using calculated values from the assets belonging to the category
        assetTaxCategoryDetails = null;

        select sum(Acquired), sum(CalcFrom), sum(Depreciation),
            sum(Disposed), sum(EndBalance), sum(StartBalance),
            sum(ValueChange) from assetTaxCategoryDetails
                where assetTaxCategoryDetails.AssetTaxDeprCategoryRecId == _assetTaxCategory.RecId;

        ttsBegin;
        _assetTaxCategory.selectForUpdate();
        _assetTaxCategory.Coefficient = coefficient;
        _assetTaxCategory.Percent = depreciationPercentage;
        _assetTaxCategory.Acquired = assetTaxCategoryDetails.Acquired;
        _assetTaxCategory.CalcFrom = assetTaxCategoryDetails.CalcFrom;
        _assetTaxCategory.Depreciation = assetTaxCategoryDetails.Depreciation;
        _assetTaxCategory.Disposed = assetTaxCategoryDetails.Disposed;
        _assetTaxCategory.EndBalance = assetTaxCategoryDetails.EndBalance;
        _assetTaxCategory.StartBalance = assetTaxCategoryDetails.StartBalance;
        _assetTaxCategory.ValueChange = assetTaxCategoryDetails.ValueChange;
        _assetTaxCategory.update();
        ttsCommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>AssetTaxDeprCategory_LV</c> table.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>AssetTaxDeprCategory_LV</c> table; otherwise, an empty record.
    /// </returns>
    public static AssetTaxDeprCategory_LV find(
        RefRecId _recId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetTaxDeprCategory_LV assetTaxCategory;

        assetTaxCategory.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetTaxCategory.concurrencyModel(_concurrencyModel);
        }

         select firstonly assetTaxCategory
             where assetTaxCategory.RecId == _recId;

        return assetTaxCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPreviousPeriodCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the record for the given category from the last period before the given period start date.
    /// </summary>
    /// <param name="_categoryRecId">
    ///     The <c>AssetTaxDeprCategory_LV</c> rec id.
    /// </param>
    /// <param name="_periodStartDate">
    ///     The start date of the period.
    /// </param>
    /// <returns>
    ///     The record for the given category from the last period before the given period start date.
    /// </returns>
    public static AssetTaxDeprCategory_LV findPreviousPeriodCategory(RefRecId _categoryRecId, ValidFromDate _periodStartDate)
    {
        AssetTaxDepr_LV assetTaxPeriod;
        AssetTaxDeprCategory_LV assetTaxCategory;
        AssetBookId categoryId;
        date minimumDate = dateNull();
        date maximumDate = maxDate();

        select firstOnly validTimeState(minimumDate, maximumDate) RecId from assetTaxPeriod
        order by ValidTo desc
            where assetTaxPeriod.ValidTo < _periodStartDate;

        if (assetTaxPeriod)
        {
            categoryId = AssetTaxDeprCategory_LV::find(_categoryRecId).CategoryId;

            select firstOnly assetTaxCategory
                where assetTaxCategory.AssetTaxDeprRecId == assetTaxPeriod.RecId
                && assetTaxCategory.CategoryId == categoryId;
        }

        return assetTaxCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustedAcquisition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the adjusted acquisition.
    /// </summary>
    /// <returns>The adjusted acquisition.</returns>
    public AssetAcquisitionAdj adjustedAcquisition()
    {
        return AssetBookTable::find(this.CategoryId)
            .roundOffDepreciation(this.Acquired * this.Coefficient);
    }

]]></Source>
			</Method>
			<Method>
				<Name>acquisitionAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the acquisition adjustment.
    /// </summary>
    /// <returns>The acquisition adjustment.</returns>
    public AssetAcquisitionAdj acquisitionAdjustment()
    {
        AssetTaxDepreciationCategoryDetail assetTaxDepreciationCategoryDetail;
        select sum(WriteUpAdjustment), sum(WriteDownAdjustment), sum(ValueChange) from assetTaxDepreciationCategoryDetail
            where assetTaxDepreciationCategoryDetail.AssetTaxDeprCategoryRecId == this.RecId;

        return AssetBookTable::find(this.CategoryId)
            .roundOffDepreciation(assetTaxDepreciationCategoryDetail.ValueChange - assetTaxDepreciationCategoryDetail.WriteUpAdjustment - assetTaxDepreciationCategoryDetail.WriteDownAdjustment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accumulatedDepreciation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the accumulated depreciation.
    /// </summary>
    /// <returns>The accumulated depreciation.</returns>
    public AssetDepreciation accumulatedDepreciation()
    {
        date minimumDate = dateNull();
        date maximumDate = maxDate();

        date currentPeriodStartDate = AssetTaxDepr_LV::find(this.AssetTaxDeprRecId).ValidFrom;

        AssetTaxDepr_LV assetTaxPeriod;
        AssetTaxDeprCategory_LV assetTaxCategory;
        select validTimeState(minimumDate, maximumDate) sum(Depreciation) from assetTaxCategory
            where assetTaxCategory.CategoryId == this.CategoryId
            exists join assetTaxPeriod
                where assetTaxPeriod.RecId == assetTaxCategory.AssetTaxDeprRecId
                    && assetTaxPeriod.ValidFrom <= currentPeriodStartDate;

        return assetTaxCategory.Depreciation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>LV</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223571</DeveloperDocumentation>
	<Label>@GLS223567</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>CategoryId</TitleField1>
	<TitleField2>EndBalance</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>PrimaryIdx</ClusteredIndex>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>PrimaryIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>AssetTaxDepreciationCategoryDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>AssetTaxDepreciationCategoryDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Coefficient</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SummarizeCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Disposed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Depreciation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueChange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Acquired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetTaxDeprRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculated</Name>
			<Label>@SYS14213</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Acquired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Coefficient</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueChange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Disposed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Depreciation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategoryDetails</Name>
			<Label>@SYS134286</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Coefficient</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SummarizeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Acquired</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAcquisitionValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetTaxDeprRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CalcFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetNetBookValue</ExtendedDataType>
			<Label>@GLS223539</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LvAssetCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Coefficient</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTaxDepreciationCoefficient</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Depreciation</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Disposed</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAmount</ExtendedDataType>
			<Label>@GLS102894</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAmount</ExtendedDataType>
			<Label>@GLS104705</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciationPercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StartBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAmount</ExtendedDataType>
			<Label>@GLS104703</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SummarizeCategory</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LvAssetTaxCategoryTogether</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ValueChange</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAmount</ExtendedDataType>
			<Label>@GLS223566</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PrimaryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetTaxDeprRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssetBookTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CurrentOperationsTax_Extern</Name>
					<RelatedField>CurrentOperationsTax</RelatedField>
					<ValueStr>CurrentOperationsTax::Tax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<Field>CategoryId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BookIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTaxDepr_LV</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetTaxDepr_LV</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetTaxDeprRecId</Name>
					<Field>AssetTaxDeprRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>