<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStoreWorkShiftTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailStoreWorkShiftTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the description in the <c>Name</c> field of the <c>RetailWorkShiftSetup</c> table for the
    /// selected record.
    /// </summary>
    /// <returns>
    /// The description in the <c>Name</c> field of the <c>RetailWorkShiftSetup</c> table for the selected
    /// record.
    /// </returns>
    display Description getDescription()
    {
        return RetailWorkShiftSetup::find(this.StoreRecId,this.ShiftId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in <c>RetailStoreWorkShiftTable</c> table.
    /// </summary>
    /// <remarks>
    /// RetailStoreWorkShiftTable.validateReplicationCounter method initializes the counter to the <c>ReplicationCounter</c> field of the
    /// <c>RetailStoreWorkShiftTable</c> table.
    /// </remarks>
    public void insert()
    {
        this.validateReplicationCounter();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes box validation if the user tries to rename the record.
    /// </summary>
    public void renamePrimaryKey()
    {
        if (Box::yesNo("@RET4036",DialogButton::No,"@RET4037","@RET4038") == DialogButton::No)
        {
            info("@RET4039");
            return;
        }
        else
            super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailStoreWorkShiftTable</c> table.
    /// </summary>
    /// <remarks>
    /// RetailStoreWorkShiftTable.validateReplicationCounter method initializes the counter to the <c>ReplicationCounter</c> field of the
    /// <c>RetailStoreWorkShiftTable</c> table.
    /// </remarks>
    public void update()
    {
        this.validateReplicationCounter();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method validates the <c>WorkShiftId</c> field of <c>RetailWorkShiftSetup</c> table.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid else false.
    /// </returns>
    /// <remarks>
    /// RetailStoreWorkShiftTable.validateReplicationCounter method initializes the counter to the <c>ReplicationCounter</c> field of the
    /// <c>RetailStoreWorkShiftTable</c> table.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailWorkShiftSetup, WorkShiftId))
        {
            this.validateReplicationCounter();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReplicationCounter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method initializes the counter to the <c>ReplicationCounter</c> field of the <c>RetailStoreWorkShiftTable</c> table.
    /// </summary>
    void validateReplicationCounter()
    {
        RetailStoreWorkShiftTable  storeWorkShiftTable;

        select maxof(ReplicationCounter) from storeWorkShiftTable;

        this.ReplicationCounter = storeWorkShiftTable.ReplicationCounter + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailStoreWorkShiftTable</c> table exists.
    /// </summary>
    /// <param name="_storeRecId">
    /// The reference of the work shift table record to find.
    /// </param>
    /// <param name="_shiftDate">
    /// The shift date of the work shift table record to find.
    /// </param>
    /// <param name="_shiftId">
    /// The work shift of the work shift table record to find.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(RecId     _storeRecId,
                         RetailShiftDate   _shiftDate,
                         RetailShiftId     _shiftId)
    {
        return _storeRecId && _shiftDate && _shiftId &&
            (select firstonly RecId from retailStoreWorkShiftTable
                                    index hint storeShiftDateShiftId
                                    where retailStoreWorkShiftTable.StoreRecId == _storeRecId
                                       && retailStoreWorkShiftTable.ShiftDate == _shiftDate
                                       && retailStoreWorkShiftTable.ShiftId == _shiftId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailStoreWorkShiftTable</c> table by using the specified
    /// <c>parameter</c> value.
    /// </summary>
    /// <param name="_storeRecId">
    /// The reference of the work shift table record to find.
    /// </param>
    /// <param name="_shiftDate">
    /// The shift date of the work shift table record to find.
    /// </param>
    /// <param name="_shiftId">
    /// The works shift of the work shift table record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailStoreWorkShiftTable</c> table; otherwise, an empty record.
    /// </returns>
    static RetailStoreWorkShiftTable find(RecId     _storeRecId,
                                       RetailShiftDate   _shiftDate,
                                       RetailWorkShiftId _shiftId,
                                       boolean        _forUpdate = false)
    {
        RetailStoreWorkShiftTable   storeWorkShiftTable;
        ;

        if (_storeRecId && _shiftDate && _shiftId)
        {
            storeWorkShiftTable.selectForUpdate(_forUpdate);

            select firstonly storeWorkShiftTable
            index hint storeShiftDateShiftId
            where   storeWorkShiftTable.StoreRecId == _storeRecId
            &&      storeWorkShiftTable.ShiftDate == _shiftDate
            &&      storeWorkShiftTable.ShiftId == _shiftId;
        }

        return storeWorkShiftTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260396</DeveloperDocumentation>
	<FormRef>RetailStoreWorkShiftTable</FormRef>
	<Label>@RET3269</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>StoreRecId</TitleField1>
	<TitleField2>shiftId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>storeShiftDateShiftId</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>CommerceEmployees</Modules>
	<PrimaryIndex>storeShiftDateShiftId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shiftId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shiftDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>workShiftStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicationCounter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shiftDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shiftId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShiftBegins</Name>
			<Label>@RET3270</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>startingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>startingTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShiftEnds</Name>
			<Label>@RET3271</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>endingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>endingTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@RET3070</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>workShiftStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>statementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>endingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>endingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailEndingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>replicationCounter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplicationCounter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>shiftDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailShiftDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>shiftId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWorkShiftId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>startingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>startingTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartingTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>statementId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStatementId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StoreRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>workShiftStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailWorkShiftStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>storeShiftDateShiftId</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>shiftDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>shiftId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>replicationCounterIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>replicationCounter</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>storeStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>workShiftStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailStatementJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailStatementJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>workShiftStatus</Name>
					<Field>workShiftStatus</Field>
					<ValueStr>RetailWorkShiftStatus::Posted</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>statementId</Name>
					<Field>statementId</Field>
					<RelatedField>statementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStatementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStatementTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>statementId</Name>
					<SourceEDT>RetailStatementId</SourceEDT>
					<Field>statementId</Field>
					<RelatedField>statementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>statementIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StoreRecId</Name>
					<Field>StoreRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailWorkShiftSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailWorkShiftSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>shiftId</Name>
					<SourceEDT>RetailWorkShiftId</SourceEDT>
					<Field>shiftId</Field>
					<RelatedField>workShiftId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StoreRecId</Name>
					<Field>StoreRecId</Field>
					<RelatedField>StoreRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>