<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanRule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activeCirculatingKanbanCards</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the number of <c>KanbanCard</c> records that belong to the <c>KanbanRule</c> table.
    /// </summary>
    /// <returns>
    ///    The number of <c>KanbanCard</c> records that belong to the <c>KanbanRule</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display KanbanActiveCardsCount activeCirculatingKanbanCards()
    {
        return KanbanCard::getRuleCardsCountTotal(this, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeKanbans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the number of active kanbans that are not manual for the <c>KanbanRule</c> table and its
    ///    replacement chain.
    /// </summary>
    /// <returns>
    ///    The number of active and not manual kanbans for the <c>KanbanRule</c> table and its replacement
    ///    chain.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display KanbanActiveKanbansCount activeKanbans()
    {
        return this.getActiveKanbansCount(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeManualKanbans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the number of active manual kanbans for the <c>KanbanRule</c> table and its replacement
    ///    chain.
    /// </summary>
    /// <returns>
    ///    The number of active manual kanbans for the <c>KanbanRule</c> table and its replacement chain.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display KanbanActiveManualKanbansCount activeManualKanbans()
    {
        return this.getActiveKanbansCount(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canHaveBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether kanbans created from the current rule can have a BOM.
    /// </summary>
    /// <returns>
    /// true if kanbans created from the rule can have a BOM; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean canHaveBOM()
    {
        return this.KanbanType == LeanKanbanType::Manufacturing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>KanbanFlow.LegalEntity</c> table field value is valid.
    /// </summary>
    /// <param name="_kanbanFlow">
    /// The <c>KanbanFlow</c> record that is related to the current record.
    /// </param>
    /// <returns>
    /// true if the field value is valid; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean checkLegalEntity(KanbanFlow _kanbanFlow = this.kanbanFlow())
    {
        boolean     result = true;

        if (   !this.LegalEntity
            || this.LegalEntity != _kanbanFlow.LegalEntity)
        {
            result = checkFailed(strfmt("@SYS332717",this.RuleId));
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        this.status().delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActiveKanbansCount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the number of active kanbans for the <c>KanbanRule</c> table and its replacement chain.
    /// </summary>
    /// <param name="_manual">
    ///    A Boolean value that specifies whether the number of active manual or not manual kanbans is
    ///    returned.
    /// </param>
    /// <returns>
    ///    The number of active kanbans for the <c>KanbanRule</c> table and its replacement chain.
    /// </returns>
    private int getActiveKanbansCount(boolean _manual)
    {
        Kanban kanban;
        LeanCoverageKanbanRule  leanCoverageKanbanRule;
        LeanRuleData            leanRuleData = this.ruleData();
        LeanCoverage            leanCoverage = leanRuleData.parmLeanCoverage();

        // gets the count of all active kanbans (manual or not) that share
        // the current rule's coverage - i.e. all the active kanbans in the replacement chain,
        // but only the ones that are prior to the current rule
        select count(RecId) from kanban
            where kanban.Manual == _manual
               && kanban.Status != LeanKanbanStatus::Emptied
            exists join leanCoverageKanbanRule
                where leanCoverageKanbanRule.KanbanRule == kanban.KanbanRule
                   && leanCoverageKanbanRule.Coverage   == leanCoverage.RecId
                   && leanCoverageKanbanRule.ValidFrom  <= leanRuleData.parmLeanCoverageKanbanRule().ValidFrom;

        // return the count
        return any2int(kanban.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromKanbanFlow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current record from a <c>KanbanFlow</c> record.
    /// </summary>
    /// <param name="_kanbanFlow">
    ///    A <c>KanbanFlow</c> record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromKanbanFlow(KanbanFlow _kanbanFlow = this.kanbanFlow())
    {
        this.KanbanFlow  = _kanbanFlow.RecId;
        this.LegalEntity = _kanbanFlow.LegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table record buffer.
    /// </summary>
    public void initValue()
    {
        super();
        this.KanbanType               = LeanKanbanType::Manufacturing;
        this.ReplenishmentStrategy    = LeanReplenishmentStrategy::Fixed;
        this.AllowDeviatingQuantity   = NoYes::No;
        this.PrintKanbanAutomatically = KanbanAutoPrintType::None;
        this.UsesCirculatingCards     = NoYes::No;
        this.CardsNumberSequence      = ProdParameters::numRefKanbanCardId().NumberSequenceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the current record into the database.
    /// </summary>
    public void insert()
    {
        this.LegalEntity = this.kanbanFlow().LegalEntity;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReplacing</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the <c>KanbanRule</c> is replacing.
    /// </summary>
    /// <returns>
    ///    true if the rule is replacing; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isReplacing()
    {
        KanbanRule kanbanRule;

        if (this.RecId)
        {
            select firstonly RecId from kanbanRule
                where kanbanRule.ReplacingKanbanRule == this.RecId;
        }

        return kanbanRule.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>kanbanFlow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>KanbanFlow</c> record that is related to the kanban rule.
    /// </summary>
    /// <returns>
    ///    A <c>KanbanFlow</c> table buffer.
    /// </returns>
    public KanbanFlow kanbanFlow()
    {
        return KanbanFlow::find(this.KanbanFlow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>leanProductionFlowReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>LeanProductionFlowReference</c> record that is related to the kanban rule.
    /// </summary>
    /// <returns>
    ///    A <c>LeanProductionFlowReference</c> table buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LeanProductionFlowReference leanProductionFlowReference()
    {
        return LeanProductionFlowReference::findPlanReference(this.planReference().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>plan</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>Plan</c> record that is related to the kanban rule.
    /// </summary>
    /// <returns>
    ///    A <c>Plan</c> table buffer.
    /// </returns>
    /// <remarks>
    ///    The last activity in a kanban flow is always related to owner plan.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Plan plan()
    {
        KanbanFlow          kanbanFlow;
        PlanPlanActivity    planPlanActivity;
        Plan                plan;

        if (this.KanbanFlow)
        {
            select plan
                exists join planPlanActivity
                    where planPlanActivity.Plan           == plan.RecId
                exists join kanbanFlow
                    where kanbanFlow.LastPlanPlanActivity == planPlanActivity.RecId
                       && kanbanFlow.RecId                == this.KanbanFlow;
        }

        return plan;
    }

]]></Source>
			</Method>
			<Method>
				<Name>planReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>PlanReference</c> record that is related to the kanban rule.
    /// </summary>
    /// <returns>
    ///    A <c>PlanReference</c> table buffer.
    /// </returns>
    /// <remarks>
    ///    The last activity in a kanban flow is always related to owner plan reference.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PlanReference planReference()
    {
        KanbanFlow          kanbanFlow;
        PlanPlanActivity    planPlanActivity;
        Plan                plan;
        PlanReference       planReference;

        if (this.KanbanFlow)
        {
            select planReference
                exists join plan
                    where plan.PlanReference              == planReference.RecId
                exists join planPlanActivity
                    where planPlanActivity.Plan           == plan.RecId
                exists join kanbanFlow
                    where kanbanFlow.LastPlanPlanActivity == planPlanActivity.RecId
                       && kanbanFlow.RecId                == this.KanbanFlow;
        }

        return planReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>replacedRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the kanban rule that is replaced by the current kanban rule.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The kanban rule to be replaced by the current one.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanRule replacedRule(boolean _forUpdate = false)
    {
        return KanbanRule::findReplacingRuleRecId(this.RecId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>replacingRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the rule to replace the current kanban rule.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A <c>KanbanRule</c> buffer of the rule that will replace the current one.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanRule replacingRule(boolean _forUpdate = false)
    {
        return KanbanRule::find(this.ReplacingKanbanRule, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ruleData</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a <c>LeanRuleData</c> object from this rule buffer.
    /// </summary>
    /// <returns>
    ///    The <c>LeanRuleData</c> object that holds all rule related data; otherwise, null.
    /// </returns>
    /// <remarks>
    ///    If the rule has not been persisted, it returns null.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LeanRuleData ruleData()
    {
        return LeanRuleData::newStandard(this.RecId, this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the status for the current record.
    /// </summary>
    /// <returns>
    ///    The status of the current record; otherwise, null.
    /// </returns>
    /// <remarks>
    ///    If the current record is not yet persisted in the database, the result will be null.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LeanRuleStatusBase status()
    {
        return LeanRuleStatusBase::newRuleBuffer(this.RecId, this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>type</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the type for the current buffer.
    /// </summary>
    /// <returns>
    ///    The type for the current rule buffer.
    /// </returns>
    /// <remarks>
    ///    If the rule record has not yet been persisted, an exception is caused.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    The buffer has not yet been persisted.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LeanRuleKanban type()
    {
        LeanRuleData leanRuleData = this.ruleData();
        LeanRuleKanban leanRuleKanban = LeanRuleKanban::newLeanRuleData(leanRuleData);

        leanRuleKanban.initializeContext(leanRuleData, this);

        return leanRuleKanban;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite(boolean _genericValidation = true)
    {
        boolean result = super();

        // if the default validation was successful -> we do the rule generic validation
        return result && (!_genericValidation || this.status().validateWrite());
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNumberSeq</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the number sequence for the <c>RuleId</c> field is configured.
    /// </summary>
    /// <returns>
    ///    true if it is configured correctly; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkNumberSeq()
    {
        NumberSequenceTable numSeq;
        boolean             result = true;

        numSeq = ProdParameters::numRefKanbanRuleId().numberSequenceTable();

        if (!numSeq)
        {
            // Number sequence for the reference '%1' in parameters in the '%2' module has not been set up.
            result = checkFailed(strfmt("@SYS53911", "@SYS131966", "@SYS131960"));
        }
        else
        {
            if (numSeq.Manual == NoYes::Yes)
            {
                result = checkFailed("@SYS133815");
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanRule</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>KanbanRule</c> table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _recId)
    {
        return _recId && (select firstonly kanbanRule where kanbanRule.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>KanbanRule</c> table.
    /// </summary>
    /// <param name="_kanbanRuleRefRecId">
    /// The record ID of the <c>KanbanRule</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specified whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>KanbanRule</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanRule find(
        KanbanRuleRefRecId _kanbanRuleRefRecId,
        boolean            _forUpdate = false)
    {
        KanbanRule kanbanRule;

        if (_kanbanRuleRefRecId)
        {
            kanbanRule.selectForUpdate(_forUpdate);

            select firstonly kanbanRule
                where kanbanRule.RecId == _kanbanRuleRefRecId;
        }

        return kanbanRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReplacingRuleRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanRule</c> table.
    /// </summary>
    /// <param name="_replacingRuleRecId">
    ///    The record ID of the rule that will replace the other.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanRule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanRule findReplacingRuleRecId(
        KanbanRuleRefRecId _replacingRuleRecId,
        boolean            _forUpdate = false)
    {
        KanbanRule kanbanRule;

        if (_replacingRuleRecId)
        {
            kanbanRule.selectForUpdate(_forUpdate);

            select firstonly kanbanRule
                where kanbanRule.ReplacingKanbanRule == _replacingRuleRecId;
        }

        return kanbanRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanRule</c> table.
    /// </summary>
    /// <param name="_ruleId">
    ///    The natural key of the <c>KanbanRule</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanRule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanRule findRuleId(
        LeanReplenishmentRuleId _ruleId,
        boolean                 _forUpdate = false)
    {
        KanbanRule kanbanRule;

        if (_ruleId)
        {
            kanbanRule.selectForUpdate(_forUpdate);

            select firstonly kanbanRule
                where kanbanRule.RuleId == _ruleId;
        }

        return kanbanRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEventRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a kanban rule is an event rule.
    /// </summary>
    /// <param name="_kanbanRuleRefRecId">
    ///    A record ID for the <c>KanbanRule</c> table.
    /// </param>
    /// <returns>
    ///    true if the kanban rule is an event rule; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean isEventRule(KanbanRuleRefRecId _kanbanRuleRefRecId)
    {
        KanbanRule          kanbanRule;
        boolean             result;

        if (_kanbanRuleRefRecId)
        {
            select RecId from kanbanRule
                where kanbanRule.RecId                 == _kanbanRuleRefRecId
                   && kanbanRule.ReplenishmentStrategy == LeanReplenishmentStrategy::Event;

            result = kanbanRule.RecId != 0;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefKanbanRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Performs the go to main table action for a given rule and caller.
    /// </summary>
    /// <param name="_kanbanRule">
    ///     A <c>KanbanRule</c> record.
    /// </param>
    /// <param name="_caller">
    ///     The calling object.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void jumpRefKanbanRule(
        KanbanRule  _kanbanRule,
        Object      _caller)
    {
        Args    args;
        FormRun formRun;

        args = new Args(formstr(KanbanRules));
        args.caller(_caller);
        args.record(_kanbanRule);

        // Menu item info will be used by security framework, when setting access rights to form datasources
        args.menuItemType(MenuItemType::Display);
        args.menuItemName(menuitemDisplayStr(KanbanRules));

        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupKanbanRuleLeanDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows a lookup form for selecting a kanban rule that belongs to a specific plan
    /// and contains a specific activity.
    /// </summary>
    /// <param name="_caller">
    /// The control that is requesting a lookup to be shown.
    /// </param>
    /// <param name="_contract">
    /// The <c>LeanDocumentDataContract</c> object that holds the filter criteria and the result.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupKanbanRuleLeanDocument(
        Object                      _caller,
        LeanDocumentDataContract    _contract)
    {
        Args                args;
        FormRun             formRun;

        args = new Args();
        args.name(formstr(LeanDocumentKanbanRuleLookup));
        args.caller(_caller);
        args.parmObject(_contract);

        formRun = classfactory.formRunClass(args);
        formRun.init();
        _caller.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReassignRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows a lookup form for selecting a kanban rule that is valid for reassignment.
    /// </summary>
    /// <param name="_caller">
    /// The control that is requesting a lookup to be shown.
    /// </param>
    /// <param name="_leanRuleData">
    /// The <c>LeanRuleData</c> object that holds the reassigned rule data.
    /// </param>
    /// <param name="_excludeCurrentRecord">
    /// A Boolean value that determines whether the current record stored in the <c>LeanRuleData</c>
    /// instance is excluded from the list of the lookup or not.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupReassignRule(
        Object       _caller,
        LeanRuleData _leanRuleData,
        boolean      _excludeCurrentRecord = true)
    {
        Args                args;
        FormRun             formRun;
        Object              kanbanReassignRuleLookupForm;

        args = new Args();
        args.name(formstr(KanbanReassignRuleLookup));
        args.caller(_caller);
        args.parmObject(_leanRuleData);

        formRun = classfactory.formRunClass(args);
        kanbanReassignRuleLookupForm = formRun;
        kanbanReassignRuleLookupForm.parmExcludeCurrentRecordFromList(_excludeCurrentRecord);
        formRun.init();

        _caller.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReplacedRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows a lookup form for selecting a replaced kanban rule.
    /// </summary>
    /// <param name="_caller">
    /// The control that is requesting a lookup to be shown.
    /// </param>
    /// <param name="_leanRuleData">
    /// The <c>LeanRuleData</c> object that holds the replacing rule data.
    /// </param>
    /// <param name="_excludeCurrentRecord">
    /// The flag that determines whether the current record stored in the
    /// <c>LeanRuleData</c> instance should be excluded from the lookup's list or not.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupReplacedRule(
        Object       _caller,
        LeanRuleData _leanRuleData,
        boolean      _excludeCurrentRecord = true)
    {
        Args                args;
        FormRun             formRun;
        Object kanbanReplacingRuleLookupForm;

        args = new Args();
        args.name(formstr(KanbanReplacingRuleLookup));
        args.caller(_caller);
        args.parmObject(_leanRuleData);

        formRun = classfactory.formRunClass(args);
        kanbanReplacingRuleLookupForm = formRun;
        kanbanReplacingRuleLookupForm.parmExcludeCurrentRecordFromList(_excludeCurrentRecord);
        formRun.init();

        _caller.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows a lookup form for selecting an active kanban rule.
    /// </summary>
    /// <param name="_caller">
    ///    The control that is requesting a lookup to be shown.
    /// </param>
    /// <param name="_leanReplenishmentStrategy">
    ///    The replenishment strategy the rules should be filtered by
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupRule(
        Object                    _caller,
        LeanReplenishmentStrategy _leanReplenishmentStrategy)
    {
        Args                args;
        FormRun             formRun;

        args = new Args();
        args.name(formstr(KanbanRuleLookup));
        args.caller(_caller);
        args.parmEnumType(enumnum(LeanReplenishmentStrategy));
        args.parmEnum(_leanReplenishmentStrategy);

        formRun = classfactory.formRunClass(args);
        formRun.init();

        _caller.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqKanbanRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates the number sequence used for the <c>RuleId</c> field.
    /// </summary>
    /// <param name="_makeDecisionLater">
    ///    A Boolean value that is used to issue the numbers from the sequence.
    /// </param>
    /// <returns>
    ///    An instance of the <c>NumberSeq</c> class to use to retrieve IDs.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static NumberSeq numberSeqKanbanRuleId(boolean _makeDecisionLater = true)
    {
        return NumberSeq::newGetNum(ProdParameters::numRefKanbanRuleId(),_makeDecisionLater);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS319217</DeveloperDocumentation>
	<FormRef>KanbanRules</FormRef>
	<Label>@SYS131966</Label>
	<SingularLabel>@SYS131579</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>RuleId</TitleField1>
	<TitleField2>KanbanFlow</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>RuleIdIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>Kanban</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>Kanban</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanCard</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanCard</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanFlow</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanFlow</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanRuleFixed</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanRuleFixed</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>KanbanRuleVariable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>KanbanRuleVariable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LeanCoverageKanbanRule</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LeanCoverageKanbanRule</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsesCirculatingCards</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplacingKanbanRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsesCirculatingCards</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardAssignmentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AlertLevels</Name>
			<Label>@SYS131987</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinimumAlertLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumAlertLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CirculatingCardsSetup</Name>
			<Label>@SYS131981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UsesCirculatingCards</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardAssignmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardsNumberSequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS131988</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KanbanType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeviatingQuantity</Name>
			<Label>@SYS131969</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowDeviatingQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumDeviatingQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumDeviatingQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HandlingUnitEmptyPolicy</Name>
			<Label>@SYS312650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HandlingUnitEmptyPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LegalEntity</Name>
			<Label>@SYS327736</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS303805</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UrgencyLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintingOptions</Name>
			<Label>@SYS313270</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintCardWithPickingList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintInstructionsOnCard</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintKanbanAutomatically</Name>
			<Label>@SYS131915</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintKanbanAutomatically</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS3065</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rule</Name>
			<Label>@SYS131887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TriggerLevel</Name>
			<Label>@SYS131995</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TriggerLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowDeviatingQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS131969</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CardAssignmentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>KanbanCardAssignmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CardsNumberSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS131979</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HandlingUnitEmptyPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LeanHandlingUnitEmptyPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KanbanFlow</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanFlowRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>KanbanType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LeanKanbanType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LegalEntity</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaximumAlertLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanTriggerLevel</ExtendedDataType>
			<Label>@SYS131977</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumDeviatingQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanQuantity</ExtendedDataType>
			<Label>@SYS329606</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumAlertLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanTriggerLevel</ExtendedDataType>
			<Label>@SYS131975</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinimumDeviatingQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanQuantity</ExtendedDataType>
			<Label>@SYS329605</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintCardWithPickingList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanPrintCardWithPickingList</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintInstructionsOnCard</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>KanbanPrintInstructions</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintKanbanAutomatically</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>KanbanAutoPrintType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanQuantity</ExtendedDataType>
			<Label>@sys313581</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReplacingKanbanRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanRuleRefRecId</ExtendedDataType>
			<Label>@SYS131983</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentStrategy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>LeanReplenishmentStrategy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeanReplenishmentRuleId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TriggerLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanTriggerLevel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UrgencyLevel</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanRuleOverviewUrgencyLevel</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UsesCirculatingCards</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS131981</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RuleIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RuleId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_ReplacingKanbanRule</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplacingKanbanRule</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_KanbanFlow</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>KanbanFlow</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>KanbanTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>KanbanType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanFlow</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>KanbanFlow</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OwnerKanbanFlow</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KanbanFlow</Name>
					<Field>KanbanFlow</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanRule_Replacing</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>KanbanRule</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReplacingKanbanRule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplacingKanbanRule</Name>
					<Field>ReplacingKanbanRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LegalEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LegalEntity</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanRule</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequence</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CardsNumberSequence</Name>
					<Field>CardsNumberSequence</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>