<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendLedger</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendLedger extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();

        this.Settlement = NoYes::Yes;
        this.Cancel = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    public void renamePrimaryKey()
    {
        boolean isVirtual;
        DataArea company;
        VendLedger originalVendLedger;
        LedgerJournalTrans ledgerJournalTrans;
        VirtualDataAreaList virtualCompanies;
        container concreteCompanies;
        int concreteCompanyCount;
        CompanyId outerCompany;
        int innerLoopCounter;
        CompanyId innerCompany;

        // Capture the renamed record
        originalVendLedger = this.orig();

        super();

        select firstonly company where company.Id == this.DataAreaId;
        isVirtual = company.IsVirtual;

        if (isVirtual)
        {
            // Vendor posting profile is in a virtual company

            // Capture the concrete companies that are part of the vendor posting profile's virtual company
            while select Id from virtualCompanies
                where virtualCompanies.VirtualDataArea == this.DataAreaId
            {
                concreteCompanies += virtualCompanies.Id;
            }

            concreteCompanyCount = conlen(concreteCompanies);

            // Intercompany is enabled - need to loop over all concrete companies
            while select Id from company
                where company.IsVirtual == false
            {
                outerCompany = company.Id;

                // Update related records for each concrete company
                changecompany(outerCompany)
                {
                    // Reset the ledgerJournalTrans
                    ledgerJournalTrans = null;
                    ledgerJournalTrans.skipDataMethods(true);

                    // Loop over concrete companies in the virtual company
                    for (innerLoopCounter = 1; innerLoopCounter <= concreteCompanyCount; innerLoopCounter++)
                    {
                        innerCompany = conpeek(concreteCompanies, innerLoopCounter);

                        // Update records with this vendor posting profile as primary account
                        update_recordset ledgerJournalTrans
                            setting PostingProfile = this.PostingProfile
                        where ledgerJournalTrans.Company == innerCompany &&
                            ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                            ledgerJournalTrans.PostingProfile == originalVendLedger.PostingProfile;
                    }
                }
            }
        }
        else
        {
            // Customer posting profile that is being updated is not in a virtual company
            // If intercompany is enabled, must update the intercompany transactions for all other companies
            if (isConfigurationkeyEnabled(configurationkeynum(LedgerAdvIntercompanyAccounting)))
            {
                while select Id from company
                    where company.IsVirtual == false
                {
                    outerCompany = company.Id;

                    // Update related records for each concrete company
                    changecompany(outerCompany)
                    {
                        // Reset the ledgerJournalTrans
                        ledgerJournalTrans = null;
                        ledgerJournalTrans.skipDataMethods(true);

                        // Update records with this vendor posting profile as primary account
                        update_recordset ledgerJournalTrans
                            setting PostingProfile = this.PostingProfile
                        where ledgerJournalTrans.Company == originalVendLedger.DataAreaId &&
                            ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                            ledgerJournalTrans.PostingProfile == originalVendLedger.PostingProfile;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(VendPostingProfile _vendPostingProfile )
    {
        boolean ret = true;

        if (!VendLedger::exist(_vendPostingProfile))
        {
            ret = checkFailed(strfmt(VendLedger::txtNotExist(), _vendPostingProfile));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(VendPostingProfile _vendPostingProfile )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     vendLedger
                 where
                     vendLedger.PostingProfile == _vendPostingProfile).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static VendLedger find(
        VendPostingProfile _vendPostingProfile ,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendLedger vendLedger;

        vendLedger.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendLedger.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            vendLedger
            where
            vendLedger.PostingProfile == _vendPostingProfile;

        return vendLedger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadPostingClose</Name>
				<Source><![CDATA[
    static VendPostingProfile loadPostingClose(VendPostingProfile _vendPostingProfile)
    {
        return VendLedger::find(_vendPostingProfile).PostingProfileClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPostingProfile</Name>
				<Source><![CDATA[
    public static void lookupPostingProfile(FormStringControl _stringControl, str _filterStr, CompanyId _company)
    {
        Args e;
        CompanyId company;
        FormRun formRun;

        company = _company;

        if (company == '')
        {
            company = curext();
        }

        changecompany(company)
        {
            e = new Args();
            e.name(formstr(VendLedgerLookup));
            e.caller(_stringControl);
            e.lookupField(fieldnum(VendLedger, PostingProfile));
            e.lookupValue(_filterStr);

            formRun = classfactory.formRunClass(e);
            formRun.init();

            _stringControl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS27773";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126048</DeveloperDocumentation>
	<FormRef>VendPosting</FormRef>
	<Label>@SYS26044</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PostingProfile</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProfileIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>ProfileIdx</PrimaryIndex>
	<ReplacementKey>ProfileIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>VendLedgerAccounts</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>VendLedgerAccounts</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>VendParameters</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>VendParameters</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingProfileClose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Settlement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cancel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfileClose</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rights</Name>
			<Label>@SYS28434</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Settlement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cancel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SettlementCtrl_RU</Name>
			<Label>@GLS113712</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimSettlementCtrlType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Cancel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CancelPosting</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DimSettlementCtrlType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS113714</Label>
			<EnumType>DimSettlementCtrlType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPostingProfile</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfileClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPostingProfile</ExtendedDataType>
			<Label>@SYS15212</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Settlement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAutoSettlement</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendLedger</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PostingProfile</MapField>
					<MapFieldTo>PostingProfile</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostingProfileClose</MapField>
					<MapFieldTo>PostingProfileClose</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Settlement</MapField>
					<MapFieldTo>Settlement</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Interest</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CollectionLetter</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Cancel</MapField>
					<MapFieldTo>Cancel</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendLedger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendLedger</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfileClose</Name>
					<SourceEDT>VendPostingProfile</SourceEDT>
					<Field>PostingProfileClose</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProfileIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>