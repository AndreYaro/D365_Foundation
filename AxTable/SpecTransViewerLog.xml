<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecTransViewerLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SpecTransViewerLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>logForSpecTransSet</Name>
				<Source><![CDATA[
    internal static void logForSpecTransSet(SpecTransRecIdFilter _specTransRecIdFilter)
    {
        ttsbegin;

        SpecTransViewerLog::clearOutdatedLogs();

        SpecTransViewerLog viewerLog;

        viewerLog.skipDatabaseLog();
        viewerLog.skipDataMethods();
        viewerLog.skipEvents();

        SpecTransCustomerOpen customerOpen;

        insert_recordset viewerLog (ModuleCustVend, CustVendAccount, Company, Voucher, TransDate)
            select module, AccountNum, Company, Voucher, TransDate
            from customerOpen
                exists join _specTransRecIdFilter
                    where customerOpen.SpecTransRecId == _specTransRecIdFilter.SpecTransRecId;

        SpecTransVendorOpen vendorOpen;

        insert_recordset viewerLog (ModuleCustVend, CustVendAccount, Company, Voucher, TransDate)
            select module, AccountNum, Company, Voucher, TransDate
            from vendorOpen
                exists join _specTransRecIdFilter
                    where vendorOpen.SpecTransRecId == _specTransRecIdFilter.SpecTransRecId;

        SpecTrans specTrans;

        update_recordset viewerLog
            setting SpecTableId = specTrans.SpecTableId,
                SpecRecId = specTrans.SpecRecId
            join specTrans
                exists join _specTransRecIdFilter
                    where specTrans.RecId == _specTransRecIdFilter.SpecTransRecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearOutdatedLogs</Name>
				<Source><![CDATA[
    private static void clearOutdatedLogs()
    {
        const int MonthsBack = -6;

        TransDate clearingDate = dateMthFwd(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), MonthsBack);

        utcdatetime clearingDateTime = DateTimeUtil::newDateTime(
            clearingDate,
            0,
            DateTimeUtil::getUserPreferredTimeZone());

        SpecTransViewerLog viewerLog;

        viewerLog.skipDatabaseLog();
        viewerLog.skipDeleteActions();
        viewerLog.skipDataMethods();
        viewerLog.skipEvents();

        delete_from viewerLog
            where viewerLog.CreatedDateTime <= clearingDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:SpecTransViewerLogDevDoc</DeveloperDocumentation>
	<Label>@CashManagement:SpecTransViewerLogCaption</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowChangeTracking>No</AllowChangeTracking>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SpecTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SpecRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleCustVend</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>ModuleCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendAccount</Name>
			<ExtendedDataType>AccountNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Module</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ModuleCustVend</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Transaction</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Company</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustVendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>