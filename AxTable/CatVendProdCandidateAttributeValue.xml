<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendProdCandidateAttributeValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class CatVendProdCandidateAttributeValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>compareTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Compares the type of this record to the specified record.
    /// </summary>
    /// <param name="_value">
    ///    The value definition to which to compare.
    /// </param>
    /// <returns>
    ///    0 if this record and the specified record are of identical types.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    This record and the specified record are not the same type.
    /// </exception>
    public int compareTo(CatVendProdCandidateAttributeValue _value)
    {
        if (!this.isOfSameType(_value))
        {
            throw error("@SYS152880");
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentAttributeValue</Name>
				<Source><![CDATA[
    display AttributeValueText currentAttributeValue()
    {
        //Product attribute values in the staging tables (CatVendor*value) are the current attribute values.
        CatVendorProductCandidate           catVendorProductCandidate;
        CatVendorTextValue                  catVendorTextValue;
        CatVendorIntValue                   catVendorIntValue;
        CatVendorFloatValue                 catVendorFloatValue;
        CatVendorDateTimeValue              catVendorDateTimeValue;
        CatVendorBooleanValue               catVendorBooleanValue;
        CatVendorCurrencyValue              catVendorCurrencyValue;
        AttributeValueText                  attributeValue;

        catVendorProductCandidate = CatVendorProductCandidate::find(this.CatVendorProductCandidate);
        if (catVendorProductCandidate.ActionType != CatProductActionType::Delete)
        {
            switch (this.getInstanceRelationType())
            {
                case tablestr(CatVendorTextValue):
                    catVendorTextValue = this as CatVendorTextValue;
                    attributeValue = catVendorTextValue.TextValue;
                    break;

                case tablestr(CatVendorIntValue):
                    catVendorIntValue = this as CatVendorIntValue;
                    attributeValue = int642str(catVendorIntValue.IntValue);
                    break;

                case tablestr(CatVendorFloatValue):
                    catVendorFloatValue = this as CatVendorFloatValue;
                    attributeValue = strfmt('%1', catVendorFloatValue.FloatValue);
                    break;

                case tablestr(CatVendorDateTimeValue):
                    catVendorDateTimeValue = this as CatVendorDateTimeValue;
                    attributeValue = datetime2str(catVendorDateTimeValue.DateTimeValue,DateFlags::FormatAll);
                    break;

                case tablestr(CatVendorBooleanValue):
                    catVendorBooleanValue = this as CatVendorBooleanValue;
                    attributeValue = enum2str(catVendorBooleanValue.BooleanValue);
                    break;

                case tablestr(CatVendorCurrencyValue):
                    catVendorCurrencyValue = this as CatVendorCurrencyValue;
                    attributeValue =  strfmt("@SYS324543", catVendorCurrencyValue.CurrencyCode, catVendorCurrencyValue.CurrencyValue);
                    break;
            }
        }
        else
        {
            if (catVendorProductCandidate.Status == CatVendorProductStatus::Approved)
            {
                attributeValue = "@SYS311898";
            }
            else if (catVendorProductCandidate.Status == CatVendorProductStatus::Rejected)
            {
                attributeValue = "@SYS311899";
            }
            else
            {
                attributeValue = "@SYS311897";
            }
        }
        return attributeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAttributeName</Name>
				<Source><![CDATA[
    display Name getAttributeName()
    {
        EcoResAttribute ecoResAttribute;

        select Name from ecoResAttribute where ecoResAttribute.RecId == this.EcoResAttribute;
        return ecoResAttribute.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOfSameType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Specifies whether this record is the same as the type as the specified record.
    /// </summary>
    /// <param name="_value">
    ///    The value definition to which to compare.
    /// </param>
    /// <returns>
    ///    true if this record and the specified record have the same type; otherwise, false.
    /// </returns>
    public boolean isOfSameType(CatVendProdCandidateAttributeValue _value)
    {
        return (this.InstanceRelationType == _value.InstanceRelationType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>previousAttributeValue</Name>
				<Source><![CDATA[
    display AttributeValueText previousAttributeValue()
    {
    // For every product update in catalog file, the values in EcoResvalue table are the previous attribute values.
    // If the product is new in the catalog file, then the previous attribute values will be null.
        CatVendorProductCandidate           catVendorProductCandidate;
        CatVendorApprovedProduct            catVendorApprovedProduct;
        CatVendProdCandidateAttributeValue  catVendProdCandidateAttributeValue;
        EcoResInstanceValue                 ecoResInstanceValue;
        EcoResProductInstanceValue          ecoResProductInstanceValue;
        EcoResValue                         ecoResValue;
        EcoResAttributeValue                ecoResAttributeValue;
        AttributeValueText                  attributeValue;

        select CatVendorProductCandidate, RecId
            from catVendProdCandidateAttributeValue join catVendorProductCandidate
                where catVendProdCandidateAttributeValue.CatVendorProductCandidate ==  catVendorProductCandidate.RecId
                      && catVendProdCandidateAttributeValue.RecId == this.RecId

            join VendorProductCode, EcoResProduct from catVendorApprovedProduct
                where catVendorApprovedProduct.VendorProductCode == catVendorProductCandidate.VendorProductCode

            join Product, RecId from ecoResProductInstanceValue
                where ecoResProductInstanceValue.Product == catVendorApprovedProduct.EcoResProduct

            join RecId from ecoResInstanceValue
                where ecoResInstanceValue.RecId == ecoResProductInstanceValue.RecId

            join InstanceValue, Attribute, Value from ecoResAttributeValue
                where ecoResAttributeValue.InstanceValue== ecoResInstanceValue.RecId
                      && ecoResAttributeValue.Attribute == this.EcoResAttribute

            join ecoResValue where ecoResValue.RecId == ecoResAttributeValue.Value;

        if (ecoResValue)
        {
            attributeValue = ecoResValue.value();
        }

        return attributeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNew</Name>
				<Source><![CDATA[
        public static CatVendProdCandidateAttributeValue createNew(AttributeDataType _attributeType,
                                                    int64 _productCandidate,
                                                    int64 _productAttribute, anytype _attributeValue)
    {
        CatVendProdCandidateAttributeValue   catVendProdCandidateAttributeValue;
        CatVendorIntValue   catVendorIntValue;
        CatVendorFloatValue catVendorFloatValue;
        CatVendorDateTimeValue  catVendorDateTimeValue;
        CatVendorBooleanValue   catVendorBooleanValue;
        CatVendorTextValue  catVendorTextValue;

        switch (_attributeType)
        {
            case AttributeDataType::Integer :
                catVendorIntValue.IntValue = any2int(_attributeValue);
                catVendorIntValue.insert();

                catVendProdCandidateAttributeValue = CatVendProdCandidateAttributeValue::findByRecId(catVendorIntValue.RecId,true);
                catVendProdCandidateAttributeValue.CatVendorProductCandidate = _productCandidate;
                catVendProdCandidateAttributeValue.EcoResAttribute = _productAttribute;
                ttsbegin;
                catVendProdCandidateAttributeValue.update();
                ttscommit;
            break;

            case AttributeDataType::Decimal :
                catVendorFloatValue.FloatValue = any2real(_attributeValue);
                catVendorFloatValue.insert();

                catVendProdCandidateAttributeValue = CatVendProdCandidateAttributeValue::findByRecId(catVendorFloatValue.RecId,true);
                catVendProdCandidateAttributeValue.CatVendorProductCandidate = _productCandidate;
                catVendProdCandidateAttributeValue.EcoResAttribute = _productAttribute;
                ttsbegin;
                catVendProdCandidateAttributeValue.update();
                ttscommit;
            break;

            case AttributeDataType::DateTime :

                catVendorDateTimeValue.DateTimeValue = _attributeValue;
                catVendorDateTimeValue.insert();

                catVendProdCandidateAttributeValue = CatVendProdCandidateAttributeValue::findByRecId(catVendorDateTimeValue.RecId,true);
                catVendProdCandidateAttributeValue.CatVendorProductCandidate = _productCandidate;
                catVendProdCandidateAttributeValue.EcoResAttribute = _productAttribute;
                ttsbegin;
                catVendProdCandidateAttributeValue.update();
                ttscommit;
            break;

            case AttributeDataType::Text :
                catVendorTextValue.TextValue = any2str(_attributeValue);
                catVendorTextValue.insert();

                catVendProdCandidateAttributeValue = CatVendProdCandidateAttributeValue::findByRecId(catVendorTextValue.RecId,true);
                catVendProdCandidateAttributeValue.CatVendorProductCandidate = _productCandidate;
                catVendProdCandidateAttributeValue.EcoResAttribute = _productAttribute;
                ttsbegin;
                catVendProdCandidateAttributeValue.update();
                ttscommit;
            break;

            case AttributeDataType::TrueFalse :
                catVendorBooleanValue.BooleanValue = enum2int(any2enum(_attributeValue));
                catVendorBooleanValue.insert();

                catVendProdCandidateAttributeValue = CatVendProdCandidateAttributeValue::findByRecId(catVendorBooleanValue.RecId,true);
                catVendProdCandidateAttributeValue.CatVendorProductCandidate = _productCandidate;
                catVendProdCandidateAttributeValue.EcoResAttribute = _productAttribute;
                ttsbegin;
                catVendProdCandidateAttributeValue.update();
                ttscommit;
            break;
        }

        return catVendProdCandidateAttributeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>CatVendProdCandidateAttributeValue</c> table
    ///    exists.
    /// </summary>
    /// <param name="_catVendorProductCandidate">
    ///    The record ID of <c>CatVendorProductCandidate</c> table.
    /// </param>
    /// <param name="_ecoResAttribute">
    ///    The record ID of <c>EcoResAttribute</c> table.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _catVendorProductCandidate,
                                RefRecId _ecoResAttribute)
    {
        return (CatVendProdCandidateAttributeValue::find(_catVendorProductCandidate,_ecoResAttribute).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatVendProdCandidateAttributeValue</c> table.
    /// </summary>
    /// <param name="_catVendorProductCandidate">
    ///    The record ID of <c>CatVendorProductCandidate</c> table.
    /// </param>
    /// <param name="_ecoResAttribute">
    ///    The record ID of <c>EcoResAttribute</c> table.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatVendProdCandidateAttributeValue</c> table; otherwise, an empty record.
    /// </returns>
    public static CatVendProdCandidateAttributeValue find(RefRecId _catVendorProductCandidate,
                                                          RefRecId _ecoResAttribute,
                                                          boolean _forupdate = false)
    {
        CatVendProdCandidateAttributeValue record;

        if ( _catVendorProductCandidate && _ecoResAttribute )
        {
            record.selectForUpdate(_forupdate);
            select firstonly record
                where record.CatVendorProductCandidate == _catVendorProductCandidate
                && record.EcoResAttribute == _ecoResAttribute;

            return record;
        }
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatVendProdCandidateAttributeValue</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatVendProdCandidateAttributeValue</c> table; otherwise, an empty record.
    /// </returns>
    public static CatVendProdCandidateAttributeValue findByRecId(RefRecId _recId, boolean _forupdate = false)
    {
        CatVendProdCandidateAttributeValue record;

        if (!_recId)
        {
            return record;
        }
        record.selectForUpdate(_forupdate);
        select firstonly record where record.RecId == _recId;
        return record;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendCatalogImport</ConfigurationKey>
	<DeveloperDocumentation>@SYS152848</DeveloperDocumentation>
	<Label>@SCM:CatVendProdCandidateAttributeValue</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>InstanceRelationType</TitleField1>
	<TitleField2>RecId</TitleField2>
	<Abstract>Yes</Abstract>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatVendorProductCandidate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EcoResAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatVendorProductCandidate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EcoResAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CatVendorProductCandidate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EcoResAttribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatVendorProductAtributeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>EcoResAttribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CatVendorProductCandidate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Attribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResAttribute</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResAttribute_CatVendProdCandidateAttributeValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EcoResAttribute</Name>
					<Field>EcoResAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProductCandidate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatVendorProductCandidate</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CatVendorProductCandidate</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CatVendorProductCandidate_CatVendProdCandidateAttributeValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CatVendorProductCandidate</Name>
					<Field>CatVendorProductCandidate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>