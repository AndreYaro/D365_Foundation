<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginOwnershipChangeJournalTransPurchLineLink</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginOwnershipChangeJournalTransPurchLineLink extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the inventory transactions originator link for an inventory journal line.
    /// </summary>
    /// <param name="_inventJournalDataAreaId">The value of the <c>dataAreaId</c> field in the <c>InventJournalTrans</c> table.</param>
    /// <param name="_inventJournalId">The value of the <c>JournalId</c> field in the <c>InventJournalTrans</c> table.</param>
    /// <param name="_inventJournalLineNum">The value of the <c>LineNum</c> field of the <c>InventJournalTrans</c> table.</param>
    /// <returns>An inventory transactions originator link.</returns>
    public static InventTransOriginOwnershipChangeJournalTransPurchLineLink findByJournal(
        DataAreaId          _inventJournalDataAreaId,
        InventJournalId     _inventJournalId,
        LineNum             _inventJournalLineNum)
    {
        InventTransOriginOwnershipChangeJournalTransPurchLineLink   inventTransOriginOwnershipChangeJournalTransPurchLineLink;
        InventTransOriginJournalTrans                               inventTransOriginJournalTrans;

        if (_inventJournalDataAreaId
            && _inventJournalId)
        {
            select firstonly inventTransOriginOwnershipChangeJournalTransPurchLineLink
                join inventTransOriginJournalTrans
                where inventTransOriginOwnershipChangeJournalTransPurchLineLink.OwnershipChangeJournalLine   == inventTransOriginJournalTrans.InventTransOrigin
                   && inventTransOriginJournalTrans.InventJournalId                     == _inventJournalId
                   && inventTransOriginJournalTrans.InventJournalLineNum                == _inventJournalLineNum
                   && inventTransOriginJournalTrans.InventJournalDataAreaId             == _inventJournalDataAreaId;
        }

        return inventTransOriginOwnershipChangeJournalTransPurchLineLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByJournalLineOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the inventory transactions originator link for an inventory journal line.
    /// </summary>
    /// <param name="_ownershipChangeJournalLineTransOriginId">The ID of the inventory transaction originator to find.</param>
    /// <returns>An inventory transactions originator link.</returns>
    public static InventTransOriginOwnershipChangeJournalTransPurchLineLink findByJournalLineOriginId(InventTransOriginId _ownershipChangeJournalLineTransOriginId)
    {
        InventTransOriginOwnershipChangeJournalTransPurchLineLink inventTransOriginOwnershipChangeJournalTransPurchLineLink;

        if (_ownershipChangeJournalLineTransOriginId)
        {
            select firstonly inventTransOriginOwnershipChangeJournalTransPurchLineLink
                where inventTransOriginOwnershipChangeJournalTransPurchLineLink.OwnershipChangeJournalLine == _ownershipChangeJournalLineTransOriginId;
        }

        return inventTransOriginOwnershipChangeJournalTransPurchLineLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByPurchaseOrderLineOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a inventory transactions originator link for a purchase order line exists.
    /// </summary>
    /// <param name="_purchaseLineInventTransOriginId">The ID of the inventory transaction originator to find.</param>
    /// <returns>true if the inventory transactions originator link exists; otherwise, false.</returns>
    public static boolean existByPurchaseOrderLineOriginId(InventTransOriginId _purchaseLineInventTransOriginId)
    {
        if (!_purchaseLineInventTransOriginId)
        {
            return false;
        }

        return (select firstonly RecId from InventTransOriginOwnershipChangeJournalTransPurchLineLink
                    where InventTransOriginOwnershipChangeJournalTransPurchLineLink.PurchaseOrderLine == _purchaseLineInventTransOriginId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryValueInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query value for ownership change journal line and purchase order line.
    /// </summary>
    /// <returns>The query value for ownership change journal line and purchase order line.</returns>
    public str queryValueInventTransOriginId()
    {
        return '((' + fieldStr(InventTransOrigin, RecId) + ' == ' + queryValue(this.OwnershipChangeJournalLine) + '))'
            +  ' || '
            +  '((' + fieldStr(InventTransOrigin, RecId) + ' == ' + queryValue(this.PurchaseOrderLine)  +'))';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ConsignmentInbound</ConfigurationKey>
	<DeveloperDocumentation>@Consignment:Developer_InventTransOriginLinkOwnershipChange</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@Consignment:Table_InventTransOriginLinkOwnershipChange</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>OwnershipChangeJournalLine</TitleField1>
	<TitleField2>PurchaseOrderLine</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>OwnershipChangeJournalLineIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OwnershipChangeJournalLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OwnershipChangeJournalLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchaseOrderLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OwnershipChangeJournalLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OwnershipChangeJournalLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchaseOrderLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchaseOrderLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OwnershipChangeJournalLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OwnershipChangeJournalLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_OwnershipChangeJournalLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OwnershipChangeJournalLine</Name>
					<Field>OwnershipChangeJournalLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchaseOrderLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOrigin_PurchaseOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchaseOrderLine</Name>
					<Field>PurchaseOrderLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>