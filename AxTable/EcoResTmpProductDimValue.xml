<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResTmpProductDimValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResTmpProductDimValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createOnServerConfigId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Populates the <c>EcoResTmpProductDimValue</c> table with the product variant configuration dimension value records on the server side.
    /// </summary>
    /// <param name="_product">
    ///     The ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <param name="_itemId">
    ///     The <c>ItemId</c> record.
    /// </param>
    /// <param name="_set">
    ///     The <c>Set</c> contains product variant dimension values.
    /// </param>
    /// <returns>
    ///      The <c>EcoResTmpProductDimValue</c> table which contains the product variant dimension configuration value records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerConfigId(  RefRecId    _product,
                                                                    ItemId      _itemId =   '',
                                                                    Set         _set    =   null)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;

        EcoResProductDimValueGeneration::generateFromForm(
            ecoResTmpProductDimValue,
            EcoResProductVariantDimValue::newProductVariantDim_ConfigId(),
            _product,
            _itemId,
            _set);

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOnServerConfigIdFromBOMVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Populates the <c>EcoResTmpProductDimValue</c> table with the product variant configuration
    ///    dimension value records on the server side for all components inside the specified BOM
    /// </summary>
    /// <param name="_bomId">
    ///    The <c>BOMId</c> record.
    /// </param>
    /// <returns>
    ///    The <c>EcoResTmpProductDimValue</c> table that contains the product variant dimension configuration
    ///    value records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerConfigIdFromBOMVersion(BOMId   _bomId)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;
        BOMVersion                 bomVersion;

        if (_bomId)
        {
            while select ItemId from bomVersion
                where bomVersion.bomId == _bomId
            {
                EcoResProductDimValueGeneration::generateFromForm(
                    ecoResTmpProductDimValue,
                    EcoResProductVariantDimValue::newProductVariantDim_ConfigId(),
                    InventTable::itemProduct(bomVersion.ItemId),
                    bomVersion.ItemId);
            }
        }

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOnServerInventColorId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Populates the <c>EcoResTmpProductDimValue</c> table with the product variant color dimension value records on the server side.
    /// </summary>
    /// <param name="_product">
    ///     The ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <param name="_itemId">
    ///     The <c>ItemId</c> record.
    /// </param>
    /// <param name="_set">
    ///     The <c>Set</c> contains product variant dimension values.
    /// </param>
    /// <returns>
    ///     The <c>EcoResTmpProductDimValue</c> table which contains the product variant dimension color value records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerInventColorId( RefRecId    _product,
                                                                        ItemId      _itemId = '',
                                                                        Set         _set    =  null)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;

        EcoResProductDimValueGeneration::generateFromForm(
            ecoResTmpProductDimValue,
            EcoResProductVariantDimValue::newProductVariantDim_InventColorId(),
            _product,
            _itemId,
            _set);

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOnServerInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Populates the <c>EcoResTmpProductDimValue</c> table with the product variant size dimension value records on the server side.
    /// </summary>
    /// <param name="_product">
    ///     The ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <param name="_itemId">
    ///     The <c>ItemId</c> record.
    /// </param>
    /// <param name="_set">
    ///     The <c>Set</c> contains product variant dimension values.
    /// </param>
    /// <returns>
    ///     The <c>EcoResTmpProductDimValue</c> table which contains the product variant dimension size value records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerInventSizeId(  RefRecId    _product,
                                                                        ItemId      _itemId     =   '',
                                                                        Set         _set        =   null)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;

        EcoResProductDimValueGeneration::generateFromForm(
            ecoResTmpProductDimValue,
            EcoResProductVariantDimValue::newProductVariantDim_InventSizeId(),
            _product,
            _itemId,
            _set);

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOnServerInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>EcoResTmpProductDimValue</c> table with the product variant style dimension value
    /// records on the server side.
    /// </summary>
    /// <param name="_product">
    /// The ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <param name="_itemId">
    /// The <c>ItemId</c> record.
    /// </param>
    /// <param name="_set">
    /// The <c>Set</c> that contains the product variant dimension values.
    /// </param>
    /// <returns>
    /// The <c>EcoResTmpProductDimValue</c> table which contains the product variant dimension style value
    /// records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerInventStyleId( RefRecId    _product,
                                                                        ItemId      _itemId = '',
                                                                        Set         _set    =  null)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;

        EcoResProductDimValueGeneration::generateFromForm(
            ecoResTmpProductDimValue,
            EcoResProductVariantDimValue::newProductVariantDim_InventStyleId(),
            _product,
            _itemId,
            _set);

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOnServerInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>EcoResTmpProductDimValue</c> table with the product variant version dimension value
    /// records on the server side.
    /// </summary>
    /// <param name="_product">
    /// The ID of the <c>EcoResProduct</c> record.
    /// </param>
    /// <param name="_itemId">
    /// The <c>ItemId</c> record.
    /// </param>
    /// <param name="_set">
    /// The <c>Set</c> that contains the product variant dimension values.
    /// </param>
    /// <returns>
    /// The <c>EcoResTmpProductDimValue</c> table which contains the product variant dimension version value
    /// records.
    /// </returns>
    static EcoResTmpProductDimValue createOnServerInventVersionId( RefRecId    _product,
                                                                        ItemId      _itemId = '',
                                                                        Set         _set    =  null)
    {
        EcoResTmpProductDimValue   ecoResTmpProductDimValue;

        EcoResProductDimValueGeneration::generateFromForm(
            ecoResTmpProductDimValue,
            EcoResProductVariantDimValue::newProductVariantDim_InventVersionId(),
            _product,
            _itemId,
            _set);

        return ecoResTmpProductDimValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@SYS136084</Label>
	<ReplacementKey>NameItemIdx</ReplacementKey>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RetailDisplayOrder</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RetailDisplayOrder</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameItemIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>