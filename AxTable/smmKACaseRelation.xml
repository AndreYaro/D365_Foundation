<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmKACaseRelation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmKACaseRelation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(smmKACaseRelation, ItemId) :
                    if (this.ItemId)
                    {
                        // Check that parent type is Folder
                        if (smmEncyclopediaItems::find(this.ItemId).Type == smmEncyclopediaItemType::Folder)
                        {
                            // Cannot add article that is not a link or document type
                            ret = checkFailed("@SYS134435");
                        }
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNew</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new record when a related record is created from outside the <c>smmKACaseRelation</c>
    ///    table.
    /// </summary>
    /// <param name="_kaId">
    ///    The item Id
    /// </param>
    /// <param name="_recId">
    ///    The case record ID.
    /// </param>
    /// <returns>
    ///    The newly created record.
    /// </returns>
    /// <remarks>
    ///    Called by the <c>smmEncyclopediaTree</c> class and the case detail form.
    /// </remarks>
    public static smmKACaseRelation createNew(smmEncyclopediaItemId _kaId, RefRecId _recId)
    {
        smmKACaseRelation caseRelation;

        caseRelation.initValue();

        caseRelation.ItemId    = _kaId;
        caseRelation.CaseRecId = _recId;

        caseRelation.insert();

        return caseRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCaseRelation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes a record when a related record is deleted from outside the <c>smmKACaseRelation</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the related record.
    /// </param>
    /// <remarks>
    ///    Called by the case detail form where both related records from category and case are shown.The user
    ///    can only delete related records associated to Case.
    /// </remarks>
    static void deleteCaseRelation(RefRecId _recId)
    {
        smmKACaseRelation    smmKACaseRelation = null;

        ttsbegin;

        smmKACaseRelation = smmKACaseRelation::find(_recId, true);
        if (smmKACaseRelation.RecId)
            smmKACaseRelation.delete();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existId</Name>
				<Source><![CDATA[
        static boolean existId(smmEncyclopediaItemId _id, RefRecId _caseRecId)
    {
        smmKACaseRelation    smmKACaseRelation = null;

        select firstonly RecId from smmKACaseRelation
            where smmKACaseRelation.ItemId == _id &&
                  smmKACaseRelation.CaseRecId == _caseRecId;

        return smmKACaseRelation.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        static smmKACaseRelation find(RefRecId _recId, boolean _forUpdate = false)
    {
        smmKACaseRelation    smmKACaseRelation = null;

        if (_recId)
        {
            smmKACaseRelation.selectForUpdate(_forUpdate);

            select firstonly smmKACaseRelation
                where smmKACaseRelation.RecId == _recId;
        }

        return smmKACaseRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveRelationToCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all records associated to a particular item and category.
    /// </summary>
    /// <param name="_kaId">
    /// The item ID.
    /// </param>
    /// <param name="_categoryRecId">
    /// The category record ID.
    /// </param>
    /// <remarks>
    /// The item is now associated to the category form in the <c>smmKACategoryRelation</c> table
    /// </remarks>
    static void moveRelationToCategory(smmEncyclopediaItemId _kaId, RefRecId _categoryRecId)
    {
        smmKACaseRelation smmKACaseRelation;
        CaseDetailBase    caseDetailBase;

        ttsbegin;
        while select forupdate smmKACaseRelation
            exists join caseDetailBase
            where smmKACaseRelation.CaseRecId == caseDetailBase.RecId &&
                  smmKACaseRelation.ItemId == _kaId &&
                  caseDetailBase.CategoryRecId == _categoryRecId
        {
            if (smmKACaseRelation.validateDelete())
            {
                smmKACaseRelation.delete();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS321405</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>smmKACaseAll</FormRef>
	<Label>@SYS132997</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>CaseRecId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ItemCaseIdx</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<ReplacementKey>ItemCaseIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CaseRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CaseRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CaseRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CaseRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmEncyclopediaItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemCaseIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CaseRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CaseDetailBase</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CaseDetailBase</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IsCaseOf</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>IsKACaseRelationFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CaseRecId</Name>
					<Field>CaseRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmEncyclopediaItems</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>smmEncyclopediaItems</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IsEncyclopediaOf</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>IsKACaseRelationFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>smmEncyclopediaItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>