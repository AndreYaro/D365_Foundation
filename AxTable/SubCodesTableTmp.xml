<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubCodesTableTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SubCodesTableTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fill the list of subcodes for the lookup.
    /// </summary>
    /// <returns>
    /// List of subcodes.
    /// </returns>
    public static SubCodesTableTmp populate()
    {
        #define.EnglishLanguage('en-us')
        RetailInformationSubcodeTable retailInformationSubcodeTable;
        SubCodesTableTmp subCodeTmp;

        RetailInfocodeId infoCodeId = RetailMCRChannelTable::findForCurrentUser().MCRReasonCodeRetailInfoCodeId;
        LanguageId userLanguage = xUserInfo::find(false, curUserId()).language;

        while select SubCodeId, InfoCodeId, RecId from retailInformationSubcodeTable group by SubCodeId, InfoCodeId, RecId
            where retailInformationSubcodeTable.infocodeId == infoCodeId 
        {
            RetailInformationSubcodeTranslation retailInformationSubcodeTranslation;
            RetailInformationSubcodeTranslationDescr description;

           // Fill description of subcodes in user language.
           select description from retailInformationSubcodeTranslation
               where retailInformationSubcodeTranslation.InfoSubcode == retailInformationSubcodeTable.RecId
               && retailInformationSubcodeTranslation.LanguageId == userLanguage;

            if (retailInformationSubcodeTranslation.description)
            {
                description = retailInformationSubcodeTranslation.description;
            }

            // Fill description of subcodes to english, if there is no description in user language.
            if (!description)
            {
                select description from retailInformationSubcodeTranslation
                    where retailInformationSubcodeTranslation.InfoSubcode == retailInformationSubcodeTable.RecId
                    && retailInformationSubcodeTranslation.LanguageId == #EnglishLanguage;

                if (retailInformationSubcodeTranslation.description)
                {
                    description = retailInformationSubcodeTranslation.description;
                }
            }

            // Fill description of subcodes to any other language, if there are no description in user or english language.
            if (!description)
            {
                select description from retailInformationSubcodeTranslation
                    where retailInformationSubcodeTranslation.InfoSubcode == retailInformationSubcodeTable.RecId
                    && (retailInformationSubcodeTranslation.LanguageId != userLanguage
                    || retailInformationSubcodeTranslation.LanguageId != #EnglishLanguage);

                if (retailInformationSubcodeTranslation.description)
                {
                    description = retailInformationSubcodeTranslation.description;
                }
            }

            subCodeTmp.SubCodeId = retailInformationSubcodeTable.subcodeId;
            subCodeTmp.Description = description;
            subCodeTmp.InfoCodeId = retailInformationSubcodeTable.infocodeId;
            subCodeTmp.insert();
        }

        return subCodeTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupSubCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display's the subcodes lookup which is filtered based on infocodes.
    /// </summary>
    /// <param name = "_control">Lookup control.</param>
    public void lookupSubCodes(FormStringControl _control)
    {
        SysTableLookup lookup;
        QueryBuildDataSource qbds;
        Query q = new Query();
        qbds = q.addDataSource(tableNum(SubCodesTableTmp));
        lookup = SysTableLookup::newParameters(tableNum(SubCodesTableTmp), _control, true);
        lookup.addLookupField(fieldnum(SubCodesTableTmp, SubCodeId));
        lookup.addLookupField(fieldnum(SubCodesTableTmp, Description));
        lookup.addLookupField(fieldnum(SubCodesTableTmp, InfoCodeId));
        lookup.parmQuery(q);
        lookup.parmTmpBuffer(SubCodesTableTmp::populate());
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<PrimaryIndex>SubCodeIdx</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubCodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInformationSubcodeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInformationSubcodeTranslationDescr</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InfoCodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SubCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SubCodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>