<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentTestResult_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetImpairmentTestResult_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        AssetDocumentEntry_JP                   docEntry;
        AssetDocumentTable_JP                   docTable;
        AssetDocumentTrans_JP                   docTrans;
        AssetImpairmentTestResultDocument_JP    resultDocTable;
        NumberSequenceReference                 numberSeqRef;

        select firstOnly RecId from docTrans
            exists join docEntry
                where docTrans.AssetDocumentEntry_JP == docEntry.RecId
            exists join docTable
                where docEntry.AssetDocumentTable_JP == docTable.RecId
            exists join resultDocTable
                where resultDocTable.AssetDocumentTable_JP == docTable.RecId
                   && resultDocTable.AssetImpairmentTestResult_JP == this.RecId;

        if (docTrans)
        {
            throw error("@SYS4005180");
        }

        ttsBegin;

        // SELECT * FROM ASSETDOCUMENTENTRY_JP WHERE ASSETDOCUMENTENTRY_JP.ASSETDOCUMENTTABLE_JP IN
        //   (SELECT ASSETDOCUMENTTABLE_JP.RECID FROM ASSETDOCUMENTTABLE_JP
        //    JOIN ASSETIMPAIRMENTTESTRESULTDOCUMENT_JP
        //    ON ASSETIMPAIRMENTTESTRESULTDOCUMENT_JP.ASSETDOCUMENTTABLE_JP = ASSETDOCUMENTTABLE_JP.RECID AND
        //       ASSETIMPAIRMENTTESTRESULTDOCUMENT_JP.ASSETIMPAIRMENTTESTRESULT_JP = ASSETDOCUMENTENTRY_JP.RECID)
        delete_from docEntry
            exists join docTable
                where docEntry.AssetDocumentTable_JP == docTable.RecId
            exists join resultDocTable
                where  resultDocTable.AssetDocumentTable_JP == docTable.RecId
                    && resultDocTable.AssetImpairmentTestResult_JP == this.RecId;

        numberSeqRef = NumberSeqReference::findReference(extendedTypeNum(AssetImpairmentTestNum_JP));

        if (numberSeqRef.NumberSequenceId)
        {
            NumberSeq::releaseNumber(numberSeqRef.NumberSequenceId, this.TestNum);
        }

        super();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasPostedTrans</Name>
				<Source><![CDATA[
    /// <summary>
	/// Check if there are posted transactions belong to this test result.
	/// </summary>
	/// <returns>
	/// True if there is any.
	/// </returns>
	public boolean hasPostedTrans()
	{
	    AssetDocumentTrans_JP                docTrans;
	    AssetImpairmentTestResultDocument_JP resultDoc;
	    AssetImpairmentTestResultDocEntry_JP resultDocEntry;

	    select firstonly RecId from docTrans
	    exists join resultDocEntry
	        where docTrans.AssetDocumentEntry_JP == resultDocEntry.AssetDocumentEntry_JP
	    exists join resultDoc
	        where resultDoc.RecId == resultDocEntry.ResultDocument
	              && resultDoc.AssetImpairmentTestResult_JP == this.RecId;

	    return docTrans.RecId;
	}

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
	{
	    super();

	    this.NetSellingPriceAsRecovable = true;
	    this.SharedAssetsImpairmentAllocateToCGU = false;
	    this.Status = AssetImpairmentTestResultStatus_JP::BeforeTest;
	}

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
	{
	    if (this.cguGroup)
	    {
	        AssetImpairmentCGUGroupTest_JP::insertAssetImpairmentTestResult(this);
	    }
	    else
	    {
	        super();
	    }
	}

]]></Source>
			</Method>
			<Method>
				<Name>isInUse</Name>
				<Source><![CDATA[
    /// <summary>
	/// Indicates if this test result is being used by any session.
	/// </summary>
	/// <returns>
	/// True if it is being used.
	/// </returns>
	public boolean isInUse()
	{
	    return this.SessionId ? true : false;
	}

]]></Source>
			</Method>
			<Method>
				<Name>releaseResult</Name>
				<Source><![CDATA[
    /// <summary>
	/// Release the use of this test result.
	/// </summary>
	public void releaseResult()
	{
	    ttsBegin;

	    this.SessionId = 0;
	    this.SessionLoginDateTime = utcDateTimeNull();
	    this.update();

	    ttsCommit;
	}

]]></Source>
			</Method>
			<Method>
				<Name>useResult</Name>
				<Source><![CDATA[
    /// <summary>
	/// Hold the usage of this test result.
	/// </summary>
	/// <returns>
	/// True if successfully get the usage. False if this is being used by other session.
	/// </returns>
	public boolean useResult()
	{
	    boolean ret;
	    xSession xsession;

	    ttsBegin;

	    if (this.SessionId)
	    {
	        if (!isSessionActive(this.SessionId, this.SessionLoginDateTime))
	        {
	            xSession = new xSession(sessionId());
	            if (xSession)
	            {
	                this.SessionId = sessionId();
	                this.SessionLoginDateTime = xSession.loginDateTime();
	                this.update();
	                ret = true;
	            }
	        }
	    }
	    else
	    {
	        xSession = new xSession(sessionId());
	        if (xSession)
	        {
	            this.SessionId = sessionId();
	            this.SessionLoginDateTime = xSession.loginDateTime();
	            this.update();
	            ret = true;
	        }
	    }

	    ttsCommit;

	    return ret;
	}

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
	{
	    boolean ret;

	    ret = super();

	    if (ret && this.isInUse())
	    {
	        ret = checkFailed("@FixedAssetsImpairementAccounting:SYP4880487");
	    }

	    return ret;
	}

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetImpairmentTestResult_JP</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The <c>AssetImpairmentTestResult_JP</c> recid.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The <c>AssetImpairmentTestResult_JP</c> table record.
    /// </returns>
    public static AssetImpairmentTestResult_JP find(
        RefRecId                _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetImpairmentTestResult_JP      result;

        if (_recId)
        {
            result.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                result.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                result
            where
                result.RecId == _recId;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTestNum</Name>
				<Source><![CDATA[
/// <summary>
    /// Finds the specified record in the <c>AssetImpairmentTestResult_JP</c> table by test number.
    /// </summary>
    /// <param name="_testNum">
    /// The <c>AssetImpairmentTestNum_JP</c> typed test number.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The <c>AssetImpairmentTestResult_JP</c> table record.
    /// </returns>
    public static AssetImpairmentTestResult_JP findByTestNum(
        AssetImpairmentTestNum_JP   _testNum,
        boolean                     _forupdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetImpairmentTestResult_JP      result;

        if (_testNum)
        {
            result.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                result.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                result
            where
                result.TestNum == _testNum;
        }

        return result;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4005177</DeveloperDocumentation>
	<FormRef>AssetImpairmentRecognitionTestResult_JP</FormRef>
	<Label>@SYS4005176</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>TestNum</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>AssetTestResultNumIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>AssetImpairmentTestResultDocument_JP</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>AssetImpairmentTestResultDocument_JP</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>AssetImpairmentCGURecognitionTotal_JP</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>AssetImpairmentCGURecognitionTotal_JP</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TestDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TestDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TestNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CGUGroup</Name>
			<Label>@FixedAssetsImpairementAccounting:SYP4880233</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CGUGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetAllocBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetImpairMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetHasHigherPriority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ResultHeader</Name>
			<Label>@SYS4005178</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TestDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ResultHeaderCGU</Name>
			<Label>@SYS4005178</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NetSellingPriceAsRecovable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TestDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetsImpairmentAllocateToCGU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Session</Name>
			<Label>@FixedAssetsImpairementAccounting:SYP4880569</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetBookType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>AssetBookType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CGUGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetImpairmentCGUGroupRefRecId_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NetSellingPriceAsRecovable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@FixedAssetsImpairementAccounting:SYP4880536</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>JournalSessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetAllocBasis</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetImpairmentSharedAssetAllocBasis_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetHasHigherPriority</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@FixedAssetsImpairementAccounting:SYP4880313</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetImpairMethod</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>AssetImpairmentSharedAssetsMethod_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetsImpairmentAllocateToCGU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>AssetImpairmentTestResultStatus_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TestDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>AssetImpairmentTestDate_JP</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TestNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AssetImpairmentTestNum_JP</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetTestResultNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TestNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CGUGroup</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CGUGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CGUGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetImpairmentCGUGroup_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CGUGroup</Name>
					<Field>CGUGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>