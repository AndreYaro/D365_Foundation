<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetEncumbranceLedgerAccountTransactionTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetEncumbranceLedgerAccountTransactionTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populateTempTableFromQuery</Name>
				<Source><![CDATA[
    internal static BudgetEncumbranceLedgerAccountTransactionTmp populateTempTableFromQuery(Query _query)
    {
        BudgetEncumbranceLedgerAccountTransactionTmp ledgerAccountTransaction;

        Map queryInsertMap = BudgetEncumbranceLedgerAccountTransactionTmp::constructTargetToSourceMap(_query);

        Query::insert_recordset(ledgerAccountTransaction, queryInsertMap, _query);

        return ledgerAccountTransaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructTargetToSourceMap</Name>
				<Source><![CDATA[
    private static Map constructTargetToSourceMap(Query _query)
    {
        QueryBuildDataSource generalJournalEntryQBDS = _query.dataSourceTable(tableNum(GeneralJournalEntry));
        QueryBuildDataSource generalJournalAccountEntryQBDS = _query.dataSourceTable(tableNum(GeneralJournalAccountEntry));
        QueryBuildDataSource subledgerAccountEntryQBDS = _query.dataSourceTable(tableNum(SubledgerJournalAccountEntry));
        QueryBuildDataSource subledgerAccountEntryDistributionQBDS = _query.dataSourceTable(tableNum(AccountingDistribution));

        if (generalJournalEntryQBDS == null 
            || generalJournalAccountEntryQBDS == null 
            || subledgerAccountEntryQBDS == null
            || subledgerAccountEntryDistributionQBDS == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        Map insertRecordsetMap = new Map(Types::String, Types::Container);

        // General journal entry fields
        int generalJournalEntryUniqueId = generalJournalEntryQBDS.uniqueId();
        QueryBuildFieldList generalJournalEntryFieldList = generalJournalEntryQBDS.fields();

        generalJournalEntryFieldList.addField(fieldNum(GeneralJournalEntry, AccountingDate));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, AccountingDate), [generalJournalEntryUniqueId, fieldStr(GeneralJournalEntry, AccountingDate)]);

        generalJournalEntryFieldList.addField(fieldNum(GeneralJournalEntry, JournalNumber));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, JournalNumber), [generalJournalEntryUniqueId, fieldStr(GeneralJournalEntry, JournalNumber)]);

        generalJournalEntryFieldList.addField(fieldNum(GeneralJournalEntry, SubledgerVoucher));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, SubledgerVoucher), [generalJournalEntryUniqueId, fieldStr(GeneralJournalEntry, SubledgerVoucher)]);

        generalJournalEntryFieldList.addField(fieldNum(GeneralJournalEntry, DocumentNumber));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, DocumentNumber), [generalJournalEntryUniqueId, fieldStr(GeneralJournalEntry, DocumentNumber)]);

        // General journal account entry fields
        int generalJournalAccountEntryUniqueId = generalJournalAccountEntryQBDS.uniqueId();
        QueryBuildFieldList generalJournalAccountEntryFieldList = generalJournalAccountEntryQBDS.fields();

        generalJournalAccountEntryFieldList.addField(fieldNum(GeneralJournalAccountEntry, RecId));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, GeneralJournalAccountEntry), [generalJournalAccountEntryUniqueId, fieldStr(GeneralJournalAccountEntry, RecId)]);

        generalJournalAccountEntryFieldList.addField(fieldNum(GeneralJournalAccountEntry, AccountingCurrencyAmount));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, Amount), [generalJournalAccountEntryUniqueId, fieldStr(GeneralJournalAccountEntry, AccountingCurrencyAmount)]);

        generalJournalAccountEntryFieldList.addField(fieldNum(GeneralJournalAccountEntry, LedgerDimension));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, FocusLedgerDimension), [generalJournalAccountEntryUniqueId, fieldStr(GeneralJournalAccountEntry, LedgerDimension)]);

        // subledger account entry distribution fields
        int subledgerAccountEntryDistributionUniqueId = subledgerAccountEntryDistributionQBDS.uniqueId();
        QueryBuildFieldList subledgerAccountEntryDistributionFieldList = subledgerAccountEntryDistributionQBDS.fields();

        subledgerAccountEntryDistributionFieldList.addField(fieldNum(AccountingDistribution, SourceDocumentHeader));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, SourceDocumentHeader), [subledgerAccountEntryDistributionUniqueId, fieldStr(AccountingDistribution, SourceDocumentHeader)]);

        int subledgerAccountEntryUniqueId = subledgerAccountEntryQBDS.uniqueId();
        QueryBuildFieldList subledgerAccountEntryFieldList = subledgerAccountEntryQBDS.fields();

        subledgerAccountEntryFieldList.addField(fieldNum(SubledgerJournalAccountEntry, AccountingCurrencyAmount));
        insertRecordsetMap.insert(fieldStr(BudgetEncumbranceLedgerAccountTransactionTmp, SubledgerAmount), [subledgerAccountEntryUniqueId, fieldStr(SubledgerJournalAccountEntry, AccountingCurrencyAmount)]);

        return insertRecordsetMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Budget:BudgetEncumbranceLedgerAccountTransactionTableDevDoc</DeveloperDocumentation>
	<Label>@Budget:BudgetEncumbranceLedgerTransactionTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>DocumentNumber</TitleField1>
	<TitleField2>JournalNumber</TitleField2>
	<Modules>Budget</Modules>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AccountingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>GeneralJournalEntryJournalNumber</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubledgerVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GeneralJournalAccountEntry</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FocusLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReportingDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>GeneralLedgerBalanceReportingDimensionsRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBalanced</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentNum</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SubledgerAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GroupSourceDocumentHeader</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>BudgetEncumbranceInquiryFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerAccountDocumentDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FocusLedgerDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountingDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReportingDimensionDocumentDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReportingDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountingDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>GeneralJournalAccountEntry</Name>
			<RelatedTable>GeneralJournalAccountEntry</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GeneralJournalAccountEntry</Name>
					<Field>GeneralJournalAccountEntry</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>