<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgTmpJobsByStatus</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgTmpJobsByStatus extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populatefromJmgShopSupervisorWorkspaceConfiguration</Name>
				<Source><![CDATA[
    public static JmgTmpJobsByStatus populatefromJmgShopSupervisorWorkspaceConfiguration()
    {
        JmgTmpJobsByStatus jobsByStatus;

        var jobListQuery             = new Query(queryStr(JmgShopSupervisorMyProdJobListQuery));
        QueryBuildDataSource jobList = jobListQuery.dataSourceTable(tableNum(JmgProdJobListView));
        QueryBuildRange statusRange  = jobList.addRange(fieldNum(JmgProdJobListView, JobStatus));

        JmgTmpJobsByStatus::createRecordForStatus(jobsByStatus, JmgJobStatus::Created, jobListQuery, statusRange);
        JmgTmpJobsByStatus::createRecordForStatus(jobsByStatus, JmgJobStatus::Started, jobListQuery, statusRange);
        JmgTmpJobsByStatus::createRecordForStatus(jobsByStatus, JmgJobStatus::InProgress, jobListQuery, statusRange);
        JmgTmpJobsByStatus::createRecordForStatus(jobsByStatus, JmgJobStatus::Completed, jobListQuery, statusRange);

        return jobsByStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRecordForStatus</Name>
				<Source><![CDATA[
    private static void createRecordForStatus(JmgTmpJobsByStatus _jobsByStatus, JmgJobStatus _status, Query _jobListQuery, QueryBuildRange _statusRange)
    {
        _statusRange.value(queryValue(_status));
        QueryRun jobListQueryRun = new QueryRun(_jobListQuery);

        var todayDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
        var endOfTodayUtc = DateTimeUtil::newDateTime(todayDate, str2Time("23:59:59"), DateTimeUtil::getUserPreferredTimeZone());
        var secondsInDay = 24 * 60 * 60;

        Counter jobsCount = 0;
        while (jobListQueryRun.next())
        {
            JmgProdJobListView jobView = jobListQueryRun.get(tableNum(JmgProdJobListView));
            JmgJobTable job = JmgJobTable::find(jobView.JobId);
            boolean isJobCompletedToday = DateTimeUtil::getDifference(endOfTodayUtc, job.toDateTime()) < secondsInDay;

            if  ((_status != JmgJobStatus::Completed && job.FromDate <= todayDate)  // Our interest is in *Planned* start date
              || (_status == JmgJobStatus::Completed && isJobCompletedToday))       // Our interest is in *Actual*  end date
            {
                jobsCount++;
            }
        }

        _jobsByStatus.JobStatus = _status;
        _jobsByStatus.CountOfJobs = jobsCount;
        _jobsByStatus.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Jmg</ConfigurationKey>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>JobStatus</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountOfJobs</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountOfJobs</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>JmgJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CountOfJobs</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS98942</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JobStatusIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>JobStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>