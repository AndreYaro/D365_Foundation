<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMATemplateBOMTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMATemplateBOMTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyBOMLines</Name>
				<Source><![CDATA[
    public void copyBOMLines()
    {
        if (this.bomCopyRefType == SMABOMCopyRefType::Manual)
        {
            return;
        }

        SMABOMCopy::newMasterCopy(this).runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                [fieldNum(SMATemplateBOMTable, bomCopyRefId), this.bomCopyRefIdDefaultingDependencies()],
                [fieldNum(SMATemplateBOMTable, ItemId), this.itemIdDefaultingDependencies()],
                [fieldNum(SMATemplateBOMTable, InventDimId), this.inventDimIdDefaultingDependencies()]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomCopyRefIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container bomCopyRefIdDefaultingDependencies()
    {
        return [fieldNum(SMATemplateBOMTable, bomCopyRefType)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container itemIdDefaultingDependencies()
    {
        return [fieldNum(SMATemplateBOMTable, bomCopyRefType),
                fieldNum(SMATemplateBOMTable, bomCopyRefId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container inventDimIdDefaultingDependencies()
    {
        return [fieldNum(SMATemplateBOMTable, bomCopyRefType),
                fieldNum(SMATemplateBOMTable, bomCopyRefId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SMATemplateBOMTable, BOMCopyRefId):
                this.defaultBOMCopyRefId();
                break;

            case fieldNum(SMATemplateBOMTable, ItemId):
                this.defaultItemId();
                break;

            case fieldNum(SMATemplateBOMTable, InventDimId):
                this.defaultInventDimId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMCopyRefId</Name>
				<Source><![CDATA[
    private void defaultBOMCopyRefId()
    {
        if (this.isFieldSet(fieldNum(SMATemplateBOMTable, BOMCopyRefType)))
        {
            if (this.BOMCopyRefType == SMABOMCopyRefType::Manual)
            {
                this.bomCopyRefId = '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemId</Name>
				<Source><![CDATA[
    private void defaultItemId()
    {
        if (this.isFieldSet(fieldNum(SMATemplateBOMTable, BOMCopyRefType))  ||
            this.isFieldSet(fieldNum(SMATemplateBOMTable, BOMCopyRefId)))
        {
            if (this.BOMCopyRefId)
            {
                switch (this.BOMCopyRefType)
                {
                    case SMABOMCopyRefType::TemplateBOM   :
                        this.ItemId = this.copySMATemplateBOMTable().ItemId;
                        break;

                    case SMABOMCopyRefType::Production  :
                        this.ItemId = this.copyProdTable().ItemId;
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDimId</Name>
				<Source><![CDATA[
    private void defaultInventDimId()
    {
        if (this.isFieldSet(fieldNum(SMATemplateBOMTable, BOMCopyRefType))  ||
            this.isFieldSet(fieldNum(SMATemplateBOMTable, BOMCopyRefId)))
        {
            if (this.BOMCopyRefId)
            {
                switch (this.BOMCopyRefType)
                {
                    case SMABOMCopyRefType::TemplateBOM   :
                        this.InventDimId = this.copySMATemplateBOMTable().InventDimId;
                        break;

                    case SMABOMCopyRefType::Production  :
                        this.InventDimId = this.copyProdTable().InventDimId;
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        // BOM date is set to todays date as default
        this.bomDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        super();

        this.copyBOMLines();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean _forupdate = false)
    {
        return InventDim::find(this.InventDimId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    public InventTable inventTable(boolean _forupdate = false)
    {
        return InventTable::find(this.ItemId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copySMATemplateBOMTable</Name>
				<Source><![CDATA[
    private SMATemplateBOMTable copySMATemplateBOMTable()
    {
        SMATemplateBOMTable smaTemplateBOMTable;

        if (this.BOMCopyRefType == SMABOMCopyRefType::TemplateBOM)
        {
            smaTemplateBOMTable = SMATemplateBOMTable::find(this.bomCopyRefId);
        }

        return smaTemplateBOMTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyProdTable</Name>
				<Source><![CDATA[
    private ProdTable copyProdTable()
    {
        ProdTable prodTable;

        if (this.BOMCopyRefType == SMABOMCopyRefType::Production)
        {
            prodTable = ProdTable::find(this.bomCopyRefId);
        }

        return prodTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (SMAServiceObjectRelation::existTemplateBOM(this.TemplateBOMId))
        {
            ret = checkFailed(strfmt("@SYS93841", this.TemplateBOMId));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;
        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldstr(SMATemplateBOMTable, bomCopyRefId) :
                    if (this.bomCopyRefType == SMABOMCopyRefType::Production && this.bomCopyRefId)
                        if (ProdTable::find(this.bomCopyRefId).status().isBefore(ProdStatus::ReportedFinished))
                            ret = checkFailed(strfmt("@SYS86940",this.bomCopyRefId));
                    break;

                case fieldstr(SMATemplateBOMTable, FromDate) :
                    if (ret && this.FromDate && this.ToDate && this.FromDate > this.ToDate)
                        ret = checkFailed("@SYS104511");
                    break;

                case fieldstr(SMATemplateBOMTable, ToDate) :
                    if (ret && this.FromDate && this.ToDate && this.FromDate > this.ToDate)
                        ret = checkFailed("@SYS104511");
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.InventDimId)
            ret = ret && InventTable::checkProductDimensions(this.ItemId, this.inventDim());

        if (ret && this.bomCopyRefType != SMABOMCopyRefType::Manual)
        {
            if (!this.bomCopyRefId)
                ret = checkFailed(strfmt("@SYS50104",new DictField(tablenum(SMATemplateBOMTable),fieldnum(SMATemplateBOMTable,bomCopyRefId)).label()));

            if ((this.bomCopyRefType == SMABOMCopyRefType::BOM || this.bomCopyRefType == SMABOMCopyRefType::Production) && !this.bomDate)
                ret = checkFailed(strfmt("@SYS50104",new DictField(tablenum(SMATemplateBOMTable),fieldnum(SMATemplateBOMTable,bomDate)).label()));

            if (ret && this.bomCopyRefType == SMABOMCopyRefType::Production && ProdTable::find(this.bomCopyRefId).status().isBefore(ProdStatus::ReportedFinished))
                ret = checkFailed(strfmt("@SYS86940",this.bomCopyRefId));

            if (ret && this.FromDate && this.ToDate && this.FromDate > this.ToDate)
                ret = checkFailed("@SYS104511");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(SMATemplateBOMId _templateBOMId)
    {
        if (_templateBOMId && !SMATemplateBOMTable::exist(_templateBOMId))
        {
            return checkFailed(strfmt(SMATemplateBOMTable::txtNotExist(), _templateBOMId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(SMAMasterBOMId _templateBOMId)
    {
        return (select smaTemplateBOMTable where smaTemplateBOMTable.TemplateBOMId == _templateBOMId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMATemplateBOMTable find(SMATemplateBOMId _templateBOMId, boolean _forupdate = false)
    {
        SMATemplateBOMTable templateBOMTable;

        if (!_templateBOMId)
        {
            return templateBOMTable;
        }

        templateBOMTable.selectForUpdate(_forupdate);

        select firstonly templateBOMTable where templateBOMTable.TemplateBOMId == _templateBOMId;

        return templateBOMTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        // Master bill of material '%1' does not exist.
        return "@SYS86938";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMABom</ConfigurationKey>
	<DeveloperDocumentation>@SYS122725</DeveloperDocumentation>
	<FormRef>SMATemplatebomTable</FormRef>
	<Label>@SYS89149</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TemplateBOMId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TemplateBOMIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>TemplateBOMIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAServiceBOMTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SMAServiceBOMTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateInterval</Name>
			<Label>@SYS22142</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS74090</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMCopyRefType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMCopyRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOMCopyRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMABOMCopyRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOMCopyRefType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SMABOMCopyRefType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>BOMDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS22297</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemIdProduction</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateBOMId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATemplateBOMId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TemplateBOMIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TemplateBOMId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BillsOfMaterial</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TemplateBom</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>BOMCopyRefType</Name>
					<Field>BOMCopyRefType</Field>
					<ValueStr>SMABOMCopyRefType::BOM</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMCopyRefId</Name>
					<Field>BOMCopyRefId</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProductionOrder</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TemplateBom</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>BOMCopyRefType</Name>
					<Field>BOMCopyRefType</Field>
					<ValueStr>SMABOMCopyRefType::Production</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMCopyRefId</Name>
					<Field>BOMCopyRefId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMATemplateBOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMATemplateBOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TemplateBom</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TemplateBom</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>BOMCopyRefType</Name>
					<Field>BOMCopyRefType</Field>
					<ValueStr>SMABOMCopyRefType::TemplateBOM</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMCopyRefId</Name>
					<Field>BOMCopyRefId</Field>
					<RelatedField>TemplateBOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>