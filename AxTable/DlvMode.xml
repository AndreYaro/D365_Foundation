<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DlvMode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DlvMode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowShipCarrierSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the delivery type of the ship carrier allows for additional setup.
    /// </summary>
    /// <returns>
    /// true if the ship carrier setup is allowed; otherwise, false.
    /// </returns>
    public boolean allowShipCarrierSetup()
    {
        if (this.ShipCarrierDlvType == ShipCarrierDlvType::Ground ||
            this.ShipCarrierDlvType == ShipCarrierDlvType::Air)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDelivery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the company account that corresponds to the carrier name and account code exists.
    /// </summary>
    /// <returns>
    /// true if the interface is not enabled or if account exists; otherwise false.
    /// </returns>
    public boolean checkDelivery()
    {
        boolean     ret = true;

        if (!ShipCarrierInterface::interfaceEnabled())
        {
            return true;
        }

        if ((this.ShipCarrierDlvType == ShipCarrierDlvType::Air ||
             this.ShipCarrierDlvType == ShipCarrierDlvType::Ground) )
        {
            if (!this.ShipCarrierId)
            {
                ret = checkFailed(strfmt("@SYS50104", fieldpname(DlvMode, ShipCarrierId)));
            }

            if (!this.ShipCarrierAccountCode)
            {
                ret = checkFailed(strfmt("@SYS50104", fieldpname(DlvMode, ShipCarrierAccountCode)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromShipCarrierTable</Name>
				<Source><![CDATA[
    private void initFromShipCarrierTable(ShipCarrierTable _shipCarrierTable)
    {
        ShipCarrierCompanyAccounts shipCarrierCompanyAccounts;

        select firstonly AccountCode from shipCarrierCompanyAccounts
            order by AccountCode
            where   shipCarrierCompanyAccounts.CarrierName == _shipCarrierTable.CarrierName;

        this.ShipCarrierName = _shipCarrierTable.CarrierName;
        this.ShipCarrierAccountCode = shipCarrierCompanyAccounts.AccountCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.ShipCarrierDlvType = ShipCarrierDlvType::Misc;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isClipperShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the carrier is the ClipperShip company.
    /// </summary>
    /// <returns>
    /// true if the carrier is the ClipperShip company; otherwise, false.
    /// </returns>
    public boolean isClipperShip()
    {
        return ShipCarrierInterface::find(ShipCarrierTable::find(this.ShipCarrierId).CarrierInterfaceId).isClipperShip();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFedEx</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the carrier is the FedEx company.
    /// </summary>
    /// <returns>
    /// true if the carrier is the FedEx company; otherwise, false.
    /// </returns>
    public boolean isFedEx()
    {
        return ShipCarrierInterface::find(ShipCarrierTable::find(this.ShipCarrierId).CarrierInterfaceId).isFedEx();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReferenced</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the delivery mode is referenced on an active record.
    /// </summary>
    /// <returns>
    ///    true if the delivery mode is referenced; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The customer table and non-invoiced sales orders are checked for references to this delivery mode.
    /// </remarks>
    protected boolean isReferenced()
    {
        #AviFiles

        if (this.Code == '')
        {
            return false;
        }

        // Search sales tables
        boolean isReferenced = SalesTable::existDlvModeNotInvoiced(this.Code);

        if (!isReferenced)
        {
            // Show progress window
            SysOperationProgress progress = new SysOperationProgress();
            progress.setCaption(strfmt("@SYS104946", "@SYS210"));   // Validating Mode of delivery
            progress.setText(strfmt("@SYS68533", "@SYS11307")); // Searching Customers
            progress.update(true);

            // Search customers
            isReferenced = CustTable::existDlvMode(this.Code);
        }

        // validate if any of the shared companies has any references.
        isReferenced = isReferenced ? isReferenced : this.validateCrossCompanyByMethod(tableMethodStr(DlvMode, isReferenced));

        return isReferenced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUPS</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the carrier is the UPS company.
    /// </summary>
    /// <returns>
    /// true if the carrier is the UPS company; otherwise, false.
    /// </returns>
    public boolean isUPS()
    {
        return ShipCarrierInterface::find(ShipCarrierTable::find(this.ShipCarrierId).CarrierInterfaceId).isUPS();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrDisplayExpedite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the expedite information for a delivery mode.
    /// </summary>
    /// <returns>
    /// The expedite information for a delivery mode.
    /// </returns>
    public display MCRExpedite mcrDisplayExpedite()
    {
        return this.MCRExpedite;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(DlvMode, ShipCarrierDlvType):
                if (!this.allowShipCarrierSetup())
                {
                    this.ShipCarrierId = '';
                    this.ShipCarrierName = '';
                    this.ShipCarrierAccountCode = '';
                }
                break;

            case fieldnum(DlvMode, ShipCarrierId):
                if (!this.ShipCarrierId)
                {
                    this.ShipCarrierName = '';
                    this.ShipCarrierAccountCode = '';
                }
                else
                {
                    if (this.allowShipCarrierSetup())
                    {
                        ShipCarrierTable shipCarrierTable = ShipCarrierTable::find(this.ShipCarrierId);
                        if (shipCarrierTable)
                        {
                            // ShipCarrierTable is marked as obsolete with SysDeletedObjects72 config key,
                            // no need to handle this as part of data sharing cross company.
                            this.initFromShipCarrierTable(shipCarrierTable);
                        }
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmsDisplayTMSEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays whether or not the Mode of Delivery is TMS Enabled.
    /// </summary>
    /// <returns>
    /// True if TMS is enabled; otherwise, false.
    /// </returns>
    public display boolean tmsDisplayTMSEnabled()
    {
        return this.tmsIsTMSEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmsIsTMSEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the Mode of Delivery is TMS Enabled.
    /// </summary>
    /// <returns>
    /// True if TMS is enabled; otherwise, false.
    /// </returns>
    public boolean tmsIsTMSEnabled()
    {
        boolean ret = TMSCarrierService::existDlvModeId(this.Code);

        ret = ret ? ret : this.validateCrossCompanyByMethod(tableMethodStr(DlvMode, tmsIsTMSEnabled));
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = true;

        if (this.ShipCarrierDlvType != ShipCarrierDlvType::Misc)
        {
            if (this.isReferenced())
            {
                // Cannot delete the delivery mode. It is used on a customer record or sales order that has not been invoiced.
                ret = checkFailed("@SYS126827");
            }
        }

        if (this.tmsIsTMSEnabled())
        {
            ret = checkFailed("@TRX659");
        }

        if (ret)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret = true;

        switch (_fieldIdToCheck)
        {
            case fieldnum(DlvMode, ShipCarrierDlvType):
                if (this.ShipCarrierDlvType == ShipCarrierDlvType::Misc)
                {
                    if (this.isReferenced())
                    {
                        // Cannot change the delivery mode to Misc. It exists on a customer record or sales order that has not been invoiced.
                        ret = checkFailed("@SYS126830");
                    }
                }
                break;
        }

        ret = ret && super(_fieldIdToCheck);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.checkDelivery();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(DlvModeId dlvModeId)
    {
        if (dlvModeId  && !DlvMode::exist(dlvModeId))
        {
            return checkFailed(strfmt(DlvMode::txtNotExist(),dlvModeId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(DlvModeId dlvModeId)
    {
        return dlvModeId && (select firstonly RecId from dlvMode
                            index hint CodeIdx
                            where dlvMode.Code == dlvModeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static DlvMode find(DlvModeId   dlvModeId,
                        boolean     _forUpdate = false)
    {
        DlvMode dlvMode;

        if (dlvModeId)
        {
            dlvMode.selectForUpdate(_forUpdate);

            select firstonly dlvMode
                index hint CodeIdx
                where dlvMode.Code == dlvModeId;
        }
        return dlvMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static DlvMode findRecId(recId      _recId,
                             boolean    _forUpdate = false)
    {
        DlvMode dlvMode;

        if (_recId)
        {
            dlvMode.selectForUpdate(_forUpdate);

            select firstonly dlvMode
                where dlvMode.RecId == _recId;
        }
        return dlvMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shipCarrierService</Name>
				<Source><![CDATA[
    static boolean shipCarrierService(DlvModeId _dlvModeId)
    {
        DlvMode     dlvMode = DlvMode::find(_dlvModeId);

        return dlvMode.ShipCarrierDlvType   == ShipCarrierDlvType::Air
            || dlvMode.ShipCarrierDlvType   == ShipCarrierDlvType::Ground;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txt</Name>
				<Source><![CDATA[
    static FreeTxt txt(DlvModeId        _dlvModeId,
                       LanguageId       _languageId = CompanyInfo::languageId())
    {
        DlvMode     dlvMode = DlvMode::find(_dlvModeId);

        LanguageTxt languageTxt = LanguageTxt::find(dlvMode.TableId,
                                                    dlvMode.RecId,
                                                    _languageId);
        return languageTxt.Txt ? languageTxt.Txt : dlvMode.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static str 80 txtNotExist()
    {
        return "@SYS27701";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCrossCompanyByMethod</Name>
				<Source><![CDATA[
    protected boolean validateCrossCompanyByMethod(str _methodName)
    {
        SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
        
        if (policy.RecId && policy.IsEnabled)
        {
            Query    query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this.orig(), policy.RecId);
            QueryRun queryRun = new QueryRun(query);
            boolean result;
            while (queryRun.Next())
            {
                DlvMode companyDlvMode = queryRun.get(this.TableId);
                DataAreaId company = companyDlvMode.DataAreaId;
                if (companyDlvMode && company && company != curExt())
                {
                    changecompany(company)
                    {
                        DlvMode dlvMode = DlvMode::find(companyDlvMode.Code);
                        if (dlvMode.RecId)
                        {
                            buf2Buf(this, dlvMode);

                            if (this.validateCurrentCompanyByMethod(_methodName, company, dlvMode))
                            {
                                return true;
                            }
                        }
                    }
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCurrentCompanyByMethod</Name>
				<Source><![CDATA[
    protected boolean validateCurrentCompanyByMethod(str _methodName, DataAreaId _currentCompany, DlvMode _dlvMode)
    {
        switch (_methodName)
        {
            case tableMethodStr(DlvMode, isReferenced):
                if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(_currentCompany, tableStr(CustTable))
                    && CustTable::existDlvMode(_dlvMode.Code))
                {
                    return true;
                }
                break;
            case tableMethodStr(DlvMode, tmsIsTMSEnabled):
                if (!SysDataSharingPolicy::isSharingPolicyEnabledByCompanyAndTable(_currentCompany, tableStr(TMSCarrierService))
                    && TMSCarrierService::existDlvModeId(_dlvMode.Code))
                {
                    return true;
                }
                break;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124462</DeveloperDocumentation>
	<FormRef>DeliveryMode</FormRef>
	<Label>@SYS210</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Txt</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CodeIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>CodeIdx</PrimaryIndex>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@sys7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Transport</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Markup</Name>
			<Label>@RET170010</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRExpedite</Name>
			<Label>@MCR21525</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRExpedite</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierDlvType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DisplayOrder</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvModeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarkupGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DeliveryMarkupGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRExpedite</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRExpedite</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierAccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierAccountCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShipCarrierDlvType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ShipCarrierDlvType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCarrierName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ShipCarrierName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Transport</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatTransport</ExtendedDataType>
			<FeatureClass>IntrastatTransportToggle</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DisplayOrder</Name>
			<ExtendedDataType>DlvModeDisplayOrder</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ShipCarrierNameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ShipCarrierName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ShipCarrierIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ShipCarrierId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntrastatTransportMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>IntrastatTransportMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Transport</Name>
					<Field>Transport</Field>
					<RelatedField>TransPortCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MarkupGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>MarkupGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>MarkupModuleType::Delivery</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MarkupGroup</Name>
					<Field>MarkupGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MCRExpediteTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>MCRExpediteTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRExpedite</Name>
					<Field>MCRExpedite</Field>
					<RelatedField>MCRExpedite</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ExpediteIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ShipCarrierCompany</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ShipCarrierCompany</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCarrierName</Name>
					<Field>ShipCarrierName</Field>
					<RelatedField>CarrierName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ShipCarrierCompanyAccounts</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ShipCarrierCompanyAccounts</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCarrierName</Name>
					<Field>ShipCarrierName</Field>
					<RelatedField>CarrierName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCarrierAccountCode</Name>
					<Field>ShipCarrierAccountCode</Field>
					<RelatedField>AccountCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ShipCarrierTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ShipCarrierTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipCarrierId</Name>
					<Field>ShipCarrierId</Field>
					<RelatedField>CarrierId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>