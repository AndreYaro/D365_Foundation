<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInfocodeTableSpecific</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInfocodeTableSpecific extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assign the caption.
    /// </summary>
    /// <returns>
    /// The caption value.
    /// </returns>
    public str caption()
    {
        str ret;

        ret = super();
    /*
        switch (this.refTableId)
        {
            case (RetailInfocodeRefTableIdBase::RetailInventTable) :
            {
                ret = this.refRelation + ", " + InventTable::find(this.refRelation).ItemName;
                break;
            }
            case (RetailInfocodeRefTableIdBase::RetailCustTable) :
            {
                ret = this.refRelation + ", " + CustTable::find(this.refRelation).Name;
                break;
            }
            case (RetailInfocodeRefTableIdBase::RetailStoreTenderTypeTable) :
            {
                ret = this.refRelation + ", " + RetailStoreTable::find(this.refRelation).name + ", " + this.refRelation2;
                break;
            }
            case (RetailInfocodeRefTableIdBase::RetailStoreTenderTypeCardTable) :
            {
                ret = this.refRelation + ", " + RetailStoreTable::find(this.refRelation).name + this.refRelation2 + this.refRelation3;
                break;
            }
            case (RetailInfocodeRefTableIdBase::RetailIncomeExpenseAccountTable) :
            {
                ret = this.refRelation + ", " + RetailStoreTable::find(this.refRelation).name + this.refRelation2;
                break;
            }
        }
    */
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInfocodeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the value for the <c>InputRequired</c> field of the <c>RetailInfocodeTableSpecific</c>
    /// table.
    /// </summary>
    /// <param name="_infocodeTable">
    /// A <c>RetailInfocodeTableSpecific</c> record.
    /// </param>
    public void initFromInfocodeTable(RetailInfocodeTable _infocodeTable)
    {
        this.InputRequired = _infocodeTable.InputRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the value of the <c>Prompt</c> field of the <c>RetailInfocodeTableSpecific</c> table for
    /// the specified <c>InfocodeId</c> value.
    /// </summary>
    /// <returns>
    /// The value of the <c>Prompt</c> field.
    /// </returns>
    display RetailInfocodePrompt prompt()
    {
        RetailInfocodePrompt   ret;

        if (this.InfocodeId)
        {
            ret = RetailInfocodeTable::find(this.InfocodeId).infocodePrompt();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the table name for a specified <c>RefTableId</c> value.
    /// </summary>
    /// <returns>
    /// The table name for the specified <c>RefTableId</c> value.
    /// </returns>
    display TableName tableName()
    {
        switch (this.RefTableId)
        {
            case RetailInfocodeRefTableIdBase::RetailInventTable                : return tablePName(RetailInventTable);
            case RetailInfocodeRefTableIdBase::RetailCustTable                  : return tablePName(CustTable); // CustTable is the correct table but for legacy reasons enum must remain RetailCustTable.
            case RetailInfocodeRefTableIdBase::RetailStoreTenderTypeTable       : return tablePName(RetailStoreTenderTypeTable);
            case RetailInfocodeRefTableIdBase::RetailStoreTenderTypeCardTable   : return tablePName(RetailStoreTenderTypeCardTable);
            case RetailInfocodeRefTableIdBase::RetailIncomeExpenseAccountTable  : return tablePName(RetailIncomeExpenseAccountTable);
            case RetailInfocodeRefTableIdBase::InventTable                      : return tablePName(InventTable);
            default : break;
        }

        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id which is to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid; otherwise false.
    /// </returns>
    /// <remarks>
    /// Calls methods <c>validateInfocodeId</c> to validate field <c>infocodeId</c>.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret && fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailInfocodeTableSpecific, InfocodeId))
        {
            ret = this.validateInfocodeId();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInfocodeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>InfocodeId</c> field is valid.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise false.
    /// </returns>
    boolean validateInfocodeId()
    {
        RetailInfocodeTable         infocodeTable;
        RetailInfocodeGroupSpecific retailInfocodeGroupSpecific;
        boolean                     ret                         = true;

        infocodeTable = RetailInfocodeTable::find(this.InfocodeId);
        if (infocodeTable)
        {
            ret = this.validateInfocodeTable(infocodeTable);

            if(!RetailInfocodeInputRequiredFlight::instance().isEnabled())
            {
                this.InputRequired = infocodeTable.InputRequired;
            }
        }
        else
        {
            while select infocodeTable
                exists join retailInfocodeGroupSpecific
                    where   retailInfocodeGroupSpecific.InfocodeId  == infocodeTable.infocodeId
                         && retailInfocodeGroupSpecific.GroupId     == this.InfocodeId
            {
                ret = this.validateInfocodeTable(infocodeTable) && ret;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInfocodeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>InfocodeId</c> field is valid.
    /// </summary>
    /// <param name="_retailInfocodeTable">
    /// RetailInfocodeTable
    /// </param>
    /// <returns>
    /// True if the field is valid; otherwise false.
    /// </returns>
    public boolean validateInfocodeTable(RetailInfocodeTable _retailInfocodeTable)
    {
        RetailStoreTenderTypeTable  tenderType;
        RetailInfocodeTable         infocodeTable   = _retailInfocodeTable;
        boolean                     ret             = true;

        if (this.RefTableId == RetailInfocodeRefTableIdBase::RetailStoreTenderTypeTable)
        {
            tenderType = RetailStoreTenderTypeTable::find(RetailStoreTable::find(this.RefRelation).RecId,this.RefRelation2);
            if (tenderType)
            {
                if ((tenderType.Function == RetailTenderFunction::Card) && (infocodeTable.InputRequired == true))
                {
                    ret = checkFailed("@RET3968");
                }
                if (infocodeTable.LinkedInfocodeId != "")
                {
                    ret = checkFailed("@RET3969");
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a record occurs in the <c>RetailInfocodeTableSpecific</c> table.
    /// </summary>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation">
    /// The <c>refRelation</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation2">
    /// The <c>refRelation2</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation3">
    /// The <c>refRelation3</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise false.
    /// </returns>
    public static boolean existsForRecord(RetailInfocodeRefTableIdBase _refTableId, RetailInfocodeRefRelation _refRelation, RetailInfocodeRefRelation _refRelation2 = "", RetailInfocodeRefRelation _refRelation3 = "")
    {
        RetailInfocodeTableSpecific    infocodeTableSpecific;
        boolean ret;

        select RecId from infocodeTableSpecific
            where infocodeTableSpecific.RefTableId == _refTableId
               && infocodeTableSpecific.RefRelation == _refRelation
               && infocodeTableSpecific.RefRelation2 == _refRelation2
               && infocodeTableSpecific.RefRelation3 == _refRelation3;

        if (infocodeTableSpecific)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInfocodeTableSpecific</c> table.
    /// </summary>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation">
    /// The <c>refRelation</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_infocodeId">
    /// The <c>InfocodeId</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation2">
    /// The <c>refRelation2</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation3">
    /// The <c>refRelation3</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInfocodeTableSpecific</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInfocodeTableSpecific find(RetailInfocodeRefTableIdBase _refTableId,
                                                RetailInfocodeRefRelation _refRelation,
                                                RetailInfocodeIdBase      _infocodeId,
                                                RetailInfocodeRefRelation _refRelation2 = "",
                                                RetailInfocodeRefRelation _refRelation3 = "",
                                                boolean _forUpdate = false)
    {
        RetailInfocodeTableSpecific    infocodeTableSpecific;

        if (_refTableId && _refRelation && _infocodeId)
        {
            infocodeTableSpecific.selectForUpdate(_forUpdate);

            select firstonly infocodeTableSpecific
                index hint refTableInfocodeIdx
                where infocodeTableSpecific.RefTableId == _refTableId
                   && infocodeTableSpecific.RefRelation == _refRelation
                   && infocodeTableSpecific.RefRelation2 == _refRelation2
                   && infocodeTableSpecific.RefRelation3 == _refRelation3
                   && infocodeTableSpecific.InfocodeId == _infocodeId;
        }

        return infocodeTableSpecific;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInfocodeTableSpecific</c> table.
    /// </summary>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation">
    /// The <c>refRelation</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation2">
    /// The <c>refRelation2</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <param name="_refRelation3">
    /// The <c>refRelation3</c> field of the <c>RetailInfocodeTableSpecific</c> table.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInfocodeTableSpecific</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInfocodeTableSpecific findForRecord(RetailInfocodeRefTableIdBase _refTableId, RetailInfocodeRefRelation _refRelation, RetailInfocodeRefRelation _refRelation2 = "", RetailInfocodeRefRelation _refRelation3 = "")
    {
        RetailInfocodeTableSpecific    infocodeTableSpecific;

        select firstonly infocodeTableSpecific
            where infocodeTableSpecific.RefTableId == _refTableId
               && infocodeTableSpecific.RefRelation == _refRelation
               && infocodeTableSpecific.RefRelation2 == _refRelation2
               && infocodeTableSpecific.RefRelation3 == _refRelation3;

        return infocodeTableSpecific;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// After infocodes are deleted from product, delete infocodes from
    /// retailCategoryProductInfoCode as no need to keep mapping record now.
    /// </summary>
    public void delete()
    {
        RetailCategoryProductInfoCode retailCategoryProductInfoCode;

        delete_from retailCategoryProductInfoCode
            where retailCategoryProductInfoCode.infocodeId == this.infocodeId
                && retailCategoryProductInfoCode.itemId == this.refRelation
                && this.refTableId == RetailInfocodeRefTableIdBase::RetailInventTable;

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260858</DeveloperDocumentation>
	<FormRef>RetailInfocodeTableSpecific</FormRef>
	<Label>@RET3093</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>infocodeId</TitleField1>
	<TitleField2>refRelation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>refTableInfocodeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>refTableInfocodeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>refRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inputRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>whenRequired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>refTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>tableName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>refRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>refRelation2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>refRelation3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Infocode</Name>
			<Label>@RET3095</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>prompt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Input</Name>
			<Label>@RET3096</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inputRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>whenRequired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Sequence</Name>
			<Label>@RET3097</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>infocodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeIdBase</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>inputRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInputRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>refRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRefRelation</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>refRelation2</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRefRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>refRelation3</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRefRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>refTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeRefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailInfocodeRefTableIdBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>sequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeTableSpecificSequence</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>whenRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET3094</Label>
			<EnumType>RetailNoneAlwaysPositiveNegative</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>refTableInfocodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>refTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>refRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>refRelation2</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>refRelation3</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>infocodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>refTableId</Name>
					<Field>refTableId</Field>
					<ValueStr>RetailInfocodeRefTableIdBase::RetailCustTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation</Name>
					<Field>refRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>refTableId</Name>
					<Field>refTableId</Field>
					<ValueStr>RetailInfocodeRefTableIdBase::InventTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation</Name>
					<Field>refRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailAffiliation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailAffiliation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>refTableId</Name>
					<Field>refTableId</Field>
					<ValueStr>RetailInfocodeRefTableIdBase::RetailAffiliation</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation</Name>
					<Field>refRelation</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailIncomeExpenseAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailIncomeExpenseAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>refTableId</Name>
					<Field>refTableId</Field>
					<ValueStr>RetailInfocodeRefTableIdBase::RetailIncomeExpenseAccountTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation</Name>
					<Field>refRelation</Field>
					<RelatedField>storeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation2</Name>
					<Field>refRelation2</Field>
					<RelatedField>accountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInfocodeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailInfocode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>infocodeId</Name>
					<SourceEDT>RetailInfocodeIdBase</SourceEDT>
					<Field>infocodeId</Field>
					<RelatedField>infocodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InfocodeIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailInventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>refTableId</Name>
					<Field>refTableId</Field>
					<ValueStr>RetailInfocodeRefTableIdBase::RetailInventTable</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>refRelation</Name>
					<Field>refRelation</Field>
					<RelatedField>itemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>