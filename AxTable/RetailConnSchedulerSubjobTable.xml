<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSchedulerSubjobTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnSchedulerSubjobTable extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the existance of AX table.
    /// </summary>
    /// <returns>
    /// true if AX table exists.
    /// </returns>
    boolean checkTableName()
    {
        DictTable dictTable1;
        DictTable dictTable2;
        boolean ret;
        ;

        dictTable1 = new DictTable(tableName2id(this.AXTableName));

        ret = (dictTable1 && true);

        if (!ret)
        {
            Box::warning(strFmt("@Retail:RetailCDXSubjobInvalidAxTable", this.AXTableName));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Enabled = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedAXTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes entries from sub job field list if AX table name changes.
    /// </summary>
    public void modifiedAXTableName()
    {
        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;

        if (this.AXTableName != this.orig().AXTableName || !this.orig().AXTableName)
        {
            delete_from schedulerSubjobFieldList
                where schedulerSubjobFieldList.SubjobId == this.SubJobId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedChannelTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes entries from sub job field list if Channel table name changes.
    /// </summary>
    public void modifiedChannelTableName()
    {
        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;
        ;

        if (this.ChannelTableName != this.orig().ChannelTableName || !this.orig().ChannelTableName)
        {
            delete_from schedulerSubjobFieldList
                where schedulerSubjobFieldList.SubjobId == this.SubJobId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>FromTableName</c> and <c>ToTableName</c> fields.
    /// </summary>
    /// <param name="_fieldId">
    /// The field that was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        ;
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailConnSchedulerSubjobTable, AXTableName):
                this.modifiedAXTableName();
                break;
            case fieldNum(RetailConnSchedulerSubjobTable, ChannelTableName):
                this.modifiedChannelTableName();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferFieldListExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a <c>RetailConnSchedulerSubjobFieldList</c> record exists.
    /// </summary>
    /// <returns>
    /// true if the <c>RetailConnSchedulerSubjobFieldList</c> record exists; otherwise, false.
    /// </returns>
    boolean transferFieldListExists()
    {
        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;

        boolean ret;

        select count(RecId) from schedulerSubjobFieldList
            where schedulerSubjobFieldList.SubjobId == this.SubJobId;

        if (schedulerSubjobFieldList.RecId)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAXTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the existance of from table and deletes the transfer field list and from table filters entries.
    /// </summary>
    /// <returns>
    /// true if from table exists.
    /// </returns>
    public boolean validateAXTableName()
    {
        boolean                     ret;
        str                         dialogTxt;
        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;

        select firstonly RecId from schedulerSubjobFieldList
            where schedulerSubjobFieldList.SubjobId == this.SubJobId;

        if (schedulerSubjobFieldList)
        {
            dialogTxt = "@RET546";
            if (Box::yesNo(dialogTxt, DialogButton::Yes, "@RET545") == DialogButton::Yes)
            {
                ret = true;
            }
        }
        else
        {
            ret = true;
        }

        // downloading job, check if "AX table" is valid AX table
        ret = this.checkTableName() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateChannelTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the existance of to table and deletes the transfer field list entries.
    /// </summary>
    /// <returns>
    /// true if to table exists.
    /// </returns>
    public boolean validateChannelTableName()
    {
        boolean                     ret;
        str                         dialogTxt;
        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;
        ;
        select firstonly RecId from schedulerSubjobFieldList
            where schedulerSubjobFieldList.SubjobId == this.SubJobId;

        if (schedulerSubjobFieldList)
        {
            dialogTxt = "@RET548";
            if (Box::yesNo(dialogTxt, DialogButton::Yes, "@RET547") == DialogButton::Yes)
                ret = true;
        }
        else
            ret = true;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldNum(RetailConnSchedulerSubjobTable, AXTableName) :
                ret = this.validateAXTableName();
                break;
            case fieldNum(RetailConnSchedulerSubjobTable, ChannelTableName) :
                ret = this.validateChannelTableName();
                break;
            case fieldNum(RetailConnSchedulerSubjobTable, ToDataAreaIdFieldName) :
                ret = this.validateToDataAreaIdFieldName();
                break;
            default :
                ret = true;
        }

        ret = ret && super(_fieldIdToCheck);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateToDataAreaIdFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>ToDataAreaIdFieldName</c> field of in the <c>RetailConnSchedulerSubjobTable</c>
    /// record.
    /// </summary>
    /// <returns>
    /// false if the field for <c>dataAreaId</c> is zero; otherwise, true.
    /// </returns>
    boolean validateToDataAreaIdFieldName()
    {
        if (this.ReplicateDataAreaId && !this.ToDataAreaIdFieldName)
        {
            return checkFailed(strFmt("@RET423",fieldPName(RetailConnSchedulerSubjobTable,ToDataAreaIdFieldName)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = this.validateToDataAreaIdFieldName();

        if (ret)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateDRMSchedulerSubJobTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the scheduler sub job.
    /// </summary>
    /// <param name="_subJobId">
    /// The sub job number of the sub job to be copied.
    /// </param>
    /// <returns>
    /// An instance of <c>RetailConnSchedulerSubjobTable</c> table.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The sub job record does not exist.
    /// </exception>
    /// <exception cref="M:Exception::Error">
    /// The record is not copied correctly.
    /// </exception>
    /// <exception cref="M:Exception::UpdateConflictNotRecovered">
    /// A standard update conflict error.
    /// </exception>
    /// <exception cref="M:Exception::UpdateConflict">
    /// A standard update conflict error.
    /// </exception>
    public static RetailConnSchedulerSubjobTable duplicateDRMSchedulerSubJobTable(RetailConnSubJobId _subJobId)
    {
        #OCCRetryCount
        RetailConnSchedulerSubjobTable tSchedulerSubJobTable;
        Counter                 pCounter = 0;
        DialogField             dialogSubJob;
        Dialog                  dialog;
        ;
        dialog = new Dialog("@RET435");

        dialogSubJob = dialog.addField(extendedTypeStr(RetailConnSubJobId), "@RET436", "@RET131", true);
        dialogSubJob.lookupButton(-1);

        if (_subJobId)
        {
            if (dialog.run())
            {
                if (RetailConnSchedulerSubjobTable::find(dialogSubJob.value()).RecId)
                    throw error(strFmt("@RET437",dialogSubJob.value()));
            }
            else
            {
                return RetailConnSchedulerSubjobTable::find(_subJobId);
            }

            try
            {
                ttsbegin;

                select forupdate tSchedulerSubJobTable
                where tSchedulerSubJobTable.SubJobId == _subJobId;
                tSchedulerSubJobTable.SubJobId = dialogSubJob.value();
                tSchedulerSubJobTable.insert();

                RetailConnSchedulerSubjobFieldList::duplicateDRMSchedulerSubjobFieldList(_subJobId, dialogSubJob.value());

                ttscommit;
            }
            catch (Exception::Deadlock)
            {
                if (pCounter <= 10)
                    retry;

                ttsabort;

                tSchedulerSubJobTable = RetailConnSchedulerSubjobTable::find(_subJobId);
            }
            catch (Exception::UpdateConflict)
            {
                if (appl.ttsLevel() == 0)
                {
                    if (xSession::currentRetryCount() >= #RetryNum)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }
            catch
            {
                throw error("@RET433");
            }
        }

        return tSchedulerSubJobTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailConnSchedulerSubjobTable</c> table.
    /// </summary>
    /// <param name="_subJobId">
    /// The value of the sub job number.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailConnSchedulerSubjobTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailConnSchedulerSubjobTable find(RetailConnSubJobId _subJobId, boolean _forUpdate = false)
    {
        RetailConnSchedulerSubjobTable schedulerSubjobTable;

        if (_subJobId)
        {
            schedulerSubjobTable.selectForUpdate(_forUpdate);

            select firstonly schedulerSubjobTable
                index hint subjobIdx
                where schedulerSubjobTable.SubJobId == _subJobId;
        }

        return schedulerSubjobTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateFilterField</Name>
				<Source><![CDATA[
    display RetailDateFilterField dateFilterField()
    {
        RetailCDXDateFilterField dateFilterField = RetailCDXDateFilterField::find(this.RetailConnChannelSchema, this.AXTableName);
        return dateFilterField.DateFilterField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldFilterCdxEntityData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the subjob should have data filtered.
    /// </summary>
    /// <param name = "_subJobId">The subjob id.</param>
    /// <returns>True if the subjob should have data filtered; otherwise, false.</returns>
    public static boolean shouldFilterCdxEntityData(RetailConnSubJobId _subJobId)
    {
        RetailConnSchedulerSubjobTable  subJob;
        boolean                         result;

        select subJob where subJob.subJobId == _subJobId;

        if (subJob)
        {
            RetailConnChannelSchema                     channelSchema;
            RetailCdxDataDistributionQuery              dataDistributionQuery;
            RetailConnChannelSchemaSkipDataSyncConfig   skipDataSyncConfig;

            TableId tid = tableName2id(subJob.AXTableName);

            select firstonly RecId from skipDataSyncConfig
                where skipDataSyncConfig.AllowSkipDataSync == NoYes::Yes
                exists join channelSchema
                    where   channelSchema.SchemaName    == skipDataSyncConfig.SchemaName
                        &&  channelSchema.RecId         == subJob.RetailConnChannelSchema
                exists join dataDistributionQuery
                    where   dataDistributionQuery.EntityType                == skipDataSyncConfig.EntityType
                        &&  dataDistributionQuery.RetailConnChannelSchema   == channelSchema.RecId
                        &&  dataDistributionQuery.RefTableId                == tid;

            result = skipDataSyncConfig.RecId > 0;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allDataDistributionNodesMarkedWithSkippedEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if all the data distribution nodes of current subjob's source table are set to a CDX entity type that is marked to be skipped.
    /// </summary>
    /// <param name = "_subJobId">The subjob id.</param>
    /// <returns>True if all the data distribution nodes of current subjob's source table are set to a CDX entity type that is marked to be skipped; otherwise, false.</returns>
    internal static boolean allDataDistributionNodesMarkedWithSkippedEntities(RetailConnSubJobId _subJobId)
    {
        RetailConnSchedulerSubjobTable  subJob;
        boolean                         result;

        select subJob where subJob.subJobId == _subJobId;

        if (subJob)
        {
            RetailConnChannelSchema                     channelSchema;
            RetailCdxDataDistributionQuery              dataDistributionQuery;
            RetailConnChannelSchemaSkipDataSyncConfig   skipDataSyncConfig;

            TableId tid = tableName2id(subJob.AXTableName);

            select count(RecId) from dataDistributionQuery
                where dataDistributionQuery.RetailConnChannelSchema   == subJob.RetailConnChannelSchema
                   && dataDistributionQuery.RefTableId                == tid;

            int64 nodeCount = dataDistributionQuery.RecId;

            select count(RecId) from dataDistributionQuery
                where dataDistributionQuery.RetailConnChannelSchema   == subJob.RetailConnChannelSchema
                   && dataDistributionQuery.RefTableId                == tid
                join channelSchema
                    where channelSchema.RecId                         == dataDistributionQuery.RetailConnChannelSchema
                join skipDataSyncConfig
                    where skipDataSyncConfig.EntityType               == dataDistributionQuery.EntityType
                       && skipDataSyncConfig.SchemaName               == channelSchema.SchemaName
                       && skipDataSyncConfig.AllowSkipDataSync        == NoYes::Yes;

            // if no query for the subjob, return false
            result = nodeCount && (dataDistributionQuery.RecId == nodeCount);
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4160447</DeveloperDocumentation>
	<Label>@RET80</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>subJobId</TitleField1>
	<TitleField2>name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>subjobIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<PrimaryIndex>subjobIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailConnSchedulerJobLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailConnSchedulerJobLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailConnSchedulerSubjobFieldList</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailConnSchedulerSubjobFieldList</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>subJobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Actions</Name>
			<Label>@RET14</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>actionCounterInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>noDistributionFilter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompanyId</Name>
			<Label>@RET424</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicateDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toDataAreaIdFieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@RET540</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET541</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>subJobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MarkSendRecords</Name>
			<Label>@RET83</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Replication</Name>
			<Label>@RET542</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicationMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeleteTargetTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsertTargetTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowSkipDataSync</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReplicationCounters</Name>
			<Label>@RET86</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicationCounterFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>replicationCounterInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>updateCounterOnEmptyInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>updateReplicationCounter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TableMapping</Name>
			<Label>@RET4160014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>dataReplicationByPull</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForReferenceOnly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailConnChannelSchema</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChannelTableName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AXTableName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TempDBTableName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FilterDuplicateRecords</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterDuplicatePackageGenerationRecords</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>actionCounterInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnActionCounterInterval</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AXTableName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnTableName</ExtendedDataType>
			<Label>@RET4160010</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChannelTableName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnTableName</ExtendedDataType>
			<Label>@RET4160012</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>dataReplicationByPull</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnDataReplicationByPull</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeleteTargetTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSchedulerSubjobDelete</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>enabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForReferenceOnly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXSubJobForReferenceOnly</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InsertTargetTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSchedulerSubjobInsert</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>noDistributionFilter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnNoDistribututionFilter</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>replicateDataAreaId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnReplicateDataAreaId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>replicationCounterFieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnFieldName</ExtendedDataType>
			<Label>@RET544</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>replicationCounterInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnReplicationCounterInterval</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>replicationMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnReplicationMethod</ExtendedDataType>
			<EnumType>RetailConnNormalByActions</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailConnChannelSchema</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@Commerce:COMM4160009</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>subJobId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSubJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TempDBTableName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnTableName</ExtendedDataType>
			<Label>@RET4160064</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toDataAreaIdFieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnFieldName</ExtendedDataType>
			<Label>@RET422</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>updateCounterOnEmptyInterval</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnUpdateCounterOnEmptyInterval</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>updateReplicationCounter</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnUpdateReplicationCounter</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FilterDuplicatePackageGenerationRecords</Name>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowSkipDataSync</Name>
			<ExtendedDataType>RetailCdxAllowSkipDataSync</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManuallyChanged</Name>
			<ExtendedDataType>RetailCdxManuallyChanged</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>subjobIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>subJobId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>replicationMethodEnabledIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>RetailScheduler</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>replicationMethod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>enabled</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>modifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DataAreadIdFieldName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnLocationDesignTableField</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DataAreadIdFieldName</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnChannelSchema</Name>
					<Field>RetailConnChannelSchema</Field>
					<RelatedField>RetailConnChannelSchema</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChannelTableName</Name>
					<Field>ChannelTableName</Field>
					<RelatedField>locationTableName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toDataAreaIdFieldName</Name>
					<Field>toDataAreaIdFieldName</Field>
					<RelatedField>fieldName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReplicationCounterFieldName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnLocationDesignTableField</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReplicationCounterFieldName</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnChannelSchema</Name>
					<Field>RetailConnChannelSchema</Field>
					<RelatedField>RetailConnChannelSchema</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChannelTableName</Name>
					<Field>ChannelTableName</Field>
					<RelatedField>locationTableName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>replicationCounterFieldName</Name>
					<Field>replicationCounterFieldName</Field>
					<RelatedField>fieldName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailConnChannelSchema</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnChannelSchema</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnChannelSchema</Name>
					<Field>RetailConnChannelSchema</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailConnLocationDesignTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnLocationDesignTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DRMLocationDesignTable_From</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnChannelSchema</Name>
					<Field>RetailConnChannelSchema</Field>
					<RelatedField>RetailConnChannelSchema</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChannelTableName</Name>
					<Field>ChannelTableName</Field>
					<RelatedField>locationTableName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>