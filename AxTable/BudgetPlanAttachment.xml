<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanAttachment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanAttachment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>stageName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the localized name of the <c>BudgetPlanningStageTranslation</c> record from the
    /// <c>BudgetPlanningStage</c> table  referenced.
    /// </summary>
    /// <returns>
    /// The <c>BudgetPlanningStageName</c> value.
    /// </returns>
    public display BudgetPlanningStageName stageName()
    {
        BudgetPlanningStageName budgetPlanningStageName;

        if (hasTableAccess(tableNum(BudgetPlanningStage))
            && hasTableAccess(tableNum(BudgetPlanningStageTranslation)))
        {
            budgetPlanningStageName = BudgetPlanningStageTranslation::getLocalizedName(this.BudgetPlanningStage);
        }

        return budgetPlanningStageName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>BudgetPlanAttachment</c> table; if not,
    /// an error message is displayed.
    /// </summary>
    /// <param name="_budgetPlanAttachmentRecId">
    /// The record ID of the <c>BudgetPlanAttachment</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(BudgetPlanAttachmentRecId _budgetPlanAttachmentRecId)
    {
        boolean ret = true;

        if (!BudgetPlanAttachment::exist(_budgetPlanAttachmentRecId))
        {
            ret = checkFailed(strFmt(BudgetPlanAttachment::txtNotExist(), _budgetPlanAttachmentRecId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>BudgetPlanAttachment</c> table exists.
    /// </summary>
    /// <param  name='_budgetPlanAttachmentRecId'>
    /// The record ID of the <c>BudgetPlanAttachment</c> record.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(BudgetPlanAttachmentRecId _budgetPlanAttachmentRecId)
    {
        return (BudgetPlanAttachment::find(_budgetPlanAttachmentRecId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanAttachment</c> table.
    /// </summary>
    /// <param  name='_budgetPlanAttachmentRecId'>
    /// The record ID of the <c>BudgetPlanAttachment</c> record.
    /// </param>
    /// <param  name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param  name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanAttachment</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanAttachment find(
        BudgetPlanAttachmentRecId   _budgetPlanAttachmentRecId,
        boolean                     _forUpdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanAttachment budgetPlanAttachment;

        if (_budgetPlanAttachmentRecId)
        {
            budgetPlanAttachment.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                 budgetPlanAttachment.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanAttachment
                where budgetPlanAttachment.RecId == _budgetPlanAttachmentRecId;
        }

        return budgetPlanAttachment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByHeaderStageType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanAttachment</c> table.
    /// </summary>
    /// <param name='_budgetPlanHeaderRecId'>
    /// The record ID of the <c>BudgetPlanHeader</c> record.
    /// </param>
    /// <param name='_budgetPlanningStageRecId'>
    /// The record ID of the <c>BudgetPlanningStage</c> record.
    /// </param>
    /// <param name='_type'>
    /// The <c>BudgetPlanTemplateType</c> enumeration value.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param  name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanAttachment</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanAttachment findByHeaderStageType(
        BudgetPlanHeaderRecId      _budgetPlanHeaderRecId,
        BudgetPlanningStageRecId   _budgetPlanningStageRecId,
        BudgetPlanTemplateType     _type,
        boolean                    _forUpdate = false,
        ConcurrencyModel           _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanAttachment budgetPlanAttachment;

        if (_budgetPlanHeaderRecId && _budgetPlanningStageRecId)
        {
            budgetPlanAttachment.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                 budgetPlanAttachment.concurrencyModel(_concurrencyModel);
            }

            select firstonly budgetPlanAttachment
                where budgetPlanAttachment.BudgetPlanHeader     == _budgetPlanHeaderRecId
                   && budgetPlanAttachment.BudgetPlanningStage  == _budgetPlanningStageRecId
                   && budgetPlanAttachment.Type                 == _type;
        }

        return budgetPlanAttachment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstByHeaderType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanAttachment</c> table .
    /// </summary>
    /// <param name='_budgetPlanHeaderRecId'>
    /// The record ID of the <c>BudgetPlanHeader</c> record.
    /// </param>
    /// <param name='_type'>
    /// The <c>BudgetPlanTemplateType</c> enumeration value.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanAttachment</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanAttachment findFirstByHeaderType(
        BudgetPlanHeaderRecId   _budgetPlanHeaderRecId,
        BudgetPlanTemplateType  _type)
    {
        BudgetPlanAttachment budgetPlanAttachment;

        if (_budgetPlanHeaderRecId)
        {
            select firstonly budgetPlanAttachment
                where budgetPlanAttachment.BudgetPlanHeader == _budgetPlanHeaderRecId
                   && budgetPlanAttachment.Type             == _type;
        }

        return budgetPlanAttachment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS70096</DeveloperDocumentation>
	<Label>@GLS70095</Label>
	<SingularLabel>@GLS70102</SingularLabel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Type</TitleField1>
	<TitleField2>Filename</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>BudgetPlanAttachmentIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Budget</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Filename</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS312922</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Filename</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>stageName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanHeader</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningStage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanHeader</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanHeaderRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanningStage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanningStageRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Filename</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetPlanAttachmentFilename</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>BudgetPlanTemplateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UpdateStatus</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>BudgetPlanAttachmentUpdateStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetPlanAttachmentIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetPlanHeader</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetPlanningStage</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>BudgetPlanHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InstanceOfAPlan</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>AttachmentsForThePlan</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanHeader</Name>
					<Field>BudgetPlanHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanningStage</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanningStage</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InstanceOfAStage</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AttachmentsForPlanStage</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanningStage</Name>
					<Field>BudgetPlanningStage</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>