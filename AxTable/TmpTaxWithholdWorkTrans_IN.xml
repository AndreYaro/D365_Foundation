<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpTaxWithholdWorkTrans_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpTaxWithholdWorkTrans_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromTaxUnCommittedWHT</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes the current tmpTaxWithholdWorkTrans record from TaxWithholdUncommitted_IN.
    /// </summary>
    /// <param name="_taxWithholdUncommitted">
    /// TaxUncommitted record to copy data from.
    /// </param>
    /// <remarks>
    /// This method initializes the current tmpTaxWithholdWorkTrans record with TaxWithholdUncommitted_IN.
    /// </remarks>
    public void initFromTaxUnCommittedWHT(TaxWithholdUncommitted_IN   _taxWithholdUncommitted)
    {
        int  taxSign = 1;

        // Do not execute for credit note
        if (_taxWithholdUncommitted.TaxBaseQty >= 0)
        {
            taxSign = TaxWithhold_IN::getTaxSign(_taxWithholdUncommitted.HeadingTableId, _taxWithholdUncommitted.SourceRecId, _taxWithholdUncommitted.TaxWithholdCode);
        }

        this.CompanyAccount          = _taxWithholdUncommitted.Company;
        this.TaxWithholdCode         = _taxWithholdUncommitted.TaxWithholdCode;
        this.HeadingRecId            = _taxWithholdUncommitted.HeadingRecId;
        this.HeadingTableId          = _taxWithholdUncommitted.HeadingTableId;
        this.SourceTableId           = _taxWithholdUncommitted.SourceTableId;
        this.SourceRecId             = _taxWithholdUncommitted.SourceRecId;
        this.TaxWithholdGroup        = _taxWithholdUncommitted.TaxWithholdGroup;
        this.TaxWithholdValue        = _taxWithholdUncommitted.TaxWithholdValue;
        this.AccountNumber           = _taxWithholdUncommitted.AccountNumber;
        this.ExemptTax               = _taxWithholdUncommitted.ExemptTax;
        this.RateOfDeduction         = _taxWithholdUncommitted.RateOfDeduction;
        this.SourceDocumentLine      = _taxWithholdUncommitted.SourceDocumentLine;
        this.CalculationDate         = _taxWithholdUncommitted.CalculationDate;
        this.ExchangeRate            = _taxWithholdUncommitted.ExchangeRate;
        this.ExchRateSecond          = _taxWithholdUncommitted.ExchRateSecond;
        this.Source                  = _taxWithholdUncommitted.Source;

        this.TaxAmount               = _taxWithholdUncommitted.TaxAmount * taxSign;
        this.TaxAmountCur            = _taxWithholdUncommitted.TaxAmountCur * taxSign;
        this.TaxBaseAmount           = _taxWithholdUncommitted.TaxBaseAmount;
        this.TaxBaseAmountCur        = _taxWithholdUncommitted.TaxBaseAmountCur;
        this.SourceBaseAmountCur     = _taxWithholdUncommitted.SourceBaseAmountCur;
        this.SourceRegulateAmountCur = _taxWithholdUncommitted.SourceRegulateAmountCur * taxSign;
        this.SourceTaxAmountCur      = _taxWithholdUncommitted.SourceTaxAmountCur * taxSign;
        this.SourceTaxAmountCurReal  = _taxWithholdUncommitted.SourceTaxAmountCurReal * taxSign;
        this.TaxBaseAmountRaw        = _taxWithholdUncommitted.TaxBaseAmountRaw;
        this.SourceBaseAmountCurRaw  = _taxWithholdUncommitted.SourceBaseAmountCurRaw;
        this.SourceBaseAmountCurCalculated  = _taxWithholdUncommitted.SourceBaseAmountCurCalculated;
        this.SourceBaseAmountCurRegulated   = _taxWithholdUncommitted.SourceBaseAmountCurRegulated;

        this.SourceCurrencyCode      = _taxWithholdUncommitted.SourceCurrencyCOde;
        this.TaxCurrencyCode         = _taxWithholdUncommitted.TaxCurrencyCode;
        this.TaxAutogenerated        = _taxWithholdUncommitted.TaxAutogenerated;
        this.TaxBaseQty              = _taxWithholdUncommitted.TaxBaseQty;
        this.TaxWithholdType         = TaxWithhold_IN::TaxWithholdCodeType2TaxWithholdType(_taxWithholdUncommitted.TaxWithholdType);
        this.IsTaxCalculated         = _taxWithholdUncommitted.IsTaxCalculated;
        this.IsPartOfTurnOver        = _taxWithholdUncommitted.IsPartOfTurnOver;
        this.OverlookThreshold       = _taxWithholdUncommitted.OverlookThreshold;
        this.Reason                  = _taxWithholdUncommitted.Reason;
        this.ThresholdValidFrom      = _taxWithholdUncommitted.ThresholdValidFrom;
        this.ThresholdValidTo        = _taxWithholdUncommitted.ThresholdValidTo;
        this.CalcUncalcPostedTrans   = _taxWithholdUncommitted.CalcUncalcPostedTrans;
        this.TurnoverThreshold       = _taxWithholdUncommitted.TurnoverThreshold;
        this.ConcessionCertificateNumber = _taxWithholdUncommitted.ConcessionCertificateNumber;

        this.Voucher                 = _taxWithholdUncommitted.Voucher;
        this.LedgerDimensionDefaultAccount = _taxWithholdUncommitted.LedgerDimensionDefaultAccount;
        this.InvoiceId               = _taxWithholdUncommitted.InvoiceId;
        // This field is required for threshold validation, grossAmount is stored in this field
        this.AmountOriginMST         = _taxWithholdUncommitted.AmountOriginMST;
        this.AdvancePayment          = _taxWithholdUncommitted.AdvancePayment;

        // Fields related to original cust/vend trans fields selected for adjustment.
        this.TransactionStatus       = _taxWithholdUncommitted.TransactionStatus;
        this.SourceTransDate         = _taxWithholdUncommitted.SourceTransDate;
        this.SourceTransRecId        = _taxWithholdUncommitted.SourceTransRecId;
        this.SourceTransTableId      = _taxWithholdUncommitted.SourceTransTableId;
        this.SourceTransVoucher      = _taxWithholdUncommitted.SourceTransVoucher;
        this.CPOrigInvoiceRefRecId   = _taxWithholdUncommitted.CPOrigInvoiceRefRecId;

        this.TaxApplicability           = _taxWithholdUncommitted.TaxApplicability;
        this.AcknowledgermentNumber     = _taxWithholdUncommitted.AcknowledgermentNumber;
        this.NatureOfRemittance         = _taxWithholdUncommitted.NatureOfRemittance;
        this.CountryRegionToRemittance  = _taxWithholdUncommitted.CountryRegionToRemittance;
        if (FeatureStateProvider::isFeatureEnabled(TaxWithholdCustomerThresholdBasedOnPaymentOnlyFeature::instance()))
        {
            this.IsTaxInterim = _taxWithholdUncommitted.IsTaxInterim;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxWithholdTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes the current tmpTaxWithholdWorkTrans record from TaxWithholdTrans_IN.
    /// </summary>
    /// <param name="_taxWithholdTrans">
    /// TaxWithholdTrans record to copy data from.
    /// </param>
    /// <param name="_factor">
    /// Indicates factor.
    /// </param>
    /// <remarks>
    /// This method initializes the current tmpTaxWithholdWorkTrans record with TaxWithholdTrans_IN.
    /// </remarks>
    public void initFromTaxWithholdTrans(TaxWithholdTrans_IN _taxWithholdTrans, Factor _factor = 1)
    {
        if (_taxWithholdTrans.CustAccount)
        {
            this.AccountNumber = _taxWithholdTrans.CustAccount;
        }
        else if (_taxWithholdTrans.VendAccount)
        {
            this.AccountNumber = _taxWithholdTrans.VendAccount;
        }
        else if (_taxWithholdTrans.AccountId)
        {
            this.AccountNumber = _taxWithholdTrans.AccountId;
        }

        this.AdvancePayment                 = _taxWithholdTrans.AdvancePayment;
        this.AmountOriginMST                = CurrencyExchangeHelper::amount(_taxWithholdTrans.AmountOriginMST * _factor, _taxWithholdTrans.CurrencyCode);
        this.CalculationDate                = _taxWithholdTrans.TransDate;
        this.CompanyAccount                 = _taxWithholdTrans.dataAreaId;
        this.ExemptTax                      = _taxWithholdTrans.Exempt;
        this.LedgerDimensionDefaultAccount  = _taxWithholdTrans.LedgerDimension;
        this.RateOfDeduction                = _taxWithholdTrans.RateOfDeduction;
        this.Source                         = _taxWithholdTrans.Source;
        this.SourceBaseAmountCur            = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdBaseAmountCur * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceBaseAmountCurCalculated  = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdBaseAmountCur * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceBaseAmountCurRaw         = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdBaseAmountCur * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceTaxAmountCur             = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdAmountCur * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceTaxAmountCurReal         = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdAmountCur * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceBaseAmountCurRegulated   = CurrencyExchangeHelper::amount(_taxWithholdTrans.AdjustedBaseAmount * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceRegulateAmountCur        = CurrencyExchangeHelper::amount(_taxWithholdTrans.AdjustedTaxWithholdAmount * _factor, _taxWithholdTrans.CurrencyCode);
        this.TaxAmount                      = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdAmount * _factor, _taxWithholdTrans.CurrencyCode);
        this.TaxBaseAmount                  = CurrencyExchangeHelper::amount(_taxWithholdTrans.WithholdBaseAmount * _factor, _taxWithholdTrans.CurrencyCode);
        this.TaxAmountCur                   = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxTaxWithholdAmount * _factor, _taxWithholdTrans.CurrencyCode);
        this.TaxBaseAmountCur               = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdAmountOrigin * _factor, _taxWithholdTrans.CurrencyCode);
        this.TaxBaseAmountRaw               = CurrencyExchangeHelper::amount(_taxWithholdTrans.TaxWithholdAmountOrigin * _factor, _taxWithholdTrans.CurrencyCode);
        this.SourceCurrencyCOde             = _taxWithholdTrans.CurrencyCode;
        this.TaxCurrencyCode                = _taxWithholdTrans.TaxWithholdCurrency;
        this.TaxWithholdCode                = _taxWithholdTrans.TaxWithholdCode;
        this.TaxWithholdGroup               = _taxWithholdTrans.TaxWithholdGroup;
        this.TaxWithholdType                = TaxWithhold_IN::TaxWithholdCodeType2TaxWithholdType(_taxWithholdTrans.TaxType);
        this.TaxWithholdValue               = _taxWithholdTrans.TaxWithholdValue;
        this.TaxAutogenerated               = NoYes::Yes;
        this.CPOrigInvoiceRefRecId          = _taxWithholdTrans.CPOrigInvoiceRefRecId;

        this.IsTaxCalculated                = _taxWithholdTrans.TaxWithholdCalculated;
        this.IsPartOfTurnOver               = _taxWithholdTrans.IsPartOfTurnOver;
        this.OverlookThreshold              = _taxWithholdTrans.OverlookThreshold;
        this.Reason                         = _taxWithholdTrans.Reason;
        this.CalcUncalcPostedTrans          = _taxWithholdTrans.CalcUncalcPostedTrans;
        this.ThresholdValidFrom             = _taxWithholdTrans.ThresholdValidFrom;
        this.ThresholdValidTo               = _taxWithholdTrans.ThresholdValidTo;
        this.TurnoverThreshold              = _taxWithholdTrans.TurnoverThreshold;
        this.ConcessionCertificateNumber    = _taxWithholdTrans.ConcessionCertificateNumber;

        this.TaxApplicability               = _taxWithholdTrans.TaxApplicability;
        this.AcknowledgermentNumber         = _taxWithholdTrans.AcknowledgermentNumber;
        this.NatureOfRemittance             = _taxWithholdTrans.NatureOfRemittance;
        this.CountryRegionToRemittance      = _taxWithholdTrans.CountryRegionToRemittance;

        if (FeatureStateProvider::isFeatureEnabled(TaxWithholdCustomerThresholdBasedOnPaymentOnlyFeature::instance()))
        {
            this.IsTaxInterim = _taxWithholdTrans.IsTaxInterim;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.CompanyAccount == '')
        {
            this.CompanyAccount = curext();
        }

        if (this.TaxAutogenerated)
        {
            this.SourceRegulateAmountCur = this.SourceTaxAmountCur;
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method loads TaxUncommitted records for the given document, replacing
    ///    any records that may already exist.
    /// </summary>
    /// <param name="_documentTableId">
    ///    TableId of the transaction line tax calculates Taxes for.
    /// </param>
    /// <param name="_documentId">
    ///    The document id of the transaction header.
    /// </param>
    void loadFromTaxUncommitted(RefTableId _documentTableId, RefRecId _documentId)
    {
        TaxWithholdUncommitted_IN   taxWithholdUncommitted;

        delete_from this
        where this.HeadingRecId == _documentId;

        while select * from taxWithholdUncommitted
            order by RecId
            where taxWithholdUncommitted.HeadingRecId     == _documentId &&
                    taxWithholdUncommitted.HeadingTableId == _documentTableId
        {
            this.clear();
            this.initFromTaxUnCommittedWHT(taxWithholdUncommitted);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromTaxWHTUncommittedForDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method loads the <c>TaxWithholdUncommitted_IN</c> records for the given document and replaces any records
    /// that may already exist.
    /// </summary>
    /// <param name="_documentTableId">
    /// The <c>TableId</c> value of the transaction line tax for which taxes are calculated.
    /// </param>
    /// <param name="_documentId">
    /// The document ID of the transaction header.
    /// </param>
    /// <param name="_voucher">
    /// The voucher.
    /// </param>
    /// <param name="_invoiceId">
    /// The invoice ID.
    /// </param>
    void loadFromTaxWHTUncommittedForDocument(RefTableId _documentTableId, RefRecId _documentId, Voucher _voucher, InvoiceId _invoiceId)
    {
        TaxWithholdUncommitted_IN   taxWithholdUncommitted;
        boolean                     useLastTaxRecords = false;

        delete_from this
        where this.HeadingRecId == _documentId &&
              this.Voucher == _voucher &&
              this.InvoiceId == _invoiceId;

        while select * from taxWithholdUncommitted
            where taxWithholdUncommitted.HeadingRecId == _documentId &&
                  taxWithholdUncommitted.HeadingTableId == _documentTableId &&
                  taxWithholdUncommitted.Voucher == _voucher &&
                  taxWithholdUncommitted.InvoiceId == _invoiceId
        {
            this.clear();
            this.initFromTaxUnCommittedWHT(taxWithholdUncommitted);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTCS</Name>
				<Source><![CDATA[
    display boolean showTCS()
    {
        if (this.TaxWithholdCode)
        {
            return TaxWithholdTable::find(this.TaxWithholdCode).isTCSTaxType_IN();
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTDS</Name>
				<Source><![CDATA[
    display boolean showTDS()
    {
        if (this.TaxWithholdCode)
        {
            return TaxWithholdTable::find(this.TaxWithholdCode).isTDSTaxType_IN();
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rateOfDeduction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the rateOfDeduction value for the withholding Tax.
    /// </summary>
    /// <param name="_tmpTaxWithholdWorkTrans">
    /// Buffer of <c> TmpTaxWithholdWorkTrans_IN </c> table.
    /// </param>
    /// <param name="_companyId">
    /// Company Id is used to find the record.
    /// </param>
    /// <param name="_account">
    /// Account number is used to find the record.
    /// </param>
    /// <param name="_sourceTableId">
    /// SourceTableId is used to find the record.
    /// </param>
    /// <param name="_sourceRecId">
    /// SourceRecId is used to find the record.
    /// </param>
    /// <returns>
    /// returns rateOfDeduction value for the withholding Tax.
    /// </returns>
    /// <remarks>
    /// Gets the rateOfDeduction value for the withholding Tax.
    /// </remarks>

    public static Percent rateOfDeduction(
        TmpTaxWithholdWorkTrans_IN  _tmpTaxWithholdWorkTrans,
        CompanyId                   _companyId,
        CustVendAC                  _account,
        RefTableId                  _sourceTableId,
        RefRecId                    _sourceRecId)
    {
        TmpTaxWithholdWorkTrans_IN  tmpTaxWithholdWorkTransLoc;
        Percent                     finalValue;
        SecurityRights              sr;
        SecurityTableRights         stRights;
        AccessRight                 ar;

        sr              = SecurityRights::construct();
        stRights        = sr.tableFieldAccessRights(tableStr(TmpTaxWithholdWorkTrans_IN));

        tmpTaxWithholdWorkTransLoc.setTmpData(_tmpTaxWithholdWorkTrans);

        select RateOfDeduction from tmpTaxWithholdWorkTransLoc
            where tmpTaxWithholdWorkTransLoc.CompanyAccount == _companyId
                && tmpTaxWithholdWorkTransLoc.AccountNumber  == _account
                && tmpTaxWithholdWorkTransLoc.SourceTableId  == _sourceTableId
                && tmpTaxWithholdWorkTransLoc.SourceRecId    == _sourceRecId;

        ar  = stRights.fieldAccessRight(fieldStr(TmpTaxWithholdWorkTrans_IN, RateOfDeduction));
        if (ar != AccessRight::NoAccess)
        {
            finalValue = tmpTaxWithholdWorkTransLoc.RateOfDeduction;
        }

        return finalValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWithholdTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total withholdingTax value for given TmpTaxWithholdWorkTrans_IN, companyId, Account, SourceTableId and SourceRecId.
    /// </summary>
    /// <param name="_tmpTaxWithholdWorkTrans">
    /// Buffer of <c> TmpTaxWithholdWorkTrans_IN </c> table.
    /// </param>
    /// <param name="_companyId">
    /// Company Id is used to find the record.
    /// </param>
    /// <param name="_account">
    /// Account number is used to find the record.
    /// </param>
    /// <param name="_sourceTableId">
    /// The table Id of source.
    /// </param>
    /// <param name="_sourceRecId">
    /// The recId of source.
    /// </param>
    /// <returns>
    /// returns total withholdingTax value for given transaction.
    /// </returns>
    public static TaxAmountCur totalWithholdTaxAmount(
        TmpTaxWithholdWorkTrans_IN  _tmpTaxWithholdWorkTrans,
        CompanyId                   _companyId,
        CustVendAC                  _account,
        RefTableId                  _sourceTableId,
        RefRecId                    _sourceRecId)
    {
        TmpTaxWithholdWorkTrans_IN  tmpTaxWithholdWorkTransLoc;
        TaxAmountCur                finalValue;
        SecurityRights              sr;
        SecurityTableRights         stRights;
        AccessRight                 ar;

        sr              = SecurityRights::construct();
        stRights        = sr.tableFieldAccessRights(tableStr(TmpTaxWithholdWorkTrans_IN));

        tmpTaxWithholdWorkTransLoc.setTmpData(_tmpTaxWithholdWorkTrans);

        select sum(SourceTaxAmountCur) from tmpTaxWithholdWorkTransLoc
            where tmpTaxWithholdWorkTransLoc.CompanyAccount             == _companyId
                && tmpTaxWithholdWorkTransLoc.AccountNumber             == _account
                && tmpTaxWithholdWorkTransLoc.SourceTableId             == _sourceTableId
                && tmpTaxWithholdWorkTransLoc.SourceRecId               == _sourceRecId;

        ar  = stRights.fieldAccessRight(fieldStr(TmpTaxWithholdWorkTrans_IN, SourceTaxAmountCur));
        if (ar != AccessRight::NoAccess)
        {
            finalValue = tmpTaxWithholdWorkTransLoc.SourceTaxAmountCur;
        }

        return finalValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<Label>@GLS5863</Label>
	<TitleField1>TaxWithholdGroup</TitleField1>
	<TitleField2>TaxWithholdCode</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Adjustment</Name>
			<Label>@SYS596</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceBaseAmountCurRegulated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRegulateAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS31242</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CurrentCurrency</Name>
			<Label>@SYS17756</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceBaseAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTaxAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS41042</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Exempt</Name>
			<Label>@SYS55141</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExemptTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AccountNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AcknowledgermentNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdAcknowledgementNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AdvancePayment</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountOriginMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CalculationDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalcUncalcPostedTrans</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CalcUncalcPostedTrans_IN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyAccount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CompanyAccount_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConcessionCertificateNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CertificateNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CountryRegionToRemittance</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdCountryToRemitRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CPOrigInvoiceRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRateSecond</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ExchrateSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExemptTax</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdExempt_IN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HeadingRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HeadingTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPartOfTurnOver</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>IsPartOfTurnOver_IN</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTaxCalculated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimensionDefaultAccount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NatureOfRemittance</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWitholdNatureOfRemittanceRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverlookThreshold</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>IsOverLook_IN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RateOfDeduction</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@SYS40283</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Reason</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdReasonCode_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Source</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurCalculated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurRaw</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurRegulated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<Label>@SYS67702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceCurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Label>@SYS62053</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceRegulateAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<Label>@SYS4009544</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceTaxAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<Label>@SYS81689</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceTaxAmountCurReal</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SourceTransDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceTransRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTransTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceTransVoucher</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@SYS81689</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxApplicability</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxWithholdTaxApplicability_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxAutogenerated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAutoGenerated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Label>@SYS73028</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountRaw</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>TaxWithholdType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxWithholdValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdValue</ExtendedDataType>
			<Label>@SYS15774</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ThresholdValidFrom</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxValidFrom_IN</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ThresholdValidTo</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxValidTo_IN</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransactionStatus</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxWithholdTransactionstatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TurnoverThreshold</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TurnoverThreshold_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTaxInterim</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DocumentHeadingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HeadingTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HeadingRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CompanyAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DocumentLineIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CompanyAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CPOrigInvoiceRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CPOrigCustTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CPOrigCustTrans_CustTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CPOrigCustTrans_TmpTaxWithholdWorkTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CPOrigInvoiceRefRecId</Name>
					<Field>CPOrigInvoiceRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CPOrigVendTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CPOrigVendTrans_VendTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CPOrigVendTrans_TmpTaxWithholdWorkTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CPOrigInvoiceRefRecId</Name>
					<Field>CPOrigInvoiceRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CompanyAccount</Name>
					<SourceEDT>CompanyAccount_IN</SourceEDT>
					<Field>CompanyAccount</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<SourceEDT>CompanyAccount_IN</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimensionDefaultAccount</Name>
					<SourceEDT>LedgerDimensionDefaultAccount</SourceEDT>
					<Field>LedgerDimensionDefaultAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalOnAcc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalOnAcc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalOnAcc_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalOnAcc_1_TmpTaxWithholdTrans_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalRevenue</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalRevenue</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalRevenue_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalRevenue_1_TmpTaxWithholdTrans_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency_SourceCurrency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWithholdWorkTrans_SourceCurrency</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceCurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>SourceCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SourceDocumentLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SourceDocumentLine_TmpTaxWithholdWorkTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentLine</Name>
					<Field>SourceDocumentLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxCurrencyCode_Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxCurrencyCode_TmpTaxWithholdWorkTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>TaxCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdCountryRegionToRemittance_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdCountryRegionToRemittance_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionToRemittance</Name>
					<Field>CountryRegionToRemittance</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxWithholdGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TaxWithholdGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdNatureOfRemittance_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdNatureOfRemittance_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NatureOfRemittance</Name>
					<Field>NatureOfRemittance</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxWithholdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdCode</Name>
					<SourceEDT>TaxWithholdCode</SourceEDT>
					<Field>TaxWithholdCode</Field>
					<RelatedField>TaxWithholdCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceInfoLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceInfoLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalItem</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalItem</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalItem_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem_1_TmpTaxWithholdTrans_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjAdvancedJournalLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjAdvancedJournalLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>