<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepPreTaxDedProcessContext_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetDepPreTaxDedProcessContext_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addSettlementAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds new settlement amount.
    /// </summary>
    /// <param name="_settlementAmount">
    /// The new settlement amount.
    /// </param>
    /// <returns>
    /// true if success; otherwise, return false.
    /// </returns>
    public boolean addSettlementAmount(AssetAmount _settlementAmount)
    {
        AssetAmount     curRemaining = this.editRemainingOverUnderAmount();
        AssetAmount     balanceOfBroughtFwd;
        AssetAmount     newSettlementOnBroughtFwd;

        if (sign(curRemaining) != sign(_settlementAmount))
        {
            return false;
        }

        if (abs(curRemaining) < abs(_settlementAmount))
        {
            return false;
        }

        balanceOfBroughtFwd         = this.editBroughtFwdOverUnderAmount() - this.BroughtForwardOverUnderAmountSettled - this.InclusionByOverUnderDepreciation;
        newSettlementOnBroughtFwd   = sign(_settlementAmount) * min(abs(balanceOfBroughtFwd), abs(_settlementAmount));

        if (newSettlementOnBroughtFwd != 0)
        {
            this.BroughtForwardOverUnderAmountSettled += newSettlementOnBroughtFwd;
        }

        if (newSettlementOnBroughtFwd != _settlementAmount)
        {
            this.CurrentTermOverUnderAmountSettled += _settlementAmount - newSettlementOnBroughtFwd;
        }

        // The settlement between over and under parts will increase the pre tax deduction of over part.
        if (_settlementAmount > 0)
        {
            this.CurrentTermPreTaxDedAmount += _settlementAmount;
        }

        return true;
    }
]]></Source>
			</Method>
			<Method>
				<Name>assetTableInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <C>AssetTableInterval</C> for current context.
    /// </summary>
    /// <returns>
    /// An instance of <C>AssetTableInterval</C>.
    /// </returns>
    public AssetTableInterval assetTableInterval()
    {
        AssetTableInterval              ret;
        AssetBook                       assetBook;
        AssetDepPreTaxDedProcess_JP     assetDepPreTaxDedProcess;

        assetBook                   = AssetBook::find(this.AssetId, this.BookId);
        assetDepPreTaxDedProcess    = this.AssetDepPreTaxDedProcess_JP();

        if (this.DepType == AssetDepType_JP::OrdinaryDepreciation)
        {
            ret = assetBook.AssetDepBookMap_JP::assetTableInterval(assetDepPreTaxDedProcess.ProcessDate);
        }
        else
        {
            ret = assetBook.AssetDepBookMap_JP::assetTableInterval(assetDepPreTaxDedProcess.ProcessDate, false, true);
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>displayCarryFwdHappened</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays whether carry forward happened.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A <C>AssetDepPreTaxDedProcessContext_JP</C> reocrd.
    /// </param>
    /// <returns>
    /// Whether carry forward happened.
    /// </returns>
    display public AssetDepPreTaxDedCarryFwdHappened_JP displayCarryFwdHappened(AssetDepPreTaxDedProcessContext_JP _assetDepPreTaxDedProcessContext)
    {
        AssetDepPreTaxDedCarryFwdHappened_JP    ret;

        // Note:
        //   1. this method only consider the amount the will be carry forward based on rules.
        //   2. the manual adjustment part is not based on rules, no matter how rule its, it will be at least carry forward to next year. So this part
        //      is not considered here.
        //   3. The real carry forward rule that been used is saved in last one log in AssetDepPreTaxDedProcessLog_JP table for this context. The previous
        //      ones may not valid due to amount changed.
        if (_assetDepPreTaxDedProcessContext.editCarryFwdOverUnderAmount() - _assetDepPreTaxDedProcessContext.CarryForwardOverUnderAmountManualAdj != 0)
        {
            ret = NoYes::Yes;
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>displayCurrentTermOverAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the current term over depreciation amount.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <returns>
    /// The current term over depreciation amount.
    /// </returns>
    display public AssetDepPreTaxDedCurrentTermOverAmt_JP displayCurrentTermOverAmount(AssetDepPreTaxDedProcessContext_JP _assetDepPreTaxDedProcessContext)
    {
        return max(0, _assetDepPreTaxDedProcessContext.CurrentTermOverUnderAmount);
    }
]]></Source>
			</Method>
			<Method>
				<Name>displayCurrentTermUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the current term under depreciation amount.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <returns>
    /// The current term under depreciation amount.
    /// </returns>
    display public AssetDepPreTaxDedCurrentTermUnderAmt_JP displayCurrentTermUnderAmount(AssetDepPreTaxDedProcessContext_JP _assetDepPreTaxDedProcessContext)
    {
        return max(0, -1 * _assetDepPreTaxDedProcessContext.CurrentTermOverUnderAmount);
    }
]]></Source>
			</Method>
			<Method>
				<Name>displayOffsetHappened</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays whether offset happened.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A <C>AssetDepPreTaxDedProcessContext_JP</C> reocrd.
    /// </param>
    /// <returns>
    /// Whether offset happened.
    /// </returns>
    display public AssetDepPreTaxDedOffsetHappened_JP displayOffsetHappened(AssetDepPreTaxDedProcessContext_JP _assetDepPreTaxDedProcessContext)
    {
        AssetDepPreTaxDedOffsetHappened_JP      ret;
        AssetDepPreTaxDedProcessLog_JP          assetDepPreTaxDedProcessLog;
        AssetAdvancedRule_JP                    assetAdvancedRule;

        if (_assetDepPreTaxDedProcessContext.AssetId
            && _assetDepPreTaxDedProcessContext.BookId
            && _assetDepPreTaxDedProcessContext.AssetDepPreTaxDedProcess_JP)
        {
            select firstOnly RecId
                from assetDepPreTaxDedProcessLog
                    where assetDepPreTaxDedProcessLog.AssetDepPreTaxDedProcessContext_JP == _assetDepPreTaxDedProcessContext.RecId
                exists join assetAdvancedRule
                    where assetAdvancedRule.RecId           == assetDepPreTaxDedProcessLog.AssetAdvancedRule_JP
                        && assetAdvancedRule.TypeEnumName   == enumStr(AssetAdvancedRuleType_PreTaxDeduction_JP)
                        && assetAdvancedRule.TypeEnumValue  == AssetAdvancedRuleType_PreTaxDeduction_JP::DepOverDownSettlement;

            if (assetDepPreTaxDedProcessLog.RecId)
            {
                ret = NoYes::Yes;
            }
        }

        return ret;
    }
]]></Source>
			</Method>
			<Method>
				<Name>editBroughtFwdOverAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the brought forward over depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The brought forward over depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedBroughtFwdOverAmt_JP editBroughtFwdOverAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedBroughtFwdOverAmt_JP   _value)
    {
        return max(0, _assetDepPreTaxDedProcessContext.editBroughtFwdOverUnderAmount(_set, _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>editBroughtFwdOverUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the brought forward over/under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The brought forward over/under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedBroughtFwdOverAmt_JP editBroughtFwdOverUnderAmount(
        boolean                                 _set    = false,
        AssetDepPreTaxDedRemainingOverAmt_JP    _value  = 0)
    {
        if (_set)
        {
            if (this.BroughtForwardOverUnderAmount + this.BroughtForwardOverUnderAmountManualAdj != _value)
            {
                this.BroughtForwardOverUnderAmountManualAdj = _value - this.BroughtForwardOverUnderAmount;
                this.TotalRemainingOverUnderAmountManualAdj = 0;

                // Recalculate for carry forward
                this.recalculateCarryForward();
            }
        }

        return (this.BroughtForwardOverUnderAmount + this.BroughtForwardOverUnderAmountManualAdj);
    }
]]></Source>
			</Method>
			<Method>
				<Name>editBroughtFwdUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the brought forward under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The brought forward under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedBroughtFwdUnderAmt_JP editBroughtFwdUnderAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedBroughtFwdUnderAmt_JP  _value)
    {
        return max(0, -1 * _assetDepPreTaxDedProcessContext.editBroughtFwdOverUnderAmount(_set, -1 * _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>editCarryFwdOverAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the carry forward over depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The carry forward over depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedCarryFwdOverAmt_JP editCarryFwdOverAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedCarryFwdOverAmt_JP     _value)
    {
        return max(0, _assetDepPreTaxDedProcessContext.editCarryFwdOverUnderAmount(_set, _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>editCarryFwdOverUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the carry forward over/under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The carry forward over/under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedCarryFwdOverAmt_JP editCarryFwdOverUnderAmount(
        boolean                                 _set    = false,
        AssetDepPreTaxDedRemainingOverAmt_JP    _value  = 0)
    {
        AssetAmount     carryFwdWithoutAdj;

        carryFwdWithoutAdj = this.editRemainingOverUnderAmount() + this.CarryForwardOverUnderAmountRuleAdj;

        if (_set)
        {
            this.CarryForwardOverUnderAmountManualAdj = _value - carryFwdWithoutAdj;
        }

        return (carryFwdWithoutAdj + this.CarryForwardOverUnderAmountManualAdj);
    }
]]></Source>
			</Method>
			<Method>
				<Name>editCarryFwdUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the carry forward under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The carry forward under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedCarryFwdUnderAmt_JP editCarryFwdUnderAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedCarryFwdUnderAmt_JP    _value)
    {
        return max(0, -1 * _assetDepPreTaxDedProcessContext.editCarryFwdOverUnderAmount(_set, -1 * _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>editRemainingOverAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the current term remaining over depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The current term remaining over depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedRemainingOverAmt_JP editRemainingOverAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedRemainingOverAmt_JP    _value)
    {
        return max(0, _assetDepPreTaxDedProcessContext.editRemainingOverUnderAmount(_set, _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>editRemainingOverUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the current term remaining over/under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The current term remaining over/under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedRemainingOverAmt_JP editRemainingOverUnderAmount(
        boolean                                 _set    = false,
        AssetDepPreTaxDedRemainingOverAmt_JP    _value  = 0)
    {
        AssetAmount                     totalRemainingWithoutAdj;

        totalRemainingWithoutAdj = this.editBroughtFwdOverUnderAmount()
            - this.BroughtForwardOverUnderAmountSettled
            + this.CurrentTermOverUnderAmount
            - this.CurrentTermOverUnderAmountSettled;

        if (_set)
        {
            if (totalRemainingWithoutAdj + this.TotalRemainingOverUnderAmountManualAdj != _value)
            {
                this.TotalRemainingOverUnderAmountManualAdj = _value - totalRemainingWithoutAdj;

                // Recalculate for carry forward
                this.recalculateCarryForward();
            }
        }

        return (totalRemainingWithoutAdj + this.TotalRemainingOverUnderAmountManualAdj);
    }
]]></Source>
			</Method>
			<Method>
				<Name>editRemainingUnderAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the current term remaining under depreciation amount.
    /// </summary>
    /// <param name="_set">
    /// A boolean to determine if the value is being defined or not.
    /// </param>
    /// <param name="_assetDepPreTaxDedProcessContext">
    /// A record of <C>AssetDepPreTaxDedProcessContext_JP</C>.
    /// </param>
    /// <param name="_value">
    /// The new value.
    /// </param>
    /// <returns>
    /// The current term remaining under depreciation amount.
    /// </returns>
    edit public AssetDepPreTaxDedRemainingUnderAmt_JP editRemainingUnderAmount(
        boolean                                 _set,
        AssetDepPreTaxDedProcessContext_JP      _assetDepPreTaxDedProcessContext,
        AssetDepPreTaxDedRemainingUnderAmt_JP    _value)
    {
        return max(0, -1 * _assetDepPreTaxDedProcessContext.editRemainingOverUnderAmount(_set, -1 * _value));
    }
]]></Source>
			</Method>
			<Method>
				<Name>recalculateCarryForward</Name>
				<Source><![CDATA[
    /// <summary>
    /// Recalculates the carry forward amount.
    /// </summary>
    /// <remarks>
    /// The recalculation may not only on current context, but also the other context for same asset value model.
    /// </remarks>
    public void recalculateCarryForward()
    {
        AssetDepPreTaxDedProcessor_JP           assetDepPreTaxDedProcessor;
        AssetDepPreTaxDedProcessContext_JP      otherContext;
        AssetDepPreTaxDedProcessContext_JP      contextOrdinary;
        AssetDepPreTaxDedProcessContext_JP      contextExtra;
        RecVersion                              oldRecVersion;
        boolean                                 needsToRefreshUI;

        ttsBegin;

        // Find the other context for same asset value model
        if (this.RecId)
        {
            select firstOnly forUpdate otherContext
                where otherContext.AssetDepPreTaxDedProcess_JP  == this.AssetDepPreTaxDedProcess_JP
                    && otherContext.AssetId                     == this.AssetId
                    && otherContext.BookId                      == this.BookId
                    && otherContext.RecId                       != this.RecId;

            if (otherContext)
            {
                if (this.DepType == AssetDepType_JP::OrdinaryDepreciation)
                {
                    contextOrdinary = this;
                    contextExtra    = otherContext;
                }
                else
                {
                    contextOrdinary = otherContext;
                    contextExtra    = this;
                }
            }
            else
            {
                contextOrdinary = this;
            }
        }

        Debug::assert(contextOrdinary.RecId != 0);

        // Init the processor
        assetDepPreTaxDedProcessor = AssetDepPreTaxDedProcessor_JP::construct(this.AssetDepPreTaxDedProcess_JP());

        // Apply carry forward rule. For the other context, no need to apply the carry forward rule again as this part will not change.
        assetDepPreTaxDedProcessor.calcCarryForwardForContext(this);

        // Apply additional calculation logic cross context for same asset value model.
        assetDepPreTaxDedProcessor.calcCarryForwardCrossContext(contextOrdinary, contextExtra);

        // Save changes and refresh UI is cross context update happened.
        // Note: if "otherContext" does not exists, it means "this" is a "Ordinary depreciation" context,
        //       and there is no special depreciation for this asset value model. Then all the update the are just on current context.
        //       if "otherContext" exists, it is possible that not only the current context is updated, then need to refresh the UI for all records.
        if (otherContext)
        {
            oldRecVersion = otherContext.recVersion;
            otherContext.update();

            if (otherContext.recVersion != oldRecVersion)
            {
                // The other context is really updated, also save the current context, and try to refresh UI.
                this.update();

                needsToRefreshUI = true;
            }
        }

        ttsCommit;

        if (needsToRefreshUI)
        {
            // Refresh UI
            if (this.isFormDataSource())
            {
                this.dataSource().research(true);
            }
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>findByKeys</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <C>AssetDepPreTaxDedProcessContext_JP</C> record based on specified primary keys.
    /// </summary>
    /// <param name="_assetDepPreTaxDedProcessRecId">
    /// The record ID of <C>AssetDepPreTaxDedProcess_JP</C>.
    /// </param>
    /// <param name="_assetId">
    /// The asset ID.
    /// </param>
    /// <param name="_bookId">
    /// The value model ID.
    /// </param>
    /// <param name="_depType">
    /// The depreciation type.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A <C>AssetDepPreTaxDedProcessContext_JP</C> record
    /// </returns>
    public static AssetDepPreTaxDedProcessContext_JP findByKeys(
        RefRecId            _assetDepPreTaxDedProcessRecId,
        AssetId             _assetId,
        AssetBookId         _bookId,
        AssetDepType_JP     _depType,
        boolean             _forupdate              = false,
        ConcurrencyModel    _concurrencyModel       = ConcurrencyModel::Auto)
    {
        AssetDepPreTaxDedProcessContext_JP  assetDepPreTaxDedProcessContext;

        if (_assetDepPreTaxDedProcessRecId && _assetId && _bookId)
        {
            assetDepPreTaxDedProcessContext.selectForUpdate(_forupdate);
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                assetDepPreTaxDedProcessContext.concurrencyModel(_concurrencyModel);
            }

            select firstonly assetDepPreTaxDedProcessContext
                where assetDepPreTaxDedProcessContext.AssetDepPreTaxDedProcess_JP   == _assetDepPreTaxDedProcessRecId
                    && assetDepPreTaxDedProcessContext.AssetId                      == _assetId
                    && assetDepPreTaxDedProcessContext.BookId                       == _bookId
                    && assetDepPreTaxDedProcessContext.DepType                      == _depType;
        }

        return assetDepPreTaxDedProcessContext;
    }
]]></Source>
			</Method>
			<Method>
				<Name>AssetDepPreTaxDedProcess_JP</Name>
				<Source><![CDATA[
public AssetDepPreTaxDedProcess_JP AssetDepPreTaxDedProcess_JP(AssetDepPreTaxDedProcess_JP _relatedTable = null)
    {
        if (prmIsDefault(_relatedTable))
        {
            return this.setLink('AssetDepPreTaxDedProcess_JP');
        }
        else
        {
            return this.setLink('AssetDepPreTaxDedProcess_JP', _relatedTable);
        }
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4881438</DeveloperDocumentation>
	<Label>@SYP4881519</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>DepType</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermPreTaxDedAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS35893</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermAllowableLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermCurrentLayerPostedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCurrentTermOverAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCurrentTermUnderAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editBroughtFwdOverAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editBroughtFwdUnderAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayOffsetHappened</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editRemainingOverAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editRemainingUnderAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReserveAllocationAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCarryFwdHappened</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editCarryFwdOverAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editCarryFwdUnderAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermPreTaxDedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermTaxLayerPostedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentTermTaxLayerNewAmountToPost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetDepPreTaxDedProcess_JP</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BookId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BroughtForwardOverUnderAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BroughtForwardOverUnderAmountManualAdj</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BroughtForwardOverUnderAmountSettled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CarryForwardOverUnderAmountManualAdj</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CarryForwardOverUnderAmountRuleAdj</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermAllowableLimit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedAllowableLimit_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermCurrentLayerPostedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedCurTermCurPostedAmt_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermOverUnderAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermOverUnderAmountSettled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermPreTaxDedAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedPreTaxDedAmt_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermTaxLayerNewAmountToPost</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedCurTermTaxPostedAmt_JP</ExtendedDataType>
			<Label>@SYP4881520</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentTermTaxLayerPostedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedCurTermTaxPostedAmt_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DepType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AssetDepType_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InclusionByOverUnderDepreciation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReserveAllocationAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedReserveAllocationAmt_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalRemainingOverUnderAmountManualAdj</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepPreTaxDedOverUnderDepAmount_JP</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ContextIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetDepPreTaxDedProcess_JP</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BookId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DepType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<SourceEDT>AssetBookId</SourceEDT>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BookIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetDepPreTaxDedProcess_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AssetDepPreTaxDedProcess_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetDepPreTaxDedProcess_JP</Name>
					<Field>AssetDepPreTaxDedProcess_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>AssetId</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>