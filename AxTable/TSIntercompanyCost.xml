<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TSIntercompanyCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TSIntercompanyCost extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called on insert of the <c>TSIntercompanyCost</c> record.
    /// </summary>
    /// <remarks>
    /// This is overriden in order to set the source document header record id of the <c>TSIntercompanyCost</c> record
    /// </remarks>
    public void insert()
    {
        SourceDocumentProcessorFacade::submitSourceDocumentImplementation(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source document header type name.
    /// </summary>
    /// <returns>
    /// Always returns the <c>SourceDocument_TimesheetsIntercompany</c> enumeration value.
    /// </returns>
    public EnumName parmSourceDocHeaderTypeEnumName()
    {
        return enumId2Name(enumNum(SourceDocument_TimesheetsIntercompany));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source document header type enumeration value.
    /// </summary>
    /// <returns>
    /// Always returns the <c>SourceDocument_TimesheetsIntercompany::IntercompanyCost</c> enumeration value.
    /// </returns>
    public SourceDocumentTypeEnumValue parmSourceDocHeaderTypeEnumValue()
    {
        return SourceDocument_TimesheetsIntercompany::IntercompanyCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>TSIntercompanyCost</c> table.
    /// </summary>
    /// <param name="_tsIntercompanyCost">
    /// The <c>TSIntercompanyCost</c> record ID.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TSIntercompanyCost</c> table.
    /// </returns>
    public static TSIntercompanyCost find(
        RecId               _tsIntercompanyCost,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TSIntercompanyCost tsIntercompanyCost;

        tsIntercompanyCost.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            tsIntercompanyCost.concurrencyModel(_concurrencyModel);
        }

        select firstonly
                tsIntercompanyCost
            where
                tsIntercompanyCost.RecId == _tsIntercompanyCost;

        return tsIntercompanyCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySourceDocumentHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>TSIntercompanyCost</c> table by using the specified
    /// <c>SourceDocumentHeader</c> record.
    /// </summary>
    /// <param name="_sourceDocumentHeader">
    /// A <c>SourceDocumentHeader</c> record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>TSIntercompanyCost</c> record.
    /// </returns>
    public static TSIntercompanyCost findBySourceDocumentHeader(RefRecId _sourceDocumentHeader, boolean _forUpdate=false)
    {
        TSIntercompanyCost tsIntercompanyCost;

        if (_sourceDocumentHeader)
        {
            tsIntercompanyCost.selectForUpdate(_forUpdate);
            select firstonly tsIntercompanyCost
                where tsIntercompanyCost.SourceDocumentHeader == _sourceDocumentHeader;
        }

        return tsIntercompanyCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTimesheet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TSIntercompanyCost</c> table using an existing timesheet.
    /// </summary>
    /// <param name="_tsTimesheetTable">
    /// The timesheet record ID.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>TSIntercompanyCost</c> table.
    /// </returns>
    public static TSIntercompanyCost findByTimesheet(
        RefRecId            _tsTimesheetTable,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TSIntercompanyCost tsIntercompanyCost;

        tsIntercompanyCost.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            tsIntercompanyCost.concurrencyModel(_concurrencyModel);
        }

        select firstonly
                tsIntercompanyCost
            where
                tsIntercompanyCost.tsTimesheetTable == _tsTimesheetTable;

        return tsIntercompanyCost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@FPK270087</DeveloperDocumentation>
	<Label>@FPK270070</Label>
	<SingularLabel>@FPK270090</SingularLabel>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>TSTimesheetTable</TitleField1>
	<TitleField2>SourceDocumentHeader</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Timesheet</Name>
			<Label>@SYS716</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TSTimesheetTable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceDocumentHeaderIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TSTimesheetTableIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TSTimesheetTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SourceDocumentHeaderImplementation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceDocumentHeader</MapField>
					<MapFieldTo>SourceDocumentHeader</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentHeader</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>SourceDocumentHeader_TSIntercompanyCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentHeader</Name>
					<Field>SourceDocumentHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TSTimesheetTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TSTimesheetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TSTimesheetTable</Name>
					<Field>TSTimesheetTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>