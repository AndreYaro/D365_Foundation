<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HRPLimitDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HRPLimitDocument extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the specified record in the <c>HRPLimitDocument</c> table; if not, an error message
    /// is displayed.
    /// </summary>
    /// <param name="_signingLimitDocument">
    /// The reference record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _signingLimitDocument)
    {
        if (!HRPLimitDocument::exist(_signingLimitDocument))
        {
            return checkFailed(HRPLimitDocument::txtNotExist());
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>HRPLimitDocument</c> table exists.
    /// </summary>
    /// <param name="_signingLimitDocument">
    /// The reference record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _signingLimitDocument)
    {
        return HRPLimitDocument::find(_signingLimitDocument).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>HRPLimitDocument</c> record with the specific recid.
    /// </summary>
    /// <param name="_signingLimitDocument">
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An instance of the <c>Boolean</c> data type.
    /// </param>
    /// <returns>
    /// An instance of the <c>HRPLimitDocument</c> data type.
    /// </returns>
    public static HRPLimitDocument find(RefRecId _signingLimitDocument, boolean _forUpdate = false)
    {
        HRPLimitDocument signingLimitDocument;

        if (_signingLimitDocument)
        {
            signingLimitDocument.selectForUpdate(_forUpdate);
            select firstonly signingLimitDocument
                where signingLimitDocument.RecId == _signingLimitDocument;
        }
        return signingLimitDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads data from the <c>HRPLimitDocument</c> table for the specified document record ID.
    /// </summary>
    /// <param name="_limitDocumentRecId">
    /// The record ID of the <c>HRPLimitDocument</c> table.
    /// </param>
    /// <returns>
    /// The <c>HRPLimitDocumentType</c> enumeration value.
    /// </returns>
    public static HRPLimitDocumentType getDocumentType(RefRecId _limitDocumentRecId)
    {
        HRPLimitDocument limitDocument = HRPlimitDocument::find(_limitDocumentRecId);

        return limitDocument.DocumentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLimitDocumentRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads data from the <c>HRPLimitDocument</c> table for the specified document name.
    /// </summary>
    /// <param name="_documentType">
    /// The <c>HRPLimitDocumentType</c> enumeration value.
    /// </param>
    /// <returns>
    /// The record ID of the <c>HRPLimitDocument</c> table.
    /// </returns>
    public static  RefRecId getLimitDocumentRecId(HRPLimitDocumentType _documentType)
    {
        HRPLimitDocument document;

        select firstonly RecId from document where document.DocumentType == _documentType;
        return document.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentRelationRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads data from the <c>HRPLimitDocument</c> table for the specified document name.
    /// </summary>
    /// <param name="_sourceDocumentRelationType">
    /// The <c>SourceDocumentRelationType</c> enumeration value.
    /// </param>
    /// <returns>
    /// The record ID of the <c>HRPLimitDocument</c> table.
    /// </returns>
    public static  RefRecId getSourceDocumentRelationRecId(SourceDocumentRelationType _sourceDocumentRelationType)
    {
        HRPLimitDocument document;

        select firstonly RecId from document where document.SourceDocumentRelationType == _sourceDocumentRelationType;
        return document.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentRelationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads data from the <c>HRPLimitDocument</c> table for the specified document type.
    /// </summary>
    /// <param name="_documentType">
    /// The <c>HRPLimitDocumentType</c> enumeration value.
    /// </param>
    /// <returns>
    /// A <c>SourceDocumentRelationType</c> enumeration value.
    /// </returns>
    public static SourceDocumentRelationType getSourceDocumentRelationType(HRPLimitDocumentType _documentType)
    {
        HRPLimitDocument limitDocument;

        select firstonly SourceDocumentRelationType from limitDocument
            where limitDocument.DocumentType  == _documentType;

        return limitDocument.SourceDocumentRelationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIfNotExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>HRPLimitDocument</c> table if the table does not have any records with
    /// the specified properties.
    /// </summary>
    /// <param name="_documentType">
    /// A value of the <c>HRPLimitDocumentType</c> enumeration type.
    /// </param>
    /// <param name="_sourceDocumentRelationType">
    /// A value of the <c>SourceDocumentRelationType</c> enumeration type.
    /// </param>
    public static void insertIfNotExists(HRPLimitDocumentType _documentType, SourceDocumentRelationType _sourceDocumentRelationType)
    {
        HRPLimitDocument hrpLimitDocument;

        select firstOnly RecId, DocumentType from hrpLimitDocument where hrpLimitDocument.DocumentType == _documentType;

        if (!hrpLimitDocument)
        {
            hrpLimitDocument.DocumentType = _documentType;
            hrpLimitDocument.SourceDocumentRelationType = _sourceDocumentRelationType;
            hrpLimitDocument.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static str txtNotExist()
    {
        return "@SYS302230";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS317821</DeveloperDocumentation>
	<Label>@SYS302149</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>DocumentType</TitleField1>
	<TitleField2>SourceDocumentRelationType</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>HumanResource</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>HRPApprovedLimit</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>HRPApprovedLimit</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>HRPDefaultLimitDetail</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>HRPDefaultLimitDetail</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>HRPLimitAgreementDetail</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>HRPLimitAgreementDetail</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>HRPLimitRequest</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>HRPLimitRequest</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentType</Name>
			<Label>@SYS317773</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS318403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>HRPLimitDocumentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SourceDocumentRelationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SourceDocumentRelationType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>documentType</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>