<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorCatalogImportEventLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatVendorCatalogImportEventLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatVendorCatalogImportEventLog</c> table.
    /// </summary>
    /// <param name="_catalogMaintenanceRequest">
    ///    An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param name="_catalogProcessingState">
    ///    An instance of the <c>CatVendorCatalogProcessingState</c> data type.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CatVendorCatalogImportEventLog</c> table.
    /// </returns>
    public static CatVendorCatalogImportEventLog find(RefRecId             _catalogMaintenanceRequest,
                                 CatVendorCatalogProcessingState    _catalogProcessingState,
                                 boolean                            _forUpdate          = false,
                                 ConcurrencyModel                   _concurrencyModel   = ConcurrencyModel::Auto)
    {
        CatVendorCatalogImportEventLog  catVendorCatalogImportEventLog;

        if (_catalogMaintenanceRequest && _catalogProcessingState)
        {
            if (_forUpdate)
            {
                catVendorCatalogImportEventLog.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    catVendorCatalogImportEventLog.concurrencyModel(_concurrencyModel);
                }
            }

            catVendorCatalogImportEventLog.selectLocked(_forUpdate);

            select firstonly catVendorCatalogImportEventLog where catVendorCatalogImportEventLog.CatVendorCatalogMaintenanceRequest == _catalogMaintenanceRequest && catVendorCatalogImportEventLog.ProcessingState == _catalogProcessingState;
        }

        return catVendorCatalogImportEventLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logEvent</Name>
				<Source><![CDATA[
    public static void logEvent(RefRecId catVendorCatalogMaintenanceRequest,
                                CatImportProcessingMessageType catImportProcessingMessageType,
                                CatVendorCatalogProcessingState catVendorCatalogProcessingState,
                                CatVendorEventLogDescription message)
    {
        CatVendorCatalogImportEventLog catVendorCatalogImportEventLog;

        catVendorCatalogImportEventLog.CatVendorCatalogMaintenanceRequest = catVendorCatalogMaintenanceRequest;
        catVendorCatalogImportEventLog.MessageType = catImportProcessingMessageType;
        catVendorCatalogImportEventLog.ProcessingState = catVendorCatalogProcessingState;
        catVendorCatalogImportEventLog.Message = message;

        catVendorCatalogImportEventLog.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEventLog</Name>
				<Source><![CDATA[
    public static void updateEventLog(RefRecId             _catalogMaintenanceRequest,
                                 CatVendorCatalogProcessingState    _catalogProcessingState,
                                 CatVendorCatalogProcessingState    _updateCatalogProcessingState)
    {
        CatVendorCatalogImportEventLog catVendorCatalogImportEventLog;
        catVendorCatalogImportEventLog = CatVendorCatalogImportEventLog::find(_catalogMaintenanceRequest,_catalogProcessingState,true);
        if (catVendorCatalogImportEventLog.RecId)
        {
            ttsbegin;
            catVendorCatalogImportEventLog.ProcessingState = _updateCatalogProcessingState;
            catVendorCatalogImportEventLog.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendCatalogImport</ConfigurationKey>
	<DeveloperDocumentation>@SYS324399</DeveloperDocumentation>
	<Label>@SYS191116</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CatVendorCatalogMaintenanceRequest</TitleField1>
	<TitleField2>ProcessingState</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CatVendorCatalogMaintenanceRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessingState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EventDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MessageType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CatVendorCatalogMaintenanceRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcessingState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Message</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EventDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MessageType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CatVendorCatalogMaintenanceRequest</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EventDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatVendorDateTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Message</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatVendorEventLogDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MessageType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CatImportProcessingMessageType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProcessingState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CatVendorCatalogProcessingState</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatVendorCatalogMaintenanceRequest</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatVendorCatalogMaintenanceRequest</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatVendorCatalogMaintenanceRequest</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CatVendorCatalogMaintenanceRequest_CatVendorCatalogImportEventLog</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CatVendorCatalogMaintenanceRequest</Name>
					<Field>CatVendorCatalogMaintenanceRequest</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>