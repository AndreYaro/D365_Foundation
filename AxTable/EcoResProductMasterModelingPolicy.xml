<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductMasterModelingPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductMasterModelingPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isAutomaticVariantGenerationEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether product variants should be created whenever a new product dimension is entered
    ///    for a product master.
    /// </summary>
    /// <returns>
    ///    true if product variants should be created whenever a new product dimension is entered for a
    ///    product master; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The <c>IsAutomaticVariantGenerationEnabled</c> field is only applicable for dimension-based
    ///    modeling policies.
    /// </remarks>
    public EcoResModelingAutoCreateVariants isAutomaticVariantGenerationEnabled()
    {
        if (!this.IsVariantGenerationEnabled)
        {
            return false;
        }
        return EcoResProductMaster::find(this.ProductMaster).VariantConfigurationTechnology == EcoResVariantConfigurationTechnologyType::PredefinedVariants;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReuseExistingConfigurationEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether identical configurations with different configuration specifications are allowed
    /// for the current modeling policy.
    /// </summary>
    /// <returns>
    /// true if identical configurations with different configuration specifications are allowed;
    /// otherwise, false.
    /// </returns>
    /// <remarks>
    /// This <c>IsReuseExistingConfigurationEnabled</c> field is only applicable for dimension-based
    /// modeling policies.
    /// </remarks>
    public EcoResModelingIdentical isReuseExistingConfigurationEnabled()
    {
        if (!this.IsReuseConfigurationEnabled)
        {
            return false;
        }
        return EcoResProductMaster::find(this.ProductMaster).VariantConfigurationTechnology == EcoResVariantConfigurationTechnologyType::DimensionBased;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean result = super();

        if (result)
        {
            // identical configuration flag can be set, if the configuraton technology is 'dimension based'
            if (   this.IsReuseConfigurationEnabled
                && !this.isReuseExistingConfigurationEnabled())
            {
                result = checkFailed(strFmt("@SYS4000205","@SYS191393"));
            }

            // automatic variant generation flag can be set, if the configuration technology is 'predefined variant'.
            if (this.IsVariantGenerationEnabled
                && !this.isAutomaticVariantGenerationEnabled())
            {
                result = checkFailed(strFmt("@SYS4000206","@SYS301193"));
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProductMaster</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResProductMasterModelingPolicy</c> table.
    /// </summary>
    /// <param name="_productMaster">
    ///    The ID of the <c>EcoResProductMaster</c> record to use as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResProductModelingPolicy</c> table; otherwise, an empty record.
    /// </returns>
    static EcoResProductMasterModelingPolicy findByProductMaster(RefRecId _productMaster, boolean _forUpdate = false)
    {
        EcoResProductMasterModelingPolicy ecoResProductMasterModelingPolicy;

        ecoResProductMasterModelingPolicy.selectForUpdate(_forUpdate);

        if (_productMaster)
        {
            select firstonly ecoResProductMasterModelingPolicy
                where ecoResProductMasterModelingPolicy.ProductMaster == _productMaster;
        }
        return ecoResProductMasterModelingPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS325334</DeveloperDocumentation>
	<FormRef>EcoResProductDetails</FormRef>
	<Label>@SYS301190</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProductMaster</TitleField1>
	<TitleField2>IsVariantGenerationEnabled</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>EcoResProductMasterIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>EcoResProductMasterIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsVariantGenerationEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsReuseConfigurationEnabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductMaster</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsVariantGenerationEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsReuseConfigurationEnabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsReuseConfigurationEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResModelingIdentical</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsVariantGenerationEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResModelingAutoCreateVariants</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductMaster</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResProductMasterIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductMaster</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductMaster</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>EcoResProductMaster</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProductMaster</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>EcoResProductMaster_EcoResProductMasterModelingPolicy</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductMaster</Name>
					<Field>ProductMaster</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>