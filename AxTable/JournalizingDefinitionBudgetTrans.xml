<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionBudgetTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JournalizingDefinitionBudgetTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);
        switch (_fieldIdToCheck)
        {
            case fieldNum(JournalizingDefinitionBudgetTrans, JournalizingDefinition):

                if (JournalizingDefinition::findByRecId(this.JournalizingDefinition).JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::Budget)
                {
                    ret = checkFailed(strFmt("@SYS184204", JournalizingDefinition::findByRecId(this.JournalizingDefinition).JournalizingDefinitionCode));
                }
                break;

            case fieldNum(JournalizingDefinitionBudgetTrans, BudgetTransactionCode):

                if (BudgetTransactionCode::find(this.BudgetTransactionCode).BudgetTransactionType != this.BudgetTransactionType && this.BudgetTransactionTypeCode == TableAll::Table)
                {
                    ret = checkFailed(strFmt("@SYS306735", BudgetTransactionCode::find(this.BudgetTransactionCode).Name));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.BudgetTransactionTypeCode == TableAll::Table && !this.BudgetTransactionCode)
        {
            ret = checkFailed("@SYS184207");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record occurs in the <c>JournalizingDefinitionBudgetTrans</c>
    ///    table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _recId)
    {
        boolean ret = true;

        if (!JournalizingDefinitionBudgetTrans::exist(_recId))
        {
            ret = checkFailed(strFmt(JournalizingDefinitionBudgetTrans::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>JournalizingDefinitionBudgetTrans</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     journalizingDefinitionBudgetTrans
                 where
                     journalizingDefinitionBudgetTrans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>JournalizingDefinitionBudgetTrans</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>JournalizingDefinitionBudgetTrans</c> table.
    /// </returns>

    public static JournalizingDefinitionBudgetTrans find(
        recId _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        JournalizingDefinitionBudgetTrans journalizingDefinitionBudgetTrans;

        journalizingDefinitionBudgetTrans.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            journalizingDefinitionBudgetTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            journalizingDefinitionBudgetTrans
            where
            journalizingDefinitionBudgetTrans.RecId == _recId;

        return journalizingDefinitionBudgetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByJournalizingDefinitionId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>JournalizingDefinitionBudgetTrans</c> table.
    /// </summary>
    /// <param name="_journalizingDefinitionId">
    ///    The unique ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>JournalizingDefinitionBudgetTrans</c> table.
    /// </returns>
    public static JournalizingDefinitionBudgetTrans findByJournalizingDefinitionId(
        JournalizingDefinitionId _journalizingDefinitionId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        JournalizingDefinitionBudgetTrans journalizingDefinitionBudgetTrans;

        journalizingDefinitionBudgetTrans.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            journalizingDefinitionBudgetTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            journalizingDefinitionBudgetTrans
            where
            journalizingDefinitionBudgetTrans.JournalizingDefinition == _journalizingDefinitionId;

        return journalizingDefinitionBudgetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS128269";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicBudget</ConfigurationKey>
	<DeveloperDocumentation>@SYS329659</DeveloperDocumentation>
	<FormRef>journalizingDefinitiontrans</FormRef>
	<Label>@SYS184238</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>BudgetTransactionType</TitleField1>
	<TitleField2>JournalizingDefinition</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>BudgetTransCodeBudgetTransTypeIdx</ClusteredIndex>
	<Modules>AccountingFoundation</Modules>
	<ReplacementKey>BudgetTransCodeBudgetTransTypeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizingDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionTypeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetTransactionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS183757</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetTransactionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>BudgetTransactionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetTransactionTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS339265</Label>
			<EnumType>TableAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalizingDefinition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS128173</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetTransCodeBudgetTransTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetTransactionType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetTransactionCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetTransactionCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetTransactionCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>JournalizingDefinitionBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetTransactionCode</Name>
					<Field>BudgetTransactionCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JournalizingDefinition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JournalizingDefinition</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JournalizingDefinition</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>JournalizingDefinitionBudgetTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalizingDefinition</Name>
					<Field>JournalizingDefinition</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>