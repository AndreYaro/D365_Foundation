<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPaymentDisbursement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendPaymentDisbursement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>factor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Integer factor applies in Amount calculations.
    /// </summary>
    /// <returns>
    /// Integer factor value.
    /// </returns>
    Integer factor()
    {
        return -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>VendPaymentDisbursement</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>VendPaymentDisbursement</c> table record to be checked for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean checkExist(recId _recId )
    {
        boolean ret = true;
        ;

        if (!VendPaymentDisbursement::exist(_recId))
        {
            ret = checkFailed(strfmt(VendPaymentDisbursement::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByVendInvoiceJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the specified <c>VendPaymentDisbursement</c> table records.
    /// </summary>
    /// <param name="_recId">
    /// The recId of the <c>VendPaymentDisbursement</c> table to delete.
    /// </param>

    public static void deleteByVendInvoiceJourRecId(recId _recId)
    {
        VendPaymentDisbursement vendPaymentDisbursement;
        ;
        delete_from vendPaymentDisbursement
        where vendPaymentDisbursement.VendInvoiceJour == _recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>VendPaymentDisbursement</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>VendPaymentDisbursement</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists, otherwise, false.
    /// </returns>

    public static boolean exist(RecId _recId)
    {
        boolean found;
        ;

        found = (select firstonly
                     RecId
                from
                     vendPaymentDisbursement
                 where
                     vendPaymentDisbursement.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>VendPaymentDisbursement</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The recId of the <c>VendPaymentDisbursement</c> table to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to be used when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record of the <c>VendPaymentDisbursement</c> table if found; otherwise, an empty buffer.
    /// </returns>

    public static VendPaymentDisbursement find(
        recId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendPaymentDisbursement vendPaymentDisbursement;
        ;

        vendPaymentDisbursement.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendPaymentDisbursement.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            vendPaymentDisbursement
            where
            vendPaymentDisbursement.RecId == _recId;

        return vendPaymentDisbursement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendInvoiceJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>VendPaymentDisbursement</c> table.
    /// </summary>
    /// <param name="_recId">
    ///  The recId of the <c>VendInvoiceJour</c> table to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to be used when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record of the <c>VendPaymentDisbursement</c> table if found; otherwise, an empty buffer.
    /// </returns>
    /// <remarks>
    /// The methods returns the acive <c>VendPaymentDisbursement</c> table record based on the record ID of
    /// the <c>VendInvoiceJour</c> table.
    /// </remarks>

    public static VendPaymentDisbursement findByVendInvoiceJourRecId(recId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendPaymentDisbursement vendPaymentDisbursement;
        ;

        vendPaymentDisbursement.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendPaymentDisbursement.concurrencyModel(_concurrencyModel);
        }

        select
        vendPaymentDisbursement
        where
        vendPaymentDisbursement.VendInvoiceJour == _recId;

        return vendPaymentDisbursement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        static TxtNotExist txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS265</DeveloperDocumentation>
	<Label>@SPS264</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>VendBankAccountId</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>AccountsPayable</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DueAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentDisbursement</Name>
			<Label>@SPS235</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DueAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DiscDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DueAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS11762</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendBankAccountId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBank</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceJour</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendPaymentDisbursement</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ExtRecId</MapField>
					<MapFieldTo>VendInvoiceJour</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DueAmount</MapField>
					<MapFieldTo>DueAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscAmount</MapField>
					<MapFieldTo>DiscAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DueDate</MapField>
					<MapFieldTo>DueDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscDate</MapField>
					<MapFieldTo>DiscDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendBankAccountId</MapField>
					<MapFieldTo>VendBankAccountId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceJour_VendPaymentDisbursement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceJour</Name>
					<Field>VendInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>