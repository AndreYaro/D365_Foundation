<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSZoneMasterDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSZoneMasterDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDimensionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the name of a field defined for zone master.
    /// </summary>
    /// <param name="_zoneMasterCode">
    /// Zone master code of the field.
    /// </param>
    /// <param name="_sequence">
    /// Sequence number of the field.
    /// </param>
    /// <returns>
    /// The name of the field.
    /// </returns>
    public TMSName getDimensionName(TMSZoneMasterCode _zoneMasterCode, int _sequence)
    {
        return TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMasterCode, _sequence).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);
    
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(TMSZoneMasterDetail, Dimension1):
                    ret = this.isFieldValueValid(this.Dimension1, 1);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension2):
                    ret = this.isFieldValueValid(this.Dimension2, 2);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension3):
                    ret = this.isFieldValueValid(this.Dimension3, 3);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension4):
                    ret = this.isFieldValueValid(this.Dimension4, 4);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension5):
                    ret = this.isFieldValueValid(this.Dimension5, 5);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension6):
                    ret = this.isFieldValueValid(this.Dimension6, 6);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension7):
                    ret = this.isFieldValueValid(this.Dimension7, 7);
                    break;
                case fieldNum(TMSZoneMasterDetail, Dimension8):
                    ret = this.isFieldValueValid(this.Dimension8, 8);
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldValueValid</Name>
				<Source><![CDATA[
    private boolean isFieldValueValid(TMSDimension _parameterValue, TMSSequence _parameterSequence)
    {
        boolean			    validationResult = true;
        TMSZoneMasterField  zoneMasterField = TMSZoneMasterField::findByCodeSequenceAndFieldType(this.ZoneMasterCode, _parameterSequence);
        TMSDimension	    fieldValue = TMSCarrierService::checkField(_parameterSequence, _parameterValue, zoneMasterField.LookupType);
                     
        if (fieldValue == TMSCarrierService::getErrorValue())
        {
            TMSName fieldName = this.getDimensionName(this.ZoneMasterCode, _parameterSequence);
            validationResult = checkFailed(strfmt("@SYS31784", _parameterValue, fieldName, fieldName));
        }
        return validationResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSZoneMasterDetail</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly TMSZoneMasterDetail
                    where tmsZoneMasterDetail.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existWithZoneMasterCodeAndZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a <c>TMSZoneMasterDetail</c> record exists for the specified zone master code and zone.
    /// </summary>
    /// <param name="_zoneMasterCode">
    /// The zone master code.
    /// </param>
    /// <param name="_zone">
    /// The zone.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean existWithZoneMasterCodeAndZone(TMSZoneMasterCode _zoneMasterCode, TMSZone _zone)
    {
        return (select firstonly RecId from TMSZoneMasterDetail
                where tmsZoneMasterDetail.ZoneMasterCode == _zoneMasterCode
                    && tmsZoneMasterDetail.Zone == _zone).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSZoneMasterDetail</c> record by id.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSZoneMasterDetail find(RecId   _recId,
                                           boolean _forupdate = false)
    {
        TMSZoneMasterDetail    tmsZoneMasterDetail;

        if (_recId)
        {
            tmsZoneMasterDetail.selectForUpdate(_forupdate);

            select firstonly tmsZoneMasterDetail
                where tmsZoneMasterDetail.RecId == _recId;
        }

        return tmsZoneMasterDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs lookup on zone dimensions.
    /// </summary>
    /// <param name="_zoneMaster">
    /// Zone master code.
    /// </param>
    static void lookupZone(FormStringControl _ctrl, TMSZoneMasterCode _zoneMaster)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        int                     numberOfFields          = TMSZoneMaster::find(_zoneMaster).findNumberOfDetailFields();

        sysTableLookup          = SysTableLookup::newParameters(tablenum(TMSZoneMasterDetail), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tablenum(TMSZoneMasterDetail));

        sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Zone));
        sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, ZoneMasterCode));
        queryBuildDataSource.addRange(fieldnum(TMSZoneMasterDetail, ZoneMasterCode)).value(queryValue(_zoneMaster));

        queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Zone));
        queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, ZoneMasterCode));

        if (numberOfFields >= 1)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension1));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension1));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 1).Name);
        }

        if (numberOfFields >= 2)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension2));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension2));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 2).Name);
        }

        if (numberOfFields >= 3)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension3));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension3));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 3).Name);
        }

        if (numberOfFields >= 4)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension4));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension4));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 4).Name);
        }

        if (numberOfFields >= 5)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension5));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension5));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 5).Name);
        }

        if (numberOfFields == 6)
        {
            sysTableLookup.addLookupfield(fieldnum(TMSZoneMasterDetail, Dimension6));
            queryBuildDataSource.addGroupByField(fieldnum(TMSZoneMasterDetail, Dimension6));
            sysTableLookup.setLabel(TMSZoneMasterField::findByCodeSequenceAndFieldType(_zoneMaster, 6).Name);
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1995</DeveloperDocumentation>
	<Label>@TRX253</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ZoneMasterCode</TitleField1>
	<TitleField2>Dimension1</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>DimensionsZoneMasterCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ZoneMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Zone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ZoneMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension8</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ZoneMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Dimension8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Zone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension4</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension5</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension6</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension7</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Dimension8</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDimension</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Zone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSZone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ZoneMasterCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSZoneMasterCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DimensionsZoneMasterCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ZoneMasterCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension1</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension2</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension3</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension4</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension5</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension6</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension7</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Dimension8</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSZoneMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSZoneMaster</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ZoneMasterCode</Name>
					<SourceEDT>TMSZoneMasterCode</SourceEDT>
					<Field>ZoneMasterCode</Field>
					<RelatedField>ZoneMasterCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ZoneMasterCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>