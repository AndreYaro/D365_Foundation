<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetSuspend</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetSuspend extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>updateAssetStatus</c> method to update the asset status.
    /// </summary>
    public void delete()
    {
        super();
        this.updateAssetStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.ChangeTime = DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone());
        this.UserId     = curUserId();
        this.ChangeDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>updateAssetStatus</c> method to update the asset status.
    /// </summary>
    public void insert()
    {
        super();
        this.updateAssetStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes values of <c>SuspendStart</c> and <c>SuspendEnd</c> fields.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the modified field.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
        switch (_fieldId)
        {
            case fieldNum(RAssetSuspend, SuspendStart):
                this.SuspendStart = dateStartMth(this.SuspendStart);
                break;

            case fieldNum(RAssetSuspend, SuspendEnd):
                if (this.SuspendEnd)
                    this.SuspendEnd = endmth(this.SuspendEnd);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>updateAssetStatus</c> method to update the asset status.
    /// </summary>
    public void update()
    {
        super();
        this.updateAssetStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAssetStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the asset status according to posting or canceling of the temporary closing-down operations.
    /// </summary>
    public void updateAssetStatus()
    {
        RAssetTable     rAssetTable;
        RAssetSuspend   suspendLast = RAssetSuspend::findLastSuspend(this.Assetid);

        ttsbegin;
        rAssetTable = RAssetTable::find(this.Assetid, true);

        if (! suspendLast.RecId || suspendLast.SuspendEnd)
        {
            rAssetTable.Status = RAssetStatus::Open;
        }
        else
        {
            rAssetTable.Status = RAssetStatus::Suspended;
        }

        rAssetTable.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        RAssetTransDate lastDepDate;
        RAssetStandards assetStandards;
        boolean         ret;
        RAssetTable     assetTable  = RAssetTable::find(this.Assetid);

        ret = super();

        if (this.SuspendEnd)
        {
            while select LastDepDate from assetStandards
                where assetStandards.AssetId == this.Assetid
            {
                lastDepDate = assetStandards.LastDepDate;
                if (lastDepDate && this.SuspendEnd <= lastDepDate)
                {
                    ret = checkFailed("@GLS116215");
                    break;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        TransDate           transDate;
        RAssetStandards     standards;
        RAssetSuspend       suspendLast;
        boolean             ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(RAssetSuspend, SuspendStart):
                select firstonly SuspendEnd, SuspendStart from suspendLast
                    order by SuspendStart desc
                    where suspendLast.Assetid == this.Assetid &&
                          suspendLast.RecId   != this.RecId;
                if (! suspendLast.SuspendEnd && suspendLast.RecId)
                    ret = ret && checkFailed("@GLS220499");
                if (ret && this.SuspendStart <= suspendLast.SuspendEnd)
                    ret = ret && checkFailed("@GLS220500");
                if (ret && this.SuspendStart < RAssetTable::find(this.Assetid).AcquisitionDate)
                    ret = ret && checkFailed("@GLS113251");

                transDate = this.SuspendStart;
                break;

            case fieldNum(RAssetSuspend, SuspendEnd):
                if (this.SuspendEnd && this.SuspendEnd <= this.SuspendStart)
                    ret = ret && checkFailed("@SYS30562");
                transDate = this.SuspendEnd;
                break;
        }
        if (ret)
        {
            while select DepStartDate,LastDepDate from standards
                where standards.AssetId == this.Assetid
            {
                if (standards.DepStartDate && transDate < standards.DepStartDate ||
                    standards.LastDepDate && mkDate(1, mthOfYr(transDate), year(transDate)) < standards.LastDepDate)
                {
                    ret = ret && checkFailed("@GLS116215");
                    break;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        RAssetStatusType    assetStatusType;
        boolean             ret;
        RAssetTable         rAssetTable;

        ret = super();

        if (ret)
        {
            rAssetTable     = RAssetTable::find(this.Assetid);
            assetStatusType = RAssetStatusType::construct(rAssetTable);
            ret             = assetStatusType.allowChangeToType(rAssetTable.Status);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastSuspend</Name>
				<Source><![CDATA[
    public server static RAssetSuspend findLastSuspend(RAssetId   _assetId,
                                                       boolean    _forupdate = false)
    {
        RAssetSuspend assetSuspend;
        ;

        assetSuspend.selectForUpdate(_forupdate);

        select firstonly assetSuspend
            order by SuspendStart desc
            where assetSuspend.Assetid == _assetId;

        return assetSuspend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSuspend</Name>
				<Source><![CDATA[
    public server static RAssetSuspend findSuspend(RAssetId _assetId,
                                                   TransDate _transDate = dateNull())
    {
        RAssetSuspend assetSuspend;
        ;

        if (_transDate == dateNull())
        {
            select firstonly assetSuspend
                where assetSuspend.Assetid == _assetId &&
                      ! assetSuspend.SuspendEnd;
        }
        else
        {
            select firstonly assetSuspend
                where assetSuspend.Assetid      == _assetId   &&
                      assetSuspend.SuspendStart <= _transDate &&
                      (assetSuspend.SuspendEnd  >= _transDate ||
                       ! assetSuspend.SuspendEnd);
        }
        return assetSuspend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>suspendBefore</Name>
				<Source><![CDATA[
    server public static RAssetLifeTime suspendBefore(RAssetTransDate _runDate,
                                                      RAssetStandards _assetStandards)
    {
        RAssetSuspend       assetSuspend;
        RAssetLifeTime      interval;
        RAssetTableInterval intervalMth = new RAssetTableInterval_Month();
        ;

        while select SuspendEnd, SuspendStart from assetSuspend
            where assetSuspend.Assetid      == _assetStandards.AssetId &&
                  (assetSuspend.SuspendEnd                            &&
                   assetSuspend.SuspendEnd < _runDate)
        {
            interval += (intervalMth.interval(assetSuspend.SuspendStart < _assetStandards.DepStartDate ?
                                              _assetStandards.DepStartDate : assetSuspend.SuspendStart,
                                              endmth(assetSuspend.SuspendEnd)) + 1);
        }

        return interval;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@GLS116134</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Assetid</TitleField1>
	<TitleField2>SuspendStart</TitleField2>
	<ClusteredIndex>RAssetidChangeDateId</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RAssetidChangeDateId</PrimaryIndex>
	<ReplacementKey>RAssetidChangeDateId</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Assetid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendEnd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendStart</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Assetid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendStart</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Assetid</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LastModifications</Name>
			<Label>@SYS26382</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChangeDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChangeTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS14598</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SuspendStart</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendEnd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Assetid</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ChangeDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetDepStartDate</ExtendedDataType>
			<Label>@SYS7402</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>ChangeTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeOfDay</ExtendedDataType>
			<Label>@SYS8827</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SuspendEnd</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetDepStartDate</ExtendedDataType>
			<Label>@RAsset:SuspendFinishDate</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SuspendStart</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetLastDepDate</ExtendedDataType>
			<Label>@SYS6255</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RAssetidChangeDateId</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Assetid</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SuspendStart</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RAssetTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Assetid</Name>
					<SourceEDT>RAssetId</SourceEDT>
					<Field>Assetid</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>