<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysWindowsAppApprovalsConfigReports</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SysWindowsAppApprovalsConfigReports extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        #Properties
        #AOT

        boolean result = super(_fieldIdToCheck);

        if (result && _fieldIdToCheck == fieldNum(SysWindowsAppApprovalsConfigReports, ReportName))
        {
            str reportName, reportDesignName;
            var dictMenuItem = SysDictMenu::newMenuItem(this.ReportName, MenuItemType::Output);

            if (dictMenuItem)
            {
                TreeNode treeNode        = dictMenuItem.parmTreeNode();
                str reportConfigKey = treeNode.AOTgetProperty(#PropertyConfigurationKey);
                str objectType      = treeNode.AOTgetProperty(#PropertyObjectType);
                SysWindowsAppApprovalsConfig approvalsConfig;

                // Validate that the configKey matches
                select firstOnly ApprovalName from approvalsConfig
                    where approvalsConfig.RecId == this.ApprovalsConfig;

                // Make sure selected workflow approval name starts with the same 3 characters as the report name
                if (subStr(approvalsConfig.ApprovalName, 1, 3) != subStr(this.ReportName, 1, 3))
                {
                    // The report with specified name doesn't correspond to the selected workflow approval
                    // @SYS4009499 = Report name must start from the same 3 characters as the workflow approval name
                    return checkFailed("@SYS4009499");
                }

                var approvalTreeNode    = TreeNode::findNode(#WorkflowApprovalTasksPath + #AOTDelimiter + approvalsConfig.ApprovalName);
                str approvalConfigKey   = findProperty(approvalTreeNode.AOTgetProperties(), #PropertyConfigurationkey);

                if (reportConfigKey != approvalConfigKey)
                {
                    return checkFailed("@SYS4007969");
                }

                // Check the object type if SSRS report
                if (objectType != #PropertyMenuItemObjectTypeSSRSReport)
                {
                    if (objectType != #PropertyClass)
                    {
                        return checkFailed("@SYS4000616");
                    }

                    objectType = treeNode.AOTgetProperty(#PropertyLinkedPermissionType);

                    if (objectType != #PropertyMenuItemObjectTypeSSRSReport)
                    {
                        return checkFailed("@SYS4000616");
                    }
                    else
                    {
                        reportName          = treeNode.AOTgetProperty(#PropertyLinkedPermissionObject);
                        reportDesignName    = treeNode.AOTgetProperty(#PropertyLinkedPermissionObjectChild);
                    }
                }
                else
                {
                    reportName          = treeNode.AOTgetProperty(#PropertyObject);
                    reportDesignName    = treeNode.AOTgetProperty(#PropertyReportDesign);
                }

                if (!reportName && !reportDesignName)
                {
                    return checkFailed("@SYS4007968");
                }

                this.ReportLabel        = treeNode.AOTgetProperty(#PropertyLabel);
                this.ReportDesignName   = strFmt('%1.%2', reportName, reportDesignName);
            }
            else
            {
                // @SYS136010 = Report with name '%1' not found on server.
                return checkFailed(strfmt("@SYS136010", this.ReportName));
            }
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SysWindowsApp</ConfigurationKey>
	<DeveloperDocumentation>@SYS4007915</DeveloperDocumentation>
	<Label>@SYS4007913</Label>
	<TitleField1>ApprovalsConfig</TitleField1>
	<TitleField2>ReportName</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Project</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SystemTable>Yes</SystemTable>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SysWindowsAppReportsMapping</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SysWindowsAppReportsMapping</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalsConfig</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApprovalsConfig</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ApprovalsConfig</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysWindowsAppApprovalsConfigRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportDesignName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SRSReportName</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportLabel</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LabelId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SRSReportName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Idx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ApprovalsConfig</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReportName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysWindowsAppApprovalsConfig</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SysWindowsAppApprovalsConfig</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApprovalsConfig</Name>
					<Field>ApprovalsConfig</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>