<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSBreakMaster</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSBreakMaster extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findNumberOfBreakDetailFields</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds the number of break detail entries for the break master.
	/// </summary>
	/// <returns>
	/// The number of break detail entries for the break master.
	/// </returns>
        int findNumberOfBreakDetailFields()
    {
        return int642int((select count(RecId) from TMSBreakDetail where TMSBreakDetail.BreakMasterCode == this.BreakMasterCode).recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>TMSBreakMaster</c> record exists.
	/// </summary>
	/// <param name="_tmsBreakMasterCode">
	/// Break master code of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
        public static boolean exist(TMSBreakMasterCode _tmsBreakMasterCode)
    {
        return (_tmsBreakMasterCode) &&
               (select firstonly TMSBreakMaster
                    where tmsBreakMaster.BreakMasterCode == _tmsBreakMasterCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>TMSBreakMaster</c> record with given parameters.
	/// </summary>
	/// <param name="_tmsBreakMasterCode">
	/// Break master code of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
        public static TMSBreakMaster find(TMSBreakMasterCode _tmsBreakMasterCode,
                                      boolean            _forupdate = false)
    {
        TMSBreakMaster    tmsBreakMaster;

        if (_tmsBreakMasterCode)
        {
            tmsBreakMaster.selectForUpdate(_forupdate);

            select firstonly tmsBreakMaster
                where tmsBreakMaster.BreakMasterCode == _tmsBreakMasterCode;
        }

        return tmsBreakMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1879</DeveloperDocumentation>
	<FormRef>TMSBreakMaster</FormRef>
	<Label>@TRX83</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>BreakMasterCode</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>BreakMasterCodeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>BreakMasterCodeIdx</PrimaryIndex>
	<ReplacementKey>BreakMasterCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TMSBreakDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TMSBreakDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakUM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comparison</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakMasterCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakMasterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakUM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comparison</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BreakMasterCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSBreakMasterCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BreakUM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSBreakUM</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comparison</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSComparison</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DataType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TMSDataType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BreakMasterCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BreakMasterCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>