<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRScriptTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRScriptTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canMaintainTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the conditions for when the script translation record can be additionally maintained.
    /// </summary>
    /// <returns>
    /// true when the script translation record can be additionally maintained; otherwise, false.
    /// </returns>
    public boolean canMaintainTranslation()
    {
        // Note and ScriptTitle can have translations, so at least one must be defined for a script translation to be maintained
        return this.Note || this.ScriptTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets a default <c>LanguageId</c> value.
    /// </summary>
    public void setDefaultLanguage()
    {
        this.LanguageId = SystemParameters::getSystemLanguageId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current record can be written to the databse.
    /// </summary>
    /// <param name="_skipInfoLogMessage">
    /// A <c>boolean</c> value used to determine whether or not
    /// messages are shown; optional.
    /// </param>
    /// <returns>
    /// true if the record is valid; otherwise, false.
    /// </returns>
    public boolean validateWrite(boolean _skipInfoLogMessage = false)
    {
        boolean ret;

        ret = super();

        // Verify that the necessary elements for a translation are provided for the script
        if (!this.canMaintainTranslation())
        {
            if (!_skipInfoLogMessage)
            {
                ret = checkFailed("@MCR4410169");
            }
            else
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateScriptTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the script translation record.
    /// </summary>
    /// <param name="_mcrScriptRecId">
    /// The ID of the <c>MCRScript</c> record.
    /// </param>
    /// <param name="_note">
    /// The specified MCRScript note value.
    /// </param>
    /// <param name="_scriptTitle">
    /// The specified MCRScript ScriptTitle value.
    /// </param>
    /// <param name="_languageId">
    /// The specified <c>LanguageId</c> value.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// The MCRScript note and scriptId value has not been passed.
    /// </exception>
    public static void createOrUpdateScriptTranslation(
        RefRecId        _mcrScriptRecId,
        MCRScriptNote   _note,
        MCRScriptID     _scriptTitle,
        LanguageId      _languageId = SystemParameters::getSystemLanguageId())
    {
        MCRScriptTranslation    mcrScriptTranslation;

        // Verify that a translation is provided
        if (!_note && !_scriptTitle)
        {
            throw error("@MCR4410169");
        }

        ttsbegin;

        mcrScriptTranslation = MCRScriptTranslation::findByScriptLanguage(_mcrScriptRecId,
            _languageId, true);

        // Update the record that was found
        if (mcrScriptTranslation.RecId)
        {
            mcrScriptTranslation.Note           =   _note;
            mcrScriptTranslation.ScriptTitle    =   _scriptTitle;

            if (mcrScriptTranslation.validateWrite(true))
            {
                mcrScriptTranslation.update();
            }
        }
        else
        {
            // No such record was found - create a new translation for the script
            mcrScriptTranslation.mcrScript      =   _mcrScriptRecId;
            mcrScriptTranslation.Note           =   _note;
            mcrScriptTranslation.ScriptTitle    =   _scriptTitle;
            mcrScriptTranslation.LanguageId     =   _languageId;

            if (mcrScriptTranslation.validateWrite(true))
            {
                mcrScriptTranslation.insert();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByScriptLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>MCRScriptTranslation</c> table by using the specified
    ///    script language.
    /// </summary>
    /// <param name="_mcrScriptRecId">
    ///    The ID of the <c>MCRScript</c> record to use as a filter.
    /// </param>
    /// <param name="_languageId">
    ///    A language ID to use as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>MCRScriptTranslation</c> table; otherwise, an empty record.
    /// </returns>
    public static MCRScriptTranslation findByScriptLanguage(
        RefRecId    _mcrScriptRecId,
        LanguageId  _languageId,
        boolean     _forUpdate = false)
    {
        MCRScriptTranslation scriptTranslation;

        scriptTranslation.selectForUpdate(_forUpdate);

        select firstonly scriptTranslation
            where scriptTranslation.mcrScript   == _mcrScriptRecId
               && scriptTranslation.LanguageId  == _languageId;

        return scriptTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByScriptOrSystemLanguage</Name>
				<Source><![CDATA[
        private static MCRScriptTranslation findByScriptOrSystemLanguage(
        RefRecId    _scriptRecId,
        LanguageId  _languageId,
        FieldId     _translationFieldId)
    {
        MCRScriptTranslation    mcrScriptTranslation;
        LanguageId              systemLanguageId;

        mcrScriptTranslation = MCRScriptTranslation::findByScriptLanguage(
            _scriptRecId, _languageId);

        // No translation record or no value provided - fallback to system language
        if (!mcrScriptTranslation.RecId || !mcrScriptTranslation.(_translationFieldId))
        {
            systemLanguageId = SystemParameters::getSystemLanguageId();
            if (systemLanguageId != _languageId)
            {
                mcrScriptTranslation = MCRScriptTranslation::findByScriptLanguage(
                    _scriptRecId, systemLanguageId);
            }
        }

        return mcrScriptTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByScriptTitleAndLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>MCRScriptTranslation</c> table by using the specified
    ///    script title and language
    /// </summary>
    /// <param name="_scriptTitle">
    ///    The ID of the <c>MCRScriptID</c> record to use as a filter.
    /// </param>
    /// <param name="_languageId">
    ///    A language ID to use as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>MCRScriptTranslation</c> table; otherwise, an empty record.
    /// </returns>
    public static MCRScriptTranslation findByScriptTitleAndLanguage(
        MCRScriptID _scriptTitle,
        LanguageId  _languageId,
        boolean     _forUpdate = false)
    {
        MCRScriptTranslation scriptTranslation;

        scriptTranslation.selectForUpdate(_forUpdate);

        select firstonly scriptTranslation
            where scriptTranslation.ScriptTitle   == _scriptTitle
               && scriptTranslation.LanguageId  == _languageId;

        return scriptTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNoteOrDefaultNote</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the note of a product.
    /// </summary>
    /// <param name="_scriptRecId">
    ///    The ID of a product for which a name is retrieved.
    /// </param>
    /// <param name="_languageId">
    ///    The ID of a language in which a name is retrieved.
    /// </param>
    /// <returns>
    ///    A name of a product.
    /// </returns>
    /// <remarks>
    ///    If a name in the language specified by the <c>_languageId</c> parameter is not found then a name in
    ///    the system language is returned.
    /// </remarks>
    public static MCRScriptNote getNoteOrDefaultNote(
        RefRecId  _scriptRecId,
        LanguageId          _languageId)
    {
        MCRScriptTranslation mcrScriptTranslation;

        mcrScriptTranslation = MCRScriptTranslation::findByScriptOrSystemLanguage(
            _scriptRecId, _languageId, fieldNum(MCRScriptTranslation, Note));

        return mcrScriptTranslation.Note;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTitleOrDefaultTitle</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the script title of a product.
    /// </summary>
    /// <param name="_scriptRecId">
    ///    The ID of a product for which a name is retrieved.
    /// </param>
    /// <param name="_languageId">
    ///    The ID of a language in which a name is retrieved.
    /// </param>
    /// <returns>
    ///    A name of a product.
    /// </returns>
    /// <remarks>
    ///    If a name in the language specified by the <c>_languageId</c> parameter is not found then a name in
    ///    the system language is returned.
    /// </remarks>
    public static MCRScriptID getTitleOrDefaultTitle(
        RefRecId    _scriptRecId,
        LanguageId  _languageId)
    {
        MCRScriptTranslation mcrScriptTranslation;

        mcrScriptTranslation = MCRScriptTranslation::findByScriptOrSystemLanguage(
            _scriptRecId, _languageId, fieldNum(MCRScriptTranslation, Note));

        return mcrScriptTranslation.ScriptTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The method adds a default language ID filter for the specified query.
    /// </summary>
    /// <param name="_query">
    ///    The query that is extended with the default language ID filter.
    /// </param>
    /// <param name="_name">
    ///    The name of specified <c>MCRScriptTranslation</c> record.
    /// </param>
    public static void queryAddDefaultLanguage(Query _query, str _name = '')
    {
        QueryBuildDataSource    qbdsMCRScriptTranslation;

        if (_name)
        {
            qbdsMCRScriptTranslation = _query.dataSourceName(_name);
        }
        else
        {
            qbdsMCRScriptTranslation = _query.dataSourceTable(tableNum(MCRScriptTranslation));
        }

        if (!qbdsMCRScriptTranslation)
        {
            throw error(Error::wrongUseOfFunction(tableStaticMethodStr(MCRScriptTranslation, queryAddDefaultLanguage)));
        }

        qbdsMCRScriptTranslation.addRange(fieldNum(MCRScriptTranslation, LanguageId))
            .value(queryValue(SystemParameters::getSystemLanguageId()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@MCR4410167</DeveloperDocumentation>
	<FormRef>MCRScriptTranslation</FormRef>
	<Label>@MCR4410166</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>MCRScript</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>MCRScriptLanguageIdx</ClusteredIndex>
	<Modules>TransactionsAndOrders</Modules>
	<ReplacementKey>MCRScriptLanguageIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScriptTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRScript</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRScript</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultTranslation</Name>
			<Label>@MCR4410166</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ScriptTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScriptTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MCRScript</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Note</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRScriptNote</ExtendedDataType>
			<Label>@MCR4410165</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ScriptTitle</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRScriptID</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes>
		<AxTableFullTextIndex>
			<Name>MCRScriptTranslationIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Note</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ScriptTitle</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableFullTextIndex>
	</FullTextIndexes>
	<Indexes>
		<AxTableIndex>
			<Name>MCRScriptLanguageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRScript</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ScriptTitleLanguageId</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ScriptTitle</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LanguageTable_MCRScriptTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MCRScript</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>MCRScript</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>MCRScript</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>MCRScript_MCRScriptTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRScript</Name>
					<Field>MCRScript</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>