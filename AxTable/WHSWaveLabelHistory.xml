<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveLabelHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveLabelHistory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertBreakLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a break label record.
    /// </summary>
    /// <param name="_labelList">
    /// A list of printed break labels.
    /// </param>
    /// <param name="_waveId">
    /// The wave the labels were printed for.
    /// </param>
    /// <param name="_waveLabelTemplateRecId">
    /// The parameter of type <c>WHSWaveLabelTemplateRecId</c>.
    /// </param>
    /// <param name="_breakField">
    /// The field name of the break field.
    /// </param>
    /// <param name="_workId">
    /// The work the labels were printed for.
    /// </param>
    /// <returns>
    /// Returns <c>WHSWaveLabelHistory</c> object.
    /// </returns>
    [Hookable(false)]
    internal static WHSWaveLabelHistory insertBreakLabel(
        List                        _labelList,
        WHSWaveId                   _waveId,
        WHSWaveLabelTemplateRecId   _waveLabelTemplateRecId,
        FieldName                   _breakField,
        WHSWorkId                   _workId)
    {
        return WHSWaveLabelHistory::insertLabelHistory(_labelList, _waveId, _waveLabelTemplateRecId, _workId, NoYes::Yes, _breakField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a label record.
    /// </summary>
    /// <param name="_labelList">
    /// A list of printed labels.
    /// </param>
    /// <param name="_waveId">
    /// The wave the labels were printed for.
    /// </param>
    /// <param name="_waveLabelTemplateRecId">
    /// The template the labels were printed for.
    /// </param>
    /// <param name="_workId">
    /// The work the labels were printed for.
    /// </param>
    /// <returns>
    /// Returns <c>WHSWaveLabelHistory</c> object.
    /// </returns>
    [Hookable(false)]
    internal static WHSWaveLabelHistory insertLabel(
        List                        _labelList,
        WHSWaveId                   _waveId,
        WHSWaveLabelTemplateRecId   _waveLabelTemplateRecId,
        WHSWorkId                   _workId)
    {
        return WHSWaveLabelHistory::insertLabelHistory(_labelList, _waveId, _waveLabelTemplateRecId, _workId, NoYes::No, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertLabelHistory</Name>
				<Source><![CDATA[
    private static WHSWaveLabelHistory insertLabelHistory(
        List                        _labelList,
        WHSWaveId                   _waveId,
        WHSWaveLabelTemplateRecId   _waveLabelTemplateRecId,
        WHSWorkId                   _workId,
        WHSBreakLabel               _breakLabel,
        FieldName                   _breakField)
    {
        WHSWaveLabelHistory labelHistory;
    
        ttsBegin;
    
        labelHistory.LabelList  = _labelList.pack();
        labelHistory.WaveId     = _waveId;
        labelHistory.WorkId     = _workId;
        labelHistory.BreakLabel = _breakLabel;
        labelHistory.BreakField = _breakField;
        labelHistory.WaveLabelTemplateRecId = _waveLabelTemplateRecId;
        labelHistory.Active     = NoYes::Yes;

        labelHistory.insert();
    
        ttsCommit;

        return labelHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a specific <c>WHSWaveLabelHistory</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// The label id of the record.
    /// </param>
    /// <returns>
    /// True if the record existss; false otherwise.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return (_recId) &&
               (select firstonly RecId from whsWaveLabelHistory
                where whsWaveLabelHistory.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>WHSWaveLabelHistory</c> record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// The label id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSWaveLabelHistory find(RefRecId     _recId,
                                           boolean      _forupdate = false)
    {
        WHSWaveLabelHistory    labelHistory;

        if (_recId)
        {
            labelHistory.selectForUpdate(_forupdate);

            select firstonly labelHistory
                where labelHistory.RecId == _recId;
        }

        return labelHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:LabelHistoryDevDoc</DeveloperDocumentation>
	<FormRef>WHSWaveLabelHistory</FormRef>
	<Label>@WAX:LabelHistory</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>WaveId</TitleField1>
	<TitleField2>WorkId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BreakField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BreakLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLabelTemplateRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BreakField</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBreakFieldName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BreakLabel</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSBreakLabel</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>LabelList</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLabelList</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WaveLabelTemplateRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTemplateRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@WAX:WHSWaveLabelHistory_Active</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveIdWorkIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveIdWaveLabelTemplateRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveLabelTemplateRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveIdActiveIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Active</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWaveTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveId</Name>
					<SourceEDT>WHSWaveId</SourceEDT>
					<Field>WaveId</Field>
					<RelatedField>WaveId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorkTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkId</Name>
					<SourceEDT>WHSWorkId</SourceEDT>
					<Field>WorkId</Field>
					<RelatedField>WorkId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelTemplate</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>WHSWaveLabelTemplate</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveLabelTemplateRecId</Name>
					<Field>WaveLabelTemplateRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>