<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCrossDockTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSCrossDockTemplate extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a cross dock template record by the cross dock template Id.
    /// </summary>
    /// <param name = "_crossDockTemplateId">The cross dock template ID of the record.</param>
    /// <param name = "_forupdate">Boolean to determine if the record should be selected for update.</param>
    /// <returns>A cross dock template record.</returns>
    [Hookable(false)]
    internal static WHSCrossDockTemplate find(
        WHSCrossDockTemplateId _crossDockTemplateId,
        boolean                _forupdate = false)
    {
        WHSCrossDockTemplate crossDockTemplate;

        if (_crossDockTemplateId)
        {
            if (_forupdate)
            {
                crossDockTemplate.selectForUpdate(_forupdate);
            }

            select firstOnly crossDockTemplate
                where crossDockTemplate.CrossDockTemplateId == _crossDockTemplateId;
        }

        return crossDockTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPackedQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default query run.
    /// </summary>
    /// <returns>The default query run.</returns>
    [Hookable(false)]
    internal QueryRun defaultPackedQueryRun()
    {
        return new QueryRun(queryStr(WHSCrossDockTemplate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.PackedQueryRun = this.defaultPackedQueryRun().pack();
        this.WarehouseGroupAll = WhsWarehouseGroupAll::All;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSCrossDockTemplate, DemandReleasePolicy):
                {
                    if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt)
                    {
                        this.LocatingType           = WHSCrossDockLocatingType::LocationDirective;
                        this.DemandRequirements     = WHSCrossDockDemandRequirements::None;
                        this.WorkTemplateCode       = '';
                        this.ValidateTimeWindow     = NoYes::No;
                        this.RevalidateOnReceipt    = NoYes::No;
                    }
                }
                break;
            case fieldNum(WHSCrossDockTemplate, WarehouseGroupAll):
                this.setWarehouseSelection();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSCrossDockTemplate, LocatingType):
                if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt && this.LocatingType != WHSCrossDockLocatingType::LocationDirective)
                {
                    ret = checkFailed(strFmt("@SYS95333", fieldPName(WHSCrossDockTemplate, LocatingType), WHSCrossDockLocatingType::LocationDirective));
                }
                break;

            case fieldNum(WHSCrossDockTemplate, DemandRequirements):
                if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt && this.DemandRequirements != WHSCrossDockDemandRequirements::None)
                {
                    ret = checkFailed(strFmt("@SYS95333", fieldPName(WHSCrossDockTemplate, DemandRequirements), WHSCrossDockDemandRequirements::None));
                }
                break;

            case fieldNum(WHSCrossDockTemplate, WorkTemplateCode):
                if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt && this.WorkTemplateCode != '')
                {
                    ret = checkFailed(strFmt("@SYS92012", fieldPName(WHSCrossDockTemplate, WorkTemplateCode)));
                }
                break;

            case fieldNum(WHSCrossDockTemplate, ValidateTimeWindow):
                if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt && this.ValidateTimeWindow != NoYes::No)
                {
                    ret = checkFailed(strFmt("@SYS95333", fieldPName(WHSCrossDockTemplate, ValidateTimeWindow), NoYes::No));
                }
                break;

            case fieldNum(WHSCrossDockTemplate, RevalidateOnReceipt):
                if (this.DemandReleasePolicy == WHSCrossDockDemandReleasePolicy::AtSupplyReceipt && this.RevalidateOnReceipt != NoYes::No)
                {
                    ret = checkFailed(strFmt("@SYS95333", fieldPName(WHSCrossDockTemplate, RevalidateOnReceipt), NoYes::No));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>beforeSupplyReceiptPolicyCrossDockingTemplateExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if any cross docking templates with a before supply receipt release policy have been setup for the warehouse.
    /// </summary>
    /// <param name="_warehouseId">
    /// The warehouse ID in which the template is setup for.
    /// </param>
    /// <returns>
    /// true, if a cross docking template with a before supply receipt release policy exists for the warehouse; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal static boolean beforeSupplyReceiptPolicyCrossDockingTemplateExists(InventLocationId _warehouseId)
    { 
        WHSCrossDockTemplate crossDockTemplate;

        while select WarehouseGroupAll, WarehouseGroupId from crossDockTemplate
            order by crossDockTemplate.SequenceNumber asc
            where crossDockTemplate.DemandReleasePolicy  == WHSCrossDockDemandReleasePolicy::BeforeSupplyReceipt
                && ((crossDockTemplate.WarehouseGroupAll == whsWarehouseGroupAll::Warehouse && crossDockTemplate.InventLocationId == _warehouseId)
                    || crossDockTemplate.WarehouseGroupAll == WhsWarehouseGroupAll::Group
                    || crossDockTemplate.WarehouseGroupAll == WhsWarehouseGroupAll::All)
         {
             if (crossDockTemplate.WarehouseGroupAll == WhsWarehouseGroupAll::Group
                && !WhsWarehouseGroup::containsWarehouse(crossDockTemplate.WarehouseGroupId, _warehouseId))
             {
                 continue;
             }

             return true;
         }

         return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMinMaxTimeWindow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the minimum and maximum date times for cross docking.
    /// </summary>
    /// <param name = "_windowMax">The maximum window date time.</param>
    /// <param name = "_windowMin">The minimum window date time.</param>
    /// <param name = "_inboundDateTime">The inbound date time.</param>
    /// <returns>true if the date times are valid; otherwise, false</returns>
    [Hookable(false)]
    internal final boolean validateMinMaxTimeWindow(
        TransDateTime	_windowMax,
        TransDateTime	_windowMin,
        TransDateTime	_inboundDateTime)
    {
        WHSInstrumentationLogger instrumentationLogger = WHSCrossDockTemplate::instrumentationLogger();

        using (var activityContext = instrumentationLogger.plannedCrossDocking().validateMinMaxTimeWindow(this.ValidateTimeWindow, this.MaximumTimeUnit, this.MinimumTimeUnit))
        {
            instrumentationLogger.logRecordInformation(this);

            boolean isValid = true;

            if (this.ValidateTimeWindow)
            {
                if (WhsCrossDockingOnlyValidateDateTimesIfWindowSpecifiedFlight::instance().isEnabled())
                {
                    if (_inboundDateTime == utcdatetimeNull() || _windowMax == utcDateTimeNull() || _windowMin == utcDateTimeNull())
                    {
                        return false;
                    }
                }

                TransDate inboundDateOnly = DateTimeUtil::date(_inboundDateTime);

                switch (this.MaximumTimeUnit)
                {
                    // The inbound time must be after the max buffer window time
                    case WHSCrossDockWindowUnit::Hours:
                        _windowMax = DateTimeUtil::addHours(_windowMax, -this.MaximumTimeValue);
                        if (_inboundDateTime < _windowMax)
                        {
                            isValid = false;
                        }
                        break;

                    case WHSCrossDockWindowUnit::Days:
                        Date windowMaxDate = DateTimeUtil::date(DateTimeUtil::addDays(_windowMax, -this.MaximumTimeValue));
                        if (inboundDateOnly < windowMaxDate)
                        {
                            isValid = false;
                        }
                        break;
                }
    
                if (isValid)
                {
                    switch (this.MinimumTimeUnit)
                    {
                        // The inbound dateTime must be before the min buffer window time.
                        case WHSCrossDockWindowUnit::Hours:
                            _windowMin = DateTimeUtil::addHours(_windowMin, -this.MinimumTimeValue);
                            if (_inboundDateTime > _windowMin)
                            {
                                isValid = false;
                            }
                            break;

                        case WHSCrossDockWindowUnit::Days:
                            Date windowMinDate = DateTimeUtil::date(DateTimeUtil::addDays(_windowMin, -this.MinimumTimeValue));
                            if (inboundDateOnly > windowMinDate)
                            {
                                isValid = false;
                            }
                            break;
                    }
                }
            }
            
            instrumentationLogger.plannedCrossDocking().validatedMinMaxTimeWindow(activityContext, isValid);

            return isValid;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentationLogger</Name>
				<Source><![CDATA[
    private static WHSInstrumentationLogger instrumentationLogger()
    {
        return WHSInstrumentationLogger::createLogger(tableStr(WHSCrossDockTemplate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelection</Name>
				<Source><![CDATA[
    private void setWarehouseSelection()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::All:
                this.InventLocationId = '';
                this.WarehouseGroupId = '';
                break;

            case WhsWarehouseGroupAll::Group:
                this.InventLocationId = '';
                break;

            case WhsWarehouseGroupAll::Warehouse:
                this.WarehouseGroupId = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setWarehouseSelection();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.setWarehouseSelection();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupAll()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Group:
                if (!this.WarehouseGroupId)
                {
                    return checkFailed("@WAX:CloseContainerProfileMissingWarehouseGroup");
                }
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
        ret =  ret && this.validateWarehouseGroupAll();
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:CrossDockTemplateDocumentation</DeveloperDocumentation>
	<FormRef>WHSCrossDockingTemplate</FormRef>
	<Label>@WAX:CrossDockTemplate</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CrossDockTemplateId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>CrossDockTemplateIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CrossDockTemplateIdIdx</PrimaryIndex>
	<ReplacementKey>CrossDockTemplateIdIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandReleasePolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FEFODaysRange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocatingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumTimeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumTimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumTimeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumTimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandRequirements</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevalidateOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidateTimeWindow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandReleasePolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FEFODaysRange</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocatingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumTimeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumTimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumTimeValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumTimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandRequirements</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RevalidateOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidateTimeWindow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CrossDockTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockTemplateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CrossDockType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
			<Visible>No</Visible>
			<EnumType>WHSCrossDockType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FEFODaysRange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockFEFODaysRange</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LocatingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSCrossDockLocatingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaximumTimeValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockMaxTimeValue</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MaximumTimeUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockMaxTimeUnit</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSCrossDockWindowUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MinimumTimeValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockMinTimeValue</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MinimumTimeUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockMinTimeUnit</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSCrossDockWindowUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DemandRequirements</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>WHSCrossDockDemandRequirements</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RevalidateOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockRevalidateOnReceipt</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValidateTimeWindow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockValidateTimeWindow</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedQueryRun</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockSeqNum</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkTemplateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DemandReleasePolicy</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSCrossDockDemandReleasePolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LocationDirectiveHintCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocDirHintCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WarehouseGroupAll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsWarehouseGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarehouseGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CrossDockTemplateIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CrossDockTemplateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SequenceNumberIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SequenceNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventLocIdDemandReleasePolicyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DemandReleasePolicy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>WHSEnabled</Name>
					<RelatedField>WHSEnabled</RelatedField>
					<ValueStr>NoYes::Yes</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSWorkTemplateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTemplateCode</Name>
					<Field>WorkTemplateCode</Field>
					<RelatedField>WorkTemplateCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>WorkTransType</Name>
					<RelatedField>WorkTransType</RelatedField>
					<ValueStr>WHSWorkTransType::CrossDocking</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LocationDirectiveHintCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSLocDirHint</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LocationDirectiveHintCode</Name>
					<SourceEDT>WHSLocDirHintCode</SourceEDT>
					<Field>LocationDirectiveHintCode</Field>
					<RelatedField>LocDirHintCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WhsWarehouseGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WhsWarehouseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarehouseGroupId</Name>
					<Field>WarehouseGroupId</Field>
					<RelatedField>WarehouseGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>