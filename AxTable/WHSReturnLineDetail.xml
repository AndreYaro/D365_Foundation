<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnLineDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSReturnLineDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForReturnIdAndItemId</Name>
				<Source><![CDATA[
    internal static boolean existsForReturnIdAndItemId(
        WHSReturnID _returnID,
        ItemId      _itemId)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {
            select firstonly RecId from returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId;
        }

        return returnLineDetail.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForReturnIdItemIdAndInventoryDimensions</Name>
				<Source><![CDATA[
    internal static boolean existsForReturnIdItemIdAndInventoryDimensions(
        WHSReturnID _returnID,
        ItemId      _itemId,
        InventDim   _inventDim)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {
            InventDim inventDimExistsJoin;
            InventDimParm inventDimParm;
            inventDimParm.initFromInventDim(_inventDim);

            select firstonly RecId from returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId
                #InventDimExistsJoin(returnLineDetail.InventDimId, inventDimExistsJoin, _inventDim, inventDimParm);
        }

        return returnLineDetail.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForReturnIdAndItemId</Name>
				<Source><![CDATA[
    internal static WHSReturnLineDetail findForReturnIdAndItemId(
        WHSReturnID _returnID,
        ItemId      _itemId,
        boolean     _forUpdate  = false)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {
            returnLineDetail.selectForUpdate(_forUpdate);

            select firstonly returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId;
        }

        return returnLineDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findForReturnIdItemIdAndInventoryDimensions</Name>
				<Source><![CDATA[
    internal static WHSReturnLineDetail findForReturnIdItemIdAndInventoryDimensions(
        WHSReturnID _returnID,
        ItemId      _itemId,
        InventDim   _inventDim,
        boolean     _forUpdate  = false)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {
            returnLineDetail.selectForUpdate(_forUpdate);

            InventDim inventDimExistsJoin;
            InventDimParm inventDimParm;
            inventDimParm.initFromInventDim(_inventDim);

            select firstonly returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId
                #InventDimExistsJoin(returnLineDetail.InventDimId, inventDimExistsJoin, _inventDim, inventDimParm);
        }

        return returnLineDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxReturnUntilUTCDateTimeForReturnIdAndItemId</Name>
				<Source><![CDATA[
    internal static WHSReturnUntilUTCDateTime maxReturnUntilUTCDateTimeForReturnIdAndItemId(
        WHSReturnID _returnID,
        ItemId      _itemId)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {

            select maxof(ReturnUntilUTCDateTime) from returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId;
        }

        return returnLineDetail.ReturnUntilUTCDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxReturnUntilUTCDateTimeForReturnIdItemIdAndInventoryDimensions</Name>
				<Source><![CDATA[
    internal static WHSReturnUntilUTCDateTime maxReturnUntilUTCDateTimeForReturnIdItemIdAndInventoryDimensions(
        WHSReturnID _returnID,
        ItemId      _itemId,
        InventDim   _inventDim)
    {
        WHSReturnLineDetail returnLineDetail;

        if (_returnID
            && _itemId)
        {
            InventDim inventDimExistsJoin;
            InventDimParm inventDimParm;
            inventDimParm.initFromInventDim(_inventDim);

            select maxof(ReturnUntilUTCDateTime) from returnLineDetail
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId
                #InventDimExistsJoin(returnLineDetail.InventDimId, inventDimExistsJoin, _inventDim, inventDimParm);
        }

        return returnLineDetail.ReturnUntilUTCDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalInventQtyForReturnIdAndItemId</Name>
				<Source><![CDATA[
    internal static InventQty totalInventQtyForReturnIdAndItemId(
        WHSReturnID         _returnID,
        ItemId              _itemId,
        UnitOfMeasureSymbol _inventUOM)
    {
        InventQty totalInventQty;

        if (_returnID
            && _itemId
            && _inventUOM)
        {
            WHSReturnLineDetail returnLineDetail;

            while select sum(Qty), Unit from returnLineDetail
                group by Unit
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId
            {
                totalInventQty += EcoResReleasedProductUnitConverter::construct().convert(
                                                returnLineDetail.Qty,
                                                UnitOfMeasure::unitOfMeasureIdBySymbol(returnLineDetail.Unit),
                                                UnitOfMeasure::unitOfMeasureIdBySymbol(_inventUOM),
                                                NoYes::No,
                                                _itemId,
                                                '',
                                                NoYes::No);
            }
        }

        return totalInventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalInventQtyForReturnIdItemIdAndInventoryDimensions</Name>
				<Source><![CDATA[
    internal static InventQty totalInventQtyForReturnIdItemIdAndInventoryDimensions(
        WHSReturnID         _returnID,
        ItemId              _itemId,
        InventDim           _inventDim,
        UnitOfMeasureSymbol _inventUOM)
    {
        InventQty totalInventQty;

        if (_returnID
            && _itemId
            && _inventDim.inventDimId
            && _inventUOM)
        {
            WHSReturnLineDetail returnLineDetail;
            InventDim inventDimExistsJoin;
            InventDimParm inventDimParm;
            inventDimParm.initFromInventDim(_inventDim);

            while select sum(Qty), Unit from returnLineDetail
                group by Unit
                where returnLineDetail.ReturnID == _returnID
                    && returnLineDetail.ItemId == _itemId
                #InventDimExistsJoin(returnLineDetail.InventDimId, inventDimExistsJoin, _inventDim, inventDimParm)
            {
                totalInventQty += EcoResReleasedProductUnitConverter::construct().convert(
                                                returnLineDetail.Qty,
                                                UnitOfMeasure::unitOfMeasureIdBySymbol(returnLineDetail.Unit),
                                                UnitOfMeasure::unitOfMeasureIdBySymbol(_inventUOM),
                                                NoYes::No,
                                                _itemId,
                                                _inventDim.inventDimId,
                                                NoYes::No);
            }
        }

        return totalInventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.LineNum)
        {
            this.LineNum = this.generateNextLineNum();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateNextLineNum</Name>
				<Source><![CDATA[
    private LineNum generateNextLineNum()
    {
        WHSReturnLineDetail returnLineDetail;

        select maxof(LineNum) from returnLineDetail
            where returnLineDetail.ReturnID == this.ReturnID;

        return returnLineDetail.LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReturnDetail</Name>
				<Source><![CDATA[
    internal void initFromReturnDetail(WHSReturnDetail _returnDetail)
    {
        this.ReturnID = _returnDetail.ReturnID;
        this.OrderType = _returnDetail.OrderType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromContainerLine</Name>
				<Source><![CDATA[
    internal void initFromContainerLine(WHSContainerLine _containerLine)
    {
        this.ItemId = _containerLine.ItemId;
        this.InventDimId = this.calculateInventDimIdWithoutStorageDimensions(_containerLine.InventDimId);
        this.Qty = _containerLine.Qty;
        this.Unit = _containerLine.UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateInventDimIdWithoutStorageDimensions</Name>
				<Source><![CDATA[
    private InventDimId calculateInventDimIdWithoutStorageDimensions(InventDimId _inventDimId)
    {
        InventDim inventDim = InventDim::find(_inventDimId);
        inventDim.clearStorageDimensions();

        inventDim = InventDim::findOrCreate(inventDim);

        return inventDim.inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventDimColor</Name>
				<Source><![CDATA[
    internal display EcoResColorName displayInventDimColor()
    {
        return InventDim::find(this.InventDimId).InventColorId;

    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventDimSize</Name>
				<Source><![CDATA[
    internal display EcoResSizeName displayInventDimSize()
    {
        return InventDim::find(this.InventDimId).InventSizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventDimStyle</Name>
				<Source><![CDATA[
    internal display EcoResStyleName displayInventDimStyle()
    {
        return InventDim::find(this.InventDimId).InventStyleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayVersion</Name>
				<Source><![CDATA[
    internal display EcoResVersionName displayVersion()
    {
        return InventDim::find(this.InventDimId).InventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBatch</Name>
				<Source><![CDATA[
    internal display InventBatchId displayBatch()
    {
        return InventDim::find(this.InventDimId).inventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventSerial</Name>
				<Source><![CDATA[
    internal display InventSerialId displayInventSerial()
    {
        return InventDim::find(this.InventDimId).InventSerialId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventDimInventStatus</Name>
				<Source><![CDATA[
    internal display WHSInventStatusId displayInventDimInventStatus()
    {
        return InventDim::find(this.InventDimId).InventStatusId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInventDimConfigurationName</Name>
				<Source><![CDATA[
    internal display EcoResItemConfigurationName displayInventDimConfigurationName()
    {
        return InventDim::find(this.InventDimId).configId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSReturnLineDetail_DevDoc</DeveloperDocumentation>
	<Label>@WAX:WHSReturnLineDetail</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ReturnID</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ReturnIDLineNumIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Warehouse</Modules>
	<PrimaryIndex>ReturnIDLineNumIdx</PrimaryIndex>
	<ReplacementKey>ReturnIDLineNumIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnID</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrderType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSReturnDetailOrderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>OII</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnLineDetailQty</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Unit</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ReturnUntilUTCDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReturnUntilUTCDateTime</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReturnIDLineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReturnID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSReturnDetail</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSReturnDetail</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnID</Name>
					<Field>ReturnID</Field>
					<RelatedField>ReturnID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Unit</Name>
					<Field>Unit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>OrderType</Name>
					<Field>OrderType</Field>
					<ValueStr>WHSReturnDetailOrderType::SalesOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>