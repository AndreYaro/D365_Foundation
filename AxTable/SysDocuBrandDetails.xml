<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysDocuBrandDetails</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SysDocuBrandDetails extends common
{
    #SysDocuBrands

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayAddress</Name>
				<Source><![CDATA[
    public display Addressing displayAddress()
    {
        Addressing  address;
        Delimiter   delimiter   = ', ';
        str         findStr     = '\n';
        int         pos;

        address = LogisticsLocation::find(this.LogisticsLocationRecId).postalAddress();
        if (this.AddressCollapse == NoYes::Yes)
        {
            if (this.AddressDelimiter != "")
                delimiter = this.AddressDelimiter;

            pos = strscan(address, findStr, 1, strlen(address) );
            while (pos > 0)
            {
                address = strdel(address, pos, strlen(findStr));
                address = strins(address, delimiter, pos);
                pos     = strscan(address, findStr, pos + strlen(delimiter), strlen(address));
            }
        }
        return address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RefRecId _recid)
    {
        SysDocuBrandDetails table;

        select firstonly RecId from table where
               table.RecId == _recid;

        return (table.Recid != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetails find(RefRecId _recid, boolean _forUpdate = false)
    {
        SysDocuBrandDetails table;

        table.SelectForUpdate(_forUpdate);

        select table where
               table.RecId == _recid;

        return table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBrandDocument</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetails findBrandDocument(SysDocuBrandId brandId, SRSReportName reportName, SRSReportDesignName designName, boolean isForUpdate = false)
    {
        SysDocuBrandDetails table;

        table.SelectForUpdate(isForUpdate);

        select table where
               table.BrandId == brandId &&
               table.ReportName             == reportName &&
               table.DesignName             == designName;

        return table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDocuBrandDetails</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetails getDefaultDocuBrandDetails(SysDocuBrandContract docuBrandContract)
    {
        SysDocuBrandDetails table;

        // check for a valid contract
        if (docuBrandContract)
        {
            RefRecId recid;

            while select * from table where
                       table.BrandId == docuBrandContract.parmBrandId() &&
                       ( ( table.ReportName == docuBrandContract.parmReportName() &&
                           table.DesignName == docuBrandContract.parmDesignName() ) ||
                         ( table.ReportName == '' && table.DesignName == '' ) )
            {
                recid = table.RecId;

                // select the specific document details when available
                if (table.ReportName == docuBrandContract.parmReportName())
                {
                    break;
                }
            }

            table = SysDocuBrandDetails::find(recid);
        }
        else
        {
            SysDocuBrands::createDefaultSettings();
            SysDocuBrandDetails::createDefaultSettings();

            select table where table.BrandId == curExt();
        }

        return table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocuBrandDetailsTmp</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetailsTmp getDocuBrandDetailsTmp(SrsReportDataProviderBase dataProvider)
    {
        SysDocuBrandDetailsTmp tableTmp;

        if (dataProvider)
        {
            SysDocuBrandDetails table  = SysDocuBrandDetails::getBrandDocument(dataProvider.parmDocuBrandContract());
            tableTmp.Address           = table.Address;
            tableTmp.Email             = table.Email;
            tableTmp.Name              = table.BrandName;
            tableTmp.BrandId           = table.BrandId;
            tableTmp.Image1            = table.Image1;
            tableTmp.Image2            = table.Image2;
            tableTmp.Image3            = table.Image3;
            tableTmp.NotesLine1        = table.NotesLine1;
            tableTmp.NotesLine2        = table.NotesLine2;
            tableTmp.NotesLine3        = table.NotesLine3;
            tableTmp.Phone             = table.Phone;
            tableTmp.PhoneLocal        = table.PhoneLocal;
            tableTmp.TeleFax           = table.TeleFax;
            tableTmp.URL               = table.URL;
            tableTmp.PrimaryColor      = table.PrimaryColor;
            tableTmp.SecondaryColor    = table.SecondaryColor;
        }

        return tableTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocuBrandDetailsRegular</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetailsRegular getDocuBrandDetailsRegular(SrsReportDataProviderBase dataProvider)
    {
        SysDocuBrandDetailsRegular tableTmp;

        if (dataProvider)
        {
            SysDocuBrandDetails table  = SysDocuBrandDetails::getBrandDocument(dataProvider.parmDocuBrandContract());
            tableTmp.Address           = table.Address;
            tableTmp.Email             = table.Email;
            tableTmp.Name              = table.BrandName;
            tableTmp.BrandId           = table.BrandId;
            tableTmp.Image1            = table.Image1;
            tableTmp.Image2            = table.Image2;
            tableTmp.Image3            = table.Image3;
            tableTmp.NotesLine1        = table.NotesLine1;
            tableTmp.NotesLine2        = table.NotesLine2;
            tableTmp.NotesLine3        = table.NotesLine3;
            tableTmp.Phone             = table.Phone;
            tableTmp.PhoneLocal        = table.PhoneLocal;
            tableTmp.TeleFax           = table.TeleFax;
            tableTmp.URL               = table.URL;
            tableTmp.PrimaryColor      = table.PrimaryColor;
            tableTmp.SecondaryColor    = table.SecondaryColor;
        }

        return tableTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBrandDocument</Name>
				<Source><![CDATA[
    public static SysDocuBrandDetails getBrandDocument(SysDocuBrandContract docuBrandContract)
    {
        SysDocuBrandDetails         docuBrandDetails;
        SysDocuBrandDetails         ret;

        ret.setTmp();

        // retrieve the document branding details for the session
        docuBrandDetails = SysDocuBrandDetails::getDefaultDocuBrandDetails(docuBrandContract);

        if (docuBrandDetails && docuBrandDetails.RecId != 0)
        {
            // fill in the document branding details
            ret.BrandId                 = docuBrandDetails.BrandId;
            ret.BrandName               = docuBrandDetails.BrandName;
            ret.Email                   = docuBrandDetails.Email;
            ret.Image1Name              = docuBrandDetails.Image1Name;
            ret.Image2Name              = docuBrandDetails.Image2Name;
            ret.Image3Name              = docuBrandDetails.Image3Name;
            ret.LogisticsLocationRecId  = docuBrandDetails.LogisticsLocationRecId;
            ret.NotesLine1              = docuBrandDetails.NotesLine1;
            ret.NotesLine2              = docuBrandDetails.NotesLine2;
            ret.NotesLine3              = docuBrandDetails.NotesLine3;
            ret.Phone                   = docuBrandDetails.Phone;
            ret.PhoneLocal              = docuBrandDetails.PhoneLocal;
            ret.TeleFax                 = docuBrandDetails.TeleFax;
            ret.URL                     = docuBrandDetails.URL;
            ret.PrimaryColor            = docuBrandDetails.PrimaryColor;
            ret.SecondaryColor          = docuBrandDetails.SecondaryColor;
            ret.AddressCollapse         = docuBrandDetails.AddressCollapse;
            ret.AddressDelimiter        = docuBrandDetails.AddressDelimiter;
        }
        else
        {
            CompanyInfo companyInfo = CompanyInfo::find();

            // set the document branding defaults
            ret.BrandName               = companyInfo.Name;
            ret.Email                   = companyInfo.primaryEmail();
            ret.Image1Name              = "";
            ret.Image2Name              = "";
            ret.Image3Name              = "";
            ret.LogisticsLocationRecId  = companyInfo.PrimaryAddressLocation;
            ret.NotesLine1              = "";
            ret.NotesLine2              = "";
            ret.NotesLine3              = "";
            ret.Phone                   = companyInfo.primaryPhone();
            ret.PhoneLocal              = companyInfo.phoneLocal();
            ret.TeleFax                 = companyInfo.primaryFax();
            ret.URL                     = companyInfo.primaryURL();
            ret.PrimaryColor            = "#999999";
            ret.SecondaryColor          = "#CCCCCC";
            ret.AddressCollapse         = NoYes::No;
        }

        if (ret.LogisticsLocationRecId != 0)
        {
            ret.Address = ret.displayAddress();
        }

        if (ret.Image1Name)
        {
            ret.Image1  = SysDocuBrandImages::getImage(ret.Image1Name);
        }

        if (ret.Image2Name)
        {
            ret.Image2  = SysDocuBrandImages::getImage(ret.Image2Name);
        }

        if (ret.Image3Name)
        {
            ret.Image3  = SysDocuBrandImages::getImage(ret.Image3Name);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefaultSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create default settings in <c>SysDocuBrandDetails</c> table for cases
    /// that no brand info is set up or a fresh system.
    /// </summary>
    public static void createDefaultSettings()
    {
        str curCompany = curExt();

        if (!SysDocuBrandDetails::brandExist(curCompany))
        {
            SysDocuBrands::createDefaultSettings();

            SysDocuBrandDetails table;
            ttsbegin;
            table.clear();
            table.BrandId = strUpr(curCompany);
            CompanyInfo companyInfo = CompanyInfo::find();
            table.BrandName               = companyInfo.Name;
            table.Email                   = companyInfo.primaryEmail();
            table.Image1Name              = "";
            table.Image2Name              = "";
            table.Image3Name              = "";
            table.LogisticsLocationRecId  = companyInfo.PrimaryAddressLocation;
            table.NotesLine1              = "";
            table.NotesLine2              = "";
            table.NotesLine3              = "";
            table.Phone                   = companyInfo.primaryPhone();
            table.PhoneLocal              = companyInfo.phoneLocal();
            table.TeleFax                 = companyInfo.primaryFax();
            table.URL                     = companyInfo.primaryURL();
            table.PrimaryColor            = #PrimaryColor;
            table.SecondaryColor          = #SecondaryColor;
            table.AddressCollapse         = NoYes::No;

            table.insert();
            ttscommit;
        }
	}

]]></Source>
			</Method>
			<Method>
				<Name>brandExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate whether a specific brand is existing in the table
    /// </summary>
    /// <param name = "brandId">The brand id.</param>
    /// <returns><c>True</c> if the brand is existing, otherwise, <c>False</c></returns>
    private static boolean brandExist(SysDocuBrandId brandId)
    {
        SysDocuBrandDetails table;

        select firstonly RecId from table where
               table.BrandId == brandId;

        return (table.Recid != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>Document Branding</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>BrandId</TitleField1>
	<TitleField2>ReportName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>SystemAdministration</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS22223</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LogisticsLocationRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressDelimiter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressCollapse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS80370</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhoneLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TeleFax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Notes</Name>
			<Label>@SYS40182</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NotesLine1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NotesLine2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NotesLine3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BrandId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DesignName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TempFields</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Address</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Address</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
			<StringSize>250</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AddressCollapse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>Collapse address</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AddressDelimiter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Delimiter</ExtendedDataType>
			<Label>Address separator</Label>
			<StringSize>5</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BrandId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SysDocuBrandId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BrandName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
			<StringSize>80</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Image1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Bitmap</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Image1Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysDocuBrandImageRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Image2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Bitmap</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Image2Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysDocuBrandImageRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Image3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Bitmap</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Image3Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysDocuBrandImageRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsLocationRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NotesLine1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NotesLine</ExtendedDataType>
			<StringSize>254</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NotesLine2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NotesLine</ExtendedDataType>
			<StringSize>254</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NotesLine3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NotesLine</ExtendedDataType>
			<StringSize>254</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhoneLocal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneLocal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrimaryColor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>String30</ExtendedDataType>
			<Label>@SYS63258</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SecondaryColor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>String30</ExtendedDataType>
			<Label>@SYS30441</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SRSReportName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DesignName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SRSReportDesignName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TeleFax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>URL</ExtendedDataType>
			<StringSize>255</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>LogisticsLocationRecId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysDocuBrandDetails</Name>
			<RelatedTable>SysDocuBrands</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BrandId</Name>
					<Field>BrandId</Field>
					<RelatedField>BrandId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SysDocuBrandImage1</Name>
			<RelatedTable>SysDocuBrandImages</RelatedTable>
			<RelatedTableRole>SysDocuBrandImage1</RelatedTableRole>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Image1Name</Name>
					<Field>Image1Name</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SysDocuBrandImage2</Name>
			<RelatedTable>SysDocuBrandImages</RelatedTable>
			<RelatedTableRole>SysDocuBrandImage2</RelatedTableRole>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Image2Name</Name>
					<Field>Image2Name</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SysDocuBrandImage3</Name>
			<RelatedTable>SysDocuBrandImages</RelatedTable>
			<RelatedTableRole>SysDocuBrandImage3</RelatedTableRole>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Image3Name</Name>
					<Field>Image3Name</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsLocation_BrandDocumentTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsPostalAddress</Name>
					<RelatedField>IsPostalAddress</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsLocationRecId</Name>
					<Field>LogisticsLocationRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>