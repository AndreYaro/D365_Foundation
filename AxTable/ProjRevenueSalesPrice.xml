<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjRevenueSalesPrice</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjRevenueSalesPrice extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(FieldId p1)
    {
        boolean         ret;
        ProjCategory    projCategory;

        ret = super(p1);

        switch (p1)
        {
            case(fieldNum(ProjRevenueSalesPrice, CategoryId)):
            if (this.CategoryId)
                {
                    projCategory    = ProjCategory::find(this.CategoryId);
                    if (projCategory.CategoryType != ProjCategoryType::Revenue)
                    {
                        ret = checkFailed(strFmt("@SYS56468",ProjTransType::Revenue));
                    }

                    if (ret && (projCategory.SetupEstimate || projCategory.SetupSubscription))
                    {
                        ret = checkFailed("@SYS88806");
                    }
                }
                break;

            case(fieldNum(ProjRevenueSalesPrice, Resource)):
            ret = ret && ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        boolean checkTable = true;

        ret = super();

        if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
        {
            switch (this.ProjValidFor)
            {
                case TableGroupAll::Table:
                    if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
                    {
                        checkTable = !this.psaProjInvoiceProjId && !this.psaCustAccount;
                    }
                    if (!this.ProjId && checkTable)
                    {
                        return checkFailed("@SYS37928");
                    }
                    break;

                case TableGroupAll::GroupId:
                    if (!this.ProjPriceGroup)
                    {
                        return checkFailed("@SYS103188");
                    }
                    break;
            }
        }

        ret = ret && ResourceFacade::checkResourceIsInCurrentCompany(this.Resource);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceGroupInUse</Name>
				<Source><![CDATA[
    static boolean checkPriceGroupInUse(ProjPriceGroupID  priceGroup)
    {
        return (select firstonly RecId from projRevenueSalesPrice
                where projRevenueSalesPrice.ProjPriceGroup == priceGroup).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static ProjRevenueSalesPrice find(ProjId                    _projId,
                                  ResourceRecId             _resource,
                                  ProjCategoryId            _categoryId,
                                  CurrencyCode              _currency       = Ledger::accountingCurrency(CompanyInfo::current()),
                                  TransDate                 _transDate      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                  ProjPriceGroupValidFor    _projValidFor   = TableGroupAll::All,
                                  ProjPriceGroupID          _projPriceGroup = '',
                                  CustAccount               _spsaCustAccount = "",
                                  ProjInvoiceProjId         _spsaProjInvoiceProjId = "",
                                  ResourceCategoryRecId     _resourceCategory = 0,
                                  boolean                   _forUpdate = false)
    {
        ProjRevenueSalesPrice projRevenueSalesPrice = null;

        projRevenueSalesPrice.selectForUpdate(_forUpdate);

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
            {
                select reverse projRevenueSalesPrice
                order by ProjValidFor
                where projRevenueSalesPrice.ProjId                  == _projId         &&
                      projRevenueSalesPrice.ProjPriceGroup          == _projPriceGroup &&
                      projRevenueSalesPrice.Resource                == _resource    &&
                      projRevenueSalesPrice.CategoryId              == _categoryId     &&
                      projRevenueSalesPrice.CurrencyId              == _currency       &&
                      projRevenueSalesPrice.psaCustAccount          == _spsaCustAccount         &&
                      projRevenueSalesPrice.psaProjInvoiceProjId    == _spsaProjInvoiceProjId   &&
                      projRevenueSalesPrice.TransDate               <= _transDate &&
                      projRevenueSalesPrice.ResourceCategory        == _resourceCategory;
            }
            else
            {
                select reverse projRevenueSalesPrice
                order by TransDate
                where projRevenueSalesPrice.ProjId                  == _projId     &&
                      projRevenueSalesPrice.Resource                == _resource  &&
                      projRevenueSalesPrice.CategoryId              == _categoryId &&
                      projRevenueSalesPrice.CurrencyId              == _currency   &&
                      projRevenueSalesPrice.psaCustAccount          == _spsaCustAccount         &&
                      projRevenueSalesPrice.psaProjInvoiceProjId    == _spsaProjInvoiceProjId   &&
                      projRevenueSalesPrice.TransDate               <= _transDate  &&
                      projRevenueSalesPrice.ResourceCategory        == _resourceCategory;
            }
        }
        else
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(PriceDisc)))
            {
                select reverse projRevenueSalesPrice
            order by ProjValidFor, TransDate
            where projRevenueSalesPrice.ProjValidFor        == _projValidFor   &&
                  projRevenueSalesPrice.ProjId              == _projId         &&
                  projRevenueSalesPrice.ProjPriceGroup      == _projPriceGroup &&
                  projRevenueSalesPrice.Resource            == _resource    &&
                  projRevenueSalesPrice.CategoryId          == _categoryId     &&
                  projRevenueSalesPrice.CurrencyId          == _currency       &&
                  projRevenueSalesPrice.TransDate           <= _transDate      &&
                  projRevenueSalesPrice.ResourceCategory    == _resourceCategory;
            }
            else
            {
                select reverse projRevenueSalesPrice
            order by TransDate
            where projRevenueSalesPrice.ProjId              == _projId     &&
                  projRevenueSalesPrice.Resource            == _resource  &&
                  projRevenueSalesPrice.CategoryId          == _categoryId &&
                  projRevenueSalesPrice.CurrencyId          == _currency   &&
                  projRevenueSalesPrice.TransDate           <= _transDate  &&
                  projRevenueSalesPrice.ResourceCategory    == _resourceCategory;
            }
        }
        return projRevenueSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProjRevenueSalesPrice</Name>
				<Source><![CDATA[
    public static container findProjRevenueSalesPrice(ProjId   _projId,
                                                                ResourceRecId          _resource,
                                                                ProjCategoryId         _categoryId,
                                                                CurrencyCode           _currency    = CompanyInfoHelper::standardCurrency(),
                                                                TransDate              _transDate   = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                                ProjPriceGroupID       _priceGroupId = '',
                                                                boolean                _ignoreCustomerPriceGroup = false,
                                                                ResourceCategoryRecId  _resourceCategory = 0,
																ProjInvoiceProjId      _projInvoiceProjId='',
																CustAccount            _custAccount='')
    {
        ProjRevenueSalesPrice   projRevenueSalesPrice;
        ProjId                  projId = _projId;
        ProjPriceGroupValidFor  projValidFor;
        ProjPriceGroupID        projPriceGroup;
        ResourceCategoryRecId   resourceCategory = _resourceCategory;

        boolean     priceFound = false; // returns TRUE if a matching record in table projRevenueSalesPrice is returned even if its a zero sales price.
        boolean     isPriceDiscConfigEnabled = isConfigurationkeyEnabled(configurationKeyNum(PriceDisc));

        ProjOpsPricingLogger logger = ProjOpsPricingLogger::createLogger(tableStr(ProjRevenueSalesPrice));

        using (var activityContext = logger.projOpsPricingActivity().codeInstrumentationContext(tableStaticMethodStr(ProjRevenueSalesPrice, findProjRevenueSalesPrice)))
        {
            activityContext.addCustomProperty('isPriceDiscConfigEnabled', any2Str(isPriceDiscConfigEnabled));

            // Salesprice for fixedPrice && internal projects are always set to zero
            ProjTable projTableLocal = ProjTable::find(projId);
            boolean isInternalProj = ProjMultipleContractLinesForProjectFeatureHelper::isInternalProject(projTableLocal);
            boolean isFixedPriceBilling = ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(projTableLocal, ProjTransType::Revenue);
            if (isInternalProj || isFixedPriceBilling)
            {
                activityContext.addCustomProperty('isInternalProj', any2Str(isInternalProj));
                activityContext.addCustomProperty('isFixedPriceBilling', any2Str(isFixedPriceBilling));
                return [0, false];
            }

            if (!resourceCategory && _resource)
            {
                resourceCategory = ResourceFacade::getResourceCategory(_resource, _transDate);
            }

            int loopCount = 0;
            int findCount = 0;

            do
            {
                loopCount++;

                // Look for sales price using price group feature
                if (isPriceDiscConfigEnabled)
                {
                    // Look for sales price in Valid For = Table
                    projValidFor = TableGroupAll::Table;

                    if (projId && _resource && resourceCategory)
                    {
                        findCount++;
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
                    }

                    if (!(projRevenueSalesPrice))
                    {
                        if (projId && _resource && _categoryId)
                        {
                            findCount++;
                            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, _categoryId, _currency, _transDate, projValidFor, '');
                        }

                        if (!(projRevenueSalesPrice))
                        {
                            if (projId && _resource)
                            {
                                findCount++;
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate, projValidFor, '');
                            }

                            if (!(projRevenueSalesPrice))
                            {
                                if (projId && resourceCategory)
                                {
                                    findCount++;
                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
                                }

                                if (!(projRevenueSalesPrice))
                                {
                                    if (projId && _categoryId)
                                    {
                                        findCount++;
                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, _categoryId, _currency, _transDate, projValidFor, '');
                                    }

                                    if (!(projRevenueSalesPrice))
                                    {
                                        if (projId)
                                        {
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate, projValidFor, '');
                                        }
                                        if (!(projRevenueSalesPrice))
                                        {
                                            // find by contract
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::findByContractResourceCategory(_projInvoiceProjId,_resource,_categoryId,_currency,_transDate,projValidFor);

                                            if (!(projRevenueSalesPrice))
                                            {
                                                //find by customer
                                                findCount++;
                                                projRevenueSalesPrice= ProjRevenueSalesPrice::findByCustomerResourceCategory(_custAccount,_resource,_categoryId,_currency,_transDate,projValidFor);
                                            }
                                            if (!(projRevenueSalesPrice))
                                            {
                                                if (_categoryId && _resource)
                                                {
                                                    findCount++;
                                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate, projValidFor);
                                                }
                                                if (!(projRevenueSalesPrice))
                                                {
                                                    if (_resource)
                                                    {
                                                        findCount++;
                                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, projValidFor);
                                                    }
                                                    if (!(projRevenueSalesPrice))
                                                    {
                                                        if (_categoryId && !_priceGroupId)
                                                        {
                                                            findCount++;
                                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate, projValidFor);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    // Look for sales price in Valid For = Group
                    if (!(projRevenueSalesPrice))
                    {
                        if (_ignoreCustomerPriceGroup)
                        {
                            projPriceGroup = _priceGroupId;
                        }
                        else
                        {
                            projPriceGroup = ProjTable::findPriceGroup(_projId);
                        }

                        if (projPriceGroup)
                        {
                            projValidFor = TableGroupAll::GroupId;

                            if (_resource && resourceCategory)
                            {
                                findCount++;
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, projValidFor, projPriceGroup, '', '', resourceCategory);
                            }

                            if (!(projRevenueSalesPrice))
                            {
                                if (_resource && _categoryId)
                                {
                                    findCount++;
                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate, projValidFor, projPriceGroup);
                                }

                                if (!(projRevenueSalesPrice))
                                {
                                    if (_resource)
                                    {
                                        findCount++;
                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, projValidFor, projPriceGroup);
                                    }

                                    if (!(projRevenueSalesPrice))
                                    {
                                        if (resourceCategory)
                                        {
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, projPriceGroup, '', '', resourceCategory);
                                        }

                                        if (!(projRevenueSalesPrice))
                                        {
                                            if (_categoryId)
                                            {
                                                findCount++;
                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate, projValidFor, projPriceGroup);
                                            }

                                            if (!(projRevenueSalesPrice))
                                            {
                                                findCount++;
                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, projPriceGroup);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    // Look for sales price in Valid For = All
                    if (!(projRevenueSalesPrice))
                    {
                        projValidFor = TableGroupAll::All;

                        if (_resource && resourceCategory)
                        {
                            findCount++;
                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
                        }

                        if (!(projRevenueSalesPrice))
                        {
                            if (_resource && _categoryId)
                            {
                                findCount++;
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate, projValidFor, '');
                            }

                            if (!(projRevenueSalesPrice))
                            {
                                if (_resource)
                                {
                                    findCount++;
                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, projValidFor, '');
                                }

                                if (!(projRevenueSalesPrice))
                                {
                                    if (resourceCategory)
                                    {
                                        findCount++;
                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
                                    }

                                    if (!(projRevenueSalesPrice))
                                    {
                                        if (_categoryId)
                                        {
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate, projValidFor, '');
                                        }

                                        if (!(projRevenueSalesPrice))
                                        {
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, '');
                                        }
                                    }
                                }
                            }
                        }
                    }

                    projId  = ProjTable::find(projId).ParentId;

                    if (projId && !projRevenueSalesPrice.ProjId)
                    {
                        findCount++;
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, _categoryId, _currency, _transDate, TableGroupAll::Table, '', '', '', resourceCategory);
                    }
                }

                // Look for sales price without price group feature
                else
                {
                    if (projId && _resource && resourceCategory)
                    {
                        findCount++;
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                    }

                    if (!(projRevenueSalesPrice))
                    {
                        if (projId && _resource && _categoryId)
                        {
                            findCount++;
                            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, _categoryId, _currency, _transDate);
                        }

                        if (!(projRevenueSalesPrice))
                        {
                            if (projId && _resource)
                            {
                                findCount++;
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate);
                            }

                            if (!(projRevenueSalesPrice))
                            {
                                if (projId && resourceCategory)
                                {
                                    findCount++;
                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                                }

                                if (!(projRevenueSalesPrice))
                                {
                                    if (projId && _categoryId)
                                    {
                                        findCount++;
                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, _categoryId, _currency, _transDate);
                                    }

                                    if (!(projRevenueSalesPrice))
                                    {
                                        if (projId)
                                        {
                                            findCount++;
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate);
                                        }

                                        if (!(projRevenueSalesPrice))
                                        {
                                            if (_resource && resourceCategory)
                                            {
                                                findCount++;
                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                                            }

                                            if (!(projRevenueSalesPrice))
                                            {
                                                if (_resource)
                                                {
                                                    findCount++;
                                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate);
                                                }

                                                if (!(projRevenueSalesPrice))
                                                {
                                                    if (resourceCategory)
                                                    {
                                                        findCount++;
                                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                                                    }

                                                    if (!(projRevenueSalesPrice))
                                                    {
                                                        if (_resource && _categoryId)
                                                        {
                                                            findCount++;
                                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate);
                                                        }

                                                        if (!(projRevenueSalesPrice))
                                                        {
                                                            if (_categoryId)
                                                            {
                                                                findCount++;
                                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate);
                                                            }

                                                            if (!(projRevenueSalesPrice))
                                                            {
                                                                findCount++;
                                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    projId  = ProjTable::find(projId).ParentId;

                    if (projId && !projRevenueSalesPrice.ProjId)
                    {
                        findCount++;
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, _categoryId, _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                    }
                }
            }
            while (!projRevenueSalesPrice && projId);

            priceFound = (projRevenueSalesPrice.RecId);

            activityContext.addCustomProperty('projRevenueSalesPrice.RecId', any2Str(projRevenueSalesPrice.RecId));
            activityContext.addCustomProperty('loopCount', any2Str(loopCount));
            activityContext.addCustomProperty('findCount', any2Str(findCount));
        }

        return [projRevenueSalesPrice.SalesPrice, priceFound];
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaFindCustSalesPrice</Name>
				<Source><![CDATA[
    public static SalesPrice psaFindCustSalesPrice(ProjId                 projId,
                                                             CustAccount            _custAccount,
                                                             ResourceRecId          _resource,
                                                             ProjCategoryId         _categoryId,
                                                             CurrencyCode           _currency    = CompanyInfoHelper::standardCurrency(),
                                                             TransDate              _transDate   = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                             ResourceCategoryRecId  _resourceCategory = 0)
    {
        ProjRevenueSalesPrice   projRevenueSalesPrice;
        ProjPriceGroupValidFor  projValidFor;
        ResourceCategoryRecId   resourceCategory = _resourceCategory;

        if (!isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            return 0.0;
        }

        if (!resourceCategory && _resource)
        {
            resourceCategory = ResourceFacade::getResourceCategory(_resource, _transDate);
        }

        projValidFor = TableGroupAll::Table;

        if (projId && _resource && resourceCategory)
        {
            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
        }

        if (!(projRevenueSalesPrice))
        {
            if (projId && _resource)
            {
                projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, '', _currency, _transDate, projValidFor, '');
            }

            if (!(projRevenueSalesPrice))
            {
                if (projId && resourceCategory)
                {
                    projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate, projValidFor, '', '', '', resourceCategory);
                }

                if (!(projRevenueSalesPrice))
                {
                    if (projId && _resource && _categoryId)
                    {
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, _resource, _categoryId, _currency, _transDate, projValidFor, '');
                    }

                    if (!(projRevenueSalesPrice))
                    {
                        if (projId && _categoryId)
                        {
                            projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, _categoryId, _currency, _transDate, projValidFor, '');
                        }

                        if (!(projRevenueSalesPrice))
                        {
                            if (projId)
                            {
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find(projId, 0, '', _currency, _transDate, projValidFor, '');
                            }
                        }
                    }
                }
            }
        }

        if (!(projRevenueSalesPrice))
        {
            if (_custAccount && _resource && resourceCategory)
            {
                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, TableGroupAll::All, '', _custAccount, '', resourceCategory);
            }

            if (!(projRevenueSalesPrice))
            {
                if (_custAccount && _resource)
                {
                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, TableGroupAll::All, '', _custAccount);
                }

                if (!(projRevenueSalesPrice))
                {
                    if (_custAccount && resourceCategory)
                    {
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, TableGroupAll::All, '', _custAccount, '', resourceCategory);
                    }

                    if (!(projRevenueSalesPrice))
                    {
                        if (_custAccount && _resource && _categoryId)
                        {
                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate, TableGroupAll::All, '', _custAccount);
                        }

                        if (!(projRevenueSalesPrice))
                        {
                            if (_custAccount && _categoryId)
                            {
                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate, TableGroupAll::All, '', _custAccount);
                            }

                            if (!(projRevenueSalesPrice))
                            {
                                if (_custAccount)
                                {
                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, TableGroupAll::All, '', _custAccount);
                                }

                                if (!(projRevenueSalesPrice))
                                {
                                    if (_resource && resourceCategory)
                                    {
                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                                    }

                                    if (!(projRevenueSalesPrice))
                                    {
                                        if (_resource)
                                        {
                                            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, '', _currency, _transDate);
                                        }

                                        if (!(projRevenueSalesPrice))
                                        {
                                            if (resourceCategory)
                                            {
                                                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, TableGroupAll::All, '', '', '', resourceCategory);
                                            }

                                            if (!(projRevenueSalesPrice))
                                            {
                                                if (_resource && _categoryId)
                                                {
                                                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resource, _categoryId, _currency, _transDate);
                                                }

                                                if (!(projRevenueSalesPrice))
                                                {
                                                    if (_categoryId)
                                                    {
                                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, _categoryId, _currency, _transDate);
                                                    }

                                                    if (!(projRevenueSalesPrice))
                                                    {
                                                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return projRevenueSalesPrice ? projRevenueSalesPrice.SalesPrice : 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByContractResourceCategory</Name>
				<Source><![CDATA[
    private static ProjRevenueSalesPrice findByContractResourceCategory(ProjInvoiceProjId _projInvoiceProjId, ResourceRecId _resourceRecId, CategoryId _categoryId, CurrencyCode _currency,TransDate _transDate,ProjPriceGroupValidFor projValidFor = TableGroupAll::All)
    {
        ProjRevenueSalesPrice projRevenueSalesPrice;

        if (_projInvoiceProjId && _resourceRecId && _categoryId)
        {
            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resourceRecId, _categoryId, _currency, _transDate, projValidFor, '','',_projInvoiceProjId);
        }

        if (!(projRevenueSalesPrice))
        {
            if (_projInvoiceProjId && _resourceRecId)
            {
                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resourceRecId, '', _currency, _transDate, projValidFor, '','',_projInvoiceProjId);
            }

            if (!(projRevenueSalesPrice))
            {
                if (_projInvoiceProjId && _categoryId)
                {
                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0,_categoryId, _currency, _transDate, projValidFor, '','',_projInvoiceProjId);
                }

                if (!(projRevenueSalesPrice))
                {
                    if (_projInvoiceProjId)
                    {
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, '','',_projInvoiceProjId);
                    }
                }
            }
        }

        return projRevenueSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustomerResourceCategory</Name>
				<Source><![CDATA[
    private static ProjRevenueSalesPrice findByCustomerResourceCategory(CustAccount _custAccount, ResourceRecId _resourceRecId, CategoryId _categoryId, CurrencyCode _currency,TransDate _transDate,ProjPriceGroupValidFor projValidFor= TableGroupAll::All)
    {
        ProjRevenueSalesPrice projRevenueSalesPrice;

        if (_custAccount && _resourceRecId && _categoryId)
        {
            projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resourceRecId, _categoryId, _currency, _transDate, projValidFor, '',_custAccount,'');
        }

        if (!(projRevenueSalesPrice))
        {
            if (_custAccount && _resourceRecId)
            {
                projRevenueSalesPrice = ProjRevenueSalesPrice::find('', _resourceRecId, '', _currency, _transDate, projValidFor, '',_custAccount,'');
            }
            if (!(projRevenueSalesPrice))
            {
                if (_custAccount && _categoryId)
                {
                    projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0,_categoryId, _currency, _transDate, projValidFor, '',_custAccount,'');
                }

                if (!(projRevenueSalesPrice))
                {
                    if (_custAccount)
                    {
                        projRevenueSalesPrice = ProjRevenueSalesPrice::find('', 0, '', _currency, _transDate, projValidFor, '',_custAccount,'');
                    }
                }
            }
        }

        return projRevenueSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when a buffer is inserted as a new record.
    /// This is overriden to ensure that the ExtensionHash field is calculated before insertion into the database.
    /// </summary>
    public void insert()
    {
        // Compute the hash for this instance
        ProjExtensionHashCalculator hashCalculator = ProjExtensionHashCalculator::construct();
        ProjRevenueSalesPrice::getExtensionFields(hashCalculator);
        this.ExtensionHash = hashCalculator.calculateHash(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when a buffer is updated in a transaction.
    /// This is override to ensure that the ExtensionHash field is calculated before insertion into the database.
    /// </summary>
    public void update()
    {
        // Update the hash for this instance
        ProjExtensionHashCalculator hashCalculator = ProjExtensionHashCalculator::construct();
        ProjRevenueSalesPrice::getExtensionFields(hashCalculator);
        this.ExtensionHash = hashCalculator.calculateHash(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtensionFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enumerates extension fields of this table, by registering them with the '_hashCalculator' object.
    /// This is the the intended CoC extension point for table extensions to register fields included in the hash.
    /// </summary>
    public static void getExtensionFields(ProjExtensionHashCalculator _hashCalculator)
    {
        // ex: _hashCalculator.addExtensionField(fieldNum(ProjRevenueSalesPrice, MyCustomField), defaultFieldValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS125003</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>ProjSalesPriceRevenue</FormRef>
	<Label>@SYS75856</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProjId</TitleField1>
	<TitleField2>TransDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ProjCatEmplDateIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjValidFor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PSACustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PSAProjInvoiceProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjValidFor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Label>@SYS56480</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjPriceGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPriceGroupID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjValidFor</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPriceGroupValidFor</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PSACustAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PSAProjInvoiceProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjInvoiceProjId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceCategory</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesPricing</ExtendedDataType>
			<Label>@SYS5755</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS50168</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExtensionHash</Name>
			<ExtendedDataType>ProjExtensionHash</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjCatEmplDateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjValidFor</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjPriceGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PSACustAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PSAProjInvoiceProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Resource</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ResourceCategory</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExtensionHash</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ResourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Resource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>Currency_ProjRevenueSalesPrice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyId</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyId</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PSACustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>PSACustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PriceDiscGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscGroup_ProjRevenueSalesPrice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjPriceGroup</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<Field>ProjPriceGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module</Name>
					<SourceEDT>ProjPriceGroupID</SourceEDT>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjCategory_ProjRevenueSalesPrice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjInvoiceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PSAProjInvoiceProjId</Name>
					<SourceEDT>ProjInvoiceProjId</SourceEDT>
					<Field>PSAProjInvoiceProjId</Field>
					<RelatedField>ProjInvoiceProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjInvoiceIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjTable_ProjRevenueSalesPrice</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceCategoryView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResourceCategory</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>