<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOnHoldHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendOnHoldHistory extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createHistoryRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new history record for each change of the <c>OnHold</c> checkboxes in the vendor profile.
    /// </summary>
    /// <param name="_vendAccount">
    ///    The vendor account number for the modified vendor record.
    /// </param>
    /// <param name="_blocked">
    ///    The updated <c>OnHold</c> value.
    /// </param>
    /// <param name="_reasonCode">
    ///    The updated <c>ReasonCode</c> value.
    /// </param>
    public static void createHistoryRecord(VendAccount _vendAccount, VendBlocked _blocked, ReasonCode _reasonCode = '')
    {
        VendOnHoldHistory vendOnHoldHistory;
        ReasonComment     reasonComment;

        if (_reasonCode)
        {
            reasonComment = ReasonTable::find(_reasonCode).Description;
        }

        //we have to check for existing if pre-dating history
        select forupdate firstonly vendOnHoldHistory where
            vendOnHoldHistory.VendAccount == _vendAccount &&
            vendOnHoldHistory.OnHold == _blocked &&
            vendOnHoldHistory.ValidFrom >= DateTimeUtil::getSystemDateTime();

        if (vendOnHoldHistory)
        {
            ttsbegin;
            vendOnHoldHistory.ValidFrom = DateTimeUtil::getSystemDateTime();
            vendOnHoldHistory.ReasonCode = _reasonCode;
            vendOnHoldHistory.ReasonComment = reasonComment;
            vendOnHoldHistory.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
            vendOnHoldHistory.update();
            ttscommit;
        }
        else
        {
            ttsbegin;
            vendOnHoldHistory.clear();
            vendOnHoldHistory.initValue();
            vendOnHoldHistory.VendAccount = _vendAccount;
            vendOnHoldHistory.OnHold = _blocked;
            vendOnHoldHistory.ValidFrom = DateTimeUtil::getSystemDateTime();
            vendOnHoldHistory.ValidTo = DateTimeUtil::maxValue();
            vendOnHoldHistory.ReasonCode = _reasonCode;
            vendOnHoldHistory.ReasonComment = reasonComment;
            vendOnHoldHistory.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>VendOnHoldHistory</c> record.
    /// </summary>
    /// <param name="_vendAccount">
    ///    A <c>VendAccount</c> value of the <c>VendOnHoldHistory</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <returns>
    ///    An <c>VendOnHoldHistory</c> record.
    /// </returns>
    public static VendOnHoldHistory find(VendAccount    _vendAccount,
                                        boolean  _forUpdate = false)
    {
        VendOnHoldHistory vendOnHoldHistory;

        if (_vendAccount)
        {
            vendOnHoldHistory.selectForUpdate(_forUpdate);

            select firstonly vendOnHoldHistory
                where vendOnHoldHistory.VendAccount == _vendAccount;
        }

        return vendOnHoldHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the last <c>VendOnHoldHistory</c> record
    /// </summary>
    /// <param name="_vendAccount">
    /// An instance of a VendAccount value
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that determines whether or not to lock the file for update
    /// </param>
    /// <returns>
    /// An instance of a <c>VendOnHoldHistory</c> record
    /// </returns>
    public static VendOnHoldHistory findLast(VendAccount    _vendAccount,
                                            boolean  _forUpdate = false)
    {
        VendOnHoldHistory vendOnHoldHistory;

        if (_vendAccount)
        {
            vendOnHoldHistory.selectForUpdate(_forUpdate);

            select firstonly vendOnHoldHistory
                order by RecId desc
                where vendOnHoldHistory.VendAccount == _vendAccount;
        }

        return vendOnHoldHistory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS330798</DeveloperDocumentation>
	<Label>@SYS103075</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<TitleField2>OnHold</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Vendor</Modules>
	<ReplacementKey>VendTable_AK</ReplacementKey>
	<ValidTimeStateFieldType>UtcDateTime</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnHold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValidPeriod</Name>
			<Label>@SYS107949</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorHold</Name>
			<Label>@SYS128406</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OnHold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReasonComment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OnHold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBlocked</ExtendedDataType>
			<EnumType>CustVendorBlocked</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonComment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTable_AK</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReasonTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReasonCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReasonTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendOnHoldHistory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonCode</Name>
					<SourceEDT>ReasonCode</SourceEDT>
					<Field>ReasonCode</Field>
					<RelatedField>Reason</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ReasonIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendOnHoldHistory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>