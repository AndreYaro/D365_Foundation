<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetProposalConfiguration</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Defines the budget proposal criteria used to generate data for the
/// AI framework.
/// </summary>
public class BudgetProposalConfiguration extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.Ledger = Ledger::current();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBudgetModel</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public edit BudgetModelId editBudgetModel(boolean _set, BudgetModelId _budgetModelId)
    {
        if (_set)
        {
            this.BudgetModelId = _budgetModelId;
            this.BudgetSubModelId = _budgetModelId;
            this.BudgetModelType = HeadingSub::Heading;
            this.BudgetModelDataAreaId = CompanyInfo::getDataArea(Ledger::primaryForLegalEntity(this.Ledger));
        }

        return this.BudgetModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    internal static BudgetProposalConfiguration find(RecId _recId, boolean _forUpdate = false, ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetProposalConfiguration proposalConfiguration;

        proposalConfiguration.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            proposalConfiguration.concurrencyModel(_concurrencyModel);
        }

        select firstonly proposalConfiguration
            where proposalConfiguration.RecId == _recId;
          
        return proposalConfiguration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void delete()
    {
        boolean budgetTimeSeriesDetailResultAvailable = this.isBudgetTimeSeriesDetailResultAvailable(this.TimeSeriesId);

        super();

        BudgetProposalGenerateSource::deleteNonExistentTimeSeriesData();

        // If the budget time series result is not available yet, the budget proposal state machine would be stuck in BatchJobSucceeded or PowerAIPolling state
        // In this case we need reset the budget proposal state machine state back to Enabled, so that we can allow creation of a new budget proposal configuration
        if (!budgetTimeSeriesDetailResultAvailable)
        {
            PowerAIInsightsStateMachineFacade stateMachineFacade = PowerAIInsightsStateMachineFacade::newForFeatureName(FinanceInsightsConstants::BudgetProposalInsightsFeatureNameV2);
            stateMachineFacade.processEvent(PowerAIInsightsEventNoArgs::newFromEvent(BudgetProposalInsightsEventConstants::DeleteBudgetProposalConfigurationClicked));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBudgetProposalByNameAndLedger</Name>
				<Source><![CDATA[
    internal static BudgetProposalConfiguration findBudgetProposalByNameAndLedger(
        Description _name,
        LedgerRecId _ledger = Ledger::current(),
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetProposalConfiguration proposalConfiguration;

        proposalConfiguration.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            proposalConfiguration.concurrencyModel(_concurrencyModel);
        }

        select firstonly proposalConfiguration
            where proposalConfiguration.Name == _name &&
                  proposalConfiguration.Ledger == _ledger;

        return proposalConfiguration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBudgetProposalConfiguration</Name>
				<Source><![CDATA[
    internal static void createBudgetProposalConfiguration(
        BudgetSourceTransactions _source,
        Description _proposalName,
        FromDate _fromDate,
        ToDate _toDate,
        BudgetAsOfDate _budgetAsOfDate,
        BudgetModelId _budgetModelId,
        BudgetTransactionCodeRecId _budgetTransactionCode,
        BudgetTimeSeriesId _timeSeriesId = '',
        DataAreaId _dataAreaId = curExt(),
        LedgerRecId _ledgerRecId = Ledger::current())
    {
        BudgetProposalConfiguration proposal;
        
        proposal.SourceTransactions = _source;
        proposal.Name = _proposalName;
        proposal.StartDate = _fromDate;
        proposal.EndDate = _toDate;
        proposal.BudgetAsOfDate = _source == BudgetSourceTransactions::Both ? _budgetAsOfDate : dateNull();
        proposal.BudgetModelId = _budgetModelId;
        proposal.BudgetSubModelId = _budgetModelId;
        proposal.BudgetTransactionCode = _budgetTransactionCode;
        proposal.BudgetModelDataAreaId = _dataAreaId;
        proposal.BudgetModelType = HeadingSub::Heading;
        proposal.Ledger = _ledgerRecId;
        proposal.TimeSeriesId = _timeSeriesId;
        
        if (proposal.validateWrite())
        {
            proposal.write();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetProposalConfiguration</Name>
				<Source><![CDATA[
    internal static void updateBudgetProposalConfiguration(
        BudgetProposalConfiguration _proposalOrig,
        BudgetSourceTransactions _source,
        Description _proposalName,
        FromDate _fromDate,
        ToDate _toDate,
        BudgetAsOfDate _budgetAsOfDate,
        BudgetModelId _budgetModelId,
        BudgetTransactionCodeRecId _budgetTransactionCode,
        LedgerRecId _ledgerRecId = Ledger::current())
    {
        BudgetProposalConfiguration proposal = BudgetProposalConfiguration::find(_proposalOrig.RecId, true);

        ttsbegin;

        proposal.SourceTransactions = _source;
        proposal.Name = _proposalName;
        proposal.StartDate = _fromDate;
        proposal.EndDate = _toDate;
        proposal.BudgetAsOfDate = _source == BudgetSourceTransactions::Both ? _budgetAsOfDate : dateNull();
        proposal.BudgetModelId = _budgetModelId;
        proposal.BudgetSubModelId = _budgetModelId;
        proposal.BudgetTransactionCode = _budgetTransactionCode;
        proposal.Ledger = _ledgerRecId;

        if (proposal.validateWrite())
        {
            proposal.write();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBudgetTimeSeriesDetailResultAvailable</Name>
				<Source><![CDATA[
    private boolean isBudgetTimeSeriesDetailResultAvailable(BudgetTimeSeriesId _timeSeriesId)
    {
        BudgetTimeSeriesDetailResult budgetTimeSeriesDetailResult;

        select firstonly RecId from budgetTimeSeriesDetailResult
            where budgetTimeSeriesDetailResult.TimeSeriesId == _timeSeriesId;
        
        boolean budgetTimeSeriesDetailResultAvailable;

        if (budgetTimeSeriesDetailResult.RecId != 0)
        {
            budgetTimeSeriesDetailResultAvailable = true;
        }
        return budgetTimeSeriesDetailResultAvailable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicBudget</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetProposalConfigurationDevDoc</DeveloperDocumentation>
	<FormRef>BudgetProposalConfiguration</FormRef>
	<Label>@Budget:BudgetProposalConfiguration</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Name</TitleField1>
	<TitleField2>StartDate</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ledger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeSeriesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ledger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ledger</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetTimeSeriesForecast</Name>
			<Label>@Budget:ProposalSourceParameters</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTransactions</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DraftProposalRegister</Name>
			<Label>@Budget:DraftProposalParameters</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Ledger</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>BudgetAsOfDate</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>BudgetAsOfDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SourceTransactions</Name>
			<AssetClassification>Customer content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>BudgetSourceTransactions</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TimeSeriesId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System metadata</AssetClassification>
			<ExtendedDataType>BudgetTimeSeriesId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BudgetModelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetModelId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetModelType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>HeadingSub</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BudgetSubModelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetModelSubId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetTransactionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetTransactionCodeRecId</ExtendedDataType>
			<Label>@SYS339265</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BudgetModelDataAreaId</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Ledger</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Ledger</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>Ledger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Ledger</Name>
					<Field>Ledger</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetTransactionCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS339265</EntityRelationshipRole>
			<RelatedTable>BudgetTransactionCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetTransactionCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetTransactionHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetTransactionCode</Name>
					<Field>BudgetTransactionCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BudgetModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS1966</EntityRelationshipRole>
			<RelatedTable>BudgetModel</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetModel</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetProposalConfiguration</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetModelType</Name>
					<Field>BudgetModelType</Field>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetSubModelId</Name>
					<Field>BudgetSubModelId</Field>
					<RelatedField>SubModelId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetModelId</Name>
					<Field>BudgetModelId</Field>
					<RelatedField>ModelId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>