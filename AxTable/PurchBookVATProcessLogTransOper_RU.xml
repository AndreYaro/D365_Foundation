<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchBookVATProcessLogTransOper_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchBookVATProcessLogTransOper_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountInclVAT</Name>
				<Source><![CDATA[
    public display AmountMSTinclVAT_RU amountInclVAT()
    {
        return this.AmountLiableToVAT + this.TaxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns default dimension for current record
    /// </summary>
    /// <returns>
    /// Default dimension for current record
    /// </returns>
    public DimensionDefault dimensionDefault()
    {
        return this.DeriveDim ? this.DefaultDimensionPosted : this.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTmpProcessLogTransOper</Name>
				<Source><![CDATA[
    public void initFromTmpProcessLogTransOper(TmpPurchBookVATProcessLogTransOper_RU _tmpProcessLogTransOper)
    {
        this.LedgerDimension                  = _tmpProcessLogTransOper.LedgerDimension;
        this.OffsetLedgerDimension            = _tmpProcessLogTransOper.OffsetLedgerDimension;
        this.Blocked                          = _tmpProcessLogTransOper.Blocked;
        this.DefaultDimension                 = _tmpProcessLogTransOper.DefaultDimension;
        this.DeriveDim                        = _tmpProcessLogTransOper.DeriveDim;
        this.DefaultDimensionPosted           = _tmpProcessLogTransOper.DefaultDimensionPosted;
        this.TransTxt                         = _tmpProcessLogTransOper.TransTxt;
        this.PurchBookVATProcessParameters_RU = _tmpProcessLogTransOper.PurchBookVATProcessParameters_RU;
        this.Percent                          = _tmpProcessLogTransOper.Percent;
        this.TaxCode                          = _tmpProcessLogTransOper.TaxCode;
        this.FacturedAmounts                  = _tmpProcessLogTransOper.FactureAmounts;
        this.InventTransId                    = _tmpProcessLogTransOper.InventTransId;
        this.BlockedAuto                      = _tmpProcessLogTransOper.BlockedAuto;
        this.DocumentType                     = _tmpProcessLogTransOper.DocumentType;
        this.rDeferralsStornoRecId            = _tmpProcessLogTransOper.rDeferralsStornoRecId;
        this.rDeferralsTransRecId             = _tmpProcessLogTransOper.rDeferralsTransRecId;
        this.rDeferralsClosedAmount           = _tmpProcessLogTransOper.rDeferralsClosedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLogTransOper</Name>
				<Source><![CDATA[
    public static boolean checkLogTransOper(FactureId_RU               _factureId,
                                                   RecId                      _transRecId,
                                                   RecId                      _offsetRecId,
                                                   CompanyId                  _transCompany,
                                                   CompanyId                  _offsetCompany,
                                                   TransDate                  _settlementDate,
                                                   RefRecId                   _settlementRecId,
                                                   PurchBookProcessingType_RU _processingType = PurchBookProcessingType_RU::Standard)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;

        select firstonly RecId from processLogTransOper
            where processLogTransOper.Blocked           == NoYes::No &&
                  processLogTransOper.CanceledRefRecId  == 0
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId &&
                  processLogTrans.FactureId       == _factureId                   &&
                  processLogTrans.SettlementDate  == _settlementDate              &&
                ((processLogTrans.InvoiceRecIdRef == _transRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany                &&
                  processLogTrans.PaymentRecIdRef == _offsetRecId                 &&
                  processLogTrans.PaymentCompany  == _offsetCompany)              ||
                 (processLogTrans.InvoiceRecIdRef == _offsetRecId                 &&
                  processLogTrans.InvoiceCompany  == _offsetCompany               &&
                  processLogTrans.PaymentRecIdRef == _transRecId                  &&
                  processLogTrans.PaymentCompany  == _transCompany))              &&
                  processLogTrans.SettlementRecId == _settlementRecId             &&
                  processLogTrans.ProcessingType  == _processingType              &&
                  processLogTrans.Reversed        == NoYes::No;

        return processLogTransOper.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsBlockedTrans</Name>
				<Source><![CDATA[
    public static boolean existsBlockedTrans(FactureId_RU               _factureId,
                                                    RecId                      _transRecId,
                                                    RecId                      _offsetRecId,
                                                    CompanyId                  _transCompany,
                                                    CompanyId                  _offsetCompany,
                                                    TransDate                  _settlementDate,
                                                    RecId                      _logTableRecId = 0,
                                                    PurchBookProcessingType_RU _processingType = PurchBookProcessingType_RU::Standard)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;

        select firstonly RecId from processLogTransOper
            where processLogTransOper.Blocked             == NoYes::Yes &&
                  processLogTransOper.CanceledRefRecId    == 0          &&
                  ((_logTableRecId && processLogTransOper.LogTableRefRecId == _logTableRecId) || (! _logTableRecId))
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId  &&
                  processLogTrans.FactureId       == _factureId                    &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                   &&
                  processLogTrans.PaymentRecIdRef == _offsetRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany                 &&
                  processLogTrans.PaymentCompany  == _offsetCompany                &&
                  processLogTrans.ProcessingType  == _processingType               &&
                  processLogTrans.SettlementDate  == _settlementDate;

        return processLogTransOper.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existUsedAmountsForUnpostedPrepayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Returns true, if exist used amounts for an unposted payment.
    /// </summary>
    /// <param name="_factureId">
    ///    Facture identifier.
    /// </param>
    /// <param name="_transRecId">
    ///   Transaction identifier.
    /// </param>
    /// <param name="_transCompany">
    ///   Transaction company.
    /// </param>
    /// <param name="_settlementRecId">
    ///  Settlement identifier.
    /// </param>
    /// <param name="_settlementDate">
    ///   Date of settlement.
    /// </param>
    /// <param name="_blocked">
    ///   Blocked field value.
    /// </param>
    /// <param name="_logTableRecId">
    ///   Record ID of log table.
    /// </param>
    /// <param name="_checkReversed">
    ///  Pass true for searching only for non-reversed entries.
    /// </param>
    /// <param name="_processingType">
    ///   Processing type.
    /// </param>
    /// <param name="_correctedPeriod">
    ///   Corrected period.
    /// </param>
    /// <param name="_correctedFactureId">
    ///   Identifier of correcting facture.
    /// </param>
    /// <param name="_rDefferalsTransRecId">
    ///   Identifier of defferals transaction.
    /// </param>
    /// <returns>
    ///   True, if any record found; otherwise, false.
    /// </returns>
    /// <seealso>
    ///   <c>usedAmounts</c> method.
    /// </seealso>
    public static boolean existUsedAmountsForUnpostedPrepayment(FactureId_RU                  _factureId,
                                                                       RecId                         _transRecId,
                                                                       CompanyId                     _transCompany,
                                                                       RecId                         _settlementRecId,
                                                                       TransDate                     _settlementDate,
                                                                       boolean                       _blocked,
                                                                       RecId                         _logTableRecId = 0,
                                                                       NoYes                         _checkReversed = NoYes::No,
                                                                       PurchBookProcessingType_RU    _processingType       = PurchBookProcessingType_RU::Standard,
                                                                       TransDate                     _correctedPeriod      = dateNull(),
                                                                       FactureId_RU                  _correctedFactureId   = '',
                                                                       RDeferralsTransRecId          _rDefferalsTransRecId = 0)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;

        select firstonly RecId from processLogTransOper
            where processLogTransOper.Blocked              == _blocked                            &&
                  processLogTransOper.BlockedAuto          == NoYes::No                           &&
                  processLogTransOper.CanceledRefRecId     == 0                                   &&
                  processLogTransOper.rDeferralsTransRecId == _rDefferalsTransRecId               &&
                  (! _logTableRecId   || processLogTransOper.LogTableRefRecId == _logTableRecId)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId                       &&
                 ((_factureId     ? false : true)  || processLogTrans.FactureId       == _factureId)    &&
                 ((_checkReversed ? false : true ) || processLogTrans.Reversed == NoYes::No)            &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                                        &&
                  processLogTrans.InvoiceCompany  == _transCompany                                      &&
                  processLogTrans.PaymentRecIdRef == 0                                                  &&
                  processLogTrans.SettlementRecId == _settlementRecId                                   &&
                  processLogTrans.SettlementDate  == _settlementDate                                    &&
                  processLogTrans.ProcessingType  == _processingType                                    &&
                 (! _correctedPeriod      || processLogTrans.CorrectedPeriod    == _correctedPeriod)    &&
                 (! _correctedFactureId   || processLogTrans.CorrectedFactureId == _correctedFactureId);

        return processLogTransOper.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PurchBookVATProcessLogTransOper_RU find(RecId _recId, boolean _forUpdate = false)
    {
        PurchBookVATProcessLogTransOper_RU  purchBookVATProcessLogTransOper;

        purchBookVATProcessLogTransOper.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly purchBookVATProcessLogTransOper
                where purchBookVATProcessLogTransOper.RecId == _recId;
        }
        return purchBookVATProcessLogTransOper;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findContractorsWithSettlement</Name>
				<Source><![CDATA[
    public static boolean findContractorsWithSettlement(FactureId_RU                _factureId,
                                                               TaxCode                     _taxCode,
                                                               DimensionDefault            _defaultDimension,
                                                               InventTransId               _inventTransId,
                                                               RecId                       _transRecId,
                                                               RecId                       _offsetRecId,
                                                               CompanyId                   _transCompany,
                                                               CompanyId                   _offsetCompany,
                                                               RecId                       _settlementRecId,
                                                               TransDate                   _settlementDate,
                                                               PurchBookVATDocumentType_RU _documentType,
                                                               TransDate                   _transDate,
                                                               PurchBookProcessingType_RU  _processingType = PurchBookProcessingType_RU::Standard)
    {
        PurchBookVATProcessLogTrans_RU     logTransContractors;
        PurchBookVATProcessLogTransOper_RU logTransOperContractors;
        boolean                            ret;
        #VATTransitionPeriod_RU

        if (! _settlementRecId               &&
            ! _settlementDate                &&
            ! _offsetRecId                   &&
            _transDate <= #TransitionEndDate &&
            _documentType == PurchBookVATDocumentType_RU::ContractorsWork_2005)
        {
            select firstonly RecId from logTransOperContractors
                where logTransOperContractors.TaxCode          == _taxCode          &&
                      logTransOperContractors.DefaultDimension == _defaultDimension &&
                      logTransOperContractors.InventTransId    == _inventTransId    &&
                      logTransOperContractors.DocumentType     == _documentType     &&
                      logTransOperContractors.Correct          == NoYes::No         &&
                      logTransOperContractors.CanceledRefRecId == 0                 &&
                     (logTransOperContractors.Blocked          == NoYes::No         ||
                     (logTransOperContractors.Blocked          == NoYes::Yes        &&
                      logTransOperContractors.BlockedAuto      == NoYes::No))
            exists join logTransContractors
                where logTransContractors.RecId           == logTransOperContractors.RefRecId &&
                      logTransContractors.FactureId       == _factureId                       &&
                      logTransContractors.InvoiceRecIdRef == _transRecId                      &&
                      logTransContractors.InvoiceCompany  == _transCompany                    &&
                      logTransContractors.ProcessingType  == _processingType                  &&
                      logTransContractors.PaymentRecIdRef                                     &&
                      logTransContractors.SettlementRecId                                     &&
                      logTransContractors.SettlementDate;

            if (logTransOperContractors.RecId)
            {
                ret = true;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts(FactureId_RU                  _factureId,
                                                                  TaxCode                       _taxCode,
                                                                  DimensionDefault              _defaultDimension,
                                                                  InventTransId                 _inventTransId,
                                                                  RecId                         _transRecId,
                                                                  RecId                         _offsetRecId,
                                                                  CompanyId                     _transCompany,
                                                                  CompanyId                     _offsetCompany,
                                                                  RecId                         _settlementRecId,
                                                                  TransDate                     _settlementDate,
                                                                  boolean                       _blocked,
                                                                  RecId                         _logTableRecId = 0,
                                                                  NoYes                         _checkReversed = NoYes::No,
                                                                  boolean                       _isGroupBy     = true,
                                                                  PurchBookVATDocumentType_RU   _documentType         = PurchBookVATDocumentType_RU::Unknown,
                                                                  PurchBookProcessingType_RU    _processingType       = PurchBookProcessingType_RU::Standard,
                                                                  TransDate                     _correctedPeriod      = dateNull(),
                                                                  FactureId_RU                  _correctedFactureId   = '',
                                                                  RDeferralsTransRecId          _rDefferalsTransRecId = 0)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;
        BookStructSmallVATAmounts_RU        amounts;

        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.DefaultDimension     == _defaultDimension                   &&
                  processLogTransOper.TaxCode              == _taxCode                            &&
                  processLogTransOper.Blocked              == _blocked                            &&
                  processLogTransOper.BlockedAuto          == NoYes::No                           &&
                  processLogTransOper.CanceledRefRecId     == 0                                   &&
                  processLogTransOper.DocumentType         == _documentType                       &&
                  processLogTransOper.rDeferralsTransRecId == _rDefferalsTransRecId               &&
                  (! _isGroupBy       || processLogTransOper.InventTransId    == _inventTransId) &&
                  (! _logTableRecId   || processLogTransOper.LogTableRefRecId == _logTableRecId)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId                       &&
                 ((_factureId     ? false : true)  || processLogTrans.FactureId       == _factureId)    &&
                 ((_checkReversed ? false : true ) || processLogTrans.Reversed == NoYes::No)            &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                                        &&
                  processLogTrans.InvoiceCompany  == _transCompany                                      &&
                 ((_offsetRecId   ? false : true)  || processLogTrans.PaymentRecIdRef == _offsetRecId)  &&
                 ((_offsetCompany ? false : true)  || processLogTrans.PaymentCompany == _offsetCompany) &&
                  processLogTrans.SettlementRecId == _settlementRecId                                   &&
                  processLogTrans.SettlementDate  == _settlementDate                                    &&
                  processLogTrans.ProcessingType  == _processingType                                    &&
                 (! _correctedPeriod      || processLogTrans.CorrectedPeriod    == _correctedPeriod)    &&
                 (! _correctedFactureId   || processLogTrans.CorrectedFactureId == _correctedFactureId);

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount, processLogTransOper.AmountLiableToVAT, processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts_InvoiceRecId</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts_InvoiceRecId(
        RecId                      _transRecId,
        CompanyId                  _transCompany,
        TransDate                  _toDate,
        boolean                    _blocked,
        PurchBookProcessingType_RU _processingType = PurchBookProcessingType_RU::Standard)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;
        BookStructSmallVATAmounts_RU        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.Blocked   == _blocked &&
                  processLogTransOper.TransDate <= _toDate
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId &&
                  processLogTrans.InvoiceRecIdRef == _transRecId                  &&
                  processLogTrans.InvoiceCompany  == _transCompany                &&
                  processLogTrans.ProcessingType  == _processingType;

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount, processLogTransOper.AmountLiableToVAT, processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts_OnDelivery</Name>
				<Source><![CDATA[
    public static BookStructSmallVATAmounts_RU usedAmounts_OnDelivery(
        FactureId_RU                 _factureId,
        TaxCode                      _taxCode,
        DimensionDefault             _defaultDimension,
        InventTransId                _inventTransId,
        RefRecId                     _invoiceRecIdRef,
        CompanyId                    _invoiceCompany,
        boolean                      _blocked,
        PurchBookVATDocumentType_RU  _documentType,
        NoYes                        _checkReversed        = NoYes::No,
        boolean                      _isGroupBy            = true,
        TransDate                    _fromDate             = dateNull(),
        boolean                      _useDocumentType      = true,
        TransDate                    _settlementDate       = dateNull(),
        PurchBookProcessingType_RU   _processingType       = PurchBookProcessingType_RU::Standard,
        FactureId_RU                 _correctedFactureId   = '',
        RDeferralsTransRecId         _rDefferalsTransRecId = 0)
    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;
        PurchBookVATProcessLogTable_RU      processLogTable;
        BookStructSmallVATAmounts_RU        amounts;

        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.DefaultDimension     == _defaultDimension              &&
                  processLogTransOper.TaxCode              == _taxCode                       &&
                  processLogTransOper.Blocked              == _blocked                       &&
                  processLogTransOper.BlockedAuto          == NoYes::No                      &&
                  processLogTransOper.CanceledRefRecId     == 0                              &&
                  processLogTransOper.TransDate            >= _fromDate                      &&
                  processLogTransOper.rDeferralsTransRecId == _rDefferalsTransRecId          &&
                  (! _useDocumentType || processLogTransOper.DocumentType  == _documentType) &&
                  (! _isGroupBy       || processLogTransOper.InventTransId == _inventTransId)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId        &&
                  processLogTrans.FactureId       == _factureId                          &&
                  processLogTrans.InvoiceRecIdRef == _invoiceRecIdRef                    &&
                  processLogTrans.InvoiceCompany  == _invoiceCompany                     &&
                  processLogTrans.ProcessingType  == _processingType                     &&
                 (! _checkReversed  || processLogTrans.Reversed == NoYes::No)            &&
                 (! _correctedFactureId || processLogTrans.CorrectedFactureId == _correctedFactureId) &&
                 (! _settlementDate || (processLogTrans.SettlementDate && processLogTrans.SettlementDate < _settlementDate))
        exists join processLogTable
                where processLogTable.RecId     == processLogTransOper.LogTableRefRecId  &&
                      processLogTable.TransDate >= _fromDate;

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount,
                           processLogTransOper.AmountLiableToVAT,
                           processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usedAmounts_OnDelivery_OldReversed</Name>
				<Source><![CDATA[
    #VATTransitionPeriod_RU
    public static BookStructSmallVATAmounts_RU usedAmounts_OnDelivery_OldReversed(FactureId_RU     _factureId,
                                                                                         TaxCode          _taxCode,
                                                                                         DimensionDefault _defaultDimension,
                                                                                         InventTransId    _inventTransId,
                                                                                         RefRecId         _invoiceRecIdRef,
                                                                                         CompanyId        _invoiceCompany,
                                                                                         boolean          _blocked,
                                                                                         boolean                    _isGroupBy       = true,
                                                                                         PurchBookProcessingType_RU _processingType  = PurchBookProcessingType_RU::Standard)

    {
        PurchBookVATProcessLogTransOper_RU  processLogTransOper;
        PurchBookVATProcessLogTrans_RU      processLogTrans;
        PurchBookVATProcessLogTable_RU      processLogTable;
        BookStructSmallVATAmounts_RU        amounts;

        amounts = new BookStructSmallVATAmounts_RU();

        select sum(AmountLiableToVAT), sum(TaxAmount) from processLogTransOper
            where processLogTransOper.DefaultDimension     == _defaultDimension                    &&
                  processLogTransOper.TaxCode              == _taxCode                             &&
                  processLogTransOper.Blocked              == _blocked                             &&
                  processLogTransOper.BlockedAuto          == NoYes::No                            &&
                  processLogTransOper.CanceledRefRecId     == 0                                    &&
                  processLogTransOper.DocumentType         == PurchBookVATDocumentType_RU::Unknown &&
                  (! _isGroupBy || processLogTransOper.InventTransId == _inventTransId)
        exists join processLogTrans
            where processLogTrans.RecId           == processLogTransOper.RefRecId       &&
                  processLogTrans.FactureId       == _factureId                         &&
                  processLogTrans.InvoiceRecIdRef == _invoiceRecIdRef                   &&
                  processLogTrans.InvoiceCompany  == _invoiceCompany                    &&
                  processLogTrans.ReverseDate                                           &&
                  processLogTrans.ReverseDate     <  #TransitionStartDate               &&
                  processLogTrans.ProcessingType  == _processingType
        exists join processLogTable
                where processLogTable.RecId     == processLogTransOper.LogTableRefRecId &&
                      processLogTable.TransDate >= #TransitionStartDate;

        amounts.addAmounts(processLogTransOper.AmountLiableToVAT + processLogTransOper.TaxAmount,
                           processLogTransOper.AmountLiableToVAT,
                           processLogTransOper.TaxAmount);

        return amounts;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@GLS104849</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>LedgerDimension</TitleField1>
	<TitleField2>TaxCode</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RefRecId</ClusteredIndex>
	<Modules>RSalesPurchBooks</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountLiableToVAT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@GLS101175</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountLiableToVAT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Block</Name>
			<Label>@SYS14436</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Blocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockedAuto</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Correction</Name>
			<Label>@SYS13069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Correct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DimensionPosted</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimensionPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentType</Name>
			<Label>@GLS110908</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GeneralLedger</Name>
			<Label>@SYS24097</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Operation</Name>
			<Label>@SYS4528</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchBookVATProcessParameters_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RDeferrals</Name>
			<Label>@GLS107179</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RDeferralsStornoRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RDeferralsTransRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RDeferralsClosedAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CanceledRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogTableRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountLiableToVAT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS104936</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Blocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS2675</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlockedAuto</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchBookVatProcessBlockedAuto_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchBookLogTransOperRefRecId_RU</ExtendedDataType>
			<Label>@GLS104842</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Correct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS13069</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimensionPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeriveDim</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BookDeriveDimension_RU</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PurchBookVATDocumentType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>FacturedAmounts</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BookAmounts_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogTableRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@GLS104941</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchBookVATProcessParameters_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchBookVATProcessParametersRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RDeferralsClosedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RDeferralsStornoRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchBookLogTransOperRefRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RDeferralsTransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RDeferralsTransRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchBookLogTransRefRecId_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountVAT_RU</ExtendedDataType>
			<Label>@GLS100870</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchBookVATProcessParameters_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchBookVATProcessParameters_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefRecId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CanceledRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Blocked</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionPostedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimensionPosted</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesPurchBookVATProcessLogTransOper_RU</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TransTxt</MapField>
					<MapFieldTo>TransTxt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefRecId</MapField>
					<MapFieldTo>RefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Percent</MapField>
					<MapFieldTo>Percent</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AmountLiableToVAT</MapField>
					<MapFieldTo>AmountLiableToVAT</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CanceledRefRecId</MapField>
					<MapFieldTo>CanceledRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Blocked</MapField>
					<MapFieldTo>Blocked</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LogTableRefRecId</MapField>
					<MapFieldTo>LogTableRefRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Correct</MapField>
					<MapFieldTo>Correct</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FactureAmounts</MapField>
					<MapFieldTo>FacturedAmounts</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockedAuto</MapField>
					<MapFieldTo>BlockedAuto</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
					<MapFieldTo>TaxCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Marked</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SettledAmounts</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UsedAmounts</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllowDelete</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DocumentType</MapField>
					<MapFieldTo>DocumentType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchBookVATProcessParameters_RU</MapField>
					<MapFieldTo>PurchBookVATProcessParameters_RU</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimensionPosted</MapField>
					<MapFieldTo>DefaultDimensionPosted</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Deferrals</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeriveDim</MapField>
					<MapFieldTo>DeriveDim</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension</MapField>
					<MapFieldTo>LedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetLedgerDimension</MapField>
					<MapFieldTo>OffsetLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsClosedAmount</MapField>
					<MapFieldTo>RDeferralsClosedAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsStornoRecId</MapField>
					<MapFieldTo>RDeferralsStornoRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RDeferralsTransRecId</MapField>
					<MapFieldTo>RDeferralsTransRecId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimensionPosted</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimensionPosted</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimensionPosted</Name>
					<Field>DefaultDimensionPosted</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchBookVATProcessLogTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogTableRefRecId</Name>
					<Field>LogTableRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchBookVATProcessLogTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchBookVATProcessLogTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchBookVATProcessLogTrans_RU</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<SourceEDT>PurchBookLogTransRefRecId_RU</SourceEDT>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchBookVATProcessLogTransOper_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchBookVATProcessLogTransOper_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchBookVATProcessLogTransOper_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CanceledRefRecId</Name>
					<Field>CanceledRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchBookVATProcessParameters_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchBookVATProcessParameters_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchBookVATProcessParameters_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchBookVATProcessParameters_RU</Name>
					<Field>PurchBookVATProcessParameters_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsStorno</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchBookVATProcessLogTransOper_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsStorno</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RDeferralsStornoRecId</Name>
					<Field>RDeferralsStornoRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RDeferralsTransRecId</Name>
					<SourceEDT>RDeferralsTransRecId</SourceEDT>
					<Field>RDeferralsTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TaxTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchBookVATProcessLogTransOper_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>SourceTableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>SourceRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>