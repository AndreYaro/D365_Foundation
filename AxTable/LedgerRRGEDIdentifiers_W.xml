<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDIdentifiers_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDIdentifiers_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentIdStr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the <c>DocumentIdStr</c> field value.
    /// </summary>
    /// <returns>
    ///     The <c>LedgerRRGEDIdStr_W</c> value.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDIdStr_W documentIdStr()
    {
        return this.DocumentIdStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the value of method <c>documentStr</c> of table
    ///    specified by <c>DocumentTableId</c> field value.
    /// </summary>
    /// <returns>
    ///    The <c>LedgerRRGEDocumentText_W</c> value.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDocumentText_W documentStr()
    {
        DictTable dictTable;

        if (this.DocumentTableId)
        {
            dictTable = new DictTable(this.DocumentTableId);

            if (dictTable && tableHasMethod(dictTable, identifierStr(documentStr)))
            {
                return this.sourceDocument().documentStr();
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocument</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a record of table specified by <c>DocumentTableId</c> field value.
    /// </summary>
    /// <returns>
    ///    The <c>Common</c> buffer record for electronic document.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Common sourceDocument()
    {
        DictTable   dictTable;
        Common      document;

        if (this.DocumentTableId)
        {
            dictTable = new DictTable(this.DocumentTableId);
            if (dictTable)
            {
                document = dictTable.makeRecord();
                select document where document.RecId == this.DocumentRecId;
            }
        }

        return document;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentStr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the tooltip of source document.
    /// </summary>
    /// <returns>
    ///    The <c>LedgerRRGEDSourceDocumentStr_W</c> value.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LedgerRRGEDSourceDocumentStr_W sourceDocumentStr()
    {
        Common document = this.sourceDocument();

        if (document)
        {
            return document.toolTipRecord();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the value of the <c>Type</c> field of
    ///    <c>LedgerRRGEDSendRecvLog_W</c> table.
    /// </summary>
    /// <returns>
    ///    The <c>LedgerRRGEDStatusTypeName_W</c> value.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LedgerRRGEDStatusTypeName_W status()
    {
        return LedgerRRGEDSendRecvLog_W::findCurrentStatus(this.RecId).Type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addIdentifier</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Create a new record in <c>LedgerRRGEDIdentifiers_W</c> table.
    /// </summary>
    /// <param name="_document">
    ///    The <c>Common</c> buffer record of the source document.
    /// </param>
    /// <param name="_documentIdStr">
    ///    The <c>LedgerRRGEDIdStr_W</c> value of the field <c>DocumentIdStr</c> of
    ///    <c>LedgerRRGEDIdentifiers_W</c> table.
    /// </param>
    /// <returns>
    ///    The <c>LedgerRRGEDIdentifiers_W</c> table record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDIdentifiers_W addIdentifier(Common _document, LedgerRRGEDIdStr_W _documentIdStr)
    {
        LedgerRRGEDIdentifiers_W idetifier;

        if (!_document || !_documentIdStr)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        idetifier = LedgerRRGEDIdentifiers_W::findByDocumentIdStr(_document, _documentIdStr, true);

        if (!idetifier)
        {
            ttsbegin;
            idetifier.DocumentIdStr     = _documentIdStr;
            idetifier.DocumentTableId   = _document.TableId;
            idetifier.DocumentRecId     = _document.RecId;
            idetifier.insert();
            ttscommit;
        }

        return idetifier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>LedgerRRGEDIdentifiers_W</c> table.
    /// </summary>
    /// <param name="_documentId">
    ///    The key.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that determines whether a record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    The <c>LedgerRRGEDIdentifiers_W</c> table record specified by the key.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDIdentifiers_W find(LedgerRRGEDRefRecId_W _documentId, boolean _forupdate = false)
    {
        LedgerRRGEDIdentifiers_W identifier;

        identifier.selectForUpdate(_forupdate);

        if (_documentId)
        {
            select firstonly identifier
                where identifier.RecId == _documentId;
        }

        return identifier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDocumentIdStr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>LedgerRRGEDIdentifiers_W</c> table.
    /// </summary>
    /// <param name="_document">
    ///    The <c>Common</c> buffer record.
    /// </param>
    /// <param name="_documentIdStr">
    ///    The <c>LedgerRRGEDIdStr_W</c> value for finding.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that determines whether a record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    The <c>LedgerRRGEDIdentifiers_W</c> table record specified by values of fields
    ///    <c>DocumentTableId</c>, <c>DocumentRecId</c> and <c>DocumentIdStr</c>.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDIdentifiers_W findByDocumentIdStr(Common _document, LedgerRRGEDIdStr_W _documentIdStr, boolean _forupdate = false)
    {
        LedgerRRGEDIdentifiers_W identifier;

        identifier.selectForUpdate(_forupdate);

        if (_document && _documentIdStr)
        {
            if (_document.TableId == tableNum(LedgerRRGEDIdentifiers_W))
            {
                select firstonly identifier
                    where identifier.RecId          == _document.RecId
                       && identifier.DocumentIdStr  == _documentIdStr;
            }
            else
            {
                select firstonly identifier
                    where identifier.DocumentTableId    == _document.TableId
                       && identifier.DocumentRecId      == _document.RecId
                       && identifier.DocumentIdStr      == _documentIdStr;
            }
        }

        return identifier;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081596</DeveloperDocumentation>
	<Label>@SYS4081592</Label>
	<TitleField1>DocumentIdStr</TitleField1>
	<ClusteredIndex>DocumentIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerRRGEDSendRecvLog_W</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerRRGEDSendRecvLog_W</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentIdStr</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sourceDocumentStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentIdStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS110757</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sourceDocumentStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentIdStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentIdStr</Name>
			<ExtendedDataType>LedgerRRGEDDocumentIdStr_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocumentRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DocumentTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DocumentIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentIdStr</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DocumentIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentIdStr</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerRRGEDocuments_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEDocuments_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEDocuments_W</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LedgerRRGEDIdentifiers_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentRecId</Name>
					<Field>DocumentRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DocumentTableId</Name>
					<Field>DocumentTableId</Field>
					<Value>9239</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>