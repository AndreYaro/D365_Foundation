<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Tax1099Summary</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class Tax1099Summary extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        #ISOCountryRegionCodes
        LogisticsAddressCountryRegion countryRegion;

        select firstonly CountryRegionId from countryRegion
                where countryRegion.isOcode == #isoUS;

        super();

        this.Tax1099CountryRegion = countryRegion.CountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(VendAccount _vendAccount, RecId _tax1099FieldsRecId, Tax1099State _tax1099State)
    {
        boolean ret = true;

        if (!Tax1099Summary::exist(_vendAccount, _tax1099FieldsRecId, _tax1099State))
        {
            ret = checkFailed(strfmt(Tax1099Summary::txtNotExist(), _vendAccount, Tax1099Fields::find(_tax1099FieldsRecId).Tax1099Box, _tax1099State));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(VendAccount _vendAccount, RecId _tax1099FieldsRecId, Tax1099State _tax1099State)
    {
        return (select firstonly RecId from tax1099Summary
                    where tax1099Summary.VendAccount == _vendAccount &&
                          tax1099Summary.Tax1099Fields == _tax1099FieldsRecId &&
                          tax1099Summary.Tax1099State == _tax1099State).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>Tax1099Summary</c> table.
    /// </summary>
    /// <param name="_recId">
    ///  The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///  A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///  The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///  A record in the <c>Tax1099Summary</c> table; otherwise, an empty record.
    /// </returns>
    public static Tax1099Summary find(RefRecId _recId, boolean _forupdate = false, ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        Tax1099Summary tax1099Summary;

        tax1099Summary.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            tax1099Summary.concurrencyModel(_concurrencyModel);
        }

        select firstonly tax1099Summary
            where tax1099Summary.RecId == _recId;

        return tax1099Summary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendAccountBoxState</Name>
				<Source><![CDATA[
    public static Tax1099Summary findByVendAccountBoxState(
        VendAccount _vendAccount,
        RecId _tax1099FieldsRecId,
        Tax1099State _tax1099State,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        Tax1099Summary tax1099Summary;

        tax1099Summary.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            tax1099Summary.concurrencyModel(_concurrencyModel);
        }

        select firstonly tax1099Summary
            where tax1099Summary.VendAccount == _vendAccount &&
                  tax1099Summary.Tax1099Fields == _tax1099FieldsRecId &&
                  tax1099Summary.Tax1099State == _tax1099State;

        return tax1099Summary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS103284";
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateRecordValidation</Name>
				<Source><![CDATA[
    private boolean duplicateRecordValidation()
    {
        str errorMessage = strFmt(
            "@SYS153389",
            tableId2pname(tableNum(Tax1099Summary)),
            tableId2name(tableNum(Tax1099Summary)));

        boolean isValidRecord = this.isDuplicateRecord();

        if (!isValidRecord)
        {
            isValidRecord = checkFailed(errorMessage);
        }

        return isValidRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDuplicateRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether there is any duplicate record exists in <c>Tax1099Summary</c> table based on Tax 1099 type.
    /// </summary>
    /// <returns>
    /// true if there are no duplicate records; otherwise, false.
    /// </returns>
    [Wrappable(true)]
    protected final boolean isDuplicateRecord()
    {
        Tax1099Summary tax1099SummaryLocal;
        Tax1099Type taxType = Tax1099Fields::find(this.Tax1099Fields).Tax1099Type;

        if (taxType == Tax1099Type::F1099G)
        {
            select firstOnly RecId from tax1099SummaryLocal
                where this.VendAccount == tax1099SummaryLocal.VendAccount
                    && this.Tax1099Fields == tax1099SummaryLocal.Tax1099Fields
                    && this.Tax1099State == tax1099SummaryLocal.Tax1099State
                    && this.Tax1099TaxYear == tax1099SummaryLocal.Tax1099TaxYear
                    && this.RecId != tax1099SummaryLocal.RecId;
        }
        else if (taxType != Tax1099Type::F1099S)
        {
            select firstOnly RecId from tax1099SummaryLocal
                where this.VendAccount == tax1099SummaryLocal.VendAccount
                    && this.Tax1099Fields == tax1099SummaryLocal.Tax1099Fields
                    && this.Tax1099State == tax1099SummaryLocal.Tax1099State
                    && this.RecId != tax1099SummaryLocal.RecId;
        }

        return (tax1099SummaryLocal.RecId == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.duplicateRecordValidation())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean validRecord = this.duplicateRecordValidation();

        validRecord = validRecord && super();

        return validRecord;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>US</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123585</DeveloperDocumentation>
	<FormRef>tax1099Summary</FormRef>
	<Label>@SYS84742</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Fields</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099StateAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BoxAndAmounts</Name>
			<Label>@SYS84743</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tax1099Fields</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099CountryRegion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleTax1099StateAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IRSReportable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS84744</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendInvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchInternalInvoiceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax1099GFields</Name>
			<Label>@SPS1111</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tax1099TradeOrBusiness</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099TaxYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099StateTaxID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099StateTaxWithheld</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax1099SFields</Name>
			<Label>@SPS1102</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tax1099DateOfClosing</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099PropertyOrServices</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099BuyersTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099AddressOrLegalDesc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IRSReportable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS84740</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchInternalInvoiceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchInternalInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleTax1099Amount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SettleTax1099Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleTax1099StateAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SettleTax1099StateAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099AddressOrLegalDesc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099AddressOrLegalDesc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Tax1099BuyersTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099BuyersTax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099CountryRegion</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Tax1099DateOfClosing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099DateOfClosing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Tax1099Fields</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Tax1099FieldsRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Tax1099PropertyOrServices</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099PropertyOrServices</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099State</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tax1099StateTaxID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>Tax1099StateTaxID</ExtendedDataType>
			<Label>@SPS1939</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Tax1099StateTaxWithheld</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>Tax1099StateTaxWithheld</ExtendedDataType>
			<Label>@SPS1941</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Tax1099TaxYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099TaxYear</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Tax1099TradeOrBusiness</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Tax1099TradeOrBusiness</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendInvoiceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTaxBoxState</Name>
			<Enabled>No</Enabled>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Tax1099Fields</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Tax1099State</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StateVendTaxBox</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Tax1099State</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Tax1099Fields</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Tax1099TaxYear</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendIRSReportable</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IRSReportable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Tax1099FieldsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Tax1099Fields</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsAddressCountryRegionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Tax1099CountryRegion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Tax1099Summary</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsAddressCountryRegion</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099CountryRegion</Name>
					<SourceEDT>LogisticsAddressCountryRegionId</SourceEDT>
					<Field>Tax1099CountryRegion</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressState</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressState</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsAddressState</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099State</Name>
					<Field>Tax1099State</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099CountryRegion</Name>
					<Field>Tax1099CountryRegion</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionStateIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Tax1099Fields</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Tax1099Fields</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IsTax1099FieldsOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Tax1099Summary_Tax1099Fields</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099Fields</Name>
					<Field>Tax1099Fields</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Vendor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123524</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable_AccountNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Tax1099Summary_VendAccount</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>