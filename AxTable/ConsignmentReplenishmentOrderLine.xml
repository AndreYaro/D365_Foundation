<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConsignmentReplenishmentOrderLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ConsignmentReplenishmentOrderLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>linkInventDim2Dimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies default <c>ReplenishmentOrderLine.dimension</c> values, depending on the <c>InventDim</c> record buffer values.
    /// </summary>
    /// <param name="_newInventDim">The <c>InventDim</c> record buffer linked to the current <c>PurchLine</c> record buffer.</param>
    /// <param name="_oldInventDim">The <c>InventDim</c> record buffer that was previously linked to the current <c>ReplenishmentOrderLine</c> record buffer.</param>
    public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
    {
        _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the <c>InventDimId</c> parameter to the <c>InventDimId</c> field and applies default values, depending on the new inventory dimensions.
    /// </summary>
    /// <param name="_inventDimId">The <c>InventDimId</c> value that should be applied to the <c>InventDimId</c> field.</param>
    /// <param name="_inventDim">The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.</param>
    public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
    {
        InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();

        this.InventDimId = _inventDimId;
        this.linkInventDim2Dimension(_inventDim, currentInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the invent dimension record used on the consignment replenishment order line.
    /// </summary>
    /// <returns>A record in the <c>InventDim</c> table.</returns>
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the item record used on the consignment replenishment order line.
    /// </summary>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>InventTable</c> table.</returns>
    public InventTable inventTable(boolean _forUpdate = false)
    {
        return InventTable::find(this.ItemId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInventDimSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the related fields when multiple inventory dimension fields are modified.
    /// </summary>
    /// <param name="_inventDim">
    /// The new inventory dimension record.
    /// </param>
    /// <param name="_dimFieldIdSet">
    /// A set containing the ID's of the modified <c>InventDim</c> fields.
    /// </param>
    /// <returns>
    /// true if dimensions were modified; otherwise false.
    /// </returns>
    public boolean modifyInventDimSet(
        InventDim   _inventDim,
        Set         _dimFieldIdSet)
    {
        if (!this.ItemId)
        {
            return false;
        }

        if (!InventDistinctProductValidator::construct().isDistinctProductFullySpecified(this.ItemId, _inventDim))
        {
            return false;
        }

        var defaultingArguments = InventDistinctProductDimensionSpecificDefaultingArgs::construct(this.inventTable(), false, InventItemOrderSetupType::Purch);

        var inventDistinctProductOrderDefaultingController = InventDistinctProductOrderDefaultingController::constructFromFieldSet(_dimFieldIdSet);

        _inventDim.data(inventDistinctProductOrderDefaultingController.inventDimModified(this.getType(), _inventDim, defaultingArguments));

        this.setInventDimId(_inventDim.inventDimId, _inventDim);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the related fields when an inventory dimension field is modified.
    /// </summary>
    /// <param name="_inventDim">
    /// The new inventory dimension record.
    /// </param>
    /// <param name="_dimFieldId">
    /// The ID of the modified <c>InventDim</c> field.
    /// </param>
    /// <returns>
    /// true if the inventory dimensions was modified; otherwise false.
    /// </returns>
    public boolean modifyInventDim(
        InventDim   _inventDim,
        FieldId     _dimFieldId)
    {
        Set dimFieldIdSet = new Set(Types::Integer);
        dimFieldIdSet.add(_dimFieldId);

        return this.modifyInventDimSet(_inventDim, dimFieldIdSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line type class for the consignment replenishment order line.
    /// <c>ConsignmentReplenishmentOrderLineType</c> class is the base class that controls the types of consignment replenishment order lines.
    /// </summary>
    /// <returns>An instance of the <c>ConsignmentReplenishmentOrderLineType</c> class.</returns>
    public ConsignmentReplenishmentOrderLineType getType()
    {
        return ConsignmentReplenishmentOrderLineType::newFromReplenishmentOrder(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new InventTrans ID.
    /// </summary>
    protected void setInventTransId()
    {
        this.InventTransId = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEstimatedStatus</Name>
				<Source><![CDATA[
    private InventUpd_Estimated setEstimatedStatus()
    {
        var estimated = InventUpd_Estimated::newInventMovement(InventMovement::construct(this));
        estimated.updateNow();

        return estimated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a consignment replenishment order line.
    /// </summary>
    public void insert()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        this.setInventTransId();

        var estimated = this.setEstimatedStatus();

        super();

        estimated.updateOwnerRelationship();

        this.updateReplenishmentOrderHeaderStatus(this.ReplenishmentOrderNumber, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the consignment replenishment order line.
    /// </summary>
    public void update()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        boolean mustUpdateReplenishmentOrderHeaderStatus = false;

        var estimated = this.setEstimatedStatus();

        this.setReplenishmentOrderLineStatus();

        if (this.orig().ReplenishmentOrderLineStatus != this.ReplenishmentOrderLineStatus)
        {
            mustUpdateReplenishmentOrderHeaderStatus = true;
        }

        super();

        estimated.updateReservation();

        if (mustUpdateReplenishmentOrderHeaderStatus)
        {
            this.updateReplenishmentOrderHeaderStatus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCallerForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the caller form.
    /// </summary>
    private void refreshCallerForm()
    {
        if (this.dataSource().formRun() && this.dataSource().formRun() is IRefreshable)
        {
            IRefreshable callerForm = this.dataSource().formRun() as IRefreshable;

            callerForm.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReplenishmentOrderHeaderStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates consignment replenishment order header status.
    /// </summary>
    /// <param name = "_replenishmentOrderNumber">Specified the consignment replenishment order number; optional.</param>
    /// <param name = "_newReplenishmentOrderLineCreated">Specifies that the new consignment replenishment order line has been created; optional.</param>
    public void updateReplenishmentOrderHeaderStatus(ConsignmentReplenishmentOrderNumber _replenishmentOrderNumber = this.ReplenishmentOrderNumber, boolean _newReplenishmentOrderLineCreated = false)
    {
        ConsignmentReplenishmentOrderHeader replenishmentOrderHeader = ConsignmentReplenishmentOrderHeader::find(_replenishmentOrderNumber, true);

        boolean replenishmentOrderHeaderStatusChanged = replenishmentOrderHeader.updateReplenishmentOrderHeaderStatus(_newReplenishmentOrderLineCreated);

        if (replenishmentOrderHeaderStatusChanged && this.dataSource())
        {
            this.refreshCallerForm();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the consignment replenishment order line.
    /// </summary>
    public void delete()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ConsignmentReplenishmentOrderNumber replenishmentOrderNumber = this.ReplenishmentOrderNumber;

        InventUpd_DeleteMovement::newMovement(InventMovement::construct(this)).updateNow();

        this.reread();

        super();

        this.updateReplenishmentOrderHeaderStatus(replenishmentOrderNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>replenishmentOrderHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the consignment replenishment order header.
    /// </summary>
    /// <param name = "update">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>ConsignmentReplenishmentOrderHeader</c> table</returns>
    public ConsignmentReplenishmentOrderHeader replenishmentOrderHeader(boolean  update = false)
    {
        return ConsignmentReplenishmentOrderHeader::find(this.ReplenishmentOrderNumber, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventUnitId</Name>
				<Source><![CDATA[
    private InventUnitId inventUnitId()
    {
        return InventTableModule::find(this.ItemId,ModuleInventPurchSales::Invent).UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateReplenishmentInventoryQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the consignment replenishment order quantity in inventory units.
    /// </summary>
    /// <param name = "_replenishmentQuantity">The consignment replenishment order quantity; optional.</param>
    /// <returns>The consignment replenishment order quantity in inventory units.</returns>
    public ConsignmentReplenishmentInventoryQuantity calculateReplenishmentInventoryQuantity(ConsignmentReplenishmentQuantity _replenishmentQuantity = this.ReplenishmentQuantity)
    {
        return TradeQuantityUnitOfMeasureConverter::convertReleasedProductToInventoryQuantity(this.ItemId, this.InventDimId, _replenishmentQuantity, this.ReplenishmentUnitId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLineNumber</Name>
				<Source><![CDATA[
    private void defaultLineNumber()
    {
        if (!this.isFieldSet(fieldnum(ConsignmentReplenishmentOrderLine, LineNumber)))
        {
            TradeLineNumberManager::updateLineNumberOfNewOrder(this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRemainingReplenishmentPhysicalQuantity</Name>
				<Source><![CDATA[
    private void defaultRemainingReplenishmentPhysicalQuantity()
    {
        this.RemainingReplenishmentPhysicalQuantity = this.orig().RemainingReplenishmentPhysicalQuantity + this.ReplenishmentQuantity - this.orig().ReplenishmentQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRemainingInventoryPhysicalQuantity</Name>
				<Source><![CDATA[
    private void defaultRemainingInventoryPhysicalQuantity()
    {
        this.RemainingInventoryPhysicalQuantity = this.orig().RemainingInventoryPhysicalQuantity + this.ReplenishmentInventoryQuantity - this.orig().ReplenishmentInventoryQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReplenishmentInventoryQuantity</Name>
				<Source><![CDATA[
    private void defaultReplenishmentInventoryQuantity()
    {
        this.ReplenishmentInventoryQuantity = this.calculateReplenishmentInventoryQuantity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReplenishmentUnitId</Name>
				<Source><![CDATA[
    private void defaultReplenishmentUnitId()
    {
        if (!this.isFieldSet(fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentUnitId)))
        {
            this.ReplenishmentUnitId = this.inventTableModule().UnitId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeliveryPostalAddress</Name>
				<Source><![CDATA[
    private void defaultDeliveryPostalAddress()
    {
        InventDim inventDim = this.inventDim();

        if (inventDim)
        {
            this.defaultAddressFromInventDim(inventDim);
        }

        if (!this.DeliveryPostalAddress)
        {
            this.defaultAddressFromReplenishmentOrder();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressFromReplenishmentOrder</Name>
				<Source><![CDATA[
    private void defaultAddressFromReplenishmentOrder()
    {
        ConsignmentReplenishmentOrderHeader replenishmentOrder = this.replenishmentOrderHeader();

        this.DeliveryPostalAddress  = replenishmentOrder.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressFromInventDim</Name>
				<Source><![CDATA[
    private void defaultAddressFromInventDim(InventDim _inventDim)
    {
        InventLocation              inventLocation;
        InventSite                  inventSite;
        LogisticsLocationRecId      location;
        LogisticsLocationRole       deliveryAddressRole = LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery);

        if (_inventDim.InventLocationId)
        {
            inventLocation  = InventLocation::find(_inventDim.InventLocationId);
            location        = LogisticsLocationDefault::findSimpleDefault(inventLocation, deliveryAddressRole).RecId;
        }

        if (location)
        {
            this.setDeliveryAddressFromRecord(location, inventLocation);
        }
        else
        {
            inventSite = InventSite::find(_inventDim.InventSiteId);
            if (inventSite)
            {
                location = LogisticsLocationDefault::findSimpleDefault(inventSite, deliveryAddressRole).RecId;
            }

            if (location)
            {
                this.setDeliveryAddressFromRecord(location, inventSite);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryAddressFromRecord</Name>
				<Source><![CDATA[
    private void setDeliveryAddressFromRecord(LogisticsLocationRecId  _locationRecId, Common _source)
    {
        LogisticsLocation location = LogisticsLocation::find(_locationRecId);

        this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDimId</Name>
				<Source><![CDATA[
    private void defaultInventDimId()
    {
        InventDim inventDim = this.inventDim();

        if (!this.ItemId)
        {
            inventDim = this.getDefaultInventDimFromReplenishmentOrderHeader();
        }

        inventDim = InventDim::findOrCreate(inventDim);
        this.setInventDimId(inventDim.InventDimId, inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReceiveInventoryQuantityNow</Name>
				<Source><![CDATA[
    private void defaultReceiveInventoryQuantityNow()
    {
        this.ReceiveInventoryQuantityNow = this.calculateReplenishmentInventoryQuantity(this.ReceiveReplenishmentQuantityNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultInventDimFromReplenishmentOrderHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get defaulted inventory dimensions from order header.
    /// </summary>
    /// <returns>The defaulted inventory dimensions.</returns>
    public InventDim getDefaultInventDimFromReplenishmentOrderHeader()
    {
        InventDim inventDim = this.inventDim();

        ConsignmentReplenishmentOrderHeader replenishmentOrder = this.replenishmentOrderHeader();

        if (replenishmentOrder.DefaultReceivingWarehouseId || replenishmentOrder.DefaultReceivingSiteId)
        {
            inventDim.InventLocationId  = replenishmentOrder.DefaultReceivingWarehouseId;
            inventDim.InventSiteId      = replenishmentOrder.DefaultReceivingSiteId;
        }

        return InventDim::findOrCreate(inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableModule</Name>
				<Source><![CDATA[
    private InventTableModule inventTableModule()
    {
        return InventTableModule::find(this.ItemId, ModuleInventPurchSales::Purch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemIdChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the event when the item changes.
    /// </summary>
    public void itemIdChanged()
    {
        var lineType = this.getType();
        lineType.initFromInventTable(this.inventTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The ID of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldnum(ConsignmentReplenishmentOrderLine, LineNumber):
                this.defaultLineNumber();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, RemainingReplenishmentPhysicalQuantity):
                this.defaultRemainingReplenishmentPhysicalQuantity();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, RemainingInventoryPhysicalQuantity):
                this.defaultRemainingInventoryPhysicalQuantity();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, ReceiveInventoryQuantityNow):
                this.defaultReceiveInventoryQuantityNow();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentInventoryQuantity):
                this.defaultReplenishmentInventoryQuantity();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentUnitId):
                this.defaultReplenishmentUnitId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, InventDimId):
                this.defaultInventDimId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, DeliveryPostalAddress):
                this.defaultDeliveryPostalAddress();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, AddressRefRecId):
                this.defaultAddressRefRecId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, AddressRefTableId):
                this.defaultAddressRefTableId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderLine, DeliveryAddressName):
                this.defaultAddressName();
                break;

            case fieldNum(ConsignmentReplenishmentOrderLine, RequestedDeliveryDate):
                this.defaultRequestedDeliveryDateFromReplenishmentOrder();
                break;

            case fieldNum(ConsignmentReplenishmentOrderLine, ConfirmedDeliveryDate):
                this.defaultConfirmedDeliveryDateFromReplenishmentOrder();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRequestedDeliveryDateFromReplenishmentOrder</Name>
				<Source><![CDATA[
    private void defaultRequestedDeliveryDateFromReplenishmentOrder()
    {
        ConsignmentReplenishmentOrderHeader replenishmentOrder = this.replenishmentOrderHeader();

        this.RequestedDeliveryDate  = replenishmentOrder.RequestedDeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultConfirmedDeliveryDateFromReplenishmentOrder</Name>
				<Source><![CDATA[
    private void defaultConfirmedDeliveryDateFromReplenishmentOrder()
    {
        ConsignmentReplenishmentOrderHeader replenishmentOrder = this.replenishmentOrderHeader();

        this.ConfirmedDeliveryDate  = replenishmentOrder.ConfirmedDeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemId</Name>
				<Source><![CDATA[
    private boolean validateItemId()
    {
        boolean ret = true;

        InventTable         inventTable         = this.inventTable();
        InventModelGroup    inventModelGroup    = inventTable.modelGroup();
        InventDimGroupSetup inventDimGroupSetup = InventDimGroupSetup::newInventTable(inventTable);

        if (!InventDistinctProductValidator::checkProductNotStopped(this.ItemId, InventItemOrderSetupType::Purch, this.inventDim(), false))
        {
            ret = false;
        }

        if (this.ItemId)
        {
            var productValidator = EcoResProductValidator::construct(inventTable);
            if (!productValidator.isEssentialFieldValuesSet())
            {
                ret = checkFailed(strFmt("@SYS4000187", productValidator.getErrorFieldList(), this.ItemId));
            }
        }

        if (!inventModelGroup.isStocked())
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ItemId_Stocked", this.ItemId));
        }

        if (!inventModelGroup.inventModelType().isInventoryOwnerAllowed())
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ItemId_InventModelTypeNotSupported", this.ItemId));
        }

        if (!inventDimGroupSetup.isDimensionActive(fieldNum(InventDim, inventOwnerId_RU)))
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ItemId_Owner", this.ItemId));
        }

        if (PdsCatchWeightItem::find(this.ItemId))
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ItemId_CW", this.ItemId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWhs</Name>
				<Source><![CDATA[
    private boolean validateWhs()
    {
        boolean ret = true;

        InventLocation warehouse = this.inventDim().inventLocation();
        if (warehouse.WHSEnabled && WHSInventEnabled::exist(this.ItemId))
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ItemIdInventDimId_WarehouseEnabled", this.ItemId, warehouse.InventLocationId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReplenishmentUnit</Name>
				<Source><![CDATA[
    private boolean validateReplenishmentUnit()
    {
        boolean ret = true;

        var inventUnitId = this.inventUnitId();

        if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(
                this.ItemId,
                this.InventDimId,
                inventUnitId,
                this.ReplenishmentUnitId))
        {
            ret = checkFailed(strFmt("@SYS28690", inventUnitId, this.ReplenishmentUnitId));
        }

        if (this.orig()
            &&  this.orig().ReplenishmentUnitId != this.ReplenishmentUnitId
            &&  this.orig().ReplenishmentQuantity  != this.RemainingReplenishmentPhysicalQuantity)
        {
            ret = checkFailed("@Consignment:MessageValidation_ReplenishmentUnit");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a field on the consignment replenishment order line.
    /// </summary>
    /// <param name = "_fieldId">The ID of the field that is validated.</param>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case fieldNum(ConsignmentReplenishmentOrderLine, ItemId):
                    ret = this.validateItemId();
                    break;

                case fieldNum(ConsignmentReplenishmentOrderLine, ReplenishmentUnitId):
                    ret = this.validateReplenishmentUnit();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>approvedVendorList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the approved vendor validator.
    /// </summary>
    /// <returns>
    /// An instance of the <c>PdsApprovedVendorListCheck</c> class.
    /// </returns>
    public PdsApprovedVendorListCheck approvedVendorList()
    {
        return PdsApprovedVendorListCheck::newFromTable(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVendor</Name>
				<Source><![CDATA[
    private boolean validateVendor()
    {
        boolean ret = true;

        if (#PdsApprovedVendorListEnabled)
        {
            ret = this.approvedVendorList().validateCheck();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorBatchInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the vendor batch information related record for the consignment replenishment order line record.
    /// </summary>
    /// <returns>The <c>PdsVendBatchInfo</c> record.</returns>
    public PdsVendBatchInfo vendorBatchInfo()
    {
        return PdsVendBatchInfo::findBySourceRecId(PdsVendBatchInfoSourceRefType::ConsignmentReplenishmentOrderLine, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the consignment replenishment order line.
    /// </summary>
    /// <returns>true if the consignment replenishment order line has valid information and may be saved; otherwise, false.</returns>
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.replenishmentOrderHeader())
        {
            ret = checkFailed("@SYS26869");
        }

        ret = ret && InventDistinctProductValidator::checkProductNotStopped(this.ItemId, InventItemOrderSetupType::Purch, this.inventDim(), false);

        ret = ret && this.validateWhs();

        ret = ret && this.validateVendor();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressRefRecId</Name>
				<Source><![CDATA[
    private void defaultAddressRefRecId()
    {
        this.AddressRefRecId = this.getDeliveryEntityRecord().RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressRefTableId</Name>
				<Source><![CDATA[
    private void defaultAddressRefTableId()
    {
        this.AddressRefTableId = this.getDeliveryEntityRecord().TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressName</Name>
				<Source><![CDATA[
    private void defaultAddressName()
    {
        this.TradePostalAddress::setDeliveryName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(ConsignmentReplenishmentOrderLine, LineNumber), [fieldnum(ConsignmentReplenishmentOrderLine, ItemId)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentUnitId), [fieldnum(ConsignmentReplenishmentOrderLine, ItemId)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, InventDimId), [fieldnum(ConsignmentReplenishmentOrderLine, ItemId), fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentOrderNumber)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, DeliveryPostalAddress), [fieldnum(ConsignmentReplenishmentOrderLine, InventDimId), fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentOrderNumber)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, RemainingReplenishmentPhysicalQuantity), [fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentQuantity)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, ReceiveInventoryQuantityNow), [fieldnum(ConsignmentReplenishmentOrderLine, ReceiveReplenishmentQuantityNow)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentInventoryQuantity), [fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentQuantity), fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentUnitId)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, RemainingInventoryPhysicalQuantity), [fieldnum(ConsignmentReplenishmentOrderLine, ReplenishmentInventoryQuantity)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, AddressRefRecId), [fieldnum(ConsignmentReplenishmentOrderLine, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, AddressRefTableId), [fieldnum(ConsignmentReplenishmentOrderLine, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, DeliveryAddressName), [fieldnum(ConsignmentReplenishmentOrderLine, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, ConfirmedDeliveryDate), [fieldnum(ConsignmentReplenishmentOrderLine, ItemId)]],
            [fieldnum(ConsignmentReplenishmentOrderLine, RequestedDeliveryDate), [fieldnum(ConsignmentReplenishmentOrderLine, ItemId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the item name for the consignment replenishment order line.
    /// </summary>
    /// <returns>
    /// The item name.
    /// </returns>
    public display ItemNameDisplay itemName()
    {
        ItemNameDisplay orderLineDisplayItemName;

        if (this.ItemId)
        {
            orderLineDisplayItemName = this.inventTable().itemName(this.inventDim());
        }

        return orderLineDisplayItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the delivery name field based on the specified logistic location.
    /// </summary>
    /// <param name="_skipDeliveryRoleCheck">
    ///     A flag indicating whether to skip the check for determining the delivery role; optional.
    /// </param>
    public void setDeliveryName(boolean _skipDeliveryRoleCheck = false)
    {
        this.TradePostalAddress::setDeliveryName(_skipDeliveryRoleCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeliveryEntityRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the delivery entity record based on the postal address.
    /// </summary>
    /// <returns>
    ///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
    /// </returns>
    public Common getDeliveryEntityRecord()
    {
        return this.TradePostalAddress::getDeliveryEntityRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public Common lookupDeliveryPostalAddress(FormReferenceControl _formReferenceControl)
    {
        LogisticsLocationSelectionLookup_Purch lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);

        InventDim inventDim = this.inventDim();

        lookup.parmInventSiteId(inventDim.InventSiteId);
        lookup.parmInventLocationId(inventDim.InventLocationId);

        lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
        lookup.parmReturnLocation(false);

        return lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a consignment replenishment order line.
    /// </summary>
    /// <param name = "_replenishmentOrderLineRecId">The consignment replenishment order line record ID.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>ConsignmentReplenishmentOrderLine</c> table; otherwise, an empty record.</returns>
    public static ConsignmentReplenishmentOrderLine find(RecId _replenishmentOrderLineRecId, boolean  _update = false)
    {
        ConsignmentReplenishmentOrderLine replenishmentOrderLine;

        if (_replenishmentOrderLineRecId)
        {
            replenishmentOrderLine.selectForUpdate(_update);

            select firstonly replenishmentOrderLine
                where replenishmentOrderLine.RecId == _replenishmentOrderLineRecId;
        }

        return replenishmentOrderLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>receivedOnProductReceiptsInTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the quantity received on the consignment replenishment order line product receipts.
    /// </summary>
    /// <returns>
    /// The quantity received on the consignment replenishment order line product receipts.
    /// </returns>
    public display ConsignmentReplenishmentQuantity receivedOnProductReceiptsInTotal()
    {
        ConsignmentProductReceiptJournalLine consignmentProductReceiptJournalLine;

        select sum(ReplenishmentQuantity) from consignmentProductReceiptJournalLine
            where consignmentProductReceiptJournalLine.ReplenishmentOrderLine == this.RecId;

        return consignmentProductReceiptJournalLine.ReplenishmentQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the quantity in inventory unit that has been registered for the replenishment order line.
    /// </summary>
    /// <returns>
    /// The registered inventory quantity.
    /// </returns>
    public ConsignmentReplenishmentInventoryQuantity registered()
    {
        return InventTransIdSumSingleStatus::qtyRegistered(InventTransOriginConsignmentReplenishmentOrderLine::findInventTransOriginId(this.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registeredInReplenishmentUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the quantity in replenishment unit that has been registered for the replenishment order line.
    /// </summary>
    /// <returns>
    /// The registered replenishment quantity.
    /// </returns>
    public display ConsignmentReplenishmentQuantity registeredInReplenishmentUnit()
    {
        ConsignmentReplenishmentQuantity registeredReplenishmentQuantity;
        ConsignmentReplenishmentInventoryQuantity registeredInventoryQuantity = this.registered();

        if (registeredInventoryQuantity)
        {
            registeredReplenishmentQuantity = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(
                this.ItemId,
                this.InventDimId,
                registeredInventoryQuantity,
                this.inventTable().inventUnitId(),
                this.ReplenishmentUnitId,
                NoYes::Yes);
        }

        return registeredReplenishmentQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderedInReplenishmentUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the quantity in replenishment unit that has been ordered for the replenishment order line.
    /// </summary>
    /// <returns>
    /// The ordered replenishment quantity.
    /// </returns>
    public display ConsignmentReplenishmentQuantity orderedInReplenishmentUnit()
    {
        return this.RemainingReplenishmentPhysicalQuantity - this.registeredInReplenishmentUnit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReplenishmentOrderLineStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the consignment replenishment order line status based on line and remaining quantities.
    /// </summary>
    private void setReplenishmentOrderLineStatus()
    {
        if (this.ReplenishmentQuantity == 0)
        {
            this.ReplenishmentOrderLineStatus = ConsignmentReplenishmentOrderLineStatus::OpenOrder;
        }
        else
        {
            if (this.RemainingReplenishmentPhysicalQuantity == 0)
            {
                this.ReplenishmentOrderLineStatus = ConsignmentReplenishmentOrderLineStatus::Completed;
            }
            else
            {
                this.ReplenishmentOrderLineStatus = ConsignmentReplenishmentOrderLineStatus::OpenOrder;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ConsignmentReplenishmentOrderLine, ItemId):
                this.itemIdChanged();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the corresponding record in the <c>ReqTrans</c> table for the current record in the <c>ConsignmentReplenishmentOrderLine</c> table.
    /// </summary>
    /// <param name="_reqPlanVersionRefRecId">The ID of the record in the <c>ReqPlanVersion</c> table; optional.</param>
    /// <param name="_forupdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>ReqTrans</c> table; otherwise, an empty record.</returns>
    public ReqTrans reqTrans(
        RefRecId _reqPlanVersionRefRecId = ReqPlanVersion::findActiveReqPlanIdDynamic().RecId,
        boolean  _forupdate              = false)
    {
        ReqTrans                                            reqTrans;
        InventTransOriginConsignmentReplenishmentOrderLine  inventTransOriginConsignmentReplenishmentOrderLine;

        reqTrans.selectForUpdate(_forupdate);

        select firstonly reqTrans
            where reqTrans.PlanVersion  == _reqPlanVersionRefRecId
               && reqTrans.RefType      == ReqRefType::ConsignmentReplenishmentOrder
               && reqTrans.RefId        == this.ReplenishmentOrderNumber
            exists join inventTransOriginConsignmentReplenishmentOrderLine
                where inventTransOriginConsignmentReplenishmentOrderLine.InventTransOrigin      == reqTrans.InventTransOrigin
                   && inventTransOriginConsignmentReplenishmentOrderLine.ReplenishmentOrderLine == this.RecId;

        return reqTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ConsignmentInbound</ConfigurationKey>
	<DeveloperDocumentation>@Consignment:Developer_ConsignmentReplenishmentOrderLine</DeveloperDocumentation>
	<Label>@Consignment:Table_ConsignmentReplenishmentOrderLine</Label>
	<SingularLabel>@Consignment:Table_Singular_ConsignmentReplenishmentOrderLine</SingularLabel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ReplenishmentOrderNumber</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>ReplenishmentOrderLineNumberIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedDeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ConsignmentReplenishmentOrderLineGrid</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ConsignmentReplenishmentOrderLineDetailsGeneral</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ConsignmentReplenishmentQuantity</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AddressLookup</Name>
			<Label>@SYS88672</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@Consignment:Group_ConsignmentReplenishmentOrderLine_Status</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderLineStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeliveryDates</Name>
			<Label>@Consignment:Group_ConsignmentReplenishmentOrderLine_DeliveryDates</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RequestedDeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfirmedDeliveryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AddressRefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressRefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AddressRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AddressRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ConfirmedDeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentConfirmedDeliveryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryAddressName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemIdSmall</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeLineNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReplenishmentInventoryQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentInventoryQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentOrderLineStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ConsignmentReplenishmentOrderLineStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishmentOrderNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentOrderNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReplenishmentQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishmentUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RequestedDeliveryDate</Name>
			<ExtendedDataType>ConsignmentRequestedDeliveryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainingInventoryPhysicalQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentRemainingInventoryPhysicalQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainingReplenishmentPhysicalQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentRemainingReplenishmentPhysicalQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReceiveReplenishmentQuantityNow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReceiveInventoryQuantityNow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentInventoryQuantity</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReplenishmentOrderLineNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DeliveryPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TradeLineNumbering</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>HeaderId</MapField>
					<MapFieldTo>ReplenishmentOrderNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>HeaderRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeleted</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNumber</MapField>
					<MapFieldTo>LineNumber</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TradePostalAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
					<MapFieldTo>DeliveryAddressName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>DeliveryPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AddressLink</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>Common</RelatedTable>
			<RelatedTableRole>AddressLink</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AddressRefRecId</Name>
					<Field>AddressRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AddressRefTableId</Name>
					<Field>AddressRefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventoryDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventoryDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Item</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Item</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReplenishmentOrderHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ConsignmentReplenishmentOrderHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReplenishmentOrderHeader</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplenishmentOrderNumber</Name>
					<Field>ReplenishmentOrderNumber</Field>
					<RelatedField>ReplenishmentOrderNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReplenishmentUnitId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>UnitId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrderLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplenishmentUnitId</Name>
					<Field>ReplenishmentUnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>