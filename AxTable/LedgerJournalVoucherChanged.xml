<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalVoucherChanged</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerJournalVoucherChanged extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(LedgerJournalId _ledgerJournalId, Voucher _toVoucher )
    {
        boolean ret = true;
        ;

        if (!LedgerJournalVoucherChanged::exist(_ledgerJournalId, _toVoucher))
        {
            ret = checkFailed(strfmt(LedgerJournalVoucherChanged::txtNotExist(), _ledgerJournalId, _toVoucher));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteChange</Name>
				<Source><![CDATA[
    static void deleteChange(LedgerJournalId    _ledgerJournalId,
                             Voucher            _voucher)
    {
        LedgerJournalVoucherChanged ledgerJournalVoucherChanged;
        ;
        ttsbegin;
        if (_ledgerJournalId && _voucher)
        {
            delete_from ledgerJournalVoucherChanged
            where ledgerJournalVoucherChanged.JournalNum  == _ledgerJournalId &&
                  ledgerJournalVoucherChanged.FromVoucher == _voucher;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(LedgerJournalId _ledgerJournalId, Voucher _toVoucher )
    {
        boolean found;
        ;

        found = (select firstonly
                     RecId
                from
                     ledgerJournalVoucherChanged
                 where
                    ledgerJournalVoucherChanged.JournalNum == _ledgerJournalId &&
                    ledgerJournalVoucherChanged.ToVoucher  == _toVoucher
                     ).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LedgerJournalVoucherChanged find(
        LedgerJournalId _ledgerJournalId,
        Voucher _toVoucher ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerJournalVoucherChanged ledgerJournalVoucherChanged;
        ;

        ledgerJournalVoucherChanged.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerJournalVoucherChanged.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            ledgerJournalVoucherChanged
            where
            ledgerJournalVoucherChanged.JournalNum == _ledgerJournalId &&
            ledgerJournalVoucherChanged.ToVoucher == _toVoucher;

        return ledgerJournalVoucherChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromVendTrans</Name>
				<Source><![CDATA[
    static LedgerJournalVoucherChanged findFromVendTrans(VendTrans _vendTrans)
    {
        return LedgerJournalVoucherChanged::findFromVoucher(_vendTrans.JournalNum, _vendTrans.Voucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromVoucher</Name>
				<Source><![CDATA[
    static LedgerJournalVoucherChanged findFromVoucher(LedgerJournalId  _ledgerJournalId,
                                                       Voucher          _fromVoucher)
    {
        LedgerJournalVoucherChanged ledgerJournalVoucherChanged;
        ;

        if (_ledgerJournalId && _fromVoucher)
        {
            select ledgerJournalVoucherChanged
            where ledgerJournalVoucherChanged.JournalNum    == _ledgerJournalId &&
                  ledgerJournalVoucherChanged.FromVoucher   == _fromVoucher;
        }
        return ledgerJournalVoucherChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromVoucherSkippingAccrual</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>LedgerJournalVoucherChanged</c> by <c>LedgerJournalId</c> and <c>Voucher</c>, skipping <c>LedgerJournalTransAccrualTrans</c>.
    /// </summary>
    /// <param name = "_ledgerJournalId">The <c>LedgerJournalId</c>.</param>
    /// <param name = "_fromVoucher">The <c>Voucher</c>.</param>
    /// <returns>The <c>LedgerJournalVoucherChanged</c> found.</returns>
    internal static LedgerJournalVoucherChanged findFromVoucherSkippingAccrual(LedgerJournalId _ledgerJournalId, Voucher _fromVoucher)
    {
        LedgerJournalVoucherChanged ledgerJournalVoucherChanged;
        LedgerJournalTransAccrualTrans ledgerJournalTransAccrualTrans;
        select ledgerJournalVoucherChanged
            where ledgerJournalVoucherChanged.JournalNum == _ledgerJournalId &&
                ledgerJournalVoucherChanged.FromVoucher == _fromVoucher
            notexists join ledgerJournalTransAccrualTrans
                where ledgerJournalTransAccrualTrans.Voucher == ledgerJournalVoucherChanged.ToVoucher
                    && ledgerJournalTransAccrualTrans.TransDate == ledgerJournalVoucherChanged.ToDate;
        return ledgerJournalVoucherChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyChangedVoucherDate</Name>
				<Source><![CDATA[
    static void modifyChangedVoucherDate(LedgerJournalId _ledgerJournalId,
                                                Voucher         _fromVoucher,
                                                TransDate       _fromDate,
                                                Voucher         _toVoucher,
                                                TransDate       _toDate)
    {
        LedgerJournalVoucherChanged    ledgerJournalVoucherChanged;
        ;
        ttsbegin;

        select firstonly forupdate ledgerJournalVoucherChanged
        where ledgerJournalVoucherChanged.JournalNum == _ledgerJournalId &&
              ledgerJournalVoucherChanged.ToDate     == _fromDate  &&
              ledgerJournalVoucherChanged.ToVoucher  == _fromVoucher;

        if (ledgerJournalVoucherChanged)
        {
            ledgerJournalVoucherChanged.ToDate    = _toDate;
            ledgerJournalVoucherChanged.ToVoucher = _toVoucher;
            ledgerJournalVoucherChanged.update();
        }
        else
        {
            ledgerJournalVoucherChanged.JournalNum  = _ledgerJournalId;
            ledgerJournalVoucherChanged.FromDate    = _fromDate;
            ledgerJournalVoucherChanged.FromVoucher = _fromVoucher;
            ledgerJournalVoucherChanged.ToDate      = _toDate;
            ledgerJournalVoucherChanged.ToVoucher   = _toVoucher;
            ledgerJournalVoucherChanged.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyOrigVoucherDate</Name>
				<Source><![CDATA[
    static void modifyOrigVoucherDate(LedgerJournalId _ledgerJournalId,
                                             Voucher    _fromVoucher,
                                             TransDate  _fromDate,
                                             Voucher    _toVoucher,
                                             TransDate  _toDate)
    {
        LedgerJournalVoucherChanged    ledgerJournalVoucherChanged;
        ;
        ttsbegin;

        select firstonly forupdate ledgerJournalVoucherChanged
        where ledgerJournalVoucherChanged.JournalNum    == _ledgerJournalId &&
              ledgerJournalVoucherChanged.FromDate      == _fromDate  &&
              ledgerJournalVoucherChanged.FromVoucher   == _fromVoucher;

        if (ledgerJournalVoucherChanged)
        {
            ledgerJournalVoucherChanged.ToDate    = _toDate;
            ledgerJournalVoucherChanged.ToVoucher = _toVoucher;
            ledgerJournalVoucherChanged.update();
        }
        else
        {
            ledgerJournalVoucherChanged.JournalNum  = _ledgerJournalId;
            ledgerJournalVoucherChanged.FromDate    = _fromDate;
            ledgerJournalVoucherChanged.FromVoucher = _fromVoucher;
            ledgerJournalVoucherChanged.ToDate      = _toDate;
            ledgerJournalVoucherChanged.ToVoucher   = _toVoucher;
            ledgerJournalVoucherChanged.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102233";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126075</DeveloperDocumentation>
	<Label>@SYS68413</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>FromDate</TitleField1>
	<TitleField2>FromVoucher</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountingFoundation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Base</Name>
			<Label>@SYS28688</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Destination</Name>
			<Label>@SYS72080</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS5209</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@SYS76112</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14656</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@SYS76113</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FromVoucherDateJournalNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FromVoucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ToVoucherDateJournalNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ToVoucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<SourceEDT>LedgerJournalId</SourceEDT>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<EntityRelationshipRole>@SYS126076</EntityRelationshipRole>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableRole>LedgerJournalTrans</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>LedgerJournalVoucherChanged</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToVoucher</Name>
					<Field>ToVoucher</Field>
					<RelatedField>Voucher</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTrans</Name>
			<EntityRelationshipRole>@SYS123521</EntityRelationshipRole>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableRole>VendTrans</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>LedgerJournalVoucherChanged</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromVoucher</Name>
					<Field>FromVoucher</Field>
					<RelatedField>Voucher</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>