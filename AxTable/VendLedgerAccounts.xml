<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendLedgerAccounts</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendLedgerAccounts extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAccountRelation</Name>
				<Source><![CDATA[
    boolean checkAccountRelation()
    {
        return this.CustVendLedgerAccounts::checkAccountRelation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        LedgerCache::clearScope(LedgerCacheScope::PartyMainAccountDimensionListProvVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        LedgerCache::clearScope(LedgerCacheScope::PartyMainAccountDimensionListProvVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        DimensionAttributeValue dimAttrValue;
        DimensionAttribute mainAccountDimAttribute;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(VendLedgerAccounts, SummaryLedgerDimension):
                if (this.SummaryLedgerDimension)
                {
                    mainAccountDimAttribute.RecId = DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount);
                    dimAttrValue = DimensionAttributeValue::findByDimensionAttributeAndEntityInst(mainAccountDimAttribute.RecId, LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.SummaryLedgerDimension).RecId, true, true);
                    if (!dimAttrValue.IsBlockedForManualEntry)
                    {
                        dimAttrValue.IsBlockedForManualEntry = NoYes::Yes;
                        dimAttrValue.update();
                    }
                }
                if (VendProvisionalBalanceFeature::isEnabled()
                    && this.existsVendorTransactions())
                {
                    warning ("@AccountsPayable:VendorTransactionsExistsForPostingProfile");
                }
                break;
            case fieldNum(VendLedgerAccounts, PurchasingLedgerDimension):

                if (VendProvisionalBalanceFeature::isEnabled()
                    && this.existsVendorTransactions())
                {
                    warning ("@AccountsPayable:VendorTransactionsExistsForPostingProfile");
                }
                  
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsVendorTransactions</Name>
				<Source><![CDATA[
    private boolean existsVendorTransactions()
    {
        VendTable vendTable;
        VendTrans vendTrans;

        Select firstonly RecId from vendTrans
		join vendTable
			Where vendTable.AccountNum  == vendTrans.AccountNum
				&& ((this.AccountCode == TableGroupAll::Table &&  vendTable.AccountNum == this.Num)
				|| (this.AccountCode == TableGroupAll::GroupId && vendTable.VendGroup == this.Num)
				|| (this.AccountCode == TableGroupAll::All))
				&& vendTrans.PostingProfile ==  this.PostingProfile;

        return vendTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        VendLedgerAccounts this_orig = this.orig();

        super();

        if (this.ClearingLedgerDimension != this_orig.ClearingLedgerDimension ||
            this.SummaryLedgerDimension != this_orig.SummaryLedgerDimension ||
            this.PurchasingLedgerDimension != this_orig.PurchasingLedgerDimension ||
            this.PurchasingOffsetLedgerDimension != this_orig.PurchasingOffsetLedgerDimension ||
            this.VATPrepaymentsLedgerDimension != this_orig.VATPrepaymentsLedgerDimension)
        {
            LedgerCache::clearScope(LedgerCacheScope::PartyMainAccountDimensionListProvVend);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId p1)
    {
        boolean ret = super(p1);

        switch (p1)
        {
            case (fieldnum(VendLedgerAccounts,SummaryLedgerDimension)):
                ret = MainAccount::checkAllowPosting(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.SummaryLedgerDimension).MainAccountId) && ret;
                break;

            case (fieldnum(VendLedgerAccounts,ClearingLedgerDimension)):
                ret = MainAccount::checkAllowPosting(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.ClearingLedgerDimension).MainAccountId) && ret;
                break;

            case (fieldnum(VendLedgerAccounts,Num)):
                ret = this.checkAccountRelation() && ret;
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret = super();

        ret = this.checkAccountRelation() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(VendPostingProfile _postingProfile, PostingProfileAccountCode _accountCode, PostingProfileAccountRelation _num )
    {
        boolean ret = true;

        if (!VendLedgerAccounts::exist(_postingProfile, _accountCode, _num))
        {
            ret = checkFailed(strfmt(VendLedgerAccounts::txtNotExist(), _postingProfile, _accountCode, _num));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount clearingLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile)
    {
        LedgerDimensionDefaultAccount ledgerDimension;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;

            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        ledgerDimension = CustVendLedgerDimensions::clearingLedgerDimension(_vendAccount, vendPostingProfile, vendLedgerAccounts, TableGroupAll::Table);

        if (!ledgerDimension)
        {
            ledgerDimension = CustVendLedgerDimensions::clearingLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile, vendLedgerAccounts, TableGroupAll::GroupId);
        }

        if (!ledgerDimension)
        {
            ledgerDimension = (select firstonly ClearingLedgerDimension from vendLedgerAccounts
                                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                                      vendLedgerAccounts.AccountCode == TableGroupAll::All).ClearingLedgerDimension;
        }

        if (!ledgerDimension)
        {
            ledgerDimension = VendParameters::find().ClearingLedgerDimension;
        }

        if (!ledgerDimension)
        {
            throw error(strfmt("@SYS68845", _vendAccount, vendPostingProfile));
        }

        return ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionAttrNamesForCheck_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the set of dimension attribute names to checking in settlement
    /// </summary>
    /// <param name="_vendAccount">
    /// Vendor account to use for profile selection
    /// </param>
    /// <param name="_vendPostingProfile">
    /// Vendor posting profile to search for
    /// </param>
    /// <returns>
    /// The set of dimension attribute names to checking in settlement
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If vendor posting profile not found
    /// </exception>
    public static Set dimensionAttrNamesForCheck_RU(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '')
    {
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        vendLedgerAccounts = VendLedgerAccounts::find(vendPostingProfile, TableGroupAll::Table, _vendAccount);

        if (!vendLedgerAccounts)
        {
            vendLedgerAccounts = VendLedgerAccounts::find(vendPostingProfile, TableGroupAll::GroupId, VendTable::groupId(_vendAccount));
        }

        if (!vendLedgerAccounts)
        {
            vendLedgerAccounts = VendLedgerAccounts::find(vendPostingProfile, TableGroupAll::All, '');
        }

        if (vendLedgerAccounts.DimensionHierarchy_RU && DimensionHierarchy::exist(vendLedgerAccounts.DimensionHierarchy_RU))
        {
            return DimensionHierarchyHelper::dimensionAttrExt_RU(DimensionHierarchy::find(vendLedgerAccounts.DimensionHierarchy_RU).RecId);
        }

        return new Set(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(VendPostingProfile _postingProfile, PostingProfileAccountCode _accountCode, PostingProfileAccountRelation _num )
    {
        VendLedgerAccounts vendLedgerAccounts;

        select firstonly RecId from vendLedgerAccounts
                             where vendLedgerAccounts.PostingProfile == _postingProfile &&
                                vendLedgerAccounts.AccountCode == _accountCode &&
                                vendLedgerAccounts.Num == _num;

        return vendLedgerAccounts.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static VendLedgerAccounts find(VendPostingProfile _postingProfile, PostingProfileAccountCode _accountCode,
        PostingProfileAccountRelation _num, boolean _forupdate = false, ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendLedgerAccounts vendLedgerAccounts;

        vendLedgerAccounts.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendLedgerAccounts.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            vendLedgerAccounts
            where
            vendLedgerAccounts.PostingProfile == _postingProfile &&
                    vendLedgerAccounts.AccountCode == _accountCode &&
                    vendLedgerAccounts.Num == _num;

        return vendLedgerAccounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFineAccount_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the correct Account related to Fine, following the order Table, Group, All
    /// </summary>
    /// <param name="_vendAccount">
    /// VendAccount information that is going to be used to find the correct account (accountCode = Table)
    /// </param>
    /// <param name="_vendPostingProfile">
    /// The posting profile that should used for searching
    /// </param>
    /// <returns>
    /// The default account
    /// </returns>
    static LedgerDimensionDefaultAccount findFineAccount_BR(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile)
    {
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        select firstonly FineLedgerDimension_BR from vendLedgerAccounts
            where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                  vendLedgerAccounts.AccountCode == TableGroupAll::Table &&
                  vendLedgerAccounts.Num == _vendAccount;

        if (!vendLedgerAccounts.FineLedgerDimension_BR)
        {
            select firstonly FineLedgerDimension_BR from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::GroupId &&
                      vendLedgerAccounts.Num == VendTable::find(_vendAccount).VendGroup;
        }

        if (!vendLedgerAccounts.FineLedgerDimension_BR)
        {
            select firstonly FineLedgerDimension_BR from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::All;
        }

        if (! vendLedgerAccounts.FineLedgerDimension_BR)
        {
            throw error(strfmt("@GLS1234", _vendAccount, vendPostingProfile, "@GLS1235", strlwr("@SYS8079")));
        }

        return vendLedgerAccounts.FineLedgerDimension_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInterestAccount_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the correct Account related to Interest, following the order Table, Group, All
    /// </summary>
    /// <param name="_vendAccount">
    /// VendAccount information that is going to be used to find the correct account (accountCode = Table)
    /// </param>
    /// <param name="_vendPostingProfile">
    /// The posting profile that should used for searching
    /// </param>
    /// <returns>
    /// The default account
    /// </returns>
    static LedgerDimensionDefaultAccount findInterestAccount_BR(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile)
    {
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;

            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        select firstonly InterestLedgerDimension_BR from vendLedgerAccounts
            where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                  vendLedgerAccounts.AccountCode == TableGroupAll::Table &&
                  vendLedgerAccounts.Num == _vendAccount;

        if (!vendLedgerAccounts.InterestLedgerDimension_BR)
        {
            select firstonly InterestLedgerDimension_BR from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::GroupId &&
                      vendLedgerAccounts.Num == VendTable::find(_vendAccount).VendGroup;
        }

        if (!vendLedgerAccounts.InterestLedgerDimension_BR)
        {
            select firstonly InterestLedgerDimension_BR from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::All;
        }

        if (!vendLedgerAccounts.InterestLedgerDimension_BR)
        {
            throw error(strfmt("@GLS1234", _vendAccount, vendPostingProfile, "@GLS147", strlwr("@SYS8079")));
        }

        return vendLedgerAccounts.InterestLedgerDimension_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchasingLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount findPurchasingLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile)
    {
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
        }

        select firstonly PurchasingLedgerDimension from vendLedgerAccounts
            where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                  vendLedgerAccounts.AccountCode == TableGroupAll::Table &&
                  vendLedgerAccounts.Num == _vendAccount;

        if (!vendLedgerAccounts.PurchasingLedgerDimension)
        {
            select firstonly PurchasingLedgerDimension from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::GroupId &&
                      vendLedgerAccounts.Num == VendTable::find(_vendAccount).VendGroup;
        }

        if (!vendLedgerAccounts.PurchasingLedgerDimension)
        {
            select firstonly PurchasingLedgerDimension from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.PostingProfile > '' &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::All;
        }

        return vendLedgerAccounts.PurchasingLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchasingOffsetLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount findPurchasingOffsetLedgerDimension(VendAccount _accountNum, VendPostingProfile _vendPostingProfile)
    {
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
        }

        select firstonly PurchasingOffsetLedgerDimension from vendLedgerAccounts
            where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                  vendLedgerAccounts.AccountCode == TableGroupAll::Table &&
                  vendLedgerAccounts.Num == _accountNum;

        if (!vendLedgerAccounts.PurchasingOffsetLedgerDimension)
        {
            select firstonly PurchasingOffsetLedgerDimension from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::GroupId &&
                      vendLedgerAccounts.Num == VendTable::find(_accountNum).VendGroup;
        }

        if (!vendLedgerAccounts.PurchasingOffsetLedgerDimension)
        {
            select firstonly PurchasingOffsetLedgerDimension from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                      vendLedgerAccounts.PostingProfile > '' &&
                      vendLedgerAccounts.AccountCode == TableGroupAll::All;
        }

        return vendLedgerAccounts.PurchasingOffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTaxTransferAccount_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the correct Account related to Tax Credit, following the order Table, Group, All
    /// </summary>
    /// <param name="_vendAccount">
    /// VendAccount information that is going to be used to find the correct account (accountCode = Table)
    /// </param>
    /// <param name="_vendPostingProfile">
    /// The posting profile that should used for searching (optional)
    /// </param>
    /// <returns>
    /// The default account
    /// </returns>
    static LedgerDimensionDefaultAccount findTaxTransferAccount_BR(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = VendParameters::find().PostingProfile)
    {
        VendLedgerAccounts vendLedgerAccounts;

        if (!_vendPostingProfile)
        {
            throw error("@SYS27198");
        }

        select firstonly TaxTransferLedgerDimension_BR
            from vendLedgerAccounts
            where vendLedgerAccounts.PostingProfile == _vendPostingProfile &&
                vendLedgerAccounts.AccountCode == TableGroupAll::Table &&
                vendLedgerAccounts.Num == _vendAccount;

        if (!vendLedgerAccounts.TaxTransferLedgerDimension_BR)
        {
            select firstonly TaxTransferLedgerDimension_BR
                from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == _vendPostingProfile &&
                    vendLedgerAccounts.AccountCode == TableGroupAll::GroupId &&
                    vendLedgerAccounts.Num == VendTable::find(_vendAccount).VendGroup;
        }

        if (!vendLedgerAccounts.TaxTransferLedgerDimension_BR)
        {
            select firstonly TaxTransferLedgerDimension_BR
                from vendLedgerAccounts
                where vendLedgerAccounts.PostingProfile == _vendPostingProfile &&
                    vendLedgerAccounts.PostingProfile > '' &&
                    vendLedgerAccounts.AccountCode == TableGroupAll::All;
        }

        if (!vendLedgerAccounts.TaxTransferLedgerDimension_BR)
        {
            throw error(strfmt("@GLS1234", _vendAccount, _vendPostingProfile, "@GLS63272", strlwr("@SYS8079")));
        }

        return vendLedgerAccounts.TaxTransferLedgerDimension_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchasingLedgerDimensionV2</Name>
				<Source><![CDATA[
    internal static LedgerDimensionDefaultAccount purchasingLedgerDimensionV2(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '', boolean _throwError = true)
    {
        LedgerDimensionDefaultAccount purchLedgerDimension;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                if (_throwError)
                {
                    throw error("@SYS27198");
                }
                else
                {
                    return purchLedgerDimension;
                }
            }
        }

        purchLedgerDimension = VendLedgerAccounts::findPurchasingLedgerDimension(_vendAccount, vendPostingProfile);

        if (!purchLedgerDimension)
        {
            purchLedgerDimension = VendLedgerAccounts::findPurchasingLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile);
        }

        if (!purchLedgerDimension)
        {
            purchLedgerDimension =
                (select firstonly PurchasingLedgerDimension from vendLedgerAccounts
                    where vendLedgerAccounts.PostingProfile == vendPostingProfile
                        && vendLedgerAccounts.AccountCode == TableGroupAll::All).PurchasingLedgerDimension;
        }

        if (!purchLedgerDimension && _throwError)
        {
            throw error(strfmt("@SYS26356", _vendAccount, vendPostingProfile));
        }

        return purchLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchasingLedgerDimension</Name>
				<Source><![CDATA[
    [SysObsolete('This method is made obselete as this code is shifted to purchasingLedgerDimensionV2 method.', false, 22\05\2023)]
    public static LedgerDimensionDefaultAccount purchasingLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '')

    {
        LedgerDimensionDefaultAccount purchLedgerDimension;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        if (VendTransSummaryAndArrivalAccountsFlight::instance().isEnabled())
        {
            purchLedgerDimension = VendLedgerAccounts::purchasingLedgerDimensionV2(_vendAccount, _vendPostingProfile);
        }
        else
        {
            purchLedgerDimension = VendLedgerAccounts::findPurchasingLedgerDimension(_vendAccount, vendPostingProfile);

            if (!purchLedgerDimension)
            {
                purchLedgerDimension= VendLedgerAccounts::findPurchasingLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile);
            }

            if (!purchLedgerDimension)
            {
                purchLedgerDimension= (select firstonly PurchasingLedgerDimension from vendLedgerAccounts
                                    where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                                          vendLedgerAccounts.AccountCode == TableGroupAll::All).PurchasingLedgerDimension;
            }

            if (!purchLedgerDimension)
            {
                throw error(strfmt("@SYS26356", _vendAccount, vendPostingProfile));
            }
        }

        return purchLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchasingOffsetLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount purchasingOffsetLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '')
    {
        LedgerDimensionDefaultAccount purchOffsetLedgerDimension;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        purchOffsetLedgerDimension = VendLedgerAccounts::findPurchasingOffsetLedgerDimension(_vendAccount, vendPostingProfile);

        if (!purchOffsetLedgerDimension)
        {
            purchOffsetLedgerDimension = VendLedgerAccounts::findPurchasingOffsetLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile);
        }
        if (!purchOffsetLedgerDimension)
        {
            purchOffsetLedgerDimension = (select firstonly PurchasingOffsetLedgerDimension from vendLedgerAccounts
                                           where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                                                 vendLedgerAccounts.PostingProfile > '' &&
                                                 vendLedgerAccounts.AccountCode == TableGroupAll::All).PurchasingOffsetLedgerDimension;
        }

        if (!purchOffsetLedgerDimension)
        {
            throw error(strfmt("@SYS26357", _vendAccount, vendPostingProfile));
        }

        return purchOffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summaryLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount summaryLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '', boolean _throwError = true)
    {
        LedgerDimensionDefaultAccount ledgerDimensionId;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (!vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;

            if (!vendPostingProfile)
            {
                if (_throwError)
                {
                    throw error("@SYS27198");
                }
                else
                {
                    return ledgerDimensionId;
                }
            }
        }

        ledgerDimensionId = CustVendLedgerDimensions::summaryLedgerDimension(_vendAccount, vendPostingProfile, vendLedgerAccounts, TableGroupAll::Table);

        if (!ledgerDimensionId)
        {
            ledgerDimensionId = CustVendLedgerDimensions::summaryLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile, vendLedgerAccounts, TableGroupAll::GroupId);
        }

        if (!ledgerDimensionId)
        {
            ledgerDimensionId = (select firstonly SummaryLedgerDimension from vendLedgerAccounts
                                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                                      vendLedgerAccounts.AccountCode == TableGroupAll::All).SummaryLedgerDimension;
        }

        if (!ledgerDimensionId && _throwError)
        {
            throw error(strfmt("@SYS25819", _vendAccount, _vendPostingProfile));
        }

        return ledgerDimensionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102179";
    }

]]></Source>
			</Method>
			<Method>
				<Name>vatPrepaymentsLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount vatPrepaymentsLedgerDimension(VendAccount _vendAccount, VendPostingProfile _vendPostingProfile = '')
    {
        LedgerDimensionDefaultAccount ledgerDimension;
        VendLedgerAccounts vendLedgerAccounts;
        VendPostingProfile vendPostingProfile = _vendPostingProfile;

        if (! vendPostingProfile)
        {
            vendPostingProfile = VendParameters::find().PostingProfile;
            if (!vendPostingProfile)
            {
                throw error("@SYS27198");
            }
        }

        ledgerDimension = CustVendLedgerDimensions::prePaymentLedgerDimension(_vendAccount, vendPostingProfile, vendLedgerAccounts, TableGroupAll::Table);

        if (!ledgerDimension)
        {
            ledgerDimension = CustVendLedgerDimensions::prePaymentLedgerDimension(VendTable::groupId(_vendAccount), vendPostingProfile, vendLedgerAccounts, TableGroupAll::GroupId);
        }

        if (!ledgerDimension)
        {
            ledgerDimension = (select firstonly vatPrepaymentsLedgerDimension from vendLedgerAccounts
                                where vendLedgerAccounts.PostingProfile == vendPostingProfile &&
                                       vendLedgerAccounts.AccountCode == TableGroupAll::All).vatPrepaymentsLedgerDimension;
        }

        if (!ledgerDimension)
        {
            throw error(strfmt("@SYS78881", _vendAccount, _vendPostingProfile));
        }

        return ledgerDimension;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126049</DeveloperDocumentation>
	<FormRef>VendPosting</FormRef>
	<Label>@SYS24240</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PostingProfile</TitleField1>
	<TitleField2>AccountCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProfileAccountIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>ProfileAccountIdx</PrimaryIndex>
	<ReplacementKey>ProfileAccountIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SummaryLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClearingLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasingLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasingOffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPrepaymentsLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionHierarchy_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SummaryLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClearingLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasingLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasingOffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATPrepaymentsLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxTransferLedgerDimension_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterestLedgerDimension_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FineLedgerDimension_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PostingProfileAccountCode</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ClearingLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@AccountsPayable:VendLedgerAccounts_ClearingLedgerDimension</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionHierarchy_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DimensionHierarchyId</ExtendedDataType>
			<Label>@SYS79305</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FineLedgerDimension_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS1235</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InterestLedgerDimension_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS147</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Num</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PostingProfileAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPostingProfile</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchasingLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>VendInvoiceRegisterApproval</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<HelpText>@AccountsPayable:ArrivalAccountIdHelpText</HelpText>
			<Label>@SYS14181</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchasingOffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>VendInvoiceRegisterApproval</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SummaryLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<HelpText>@AccountsPayable:SummaryAccountIdHelpText</HelpText>
			<Label>@SYS11733</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxTransferLedgerDimension_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS63427</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VATPrepaymentsLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS68656</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileAccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Num</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ClearingLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ClearingLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VATPrepaymentsLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VATPrepaymentsLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SummaryLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SummaryLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchasingOffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchasingOffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchasingLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchasingLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionHierarchyIdx_RU</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DimensionHierarchy_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueCombinationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxTransferLedgerDimension_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendLedgerAccounts</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PostingProfile</MapField>
					<MapFieldTo>PostingProfile</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AccountCode</MapField>
					<MapFieldTo>AccountCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendAC</MapField>
					<MapFieldTo>Num</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ClearingLedgerDimension</MapField>
					<MapFieldTo>ClearingLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SummaryLedgerDimension</MapField>
					<MapFieldTo>SummaryLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATPrepaymentsLedgerDimension</MapField>
					<MapFieldTo>VATPrepaymentsLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendLedgerDimensions</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PostingProfile</MapField>
					<MapFieldTo>PostingProfile</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AccountCode</MapField>
					<MapFieldTo>AccountCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendAC</MapField>
					<MapFieldTo>Num</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SummaryLedgerDimension</MapField>
					<MapFieldTo>SummaryLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ClearingLedgerDimension</MapField>
					<MapFieldTo>ClearingLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATPrepaymentsLedgerDimension</MapField>
					<MapFieldTo>VATPrepaymentsLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ClearingLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ClearingLedgerDimension_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClearingLedgerDimension</Name>
					<Field>ClearingLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionHierarchy_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionHierarchy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionHierarchy</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionHierarchy_RU</Name>
					<Field>DimensionHierarchy_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FineLedgerDimension_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FineLedgerDimension_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FineLedgerDimension_BR</Name>
					<Field>FineLedgerDimension_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InterestLedgerDimension_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InterestLedgerDimension_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterestLedgerDimension_BR</Name>
					<Field>InterestLedgerDimension_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchasingLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchasingLedgerDimension_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchasingLedgerDimension</Name>
					<Field>PurchasingLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchasingOffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchasingOffsetLedgerDimension_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchasingOffsetLedgerDimension</Name>
					<Field>PurchasingOffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SummaryLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SummaryLedgerDimension_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SummaryLedgerDimension</Name>
					<Field>SummaryLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTransferLedgerDimension_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTransferLedgerDimension_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxTransferLedgerDimension_BR</Name>
					<Field>TaxTransferLedgerDimension_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VATPrepaymentsLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VATPrepaymentsLedgerDimension_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATPrepaymentsLedgerDimension</Name>
					<Field>VATPrepaymentsLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126050</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>VendGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendLedger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126050</EntityRelationshipRole>
			<RelatedTable>VendLedger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendLedger</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<SourceEDT>VendPostingProfile</SourceEDT>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126050</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendLedgerAccounts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>