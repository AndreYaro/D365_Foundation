<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjLinePropertySetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjLinePropertySetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.ProjCode       = TableGroupAll::All;
        this.CategoryCode   = TableGroupAll::All;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjLinePropertySetup, ProjCode) :
                this.ProjRelation = '';
                break;

            case fieldNum(ProjLinePropertySetup, CategoryCode) :
                this.CategoryRelation = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId fieldId)
    {
        boolean ret;

        ret = super(fieldId);

        switch (fieldId)
        {
            case fieldNum(ProjLinePropertySetup, ProjRelation):
                switch (this.ProjCode)
                {
                    case TableGroupAll::Table   :
                        return ProjTable::find(this.ProjRelation).checkValid() && ret;
                    case TableGroupAll::GroupId :
                        return ProjGroup::find(this.ProjRelation).checkValid() && ret;
                    case TableGroupAll::All     :
                        if (this.ProjRelation)
                        {
                            return checkFailed("@SYS24200") && ret;
                        }
                }

            case fieldNum(ProjLinePropertySetup, CategoryRelation):
                switch (this.CategoryCode)
                {
                    case TableGroupAll::Table   :
                        return ProjCategory::find(this.CategoryRelation).checkValid() && ret;
                    case TableGroupAll::GroupId :
                        return ProjCategoryGroup::find(this.CategoryRelation).checkValid() && ret;
                    case TableGroupAll::All     :
                        if (this.CategoryRelation)
                        {
                            return checkFailed("@SYS24200") && ret;
                        }
                }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.ProjCode != TableGroupAll::All && ! this.ProjRelation)
        {
            ret = checkFailed("@SYS68855");
        }

        if (this.CategoryCode != TableGroupAll::All && ! this.CategoryRelation)
        {
            ret = checkFailed("@SYS68856");
        }

        if (this.DebitNote_BR && !this.canEditDebitNote_BR(this.CategoryRelation))
        {
            ret = checkFailed(strFmt("@Brazil:ProjLinePropertySetupDebitNoteSetupValidation", fieldPName(ProjCategoryGroup, CategoryType), enum2Str(ProjCategoryType::Cost)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditDebitNote_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field DebitNote_BR can be edited
    /// </summary>
    /// <param name="_categoryRelation">
    /// The category relation
    /// </param>
    /// <returns>
    /// True if it can be edited; otherwise, false.
    /// </returns>
    public boolean canEditDebitNote_BR(ProjCategoryRelation _categoryRelation)
    {
        boolean ret;

        var categoryType1 = ProjCategory::find(_categoryRelation).CategoryType;
        var categoryType2 = ProjCategoryGroup::find(_categoryRelation).CategoryType;

        if ((this.ProjCode == TableGroupAll::All     && this.CategoryCode == TableGroupAll::All) ||
            (this.ProjCode == TableGroupAll::Table   && this.CategoryCode == TableGroupAll::All) ||
            (this.ProjCode == TableGroupAll::All     && this.CategoryCode == TableGroupAll::Table  && categoryType1 == ProjCategoryType::Cost) ||
            (this.ProjCode == TableGroupAll::GroupId && this.CategoryCode == TableGroupAll::All) ||
            (this.ProjCode == TableGroupAll::All     && this.CategoryCode == TableGroupAll::GroupId && categoryType2 == ProjCategoryType::Cost) ||
            (this.ProjCode == TableGroupAll::Table   && this.CategoryCode == TableGroupAll::GroupId && categoryType2 == ProjCategoryType::Cost) ||
            (this.ProjCode == TableGroupAll::GroupId && this.CategoryCode == TableGroupAll::GroupId && categoryType2 == ProjCategoryType::Cost) ||
            (this.ProjCode == TableGroupAll::Table   && this.CategoryCode == TableGroupAll::Table   && categoryType1 == ProjCategoryType::Cost) ||
            (this.ProjCode == TableGroupAll::GroupId && this.CategoryCode == TableGroupAll::Table   && categoryType1 == ProjCategoryType::Cost))
        {
            ret = true;
        }
        else
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreateProjDebitNote_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a debit note can be created.
    /// </summary>
    /// <param name="_projId">
    /// The project Id
    /// </param>
    /// <param name="_categoryId">
    /// The category Id
    /// </param>
    /// <param name="setup">
    /// A boolean value to verify the debit note value in expense.
    /// </param>
    /// <returns>
    /// True if it can be created; otherwise, false.
    /// </returns>
    public static boolean canCreateProjDebitNote_BR(ProjId _projId, CategoryId _categoryId, boolean setup)
    {
        ProjLinePropertySetup       projLinePropertySetup1,
                                    projLinePropertySetup2,
                                    projLinePropertySetup3,
                                    projLinePropertySetup4,
                                    projLinePropertySetup5,
                                    projLinePropertySetup6,
                                    projLinePropertySetup7,
                                    projLinePropertySetup8,
                                    projLinePropertySetup9;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup1
            where projLinePropertySetup1.ProjCode == TableGroupAll::All && projLinePropertySetup1.CategoryCode == TableGroupAll::All;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup2
            where projLinePropertySetup2.ProjCode == TableGroupAll::All && projLinePropertySetup2.CategoryCode == TableGroupAll::Table &&
                projLinePropertySetup2.CategoryRelation == _categoryId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup3
            where projLinePropertySetup3.ProjCode == TableGroupAll::Table && projLinePropertySetup3.CategoryCode == TableGroupAll::Table &&
                projLinePropertySetup3.CategoryRelation == _categoryId && projLinePropertySetup3.ProjRelation == _projId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup4
            where projLinePropertySetup4.ProjCode == TableGroupAll::Table && projLinePropertySetup4.CategoryCode ==TableGroupAll::All &&
                projLinePropertySetup4.ProjRelation ==_projId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup5
            where projLinePropertySetup5.ProjCode == TableGroupAll::Table && projLinePropertySetup5.CategoryCode == TableGroupAll::GroupId &&
                projLinePropertySetup5.ProjRelation == _projId && projLinePropertySetup5.CategoryRelation == Projcategory::find(_categoryId).CategoryGroupId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup6
            where projLinePropertySetup6.ProjCode == TableGroupAll::All && projLinePropertySetup6.CategoryCode == TableGroupAll::GroupId &&
                projLinePropertySetup6.CategoryRelation == Projcategory::find(_categoryId).CategoryGroupId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup7
            where projLinePropertySetup7.ProjCode == TableGroupAll::GroupId &&
                projLinePropertySetup7.CategoryCode ==TableGroupAll::GroupId &&
                projLinePropertySetup7.CategoryRelation == Projcategory::find(_categoryId).CategoryGroupId &&
                projLinePropertySetup7.ProjRelation == ProjTable::find(_projId).ProjGroupId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup8
            where projLinePropertySetup8.ProjCode == TableGroupAll::GroupId && projLinePropertySetup8.CategoryCode == TableGroupAll::All &&
                projLinePropertySetup8.ProjRelation == ProjTable::find(_projId).ProjGroupId;

        select ProjCode,DebitNote_BR,CategoryRelation,CategoryCode,ProjRelation from projLinePropertySetup9
            where projLinePropertySetup9.ProjCode == TableGroupAll::GroupId &&
                projLinePropertySetup9.CategoryCode == TableGroupAll::Table &&
                projLinePropertySetup9.CategoryRelation == _categoryId &&
                projLinePropertySetup9.ProjRelation == ProjTable::find(_projId).ProjGroupId;

        if (setup)
        {
            if (projLinePropertySetup1.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup2.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup3.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup4.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup5.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup6.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup7.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup8.DebitNote_BR == NoYes::Yes ||
               projLinePropertySetup9.DebitNote_BR == NoYes::Yes)
            {
                    return true;
            }
        }
        else
        {
            if (projLinePropertySetup1.DebitNote_BR == NoYes::No &&
               projLinePropertySetup2.DebitNote_BR == NoYes::No &&
               projLinePropertySetup3.DebitNote_BR == NoYes::No &&
               projLinePropertySetup4.DebitNote_BR == NoYes::No &&
               projLinePropertySetup5.DebitNote_BR == NoYes::No &&
               projLinePropertySetup6.DebitNote_BR == NoYes::No &&
               projLinePropertySetup7.DebitNote_BR == NoYes::No &&
               projLinePropertySetup8.DebitNote_BR == NoYes::No &&
               projLinePropertySetup9.DebitNote_BR == NoYes::No)
            {
                    return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjLinePropertySetup find(TableGroupAll     _projCode,
                                             ProjId            _projId,
                                             TableGroupAll     _categoryCode,
                                             ProjCategoryId    _categoryId,
                                             boolean           _forUpdate = false)
    {
        ProjLinePropertySetup projLinePropertySetup = null;
        ;

        projLinePropertySetup.selectForUpdate(_forUpdate);

        select firstonly reverse projLinePropertySetup
            where projLinePropertySetup.ProjCode           ==  _projCode       &&
                  projLinePropertySetup.ProjRelation       ==  _projId         &&
                  projLinePropertySetup.CategoryCode       ==  _categoryCode   &&
                  projLinePropertySetup.CategoryRelation   ==  _categoryId;

        return projLinePropertySetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLinePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the line property in the <c>ProjLinePropertySetup</c> table.
    /// </summary>
    /// <param name = "_projId">
    ///     The project Id.
    /// </param>
    /// <param name = "_categoryId">
    ///     The category Id.
    /// </param>
    /// <returns>
    ///     The line property in the <c>ProjLinePropertySetup</c> table.
    /// </returns>
    public static ProjLinePropertyId findLinePropertyId(ProjId _projId, ProjCategoryId  _categoryId)
    {
        ProjId                  projId;
        ProjGroupId             projGroupId;
        ProjCategoryGroupId     projCategoryGroupId;
        ProjLinePropertySearch projLinePropertySearch;
        ProjLinePropertyId     linePropertyId;
        ;

        projId                  = _projId;
        projCategoryGroupId     = ProjCategory::find(_categoryId).CategoryGroupId;

        do
        {
            projLinePropertySearch = ProjTable::find(projId).ProjLinePropertySearch;
            projGroupId            = ProjTable::find(projId).ProjGroupId;

            linePropertyId = ProjLinePropertySetup::getLinePropertyId(projLinePropertySearch, projId, _categoryId, projGroupId, projCategoryGroupId);

            projId  = ProjTable::find(projId).ParentId;
        }
        while (!linePropertyId && projId);

        return linePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the line property in the <c>ProjLinePropertySetup</c> table.
    /// </summary>
    /// <param name = "_projLinePropertySearch">
    ///     The value of <c>ProjLinePropertySearch</c>.
    /// </param>
    /// <param name = "_projId">
    ///     The project Id.
    /// </param>
    /// <param name = "_categoryId">
    ///     The category Id.
    /// </param>
    /// <param name = "_projGroupId">
    ///     The project group.
    /// </param>
    /// <param name = "_projCategoryGroupId">
    ///     The category group.
    /// </param>
    /// <returns>
    ///     The line property in the <c>ProjLinePropertySetup</c> table.
    /// </returns>
    public static ProjLinePropertyId getLinePropertyId(ProjLinePropertySearch _projLinePropertySearch, ProjId _projId, ProjCategoryId  _categoryId, ProjGroupId _projGroupId, ProjCategoryGroupId _projCategoryGroupId)
    {
        ProjLinePropertyId linePropertyId;

        switch (_projLinePropertySearch)
        {
            case ProjLinePropertySearch::Project:
                linePropertyId = (select firstonly projLinePropertySetup order by ProjCode, CategoryCode where
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && projLinePropertySetup.ProjRelation == _projId && projLinePropertySetup.CategoryRelation==_categoryId)            ||
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && projLinePropertySetup.ProjRelation == _projId && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)    ||
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::All     && projLinePropertySetup.ProjRelation == _projId && !projLinePropertySetup.CategoryRelation)                        ||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && projLinePropertySetup.ProjRelation == _projGroupId && projLinePropertySetup.CategoryRelation==_categoryId)        ||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && projLinePropertySetup.ProjRelation == _projGroupId && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::All     && projLinePropertySetup.ProjRelation == _projGroupId && !projLinePropertySetup.CategoryRelation)                    ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && !projLinePropertySetup.ProjRelation && projLinePropertySetup.CategoryRelation==_categoryId)                      ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && !projLinePropertySetup.ProjRelation && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)              ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::All     && !projLinePropertySetup.ProjRelation && ! projLinePropertySetup.CategoryRelation)
                ).LinePropertyId;
                break;

            default:
                linePropertyId = (select firstonly projLinePropertySetup order by CategoryCode, ProjCode where
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && projLinePropertySetup.ProjRelation == _projId && projLinePropertySetup.CategoryRelation==_categoryId)             ||
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && projLinePropertySetup.ProjRelation == _projId && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)     ||
                (projLinePropertySetup.ProjCode==TableGroupAll::Table   && projLinePropertySetup.CategoryCode==TableGroupAll::All     && projLinePropertySetup.ProjRelation == _projId && !projLinePropertySetup.CategoryRelation)                         ||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && projLinePropertySetup.ProjRelation == _projGroupId && projLinePropertySetup.CategoryRelation==_categoryId)        ||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && projLinePropertySetup.ProjRelation == _projGroupId && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)||
                (projLinePropertySetup.ProjCode==TableGroupAll::GroupId && projLinePropertySetup.CategoryCode==TableGroupAll::All     && projLinePropertySetup.ProjRelation == _projGroupId && !projLinePropertySetup.CategoryRelation)                    ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::Table   && !projLinePropertySetup.ProjRelation && projLinePropertySetup.CategoryRelation==_categoryId)                      ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::GroupId && !projLinePropertySetup.ProjRelation && projLinePropertySetup.CategoryRelation==_projCategoryGroupId)              ||
                (projLinePropertySetup.ProjCode==TableGroupAll::All     && projLinePropertySetup.CategoryCode==TableGroupAll::All     && !projLinePropertySetup.ProjRelation && !projLinePropertySetup.CategoryRelation)
                ).LinePropertyId;
                break;
        }
        return linePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLinePropertyCategory</Name>
				<Source><![CDATA[
    public static void updateLinePropertyCategory(ProjCategoryId _projCategoryId, ProjLinePropertyId _projLinePropertyId, TableGroupAll _tableGroupAll,boolean _forUpdate = false)
    {
        ProjLinePropertySetup  projLinePropertySetup;
        ;

        ttsbegin;

        projLinePropertySetup = ProjLinePropertySetup::find(TableGroupAll::All,'', _tableGroupAll, _projCategoryId, _forUpdate);

        if (projLinePropertySetup.RecId == 0)
        {
            if (_projLinePropertyId)
            {
                projLinePropertySetup.clear();

                projLinePropertySetup.ProjCode         = TableGroupAll::All;
                projLinePropertySetup.CategoryCode     = _tableGroupAll;
                projLinePropertySetup.CategoryRelation = _projCategoryId;
                projLinePropertySetup.LinePropertyId   = _projLinePropertyId;

                projLinePropertySetup.insert();
            }
        }
        else
        {
            if (_projLinePropertyId)
            {
                projLinePropertySetup.LinePropertyId  = _projLinePropertyId;
                projLinePropertySetup.update();
            }
            else
            {
                //If linePropertyId is set to Null, then delete record.
                //LinePropertyId is Mandatory.
                projLinePropertySetup.delete();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified <c>ProjLinePropertySetup</c> exists.
    /// </summary>
    /// <param name="_projCode">
    ///    The TableGroupAll for project relation.
    /// </param>
    /// <param name="_projId">
    ///    Specify the projectId of a project
    /// </param>
    /// <param name="_categoryCode">
    ///    The TableGroupAll for project category relation.
    /// </param>
    /// <param name="_categoryId">
    ///    Specify the project category.
    /// </param>
    /// <returns>
    ///  <c>True</c> if record exists, <c>false</c> otherwise.
    /// </returns>
    public static boolean exist(TableGroupAll     _projCode,
                                ProjId            _projId,
                                TableGroupAll     _categoryCode,
                                ProjCategoryId    _categoryId)
    {
        ProjLinePropertySetup projLinePropertySetup;

        return (select firstonly RecId from projLinePropertySetup
                    where projLinePropertySetup.ProjCode           ==  _projCode       &&
                          projLinePropertySetup.ProjRelation       ==  _projId         &&
                          projLinePropertySetup.CategoryCode       ==  _categoryCode   &&
                          projLinePropertySetup.CategoryRelation   ==  _categoryId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLinePropertyProj</Name>
				<Source><![CDATA[
    public static void updateLinePropertyProj(ProjId _projId, ProjLinePropertyId _projLinePropertyId, TableGroupAll _tableGroupAll,boolean _forUpdate = false)
    {
        ProjLinePropertySetup  projLinePropertySetup;
        ;

        ttsbegin;

        projLinePropertySetup = ProjLinePropertySetup::find(_tableGroupAll, _projId, TableGroupAll::All,'', _forUpdate);

        if (projLinePropertySetup.RecId == 0)
        {
            if (_projLinePropertyId)
            {
                projLinePropertySetup.clear();

                projLinePropertySetup.ProjCode         = _tableGroupAll;
                projLinePropertySetup.ProjRelation     = _projId;
                projLinePropertySetup.CategoryCode     = TableGroupAll::All;
                projLinePropertySetup.LinePropertyId   = _projLinePropertyId;

                projLinePropertySetup.insert();
            }
        }
        else
        {
            if (_projLinePropertyId)
            {
                projLinePropertySetup.LinePropertyId  = _projLinePropertyId;
                projLinePropertySetup.update();
            }
            else
            {
                //If linePropertyId is set to Null, then delete record.
                //LinePropertyId is Mandatory.
                projLinePropertySetup.delete();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124987</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS68898</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProjRelation</TitleField1>
	<TitleField2>CategoryRelation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ProjCategoryIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>ProjCategoryIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Balance</Name>
			<Label>@SYS101236</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DebitNote_BR</Name>
			<Label>@GLS510026</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DebitNote_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CategoryCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DebitNote_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS510026</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LinePropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjRelation</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CategoryProjIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124988</EntityRelationshipRole>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CategoryCode</Name>
					<Field>CategoryCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryRelation</Name>
					<Field>CategoryRelation</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjCategoryGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124988</EntityRelationshipRole>
			<RelatedTable>ProjCategoryGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CategoryCode</Name>
					<Field>CategoryCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryRelation</Name>
					<Field>CategoryRelation</Field>
					<RelatedField>CategoryGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124988</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjCode</Name>
					<Field>ProjCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjRelation</Name>
					<Field>ProjRelation</Field>
					<RelatedField>ProjGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjLineProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjLineProperty</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjLineProperty</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjLineProperty_ProjLinePropertySetup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinePropertyId</Name>
					<SourceEDT>ProjLinePropertyId</SourceEDT>
					<Field>LinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124988</EntityRelationshipRole>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjCode</Name>
					<Field>ProjCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjRelation</Name>
					<Field>ProjRelation</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>