<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionLineReverse</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetTransactionLineReverse extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>BudgetTransactionLineReverse</c> table; if
    ///    not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;

        if (!BudgetTransactionLineReverse::exist(_recId))
        {
            ret = checkFailed(strfmt(BudgetTransactionLineReverse::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>BudgetTransactionLineReverse</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly
                    RecId
                from
                    budgetTransactionLineReverse
                where
                    budgetTransactionLineReverse.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>BudgetTransactionLineReverse</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetTransactionLineReverse</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetTransactionLineReverse find(
        RecId               _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetTransactionLineReverse budgetTransactionLineReverse;

        budgetTransactionLineReverse.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            budgetTransactionLineReverse.concurrencyModel(_concurrencyModel);
        }

        if (_recId)
        {
            select firstonly
                budgetTransactionLineReverse
                where
                    budgetTransactionLineReverse.RecId == _recId;
        }

        return budgetTransactionLineReverse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransactionLineInReversal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified <c>BudgetTransctionLine</c> record is part of a budget transaction
    ///    reversal.
    /// </summary>
    /// <param name="_budgetTransactionLineRecId">
    ///    The record ID of the <c>BudgetTransctionLine</c> record to find.
    /// </param>
    /// <returns>
    ///    true if the <c>BudgetTransctionLine</c> record is part of a budget transaction reversal; otherwise,
    ///    false.
    /// </returns>
    public static boolean isTransactionLineInReversal(RecId _budgetTransactionLineRecId)
    {
        boolean isInReversal = false;
        BudgetTransactionLineReverse budgetTransactionLineReverse;

        if (_budgetTransactionLineRecId)
        {
            select firstonly RecId
                from budgetTransactionLineReverse
                where budgetTransactionLineReverse.ReversedBudgetTransactionLine == _budgetTransactionLineRecId
                    || budgetTransactionLineReverse.ReversingBudgetTransactionLine == _budgetTransactionLineRecId;
        }

        if (budgetTransactionLineReverse.RecId != 0)
        {
            isInReversal = true;
        }

        return isInReversal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicBudget</ConfigurationKey>
	<DeveloperDocumentation>@SYS132428</DeveloperDocumentation>
	<Label>@SYS132429</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ReversedBudgetTransactionLine</TitleField1>
	<TitleField2>ReversingBudgetTransactionLine</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ReverseIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Budget</Modules>
	<ReplacementKey>ReverseIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReversedBudgetTransactionLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReversingBudgetTransactionLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReversedBudgetTransactionLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReversingBudgetTransactionLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReversedBudgetTransactionLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReversingBudgetTransactionLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReverseIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReversedBudgetTransactionLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReversingBudgetTransactionLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReversingIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ReversingBudgetTransactionLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReversedBudgetTransactionLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReversedBudgetTransactionLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS132430</EntityRelationshipRole>
			<RelatedTable>BudgetTransactionLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReversedBudgetTransactionLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetTransactionLineReverse</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReversedBudgetTransactionLine</Name>
					<Field>ReversedBudgetTransactionLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReversingBudgetTransactionLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS132431</EntityRelationshipRole>
			<RelatedTable>BudgetTransactionLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReversingBudgetTransactionLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetTransactionLineReverse</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReversingBudgetTransactionLine</Name>
					<Field>ReversingBudgetTransactionLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>