<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ShipCarrierCompanyAccounts</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ShipCarrierCompanyAccounts extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        this.CurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;
        ShipCarrierCompany          shipCarrierCompany;
        ShipCarrierCompanyAccounts  localCompanyAccounts;

        ret = super();

        // Check if last record is being deleted
        if (ret)
        {
            select RecId from shipCarrierCompany
                where shipCarrierCompany.CarrierName == this.CarrierName;
            if (shipCarrierCompany.RecId != 0)
            {
                select count(RecId) from localCompanyAccounts
                    where localCompanyAccounts.CarrierName  == this.CarrierName
                        &&localCompanyAccounts.RecId        != this.RecId;
                if (localCompanyAccounts.RecId == 0)
                {
                    ret = checkFailed("@SYS123384");
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <see cref="ShipCarrierCompanyAccounts Table"
    ///    />, if not, an error message is displayed.
    /// </summary>
    /// <param name="_carrierName">
    ///    The carrier name of the <c>ShipCarrierCompanyAccounts</c> table record.
    /// </param>
    /// <param name="_accountCode">
    ///    The account code of the <c>ShipCarrierCompanyAccounts</c> table record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(
        ShipCarrierName _carrierName,
        ShipCarrierAccountCode _accountCode)
    {
        boolean ret = true;

        if (!ShipCarrierCompanyAccounts::exist(_carrierName,_accountCode))
        {
            ret = checkFailed(strFmt(ShipCarrierCompanyAccounts::txtNotExist(), _carrierName,_accountCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <see cref="T:ShipCarrierCompanyAccounts" /> exists.
    /// </summary>
    /// <param name="_carrierName">
    /// The carrier name of the <c>ShipCarrierCompanyAccounts</c> table record.
    /// </param>
    /// <param name="_accountCode">
    /// The account code of the <c>ShipCarrierCompanyAccounts</c> table record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        ShipCarrierName         _carrierName,
        ShipCarrierAccountCode  _accountCode)
    {
        boolean found;

        found = (select firstonly RecId from shipCarrierCompanyAccounts
                    where   shipCarrierCompanyAccounts.CarrierName  == _carrierName &&
                            shipCarrierCompanyAccounts.AccountCode  == _accountCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <see cref="T:ShipCarrierCompanyAccounts" />.
    /// </summary>
    /// <param name="_carrierName">
    /// The carrier name of the <c>ShipCarrierCompanyAccounts</c> record.
    /// </param>
    /// <param name="_accountCode">
    /// The account code of the <c>ShipCarrierCompanyAccounts</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <see cref="T:ShipCarrierCompanyAccounts" /> or an empty record.
    /// </returns>
    public static ShipCarrierCompanyAccounts find(
        ShipCarrierName         _carrierName,
        ShipCarrierAccountCode  _accountCode,
        boolean                 _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        ShipCarrierCompanyAccounts      shipCarrierCompanyAccounts;

        shipCarrierCompanyAccounts.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            shipCarrierCompanyAccounts.concurrencyModel(_concurrencyModel);
        }

        if (_carrierName && _accountCode)
        {
            shipCarrierCompanyAccounts.selectForUpdate (_forUpdate);
            shipCarrierCompanyAccounts.selectLocked    (_forUpdate);

            select firstonly shipCarrierCompanyAccounts
                where   shipCarrierCompanyAccounts.CarrierName  == _carrierName
                    &&  shipCarrierCompanyAccounts.AccountCode  == _accountCode;
        }

        return shipCarrierCompanyAccounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>ShipCarrierCompanyAccounts</c> table does
    ///    not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates the record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        //Record with Carrier Name %1 and Account Code %2 does not exist
        return "@SYS121367";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
	<DeveloperDocumentation>@SYS126964</DeveloperDocumentation>
	<Label>@SYS117293</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AccountCode</TitleField1>
	<TitleField2>AccountNumber</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>AccountCodeIdx</ClusteredIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>AccountCodeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DlvMode</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>DlvMode</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipViaCompany</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS110464</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipViaCompany</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ShipCarrierAccountCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ShipCarrierAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ShipCarrierName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ShipViaCompany</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ShipCarrierShipViaCompany</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CarrierName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CarrierNameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CarrierName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ShipCarrierCompany</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ShipCarrierCompany</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierName</Name>
					<Field>CarrierName</Field>
					<RelatedField>CarrierName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>