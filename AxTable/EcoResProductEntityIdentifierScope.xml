<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityIdentifierScope</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductEntityIdentifierScope extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>EcoResProductEntityIdentifierScope</c> table.
    /// </summary>
    /// <param name = "_codeRecId">The identifier code rec ID.</param>
    /// <param name = "_legalEntity">The legal entity.</param>
    /// <param name = "_party">The party.</param>
    /// <param name = "_partyReferenceType">The party reference type.</param>
    /// <param name = "_partyReferenceValue">The party reference value.</param>
    /// <returns>The created <c>EcoResProductEntityIdentifierScope</c> record.</returns>
    public static EcoResProductEntityIdentifierScope create(
                    EcoResProductEntityIdentifierCodeRecId              _codeRecId,
                    DataAreaId                                          _legalEntity = '',
                    DirPartyRecId                                       _party = 0,
                    EcoResProductEntityIdentifierPartyReferenceType     _partyReferenceType = 0,
                    EcoResProductEntityIdentifierPartyReferenceValue    _partyReferenceValue = '')
    {
        EcoResProductEntityIdentifierScope scope;

        if (_codeRecId)
        {
            ttsbegin;

            scope.Code = _codeRecId;
            scope.LegalEntity = _legalEntity;
            scope.Party = _party;
            scope.PartyReferenceType = _partyReferenceType;
            scope.PartyReferenceValue = _partyReferenceValue;

            scope.insert();

            ttscommit;
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>EcoResProductEntityIdentifierScope</c> table.
    /// </summary>
    /// <param name = "_codeRecId">The identifier code rec ID.</param>
    /// <param name = "_legalEntity">The legal entity.</param>
    /// <param name = "_party">The party.</param>
    /// <param name = "_partyReferenceType">The party reference type.</param>
    /// <param name = "_partyReferenceValue">The party reference value.</param>
    /// <param name = "_selectForUpdate">True if the record needs to be selected for update; otherwise false.</param>
    /// <returns>The <c>EcoResProductEntityIdentifierScope</c> record that was found, if any.</returns>
    public static EcoResProductEntityIdentifierScope find(
                    EcoResProductEntityIdentifierCodeRecId              _code,
                    DataAreaId                                          _legalEntity ='',
                    DirPartyRecId                                       _party = 0,
                    EcoResProductEntityIdentifierPartyReferenceType     _partyReferenceType = 0,
                    EcoResProductEntityIdentifierPartyReferenceValue    _partyReferenceValue = '',
                    boolean                                             _selectForUpdate = false)
    {
        EcoResProductEntityIdentifierScope scope;

        if (_code)
        {
            scope.selectForUpdate(_selectForUpdate);

            select firstonly scope
                where scope.Code == _code
                    && scope.LegalEntity == _legalEntity
                    && scope.Party == _party
                    && scope.PartyReferenceType == _partyReferenceType
                    && scope.PartyReferenceValue == _partyReferenceValue;
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a record in the <c>EcoResProductEntityIdentifierScope</c> table.
    /// </summary>
    /// <param name = "_codeRecId">The identifier code rec ID.</param>
    /// <param name = "_legalEntity">The legal entity.</param>
    /// <param name = "_party">The party.</param>
    /// <param name = "_partyReferenceType">The party reference type.</param>
    /// <param name = "_partyReferenceValue">The party reference value.</param>
    /// <param name = "_selectForUpdate">True if the record needs to be selected for update; otherwise false.</param>
    /// <returns>The <c>EcoResProductEntityIdentifierScope</c> record that was found or created</returns>
    public static EcoResProductEntityIdentifierScope findOrCreate(
                    EcoResProductEntityIdentifierCodeRecId              _code,
                    DataAreaId                                          _legalEntity ='',
                    DirPartyRecId                                       _party = 0,
                    EcoResProductEntityIdentifierPartyReferenceType     _partyReferenceType = 0,
                    EcoResProductEntityIdentifierPartyReferenceValue    _partyReferenceValue = '',
                    boolean                                             _selectForUpdate = false)
    {
        EcoResProductEntityIdentifierScope scope = EcoResProductEntityIdentifierScope::find(
                                                                                    _code, 
                                                                                    _legalEntity,
                                                                                    _party, 
                                                                                    _partyReferenceType, 
                                                                                    _partyReferenceValue, 
                                                                                    _selectForUpdate);

        if (!scope)
        {
            scope = EcoResProductEntityIdentifierScope::create(
                                                        _code,
                                                        _legalEntity,
                                                        _party,
                                                        _partyReferenceType,
                                                        _partyReferenceValue);
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByScopeOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a <c>EcoResProductEntityIdentifierScope</c> record based on the specified buffer.
    /// </summary>
    /// <param name = "_scope">The identifier scope buffer</param>
    /// <returns>The created or found <c>EcoResProductEntityIdentifierScope</c> record.</returns>
    public static EcoResProductEntityIdentifierScope findByScopeOrCreate(EcoResProductEntityIdentifierScope _scope)
    {
        if (_scope.RecId)
        {
            return _scope;
        }

        EcoResProductEntityIdentifierScope scope = EcoResProductEntityIdentifierScope::find(
                                                                                    _scope.Code,
                                                                                    _scope.LegalEntity,
                                                                                    _scope.Party,
                                                                                    _scope.PartyReferenceType,
                                                                                    _scope.PartyReferenceValue);

        if (!scope)
        {
            scope = EcoResProductEntityIdentifierScope::create(
                                                        _scope.Code,
                                                        _scope.LegalEntity,
                                                        _scope.Party,
                                                        _scope.PartyReferenceType,
                                                        _scope.PartyReferenceValue);
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCodeOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates a <c>EcoResProductEntityIdentifierScope</c> record based on the identifier code rec ID.
    /// </summary>
    /// <param name = "_code">The code rec ID.</param>
    /// <param name = "_selectForUpdate">True if the record needs to be selected for update;otherwise false.</param>
    /// <returns>The created or found <c>EcoResProductEntityIdentifierScope</c> record.</returns>
    public static EcoResProductEntityIdentifierScope findByCodeOrCreate(EcoResProductEntityIdentifierCodeRecId _code, boolean _selectForUpdate = false)
    {
        EcoResProductEntityIdentifierScope scope = EcoResProductEntityIdentifierScope::find(_code, '', 0, 0, '', _selectForUpdate);

        if (!scope && _code)
        {
            ttsbegin;

            scope.Code = _code;

            scope.insert();

            ttscommit;
        }

        return scope;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@SCM:EcoResProductEntityIdentifierScope</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>LegalEntity</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>ScopeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EcoResProductEntityIdentifier</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyReferenceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyReferenceValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyReferenceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyReferenceValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductEntityIdentifierCodeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartyReferenceType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EcoResProductEntityIdentifierPartyReferenceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PartyReferenceValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductEntityIdentifierPartyReferenceValue</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ScopeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PartyReferenceType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PartyReferenceValue</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductEntityIdentifierCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProductEntityIdentifierCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Code</Name>
					<Field>Code</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyReferenceValue</Name>
					<Field>PartyReferenceValue</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyReferenceValue</Name>
					<Field>PartyReferenceValue</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendorGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustVendItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyReferenceValue</Name>
					<Field>PartyReferenceValue</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CustVendItemGroupModule</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustomerGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustVendItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyReferenceValue</Name>
					<Field>PartyReferenceValue</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CustVendItemGroupModule</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>