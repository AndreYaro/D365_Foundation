<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanAlternateLayout</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanAlternateLayout extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanAlternateLayout</c> table.
    /// </summary>
    /// <param name='_budgetPlanAlternateLayoutRecId'>
    /// The record ID of the <c>BudgetPlanAlternateLayout</c> record.
    /// </param>
    /// <param name='_forUpdate'>
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name='_concurrencyModel'>
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetPlanAlternateLayout</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetPlanAlternateLayout find(
        BudgetPlanAlternateLayoutRecId  _budgetPlanAlternateLayoutRecId,
        boolean                         _forUpdate = false,
        ConcurrencyModel                _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetPlanAlternateLayout budgetPlanAlternateLayout;

        if (_budgetPlanAlternateLayoutRecId)
        {
            budgetPlanAlternateLayout.selectForUpdate(_forUpdate);

            if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                budgetPlanAlternateLayout.concurrencyModel(_concurrencyModel);
            }

            select firstOnly budgetPlanAlternateLayout
                where budgetPlanAlternateLayout.RecId == _budgetPlanAlternateLayoutRecId;
        }

        return budgetPlanAlternateLayout;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the <c>BudgetPlanAlternateLayout</c> record can be written to the database.
    /// </summary>
    /// <returns>
    /// true if the record is valid; otherwise, false.
    /// </returns>
    public boolean validateWrite()
    {
        boolean isValid = super();

        if (isValid && this.BudgetPlanLayout == BudgetPlanningStageRule::find(this.BudgetPlanningStageRule).Layout)
        {
            isValid = false;
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByLayoutStageRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanAlternateLayout</c> table.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId">
    /// The record ID of a <c>BudgetPlanLayout</c> record.
    /// </param>
    /// <param name="_budgetPlanningStageRuleRecId">
    /// The record ID of a <c>BudgetPlanningStageRule</c> record.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean existsByLayoutStageRule(
        BudgetPlanLayoutRecId           _budgetPlanLayoutRecId,
        BudgetPlanningStageRuleRecId    _budgetPlanningStageRuleRecId)
    {
        BudgetPlanAlternateLayout budgetPlanAlternateLayout;

        select firstOnly RecId from budgetPlanAlternateLayout
            where budgetPlanAlternateLayout.BudgetPlanLayout == _budgetPlanLayoutRecId
                && budgetPlanAlternateLayout.BudgetPlanningStageRule == _budgetPlanningStageRuleRecId;

        return budgetPlanAlternateLayout.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByStageRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all <c>BudgetPlanAlternateLayout</c> records for a given <c>BudgetPlanningStageRule</c> record ID.
    /// </summary>
    /// <param name = "_budgetPlanningStageRuleRecId"> The record ID of the <c>BudgetPlanningStageRule</c> record. </param>
    public static void deleteByStageRule(BudgetPlanningStageRuleRecId _budgetPlanningStageRuleRecId)
    {
        if (_budgetPlanningStageRuleRecId)
        {
            BudgetPlanAlternateLayout budgetPlanAlternateLayout;

            ttsbegin;
            delete_from budgetPlanAlternateLayout
                where budgetPlanAlternateLayout.BudgetPlanningStageRule == _budgetPlanningStageRuleRecId;
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@Budget:AlternateLayoutTableDocumentation</DeveloperDocumentation>
	<Label>@Budget:AlternateLayoutDisplayName</Label>
	<SingularLabel>@Budget:AlternateLayoutDisplayNameSingular</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>BudgetPlanLayout</TitleField1>
	<TitleField2>BudgetPlanningStageRule</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>LayoutStageRuleAK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanLayout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningStageRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanLayout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningStageRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanLayout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningStageRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanLayout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetPlanningStageRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanLayout</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BudgetPlanLayoutRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetPlanningStageRule</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BudgetPlanningStageRuleRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LayoutStageRuleAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetPlanLayout</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetPlanningStageRule</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanLayout</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanLayout</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanLayout</Name>
					<Field>BudgetPlanLayout</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetPlanningStageRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanningStageRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetPlanningStageRule</Name>
					<Field>BudgetPlanningStageRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>