<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StatRepInterval</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class StatRepInterval extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(StatReportName statReportName )
    {
        boolean ret = true;

        if (!StatRepInterval::exist(statReportName))
        {
            ret = checkFailed(strfmt(StatRepInterval::txtNotExist(), statReportName));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefaultLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates default aging definition lines for the the aging period definition.
    /// </summary>
    /// <param name = "_agingPeriodDefinitionName">An existing aging period defintion.</param>
    /// <remarks>If the aging period definition provided does not exist, no default lines will be created.</remarks>
    public static void createDefaultLines(CustVendReportName _agingPeriodDefinitionName)
    {
        if (StatRepInterval::exist(_agingPeriodDefinitionName))
        {
            StatRepIntervalLine::createLine(_agingPeriodDefinitionName, 1.0, "@SYS6042", 0, PerDayWeekMthQtYr::Unlimited, CustAgingIndicator::GreenCheck);
            StatRepIntervalLine::createLine(_agingPeriodDefinitionName, -1.0, '30', -30, PerDayWeekMthQtYr::Day, CustAgingIndicator::YellowTriangle);
            StatRepIntervalLine::createLine(_agingPeriodDefinitionName, -2.0, '60', -30, PerDayWeekMthQtYr::Day, CustAgingIndicator::YellowExclamationPoint);
            StatRepIntervalLine::createLine(_agingPeriodDefinitionName, -3.0, '90', -30, PerDayWeekMthQtYr::Day, CustAgingIndicator::RedX);
            StatRepIntervalLine::createLine(_agingPeriodDefinitionName, -4.0, '90+', -1, PerDayWeekMthQtYr::Unlimited, CustAgingIndicator::RedDiamond);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(StatReportName statReportName )
    {
        boolean found =
            (select firstonly RecId from statRepInterval
                where statRepInterval.Name == statReportName).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsInCompany</Name>
				<Source><![CDATA[
    public static boolean existsInCompany(StatReportName _statReportName, SelectableDataArea _company)
    {
        boolean found =
            (select firstonly crosscompany RecId from statRepInterval
                where statRepInterval.Name == _statReportName && statRepInterval.DataAreaId == _company).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static StatRepInterval find(
        CustVendReportName statReportName ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        StatRepInterval statRepInterval;

        statRepInterval.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            statRepInterval.concurrencyModel(_concurrencyModel);
        }

        select firstonly statRepInterval
            where statRepInterval.Name == statReportName;

        return statRepInterval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102242";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS127062</DeveloperDocumentation>
	<FormRef>CustVendReportInterval</FormRef>
	<Label>@SYS326</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>NameIdx</ClusteredIndex>
	<DataSharingType>Single</DataSharingType>
	<Modules>Ledger</Modules>
	<PrimaryIndex>NameIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>StatRepIntervalLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>StatRepIntervalLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PrintFormatting</Name>
			<Label>@SYS8813</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintDirection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendReportName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintDirection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS70307</Label>
			<EnumType>ForwardBackwardPrinting</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>