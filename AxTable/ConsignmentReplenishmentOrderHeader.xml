<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConsignmentReplenishmentOrderHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ConsignmentReplenishmentOrderHeader extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a consignment replenishment order header.
    /// </summary>
    /// <param name = "_replenishmentOrderNumber">The consignment replenishment order number.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>ConsignmentReplenishmentOrderHeader</c> table; otherwise, an empty record.</returns>
    public static ConsignmentReplenishmentOrderHeader find(
        ConsignmentReplenishmentOrderNumber _replenishmentOrderNumber,
        boolean                             _forUpdate = false)
    {
        ConsignmentReplenishmentOrderHeader replenishmentOrderHeader;

        if (_replenishmentOrderNumber)
        {
            replenishmentOrderHeader.selectForUpdate(_forUpdate);

            select firstonly replenishmentOrderHeader
                where replenishmentOrderHeader.ReplenishmentOrderNumber == _replenishmentOrderNumber;
        }

        return replenishmentOrderHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a field on the consignment replenishment order.
    /// </summary>
    /// <param name = "_fieldId">The ID of the field that is validated.</param>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId):
                ret = this.validateDefaultReceivingWarehouseId();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the consignment replenishment order.
    /// </summary>
    /// <returns>true if the consignment replenishment order has valid information and may be saved; otherwise, false.</returns>
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.validateVendorAccount())
        {
            ret = false;
        }

        if (!this.validateContactPerson())
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDefaultReceivingWarehouseId</Name>
				<Source><![CDATA[
    private boolean validateDefaultReceivingWarehouseId()
    {
        return this.InventStorageDimMap::validateField(fieldNum(InventStorageDimMap, InventLocationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateContactPerson</Name>
				<Source><![CDATA[
    private boolean validateContactPerson()
    {
        boolean ret = true;

        if (this.ContactPersonId && ContactPerson::find(this.ContactPersonId).getVendAccount() != this.OrderVendorAccountNumber)
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_ContactPerson", this.ContactPersonId, this.vendor().name()));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVendorAccount</Name>
				<Source><![CDATA[
    private boolean validateVendorAccount()
    {
        VendTable vendTable = VendTable::find(this.OrderVendorAccountNumber);

        boolean ret = vendTable.checkAccountIsNotBlockedForAllDocuments();

        if (vendTable.interCompanyTradingRelationActive())
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_OrderVendorAccountNumber", this.OrderVendorAccountNumber));
        }

        if (!InventOwner_RU::findByVendor(this.OrderVendorAccountNumber).RecId)
        {
            ret = checkFailed(strFmt("@Consignment:MessageValidation_InventOwnerNotDefined", this.OrderVendorAccountNumber));
        }

        if (ret && #PdsApprovedVendorListEnabled)
        {
            ret = PdsApprovedVendorListCheck::newFromTable(this).validateCheck();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingSiteId), [fieldnum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber), fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId), [fieldnum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber), fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingSiteId)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, ContactPersonId), [fieldnum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, RequestedDeliveryDate), [fieldnum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, AddressRefRecId), [fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, AddressRefTableId), [fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryAddressName), [fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryPostalAddress)]],
            [fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryPostalAddress), [fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingSiteId), fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysDefaultingProcessor::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingSiteId):
                this.defaultReceivingSiteId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId):
                this.defaultReceivingWarehouseId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, ContactPersonId):
                this.defaultContactPersonId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryPostalAddress):
                this.defaultDeliveryPostalAddress();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, AddressRefRecId):
                this.defaultAddressRefRecId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, AddressRefTableId):
                this.defaultAddressRefTableId();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, DeliveryAddressName):
                this.defaultAddressName();
                break;

            case fieldnum(ConsignmentReplenishmentOrderHeader, RequestedDeliveryDate):
                this.defaultRequestedDeliveryDate();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultContactPersonId</Name>
				<Source><![CDATA[
    private void defaultContactPersonId()
    {
        this.ContactPersonId = this.vendor().ContactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReceivingWarehouseId</Name>
				<Source><![CDATA[
    private void defaultReceivingWarehouseId()
    {
        if (this.isFieldSet(fieldNum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber)))
        {
            this.DefaultReceivingWarehouseId = this.vendor().InventLocation;
        }
        else
        {
            if (this.isFieldSet(fieldNum(ConsignmentReplenishmentOrderHeader, DefaultReceivingSiteId)))
            {
                this.InventStorageDimMap::defaultField(fieldNum(InventStorageDimMap, InventLocationId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReceivingSiteId</Name>
				<Source><![CDATA[
    private void defaultReceivingSiteId()
    {
        if (this.isFieldSet(fieldNum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber)))
        {
            this.DefaultReceivingSiteId = this.vendor().InventSiteId;
        }
        else
        {
            if (this.isFieldSet(fieldNum(ConsignmentReplenishmentOrderHeader, DefaultReceivingWarehouseId)))
            {
                this.InventStorageDimMap::defaultField(fieldNum(InventStorageDimMap, InventSiteId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeliveryPostalAddress</Name>
				<Source><![CDATA[
    private void defaultDeliveryPostalAddress()
    {
        this.DeliveryPostalAddress = 0;
        if (this.DefaultReceivingWarehouseId)
        {
            this.setAddressFromInventLocationId(this.DefaultReceivingWarehouseId);
        }

        if (!this.DeliveryPostalAddress && this.DefaultReceivingSiteId)
        {
            this.setAddressFromInventSiteId(this.DefaultReceivingSiteId);
        }

        if (!this.DeliveryPostalAddress)
        {
            // Warehouse and site didn't have location, use company location
            CompanyInfo companyInfo = CompanyInfo::find();

            this.setDeliveryAddressFromRecord(companyInfo, companyInfo.name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressFromInventLocationId</Name>
				<Source><![CDATA[
    private void setAddressFromInventLocationId(InventLocationId _inventLocationId)
    {
        InventLocation inventLocation = InventLocation::find(_inventLocationId);
        this.setDeliveryAddressFromRecord(inventLocation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressFromInventSiteId</Name>
				<Source><![CDATA[
    private void setAddressFromInventSiteId(InventSiteId _inventSiteId)
    {
        InventSite inventSite = InventSite::find(_inventSiteId);
        this.setDeliveryAddressFromRecord(inventSite);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryAddressFromRecord</Name>
				<Source><![CDATA[
    private void setDeliveryAddressFromRecord(Common _source, Description _deliveryAddressName = '')
    {
        LogisticsLocationRole   role = LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery);
        LogisticsLocationRecId  locationRecId = LogisticsLocationDefault::findSimpleDefault(_source, role).RecId;
        LogisticsLocation       location = LogisticsLocation::find(locationRecId);

        this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRequestedDeliveryDate</Name>
				<Source><![CDATA[
    private void defaultRequestedDeliveryDate()
    {
        this.RequestedDeliveryDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendor</Name>
				<Source><![CDATA[
    private VendTable vendor()
    {
        return VendTable::find(this.OrderVendorAccountNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderVendorName</Name>
				<Source><![CDATA[
    display ConsignmentReplenishmentOrderVendorName orderVendorName()
    {
        return this.orderVendor().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>VendTable</c> record associated to this order.
    /// </summary>
    /// <returns>The <c>VendTable</c> record.</returns>
    private VendTable orderVendor()
    {
        return VendTable::find(this.OrderVendorAccountNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the delivery name field based on the specified logistic location.
    /// </summary>
    /// <param name="_skipDeliveryRoleCheck">
    ///     A flag indicating whether to skip the check for determining the delivery role; optional.
    /// </param>
    public void setDeliveryName(boolean _skipDeliveryRoleCheck = false)
    {
        this.TradePostalAddress::setDeliveryName(_skipDeliveryRoleCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>DirPartyTable</c> record for the vendor order account of the replenishment order.
    /// </summary>
    /// <returns>
    /// The <c>DirPartyTable</c> record for the vendor order account of the replenishment order.
    /// </returns>
    DirPartyTable partyTable()
    {
        return this.orderVendor().dirPartyTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeliveryEntityRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the delivery entity record based on the postal address.
    /// </summary>
    /// <returns>
    ///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
    /// </returns>
    public Common getDeliveryEntityRecord()
    {
        return this.TradePostalAddress::getDeliveryEntityRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public Common lookupDeliveryPostalAddress(FormReferenceControl _formReferenceControl)
    {
        LogisticsLocationSelectionLookup_Purch lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);

        lookup.parmInventSiteId(this.DefaultReceivingSiteId);
        lookup.parmInventLocationId(this.DefaultReceivingWarehouseId);

        lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
        lookup.parmReturnLocation(false);

        return lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressRefRecId</Name>
				<Source><![CDATA[
    private void defaultAddressRefRecId()
    {
        this.AddressRefRecId = this.getDeliveryEntityRecord().RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressRefTableId</Name>
				<Source><![CDATA[
    private void defaultAddressRefTableId()
    {
        this.AddressRefTableId = this.getDeliveryEntityRecord().TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAddressName</Name>
				<Source><![CDATA[
    private void defaultAddressName()
    {
        this.TradePostalAddress::setDeliveryName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReplenishmentOrderForSpecificVendor</Name>
				<Source><![CDATA[
    public static void lookupReplenishmentOrderForSpecificVendor(FormStringControl _ctrl, VendAccount _vendAccount = '')
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(ConsignmentReplenishmentOrderHeader), _ctrl);
        Query                   query = new Query();

        sysTableLookup.addLookupfield(fieldNum(ConsignmentReplenishmentOrderHeader, ReplenishmentOrderNumber));
        sysTableLookup.addLookupfield(fieldNum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber));

        QueryBuildDataSource    dsConsignmentReplenishmentOrder = query.addDataSource(tableNum(ConsignmentReplenishmentOrderHeader));

        if (_vendAccount)
        {
            var queryBuildRange = dsConsignmentReplenishmentOrder.addRange(fieldNum(ConsignmentReplenishmentOrderHeader, OrderVendorAccountNumber));
            queryBuildRange.value(queryValue(_vendAccount));
        }
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventOwner</Name>
				<Source><![CDATA[
    public InventOwner_RU inventOwner()
    {
        return InventOwner_RU::getVendorOwner(this.OrderVendorAccountNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactPersonName</Name>
				<Source><![CDATA[
    public edit ContactPersonName editContactPersonName(boolean _set, ContactPersonName _name)
    {
        ContactPersonName   name = _name;
        ContactPerson       contactPerson;
        ContactPersonId     contactPersonId;
        DirPartyTable       partyTable;
        VendTable           vendTable;

        if (_set)
        {
            if (name)
            {
                contactPersonId = this.ContactPersonId;
                contactPerson   = ContactPerson::find(_name);

                this.ContactPersonId = contactPerson.ContactPersonId;

                if (this.ContactPersonId)
                {
                    name = contactPerson.personName();
                }
                else
                {
                    select firstonly contactPerson
                        join AccountNum, Party from vendTable
                            where vendTable.AccountNum == this.OrderVendorAccountNumber
                                && vendTable.Party == contactPerson.ContactForParty
                        join Name from partyTable
                            where partyTable.RecId == contactPerson.Party
                                && partyTable.Name like name;

                    if (contactPerson)
                    {
                        this.ContactPersonId = contactPerson.ContactPersonId;
                        name = partyTable.Name;
                    }
                }
            }
            else
            {
                this.ContactPersonId = '';
            }
        }
        else
        {
            name = ContactPerson::name(this.ContactPersonId);
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lowestReplenishmentOrderLineStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the lowest consignment replenishment order Line status for the current replenishment order.
    /// </summary>
    /// <returns>The consignment replenishment order line status.</returns>
    private ConsignmentReplenishmentOrderLineStatus lowestReplenishmentOrderLineStatus()
    {
        ConsignmentReplenishmentOrderLine       replenishmentOrderLine;
        ConsignmentReplenishmentOrderLineStatus lowestReplenishmentOrderLineStatus;

        select minof(ReplenishmentOrderLineStatus) from replenishmentOrderLine
            where replenishmentOrderLine.ReplenishmentOrderNumber == this.ReplenishmentOrderNumber;

        if (replenishmentOrderLine)
        {
            lowestReplenishmentOrderLineStatus = replenishmentOrderLine.ReplenishmentOrderLineStatus;
        }
        else
        {
            lowestReplenishmentOrderLineStatus = ConsignmentReplenishmentOrderLineStatus::OpenOrder;
        }

        return lowestReplenishmentOrderLineStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReplenishmentOrderHeaderStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the consignment replenishment order header status.
    /// </summary>
    /// <param name = "_onNewLineCreation">Specifies that the new replenishment order line has been created; optional.</param>
    /// <returns>true if the consignment replenishment order header status has been changed; otherwise, false.</returns>
    public boolean updateReplenishmentOrderHeaderStatus(boolean _onNewLineCreation = false)
    {
        ConsignmentReplenishmentOrderStatus     replenishmentOrderStatus;
        ConsignmentReplenishmentOrderLineStatus lowestReplenishmentOrderLineStatus;

        boolean replenishmentOrderStatusChanged = false;

        if (appl.ttsLevel() == 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (_onNewLineCreation)
        {
            replenishmentOrderStatus = ConsignmentReplenishmentOrderStatus::OpenOrder;
        }
        else
        {
            lowestReplenishmentOrderLineStatus = this.lowestReplenishmentOrderLineStatus();

            if (lowestReplenishmentOrderLineStatus == ConsignmentReplenishmentOrderLineStatus::OpenOrder)
            {
                replenishmentOrderStatus = ConsignmentReplenishmentOrderStatus::OpenOrder;
            }
            else
            {
                replenishmentOrderStatus = ConsignmentReplenishmentOrderStatus::Completed;
            }
        }

        replenishmentOrderStatusChanged = this.ReplenishmentOrderStatus != replenishmentOrderStatus;

        if (replenishmentOrderStatusChanged)
        {
            this.ReplenishmentOrderStatus = replenishmentOrderStatus;
            this.update();
        }

        return replenishmentOrderStatusChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the current replenishment order has any lines.
    /// </summary>
    /// <returns>true if the current replenishment order has any lines; otherwise, false</returns>
    public boolean hasLines()
    {
        ConsignmentReplenishmentOrderLine line;
        select firstonly RecId from line
            where line.ReplenishmentOrderNumber == this.ReplenishmentOrderNumber;

        return line.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ConsignmentInbound</ConfigurationKey>
	<DeveloperDocumentation>@Consignment:Developer_ConsignmentReplenishmentOrderHeader</DeveloperDocumentation>
	<FormRef>ConsignmentReplenishmentOrderDetails</FormRef>
	<Label>@Consignment:Table_ConsignmentReplenishmentOrderHeader</Label>
	<SingularLabel>@Consignment:Table_Singular_ConsignmentReplenishmentOrderHeader</SingularLabel>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>ReplenishmentOrderNumber</TitleField1>
	<TitleField2>OrderVendorAccountNumber</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ReplenishmentOrderNumberIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>ReplenishmentOrderNumberIdx</PrimaryIndex>
	<ReplacementKey>ReplenishmentOrderNumberIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderVendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultInventoryDimensions</Name>
			<Label>@SYS108783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultReceivingSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultReceivingWarehouseId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AddressLookup</Name>
			<Label>@SYS88672</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderVendorAccountNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@Consignment:Group_ConsignmentReplenishmentOrderLine_Status</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentOrderStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CreatedDateTime</Name>
			<Label>@SYS112412</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConfirmedDeliveryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedDeliveryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AddressRefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressRefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AddressRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AddressRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultReceivingSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultReceivingWarehouseId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryAddressName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderVendorAccountNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplenishmentOrderNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentReplenishmentOrderNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplenishmentOrderStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ConsignmentReplenishmentOrderStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ConfirmedDeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentConfirmedDeliveryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RequestedDeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConsignmentRequestedDeliveryDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OrderVendorAccountNumberIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>OrderVendorAccountNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReplenishmentOrderNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplenishmentOrderNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DeliveryPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TradePostalAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
					<MapFieldTo>DeliveryAddressName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>DeliveryPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventStorageDimMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>DefaultReceivingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>DefaultReceivingSiteId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>OrderVendor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Vendor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderVendorAccountNumber</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>OrderVendorAccountNumber</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AddressLink</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>Common</RelatedTable>
			<RelatedTableRole>AddressLink</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AddressRefRecId</Name>
					<Field>AddressRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AddressRefTableId</Name>
					<Field>AddressRefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ContactPerson</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContactPersonId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultReceivingWarehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultReceivingWarehouse</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultReceivingWarehouseId</Name>
					<Field>DefaultReceivingWarehouseId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultReceivingSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultReceivingSite</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReplenishmentOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultReceivingSiteId</Name>
					<Field>DefaultReceivingSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>