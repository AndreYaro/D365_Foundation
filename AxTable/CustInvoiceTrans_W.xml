<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceTrans_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceTrans_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.CustInvoiceTrans)
        {
            // Only insert if the parent FK is set
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.CustInvoiceTrans)
        {
            // Only update if the parent FK is set
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataSource</Name>
				<Source><![CDATA[
    public static QueryBuildDataSource addDataSource(QueryBuildDataSource _custInvoiceTransDataSource, JoinMode _joinMode = JoinMode::OuterJoin)
    {
        QueryBuildDataSource ds;

        if (_custInvoiceTransDataSource == null || _custInvoiceTransDataSource.table() != tableNum(CustInvoiceTrans))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ds = _custInvoiceTransDataSource.addDataSource(tableNum(CustInvoiceTrans_W));
        ds.addLink(fieldNum(CustInvoiceTrans, RecId), fieldNum(CustInvoiceTrans_W, CustInvoiceTrans));
        ds.fetchMode(QueryFetchMode::One2One);
        ds.joinMode(_joinMode);

        return ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>CustInvoiceTrans_W</c> table; if not, an error
    ///    message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>CustInvoiceTrans_W</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean isExisting = true;

        if (!CustInvoiceTrans_W::exist(_recId))
        {
            isExisting = checkFailed(strFmt(CustInvoiceTrans_W::txtNotExist(), _recId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>CustInvoiceTrans_W</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>CustInvoiceTrans_W</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        CustInvoiceTrans_W custInvoiceTrans_W;

        select firstonly RecId from custInvoiceTrans_W where custInvoiceTrans_W.RecId == _recId;

        return custInvoiceTrans_W != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CustInvoiceTrans_W</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>CustInvoiceTrans_W</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustInvoiceTrans_W</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceTrans_W find(
        RecId _recId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceTrans_W custInvoiceTrans_W;

        custInvoiceTrans_W.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceTrans_W.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceTrans_W where custInvoiceTrans_W.RecId == _recId;

        return custInvoiceTrans_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CustInvoiceTrans_W</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record Id of the <c>CustInvoiceTrans</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustInvoiceTrans_W</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceTrans_W findByCustInvoiceTrans(
        CustInvoiceTransRecId _recId,
        boolean _forUpdate = false)
    {
        CustInvoiceTrans_W custInvoiceTrans_W;

        custInvoiceTrans_W.selectForUpdate(_forUpdate);

        select firstonly custInvoiceTrans_W where custInvoiceTrans_W.CustInvoiceTrans == _recId;

        return custInvoiceTrans_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLegalEntityInCountryRegion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a Boolean value that indicates whether a country supported by the
    /// <c>CustInvoiceTrans_W</c> table is currently in scope.
    /// </summary>
    /// <returns>
    /// A Boolean value that indicates whether a country supported by the
    /// <c>CustInvoiceTrans_W</c> table is currently in scope.
    /// </returns>
    public static boolean isLegalEntityInCountryRegion()
    {
        #IsoCountryRegionCodes

        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>CustInvoiceTrans_W</c> table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exists.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCreditNoteInternalRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CustInvoiceTrans_W</c> table.
    /// </summary>
    /// <param name="_creditNoteInternalRef_W">
    ///    The record Id / reference of the <c>SalesLine</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustInvoiceTrans_W</c> table; otherwise, an empty record.
    /// </returns>
    internal static CustInvoiceTrans_W findByCreditNoteInternalRef(
        CreditNoteInternalRef_W _creditNoteInternalRef_W,
        boolean _forUpdate = false)
    {
        CustInvoiceTrans_W custInvoiceTrans_W;

        custInvoiceTrans_W.selectForUpdate(_forUpdate);

        select firstonly custInvoiceTrans_W where custInvoiceTrans_W.CreditNoteInternalRef_W == _creditNoteInternalRef_W && custInvoiceTrans_W.RefReturnInvoiceTrans_W != 0;

        return custInvoiceTrans_W;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>CZ,EE,HU,LT,LV,PL,RU,MY</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223745</DeveloperDocumentation>
	<Label>@GLS223737</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CustInvoiceTrans</TitleField1>
	<TitleField2>dataAreaId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>CustInvoiceTransIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreditNoteInternalRef_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PKWiUCode_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatisticValue_LT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReimbursement_HU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceTrans</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatisticValue_LT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Return</Name>
			<Label>@SYS101133</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReimbursement_HU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceInvoice_MY</Name>
			<Label>@SYP4860693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceDate_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceID_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CreditNoteInternalRef_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreditNoteInternalRef_W</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceTrans</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceTransRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PKWiUCode_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlPKWiUCode</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefReturnInvoiceTrans_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefReturnInvoiceTrans_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StatisticValue_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LtIntrastatStatisticValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReimbursement_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>HU</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS112607</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RefInvoiceDate_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefInvoiceID_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustInvoiceTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustInvoiceTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreditNoteInternalRefReturnInvoiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreditNoteInternalRef_W</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>CustInvoiceTrans</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CreditNoteInternalRef_W</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CreditNoteInternalRef_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CreditNoteInternalRef_W</Name>
					<Field>CreditNoteInternalRef_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceTrans</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceTrans</Name>
					<Field>CustInvoiceTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceTrans_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceTrans_W</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CustInvoiceTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefReturnInvoiceTrans_W</Name>
					<Field>RefReturnInvoiceTrans_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RefReturnInvoiceTrans_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RefReturnInvoiceTrans_W</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CustInvoiceTrans_W</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefReturnInvoiceTrans_W</Name>
					<Field>RefReturnInvoiceTrans_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>