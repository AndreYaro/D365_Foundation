<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayCategoryFilterableAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayCategoryFilterableAttribute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneAndInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayCategoryFilterableAttribute</c> table by duplicating this record and
    /// the associated attribute range customizations.
    /// </summary>
    /// <param  name='_tblSharedData'>
    /// The <c>CatDisplayCategorySharedInfo</c> record the cloned <c>CatDisplayCategoryFilterableAttribute</c> record will point to.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayCategoryFilterableAttribute</c> data type.
    /// </returns>
    public CatDisplayCategoryFilterableAttribute cloneAndInsert(CatDisplayCategorySharedInfo _tblSharedData)
    {
        CatDisplayCategoryFilterableAttribute tblDisplayCateogryFilterableAttributeDup;
        CatDisplayCategoryAttributeRange tblDCARorig, tblDCARdup;

        // clone and insert CatDisplayCategoryFilterableAttribute record
        tblDisplayCateogryFilterableAttributeDup = this.cloneRecord(_tblSharedData);
        tblDisplayCateogryFilterableAttributeDup.insert();

        // clone attribute range customizations
        while select * from tblDCARorig
            where tblDCARorig.FilterAttribute == this.RecId
        {
            tblDCARdup = tblDCARorig.cloneRecord(tblDisplayCateogryFilterableAttributeDup);
            tblDCARdup.insert();
        }

        return tblDisplayCateogryFilterableAttributeDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cloneRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayCategoryFilterableAttribute</c> table by duplicating this record.
    /// </summary>
    /// <param  name='_tblSharedData'>
    /// The <c>CatDisplayCategorySharedInfo</c> record the cloned <c>CatDisplayCategoryFilterableAttribute</c> record will point to.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayCategoryFilterableAttribute</c> data type.
    /// </returns>
    /// <remarks>
    /// The cloned record is not inserted into the database.
    /// </remarks>
    public CatDisplayCategoryFilterableAttribute cloneRecord(CatDisplayCategorySharedInfo _tblSharedData)
    {
        CatDisplayCategoryFilterableAttribute tblDisplayCateogryFilterableAttributeDup;

        tblDisplayCateogryFilterableAttributeDup.clear();
        tblDisplayCateogryFilterableAttributeDup.SharedData = _tblSharedData.RecId;
        tblDisplayCateogryFilterableAttributeDup.CategoryAttributeLookup = this.CategoryAttributeLookup;
        tblDisplayCateogryFilterableAttributeDup.IsFilterable = this.IsFilterable;

        return tblDisplayCateogryFilterableAttributeDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.IsFilterable = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryFilterableAttribute</c> table.
    /// </summary>
    /// <param  name='_categoryAttributeLookup'>
    /// The ID of an <c>EcoResCategoryAttributeLookup</c> record.
    /// </param>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shareddata field.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _categoryAttributeLookup, RefRecId _sharedData)
    {
        if (!CatDisplayCategoryFilterableAttribute::exist(_categoryAttributeLookup, _sharedData))
        {
            return checkFailed(strfmt(CatDisplayCategoryFilterableAttribute::txtNotExist(), _categoryAttributeLookup, _sharedData));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryFilterableAttribute</c> table.
    /// </summary>
    /// <param  name='_categoryAttributeLookup'>
    /// The ID of an <c>EcoResCategoryAttributeLookup</c> record.
    /// </param>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shareddata field.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _categoryAttributeLookup, RefRecId _sharedData)
    {
        return (CatDisplayCategoryFilterableAttribute::find(_categoryAttributeLookup, _sharedData).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>CatDisplayCategoryFilterableAttribute</c> table.
    /// </summary>
    /// <param  name='_categoryAttributeLookup'>
    /// The ID of an <c>EcoResCategoryAttributeLookup</c> record.
    /// </param>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> class denoting shareddata field.
    /// </param>
    /// <param  name='_forUpdate'>
    /// A Boolean value to specify the selected record is for update; optional.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatDisplayCategoryFilterableAttribute</c> class.
    /// </returns>
    public static CatDisplayCategoryFilterableAttribute find(RefRecId _categoryAttributeLookup, RefRecId _sharedData, boolean _forUpdate = false)
    {
        CatDisplayCategoryFilterableAttribute tblCatDisplayCategoryFilterableAttributes;

        if (_categoryAttributeLookup && _sharedData)
        {
            tblCatDisplayCategoryFilterableAttributes.selectForUpdate(_forUpdate);
            select firstonly tblCatDisplayCategoryFilterableAttributes
                where  tblCatDisplayCategoryFilterableAttributes.CategoryAttributeLookup == _categoryAttributeLookup
                    && tblCatDisplayCategoryFilterableAttributes.SharedData == _sharedData;
        }
        return tblCatDisplayCategoryFilterableAttributes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAttributeNumericDataType</Name>
				<Source><![CDATA[
    static boolean isAttributeNumericDataType(CatDisplayCategoryFilterableAttribute record)
    {
        CatDisplayCategoryFilterableAttribute   tblCatDisplayCategoryFilterableAttribute;
        EcoResCategoryAttributeLookup           categoryAttributeLookup;
        EcoResAttribute                         tblEcoResAttribute;
        EcoResAttributeType                     tblEcoResAttributeType;

        select firstonly RecId from tblCatDisplayCategoryFilterableAttribute
            where tblCatDisplayCategoryFilterableAttribute.RecId == record.RecId
            join RecId from categoryAttributeLookup
                where categoryAttributeLookup.RecId == tblCatDisplayCategoryFilterableAttribute.CategoryAttributeLookup
            join RecId from tblEcoResAttribute
                where tblEcoResAttribute.RecId == categoryAttributeLookup.Attribute
            join DataType, RecId from tblEcoResAttributeType
                where tblEcoResAttributeType.RecId == tblEcoResAttribute.AttributeType;

        if (AttributeDataTypeDiscriminator::checkAttributeDataTypeInteger(tblEcoResAttributeType.DataType) || 
            AttributeDataTypeDiscriminator::checkAttributeDataTypeDecimal(tblEcoResAttributeType.DataType))
        {
            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeIntDec</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if <c>AttributeDataType</c> value is Integer or Decimal type and returns a boolean value.
    /// </summary>
    /// <param name = "_tblEcoResAttributeType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> value is Integer or Decimal type; Otherwise, false.
    /// </returns>
    protected static boolean checkAttributeDataTypeIntDec(EcoResAttributeType _tblEcoResAttributeType)
    {
        return ( _tblEcoResAttributeType.DataType == AttributeDataType::Integer || _tblEcoResAttributeType.DataType == AttributeDataType::Decimal );
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static str txtNotExist()
    {
        return "@SYS131155";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS324153</DeveloperDocumentation>
	<Label>@SYS191289</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SharedData</TitleField1>
	<TitleField2>CategoryAttributeLookup</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>FilterableAttributesIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CatDisplayCategoryAttributeRange</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CatDisplayCategoryAttributeRange</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsFilterable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Attribute</Name>
			<Label>@SYS77030</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS27587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsFilterable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryAttributeLookup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS69410</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsFilterable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SharedData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS71475</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FilterableAttributesIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SharedData</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategoryAttributeLookup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategoryAttributeLookup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategoryAttributeLookup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategoryAttributeLookup_CatDisplayCategoryFilterableAttribute</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryAttributeLookup</Name>
					<Field>CategoryAttributeLookup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SharedDataRel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatDisplayCategorySharedInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategorySharedInfo</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategorySharedInfo_CatDisplayCategoryFilterableAttribute</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SharedData</Name>
					<Field>SharedData</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>