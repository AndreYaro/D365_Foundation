<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProposalCost</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProposalCost extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    display ProjCategoryId categoryId()
    {
        return this.projCostTrans().CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ProjProposalCostDetail  projProposalCostDetail;
        ProjCostTransSale       projCostTransSale;

        ttsbegin;

        while select RecId from projProposalCostDetail
            where projProposalCostDetail.ProposalRefRecId == this.RecId
                join forupdate projCostTransSale
                where projCostTransSale.RecId == projProposalCostDetail.SaleRefRecId
                        &&   (projCostTransSale.TransStatus == ProjTransStatus::InvoiceProposal
                        ||    projCostTransSale.TransStatus == ProjTransStatus::CreditnoteProposal)
        {
            projCostTransSale = this.initProjTransStatus(projCostTransSale);
            projCostTransSale.update();
        }

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            this.markCurrentTaxDocumentTaxStatusDirty(true);
        }
        // </GTE>

        super();

        ProjProposalTranSummariesRefresh::validateAndSetRecalculateTotalsStatusToRequiredIfAppropriate(this.ProposalId);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProjTransStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the project transaction status.
    /// </summary>
    /// <param name = "_projCostTransSale">
    ///     An instance of <c>ProjCostTransSale</c> table buffer.
    /// </param>
    /// <returns>
    ///     The initialized buffer of <c>ProjCostTransSale</c> table.
    /// </returns>
    protected ProjCostTransSale initProjTransStatus(ProjCostTransSale _projCostTransSale)
    {
        switch (_projCostTransSale.TransStatus)
        {
            case ProjTransStatus::InvoiceProposal:
                _projCostTransSale.TransStatus = ProjTransStatus::Posted;
                break;
            case ProjTransStatus::CreditnoteProposal:
                if (ProjInvoiceCancelProposalDeletion_BR_Flight::instance().isEnabled()
                    && TmpInvoiceCancel_BR::findByProposalId(this.ProposalId))
                {
                    _projCostTransSale.TransStatus = ProjTransStatus::Invoiced;
                }
                else
                {
                    _projCostTransSale.TransStatus = ProjTransStatus::MarkedCreditNote;
                }
                break;
        }

        return _projCostTransSale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ProjCostTrans  projCostTrans  = ProjCostTrans::find(this.TransId);

        ttsbegin;

        super();

        if (projCostTrans)
        {
            Docu::copy(projCostTrans, this);
        }

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            this.markCurrentTaxDocumentTaxStatusDirty();
        }
        // </GTE>

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    display AmountCur lineAmount()
    {
        return ProjTrans::newProjProposalCost(this).transTurnover();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCostTrans</Name>
				<Source><![CDATA[
    public ProjCostTrans projCostTrans()
    {
        return ProjCostTrans::find(this.TransId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projProposalJour</Name>
				<Source><![CDATA[
    public ProjProposalJour projProposalJour()
    {
        return ProjProposalJour::find(this.ProposalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the quantity for this transaction.
    /// </summary>
    /// <returns>
    ///    The quantity for this transaction.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    display ProjQty qty()
    {
        return ProjTrans::newProjProposalCost(this).qty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the sales price for this transaction.
    /// </summary>
    /// <returns>
    ///    The sales price for this transaction.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    display SalesPrice salesPrice()
    {
        return ProjTrans::newProjProposalCost(this).salesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    display ProjTransDate transDate()
    {
        return this.projCostTrans().TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjProposalCost find(ProjCostTransId     _transId,
                                        ProjProposalId      _proposalId,
                                        boolean             _forUpdate      = false)
    {
        ProjProposalId      proposalId          = _proposalId;
        ProjProposalCost    projProposalCost    = null;

        projProposalCost.selectForUpdate(_forUpdate);

        if (_transId && proposalId)
        {
            select projProposalCost
                where projProposalCost.TransId      == _transId &&
                      projProposalCost.ProposalId   == proposalId;
        }

        return projProposalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static ProjProposalCost findRecId(RefRecId _recId, boolean _forUpdate = false)
    {
        ProjProposalCost   projProposalCost = null;

        projProposalCost.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select projProposalCost where projProposalCost.RecId == _recId;
        }

        return projProposalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProposaleFromTrans</Name>
				<Source><![CDATA[
    public static ProjProposalCost initProposaleFromTrans(ProjCostTrans _projCostTrans)
    {
        ProjProposalCost    projProposalCost;

        projProposalCost.TransId        = _projCostTrans.TransId;
        projProposalCost.TaxGroupId     = _projCostTrans.TaxGroupId;
        projProposalCost.TaxItemGroupId = _projCostTrans.TaxItemGroupId;
        projProposalCost.Txt            = _projCostTrans.Txt;
        projProposalCost.psaContractLineNum = _projCostTrans.psaContractLineNum;

        return projProposalCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        {
            ret = ret && TaxGSTHelper_MY::validateProjProposalTransTableWrite(this);
        }
        // </GMY>
        
        // Validate item sales tax group can only be updated when 
        // (1) Project operation integration feature is enabled &&
        // (2) Project invoice proposal status is open
        // (3) Tax calculation service is enabled for project
        // This will catch unqualified update on item sales group from integration bypass UI
        if (!Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project)
            && (!ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled() ||
                ProjProposalJour::find(this.ProposalId).LineProperty != ProjLinePropertyCode::Open))
        {
            if (this.orig() && this.orig().TaxItemGroupId != this.TaxItemGroupId)
            {
                ret = checkFailed("@Proj:TaxItemGroupUpdateError");
            }
        }

        if (ret && ProjProposalTranSummariesRefresh::isRecalculateTotalsStatusInProcessState(this.ProposalId))
        {
            ret = checkFailed("@Proj:InvoiceLineWriteErrorDueToRecalculatesTotalStatusInProcess");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatusDirty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status of <c> ProjProposalOnAcc </c> to dirty
    /// </summary>
    /// <param name="isDelete">
    /// the record is deleted or not
    /// </param>
    // <GTE>
    public void markCurrentTaxDocumentTaxStatusDirty(boolean isDelete = false)
    {
        ProjProposalJour                projProposaljour = this.projProposalJour();
        TaxEngineProjCostTransHeader    transHeader      = TaxEngineProjCostTransHeader::findOrCreateByProjProposalJour(projProposalJour);
        TaxableDocumentDescriptor       descriptor       = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(transHeader);
        ITaxableDocument                taxableDocument  = TaxableDocumentObject::construct(descriptor);
        ProjProposalCost                projProposalCostLoc;
        if (isDelete)
        {
            select firstOnly RecId from projProposalCostLoc where projProposaljour.ProposalId == projProposalCostLoc.ProposalId;
            if (projProposalCostLoc)
            {
                TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Dirty);
            }
            else
            {
                TaxBusinessService::deleteTaxDocument(taxableDocument);
                TaxEngineProjEmplTransHeader::deleteByProjProposalJour(projProposaljour);
            }
        }
        else
        {
            TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Dirty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyTaxDocumentFromOriginalInvoice</Name>
				<Source><![CDATA[
    // </GTE>

    internal void copyTaxDocumentFromOriginalInvoice()
    {
        // Source
        ProjInvoiceCost projInvoiceCost = this.getLatestProjInvoiceCost();
        ProjInvoiceJour projInvoiceJour = projInvoiceCost.projInvoiceJour();
        TaxEngineProjCostJourHeader headerSource = TaxEngineProjCostJourHeader::findOrCreateByProjInvoiceJour(projInvoiceJour);
        ITaxDocument taxDocumentSource = TaxBusinessService::getTaxDocumentBySource(headerSource.TableId, headerSource.RecId);

        // Target
        ProjProposalJour projProposalJour = this.projProposalJour();
        TaxEngineProjCostTransHeader headerTarget = TaxEngineProjCostTransHeader::findOrCreateByProjProposalJour(projProposalJour);

        TaxBusinessService::copyTaxDocumentForProjectCreditNote(projInvoiceCost, this, taxDocumentSource, headerTarget);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLatestProjInvoiceCost</Name>
				<Source><![CDATA[
    private ProjInvoiceCost getLatestProjInvoiceCost()
    {
        ProjProposalCost projProposalCost;
        ProjProposalCostDetail projProposalCostDetail;
        ProjInvoiceCost projInvoiceCost;
        ProjInvoiceCostDetail projInvoiceCostDetail;
        ProjCostTransSale projCostTransSale;
        ProjInvoiceJour projInvoiceJour;

        select firstonly ProjInvoiceId, InvoiceDate from projInvoiceJour
            order by RecId desc
            join projInvoiceCost
                where projInvoiceCost.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                    && projInvoiceCost.InvoiceDate == projInvoiceJour.InvoiceDate
            exists join projInvoiceCostDetail
                where projInvoiceCostDetail.InvoiceRefRecId == projInvoiceCost.RecId
            exists join projCostTransSale
                where projCostTransSale.RecId == projInvoiceCostDetail.SaleRefRecId
            exists join projProposalCostDetail
                where projProposalCostDetail.SaleRefRecId == projCostTransSale.RecId
            exists join projProposalCost
                where projProposalCost.RecId == projProposalCostDetail.ProposalRefRecId
                    && projProposalCost.RecId == this.RecId;

        return projInvoiceCost;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124952</DeveloperDocumentation>
	<Label>@SYS55260</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ProposalId</TitleField1>
	<TitleField2>TransId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ProposalIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjProposalCostDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ProjProposalCostDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProposalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWriteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EInvoice</Name>
			<Label>@SYS100769</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderLineReference_NO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProposalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PSA</Name>
			<Label>@PSA43</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PSAContractLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWriteCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludedTaxPercent_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceInvoice_MY</Name>
			<Label>@SYP4860693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceId_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefInvoiceDate_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EInvoiceAccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EInvoiceAccountCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>IncludedTaxPercent_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IncludedTaxPercent_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProposalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjProposalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PSAContractLineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PSAContractLineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupId</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupId</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWriteCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWriteCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCostTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RefInvoiceDate_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYP4860674</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefInvoiceId_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<Label>@SYP4860676</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderLineReference_NO</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OrderLineReference_NO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideSalesTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationOverrideSalesTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransidIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProposalIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProposalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ProjProposalMap_MY</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RefInvoiceDate_MY</MapField>
					<MapFieldTo>RefInvoiceDate_MY</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RefInvoiceId_MY</MapField>
					<MapFieldTo>RefInvoiceId_MY</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverrideSalesTax</MapField>
					<MapFieldTo>OverrideSalesTax</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>ProjCostTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124953</EntityRelationshipRole>
			<RelatedTable>ProjCostTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<SourceEDT>ProjCostTransId</SourceEDT>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjProposalJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjProposalJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalJour_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjProposalCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProposalId</Name>
					<SourceEDT>ProjProposalId</SourceEDT>
					<Field>ProposalId</Field>
					<RelatedField>ProposalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProposalNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PSAContractLineItems</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PSAContractLineItems</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PSAContractLineNum</Name>
					<SourceEDT>PSAContractLineNum</SourceEDT>
					<Field>PSAContractLineNum</Field>
					<RelatedField>ContractLineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractLineNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupId</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxItemGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalCost</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupId</Name>
					<SourceEDT>ProjTaxItemGroup</SourceEDT>
					<Field>TaxItemGroupId</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>