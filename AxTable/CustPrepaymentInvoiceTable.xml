<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPrepaymentInvoiceTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustPrepaymentInvoiceTable extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existsSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if an prepayment invoice exists for the provided sales order id.
    /// </summary>
    /// <param name="_salesId">
    /// The <c>SalesId</c> of the sales order.
    /// </param>
    /// <returns>
    /// true if an prepayment invoice exists; otherwise, false.
    /// </returns>
    public static boolean existsSalesId(SalesId _salesId)
    {
        return (select firstonly RecId from CustPrepaymentInvoiceTable
            where CustPrepaymentInvoiceTable.SalesId == _salesId
            && CustPrepaymentInvoiceTable.Type == PrepaymentInvoiceType::Common).RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsInvoiceWithPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the prepayment invoice with full payment received exists for sales order id
    /// </summary>
    /// <param name = "_salesId">sales id of sales order</param>
    /// <returns>true if any prepayment exists</returns>
    public static boolean existsInvoiceWithPayment(SalesId _salesId)
    {
        CustPrepaymentInvoiceTable custPrepaymentInvoiceTable;

        select count(RecId) from custPrepaymentInvoiceTable
            where custPrepaymentInvoiceTable.SalesId == _salesId
            && custPrepaymentInvoiceTable.Type == PrepaymentInvoiceType::Common
            && custPrepaymentInvoiceTable.Status == CustPrepaymentInvoiceStatus::Received;

        return custPrepaymentInvoiceTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPrepaymentInvoiceExistsNotApplied</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean checkPrepaymentInvoiceExistsNotApplied(SalesTable _salesTable)
    {
        boolean ret = false;
       
        if (!CustPrepaymentInvoiceFeature::instance().isEnabled())
        {
            return false;
        }

        ret = CustPrepaymentInvoiceTable::existsInvoiceWithPayment(_salesTable.SalesId);

        if (ret)
        {
            CustPrepaymentInvoiceTable custPrepaymentInvoiceTable;
            
            while select custPrepaymentInvoiceTable
                where custPrepaymentInvoiceTable.SalesId == _salesTable.SalesId
                && custPrepaymentInvoiceTable.Type == PrepaymentInvoiceType::Common
                && custPrepaymentInvoiceTable.Status == CustPrepaymentInvoiceStatus::Received
            {
                CustPrepaymentCustInvoice custPrepaymentCustInvoice;
                custPrepaymentCustInvoice = CustPrepaymentCustInvoice::findByRecIdPrepaymentInvoiceId(_salesTable.RecId, custPrepaymentInvoiceTable.RecId, _salesTable.TableId);
               
                if (!custPrepaymentCustInvoice)
                {
                    return true;
                }
            }

            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentDueDate</Name>
				<Source><![CDATA[
    private DueDate paymentDueDate()
    {
        return PaymTerm::find(this.Payment).due(this.InvoiceDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static CustPrepaymentInvoiceTable findRecId(RecId   _recId,
                                                      boolean _update = false)
    {
        CustPrepaymentInvoiceTable invoiceTable;

        invoiceTable.selectForUpdate(_update);

        select firstonly invoiceTable
            where invoiceTable.RecId == _recId;

        return invoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable_InvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the customer record for the invoice account.
    /// </summary>
    /// <param name = "_update">indicator to denote if used for update</param>
    /// <returns>customer record</returns>
    public CustTable custTable_InvoiceAccount(boolean _update = false)
    {
        return CustTable::find(this.InvoiceAccount, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable_OrderAccount</Name>
				<Source><![CDATA[
    private CustTable custTable_OrderAccount(boolean _update = false)
    {
        return CustTable::find(this.OrderAccount, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcInvoiceAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the total amount of the prepayment invoice.
    /// </summary>
    public void calcInvoiceAmount()
    {
        CustPrepaymentInvoiceLine invoiceLine;

        select sum(LineAmount) from invoiceLine
            where invoiceLine.CustPrepaymentInvoiceTable == this.RecId;

        this.InvoiceAmount = invoiceLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>location</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>RecId</c> of the <c>LogisticsLocation</c> record associated with
    /// the advance invoice's postal address.
    /// </summary>
    /// <returns>
    /// The <c>RecId</c> of the <c>LogisticsLocation</c> record.
    /// </returns>
    public LogisticsLocationRecId location()
    {
        return LogisticsPostalAddress::getLocation(this.PostalAddress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        CustPrepaymentInvoiceTable this_Orig = this.orig();

        ttsbegin;

        super();

        if (this.OneTimeCustomer && (this.Name != this_Orig.Name || this.PostalAddress != this_Orig.PostalAddress))
        {
            CustomerEntity customer = DirParty::constructFromCommon(this.custTable_OrderAccount(true),
                                                       DateTimeUtil::getSystemDateTime(),
                                                       DirPartyType::None,
                                                       true,
                                                       false);
            customer.initFromCustPrepaymentInvoiceTable(this);
            customer.update();
        }

        if (! this.InvoiceAccount)
        {
            this.InvoiceAccount = this.OrderAccount;
        }

        if (this_Orig.PaymentSched &&
            this_Orig.PaymentSched != this.PaymentSched)
        {
            CustPaymSched::deleteCustPaymSched(this.TableId, this.RecId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcDue</Name>
				<Source><![CDATA[
    public void calcDue()
    {
        if (!this.DueDate)
        {
            this.DueDate = this.paymentDueDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInvoiceAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customer name for the prepayment invoice <c>InvoiceAccount</c>.
    /// </summary>
    /// <returns>
    /// <c>InvoiceAccount</c> customer name.
    /// </returns>
    display DirPartyName displayInvoiceAccountName()
    {
        return CustTable::find(this.InvoiceAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOrderAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customer name for the prepayment invoice <c>OrderAccount</c>.
    /// </summary>
    /// <returns>
    /// <c>OrderAccount</c> customer name.
    /// </returns>
    display DirPartyName displayOrderAccountName()
    {
        return CustTable::find(this.OrderAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrepaymentApplicationRemaining</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the advance application remaining amount.
    /// </summary>
    /// <param name="_custVendTrans">
    /// A <c>CustVendTrans</c> record to use to recognize the <c>CustPrepaymentInvoiceTable</c> record to be updated.
    /// </param>
    /// <param name="_settleAmountCur">
    /// An amount to update in advance application remaining amount.
    /// </param>
    /// <returns>
    /// The updated <c>CustPrepaymentInvoiceTable</c> record.
    /// </returns>
    [Hookable(false)]
    internal static CustPrepaymentInvoiceTable updatePrepaymentApplicationRemaining(CustVendTrans _custVendTrans, AmountCur _settleAmountCur)
    {
        CustPrepaymentInvoiceTable prepaymentTable;
        CustInvoiceJour custInvoiceJour;

        ttsbegin;

        if (CustPrepaymentInvoiceTable::isUpdatePrepaymentApplicationRemainingAllowed(_custVendTrans))
        {
            custInvoiceJour = CustInvoiceJour::findFromCustTrans(_custVendTrans.Invoice, _custVendTrans.TransDate, _custVendTrans.AccountNum);

            if (!custInvoiceJour)
            {
                throw error(strfmt("@AccountsReceivable:PrepaymentInvoiceNotFound", _custVendTrans.Voucher, _custVendTrans.AccountNum));
            }

            select firstonly forupdate prepaymentTable
                where prepaymentTable.Voucher == _custVendTrans.Voucher
                && prepaymentTable.InvoiceAccount == _custVendTrans.AccountNum
                && prepaymentTable.InvoiceId == _custVendTrans.Invoice
                && prepaymentTable.SalesId == custInvoiceJour.SalesId;

            if (!prepaymentTable)
            {
                throw error(strfmt("@AccountsReceivable:PrepaymentInvoiceNotFound", _custVendTrans.Voucher, _custVendTrans.AccountNum));
            }

            prepaymentTable.RemainAmountCur += _settleAmountCur;
            prepaymentTable.SettleAmountCur += _settleAmountCur;

            if (prepaymentTable.SettleAmountCur > prepaymentTable.InvoiceAmount)
            {
                throw error(strfmt("@AccountsReceivable:PrepaymentPaymentReceivedError", prepaymentTable.InvoiceAmount));
            }

            if (prepaymentTable.InvoiceAmount - prepaymentTable.SettleAmountCur > 0)
            {
                prepaymentTable.Status = CustPrepaymentInvoiceStatus::Partial;
            }
            else
            {
                prepaymentTable.Status = CustPrepaymentInvoiceStatus::Received;
            }

            prepaymentTable.doUpdate();
        }

        ttscommit;

        return prepaymentTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdatePrepaymentApplicationRemainingAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for the condition for allowing the udpating of the prepayment application remaining amount.
    /// </summary>
    /// <param name = "_custVendTrans">
    /// A <c>CustVendTrans</c> recrod which is used to check the condition.
    /// </param>
    /// <returns>
    /// true if cust transaction and invoiced; otherwise, false.
    /// </returns>
    public static boolean isUpdatePrepaymentApplicationRemainingAllowed(CustVendTrans _custVendTrans)
    {
        return (_custVendTrans.TransType == LedgerTransType::SalesPrepayment && _custVendTrans.Invoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(CustPrepaymentInvoiceTable, InvoiceDate):
                this.modifiedInvoiceDate();
                break;
            case fieldnum(CustPrepaymentInvoiceTable, DocumentDate):
                this.InvoiceDate = this.DocumentDate;
                this.modifiedInvoiceDate();
                break;
            case fieldnum(CustPrepaymentInvoiceTable, VatDueDate_W):
                this.InvoiceDate = this.VatDueDate_W;
                this.modifiedInvoiceDate();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedInvoiceDate</Name>
				<Source><![CDATA[
    private void modifiedInvoiceDate()
    {
        this.initFromPayment();
        this.DueDate = dateNull();
        this.calcDue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPayment</Name>
				<Source><![CDATA[
    public void initFromPayment()
    {
        this.PaymentSched = this.payment().PaymSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payment</Name>
				<Source><![CDATA[
    private PaymTerm payment(boolean _update = false)
    {
        return PaymTerm::find(this.Payment, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method validates the prepayment invoice for deletion.
    /// </summary>
    /// <returns>false if prepayment invoice is posted</returns>
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (this.Posted)
        {
            ret = checkFailed("@AccountsReceivable:NonOpenPrepaymentInvoiceDeleteErrorMsg");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.Type == PrepaymentInvoiceType::Common)
        {
            //Validate if there is no existing Prepayment Invoice for SalesId 
            CustPrepaymentInvoiceTable custPrepaymentInvoiceTable;

            select firstonly custPrepaymentInvoiceTable
                where custPrepaymentInvoiceTable.SalesId == this.SalesId
                && custPrepaymentInvoiceTable.RecId != this.RecId
                && custPrepaymentInvoiceTable.Type == PrepaymentInvoiceType::Common;

            if (custPrepaymentInvoiceTable)
            {
                ret = checkFailed(strFmt("@AccountsReceivable:PrepaymentInvoiceExists", this.SalesId));
            }
        }

        if (this.Posted == NoYes::Yes)
        {
            ret = checkFailed("@AccountsReceivable:PrepaymentInvoicePosted");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFixedExchRate</Name>
				<Source><![CDATA[
    public edit SalesFixedExchRate editFixedExchRate(boolean set, SalesFixedExchRate _exchRate)
    {
        ExchangeRateHelper exchangeRateHelper = this.getExchangeRateHelper();

        if (set)
        {
            this.FixedExchRate = exchangeRateHelper.prepareExchangeRateForStorage(_exchRate);
        }
        else
        {
            _exchRate = exchangeRateHelper.displayStoredExchangeRate(this.FixedExchRate);
        }

        return _exchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExchangeRateHelper</Name>
				<Source><![CDATA[
    private ExchangeRateHelper getExchangeRateHelper()
    {
        return ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), this.CurrencyCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetHeader</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Address</Name>
			<Label>@SYS9362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS302</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoice</Name>
			<Label>@SYS12128</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VatDueDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoiceAccount</Name>
			<Label>@SYS21836</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymSpec</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentSched</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPostingProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
			<Label>@SYS3815</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustPostingProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPostingProfile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDate</ExtendedDataType>
			<Label>@SYS14021</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRateSecond</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchrateSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FreeInvoiceRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustInvoiceAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InvoiceAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS9458</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPrepaymentInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustLanguageId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberSequenceGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberSequenceGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OneTimeCustomer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OneTimeCustomer</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymentSched</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSchedId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymMode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymSpec</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PostalAddress</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Posted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPostingProfile</ExtendedDataType>
			<Label>@SYS59471</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustPrepaymentInvoiceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PrepaymentInvoiceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPrepaymentInvoiceVoucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryId</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>SalesCategory</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@AccountsReceivable:PrepaymentReceived</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RemainAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@AccountsReceivable:PrepaymentApplicationRemaining</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OrigCustPrepaymentInvoiceTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceJour</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesShippingDate</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>VatDueDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FinTag</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FinTagRecId</ExtendedDataType>
			<FeatureClass>SalesOrderFinTagFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FixedExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesFixedExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Log</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogText</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountCurrencySalesIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>InvoiceAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvoiceVoucherIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InvoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<Field>CategoryId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable_InvoiceAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable_InvoiceAccount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAccount</Name>
					<SourceEDT>CustInvoiceAccount</SourceEDT>
					<Field>InvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable_OrderAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable_OrderAccount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>OrderAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PaymentSched</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymSched</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymentSched</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustAdvanceInvoiceTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymentSched</Name>
					<SourceEDT>PaymSchedId</SourceEDT>
					<Field>PaymentSched</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<SourceEDT>CustPaymTermId</SourceEDT>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostalAddress</Name>
					<Field>PostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CustCurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustGroup</Name>
					<SourceEDT>CustGroupId</SourceEDT>
					<Field>CustGroup</Field>
					<RelatedField>CustGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPrepaymentCustInvoice</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPrepaymentCustInvoice</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>CustPrepaymentInvoiceTable</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FinTag</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FinTag</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FinTag</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustPrepaymentInvoiceTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FinTag</Name>
					<Field>FinTag</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>