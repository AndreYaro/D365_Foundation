<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPaymMethodVal</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustPaymMethodVal extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a payment validation to the specified method of payment.
    /// </summary>
    /// <param name = "_custPaymMode">Payment method to add validation to.</param>
    /// <param name = "_custPaymValidate">Validation to add.</param>
    public static void add(CustPaymMode _custPaymMode,
        CustPaymentValidate _custPaymValidate)
    {
        CustPaymMethodVal paymMethodVal;

        if (!CustPaymMethodVal::exist(_custPaymMode, _custPaymValidate))
        {
            paymMethodVal.CustPaymMode = _custPaymMode;
            paymMethodVal.CustPaymValidate = _custPaymValidate;
            paymMethodVal.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(CustPaymMode _custPaymMode,
        CustPaymentValidate _custPaymValidate)
    {
        return _custPaymMode
            && (select firstonly RecId from custPaymMethodVal
                    index hint Validate
                    where custPaymMethodVal.CustPaymMode == _custPaymMode
                        && custPaymMethodVal.CustPaymValidate == _custPaymValidate).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CustPaymMethodVal find(CustPaymMode _custPaymMode,
        CustPaymentValidate _custPaymValidate,
        boolean _forUpdate = false)
    {
        CustPaymMethodVal paymMethodVal;

        if (_custPaymMode)
        {
            paymMethodVal.selectForUpdate(_forUpdate);

            select firstonly paymMethodVal
                index hint Validate
                where paymMethodVal.CustPaymMode == _custPaymMode
                    && paymMethodVal.CustPaymValidate == _custPaymValidate;
        }

        return paymMethodVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packedSetOfValidations</Name>
				<Source><![CDATA[
    public static container packedSetOfValidations(CustPaymMode _custPaymMode)
    {
        return CustPaymMethodVal::setOfValidations(_custPaymMode).pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes a payment validation from the specified method of payment.
    /// </summary>
    /// <param name = "_custPaymMode">Payment method to remove validation from.</param>
    /// <param name = "_custPaymValidate">Validation to remove.</param>
    public static void remove(CustPaymMode _custPaymMode,
        CustPaymentValidate  _custPaymValidate)
    {
        #OCCRetryCount
        CustPaymMethodVal paymMethodVal;

        try
        {
            ttsbegin;

            paymMethodVal = CustPaymMethodVal::find(_custPaymMode, _custPaymValidate, true);

            if (paymMethodVal)
            {
                paymMethodVal.delete();
            }

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOfValidations</Name>
				<Source><![CDATA[
    public static Set setOfValidations(CustPaymMode _custPaymMode)
    {
        CustPaymMethodVal custPaymMethodVal;
        Set setOfValidations;

        setOfValidations = new Set(Types::Enum);

        while select CustPaymValidate from custPaymMethodVal
            where custPaymMethodVal.CustPaymMode == _custPaymMode
        {
            setOfValidations.add(custPaymMethodVal.CustPaymValidate);
        }

        return setOfValidations;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125103</DeveloperDocumentation>
	<Label>@SYS54939</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CustPaymMode</TitleField1>
	<TitleField2>CustPaymValidate</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Validate</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Bank</Modules>
	<PrimaryIndex>Validate</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymValidate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustPaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymValidate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustPaymMode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymMode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustPaymValidate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymValidate</ExtendedDataType>
			<EnumType>CustPaymentValidate</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Validate</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustPaymMode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustPaymValidate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS125104</EntityRelationshipRole>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustPaymModeTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CustPaymMethodVal</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymMode</Name>
					<SourceEDT>CustPaymMode</SourceEDT>
					<Field>CustPaymMode</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>