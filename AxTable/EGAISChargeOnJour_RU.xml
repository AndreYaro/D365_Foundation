<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EGAISChargeOnJour_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EGAISChargeOnJour_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeUpdated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the EGAIS inventory receipt statement can be updated.
    /// </summary>
    /// <returns>
    /// true, if the EGAIS inventory receipt statement can be updated; otherwise, false.
    /// </returns>
    public boolean canBeUpdated()
    {
        return this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::None            ||
            this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::Created            ||
            this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::ConfirmationError  || 
            this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::Rejected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canExistIncomingDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the related incoming EGAIS document can exist.
    /// </summary>
    /// <returns>
    /// true, if the related incoming EGAIS document can exist; otherwise, false.
    /// </returns>
    public boolean canExistIncomingDocument()
    {
        return !(this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::Created ||
        this.StatusIssue == EGAISChargeOnJourStatusIssue_RU::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.StatusIssue = EGAISChargeOnJourStatusIssue_RU::Created;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromInventJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the related inventory counting journal.
    /// </summary>
    /// <param name="_inventJournalTable">
    /// The related inventory counting journal record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, an empty record.
    /// </returns>
    public static EGAISChargeOnJour_RU findFromInventJour(
    InventJournalTable  _inventJournalTable,
    boolean             _forUpdate = false)
    {
        return EGAISChargeOnJour_RU::findFromInventJourRecId(_inventJournalTable.RecId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromInventJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the related inventory counting journal record ID.
    /// </summary>
    /// <param name="_inventJournalTableRecId">
    /// The related inventory counting journal record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, an empty record.
    /// </returns>
    public static EGAISChargeOnJour_RU findFromInventJourRecId(
    RecId   _inventJournalTableRecId,
    boolean _forUpdate = false)
    {
        EGAISChargeOnJour_RU  jour;

        if (_forUpdate)
        {
            jour.selectForUpdate(_forUpdate);
        }

        if (_inventJournalTableRecId)
        {
            select firstOnly jour
            where jour.InventJournalTable == _inventJournalTableRecId;
        }

        return jour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, an empty record.
    /// </returns>
    public static EGAISChargeOnJour_RU findFromRecId(
    RecId   _recId,
    boolean _forUpdate = false)
    {
        EGAISChargeOnJour_RU  jour;

        if (_forUpdate)
        {
            jour.selectForUpdate(_forUpdate);
        }

        if (_recId)
        {
            select firstOnly jour
            where jour.RecId == _recId;
        }

        return jour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromRegId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the EGAIS registrtaion ID.
    /// </summary>
    /// <param name="_regId">
    /// The EGAIS registration ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, an empty record.
    /// </returns>
    public static EGAISChargeOnJour_RU findFromRegId(
    EGAISRegId_RU   _regId,
    boolean         _forUpdate = false)
    {
        EGAISChargeOnJour_RU  jour;

        if (_forUpdate)
        {
            jour.selectForUpdate(_forUpdate);
        }

        if (_regId)
        {
            select firstOnly jour
            where jour.RegId == _regId;
        }

        return jour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromReplyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the EGAIS reply ID.
    /// </summary>
    /// <param name="_replyId">
    /// The EGAIS reply ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, an empty record.
    /// </returns>
    public static EGAISChargeOnJour_RU findFromReplyId(
    EGAISReplyId_RU _replyId,
    boolean         _forUpdate = false)
    {
        EGAISChargeOnJour_RU  jour;

        if (_forUpdate)
        {
            jour.selectForUpdate(_forUpdate);
        }

        if (_replyId)
        {
            select firstOnly jour
            where jour.ReplyId == _replyId;
        }

        return jour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateFromInventJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the EGAIS inventory receipt statement journal record by the related inventory counting journal.
    /// </summary>
    /// <param name="_inventJournalTable">
    /// The related inventory counting journal record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the EGAIS inventory receipt statement journal; otherwise, creates a new EGAIS inventory receipt statement journal, related to the inventory counting journal.
    /// </returns>
    public static EGAISChargeOnJour_RU findOrCreateFromInventJour(
    InventJournalTable  _inventJournalTable,
    boolean             _forUpdate = false)
    {
        EGAISChargeOnJour_RU  jour = EGAISChargeOnJour_RU::findFromInventJour(_inventJournalTable, _forUpdate);

        if (!jour.RecId)
        {
            jour.InventJournalTable = _inventJournalTable.RecId;
            jour.insert();
        }

        return jour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the EGAIS inventory receipt statement journal record by the related inventory counting journal record ID.
    /// </summary>
    /// <param name="_inventJourRecId">
    /// The related inventory counting journal record ID.
    /// </param>
    /// <param name="_statusIssue">
    /// The new status for the inventory receipt statement journal.
    /// </param>
    /// <param name="_replyId">
    /// The new reply ID for the inventory receipt statement journal.
    /// </param>
    public static void updateFromInventJourRecId(
        RefRecId                           _inventJourRecId,
        EGAISChargeOnJourStatusIssue_RU _statusIssue,
        EGAISReplyId_RU                 _replyId)
    {
        EGAISChargeOnJour_RU jour;

        ttsBegin;

        jour = EGAISChargeOnJour_RU::findFromInventJourRecId(_inventJourRecId, true);

        if (jour)
        {
            jour.StatusIssue    = _statusIssue;
            jour.ReplyId        = _replyId;
            jour.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@EGAIS:TheEgaischargeonjour_ruTableHoldsTheInformationAbo</DeveloperDocumentation>
	<FormRef>EGAISChargeOnJour_RU</FormRef>
	<Label>@EGAIS:EgaisInventoryStatementsJournal</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>StatementNumber</TitleField1>
	<TitleField2>StatementDate</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>EGAIS</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatementNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Counting</Name>
			<Label>@GLS102445</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatementNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatementDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatementNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargeOnType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Notes</Name>
			<Label>@SYS40182</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventJournalTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Registration</Name>
			<Label>@SYS38390</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Identity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS36398</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StructDepartment</Name>
			<Label>@GLS100821</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Version</Name>
			<Label>@SYS40796</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ChargeOnType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISChargeOnType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Identity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISIdentity_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventJournalTable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<ExtendedDataType>Notes</ExtendedDataType>
			<HelpText>@EGAIS:InventoryCountingNotes</HelpText>
			<Label>@SYS40182</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISRegId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISReplyId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StatementDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISChargeOnJourDate_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatementNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISChargeOnJourNumber_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusIssue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISChargeOnJourStatusIssue_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Version</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISDocumentVersion_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventJournalTableIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InventJournalTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RegIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RegId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReplyIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<SourceEDT>BranchId_RU</SourceEDT>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EGAISIncomingDocument_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EGAISIncomingDocument_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplyId</Name>
					<Field>ReplyId</Field>
					<RelatedField>ReplyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventJournalTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventJournalTable</Name>
					<Field>InventJournalTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>