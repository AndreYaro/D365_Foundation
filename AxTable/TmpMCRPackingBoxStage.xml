<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpMCRPackingBoxStage</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpMCRPackingBoxStage extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enforceIntegrity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enforces the integrity on the table.
    /// </summary>
    /// <remarks>
    /// This will make sure that the total volume is calculated and the
    /// shortest, middle, and longest lengths are calculated.
    /// </remarks>
    void enforceIntegrity()
    {
        this.GrossTotalVolume = this.GrossInventVolume * this.InventQty;
        this.GrossTotalWeight = this.GrossInventWeight * this.InventQty;

        [this.LengthShortest, this.LengthMiddle, this.LengthLongest]  = this.sortThreeValues(this.GrossInventWidth, this.GrossInventHeight, this.GrossInventDepth);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortThreeValues</Name>
				<Source><![CDATA[
    private container sortThreeValues(
        real _val1,
        real _val2,
        real _val3)
    {
        real minimum;
        real middle;
        real maximum;

        [minimum, maximum]  = _val1 < _val2? [_val1, _val2] : [_val2, _val1];

        if (_val3 < minimum)
        {
            [minimum, middle] = [_val3, minimum];
        }
        else if (_val3 < maximum)
        {
            middle = _val3;
        }
        else
        {
            [middle, maximum] = [maximum, _val3];
        }

        return [minimum, middle, maximum];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLargestItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a record from the <c>TmpMCRPackingBoxStage</c> table with the maximum value of LengthLongest,
    /// LengthMiddle, LengthShortest, GrossInventVolume and GrossInventWeight
    /// </summary>
    /// <returns>
    /// This will return a record from the <c>TmpMCRPackingBoxStage</c> table.
    /// </returns>
    TmpMCRPackingBoxStage getLargestItem()
    {
        TmpMCRPackingBoxStage tmpMCRPackingBoxStage;

        tmpMCRPackingBoxStage.setTmpData(this);

        select firstonly tmpMCRPackingBoxStage
            order by LengthLongest     desc,
                     LengthMiddle      desc,
                     LengthShortest    desc,
                     GrossInventVolume desc,
                     GrossInventWeight desc;

        return tmpMCRPackingBoxStage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLongestOverallLengths</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a container with the maximum shortest length, middle length and longest length.
    /// </summary>
    /// <returns>
    /// This will return the values of shortest, middle and longest length.
    /// </returns>
    container getLongestOverallLengths()
    {
        TmpMCRPackingBoxStage tmpMCRPackingBoxStage;

        tmpMCRPackingBoxStage.setTmpData(this);

        select
            maxof(LengthShortest),
            maxof(LengthMiddle),
            maxof(LengthLongest)
                from tmpMCRPackingBoxStage;

        return [tmpMCRPackingBoxStage.LengthShortest,
                tmpMCRPackingBoxStage.LengthMiddle,
                tmpMCRPackingBoxStage.LengthLongest];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from a given record.
    /// </summary>
    /// <param name="_common">
    /// A table buffer.
    /// </param>
    void initFrom(Common _common)
    {
        switch (_common.TableId)
        {
            case tableNum(SalesParmLine):
                this.initFromSalesParmLine(_common);
                break;

            case tableNum(TmpMCRPackingBoxStage):
                this.initFromPackingBoxStage(_common);
                break;

            default:
                throw error(strFmt("@MCR10769", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPackingBoxStage</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Initializes from another packing box stage record.
    /// </summary>
    /// <param name="_tmpMCRPackingBoxStage">
    /// A buffer record from the table <c>TmpMCRPackingBoxStage</c>
    /// </param>
    /// <remarks>
    /// Clients should not use this method. Instead, they should use <c>initFrom()</c>.
    /// </remarks>
    private void initFromPackingBoxStage(TmpMCRPackingBoxStage _tmpMCRPackingBoxStage)
    {
        this.ItemId = _tmpMCRPackingBoxStage.ItemId;

        this.InventQty = _tmpMCRPackingBoxStage.InventQty;

        this.GrossInventWidth  = _tmpMCRPackingBoxStage.GrossInventWidth;
        this.GrossInventHeight = _tmpMCRPackingBoxStage.GrossInventHeight;
        this.GrossInventDepth  = _tmpMCRPackingBoxStage.GrossInventDepth;

        this.GrossInventVolume = _tmpMCRPackingBoxStage.GrossInventVolume;
        this.GrossInventWeight = _tmpMCRPackingBoxStage.GrossInventWeight;

        this.SalesParmLine     = _tmpMCRPackingBoxStage.SalesParmLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from a sales parm line.
    /// </summary>
    /// <param name="_salesParmLine">
    /// A record buffer from table <c>SalesParmLine></c>.
    /// </param>
    /// <remarks>
    /// Clients should not use this method. Instead, they should use initFrom().
    /// </remarks>
    private void initFromSalesParmLine(SalesParmLine _salesParmLine)
    {
        InventTable inventTable = _salesParmLine.inventTable();

        this.ItemId = inventTable.ItemId;

        // Inventory unit
        this.InventQty = _salesParmLine.InventNow;

        this.GrossInventWidth  = inventTable.GrossWidth;
        this.GrossInventHeight = inventTable.GrossHeight;
        this.GrossInventDepth  = inventTable.GrossDepth;

        this.GrossInventVolume = inventTable.grossVolume();
        this.GrossInventWeight = inventTable.grossWeight();

        this.SalesParmLine     = _salesParmLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record.
    /// </summary>
    /// <remarks>
    /// Overridden to include the <c>enforceIntegrity</c> method.
    /// </remarks>
    public void insert()
    {
        this.enforceIntegrity();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a record.
    /// </summary>
    /// <remarks>
    /// Overridden to include the <c>enforceIntegrity</c> method.
    /// </remarks>
    public void update()
    {
        this.enforceIntegrity();

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@MCR23714</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>GrossInventWeight</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>PackingBoxStorageIdx</ReplacementKey>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesParmLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossInventVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossInventWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossTotalVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossTotalWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossInventWidth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossInventHeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossInventDepth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LengthShortest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LengthMiddle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LengthLongest</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossInventDepth</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDepth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossInventHeight</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventHeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossInventVolume</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossInventWeight</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossInventWidth</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventWidth</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossTotalVolume</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossTotalWeight</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LengthLongest</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BOMMeasureWidth</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LengthMiddle</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BOMMeasureWidth</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LengthShortest</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BOMMeasureWidth</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesParmLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesParmLineRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackingBoxStorageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesParmLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRPackingBoxStage</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TmpMCRPackingBoxStage</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesParmLine</Name>
					<Field>SalesParmLine</Field>
					<RelatedField>SalesParmLine</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesParmLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesParmLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesParmLine</Name>
					<SourceEDT>SalesParmLineRefRecId</SourceEDT>
					<Field>SalesParmLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>