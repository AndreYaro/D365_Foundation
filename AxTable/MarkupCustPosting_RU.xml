<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupCustPosting_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MarkupCustPosting_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();

        this.MarkupCode = TableGroupAll::All;
        this.CustCode   = TableGroupAll::All;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.setLedgerPostingType();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(MarkupCustPosting_RU, MarkupCode):
                switch (this.MarkupCode)
                {
                    case TableGroupAll::Table:
                        if (this.MarkupRelation && !MarkupTable::exist(
                                                                MarkupModuleType::Cust
                                                                , this.MarkupRelation))
                            this.MarkupRelation = '';
                        break;
                    case TableGroupAll::All:
                        if (this.MarkupRelation)
                            this.MarkupRelation = '';
                        break;
                }
                break;
            case fieldNum(MarkupCustPosting_RU, CustCode):
                switch (this.CustCode)
                {
                    case TableGroupAll::Table:
                        if (this.CustRelation && !CustTable::exist(this.CustRelation))
                            this.CustRelation = '';
                        break;
                    case TableGroupAll::GroupId:
                        if (this.CustRelation && !CustGroup::exist(this.CustRelation))
                            this.CustRelation = '';
                        break;
                    case TableGroupAll::All:
                        if (this.CustRelation)
                            this.CustRelation = '';
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerPostingType</Name>
				<Source><![CDATA[
    void setLedgerPostingType()
    {
        if (this.MarkupPostingType != MarkupCustPostingType_RU::Transit)
        {
            this.LedgerPostingType = LedgerPostingType::None;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setLedgerPostingType();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(fieldId id)
    {
        boolean ret;

        ret = super(id);

        switch (id)
        {
            case fieldNum(MarkupCustPosting_RU, LedgerDimension):
                ret = MainAccount::checkTransactionAccount(this.LedgerDimension) && ret;
                break;
            case fieldNum(MarkupCustPosting_RU, MarkupCode):
                if (this.MarkupCode == TableGroupAll::GroupId)
                {
                    ret = checkFailed("@GLS114821") && ret;
                    break;
                }
                break;
            case fieldNum(MarkupCustPosting_RU, MarkupRelation):
                switch (this.MarkupCode)
                {
                    case TableGroupAll::All:
                        if (this.MarkupRelation)
                            ret = checkFailed("@SYS51104") && ret;
                        break;
                }
                break;
            case fieldNum(MarkupCustPosting_RU, CustRelation):
                switch (this.CustCode)
                {
                    case TableGroupAll::All:
                        if (this.CustRelation)
                            ret =  checkFailed("@SYS24200") && ret;
                        break;
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.CustCode != TableGroupAll::All && ! this.CustRelation)
        {
            ret = checkFailed("@SYS56456");
        }

        if (this.MarkupCode == TableGroupAll::Table && ! this.MarkupRelation)
        {
            ret = checkFailed("@GLS114838");
        }

        if (this.MarkupPostingType == MarkupCustPostingType_RU::Transit && this.LedgerDimension && ! this.LedgerPostingType)
        {
            ret = checkFailed("@GLS114803");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custRelation</Name>
				<Source><![CDATA[
    static CustVendRel custRelation(TableGroupAll    _accountCode,
                                    CustAccount      _accountNum,
                                    CustGroupId      _accountGroup)
    {
        return (_accountCode == TableGroupAll::Table
                ? _accountNum
                : _accountCode== TableGroupAll::GroupId
                ? _accountGroup
                : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(MarkupCustPostingType_RU   _postingType,
                         TableGroupAll              _custCode,
                         CustVendRel                _custRelation,
                         TableGroupAll              _markupCode,
                         MarkupCode                 _markupRelation)
    {
        return (select firstonly markupCustPosting_RU
                    where markupCustPosting_RU.MarkupPostingType    == _postingType
                       && markupCustPosting_RU.CustCode             == _custCode
                       && markupCustPosting_RU.CustRelation         == _custRelation
                       && markupCustPosting_RU.MarkupCode           == _markupCode
                       && markupCustPosting_RU.MarkupRelation       == _markupRelation).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static MarkupCustPosting_RU find(MarkupCustPostingType_RU   _postingType,
                                     TableGroupAll              _custCode,
                                     CustVendRel                _custRelation,
                                     TableGroupAll              _markupCode,
                                     MarkupCode                 _markupRelation,
                                     boolean                    _forUpdate = false)
    {
        MarkupCustPosting_RU    markupCustPosting;
        markupCustPosting.selectForUpdate(_forUpdate);

        select firstonly markupCustPosting
            where markupCustPosting.MarkupPostingType   == _postingType
               && markupCustPosting.CustCode            == _custCode
               && markupCustPosting.CustRelation        == _custRelation
               && markupCustPosting.MarkupCode          == _markupCode
               && markupCustPosting.MarkupRelation      == _markupRelation;

        return markupCustPosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLedger</Name>
				<Source><![CDATA[
    static MarkupCustPosting_RU findLedger(MarkupCustPostingType_RU  _postingType,
                                                  CustAccount               _custAccount,
                                                  MarkupCode                _markupCode)
    {
        Counter                 custI;
        Counter                 markupI;
        CustGroupId             custGroup = CustTable::find(_custAccount).CustGroup;
        CustVendRel             custRelation;
        MarkupCode              markupRelation;
        MarkupCustPosting_RU    markupCustPosting;

        for (custI = 0; custI < enumCnt(TableGroupAll); custI++)
        {
            custRelation = MarkupCustPosting_RU::custRelation(custI, _custAccount, custGroup);
            for (markupI = 0; markupI < enumCnt(TableGroupAll); markupI++)
            {
                if (markupI == TableGroupAll::GroupId)
                {
                    continue;
                }
                markupRelation = MarkupCustPosting_RU::markupRelation(markupI, _markupCode);
                markupCustPosting = MarkupCustPosting_RU::find(_postingType, custI, custRelation, markupI, markupRelation);
                if (markupCustPosting)
                {
                    return markupCustPosting;
                }
            }
        }
        return markupCustPosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupRelation</Name>
				<Source><![CDATA[
    static MarkupCode markupRelation(TableGroupAll    _markupCode,
                                     MarkupCode       _markupNum)
    {
        return (_markupCode == TableGroupAll::Table
                ? _markupNum
                : '');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS114733</DeveloperDocumentation>
	<Label>@GLS114800</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CustCode</TitleField1>
	<TitleField2>MarkupCode</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PostingIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS302</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupPostingType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Markup</Name>
			<Label>@GLS111084</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Sys12243</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventCustVendRel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LedgerPostingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarkupCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS114775</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarkupPostingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MarkupCustPostingType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarkupRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PostingIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>MarkupPostingType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarkupCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarkupRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MarkupCustPosting_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustCode</Name>
					<Field>CustCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustRelation</Name>
					<Field>CustRelation</Field>
					<RelatedField>CustGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MarkupCustPosting_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustCode</Name>
					<Field>CustCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustRelation</Name>
					<Field>CustRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MarkupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>MarkupTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MarkupCustPosting_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ModuleType_Extern</Name>
					<RelatedField>ModuleType</RelatedField>
					<ValueStr>MarkupModuleType::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>MarkupCode</Name>
					<Field>MarkupCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MarkupRelation</Name>
					<Field>MarkupRelation</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>