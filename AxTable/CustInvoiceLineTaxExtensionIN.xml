<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceLineTaxExtensionIN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceLineTaxExtensionIN extends common
{
    #ISOCountryRegionCodes
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteUncommittedTables_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>TaxUncommitted and TaxWithholdUncommitted_IN</c> records if a field that affects tax has changed.
    /// </summary>
    private void deleteUncommittedTables_IN()
    {
        CustInvoiceLineTaxExtensionIN   originalCustInvoiceLineTaxExtensionIN;
        CustInvoiceLine                 custInvoiceLine;
        CustInvoiceTable                custInvoiceTable;

        originalCustInvoiceLineTaxExtensionIN = this.orig();
        custInvoiceLine = this.getCustInvoiceLine();
        custInvoiceTable = custInvoiceLine.custInvoiceTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustInvoiceLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>custInvoiceLine</c> value for the specified <c>CustInvoiceLineTaxExtensionIN</c> record.
    /// </summary>
    /// <returns>
    /// A <c>CustInvoiceLine</c> record.
    /// </returns>
    public CustInvoiceLine getCustInvoiceLine()
    {
        return CustInvoiceLine::find(this.CustInvoiceLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasIndirectTaxFieldChanged_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a value that indicates whether india indirect tax information has changed.
    /// </summary>
    /// <param name="_originalLine">
    /// The original customer invoice tax extention line record.
    /// </param>
    /// <returns>
    /// A boolean value that indicates whether the tax information has changed.
    /// </returns>
    private boolean hasIndirectTaxFieldChanged_IN(CustInvoiceLineTaxExtensionIN _originalLine = this.orig())
    {
        CustInvoiceLineTaxExtensionIN custInvoiceLineTaxExtension_org = _originalLine ? _originalLine : this.orig();
        boolean indirectTaxChanged = false;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            indirectTaxChanged =
                (this.AssessableValueTransactionCurrency != custInvoiceLineTaxExtension_org.AssessableValueTransactionCurrency) ||
                (this.MaxRetailPricePerUnit != custInvoiceLineTaxExtension_org.MaxRetailPricePerUnit) ||
                (this.MaximumRetailPrice != custInvoiceLineTaxExtension_org.MaximumRetailPrice);
        }
        return indirectTaxChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        CustInvoiceLine                 custInvoiceLine;
        CustInvoiceTable                custInvoiceTable;

        if (this.CustInvoiceLine)
        {
            super();
            custInvoiceLine = this.getCustInvoiceLine();
            custInvoiceTable = custInvoiceLine.custInvoiceTable();

            if (!TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
            {
                if (TaxUncommitted::existByDocumentId(custInvoiceTable.TableId, custInvoiceTable.RecId))
                {
                    TaxUncommitted::deleteForDocumentHeader(custInvoiceTable.TableId, custInvoiceTable.RecId);
                }
            }
            if (TaxWithholdUncommitted_IN::existByDocumentId(custInvoiceTable.TableId, custInvoiceTable.RecId))
            {
                TaxWithholdUncommitted_IN::deleteForDocumentHeader(custInvoiceTable.TableId, custInvoiceTable.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        CustInvoiceLineTaxExtensionIN originalCustInvoiceLineTaxExtensionIN = this.orig();

        this.deleteUncommittedTables_IN();
        super();

        // <GTE>
        if (this.hasIndirectTaxFieldChanged_IN(originalCustInvoiceLineTaxExtensionIN))
        {
            CustInvoiceLine::find(this.CustInvoiceLine).markCurrentTaxDocumentTaxStatusDirty();
        }
        // </GTE>
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        if (this.CustInvoiceLine)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a copy of the free text invoice line tax extension record for the given free text invoice line.
    /// </summary>
    /// <param name="_bufferFrom">
    /// The original free text invoice line.
    /// </param>
    /// <param name="_bufferTo">
    /// The new free text invoice line.
    /// </param>
    public static void copy(CustInvoiceLine _bufferFrom, CustInvoiceLine _bufferTo)
    {
        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return;
        }

        CustInvoiceLineTaxExtensionIN custInvoiceLineTaxExtensionINOrig = CustInvoiceLineTaxExtensionIN::findByCustInvoiceLine(_bufferFrom.RecId);

        if (custInvoiceLineTaxExtensionINOrig)
        {
            CustInvoiceLineTaxExtensionIN custInvoiceLineTaxExtensionINCopy = custInvoiceLineTaxExtensionINOrig.data();

            custInvoiceLineTaxExtensionINCopy.CustInvoiceLine = _bufferTo.RecId;

            custInvoiceLineTaxExtensionINCopy.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustInvoiceLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>CustInvoiceLineTaxExtensionIN</c> table specified by a reference record ID.
    /// </summary>
    /// <param name="_recId">
    /// The specified reference record id.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>CustInvoiceLineTaxExtensionIN</c> table; otherwise, an empty record.
    /// </returns>
    public static CustInvoiceLineTaxExtensionIN findByCustInvoiceLine(
        CustInvoiceLineIdRefRecId   _recId,
        boolean                     _update = false)
    {
        CustInvoiceLineTaxExtensionIN custInvoiceLineTaxExt;

        if (_recId)
        {
            custInvoiceLineTaxExt.selectForUpdate(_update);
            select firstOnly custInvoiceLineTaxExt
                where custInvoiceLineTaxExt.CustInvoiceLine == _recId;
        }

        return custInvoiceLineTaxExt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modify a specified field.
    /// </summary>
    /// <param name = "_fieldName">
    /// The field Name of the field to modify.
    /// </param>
    /// <param name = "_arrayIndex">
    /// The array index of the field.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(CustInvoiceLineTaxExtensionIN, MaxRetailPricePerUnit):
                if (TaxParameters::checkTaxParameters_IN())
                {
                    this.MaximumRetailPrice = this.calcMaximumRetailPrice();
                }
                break;
            case fieldStr(CustInvoiceLineTaxExtensionIN, MaximumRetailPrice):
                if (TaxParameters::checkTaxParameters_IN())
                {
                    this.MaxRetailPricePerUnit  = 0;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMaximumRetailPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and sets the MaximumRetailPrice_IN field using Quantity and MaxRetailPricePerUnit_IN.
    /// </summary>
    /// <returns>
    /// Returns the MaximumRetailPrice_IN field value.
    /// </returns>
    public MaximumRetailPrice_IN calcMaximumRetailPrice()
    {
        CustInvoiceLine         custInvoiceLine;
        MaximumRetailPrice_IN   mrP;

        custInvoiceLine = CustInvoiceLine::find(this.CustInvoiceLine);
        mrP             = custInvoiceLine.Quantity * this.MaxRetailPricePerUnit;

        if (mrP)
        {
            mrP                      = CurrencyExchangeHelper::amount(mrP, custInvoiceLine.CurrencyCode );
            this.MaximumRetailPrice  = mrP;
        }
        else
        {
            mrP = this.MaximumRetailPrice;
        }

        return mrP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index.
    /// </param>
    /// <returns>
    /// The validation result.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(CustInvoiceLineTaxExtensionIN, tdsGroup):
                    if (TaxWithholdParameters_IN::isTDSActivate() && this.tdsGroup)
                    {
                        if (TaxWithholdGroupHeading::find(this.tdsGroup).TaxType_IN != TaxWithholdCodeType_IN::TDS)
                        {
                            ret = checkFailed(strFmt("@GLS5461", this.tdsGroup, TaxWithholdCodeType_IN::TDS));
                        }
                    }
                    break;

                case fieldStr(CustInvoiceLineTaxExtensionIN, tcsGroup):
                    if (TaxWithholdParameters_IN::isTCSActivate() && this.tcsGroup)
                    {
                        if (TaxWithholdGroupHeading::find(this.tcsGroup).TaxType_IN != TaxWithholdCodeType_IN::TCS)
                        {
                            ret = checkFailed(strFmt("@GLS5461", this.tcsGroup, TaxWithholdCodeType_IN::TCS));
                        }
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWithholdCodeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax withhold code type.
    /// </summary>
    /// <returns>
    /// The instance of the <c>TaxWithholdCodeType</c> class.
    /// </returns>
    public TaxWithholdCodeType_IN taxWithholdCodeType()
    {
        TaxWithholdCodeType_IN  taxWithholdCodeType = TaxWithholdCodeType_IN::None;

        if  (this.tdsGroup != '')
        {
            taxWithholdCodeType = TaxWithholdCodeType_IN::TDS;
        }
        else if (this.tcsGroup != '')
        {
            taxWithholdCodeType = TaxWithholdCodeType_IN::TCS;
        }

        return taxWithholdCodeType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS222138</DeveloperDocumentation>
	<Label>@GLS222137</Label>
	<TitleField1>CustInvoiceLine</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxRetailPricePerUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WithholdingTax</Name>
			<Label>@SYS33817</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TDSGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TDSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5362</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxRetailPricePerUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
			<Label>@GLS63353</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TCSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5363</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AssessableValueTransactionCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@GLS5298</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxInformation_IN</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxInformationRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdAcknowledgementNumber</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdAcknowledgementNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdCountryRegionToRemittance</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdCountryToRemitRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdNatureOfRemittance</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxWitholdNatureOfRemittanceRefRecId_IN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustInvoiceLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustInvoiceLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TaxModelDocLineExtensionIN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionRefRecId</MapField>
					<MapFieldTo>CustInvoiceLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
					<MapFieldTo>AssessableValueTransactionCurrency</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditNoteDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsMaxRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MaximumRetailPrice</MapField>
					<MapFieldTo>MaximumRetailPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAsPerOriginalInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>CustInvoiceLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLine</Name>
					<Field>CustInvoiceLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ParentRecIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTCS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeading_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeading_1_CustInvoiceLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TCSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TCSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTDS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeading_CustInvoiceLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TDSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TDSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>