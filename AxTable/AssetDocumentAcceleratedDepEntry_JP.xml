<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentAcceleratedDepEntry_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetDocumentAcceleratedDepEntry_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        AssetDocumentEntry_JP   docEntry;
        AssetDocumentTrans_JP   docTrans;

        select firstOnly RecId from docTrans where docTrans.AssetDocumentEntry_JP == this.AssetDocumentEntry_JP;

        if (docTrans.RecId)
        {
            throw error("@SYP4880080");
        }
        else
        {
            ttsBegin;

            super();

            delete_from docEntry where docEntry.RecId == this.AssetDocumentEntry_JP;

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetDocumentAcceleratedDepEntry_JP</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The <c>AssetDocumentAcceleratedDepEntry_JP</c> recid.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The <c>AssetDocumentAcceleratedDepEntry_JP</c> table record.
    /// </returns>
    public static AssetDocumentAcceleratedDepEntry_JP find(
        RefRecId            _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetDocumentAcceleratedDepEntry_JP   docAccDepEnrty;;

        if (_recId)
        {
            docAccDepEnrty.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                docAccDepEnrty.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                docAccDepEnrty
            where
                docAccDepEnrty.RecId == _recId;
        }
        return docAccDepEnrty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAssetDocumentEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the record of <C>AssetDocumentAcceleratedDepEntry_JP</C> according to
    /// <C>AssetDocumentEntry_JP</C>
    /// </summary>
    /// <param name="_recId">
    /// RecId of <C>AssetDocumentEntry_JP</C>
    /// </param>
    /// <returns>
    /// The record of <C>AssetDocumentAcceleratedDepEntry_JP</C>
    /// </returns>
    public static AssetDocumentAcceleratedDepEntry_JP findByAssetDocumentEntry(RefRecId _recId)
    {
        AssetDocumentAcceleratedDepEntry_JP     docAccDepEntry;

        select firstOnly docAccDepEntry where docAccDepEntry.AssetDocumentEntry_JP == _recId;

        return docAccDepEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertForAssetDocEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert a record of <C>AssetDocumentAcceleratedDepEntry_JP</C> for <C>AssetDocumentEntry_JP</C> and
    /// <C>AssetDocumentAcceleratedDepTable_JP</C>
    /// </summary>
    /// <param name="_docEntryRecId">
    /// Recid of <C>AssetDocumentEntry_JP</C>
    /// </param>
    /// <param name="_docAccDepTableRecId">
    /// Recid of <C>AssetDocumentAcceleratedDepTable_JP</C>
    /// </param>
    /// <remarks>
    /// If there is a record corresponding to the <C>AssetDocumentEntry_JP</C> and
    /// <C>AssetDocumentAcceleratedDepTable_JP</C>, no record will be inserted.
    /// </remarks>
    public static void insertForAssetDocEntry(
        RefRecId _docEntryRecId,
        RefRecId _docAccDepTableRecId)
    {
        AssetDocumentAcceleratedDepEntry_JP docAccDepEntry;

        select firstOnly AssetDocumentAcceleratedDepTable_JP from docAccDepEntry
            where docAccDepEntry.AssetDocumentEntry_JP == _docEntryRecId;

        if (!docAccDepEntry.RecId)
        {
            docAccDepEntry.AssetDocumentEntry_JP = _docEntryRecId;
            docAccDepEntry.AssetDocumentAcceleratedDepTable_JP = _docAccDepTableRecId;
            docAccDepEntry.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetDocumentAcceleratedLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a look up form for specified look up field.
    /// </summary>
    /// <param name="_formControl">
    /// Form control that the look up form attached.
    /// <param name="_lookupId">
    /// The field to be looked up.
    /// </param>
    /// <param name="_filterId">
    /// The field to be filtered.
    /// </param>
    /// <param name="_filterStr">
    /// The str to filter.
    /// </param>
    /// <param name="_accDepDocTable">
    /// Instance of <c>AssetDocumentAcceleratedDepTable_JP</c>
    /// </param>
    /// <returns>
    /// Returns look up form for specified look up field.
    /// </returns>
    public static SysTableLookup assetDocumentAcceleratedLookup(
        FormControl _formControl,
        FieldId _lookupId,
        FieldId _filterId,
        str _filterStr,
        AssetDocumentAcceleratedDepTable_JP _accDepDocTable = null)
    {
        TableId                 tableId;
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildAssetBook;
        QueryBuildDataSource    queryBuildAssetBookTable;

        tableId         = tableNum(AssetBook);

        queryBuildAssetBook = query.addDataSource(tableNum(AssetBook));
        if (_filterId && _filterStr)
        {
            queryBuildAssetBook.addRange(_filterId).value(
                queryValue(_filterStr));
        }

        queryBuildAssetBook.addRange(fieldNum(AssetBook, DepreciationAcceleratedProfile_JP)).value(
            SysQuery::valueNotEmptyString());

        queryBuildAssetBookTable = queryBuildAssetBook.addDataSource(tableNum(AssetBookTable));
        queryBuildAssetBookTable.addLink(fieldnum(AssetBook, BookId), fieldNum(AssetBookTable, BookId));
        queryBuildAssetBookTable.addRange(fieldNum(AssetBookTable, CurrentOperationsTax)).value(
            queryValue(_accDepDocTable.CurrentOperationsTax));

        sysTableLookup = SysTableLookup::newParameters(tableId, _formControl);
        sysTableLookup.addLookupfield(_lookupId);
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();

        return sysTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update ActualHours, ReservedHours and TotalOveruseHours
    /// </summary>
    public void updateHours(AssetAcceleratedDepOveruseHoursPerDay_JP _averageHours)
    {
        AssetAcceleratedDepWorkingHours_JP          workingHours;
        AssetDocumentAcceleratedDepTable_JP         accDepDocTable;

        select sum(ActualHours), sum(ReservedHours) from workingHours
            where workingHours.AssetDocumentAcceleratedDepEntry_JP == this.RecId;

        this.ActualHours = workingHours.ActualHours;
        this.ReservedHours = workingHours.ReservedHours;
        this.TotalOveruseHours = this.overuseHours();

        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(AssetDocumentAcceleratedDepEntry_JP, ActualHours):
            case fieldStr(AssetDocumentAcceleratedDepEntry_JP, ReservedHours):
            case fieldStr(AssetDocumentAcceleratedDepEntry_JP, PlannedHours):
                this.TotalOveruseHours = this.overuseHours();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>overuseHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate TotalOveruseHours
    /// </summary>
    public real overuseHours()
    {
        real overuseHours;
        AssetDocumentAcceleratedDepTable_JP accDepDocTable;
        real totalHours;

        select firstonly AverageHours, OperationDaysPerYear from accDepDocTable
            where accDepDocTable.RecId == this.AssetDocumentAcceleratedDepTable_JP;

        totalHours = accDepDocTable.AverageHours * accDepDocTable.OperationDaysPerYear;

        if (this.ActualHours)
        {
            overuseHours = this.ActualHours > totalHours ? this.ActualHours - totalHours : 0;
        }
        else if (this.ReservedHours)
        {
            overuseHours = this.ReservedHours > totalHours ? this.ReservedHours - totalHours : 0;
        }
        else if (this.PlannedHours)
        {
            overuseHours = this.PlannedHours > totalHours ? this.PlannedHours - totalHours : 0;
        }

        return overuseHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        AssetDocumentAcceleratedDepTable_JP accDepDocTable;

        super();

        select firstonly AverageHours, OperationDaysPerYear from accDepDocTable
            where accDepDocTable.RecId == this.AssetDocumentAcceleratedDepTable_JP;

        this.PlannedHours = accDepDocTable.AverageHours * accDepDocTable.OperationDaysPerYear;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4880092</DeveloperDocumentation>
	<Label>@SYP4880079</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AssetDocumentAcceleratedDepTable_JP</TitleField1>
	<TitleField2>AssetDocumentEntry_JP</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentAcceleratedDepTable_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentAcceleratedDepTable_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetDocumentAcceleratedDepTable_JP</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetDocumentEntry_JP</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PlannedHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Asset</ConfigurationKey>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>AssetAcceleratedDepActualHours_JP</ExtendedDataType>
			<Label>@FixedAssetsIncentiveDepreciation:AcceleratedDepPlanned</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservedHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Asset</ConfigurationKey>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>AssetAcceleratedDepActualHours_JP</ExtendedDataType>
			<Label>@FixedAssetsIncentiveDepreciation:AcceleratedDepReserved</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ActualHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Asset</ConfigurationKey>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>AssetAcceleratedDepActualHours_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalOveruseHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetAcceleratedDepOveruseHoursPerDay_JP</ExtendedDataType>
			<Label>@FixedAssetsIncentiveDepreciation:AcceleratedDepTotalOveruseHours</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AcceleratedDepIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetDocumentAcceleratedDepTable_JP</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DocEntryIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetDocumentAcceleratedDepTable_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>AssetDocumentAcceleratedDepTable_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetDocumentAcceleratedDepTable_JP</Name>
					<Field>AssetDocumentAcceleratedDepTable_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetDocumentEntry_JP</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AssetDocumentEntry_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetDocumentEntry_JP</Name>
					<Field>AssetDocumentEntry_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>