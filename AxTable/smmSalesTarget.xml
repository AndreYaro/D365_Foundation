<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmSalesTarget</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmSalesTarget extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcAmount</Name>
				<Source><![CDATA[
    // Calculate target amount for a sales target
    AmountMST calcAmount(TransDate _fromDate, TransDate _toDate)
    {
        smmSalesTargetTrans salesTargetTrans;
        AmountMST amount;

        while select AmountMST from salesTargetTrans
            order by RefRecId, TargetDate
            where salesTargetTrans.RefRecId  == this.RecId
            && salesTargetTrans.TargetDate   >= _fromDate
            && salesTargetTrans.TargetDate   <= _toDate
        {
            amount += salesTargetTrans.AmountMST;
        }
        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTarget</Name>
				<Source><![CDATA[
        public void deleteTarget()
    {
        #define.blank(0)

        smmSalesTarget  salesTarget;

        ttsbegin;

        delete_from salesTarget
            where salesTarget.SalesUnitId           == this.SalesUnitId &&
                  salesTarget.SalesPersonWorker     != #blank;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showSalesManName</Name>
				<Source><![CDATA[
    display EmplName showSalesManName()
    {
        return HcmWorker::worker2Name(this.SalesPersonWorker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if SalesPersonWorker and SalesManagerWorker of <c>smmSalesTarget</c> table belongs to the current Legal Entity.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// SalesPersonWorker of the record in the <c>smmSalesTarget</c> table.
    /// SalesManagerWorker of the record in the <c>smmSalesTarget</c> table.
    /// </param>
    /// <returns>
    /// True if Worker belongs to current Legal Entity otherwise false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean         ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(smmSalesTarget, SalesPersonWorker) :
                if (this.SalesPersonWorker)
                {
                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.SalesPersonWorker);
                }
                break;

            case fieldNum(smmSalesTarget, SalesManagerWorker) :
                if (this.SalesManagerWorker)
                {
                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.SalesManagerWorker);
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a <c>SalesPersonWorker</c> field and <c>SalesManagerWorker</c> field of the
    /// <c>smmSalesTarget</c> table belong to the current Legal Entity.
    /// </summary>
    /// <param name="validateWorkerOnly">
    /// A Boolean value that indicates whether only the worker has to be validated.
    /// </param>
    /// <returns>
    /// true if the worker belongs to current Legal Entity otherwise false.
    /// </returns>
    public boolean validateWrite(boolean validateWorkerOnly = false)
    {
        boolean ret = true;

        if (!validateWorkerOnly)
        {
            ret = super();
        }

        if (this.SalesPersonWorker)
        {
            ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.SalesPersonWorker);
        }

        if (this.SalesManagerWorker)
        {
            ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.SalesManagerWorker);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static smmSalesTarget find(smmSalesUnitMemberID _salesUnitMemberId,  boolean _forupdate = false)
    {
        smmSalesTarget salesTarget = null;

        if (_salesUnitMemberId)
        {
            salesTarget.selectForUpdate(_forupdate);

            select firstonly salesTarget
                where salesTarget.MemberId  == _salesUnitMemberId;
        }

        return salesTarget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmSM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124777</DeveloperDocumentation>
	<Label>@SYS80468</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SalesPersonWorker</TitleField1>
	<TitleField2>SalesUnitId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPersonWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesPerson</Name>
			<Label>@SYS80468</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPersonWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesManagerWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesUnitMemberID</Name>
			<Label>@SYS80037</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MemberId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MemberId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmSalesUnitMemberID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesManagerWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>smmSalesManagerWorker</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesPersonWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>smmSalesManWorker</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmSalesUnitId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesPersonWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesManagerWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MemberYearIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MemberId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesUnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesManagerWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_1_smmSalesTarget</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesManagerWorker</Name>
					<Field>SalesManagerWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesPersonWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_smmSalesTarget</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesPersonWorker</Name>
					<Field>SalesPersonWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesStaff</Name>
			<EntityRelationshipRole>@SYS124646</EntityRelationshipRole>
			<RelatedTable>smmSalesUnitMembers</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MemberId</Name>
					<Field>MemberId</Field>
					<RelatedField>MemberId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmSalesUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmSalesUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>smmSalesUnit</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>smmSalesTarget</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesUnitId</Name>
					<SourceEDT>smmSalesUnitId</SourceEDT>
					<Field>SalesUnitId</Field>
					<RelatedField>SalesUnitId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesUnitIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>