<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchAgreementHeaderDefault</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchAgreementHeaderDefault extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDefaultValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether any fields in the <c>PurchAgreamentHeaderDefault</c> table have a non-default
    /// value.
    /// </summary>
    /// <returns>
    /// true if all fields have default values; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The method is used during the <see cref="M:PurchAgreementHeaderDefault.insert" /> and <see
    /// cref="M:PurchAgreementHeaderDefault.update" /> methods to make sure that the
    /// <c>PurchAgreamentHeaderDefault</c> record is saved.If the record only contains default values it
    /// should not be saved.
    /// </remarks>
    private boolean checkDefaultValues()
    {
        if (   this.MethodOfPayment
            || this.PaymentSpecification
            || this.BuyerGroup
            || this.VendorInvoiceAccount
            || this.PurchasePool
           )
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editVendBankAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Manages the setting of vendor bank account ID on purchase agreement subcontractor record.
    /// </summary>
    /// <param name="_set">
    /// A Boolean value that indicates whether to set the value of the vendor bank account ID.
    /// </param>
    /// <param name="_vendBankAccountID_PSN">
    /// The vendor bank account ID that was selected by a user.
    /// </param>
    /// <returns>
    /// The vendor bank account ID.
    /// </returns>
    public edit BankAccountID editVendBankAccount(
        boolean         _set,
        BankAccountID   _vendBankAccountID_PSN)
    {
        BankAccountID   vendBankAccountID_PSN;

        BankAccountID   originalVendBankAccountID_PSN;
        VendAccount     originalVendAccount_PSN;
        DataAreaId      originalVendBankAccountDataAreaID_PSN;

        VendBankAccount vendBankAccount;

        if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        {
            vendBankAccountID_PSN = _vendBankAccountID_PSN;

            if (_set)
            {
                originalVendBankAccountID_PSN = this.VendBankAccountID_PSN;
                originalVendBankAccountDataAreaID_PSN = this.VendBankAccountDataAreaID_PSN;
                originalVendAccount_PSN = this.VendAccount_PSN;

                if (this.VendorInvoiceAccount == '')
                {
                    vendBankAccount = VendBankAccount::findByCompany(CompanyInfo::findRecId(CompanyInfo::current()).DataArea,
                                                                        PurchAgreementHeader::find(this.PurchaseAgreementHeader).VendAccount,
                                                                        vendBankAccountID_PSN);
                }
                else
                {
                    vendBankAccount = VendBankAccount::findByCompany(CompanyInfo::findRecId(CompanyInfo::current()).DataArea,
                                                                        this.VendorInvoiceAccount,
                                                                        vendBankAccountID_PSN);
                }

                if (vendBankAccount.RecId != 0 && (vendBankAccount.ExpiryDate == utcDateTimeNull() || vendBankAccount.ExpiryDate > DateTimeUtil::getSystemDateTime()))
                {
                    this.VendBankAccountID_PSN = vendBankAccountID_PSN;
                    this.VendBankAccountDataAreaID_PSN = CompanyInfo::findRecId(CompanyInfo::current()).DataArea;

                    if (this.VendorInvoiceAccount == '')
                    {
                        this.VendAccount_PSN = PurchAgreementHeader::find(this.PurchaseAgreementHeader).VendAccount;
                    }
                    else
                    {
                        this.VendAccount_PSN = this.VendorInvoiceAccount;
                    }
                }
                else
                {
                    this.VendBankAccountID_PSN = originalVendBankAccountID_PSN;
                    this.VendBankAccountDataAreaID_PSN = originalVendBankAccountDataAreaID_PSN;
                    this.VendAccount_PSN = originalVendAccount_PSN;
                }
            }

            return this.VendBankAccountID_PSN;
        }
        else
        {
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the purchase agreement header default values from the vendor record.
    /// </summary>
    /// <param name="_vendTable">
    /// A table buffer that contains the vendor.
    /// </param>
    /// <param name="_vendAccount">
    /// A <c>VendAccount</c> variable that contains the vendor account; optional.
    /// </param>
    public void initFromVendTable(VendTable   _vendTable
        , VendAccount _vendAccount = ''
        )
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>

        this.setVendorInvoiceAccount(_vendTable, _vendAccount);

        this.VendorInvoiceAccountDataAreaId    = appl.company().dataArea(tableNum(VendTable));

        this.MethodOfPayment                   = _vendTable.PaymMode;
        this.MethodOfPaymentDataAreaId         = appl.company().dataArea(tableNum(VendPaymModeTable));
        this.PaymentSpecification              = _vendTable.PaymSpec;
        this.PaymentSpecificationDataAreaId    = appl.company().dataArea(tableNum(VendPaymModeSpec));

        this.PurchasePool                      = _vendTable.PurchPoolId;
        if (!this.PurchasePool)
        {
            this.PurchasePool                  = PurchParameters::find().PurchPoolId;
        }
        this.PurchasePoolDataAreaId            = appl.company().dataArea(tableNum(PurchPool));

        this.BuyerGroup                        = _vendTable.ItemBuyerGroupId;
        this.BuyerGroupDataAreaId              = appl.company().dataArea(tableNum(InventBuyerGroup));
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.initFromVendTable_RU(_vendTable);
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the purchase agreement header default values from the vendor record.
    /// </summary>
    /// <param name="_vendTable">
    ///    A table buffer that contains the vendor.
    /// </param>
    public void initFromVendTable_RU(VendTable _vendTable)
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (!this.VendorInvoiceAccount)
            {
                this.VendorInvoiceAccount = _vendTable.AccountNum;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVendorInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the vendor invoice account number.
    /// </summary>
    /// <param name = "_vendTable">A vendor table buffer.</param>
    /// <param name = "_vendorInvoiceNumber">Invoice account to use in case the vendor invoice account is empty.</param>
    public void setVendorInvoiceAccount(VendTable _vendTable, VendInvoiceAccount _fallbackVendorInvoiceNumber = '')
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            this.VendorInvoiceAccount = _vendTable.InvoiceAccount != '' ? _vendTable.InvoiceAccount : _fallbackVendorInvoiceNumber;
        }
        else
        {
            this.VendorInvoiceAccount = _vendTable.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the records into the <c>PurchAgreementHeaderDefault</c> table.
    /// </summary>
    /// <remarks>
    ///    For more information, see the <see cref="PurchAgreementHeaderDefault Table" />.
    /// </remarks>
    void  insert()
    {
        if (!this.checkDefaultValues())
        {
            this.doInsert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>VendTable</c> invoice record for the current record.
    /// </summary>
    /// <returns>
    /// The <c>VendTable</c> record.
    /// </returns>
    public VendTable invoiceVendTable()
    {
        return VendTable::findByDataAreaId(this.VendorInvoiceAccount, this.VendorInvoiceAccountDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the record in the <c>PurchAgreementHeaderDefault</c> table.
    /// </summary>
    /// <remarks>
    ///    The <c>PurchAgreementHeaderDefault</c> record should only be saved if any field has a non-default
    ///    value.This method verifies that the record can be actually deleted or inserted during update.For
    ///    more information, see the <see cref="PurchAgreementHeaderDefault Table" />.
    /// </remarks>
    public void update()
    {
        if (this.needCheckCLMIntegrationFields())
        {
            FieldId modifiedField = CLMIntegrationPurchAgreementDataProvider::getCLMIntegrationPurchAgreementHeaderDefaultModifiedField(this);

            if (modifiedField)
            {
                throw error(strFmt("@CLMIntegration:ErrorWhenCLMIntegrationFieldModifiedOnAgreementHeaderDefault", fieldId2Name(tableNum(PurchAgreementHeaderDefault), modifiedField)));
            }
        }

        if (!this.checkDefaultValues())
        {
            if (this.RecId)
            {
                this.doUpdate();
            }
            else
            {
                this.doInsert();
            }
        }
        else    //all values are default - delete the record
        {
            if (this.RecId)
            {
                this.delete();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the name of the vendor invoice account for the header default record of the current purchase
    ///    agreement.
    /// </summary>
    /// <returns>
    ///    A string that contains the name of the vendor.
    /// </returns>
    public display VendName vendInvoiceAccountName()
    {
        VendTable       vendTable;
        DirPartyTable   partyTable;

        if (this.VendorInvoiceAccount)
        {
            select firstonly
                   crossCompany
                   Party from vendTable
                    where    vendTable.AccountNum == this.VendorInvoiceAccount
                          && vendTable.DataAreaId == this.VendorInvoiceAccountDataAreaId
                join Name from partyTable
                    where partyTable.RecId == vendTable.Party;
        }
        return partyTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromSalesAgreementHeaderRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Creates an <c>PurchAgreementHeaderDefault</c> record from an sales agreement header record ID.
    /// </summary>
    /// <param name="_salesAgreementHeaderRecId">
    ///    The record ID  for the sales agreement header to create the <c>PurchAgreementHeaderDefault</c> record from.
    /// </param>
    /// <param name="_isIntraCompany_RU">
    ///    The intracompany flag.
    /// </param>
    /// <remarks>
    ///    Used in intercompany scenarios.
    /// </remarks>
    public static void createFromSalesAgreementHeaderRecId(AgreementHeaderRecId _salesAgreementHeaderRecId
                                                           , boolean _isIntraCompany_RU = false
    )
    {
        CustTable                           custTable;
        VendTable                           vendTable;
        SalesAgreementHeader                salesAgreementHeader;
        PurchAgreementHeader                purchAgreementHeader;
        PurchAgreementHeaderDefault         purchAgreementHeaderDefault;
        dataAreaId                          customerDataAreaId;
        // <GEERU>
        #ISOCountryRegionCodes
        boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        salesAgreementHeader = SalesAgreementHeader::find(_salesAgreementHeaderRecId);

        custTable = salesAgreementHeader.custTable();
        if (custTable.RecId)
        {
            // <GEERU>
            if (countryRegion_RU && _isIntraCompany_RU)
            {
                customerDataAreaId = custTable.company();
            }
            else
            {
            // </GEERU>
                customerDataAreaId = custTable.interCompanyTradingPartnerCompanyID();
            // <GEERU>
            }
            // </GEERU>

            if (!TradeInterCompany::checkDataAreaAccess(customerDataAreaId))
            {
                return;
            }

            changecompany(customerDataAreaId)
            {
                // <GEERU>
                if (countryRegion_RU && _isIntraCompany_RU)
                {
                    purchAgreementHeader = salesAgreementHeader.purchAgreementHeader_RU();
                }
                else
                {
                // </GEERU>
                    purchAgreementHeader = salesAgreementHeader.purchAgreementHeader();
                // <GEERU>
                }
                // </GEERU>
                select firstonly purchAgreementHeaderDefault
                    where purchAgreementHeaderDefault.PurchaseAgreementHeader == purchAgreementHeader.RecId;
                if (!purchAgreementHeaderDefault.RecId)
                {
                    // <GEERU>
                    if (countryRegion_RU && _isIntraCompany_RU)
                    {
                        vendTable = VendTable::findByPartyRecId(custTable.Party);
                    }
                    else
                    {
                    // </GEERU>
                        vendTable = VendTable::find(custTable.interCompanyTradingPartnerAccount());
                    // <GEERU>
                    }
                    // </GEERU>
                    purchAgreementHeaderDefault.PurchaseAgreementHeader = purchAgreementHeader.RecId;
                    purchAgreementHeaderDefault.initFromVendTable(vendTable, vendTable.AccountNum);
                    purchAgreementHeaderDefault.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchAgreementHeaderDefault</c> table by using a
    ///    <c>PurchAgreementHeader</c> record ID.
    /// </summary>
    /// <param name="_agreementHeaderRecId">
    ///    The record ID of the <c>PurchAgreementHeader</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>PurchAgreementHeaderDefault</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchAgreementHeaderDefault findPurchAgreementHeader(AgreementHeaderRecId _agreementHeaderRecId,
                                                                       boolean              _forUpdate = false)
    {
        PurchAgreementHeaderDefault purchAgreementHeaderDefault;

        if (_agreementHeaderRecId)
        {
            if (_forUpdate)
            {
                purchAgreementHeaderDefault.selectForUpdate(_forUpdate);
            }

            select firstonly purchAgreementHeaderDefault
                where purchAgreementHeaderDefault.PurchaseAgreementHeader == _agreementHeaderRecId;
        }

        return purchAgreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoiceAccountForContractorChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>VendorInvoiceAccount</c> and the <c>VendorInvoiceAccountDataAreaId</c> fields for
    /// the specified record when the contractor is modified.
    /// </summary>
    /// <param name="_purchAgreementHeaderRecId">
    /// The record ID of the <c>PurchAgreementheader</c> record.
    /// </param>
    /// <param name="_vendTable">
    /// A <c>VendTable</c> table buffer.
    /// </param>
    public static void updateInvoiceAccountForContractorChange(
        AgreementHeaderRecId    _purchAgreementHeaderRecId,
        VendTable               _vendTable)
    {
        PurchAgreementHeaderDefault purchAgreementHeaderDefault;

        if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        {
            purchAgreementHeaderDefault = PurchAgreementHeaderDefault::findPurchAgreementHeader(_purchAgreementHeaderRecId, true);

            if (purchAgreementHeaderDefault != null)
            {
                ttsBegin;

                if (!_vendTable.InvoiceAccount)
                {
                    purchAgreementHeaderDefault.VendorInvoiceAccount = _vendTable.AccountNum;
                }
				else
                {
                    purchAgreementHeaderDefault.VendorInvoiceAccount = _vendTable.InvoiceAccount;
                }
                purchAgreementHeaderDefault.VendorInvoiceAccountDataAreaId    = appl.company().dataArea(tableNum(VendTable));
                purchAgreementHeaderDefault.update();

                ttsCommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return new SysTableExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            // [field that needs defaulting,
                //  [fields that the default value depends on]]

            [fieldNum(PurchAgreementHeaderDefault, BuyerGroupDataAreaId),
                [fieldNum(PurchAgreementHeaderDefault, BuyerGroup)]],

            [fieldNum(PurchAgreementHeaderDefault, MethodOfPaymentDataAreaId),
                [fieldNum(PurchAgreementHeaderDefault, MethodOfPayment)]],

            [fieldNum(PurchAgreementHeaderDefault, PaymentSpecificationDataAreaId),
                [fieldNum(PurchAgreementHeaderDefault, PaymentSpecification)]],

            [fieldNum(PurchAgreementHeaderDefault, PurchasePoolDataAreaId),
                [fieldNum(PurchAgreementHeaderDefault, PurchasePool)]],

            [fieldNum(PurchAgreementHeaderDefault, VendBankAccountDataAreaId_PSN),
                [fieldNum(PurchAgreementHeaderDefault, VendBankAccountID_PSN)]],

            [fieldNum(PurchAgreementHeaderDefault, VendAccount_PSN),
                [fieldNum(PurchAgreementHeaderDefault, VendBankAccountID_PSN)]],

            [fieldNum(PurchAgreementHeaderDefault, VendorInvoiceAccountDataAreaId),
                [fieldNum(PurchAgreementHeaderDefault, VendorInvoiceAccount)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchAgreementHeaderDefault, BuyerGroupDataAreaId):
                this.BuyerGroupDataAreaId = this.BuyerGroup && !this.BuyerGroupDataAreaId ? curExt() : this.BuyerGroupDataAreaId;
                break;

            case fieldNum(PurchAgreementHeaderDefault, MethodOfPaymentDataAreaId):
                this.MethodOfPaymentDataAreaId = this.MethodOfPayment && !this.MethodOfPaymentDataAreaId ? curExt() : this.MethodOfPaymentDataAreaId;
                break;

            case fieldNum(PurchAgreementHeaderDefault, PaymentSpecificationDataAreaId):
                this.PaymentSpecificationDataAreaId = this.PaymentSpecification && !this.PaymentSpecificationDataAreaId ? curExt() : this.PaymentSpecificationDataAreaId;
                break;

            case fieldNum(PurchAgreementHeaderDefault, PurchasePoolDataAreaId):
                this.PurchasePoolDataAreaId = this.PurchasePool && !this.PurchasePoolDataAreaId ? curExt() : this.PurchasePoolDataAreaId;
                break;

            case fieldNum(PurchAgreementHeaderDefault, VendBankAccountDataAreaId_PSN):
                this.VendBankAccountDataAreaId_PSN = this.VendBankAccountID_PSN && !this.VendBankAccountDataAreaId_PSN ? curExt() : this.VendBankAccountDataAreaID_PSN;
                break;

            case fieldNum(PurchAgreementHeaderDefault, VendAccount_PSN):
                if (this.isFieldSet(fieldNum(PurchAgreementHeaderDefault, VendBankAccountID_PSN)))
                {
                    this.VendAccount_PSN = this.VendorInvoiceAccount ? this.VendorInvoiceAccount : this.purchAgreementHeader().VendAccount;
                }
                break;

            case fieldNum(PurchAgreementHeaderDefault, VendorInvoiceAccountDataAreaId):
                this.VendorInvoiceAccountDataAreaId = this.VendorInvoiceAccount && !this.VendorInvoiceAccountDataAreaId ? curExt() : this.VendorInvoiceAccountDataAreaId;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the referenced <c>PurchAgreementHeader</c> record.
    /// </summary>
    /// <param name = "_forUpdate">A boolean value indicating whether the record must be selected for update.</param>
    /// <returns>The referenced <c>PurchAgreementHeader</c> record.</returns>
    public PurchAgreementHeader purchAgreementHeader(boolean _forUpdate = false)
    {
        PurchAgreementHeader purchAgreementHeader;

        if (this.PurchaseAgreementHeader)
        {
            purchAgreementHeader.selectForUpdate(_forUpdate);

            select firstonly purchAgreementHeader
                where purchAgreementHeader.RecId == this.PurchaseAgreementHeader;
        }

        return purchAgreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchAgreementHeaderDefault, MethodOfPayment):
                if (CFMParameters::isPaymentRequestsEnabled() && !CFMAgreementPaymentOrder::isMethodOfPaymentRu(this, this.MethodOfPayment))
                {
                    warning("@CashFlowManagement:PaymentOrderRequisitesWillBeCleared");
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (ret
            && VendBankAccountChangeProposalFeature::instance().isEnabled()
            && VendBankAccount::validateIsDraft(this.VendAccount_PSN, this.VendBankAccountID_PSN, this.VendBankAccountDataAreaID_PSN))
        {
            ret = checkFailed(strFmt("@AccountsPayable:VendBankAccountValidateIsDraftError", this.VendBankAccountID_PSN));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>needCheckCLMIntegrationFields</Name>
				<Source><![CDATA[
    private boolean needCheckCLMIntegrationFields()
    {
        return this.RecId && this.IsIntegration != PurchAgreementIntegrationType::CLM
            && CLMIntegrationFeature::isEnabled()
            && PurchAgreementHeader::find(this.PurchaseAgreementHeader).CLMIntegrationPurchAgreementOwnership == CLMIntegrationPurchaseAgreementOwnershipType::CLM;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeBlanketOrder</ConfigurationKey>
	<DeveloperDocumentation>@SYS325271</DeveloperDocumentation>
	<Label>@SYS190141</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>PurchaseAgreementHeader</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PurchAgreementHeaderIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchaseAgreementHeader</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountID_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchaseAgreementHeader</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReleasePurchOrderDefaultingPolicy</Name>
			<Label>@SYS190141</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BuyerGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyerGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorInvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorInvoiceAccountDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasePool</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasePoolDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MethodOfPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MethodOfPaymentDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentSpecification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentSpecificationDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountID_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountDataAreaID_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BuyerGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemBuyerGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BuyerGroupDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MethodOfPayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymMode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MethodOfPaymentDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymentSpecification</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymentSpecificationDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchaseAgreementHeader</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementHeaderRecId</ExtendedDataType>
			<Label>@SYS190134</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchasePool</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchPoolId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchasePoolDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount_PSN</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendBankAccountDataAreaID_PSN</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendBankAccountID_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>BankAccountID</ExtendedDataType>
			<GroupPrompt>@SPS2095</GroupPrompt>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorInvoiceAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorInvoiceAccountDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsIntegration</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>PurchAgreementIntegrationType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventBuyerGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BuyerGroupDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BuyerGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultVendorInvoiceAccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorInvoiceAccountDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorInvoiceAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchPoolIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchasePoolDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchasePool</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendPaymModeTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MethodOfPaymentDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MethodOfPayment</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendPaymModeSpecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymentSpecificationDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PaymentSpecification</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MethodOfPayment</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchAgreementHeaderIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchaseAgreementHeader</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventBuyerGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventBuyerGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventBuyerGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventBuyerGroup_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyerGroupDataAreaId</Name>
					<Field>BuyerGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyerGroup</Name>
					<SourceEDT>ItemBuyerGroupId</SourceEDT>
					<Field>BuyerGroup</Field>
					<RelatedField>Group</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchaseAgreementHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchAgreementHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchAgreementHeader</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchAgreementHeader_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchaseAgreementHeader</Name>
					<Field>PurchaseAgreementHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchPool</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchPool</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchPool</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchPool_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchasePoolDataAreaId</Name>
					<Field>PurchasePoolDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchasePool</Name>
					<SourceEDT>PurchPoolId</SourceEDT>
					<Field>PurchasePool</Field>
					<RelatedField>PurchPoolId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchPoolIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendBankAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendBankAccount</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendBankAccount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchAgreementHeaderDefault</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendBankAccountDataAreaID_PSN</Name>
					<Field>VendBankAccountDataAreaID_PSN</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendBankAccountID_PSN</Name>
					<Field>VendBankAccountID_PSN</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount_PSN</Name>
					<Field>VendAccount_PSN</Field>
					<RelatedField>VendAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorInvoiceAccountDataAreaId</Name>
					<Field>VendorInvoiceAccountDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorInvoiceAccount</Name>
					<SourceEDT>VendInvoiceAccount</SourceEDT>
					<Field>VendorInvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPaymMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPaymModeTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendPaymModeTable_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MethodOfPaymentDataAreaId</Name>
					<Field>MethodOfPaymentDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MethodOfPayment</Name>
					<SourceEDT>VendPaymMode</SourceEDT>
					<Field>MethodOfPayment</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPaymModeSpec</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendPaymModeSpec_PurchAgreementHeaderDefault</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymentSpecificationDataAreaId</Name>
					<Field>PaymentSpecificationDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymentSpecification</Name>
					<Field>PaymentSpecification</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MethodOfPayment</Name>
					<Field>MethodOfPayment</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymSpecIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>