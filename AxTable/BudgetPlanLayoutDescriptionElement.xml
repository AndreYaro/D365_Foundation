<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanLayoutDescriptionElement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanLayoutDescriptionElement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existsByLayoutFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>BudgetPlanLayoutDescriptionElement</c> table.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId">
    /// The record ID of a <c>BudgetPlanLayout</c> record.
    /// </param>
    /// <param name="_fieldName">
    /// The value of the field name.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean existsByLayoutFieldName(
        BudgetPlanLayoutRecId  _budgetPlanLayoutRecId,
        FieldName              _fieldName)
    {
        BudgetPlanLayoutDescriptionElement budgetPlanLayoutDescriptionElement;

        select firstOnly RecId from budgetPlanLayoutDescriptionElement
            where budgetPlanLayoutDescriptionElement.Layout == _budgetPlanLayoutRecId
                && budgetPlanLayoutDescriptionElement.FieldName == _fieldName;

        return budgetPlanLayoutDescriptionElement.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAddFieldInAvailableFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the field is allowed to add in the available field list of the layout description panel.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId">
    /// The record ID of a <c>BudgetPlanLayout</c> record.
    /// </param>
    /// <param name="_fieldName">
    /// The value of the field name.
    /// </param>
    /// <returns>
    /// true if system allows to add the field; otherwise, false.
    /// </returns>
    public static boolean canAddFieldInAvailableFieldList(
        BudgetPlanLayoutRecId  _budgetPlanLayoutRecId,
        FieldName              _fieldName)
    {
        BudgetPlanLayoutDescriptionElement budgetPlanLayoutDescriptionElement;
        budgetPlanLayoutElement          budgetPlanLayoutElement;
        BudgetPlanRow                    budgetPlanRow;

        select firstonly budgetPlanLayoutElement
            where budgetPlanLayoutElement.Layout == _budgetPlanLayoutRecId
            exists join budgetPlanRow
                where budgetPlanRow.RecId == budgetPlanLayoutElement.ElementDefinition
                    && budgetPlanRow.FieldName == _fieldName
                notexists join budgetPlanLayoutDescriptionElement
                    where budgetPlanLayoutDescriptionElement.Layout == _budgetPlanLayoutRecId
                    && budgetPlanLayoutDescriptionElement.FieldName == _fieldName;

        return budgetPlanLayoutElement.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSelectedDimensionHierarchyFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the dimension attribute fields for a specific layout, this happens when the dimension hierarchy linked with the layout updated.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId">
    /// The record ID of a <c>BudgetPlanLayout</c> record.
    /// </param>
    public static void deleteSelectedDimensionHierarchyFields(
        BudgetPlanLayoutRecId  _budgetPlanLayoutRecId)
    {
        BudgetPlanLayoutDescriptionElement budgetPlanLayoutDescriptionElement;

        delete_from budgetPlanLayoutDescriptionElement
            where budgetPlanLayoutDescriptionElement.Layout == _budgetPlanLayoutRecId
                && budgetPlanLayoutDescriptionElement.IsDimensionAttribute == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFieldByLayoutFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a field in a layout.
    /// </summary>
    /// <param name="_budgetPlanLayoutRecId">
    /// The record ID of a <c>BudgetPlanLayout</c> record.
     /// </param>
    /// <param name="_fieldName">
    /// The value of the field name.
    /// </param>
    /// <param name="_isDimensionAttribute">
    /// The Enum value specifies the type of the field; optional.
    /// </param>
    public static void deleteFieldByLayoutFieldName(
        BudgetPlanLayoutRecId  _budgetPlanLayoutRecId,
        FieldName              _fieldName,
        NoYes                  _isDimensionAttribute = NoYes::No)
    {
        BudgetPlanLayoutDescriptionElement budgetPlanLayoutDescriptionElement;

        delete_from budgetPlanLayoutDescriptionElement
            where budgetPlanLayoutDescriptionElement.Layout == _budgetPlanLayoutRecId
                && budgetPlanLayoutDescriptionElement.FieldName == _fieldName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetPlanLayoutDescriptionTableDocumentation</DeveloperDocumentation>
	<Label>@Budget:BudgetPlanLayoutDescription</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Layout</TitleField1>
	<TitleField2>FieldName</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>LayoutFieldNameAK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Layout</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Layout</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
			<ExtendedDataType>BudgetPlanLayoutRecId</ExtendedDataType>
			<Label>@Budget:LayoutDisplayNameSingular</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS16033</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDimensionAttribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LayoutFieldNameAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Layout</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Layout</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanLayout</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Layout</Name>
					<Field>Layout</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>