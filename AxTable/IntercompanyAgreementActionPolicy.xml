<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntercompanyAgreementActionPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class IntercompanyAgreementActionPolicy extends IntercompanyActionPolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromIntercompanyTradingPartner</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>IntercompanyAgreementActionPolicy</c> record from a <c>IntercompanyTradingPartner</c> record.
    /// </summary>
    /// <param name="_intercompanyTradingPartner">
    ///    The <c>IntercompanyTradingPartner</c> record from which to initialize the <c>IntercompanyAgreementActionPolicy</c> record.
    /// </param>
    public void initFromIntercompanyTradingPartner(InterCompanyTradingPartner _interCompanyTradingPartner)
    {
        this.IntercompanyTradingPartner = _interCompanyTradingPartner.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromIntercompanyTradingPartner</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>IntercompanyAgreementActionPolicy</c> table.
    /// </summary>
    /// <param name="_interCompanyTradingPartnerRecID">
    /// The record ID of the <c>IntercompanyTradingPartner</c> record for which to find the
    /// <c>IntercompanyAgreementActionPolicy</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>IntercompanyAgreementActionPolicy</c> table; otherwise, an empty record.
    /// </returns>
    public static IntercompanyAgreementActionPolicy findFromIntercompanyTradingPartner(InterCompanyTradingPartnerRecID _interCompanyTradingPartnerRecID, boolean _forUpdate = false)
    {
        IntercompanyAgreementActionPolicy intercompanyAgreementActionPolicy;

        if (_interCompanyTradingPartnerRecID)
        {
            intercompanyAgreementActionPolicy.selectForUpdate(_forUpdate);
            select firstonly intercompanyAgreementActionPolicy
                where intercompanyAgreementActionPolicy.IntercompanyTradingPartner == _interCompanyTradingPartnerRecID;
        }
        return intercompanyAgreementActionPolicy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeInterCompany</ConfigurationKey>
	<DeveloperDocumentation>@SYS332500</DeveloperDocumentation>
	<FormRef>InterCompanyTradingRelationSetupCustomer</FormRef>
	<Label>@SYS332499</Label>
	<TableGroup>Group</TableGroup>
	<TitleField2>EffectiveOnHoldEdit</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>IntercompanyActionPolicy</Extends>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowValidityPeriodEdit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveOnHoldEdit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Agreement</Name>
			<Label>@SYS332501</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EffectiveOnHoldEdit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowValidityPeriodEdit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowValidityPeriodEdit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntercompanyAllowValidityPeriodEdit</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EffectiveOnHoldEdit</Name>
			<ExtendedDataType>IntercompanyAgreementEffectiveOnHoldEdit</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IntercompanyActionPolicy</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>IntercompanyActionPolicy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>