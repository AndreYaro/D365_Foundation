<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayGroupMember</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayGroupMember extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>groupName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Name groupName()
    {
        return RPayGroupTable::find(this.PayGroup).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the empployee list by groups group type.
    /// </summary>
    /// <returns>
    /// The group type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RPayGroupType groupType()
    {
        return RPayGroupTable::find(this.PayGroup).Type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display boolean hasQuery()
    {
        return RPayGroupTable::find(this.PayGroup).hasQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMember</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void addMember(RPayGroup           _payGroup,
                                        RPayPersonEmplId    _refId,
                                        date                _fromDate = dateNull(),
                                        date                _toDate = dateNull())
    {
        RPayGroupMember rPayGroupMember;
        ;
        try
        {
            ttsbegin;

            rPayGroupMember.clear();
            rPayGroupMember.PayGroup        = _payGroup;
            rPayGroupMember.PersonEmplId    = _refId;

            if (_fromDate != dateNull())
            {
                rPayGroupMember.FromDate = _fromDate;
            }

            if (_toDate != dateNull())
            {
                rPayGroupMember.ToDate = _toDate;
            }

            rPayGroupMember.insert();
            ttscommit;
        }
        catch(Exception::Error)
        {
            ttsabort;
        }
        catch(Exception::Deadlock)
        {
            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteMember</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void deleteMember(RPayGroup            _payGroup,
                                           RPayPersonEmplId     _refId)
    {
        RPayGroupMember rPayGroupMember;
        ;
        ttsbegin;

        delete_from rPayGroupMember
            where rPayGroupMember.PayGroup          == _payGroup
               && rPayGroupMember.PersonEmplId      == _refId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayGroupMember find(RPayGroup             _payGroup,
                                              RPayPersonEmplId      _refId,
                                              boolean               _forupdate = false)
    {
        RPayGroupMember         payGroupMember;
        RPayGroupTable          payGroupTable;
        RHRMPersonnelNumberId   personNum;

        payGroupMember.selectForUpdate(_forupdate);

        select firstonly payGroupMember
            where payGroupMember.PayGroup        == _payGroup
               && payGroupMember.PersonEmplId    == _refId;

        if (payGroupMember)
        {
            return payGroupMember;
        }

        //try to find by person id for groups with type "personal"
        if (RHRMEmplTable::exist(_refId))
        {
            personNum = RHRMEmplTable::find(_refId).personTable().PersonnelNumber;
            select firstonly payGroupMember
                join RecId from payGroupTable
                where payGroupTable.PayGroup == payGroupMember.PayGroup
                   && payGroupTable.Type     == RPayGroupType::Person
                   && payGroupMember.PayGroup        == _payGroup
                   && payGroupMember.PersonEmplId    == personNum;
        }

        return payGroupMember;
    }

]]></Source>
			</Method>
			<Method>
				<Name>memberByGroup</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean memberByGroup(RPayPersonEmplId _refId, RPayGroup _payGroup, date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RPayGroupMember  payGroupMember;

        payGroupMember = RPayGroupMember::find(_payGroup, _refId);

        if (payGroupMember)
            if (((payGroupMember.FromDate <= _date) && payGroupMember.FromDate) || (payGroupMember.FromDate == dateNull()))
                if (((payGroupMember.ToDate >= _date) && payGroupMember.ToDate) || (payGroupMember.ToDate == dateNull()))
                    return true;

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayroll</ConfigurationKey>
	<DeveloperDocumentation>@RUP6067</DeveloperDocumentation>
	<Label>@RUP140</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>PersonEmplId</TitleField1>
	<TitleField2>PayGroup</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>IndxPayGroup</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>IndxPayGroup</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonEmplId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonEmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BaseDate</ExtendedDataType>
			<Label>@RUP141</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PersonEmplId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RPayPersonEmplId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BaseDate</ExtendedDataType>
			<Label>@RUP143</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IndxPayGroup</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PayGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PersonEmplId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RPayGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayGroupTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayGroupMember</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayGroup</Name>
					<SourceEDT>RPayGroup</SourceEDT>
					<Field>PayGroup</Field>
					<RelatedField>PayGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>