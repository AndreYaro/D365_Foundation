<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTmpBulkProductAttributeValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTmpBulkProductAttributeValue extends common
{
    #RetailBulkProductAttributeValue

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>refreshFromCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh temporary bulk product attribute values from the catalog.
    /// </summary>
    /// <param name="_catalogRecId">
    /// Catalog rec id.
    /// </param>
    /// <param name="_categoryHierarchyRecId">
    /// Category hierarchy id filter.
    /// </param>
    /// <param name="_categoryTreeNode">
    /// Category tree node filter.
    /// </param>
    /// <remarks>
    /// RetailTmpCatBulkAttrib is an intermediate table for excel bulk edit.
    /// </remarks>
    public static void refreshFromCatalog(CatalogRefRecId _catalogRecId, RefRecId _categoryHierarchyRecId, RetailCatalogCategoryTreeNode _categoryTreeNode)
    {
        RetailTmpBulkProductAttributeValue::refreshProductAttributeValues(0, _catalogRecId, _categoryHierarchyRecId, _categoryTreeNode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFromInternalOrg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh temporary bulk product attribute values from the internal organization.
    /// </summary>
    /// <param name="_internalOrganizationRecId">
    /// Internal organization record id.
    /// </param>
    /// <remarks>
    /// RetailTmpBulkProductAttributeValue is an intermediate table for excel bulk edit.
    /// </remarks>
    public static void refreshFromInternalOrg(RetailInternalOrgRefRecId _internalOrganizationRecId)
    {
        RetailTmpBulkProductAttributeValue::refreshProductAttributeValues(_internalOrganizationRecId, 0, 0, null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshProductAttributeValues</Name>
				<Source><![CDATA[
    private static void refreshProductAttributeValues(RetailInternalOrgRefRecId _internalOrganizationRecId, CatalogRefRecId _catalogRecId, RefRecId _categoryHierarchyRecId, RetailCatalogCategoryTreeNode _categoryTreeNode)
    {
        ttsbegin;

        RetailTmpCatBulkAttrib::refreshProductAttributesValue(_internalOrganizationRecId, _catalogRecId, _categoryHierarchyRecId, _categoryTreeNode, RetailSharedParameters::find().CatAttriBulkEditMaxRows);

        RetailTmpCatBulkAttrib retailTmpCatBulkAttrib;
        RetailTmpBulkProductAttributeValue retailTmpBulkProductAttributeValue;
        EcoResAttribute ecoResAttribute;
        EcoResAttributeType ecoResAttributeType;
        EcoResProduct ecoResProduct;
        RetailInternalOrganization retailInternalOrganization;
        OMInternalOrganization omInternalOrganization;
        Name emptyName = #Empty;

        retailTmpBulkProductAttributeValue.skipDataMethods(true);

        if (_catalogRecId)
        {
            RetailCatalogId catalogId = Catalog::find(_catalogRecId).CatalogId;

            // Clear temporary bulk product attribute values created from last time
            delete_from retailTmpBulkProductAttributeValue
                where retailTmpBulkProductAttributeValue.CatalogId == catalogId;

            // Insert catalog product attribute values
            insert_recordset retailTmpBulkProductAttributeValue(TmpCatBulkAttrib, CatalogId, CatalogName, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, ValueAsText, AttributeName, AttributeTypeName, DisplayProductNumber, InternalOrgNumber)
            select RecId, catalogId, CatalogName, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, TextValue from retailTmpCatBulkAttrib
                where retailTmpCatBulkAttrib.InternalOrganization == 0 && retailTmpCatBulkAttrib.Catalog == _catalogRecId
                join Name from ecoResAttribute
                    where ecoResAttribute.RecId == retailTmpCatBulkAttrib.Attribute
                join Name from ecoResAttributeType
                    where ecoResAttributeType.RecId == retailTmpCatBulkAttrib.RawAttributeType
                join DisplayProductNumber, emptyName from ecoResProduct
                    where ecoResProduct.RecId == retailTmpCatBulkAttrib.Product;

            // Insert catalog internal organization product attribute values
            insert_recordset retailTmpBulkProductAttributeValue(TmpCatBulkAttrib, CatalogId, CatalogName, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, ValueAsText, AttributeName, AttributeTypeName, DisplayProductNumber, InternalOrgNumber)
            select RecId, catalogId, CatalogName, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, TextValue from retailTmpCatBulkAttrib
                where retailTmpCatBulkAttrib.InternalOrganization != 0 && retailTmpCatBulkAttrib.Catalog == _catalogRecId
                join Name from ecoResAttribute
                    where ecoResAttribute.RecId == retailTmpCatBulkAttrib.Attribute
                join Name from ecoResAttributeType
                    where ecoResAttributeType.RecId == retailTmpCatBulkAttrib.RawAttributeType
                join DisplayProductNumber from ecoResProduct
                    where ecoResProduct.RecId == retailTmpCatBulkAttrib.Product
                join retailInternalOrganization
                    where retailInternalOrganization.RecId == retailTmpCatBulkAttrib.InternalOrganization
                join PartyNumber from omInternalOrganization
                    where omInternalOrganization.RecId == retailInternalOrganization.InternalOrganization;
        }
        else
        {
            // Get internal organization number
            select firstonly retailInternalOrganization
                where retailInternalOrganization.RecId == _internalOrganizationRecId
            join PartyNumber from omInternalOrganization
                where omInternalOrganization.RecId == retailInternalOrganization.InternalOrganization;
            DirPartyName internalOrgNumber = omInternalOrganization.PartyNumber;

            // Clear temporary bulk product attribute values created from last time
            delete_from retailTmpBulkProductAttributeValue
                where retailTmpBulkProductAttributeValue.CatalogId == emptyName
                    && retailTmpBulkProductAttributeValue.InternalOrgNumber == internalOrgNumber;

            // Insert internal organization product attribute values
            insert_recordset retailTmpBulkProductAttributeValue(TmpCatBulkAttrib, CatalogId, InternalOrgNumber, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, ValueAsText, AttributeName, AttributeTypeName, DisplayProductNumber)
            select RecId, emptyName, internalOrgNumber, LanguageId, AttributeProperty, AttributeSourceType, AttributeSourceName, IsRequired, DataType, RichMediaType, TextValue from retailTmpCatBulkAttrib
                where retailTmpCatBulkAttrib.InternalOrganization == _internalOrganizationRecId && retailTmpCatBulkAttrib.Catalog == 0
                join Name from ecoResAttribute
                    where ecoResAttribute.RecId == retailTmpCatBulkAttrib.Attribute
                join Name from ecoResAttributeType
                    where ecoResAttributeType.RecId == retailTmpCatBulkAttrib.RawAttributeType
                join DisplayProductNumber from ecoResProduct
                    where ecoResProduct.RecId == retailTmpCatBulkAttrib.Product;
        }

        // Update product name;
        EcoResProductTranslation ecoResProductTranslation;
        update_recordset retailTmpBulkProductAttributeValue
            setting ProductName = ecoResProductTranslation.Name
            join ecoResProduct
                where ecoResProduct.DisplayProductNumber == retailTmpBulkProductAttributeValue.DisplayProductNumber
            join ecoResProductTranslation
                where ecoResProductTranslation.Product == ecoResProduct.RecId
                    && ecoResProductTranslation.LanguageId == SystemParameters::getSystemLanguageId();

        // Workaround limitation where data entities do not allow empty natural keys.
        update_recordset retailTmpBulkProductAttributeValue
            setting LanguageId = #Empty
            where retailTmpBulkProductAttributeValue.LanguageId == '';

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@SYP5070035</DeveloperDocumentation>
	<Label>@SYP5070034</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>DisplayProductNumber</TitleField1>
	<TitleField2>AttributeName</TitleField2>
	<Modules>SystemAdministration</Modules>
	<ReplacementKey>CatalogIntOrgAttributeProductLanguageIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CatalogId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CatalogId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeTypeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayProductNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalOrgNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueAsText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeProperty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrgNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttributeTypeName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayProductNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatalogId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CatalogName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatalogName</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CatalogId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCatalogId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttributeName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttributeTypeName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResAttributeTypeName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DisplayProductNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductDisplayProductNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>70</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InternalOrgNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DirPartyNumber</ExtendedDataType>
			<StringSize>40</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<StringSize>7</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValueAsText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeValueText</ExtendedDataType>
			<StringSize>1999</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttributeProperty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeValueText</ExtendedDataType>
			<StringSize>1999</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AttributeSourceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailProductAttributeRelationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttributeSourceName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAttributeSourceName</ExtendedDataType>
			<StringSize>2000</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeIsRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DataType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS1201</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>AttributeDataType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RichMediaType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>RetailRichMediaType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TmpCatBulkAttrib</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatalogIntOrgAttributeProductLanguageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CatalogId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InternalOrgNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AttributeName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AttributeTypeName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DisplayProductNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>