<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityAttributeTableField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductEntityAttributeTableField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>EcoResProductEntityAttributeTableField</c> record with the specified rec ID.
    /// </summary>
    /// <param name = "_recId">The rec ID.</param>
    /// <param name = "_selectForUpdate">Value indicating whether the record needs to be selected for update or not.</param>
    /// <returns>The <c>EcoResProductEntityAttributeTableField</c> record with the specified rec ID.</returns>
	public static EcoResProductEntityAttributeTableField find(RecId _recId, boolean _selectForUpdate = false)
    {
        EcoResProductEntityAttributeTableField attributeTableField;

        if (_recId)
        {
            attributeTableField.selectForUpdate(_selectForUpdate);

            select firstonly attributeTableField
                where attributeTableField.RecId == _recId;
        }

        return attributeTableField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTableAndTableFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>EcoResProductEntityAttributeTableField</c> record with the specified table and table field ID.
    /// </summary>
    /// <param name = "_tableId">The table ID.</param>
    /// <param name = "_fieldId">The table field ID.</param>
    /// <param name = "_selectForUpdate">Value indicating whether the record needs to be selected for update or not; optional.</param>
    /// <returns>The <c>EcoResProductEntityAttributeTableField</c> record.</returns>
	public static EcoResProductEntityAttributeTableField findByTableAndTableFieldId(
                                                                TableId _tableId, 
                                                                FieldId _fieldId,
                                                                boolean _selectForUpdate = false)
    {
        EcoResProductEntityAttributeTableField attributeTableField;

        if (_tableId && _fieldId)
        {
            attributeTableField.selectForUpdate(_selectForUpdate);

            select firstonly attributeTableField
                where attributeTableField.ApplicationTableId == _tableId
                    && attributeTableField.ApplicationTableFieldId == _fieldId;
        }

        return attributeTableField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a <c>EcoResProductEntityAttributeTableField</c> record with the specified table and table field ID.
    /// </summary>
    /// <param name = "_tableId">The table ID.</param>
    /// <param name = "_fieldId">The table field ID.</param>
    /// <returns>The inserted <c>EcoResProductEntityAttributeTableField</c> record.</returns>
	public static EcoResProductEntityAttributeTableField insertRecord(TableId _tableId, FieldId _fieldId)
    {
        EcoResProductEntityAttributeTableField attributeTableField;

        ttsbegin;

        attributeTableField.ApplicationTableId = _tableId;
        attributeTableField.ApplicationTableFieldId = _fieldId;
        attributeTableField.ApplicationTableName = tableId2PName(attributeTableField.ApplicationTableId);
        attributeTableField.ApplicationTableFieldName = fieldId2PName(attributeTableField.ApplicationTableId, attributeTableField.ApplicationTableFieldId);

        attributeTableField.insert();

        ttscommit;

        return attributeTableField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTableAndTableFieldNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the table and table field name of the current record.
    /// </summary>
    public void updateTableAndTableFieldNames()
    {
        ttsbegin;

        this.ApplicationTableName = tableId2PName(this.ApplicationTableId);
        this.ApplicationTableFieldName = fieldId2PName(this.ApplicationTableId, this.ApplicationTableFieldId);

        this.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOrCreateRecord</Name>
				<Source><![CDATA[
	/// <summary>
    /// Finds or creates a <c>EcoResProductEntityAttributeTableField</c> record with the specified table and table field ID.
    /// </summary>
    /// <param name = "_tableId">The table ID.</param>
    /// <param name = "_fieldId">The field ID.</param>
    /// <returns>The inserted <c>EcoResProductEntityAttributeTableField</c> record.</returns>
    public static EcoResProductEntityAttributeTableField updateOrCreateRecord(TableId _tableId, FieldId _fieldId)
    {
        ttsbegin;

        EcoResProductEntityAttributeTableField attributeTableField = EcoResProductEntityAttributeTableField::findByTableAndTableFieldId(_tableId, _fieldId, true);
        
        if (!attributeTableField)
        {
            attributeTableField = EcoResProductEntityAttributeTableField::insertRecord(_tableId, _fieldId);
        }
        else
        {
            attributeTableField.updateTableAndTableFieldNames();
        }

        ttscommit;

        return attributeTableField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@SCM:EcoResProductEntityAttributeTableField</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ApplicationTableId</TitleField1>
	<TitleField2>ApplicationTableFieldId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>TableFieldIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableFieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicationTableFieldId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ApplicationTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ApplicationTableFieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApplicationTableName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TableName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApplicationTableFieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TableFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ApplicationTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ApplicationTableFieldId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>