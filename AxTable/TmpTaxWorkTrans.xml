<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpTaxWorkTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpTaxWorkTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustTaxInCostPrice</Name>
				<Source><![CDATA[
    void adjustTaxInCostPrice()
    {
        TaxData taxData;
        // <GIN>
        TaxType_IN  taxType;
        TaxOnItem   taxOnItem;
        Percent     loiPercent;
        Percent     nonRecPercent;
        NoYes       compositeSchemeEnabled;
        #ISOCountryRegionCodes
        boolean     countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>

        boolean isConsInvoice = false;
        boolean shouldAdjustTaxInCostPrice = false;
        if (this.HeadingTableId == tableNum(CustConsInvoice_JP) || this.HeadingTableId == tableNum(VendConsInvoice_JP))
        {
            isConsInvoice = true;
            shouldAdjustTaxInCostPrice = true;
        }
        else if (this.SourceRegulateAmountCur)
        {
            shouldAdjustTaxInCostPrice = true;
        }
        if (shouldAdjustTaxInCostPrice
            && (this.TaxDirection == TaxDirection::IncomingTax || this.TaxDirection == TaxDirection::UseTax))
        {
            if (TaxParameters::find().PurchTaxOnOperations)
            {
                this.TaxInCostPriceRegulated = CurrencyExchangeHelper::amount(this.SourceRegulateAmountCur, this.SourceCurrencyCode);
            }
            else
            {
                taxData = TaxData::find(this.TaxCode, this.CalculationDate, 0);
                // <GIN>
                if (TaxParameters::checkTaxParameters_IN())
                {
                    taxType = TaxTable::find(taxData.TaxCode).TaxType_IN;
                    if (taxType != TaxType_IN::None)
                    {
                        if (taxType == TaxType_IN::Customs)
                        {
                            this.TaxInCostPriceRegulated = 0;
                        }
                        else
                        {
                            compositeSchemeEnabled = this.compositeSchemeEnabled();
                            taxOnItem = TaxOnItem::find(this.TaxItemGroup, taxData.TaxCode);
                            loiPercent = taxOnItem.LoadOnInventoryPercent_IN;
                            nonRecPercent = this.getNonRecoverablePercent();

                            this.TaxInCostPriceRegulated = CurrencyExchangeHelper::amount(TaxTable::calcTaxInCostPrice(this.SourceRegulateAmountCur, taxType, compositeSchemeEnabled, loiPercent, nonRecPercent));
                        }
                    }
                    else
                    {
                        this.TaxInCostPriceRegulated = CurrencyExchangeHelper::amount(this.SourceRegulateAmountCur * taxData.vatExemptPct / 100, this.SourceCurrencyCode);
                    }
                }
                else
                {
                    // </GIN>

                    // <GBR>
                    if (BrazilParameters::isEnabled() && this.fiscalValue_BR == TaxFiscalValue_BR::WithoutCreditDebitOther && this.TaxInCostPrice)
                    {
                        taxData.vatExemptPct = 100;
                    }
                    // </GBR>

                    TaxRegulationAmountCur sourceRegulateAmountCur;
                    if (isConsInvoice)
                    {
                        sourceRegulateAmountCur = this.ConsolidateSourceRegulateAmountCur_JP;
                    }
                    else
                    {
                        sourceRegulateAmountCur = this.SourceRegulateAmountCur;
                    }

                    TaxTable taxTable = TaxTable::find(this.TaxCode);
                    this.TaxInCostPriceRegulated = taxTable.calcTaxInCostPriceWithRounding(sourceRegulateAmountCur, taxData.VATExemptPct, this.SourceCurrencyCode);
                    
                    if (isConsInvoice)
                    {
                        this.TaxInCostPriceRegulated = this.TaxInCostPriceRegulated - this.ConsolidateTaxIncostPricePosted_JP;
                    }
                    // <GIN>
                }
                // </GIN>
            }
        }
        else
        {
            this.TaxInCostPriceRegulated = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReversePercentForGTA_IN</Name>
				<Source><![CDATA[
    public boolean checkReversePercentForGTA_IN()
    {
        boolean             ret;
        LedgerJournalTrans  ledgerJournalTrans;

        // If GTA then Reverse % should be 100%.
        if (this.SourceTableId == tablenum(ledgerjournaltrans))
        {
            ledgerJournalTrans = LedgerJournalTrans::findRecId(this.SourceRecId, false);
            if (ledgerJournalTrans.RecId)
            {
                ret = ledgerJournalTrans.validateGTA_ForeignVendor_IN();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>compositeSchemeEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets composite scheme due to <c>tmpTaxWorkTrans</c>
    /// </summary>
    /// <returns>
    /// Composite scheme staus
    /// </returns>
    public NoYes compositeSchemeEnabled()
    {
        return VendTable::compositionSchemeEnabled(this.SourceTableId, this.SourceRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCustomsAssessableValue_IN</Name>
				<Source><![CDATA[
    display CustomsAmount_IN displayCustomsAssessableValue_IN()
    {
        CustomsAmount_IN amount;
        TableId          sourceTableId;

        if (TaxTable::find(this.TaxCode).TaxType_IN == TaxType_IN::Customs)
        {
            if (this.SourceTableId)
            {
                sourceTableId = this.SourceTableId;
            }
            else
            {
                switch (this.Source)
                {
                    case TaxModuleType::Purch,
                        TaxModuleType::PurchInvoice :
                        sourceTableId = tableNum(PurchLine);
                        break;
                    case TaxModuleType::Sales,
                        TaxModuleType::SalesInvoice,
                         TaxModuleType::CustCollectionLetter,
                         TaxModuleType::CustInterestNote,
                         TaxModuleType::FreeTxtInvoice :
                        sourceTableId = tableNum(SalesLine);
                        break;
                }
            }

            amount =  CurrencyHelper_IN::customsMSTAmount_IN(this.SourceBaseAmountCur,
                                                    this.SourceCurrencyCode,
                                                    CurrencyHelper_IN::sourceTable2CustomsDirection_New_IN(sourceTableId, this.SourceRecId),
                                                    this.TransDate);
        }
        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exemptCode</Name>
				<Source><![CDATA[
    display TaxExemptCode exemptCode()
    {
        return TaxGroupData::find(this.TaxGroup, this.TaxCode).TaxExemptCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find_IN</Name>
				<Source><![CDATA[
    public TmpTaxWorkTrans find_IN(
        TaxCode          _taxCode,
        InventTransId    _inventTransId,
        boolean          _forUpdate = false)
    {
        TmpTaxWorkTrans taxWorkTrans;

        if (_taxCode && _inventTransId)
        {
            taxWorkTrans.selectForUpdate(_forUpdate);

            select firstonly TaxAmount from taxWorkTrans
                where taxWorkTrans.TaxCode       == _taxCode
                   && taxWorkTrans.InventTransId == _inventTransId;
        }
        return taxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNonRecoverablePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets nonrecoverable percentage for India VAT
    /// </summary>
    /// <returns>
    /// Nonrecoverable percentage
    /// </returns>
    public Percent getNonRecoverablePercent()
    {
        TransTaxInformation  transTaxInformationLoc;

        transTaxInformationLoc = TransTaxInformationHelper::findOrCreateTransTaxInformation(this.SourceTableId, this.SourceRecId);
        return transTaxInformationLoc.VATNonRecoverablePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxBaseAmountRegulatedMST_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the regulated tax base amount converted to the company s currency code
    /// </summary>
    /// <returns>
    /// If the tax trans currency code is the same of the company s currency code, then, the raw value of SourceBaseAmountCurRegulated will be returned.
    /// Otherwise, the SourceBaseAmountCurRegulated converted value will be returned.
    /// </returns>
    public TaxAmountCur getTaxBaseAmountRegulatedMST_BR()
    {
        if (this.taxBaseAmountHasBeenAdjusted_BR())
        {
            if (this.SourceCurrencyCode != CompanyInfoHelper::standardCurrency())
            {
                return CurrencyExchangeHelper::mstAmount(this.SourceBaseAmountCurRegulated, this.SourceCurrencyCode, this.TransDate);
            }
            else
            {
                return this.SourceBaseAmountCurRegulated;
            }
        }
        else
        {
            return this.TaxBaseAmount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method initializes the current <c>TmpTaxWorkTrans</c> record with
    ///    the <c>TaxTrans</c> record passed in.
    /// </summary>
    /// <param name="_taxTrans">
    ///    TaxUncommitted record to copy data from.
    /// </param>
    public void initFromTaxTrans(TaxTrans _taxTrans)
    {
        #ISOCountryRegionCodes
        // <GEEPL>
        TaxTrans_W taxTrans_W;
        // </GEEPL>

        // <GEEPL>
        if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(TaxTrans_W)))
        {
            taxTrans_W = _taxTrans.taxTrans_W();
        }
        // </GEEPL>

        this.SourceTableId                      = _taxTrans.SourceTableId;
        this.SourceRecId                        = _taxTrans.SourceRecId;
        this.Source                             = _taxTrans.Source;
        this.TransDate                          = _taxTrans.TransDate;
        this.Voucher                            = _taxTrans.Voucher;
        this.InventTransId                      = _taxTrans.InventTransId;
        this.TaxCode                            = _taxTrans.TaxCode;
        this.TaxGroup                           = _taxTrans.TaxGroup;
        this.TaxItemGroup                       = _taxTrans.TaxItemGroup;
        this.TaxBaseAmount                      = _taxTrans.TaxBaseAmount;
        this.TaxBaseAmountCur                   = _taxTrans.TaxBaseAmountCur;
        this.TaxBaseAmountRep                   = _taxTrans.TaxBaseAmountRep;
        this.SourceBaseAmountCur                = _taxTrans.SourceBaseAmountCur;
        this.TaxBaseQty                         = _taxTrans.TaxBaseQty;
        this.TaxAmount                          = _taxTrans.TaxAmount;
        this.TaxAmountCur                       = _taxTrans.TaxAmountCur;
        this.TaxAmountRep                       = _taxTrans.TaxAmountRep;
        this.SourceTaxAmountCur                 = _taxTrans.SourceTaxAmountCur;
        this.TaxInCostPrice                     = _taxTrans.TaxInCostPrice;
        this.TaxInCostPriceMST                  = _taxTrans.TaxInCostPriceMST;
        this.TaxInCostPriceCur                  = _taxTrans.TaxInCostPriceCur;
        this.TaxInCostPriceRep                  = _taxTrans.TaxInCostPriceRep;
        this.CurrencyCode                       = _taxTrans.CurrencyCode;
        this.SourceCurrencyCode                 = _taxTrans.SourceCurrencyCode;
        this.TaxDirection                       = _taxTrans.TaxDirection;
        this.HeadingTableId                     = _taxTrans.HeadingTableId;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCA]))
        {
            this.gsthstTaxType_CA               = _taxTrans.gsthstTaxType_CA;
        }

        this.UnrealizedTax                      = _taxTrans.UnrealizedTax;
        this.ExemptTax                          = _taxTrans.ExemptTax;
        this.TaxAutogenerated                   = _taxTrans.TaxAutogenerated;
        this.SourceRegulateAmountCur            = _taxTrans.SourceRegulateAmountCur;
        this.TaxInCostPriceRegulated            = _taxTrans.TaxInCostPriceRegulated;
        this.euroTriangulation                  = _taxTrans.euroTriangulation;
        this.TaxOrigin                          = _taxTrans.TaxOrigin;
        this.IsOverUnderPayment                 = _taxTrans.IsOverUnderPayment;
        this.SourceBaseAmountCurRegulated       = _taxTrans.SourceBaseAmountCurRegulated;
        this.EmptyTaxBaseForOutgoingTax_W       = _taxTrans.EmptyTaxBaseForOutgoingTax_W;
        this.SourceDocumentLine                 = _taxTrans.SourceDocumentLine;
        this.OriginalTaxTrans                   = _taxTrans.RecId;
        this.ReverseCharge_W                    = _taxTrans.ReverseCharge_W;
        this.Reason                             = _taxTrans.Reason;
        this.ReasonComment                      = _taxTrans.ReasonComment;
        this.TaxId                              = _taxTrans.TaxID;
        this.PartyTaxId                         = _taxTrans.PartyTaxId;
        this.TaxValue                           = _taxTrans.TaxValue;
        this.ISVFeatureSetupGuid                = _taxTrans.ISVFeatureSetupGuid;
        this.ISVFeatureSetupName                = _taxTrans.ISVFeatureSetupName;

        if (VendParameters::find().IntracomVAT)
        {
            this.IntracomVAT               = _taxTrans.IntracomVAT;
        }

        //<GTH>
        if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
        {
            this.TaxUnrealizedRefRecId = _taxTrans.taxTransExtensionTH().TaxUnrealizedRefRecId;
        }
        //</GTH>
        // <GEEU>
        this.VatDueDate_W                       = taxTrans_W.VatDueDate_W;
        // </GEEU>

        // <GEEPL>
        this.CustVendName_PL                    = taxTrans_W.CustVendName_PL;
        this.Addressing_PL                      = taxTrans_W.Addressing_PL;
        this.vatNum_PL                          = taxTrans_W.vatNum_PL;
        this.TaxPeriodPaymentCode_PL            = taxTrans_W.TaxPeriodPaymentCode_PL;
        this.DocumentDate_PL                    = taxTrans_W.DocumentDate_PL;
        // </GEEPL>

        if (EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled()
            && EInvoiceCFDIParameters_MX::find().CFDIVersion >= EInvoiceCFDIVersion_MX::V4)
        {
            this.TaxType_MX = _taxTrans.TaxType_MX;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTmpTaxWorkTransFromTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <c>TmpTaxWorkTrans</c> from <c>TaxUncommitted</c>.
    /// </summary>
    /// <param name = "_tableId">The recid of the buffer for heading Table id.</param>
    /// <param name = "_recId">The recid of the buffer for heading recid.</param>
    /// <returns>The buffer of <c>TmpTaxWorkTrans</c>.</returns>
    [Hookable(false)]
    public static TmpTaxWorkTrans loadTmpTaxWorkTransFromTaxUncommitted(TableId _tableId, RecId _recId)
    {
        TmpTaxWorkTrans taxWorkTrans;
        taxWorkTrans.loadFromTaxUncommitted(_tableId, _recId);

        return taxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTmpTaxWorkTransFromTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize <c>TmpTaxWorkTrans</c> from <c>TaxUncommitted</c>
    /// </summary>
    /// <param name = "_sourceDocumentHeaderRecId">The buffer of sourcedocumentHeader recid</param>
    /// <returns>The buffer of <c>TmpTaxWorkTrans</c></returns>
    [Hookable(false)]
    public static TmpTaxWorkTrans loadTmpTaxWorkTransFromTaxTrans(RecId _sourceDocumentHeaderRecId)
    {
        TmpTaxWorkTrans taxWorkTrans;
        taxWorkTrans.loadFromTaxTrans(_sourceDocumentHeaderRecId);

        return taxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current <c>TmpTaxWorkTrans</c> record with the <c>TaxUncommitted</c> record passed
    /// in.
    /// </summary>
    /// <param name="_taxUncommitted">
    /// The <c>TaxUncommitted</c> record to copy data from.
    /// </param>
    /// <returns>
    /// The two records exchange rates stored in the <c>TaxUncommitted</c> record.
    /// </returns>
    public container initFromTaxUncommitted(TaxUncommitted _taxUncommitted)
    {
        // <GIN><GEERU>
        #ISOCountryRegionCodes
        // </GEERU></GIN>
        this.Company = _taxUncommitted.Company;
        this.Voucher = _taxUncommitted.Voucher;
        this.TransDate = _taxUncommitted.TransDate;
        this.SourceCurrencyCode = _taxUncommitted.SourceCurrencyCode;
        this.TaxCode = _taxUncommitted.TaxCode;
        this.Txt = _taxUncommitted.Txt;
        this.SourceTableId = _taxUncommitted.SourceTableId;
        this.TaxDirection = _taxUncommitted.TaxDirection;
        this.ExemptTax = _taxUncommitted.ExemptTax;
        this.TaxReports = _taxUncommitted.TaxReports;
        this.TaxAmount = _taxUncommitted.TaxAmount;
        this.TaxBaseQty = _taxUncommitted.TaxBaseQty;
        this.TaxBaseAmount = _taxUncommitted.TaxBaseAmount;
        this.Source = _taxUncommitted.Source;
        this.TaxOrigin = _taxUncommitted.TaxOrigin;
        this.IsOverUnderPayment = _taxUncommitted.IsOverUnderPayment;
        this.InvoiceRecId = _taxUncommitted.InvoiceRecId;
        this.InventTransId = _taxUncommitted.InventTransId;
        this.HeadingRecId = _taxUncommitted.HeadingRecId;
        this.SourceRecId = _taxUncommitted.SourceRecId;
        this.TaxBaseAmountCur = _taxUncommitted.TaxBaseAmountCur;
        this.TaxBaseAmountRep = _taxUncommitted.TaxBaseAmountRep;
        this.SourceTaxAmountCur = _taxUncommitted.SourceTaxAmountCur;
        this.TaxAmountCur = _taxUncommitted.TaxAmountCur;
        this.TaxAmountRep = _taxUncommitted.TaxAmountRep;
        this.CurrencyCode = _taxUncommitted.CurrencyCode;
        this.SourceBaseAmountCur = _taxUncommitted.SourceBaseAmountCur;
        this.SourceBaseAmountCurCalculated = _taxUncommitted.SourceBaseAmountCurCalculated;
        this.TaxInCostPrice = _taxUncommitted.TaxInCostPrice;
        this.TaxAutogenerated = _taxUncommitted.TaxAutogenerated;
        this.SourceRegulateAmountCur = _taxUncommitted.SourceRegulateAmountCur;
        this.TaxInCostPriceRegulated = _taxUncommitted.TaxInCostPriceRegulated;
        this.euroTriangulation = _taxUncommitted.euroTriangulation;
        this.CalculationDate = _taxUncommitted.CalculationDate;
        this.NegativeTax = _taxUncommitted.NegativeTax;
        this.TaxInCostPriceCur = _taxUncommitted.TaxInCostPriceCur;
        this.TaxInCostPriceRep = _taxUncommitted.TaxInCostPriceRep;
        this.TaxInCostPriceMST = _taxUncommitted.TaxInCostPriceMST;
        this.SourceBaseAmountCurRegulated = _taxUncommitted.SourceBaseAmountCurRegulated;
        this.ManualInsertedTax = _taxUncommitted.ManualInsertedTax;
        this.TaxItemGroup = _taxUncommitted.TaxItemGroup;
        this.TaxGroup = _taxUncommitted.TaxGroup;
        this.IntracomVAT = _taxUncommitted.IntracomVAT;
        this.TaxLimitReached = _taxUncommitted.TaxLimitReached;
        this.EmptyTaxBaseForOutgoingTax_W = _taxUncommitted.EmptyTaxBaseForOutgoingTax_W;
        this.OperationPostingType = _taxUncommitted.OperationPostingType;
        this.InvoiceId = _taxUncommitted.InvoiceId;
        this.SourceTaxAmountCurReal = _taxUncommitted.SourceTaxAmountCurReal;
        this.TaxCodeCombinationId = _taxUncommitted.TaxCodeCombinationId;
        this.Prepayment = _taxUncommitted.Prepayment;
        this.SourceBaseAmountCurRaw = _taxUncommitted.SourceBaseAmountCurRaw;
        this.TaxBaseAmountRaw = _taxUncommitted.TaxBaseAmountRaw;
        this.IsOffset = _taxUncommitted.IsOffset;
        this.HeadingTableId = _taxUncommitted.HeadingTableId;
        this.Warning = _taxUncommitted.Warning;
        this.IsDeleted = _taxUncommitted.IsDeleted;
        this.gsthstTaxType_CA = _taxUncommitted.gsthstTaxType_CA;
        this.UnrealizedTax = _taxUncommitted.UnrealizedTax;
        this.ReverseCharge_W = _taxUncommitted.ReverseCharge_W;
        this.Reason = _taxUncommitted.Reason;
        this.ReasonComment = _taxUncommitted.ReasonComment;
        this.TaxValue = _taxUncommitted.showTaxValue();
        this.TaxId = _taxUncommitted.TaxID;
        this.PartyTaxId = _taxUncommitted.PartyTaxId;
        this.ISVFeatureSetupGuid = _taxUncommitted.ISVFeatureSetupGuid;
        this.ISVFeatureSetupName = _taxUncommitted.ISVFeatureSetupName;

        this.ExchRate = _taxUncommitted.ExchRate;
        this.ReportingCurrencyExchRate = _taxUncommitted.ReportingCurrencyExchRate;

        this.LedgerDimension = _taxUncommitted.LedgerDimension;
        this.OperationLedgerDimension = _taxUncommitted.OperationLedgerDimension;
        this.TaxOffsetUseTaxLedgerDimension = _taxUncommitted.TaxOffsetUseTaxLedgerDimension;

        this.SourceDocumentLine = _taxUncommitted.SourceDocumentLine;

        //<GTH>
        if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
        {
            this.TaxUnrealizedRefRecId = TaxUncommittedExtensionTH::findByTaxUncommittedRecId(_taxUncommitted.RecId).TaxUnrealizedRefRecId;
        }
        //</GTH>
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.vatTaxAgentVendAccount_RU  = _taxUncommitted.vatTaxAgentVendAccount_RU;
            this.vatOperationCode_RU        = _taxUncommitted.vatOperationCode_RU;
            this.PostingProfile_RU          = _taxUncommitted.PostingProfile_RU;
            this.InventProfileType_RU       = _taxUncommitted.InventProfileType_RU;
            this.OffsetLedgerDimension_RU   = _taxUncommitted.OffsetLedgerDimension_RU;
            this.WithoutTaxTrans_RU         = _taxUncommitted.WithoutTaxTrans_RU;
        }
        // </GEERU>
        // <GIN>
        if (TaxParameters::checkTaxParameters_IN())
        {
            this.LedgerDimension_IN = _taxUncommitted.LedgerDimension_IN;
            this.LedgerDimensionRev_IN = _taxUncommitted.LedgerDimensionRev_IN;
            TmpTaxWorkTrans::initFromTaxUncommitted_IN(_taxUncommitted.RecId, this);
        }
        // </GIN>
        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.FiscalValue_BR                     = _taxUncommitted.FiscalValue_BR;
            this.TaxSalesOffsetLedgerDimension_BR   = _taxUncommitted.TaxSalesOffsetLedgerDimension_BR;
            this.TaxType_BR                         = _taxUncommitted.TaxType_BR;
            this.TaxationCode_BR                    = _taxUncommitted.TaxationCode_BR;
            this.TaxationCodeAdj_BR                 = _taxUncommitted.TaxationCodeAdj_BR;
            this.TaxTributarySubstitution           = _taxUncommitted.TaxSubstitution_BR;
            this.IncludedInPrice_BR                 = _taxUncommitted.IncludedInPrice_BR;
            this.TaxReductionPct_BR                 = _taxUncommitted.TaxReductionPct_BR;
            this.SourceExemptBaseAmountMST_BR       = _taxUncommitted.SourceExemptBaseAmountMST_BR;
            this.SourceExemptTaxAmountMST_BR        = _taxUncommitted.SourceExemptTaxAmountMST_BR;
            this.SourceOtherBaseAmountMST_BR        = _taxUncommitted.SourceOtherBaseAmountMST_BR;
            this.SourceOtherTaxAmountMST_BR         = _taxUncommitted.SourceOtherTaxAmountMST_BR;
            this.SourceExemptBaseAmount_BR          = _taxUncommitted.SourceExemptBaseAmount_BR;
            this.SourceOtherBaseAmount_BR           = _taxUncommitted.SourceOtherBaseAmount_BR;
            this.SourceOtherBaseTaxAmount_BR        = _taxUncommitted.SourceOtherBaseTaxAmount_BR;
            this.TaxReceivableLongTerm_BR           = _taxUncommitted.TaxReceivableLongTerm_BR;
            this.TaxationOrigin_BR                  = _taxUncommitted.TaxationOrigin_BR;
            this.TaxBaseAmountOrig                  = _taxUncommitted.TaxBaseAmountOrig;
        }
        // </GBR>

        if (_taxUncommitted.SourceDocumentLine)
        {
            if (TaxCalcPerfFindParentSourceRecIdWithoutSDLFlight::instance().isEnabled())
            {
                // Only the TaxUncommitted on line level charge has parentSourceRecId, so check sourceTableId is MarkupTrans here.
                if (_taxUncommitted.SourceTableId == tableNum(MarkupTrans))
                {
                    if (_taxUncommitted.ParentSourceTableId)
                    {
                        this.ParentSourceTableId = _taxUncommitted.ParentSourceTableId;
                        this.ParentSourceRecId = _taxUncommitted.ParentSourceRecId;
                    }
                    else
                    {
                        // For history taxUncommitted, the parentSourceTableId is 0, need to query from MarkupTrans.
                        MarkupTrans markupTrans;
                        select firstonly TransRecId, TransTableId from markupTrans
                            where markupTrans.RecId == _taxUncommitted.SourceRecId;

                        var dictTable = new DictTable(markupTrans.TransTableId);
                        // Make null check for dictTable, in case that taxUncommited's markupTrans is null or its TransTableId is null
                        if (dictTable && dictTable.makeRecord() is SalesPurchJournalLine)
                        {
                            this.ParentSourceTableId = markupTrans.TransTableId;
                            this.ParentSourceRecId = markupTrans.TransRecId;
                        }
                        else
                        {
                            this.ParentSourceTableId = 0;
                            this.ParentSourceRecId = 0;
                        }
                    }
                }
                else
                {
                    this.ParentSourceTableId = 0;
                    this.ParentSourceRecId = 0;
                }
            }
            else
            {
                SourceDocumentLine topParentSourceDocumentLine = SourceDocumentLine::findTopParentSourceDocumentLine(_taxUncommitted.SourceDocumentLine);
                if (topParentSourceDocumentLine && topParentSourceDocumentLine.SourceRelationType != this.SourceTableId)
                {
                    this.ParentSourceTableId = topParentSourceDocumentLine.SourceRelationType;
                    this.ParentSourceRecId = topParentSourceDocumentLine.getSourceDocumentLineImplementation().RecId;
                }
                else
                {
                    this.ParentSourceTableId = 0;
                    this.ParentSourceRecId = 0;
                }
            }
        }

        // <GMX>
        this.TaxType_MX                 = _taxUncommitted.TaxType_MX;
        // </GMX>
        // <GEECZ>
        this.PostponeVAT                = _taxUncommitted.PostponeVAT;
        // </GEECZ>
        // <GEEU>
        this.VatDueDate_W               = _taxUncommitted.VatDueDate_W;
        if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByTable(_taxUncommitted.HeadingTableId, _taxUncommitted.HeadingRecId))
        {
            RefTableId sourceTableId;
            RefRecId sourceRecId;
            if (_taxUncommitted.SourceTableId == tableNum(LedgerJournalTrans))
            {
                sourceTableId = _taxUncommitted.SourceTableId;
                sourceRecId = _taxUncommitted.SourceRecId;
            }
            else
            {
                sourceTableId = _taxUncommitted.HeadingTableId;
                sourceRecId = _taxUncommitted.HeadingRecId;
            }

            VatDueDate_W vatDueDate = TaxSpecificExchangeRate::getDateOfVATRegister(sourceTableId, sourceRecId);
            if (vatDueDate)
            {
                this.VatDueDate_W = vatDueDate;
            }

            this.ExchangeRateTaxBaseAmount = _taxUncommitted.ExchangeRateTaxBaseAmount;
            this.ExchangeRateTaxAmount = _taxUncommitted.ExchangeRateTaxAmount;
            this.ExchangeRateSourceBaseAmountRegulated = _taxUncommitted.ExchangeRateSourceBaseAmountRegulated;
            this.ExchangeRateSourceRegulateAmount = _taxUncommitted.ExchangeRateSourceRegulateAmount;
            this.SalesTaxExchangeRate = _taxUncommitted.SalesTaxExchangeRate;

            this.ExchangeRateTaxBaseAmountRep = _taxUncommitted.ExchangeRateTaxBaseAmountRep;
            this.ExchangeRateTaxAmountRep = _taxUncommitted.ExchangeRateTaxAmountRep;
            this.SalesTaxExchangeRateRep = _taxUncommitted.SalesTaxExchangeRateRep;

            this.ExchangeRateTaxBaseAmountCur = _taxUncommitted.ExchangeRateTaxBaseAmountCur;
            this.ExchangeRateTaxAmountCur = _taxUncommitted.ExchangeRateTaxAmountCur;
            this.ExchangeRateBaseAmountCurRegulated = _taxUncommitted.ExchangeRateBaseAmountCurRegulated;
            this.ExchangeRateRegulateAmountCur = _taxUncommitted.ExchangeRateRegulateAmountCur;
            this.SalesTaxExchangeRateCur = _taxUncommitted.SalesTaxExchangeRateCur;
        }
        else if (TaxParameters::isBankExchRateEnabled_W())
        {
            this.ExchangeRateTaxBaseAmount              = _taxUncommitted.ExchangeRateTaxBaseAmount;
            this.ExchangeRateTaxAmount                  = _taxUncommitted.ExchangeRateTaxAmount;
            this.ExchangeRateSourceBaseAmountRegulated  = _taxUncommitted.ExchangeRateSourceBaseAmountRegulated;
            this.ExchangeRateSourceRegulateAmount       = _taxUncommitted.ExchangeRateSourceRegulateAmount;

            SalesTaxTransactionExchangeRate salesTaxTransactionExchangeRate;
            if (_taxUncommitted.SourceTableId == tableNum(LedgerJournalTrans))
            {
                salesTaxTransactionExchangeRate = SalesTaxTransactionExchangeRate::findBySourceRecord(_taxUncommitted.SourceTableId, _taxUncommitted.SourceRecId);
            }
            else
            {
                salesTaxTransactionExchangeRate = SalesTaxTransactionExchangeRate::findBySourceRecord(_taxUncommitted.HeadingTableId, _taxUncommitted.HeadingRecId);
            }
            this.SalesTaxExchangeRate = salesTaxTransactionExchangeRate.SalesTaxExchangeRate;
        }
        // </GEEU>
        // <GEEPL>
        this.CustVendName_PL            = _taxUncommitted.CustVendName_PL;
        this.Addressing_PL              = _taxUncommitted.Addressing_PL;
        this.vatNum_PL                  = _taxUncommitted.vatNum_PL;
        this.TaxPeriodPaymentCode_PL    = _taxUncommitted.TaxPeriodPaymentCode_PL;
        this.DocumentDate_PL            = _taxUncommitted.DocumentDate_PL;
        // </GEEPL>

        return [_taxUncommitted.ExchRate, _taxUncommitted.ExchRateSecond];
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert(boolean _ignoreCalculatedSalesTax = false)
    {
        if (this.Company == '')
        {
            this.Company = curext();
        }

        if (this.TaxAutogenerated && !_ignoreCalculatedSalesTax)
        {
            this.SourceRegulateAmountCur = this.SourceTaxAmountCur;
            this.TaxInCostPriceRegulated = this.TaxInCostPrice;
        }

        this.ensureReportingCurrency();

        if (TaxIntegrationAdjustment::isEnabledForTransaction(this.SourceTableId, this.SourceRecId))
        {
            this.setLineNum();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets SourceOrderLineNum and SourceChargeLineNum.
    /// </summary>
    private void setLineNum()
    {
        if (Global::mappingExists(tableNum(SalesPurchJournalLine), this.SourceTableId, fieldNum(SalesPurchJournalLine, LineNum)))
        {
            SalesPurchJournalLine salesPurchJournalLine = SalesPurchJournalLine::findRecId(this.SourceTableId, this.SourceRecId);
            if (salesPurchJournalLine)
            {
                this.SourceOrderLineNum = salesPurchJournalLine.LineNum;
            }
        }

        // If the line is MarkupTrans, the SourceOrderLineNum is the transaction line number.
        if (this.SourceTableId == tableNum(MarkupTrans))
        {
            this.SourceChargeLineNum = this.SourceOrderLineNum;

            MarkupTrans markupTrans = MarkupTrans::findRecId(this.SourceRecId);

            // Transaction line's charge.
            if (markupTrans && markupTrans.TransTableId && markupTrans.TransRecId
                && Global::mappingExists(tableNum(SalesPurchJournalLine), markupTrans.TransTableId, fieldNum(SalesPurchJournalLine, LineNum)))
            {
                this.SourceOrderLineNum = SalesPurchJournalLine::findRecId(markupTrans.TransTableId, markupTrans.TransRecId).LineNum;
            }
            // Transaction header's charge.
            else
            {
                this.SourceOrderLineNum = 0;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReverseChargeApplicable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if reverse charge % is applicable.
    /// </summary>
    /// <returns>
    /// Returns true if reverse charge % is applicable.
    /// </returns>
    public boolean isReverseChargeApplicable_IN()
    {
        boolean  ret;
        TaxTable            taxTableRev = TaxTable::find(this.TaxCode);
        TaxItemGroupHeading taxItemGroupHeadingRev = TaxItemGroupHeading::find(this.TaxItemGroup);

        if (taxTableRev.TaxType_IN == TaxType_IN::ServiceTax
                && taxItemGroupHeadingRev.ServiceTaxBasis_IN == ServiceTaxBasis_IN::POTBasis
                && taxItemGroupHeadingRev.ReverseChargePercentage_IN > 0)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method loads <c>TaxUncommitted</c> records for the given document, replacing
    ///    any records that may already exist.
    /// </summary>
    /// <param name="_sourceDocumentHeaderRecId">
    ///    The <c>RecId</c> of the <c>SourceDocumentHeader</c> of the transaction line tax calculates Taxes for.
    /// </param>
    /// <remarks>
    ///    Consider using the method <c>loadFromTaxTransForSourceLine</c> for better performance.
    /// </remarks>
    void loadFromTaxTrans(RecId _sourceDocumentHeaderRecId)
    {
        TaxTrans                taxTrans;
        SourceDocumentLine      sourceDocumentLine;

        // A values should be provided for the parameter. Not doing so may result in a long running query.
        Debug::assert(_sourceDocumentHeaderRecId != 0);

        taxTrans.allowIndexHint(true);

        while select * from taxTrans
        index hint SourceDocumentLineIdx
        exists join sourceDocumentLine where
            taxTrans.SourceDocumentLine == sourceDocumentLine.RecId &&
            sourceDocumentLine.SourceDocumentHeader == _sourceDocumentHeaderRecId
        {
            this.clear();
            this.initFromTaxTrans(taxTrans);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadTaxTransForSourceDocument</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method loads <c>TaxTrans</c> records for the given document, creating
    ///    any records that exist in <c>TmpTaxWorkTrans</c>.
    /// </summary>
    /// <param name="_headingTableId">
    ///    The <c>tableNum</c> of the line table for which taxes are being loaded. This reduces
    ///    the number of records scanned in the TaxTrans table.
    /// </param>
    /// <param name="_sourceDocumentHeaderRecId">
    ///    The <c>RecId</c> of the <c>SourceDocumentHeader</c> of the transaction line tax calculates Taxes for.
    /// </param>
    /// <remarks>
    ///    Consider adding index hint following the method <c>loadFromTaxTrans</c> if you need to use this method.
    /// </remarks>
    void loadTaxTransForSourceDocument(RefTableId _headingTableId, SourceDocumentHeaderRecId _sourceDocumentHeaderRecId)
    {
        TaxTrans                taxTrans;
        SourceDocumentLine      sourceDocumentLine;

        // Values should be provided for the parameters. Not doing so may result in a long running query.
        Debug::assert(_headingTableId != 0 && _sourceDocumentHeaderRecId != 0);
       
        while select * from taxTrans
            exists join sourceDocumentLine where
                taxTrans.HeadingTableId == _headingTableId &&
                taxTrans.SourceDocumentLine == sourceDocumentLine.RecId &&
                sourceDocumentLine.SourceDocumentHeader == _sourceDocumentHeaderRecId
        {
            this.clear();
            this.initFromTaxTrans(taxTrans);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method loads TaxUncommitted records for the given document, replacing
    ///    any records that may already exist.
    /// </summary>
    /// <param name="_documentTableId">
    ///    TableId of the transaction line tax calculates Taxes for.
    /// </param>
    /// <param name="_documentId">
    ///    The document id of the transaction header.
    /// </param>
    /// <param name="_tax">
    ///    An instance of Tax.
    /// </param>
    void loadFromTaxUncommitted(RefTableId _documentTableId, RefRecId _documentId, Tax _tax = null)
    {
        TaxUncommitted              taxUncommitted;

        delete_from this
        where this.HeadingRecId == _documentId;

        while select * from taxUncommitted
            where taxUncommitted.HeadingRecId == _documentId &&
                    taxUncommitted.HeadingTableId == _documentTableId
        {
            this.clear();
            this.initFromTaxUncommitted(taxUncommitted);

            if (_tax)
            {
                this.insert(_tax.ignoreCalculatedSalesTax());
            }
            else
            {
                this.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromTaxUncommittedForDocumentAndInvo</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method loads the <c>TaxUncommitted</c> records for the given document and replaces any records
    /// that may already exist.
    /// </summary>
    /// <param name="_documentTableId">
    /// The <c>TableId</c> value of the transaction line tax for which taxes are calculated.
    /// </param>
    /// <param name="_documentId">
    /// The document ID of the transaction header.
    /// </param>
    /// <param name="_voucher">
    /// The voucher.
    /// </param>
    /// <param name="_invoiceId">
    /// The invoice ID.
    /// </param>
    void loadFromTaxUncommittedForDocumentAndInvo(RefTableId _documentTableId, RefRecId _documentId, Voucher _voucher, InvoiceId _invoiceId)
    {
        TaxUncommitted              taxUncommitted;
        boolean                     useLastTaxRecords = false;

        delete_from this
        where this.HeadingRecId == _documentId &&
              this.Voucher == _voucher &&
              this.InvoiceId == _invoiceId;
       
        while select * from taxUncommitted
            where taxUncommitted.HeadingRecId == _documentId &&
                  taxUncommitted.HeadingTableId == _documentTableId &&
                  taxUncommitted.Voucher == _voucher &&
                  taxUncommitted.InvoiceId == _invoiceId
        {
            this.clear();
            this.initFromTaxUncommitted(taxUncommitted);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTaxValue</Name>
				<Source><![CDATA[
    display TaxValue showTaxValue()
    {
        TaxValue  taxValue;

        // <GIN>
        SalesPurchJournalLine    salesPurchJournalLine;
        // </GIN>

        LedgerJournalTrans ledgerJournalTrans;
        DataAreaId dataAreaId;

        if (this.TaxValue)
        {
            taxValue = this.TaxValue;
        }
        else
        {
            if (this.SourceTableId == tableNum(LedgerJournalTrans))
            {
                ledgerJournalTrans = LedgerJournalTrans::findRecId(this.SourceRecId, false);
                LedgerJournalTaxDocument ledgerJournalTaxDocumentLoc = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                
                if (LedgerJournalTable::find(ledgerJournalTrans.JournalNum).TaxObligationCompany == TaxObligationCompany::Source)
                {
                    dataAreaId = ledgerJournalTaxDocumentLoc.getSourceCompany();
                }
                else
                {
                    dataAreaId = ledgerJournalTaxDocumentLoc.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }

            }
            dataAreaId = dataAreaId ? dataAreaId : curext();
            changecompany(dataAreaId)
            {
                if (this.TaxCode  && this.TransDate)
                {
                    // <GIN>
                    if (TaxParameters::checkTaxParameters_IN() &&  TaxTable::find(this.TaxCode).TaxType_IN != TaxType_IN::None)
                    {
                        salesPurchJournalLine = Tax::getSalesPurchJournalLine(this.SourceRecId, this.SourceTableId);
                        taxValue = this.showTaxValue_IN(salesPurchJournalLine);
                    }
                    else
                    {
                        // </GIN>
                        taxValue  = TaxData::percent(this.TaxCode,
                                                 this.CalculationDate,
                                                 this.TaxBaseAmount);
                        // <GIN>
                    }
                    // </GIN>
                }
            }
        }
        return taxValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTaxValue_IN</Name>
				<Source><![CDATA[
    public TaxValue showTaxValue_IN(SalesPurchJournalLine  _salesPurchJournalLine)
    {
        return TaxUncommitted_IN::showTaxValue(_salesPurchJournalLine,
                                                this.Source,
                                                this.InventTransId,
                                                this.TaxCode,
                                                this.TaxItemGroup,
                                                this.CalculationDate,
                                                 FormulaDesigner_IN::findPriceInclTax(this.TaxItemGroup) ? this.TaxBaseAmountRaw : this.TaxBaseAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxationCodeAdjusted_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the adjusted taxation code
    /// </summary>
    /// <returns>
    ///     The adjusted taxation code when adjusted, otherwise the calculated taxation code
    /// </returns>

    public display TaxationCode_BR taxationCodeAdjusted_BR()
    {
        if (this.TaxationCodeAdj_BR)
            return this.TaxationCodeAdj_BR;
        else
            return this.TaxationCode_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBaseAmountHasBeenAdjusted_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if the tax base amount has been adjusted.
    /// </summary>
    /// <returns>
    /// True if the tax base amount has been adjusted, false otherwise.
    /// </returns>
    public boolean taxBaseAmountHasBeenAdjusted_BR()
    {
        return this.SourceBaseAmountCurRegulated != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBaseCur_W</Name>
				<Source><![CDATA[
    display TaxBaseCur taxBaseCur_W()
    {
        return this.SourceBaseAmountCurRegulated ?  this.SourceBaseAmountCurRegulated : this.SourceBaseAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxChangeDisplaySign</Name>
				<Source><![CDATA[
    int taxChangeDisplaySign(Map _accountTypeMap)
    {
        // <GEECZ>
        int                     taxDisplaySign;

        #ISOCountryRegionCodes

        if (this.isIntracomVAT())
        {
            taxDisplaySign = 1;
        }
        // </GEECZ>
        // <GBR>
        else if (BrazilParameters::isEnabled() && this.TaxDirection == TaxDirection::TaxExemptSales && this.SourceBaseAmountCur > 0)
        {
            taxDisplaySign = 1;
        }
        // </GBR>
        else if (this.ReverseCharge_W && !Tax::changeSignForReverseCharge(this))
        {
            taxDisplaySign = 1;
        }
        else
        {
            taxDisplaySign = Tax::changeDisplaySign(this.TaxDirection);
        }

        return taxDisplaySign;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionCurrencyTaxAmount</Name>
				<Source><![CDATA[
    display TaxAmountCur transactionCurrencyTaxAmount()
    {
        ;
        if (!this.TaxAutogenerated)
            return this.SourceRegulateAmountCur;
        else
            return this.SourceTaxAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update(boolean _ignoreCalculatedSalesTax = false)
    {
        if (this.TaxAutogenerated && !(_ignoreCalculatedSalesTax && this.TaxDirection == TaxDirection::IncomingTax))
        {
            this.SourceRegulateAmountCur = this.SourceTaxAmountCur;
            this.TaxInCostPriceRegulated = this.TaxInCostPrice;
        }

        this.ensureReportingCurrency();

        if (TaxIntegrationAdjustment::isEnabledForTransaction(this.SourceTableId, this.SourceRecId))
        {
            this.setLineNum();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>zeroOutAllAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets all amounts on the current <c>TmpTaxWorkTrans</c> record to 0.
    /// </summary>
    public void zeroOutAllAmounts()
    {
        this.TaxAmount = 0;
        this.TaxBaseAmount = 0;
        this.TaxBaseAmountCur = 0;
        this.TaxBaseAmountRep = 0;
        this.SourceTaxAmountCur = 0;
        this.TaxAmountCur = 0;
        this.TaxAmountRep = 0;
        this.SourceBaseAmountCur = 0;
        this.TaxInCostPrice = 0;
        this.SourceRegulateAmountCur = 0;
        this.TaxInCostPriceRegulated = 0;
        this.TaxInCostPriceCur = 0;
        this.TaxInCostPriceRep = 0;
        this.TaxInCostPriceMST = 0;
        this.SourceBaseAmountCurRegulated = 0;
        this.SourceTaxAmountCurReal = 0;
        this.SourceBaseAmountCurRaw = 0;
        this.TaxBaseAmountRaw = 0;
        this.SourceBaseAmountCurCalculated = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDEPBAmount_IN</Name>
				<Source><![CDATA[
    public static boolean enableDEPBAmount_IN(
        RefTableId _sourceTableId,
        RefRecId   _sourceRecId)
    {
        PurchLine      purchLineLoc;
        PurchTable     purchTableLoc;
        PurchParmLine  purchParmLineLoc;
        PurchParmTable purchParmTable;
        boolean        ret;

        switch (_sourceTableId)
        {
            case tableNum(PurchLine) :
                purchLineLoc = PurchLine::findRecId(_sourceRecId);
                break;
            case tableNum(PurchParmLine) :
                purchParmLineLoc = PurchParmLine::findRecId(_sourceRecId);
                purchLineLoc = purchParmLineLoc.purchLine();
                break;
            case tableNum(PurchTable) :
                purchTableLoc = PurchTable::findRecId(_sourceRecId);
                purchLineLoc = PurchLine::find(purchTableLoc.PurchId);
                break;
            case tableNum(PurchParmTable) :
                purchParmTable = PurchParmTable::findRecId(_sourceRecId);
                purchLineLoc = PurchLine::find(purchParmTable.PurchId);
                break;
        }

        if (EximParameters_IN::checkEPCGParameters()
            && purchLineLoc
            && EximPurchLine_IN::findByPurchLineRecId(purchLineLoc.RecId).ApplyDEPB)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExcludedIndirectTaxAmountforWHT_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets indirect tax amount to excluded for TDS Calculation in transaction currency.
    /// </summary>
    /// <param name="_tmpTaxWorkTrans">
    /// TmpTaxWorkTrans Table buffer.
    /// </param>
    /// <param name="_sourceTableId">
    /// Source table TableId.
    /// </param>
    /// <param name="_sourceRecId">
    /// Source table RecId.
    /// </param>
    /// <param name="_taxItemGroup">
    /// Source TaxItemGroup.
    /// </param>
    /// <param name="_vendAccountLoc">
    /// Vendor Account.
    /// </param>
    /// <param name="_taxWithholdGroup">
    /// The TaxWithholdGroup attached for the transaction.
    /// </param>
    /// <returns>
    /// Returns totalIndirect taxes excluding customs and GTA vendor ServiceTax.
    /// </returns>
    public static TaxAmountCur getExcludedIndirectTaxAmountforWHT_IN(
                                          TmpTaxWorkTrans   _tmpTaxWorkTrans,
                                          RefTableId        _sourceTableId,
                                          RefRecId          _sourceRecId,
                                          TaxItemGroup      _taxItemGroup,
                                          VendAccount       _vendAccountLoc,
                                          TaxWithholdGroup  _taxWithholdGroup)
    {
        TaxTable                            taxTableLoc;
        AmountCur                           taxWithholdBaseFromIndirectTaxAmountCur;
        Percent                             reverseChargePercent;
        TaxWithholdExcludeIndirectTax_IN    taxWithholdExcludeIndirectTaxIN;
        TaxWithholdGroupHeading             taxWithholdGroupHeading;
        if (_taxWithholdGroup)
        {
            taxWithholdGroupHeading = TaxWithholdGroupHeading::find(_taxWithholdGroup);

            select sum(SourceRegulateAmountCur) from _tmpTaxWorkTrans
                where _tmpTaxWorkTrans.SourceTableId == _sourceTableId
                    && _tmpTaxWorkTrans.SourceRecId   == _sourceRecId
                join RecId from taxTableLoc
                    where taxTableLoc.TaxCode    == _tmpTaxWorkTrans.TaxCode
                        && taxTableLoc.TaxType_IN != TaxType_IN::Customs
                        && taxTableLoc.TaxType_IN != TaxType_IN::ServiceTax
                exists join taxWithholdExcludeIndirectTaxIN
                    where taxWithholdExcludeIndirectTaxIN.TaxWithholdGroupHeading == taxWithholdGroupHeading.RecId
                        && taxWithholdExcludeIndirectTaxIN.TaxType == taxTableLoc.TaxType_IN;

            taxWithholdBaseFromIndirectTaxAmountCur =  abs(_tmpTaxWorkTrans.SourceRegulateAmountCur);

            if (!VendTable::find(_vendAccountLoc).isGTA())
            {
                reverseChargePercent = TaxItemGroupHeading::find(_taxItemGroup).ReverseChargePercentage_IN;

                while select SourceRegulateAmountCur from _tmpTaxWorkTrans
                    where _tmpTaxWorkTrans.SourceTableId == _sourceTableId
                        && _tmpTaxWorkTrans.SourceRecId   == _sourceRecId
                    join RecId from taxTableLoc
                        where taxTableLoc.TaxCode    == _tmpTaxWorkTrans.TaxCode
                            && taxTableLoc.TaxType_IN == TaxType_IN::ServiceTax
                    exists join taxWithholdExcludeIndirectTaxIN
                        where taxWithholdExcludeIndirectTaxIN.TaxWithholdGroupHeading == taxWithholdGroupHeading.RecId
                            && taxWithholdExcludeIndirectTaxIN.TaxType == taxTableLoc.TaxType_IN
                {
                    taxWithholdBaseFromIndirectTaxAmountCur += abs(CurrencyExchangeHelper::amount(_tmpTaxWorkTrans.SourceRegulateAmountCur * (100 - reverseChargePercent) / 100));
                }
            }
        }
        return taxWithholdBaseFromIndirectTaxAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIndirectTaxAmtForWHTSourceBaseCur_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets totalIndirect taxes excluding customs and GTA vendor ServiceTax.
    /// </summary>
    /// <param name="_tmpTaxWorkTrans">
    /// TmpTaxWorkTrans Table buffer.
    /// </param>
    /// <param name="_sourceTableId">
    /// Source table TableId.
    /// </param>
    /// <param name="_sourceRecId">
    /// Source table RecId.
    /// </param>
    /// <param name="_taxItemGroup">
    /// Source TaxItemGroup.
    /// </param>
    /// <param name="_vendAccountLoc">
    /// Vendor Account.
    /// </param>
    /// <param name="_taxWithholdGroup">
    /// The TaxWithholdGroup attached for the transaction.
    /// </param>
    /// <returns>
    /// Returns totalIndirect taxes excluding customs and GTA vendor ServiceTax.
    /// </returns>
    public static TaxAmountCur getIndirectTaxAmtForWHTSourceBaseCur_IN(
        TmpTaxWorkTrans  _tmpTaxWorkTrans,
        RefTableId       _sourceTableId,
        RefRecId         _sourceRecId,
        TaxItemGroup     _taxItemGroup,
        VendAccount      _vendAccountLoc = '',
        TaxWithholdGroup _taxWithholdGroup = '')
    {
        TaxTable                            taxTableLoc;
        AmountCur                           taxWithholdBaseFromIndirectTaxAmountCur;
        FormulaDesigner_IN                  formularDesign;
        Percent                             reverseChargePercent;
        LedgerJournalTrans                  ledgerJournalTrans;
        TaxWithholdExcludeIndirectTax_IN    taxWithholdExcludeIndirectTaxIN;
        TaxWithholdGroupHeading             taxWithholdGroupHeading;

        if (_taxItemGroup)
        {
            // Customs taxes does not hit Vendor, So should not be considered for TaxBase of Withholding taxes.
            // service taxes for GTA vendor does not hit Vendor, So no considere service tax firstly.
            select sum(SourceRegulateAmountCur) from _tmpTaxWorkTrans
                where _tmpTaxWorkTrans.SourceTableId == _sourceTableId
                    && _tmpTaxWorkTrans.SourceRecId   == _sourceRecId
                join RecId from taxTableLoc
                    where taxTableLoc.TaxCode    == _tmpTaxWorkTrans.TaxCode
                        && taxTableLoc.TaxType_IN != TaxType_IN::Customs
                        && taxTableLoc.TaxType_IN != TaxType_IN::ServiceTax
                join RecId from formularDesign
                    where formularDesign.TaxItemGroup == _taxItemGroup
                        && formularDesign.TaxCode == _tmpTaxWorkTrans.TaxCode
                        && formularDesign.PriceInclTax == NoYes::No;

            taxWithholdBaseFromIndirectTaxAmountCur = abs(_tmpTaxWorkTrans.SourceRegulateAmountCur);

            // Service taxes for non - GTA Vendor hits Vendor, So should be considered for TaxBase of Withholding taxes.
            if (!VendTable::find(_vendAccountLoc).isGTA())
            {
                // For reverse charge mechanism, need to deduct the part service provider paid
                reverseChargePercent = TaxItemGroupHeading::find(_taxItemGroup).ReverseChargePercentage_IN;

                while select SourceRegulateAmountCur from _tmpTaxWorkTrans
                    where _tmpTaxWorkTrans.SourceTableId == _sourceTableId
                        && _tmpTaxWorkTrans.SourceRecId   == _sourceRecId
                    join RecId from taxTableLoc
                        where taxTableLoc.TaxCode    == _tmpTaxWorkTrans.TaxCode
                            && taxTableLoc.TaxType_IN == TaxType_IN::ServiceTax
                    join RecId from formularDesign
                        where formularDesign.TaxItemGroup == _taxItemGroup
                            && formularDesign.TaxCode == _tmpTaxWorkTrans.TaxCode
                            && formularDesign.PriceInclTax == NoYes::No
                {
                    taxWithholdBaseFromIndirectTaxAmountCur  += abs(CurrencyExchangeHelper::amount(_tmpTaxWorkTrans.SourceRegulateAmountCur * (100 - reverseChargePercent) / 100));
                }
            }

            if (_sourceTableId == tableNum(LedgerJournalTrans))
            {
                ledgerJournalTrans = LedgerJournalTrans::findRecId(_sourceRecId, false);
            }

            taxWithholdGroupHeading = TaxWithholdGroupHeading::find(_taxWithholdGroup);
            select firstOnly RecId from taxWithholdExcludeIndirectTaxIN
                where taxWithholdExcludeIndirectTaxIN.TaxWithholdGroupHeading == taxWithholdGroupHeading.RecId;

            if (!ledgerJournalTrans.isPaymentJournal_IN()
                && taxWithholdExcludeIndirectTaxIN.RecId != 0)
            {
                taxWithholdBaseFromIndirectTaxAmountCur -= TmpTaxWorkTrans::getExcludedIndirectTaxAmountforWHT_IN( _tmpTaxWorkTrans, _sourceTableId,_sourceRecId,_taxItemGroup, _vendAccountLoc,_taxWithholdGroup);
            }
        }

        return taxWithholdBaseFromIndirectTaxAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSpecificTaxAmount_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extracts and returns the amount for specific india tax type of a source document transaction.
    /// </summary>
    /// <param name="_tmpTaxWorkTrans">
    /// The source TmpTaxWorkTrans buffer.
    /// </param>
    /// <param name="_sourceTableId">
    /// The table Id of the source document transaction.
    /// </param>
    /// <param name="_sourceRecId">
    /// The Rec Id of the source document transaction.
    /// </param>
    /// <param name="_taxType">
    /// The specific tax type to retrieve the tax amount.
    /// </param>
    /// <returns>
    /// Returns the tax amount in transaction currency for the specific india tax type.
    /// </returns>
    public static TaxAmountCur getSpecificTaxAmount_IN(
        TmpTaxWorkTrans _tmpTaxWorkTrans,
        RefTableId      _sourceTableId,
        RefRecId        _sourceRecId,
        TaxType_IN      _taxType)
    {
        TaxTable            taxTable;

        if (_sourceRecId != 0)
        {
            select sum(SourceRegulateAmountCur) from _tmpTaxWorkTrans
               where _tmpTaxWorkTrans.SourceTableId == _sourceTableId
                  && _tmpTaxWorkTrans.SourceRecId  == _sourceRecId
                     exists join TaxType_IN from taxTable
                        where taxTable.TaxCode == _tmpTaxWorkTrans.TaxCode
                           && taxTable.TaxType_IN == _taxType;
        }
        return _tmpTaxWorkTrans.SourceRegulateAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxUncommitted_IN</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Populates the <c>TmpTaxWorkTrans</c> records from stored TaxUncommited_IN table buffer.
    /// </summary>
    /// <param name="_taxUncommitted">
    ///   Standard TaxUncommited buffer.
    /// </param>
    /// <param name="_tmpTaxWorkTrans">
    ///   Standard _tmpTaxWorkTrans buffer needs to be initialized.
    /// </param>
    /// <returns>
    /// initialized TmpTaxWorkTrans buffer.
    /// </returns>
    public static TmpTaxWorkTrans initFromTaxUncommitted_IN(
        RefRecId        _taxUncommitted,
        TmpTaxWorkTrans _tmpTaxWorkTrans)
    {
        TaxUncommitted_IN   taxUncommittedIN;
        if (_taxUncommitted)
        {
            taxUncommittedIN = TaxUncommitted_IN::findByTaxUncommitted(_taxUncommitted);
        }
        if (taxUncommittedIN.RecId)
        {
            _tmpTaxWorkTrans.FormulaID_IN                        = taxUncommittedIN.FormulaID;
            _tmpTaxWorkTrans.CustomsDuty_IN                      = taxUncommittedIN.CustomsDuty;
            _tmpTaxWorkTrans.EximTaxAmount_IN                    = taxUncommittedIN.EximTaxAmount;
            _tmpTaxWorkTrans.TaxAccountType_IN                   = taxUncommittedIN.TaxAccountType;
            _tmpTaxWorkTrans.EximDEPBAmount_IN                   = taxUncommittedIN.EximDEPBAmount;
            _tmpTaxWorkTrans.AbatementAmount_IN                  = taxUncommittedIN.AbatementAmount;
            _tmpTaxWorkTrans.EximTaxAmountCur_IN                 = taxUncommittedIN.EximTaxAmountCur;
            _tmpTaxWorkTrans.EximDEPBAmountCur_IN                = taxUncommittedIN.EximDEPBAmountCur;
            _tmpTaxWorkTrans.EximIncentiveScheme_IN              = taxUncommittedIN.EximIncentiveScheme;
            _tmpTaxWorkTrans.EximBalanceTaxAmount_IN             = taxUncommittedIN.EximBalanceTaxAmount;
            _tmpTaxWorkTrans.EximTaxCorrectedAmount_IN           = taxUncommittedIN.EximTaxCorrectedAmount;
            _tmpTaxWorkTrans.EximAuthorizationId_IN              = taxUncommittedIN.EximAuthorizationId;
            _tmpTaxWorkTrans.EximBalanceTaxAmountCur_IN          = taxUncommittedIN.EximBalanceTaxAmountCur;
            _tmpTaxWorkTrans.EximTaxCorrectedAmountCur_IN        = taxUncommittedIN.EximTaxCorrectedAmountCur;
            _tmpTaxWorkTrans.SourceRegulateAmountCustoms_IN      = taxUncommittedIN.SourceRegulateAmountCustoms;
            _tmpTaxWorkTrans.EximBalanceTaxCorrectedAmount_IN    = taxUncommittedIN.EximBalanceTaxCorrectedAmount;
            _tmpTaxWorkTrans.EximBalanceTaxCorrectedAmountCur_IN = taxUncommittedIN.EximBalanceTaxCorrectedAmountCur;
            _tmpTaxWorkTrans.IsScrapQtyLine_IN                   = taxUncommittedIN.IsScrapQtyLine_IN;
            _tmpTaxWorkTrans.ClaimPercentage_IN                  = taxUncommittedIN.ClaimPercentage;
            _tmpTaxWorkTrans.AbatementAmount_IN                  = taxUncommittedIN.AbatementAmount;
            _tmpTaxWorkTrans.TaxRegistrationNumberTable_IN       = taxUncommittedIN.TaxRegistrationNumberTable_IN;
            _tmpTaxWorkTrans.ServiceTaxReverseChargePercentage_IN= taxUncommittedIN.ServiceTaxReverseChargePercentage;
        }

        return _tmpTaxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIntracomVAT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if the IntracomVAT field is true in the current TmpTaxWorkTrans.
    /// </summary>
    /// <returns>
    /// Return true if IntracomVAT field is true, and the current country is CZ or ES, otherwise false.
    /// </returns>
    public boolean isIntracomVAT()
    {
        #ISOCountryRegionCodes

        boolean isCZES = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoES]);

        if (isCZES && this.IntracomVAT)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTaxTransWithReducedTaxType_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches <c>TmpTaxWorkTrans</c> table for corresponding records with Japanese Reduced Consumption Tax applied.
    /// </summary>
    /// <param name = "_record">Cursor to the source of <c>TmpTaxWorkTrans</c> records.</param>
    /// <returns>True if at least one of corresponding <c>TmpTaxWorkTrans</c> records has Reduced Consumption Tax applied to it, and False otherwise.</returns>
    public boolean existTaxTransWithReducedTaxType_JP(Common _record)
    {
        TaxTable taxTable;
        select firstonly RecId from this
            where this.SourceRecId == _record.RecId
                && this.SourceTableId == _record.TableId
            exists join taxTable
                where taxTable.TaxCode == this.TaxCode
                    && taxTable.TaxType_JP == TaxType_JP::Reduced;
        return this.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadToTmpTaxWorkTransWhileSalesTaxDetailIsNotNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads <c>TmpTaxWorkTrans</c> records that may already exists while sales tax details is not needed.
    /// </summary>
    /// <param name = "_taxworkTrans">The buffer of </c>TaxLoadToTmpTaxWorkTransWhileSalesTaxDetailIsNotNeededParameters</c>.</param>
    public TmpTaxWorkTrans loadToTmpTaxWorkTransWhileSalesTaxDetailIsNotNeeded(TaxLoadToTmpTaxWorkTransWhileSalesTaxDetailIsNotNeededParameters _parameters)
    {
        TmpTaxWorkTrans taxWorkTrans;
        if (_parameters.loadFromTaxUncommitted)
        {
            taxWorkTrans = TmpTaxWorkTrans::loadTmpTaxWorkTransFromTaxUncommitted(_parameters.headingTableId, _parameters.headingRecId);
        }
        else
        {
            taxWorkTrans = TmpTaxWorkTrans::loadTmpTaxWorkTransFromTaxTrans(_parameters.headingTableSourceDocumentRecId);
        }
        return taxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ensureReportingCurrency</Name>
				<Source><![CDATA[
    private void ensureReportingCurrency()
    {
        #ISOCountryRegionCodes
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) || TaxSolutionScopeIntegrationUtil::isCompanyEnabled() || !this.SourceCurrencyCode)
        {
            return;
        }

        if (!Ledger::findByLegalEntity(CompanyInfo::current()).ReportingCurrency)
        {
            return;
        }

        TaxCurrencyConversionRoutineHandler handler = TaxCurrencyConversionRoutineHandler::instance();
        if (this.SourceBaseAmountCur && !this.TaxBaseAmountRep)
        {
            this.TaxBaseAmountRep = handler.transCurrencyToReportingCurrency(this.SourceCurrencyCode, this.SourceBaseAmountCur, this.ReportingCurrencyExchRate, this.TransDate ? this.TransDate : this.CalculationDate);
        }

        if (this.SourceTaxAmountCur && !this.TaxAmountRep)
        {
            this.TaxAmountRep = handler.transCurrencyToReportingCurrency(this.SourceCurrencyCode, this.SourceTaxAmountCur, this.ReportingCurrencyExchRate, this.TransDate ? this.TransDate : this.CalculationDate);
        }

        if (this.TaxInCostPrice && !this.TaxInCostPriceRep)
        {
            this.TaxInCostPriceRep = handler.transCurrencyToReportingCurrency(this.SourceCurrencyCode, this.TaxInCostPrice, this.ReportingCurrencyExchRate, this.TransDate ? this.TransDate : this.CalculationDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTmpTaxWorkTransFromTaxCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Can be extended to initialize the current record with data from the <c>Tax</c> object.
    /// </summary>
    /// <param name = "_taxCalculation">
    /// The <c>Tax</c> object containing data pertinent to the tax calculation process creating this record.
    /// </param>
    public void initTmpTaxWorkTransFromTaxCalc(Tax _taxCalculation)
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFromTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies <c>TmpTaxWorkTrans</c> from <c>Tax</c> object and update HeadingTableId and HeadingRecId.
    /// </summary>
    /// <param name="_tax">
    /// The tax object which copy TmpTaxWorkTrans from.
    /// </param>
    /// <param name="_headingRecId">
    /// The record ID for the header.
    /// </param>
    /// <param name="_headingTableId">
    /// The table ID for the header.
    /// </param>
    public void copyFromTax(Tax _tax, RecId _headingRecId, TableId _headingTableId)
    {
        TmpTaxWorkTrans source;

        if (_tax)
        {
            source = _tax.tmpTaxWorkTrans();

            ttsbegin;

            while select source
            {
                this.clear();
                this.data(source);
                this.HeadingRecId = _headingRecId;
                this.HeadingTableId = _headingTableId;
                this.insert();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdjustNeededAfterAllocationToLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Compares per total and per line <c>TmpTaxWorkTrans</c> tables to find if rounding difference existed.
    /// </summary>
    /// <param name = "_total">The <c>TmpTaxWorkTrans</c> that calculate per total.</param>
    /// <param name = "_allocated">The <c>TmpTaxWorkTrans</c> that calculate per line.</param>
    /// <returns>true if rounding difference exists; otherwise false.</returns>
    internal static boolean isAdjustNeededAfterAllocationToLine(TmpTaxWorkTrans _total, TmpTaxWorkTrans _allocated)
    {
        select sum(TaxInCostPrice), sum(TaxInCostPriceRegulated), sum(SourceTaxAmountCur), sum(sourceRegulateAmountCur) from _total;
        select sum(TaxInCostPrice), sum(TaxInCostPriceRegulated), sum(SourceTaxAmountCur), sum(sourceRegulateAmountCur) from _allocated;
        return (_total.TaxInCostPrice != _allocated.TaxInCostPrice
            || _total.TaxInCostPriceRegulated != _allocated.TaxInCostPriceRegulated
            || _total.SourceTaxAmountCur != _allocated.SourceTaxAmountCur
            || _total.SourceRegulateAmountCur != _allocated.SourceRegulateAmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    ///Gets the accounting currency of the <c>Ledger</c> record.
    /// </summary>
    /// <returns>The accounting currency code of the record.</returns>
    public CurrencyCode accountingCurrency()
    {
        CurrencyCode accountingCurrency;

        if (TaxSalesTaxExchangeRateSpecificLegalEntity_PLFlight::instance().isEnabled()
            && this.SourceTableId == tableNum(LedgerJournalTrans)
            && this.Company
            && this.Company != curExt())
        {
            LegalEntity legalEntityRecId = CompanyInfo::findDataArea(this.Company).RecId;
            accountingCurrency = Ledger::accountingCurrency(legalEntityRecId);
        }
        else
        {
            accountingCurrency = Ledger::accountingCurrency();
        }
        return accountingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the reporting currency code of the <c>Ledger</c> record.
    /// </summary>
    /// <returns>The reporting currency code of the record.</returns>
    /// <remarks>
    /// This method is only used in Tax integration when TaxSpecificExchangeRateFeature is enabled.
    /// </remarks>
    public CurrencyCode reportingCurrency()
    {
        CurrencyCode reportingCurrency;

        if (TaxIntegrationBankOrTaxSpecificExchangeRateIntercompanyFlight::instance().isEnabled()
            && this.SourceTableId == tableNum(LedgerJournalTrans)
            && this.Company
            && this.Company != curExt())
        {
            LegalEntity legalEntityRecId = CompanyInfo::findDataArea(this.Company).RecId;
            reportingCurrency = Ledger::reportingCurrency(legalEntityRecId);
        }
        else
        {
            reportingCurrency = Ledger::reportingCurrency();
        }
        return reportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@SYS55332</Label>
	<ClusteredIndex></ClusteredIndex>
	<PrimaryIndex></PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBaseQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompanyAccount_IN</Name>
			<Label>@SYS89809</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyId_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CurrentCurrency</Name>
			<Label>@SYS17756</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxInCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTaxAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceBaseAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceBaseAmountCurRegulated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRegulateAmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxInCostPriceRegulated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceBaseAmountCurCalculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustomsCurrency_IN</Name>
			<Label>@GLS5657</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomsDuty_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>exemptCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxSourceType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GSTHSTTaxType_CA</Name>
			<Label>@SYS313827</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventProfile_RU</Name>
			<Label>@GLS113772</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventProfileType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>KindOfActivity_RU</Name>
			<Label>@GLS113795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WithoutTaxTrans_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting_RU</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PostponeVAT</Name>
			<Label>@GLS111972</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostponeVAT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>References</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxUnrealizedRefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTaxExchangeRate</Name>
			<Label>@GLS112405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTaxExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRateTaxBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRateTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRateSourceRegulateAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchangeRateSourceBaseAmountRegulated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOfVatRegister</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Source</Name>
			<Label>@SYS11258</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxType_MX</Name>
			<Label>@SYS33553</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType_MX</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxUnrealized</Name>
			<Label>@SYS115509</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnrealizedTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATOperationCode_RU</Name>
			<Label>@GLS112871</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATOperationCode_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReverseCharge</Name>
			<Label>@SYS118818</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReverseCharge_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmptyTaxBaseForOutgoingTax_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceCurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<HelpText>@TaxTrans:SourceCurrencyCodeHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AbatementAmount_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans_W:AbatementAmount_INHelpText</HelpText>
			<Label>@GLS6181</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Addressing_PL</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>Addressing</ExtendedDataType>
			<HelpText>@TaxTrans_W:Addressing_PLHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CalculationDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ClaimPercentage_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>Percent</ExtendedDataType>
			<HelpText>@TaxTrans_W:ClaimPercentage_INHelpText</HelpText>
			<Label>@GLS5257</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Label>@SYS4003094</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyId_IN</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<HelpText>@TaxTrans:CurrencyCodeHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomsDuty_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustomsAmount_IN</ExtendedDataType>
			<HelpText>@TaxTrans_W:CustomsDuty_INHelpText</HelpText>
			<Label>@SYS76123</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendName_PL</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PlCustVendName</ExtendedDataType>
			<HelpText>@TaxTrans_W:CustVendName_PLHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateOfVatRegister</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>CZ,HU,PL</CountryRegionCodes>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate_PL</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>CZ,PL</CountryRegionCodes>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<HelpText>@TaxTrans_W:DocumentDate_PLHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EUROTriangulation</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EUROTriangulation</ExtendedDataType>
			<HelpText>@TaxTrans:EUROTriangulationHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateSourceBaseAmountRegulated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:ExchangeRateSourceBaseAmountRegulatedHelpText</HelpText>
			<Label>@GLS112409</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateSourceRegulateAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:ExchangeRateSourceRegulateAmountHelpText</HelpText>
			<Label>@GLS112411</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:ExchangeRateTaxAmountHelpText</HelpText>
			<Label>@GLS112415</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxBaseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:ExchangeRateTaxBaseAmountHelpText</HelpText>
			<Label>@GLS112413</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateBaseAmountCurRegulated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateBaseAmountCurRegulatedHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateBaseAmountCurRegulated</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateRegulateAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateRegulateAmountCurHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateRegulateAmountCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateTaxAmountCurHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateTaxAmountCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxBaseAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateTaxBaseAmountCurHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateTaxBaseAmountCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxAmountRep</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateTaxAmountRepHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateTaxAmountRep</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchangeRateTaxBaseAmountRep</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxIntegration:ExchangeRateTaxBaseAmountRepHelpText</HelpText>
			<Label>@TaxIntegration:ExchangeRateTaxBaseAmountRep</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>ExchRate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExemptTax</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxExemptTax</ExtendedDataType>
			<HelpText>@TaxTrans:ExemptTaxHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EximAuthorizationId_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximAuthorizationId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximBalanceTaxAmount_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS61734</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximBalanceTaxAmountCur_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximBalanceTaxCorrectedAmount_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS61733</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximBalanceTaxCorrectedAmountCur_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximDEPBAmount_IN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS62273</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximDEPBAmountCur_IN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<Label>@GLS62273</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EximIncentiveScheme_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@GLS61566</Label>
			<EnumType>EximIncentiveScheme_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximTaxAmount_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS61603</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximTaxAmountCur_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximTaxCorrectedAmount_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS61605</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EximTaxCorrectedAmountCur_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FiscalValue_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxFiscalValue_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FormulaID_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ID_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GSTHSTTaxType_CA</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@TaxTrans:GSTHSTTaxType_CAHelpText</HelpText>
			<EnumType>GSTHSTTaxType_CA</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HeadingRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans:HeadingRecIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HeadingTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<HelpText>@TaxTrans:HeadingTableIdHelpText</HelpText>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludedInPrice_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS67</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IntracomVAT</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxIntracomVAT</ExtendedDataType>
			<HelpText>@TaxTrans:IntracomVATHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventProfileType_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>InventProfileType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<HelpText>@TaxTrans:InventTransIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<HelpText>@TaxTrans:InvoiceIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoiceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans:InvoiceRecIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDeleted</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VersioningIsDeleted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOffset</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverUnderPayment</Name>
			<HelpText>@TaxTrans:IsOverUnderPaymentHelpText</HelpText>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsScrapQtyLine_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimensionRev_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LedgerPost</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ManualInsertedTax</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS67708</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MarkupTransRecId_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>MarkupTransRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NegativeTax</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@GLS102172</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OperationLedgerDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@SYS978</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OperationPostingType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginalTaxTrans</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentSourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>CN,JP,IN,CZ,EE,HU,LT,LV,PL,RU,BR</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ParentSourceTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>CN,JP,IN,CZ,EE,HU,LT,LV,PL,RU,BR</CountryRegionCodes>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>PostingProfile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostponeVAT</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>LedgerBasicVatDueDate_W</ConfigurationKey>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>CzPostponeVAT</ExtendedDataType>
			<HelpText>@TaxTrans:PostponeVATHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Prepayment</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS59473</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EmptyTaxBaseForOutgoingTax_W</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>DK,DE,NL,GB,FR,IE,IS</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxTrans:EmptyTaxBaseForOutgoingTax_WHelpText</HelpText>
			<Label>@Tax:EmptyTaxBaseOutTax</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTaxExchangeRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyExchangeRate</ExtendedDataType>
			<Label>@GLS112406</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTaxExchangeRateRep</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyExchangeRate</ExtendedDataType>
			<Label>@TaxIntegration:SalesTaxExchangeRateRep</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTaxExchangeRateCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyExchangeRate</ExtendedDataType>
			<Label>@TaxIntegration:SalesTaxExchangeRateCur</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ServiceTaxReverseChargePercentage_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ServiceTaxRevPercentage_IN</ExtendedDataType>
			<HelpText>@TaxTrans_W:ServiceTaxReverseChargePercentage_INHelpText</HelpText>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Source</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@TaxTrans:SourceHelpText</HelpText>
			<Visible>No</Visible>
			<EnumType>TaxModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<HelpText>@TaxTrans:SourceBaseAmountCurHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurCalculated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<HelpText>@TaxTrans:SourceBaseAmountCurCalculatedHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurRaw</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:SourceBaseAmountCurRawHelpText</HelpText>
			<Label>@SYS73028</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceBaseAmountCurRegulated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<HelpText>@TaxTrans:SourceBaseAmountCurRegulatedHelpText</HelpText>
			<Label>@SYS67702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans:SourceDocumentLineHelpText</HelpText>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceExemptBaseAmount_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<Label>@GLS219</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceExemptBaseAmountMST_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Label>@GLS219</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceExemptTaxAmount_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceExemptTaxAmountMST_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS50912</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceOtherBaseAmount_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<Label>@GLS220</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceOtherBaseAmountMST_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Label>@GLS220</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceOtherBaseTaxAmount_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<Label>@GLS490</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceOtherTaxAmountMST_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<Label>@GLS490</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans:SourceRecIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceRegulateAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:SourceRegulateAmountCurHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceRegulateAmountCustoms_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<HelpText>@TaxTrans:SourceTableIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceTaxAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:SourceTaxAmountCurHelpText</HelpText>
			<Label>@SYS76510</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceTaxAmountCurReal</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxAmountHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceTaxSubstitutionAmountAddedCur_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StateId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>AddressStateId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxAccountType_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxAccountType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:TaxAmountHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxAmountCurHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountRep</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxAmountRepHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxationCode_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxationCodeAdj_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
			<Label>@GLS50816</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxationOrigin_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>FITaxationOrigin_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxAutogenerated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAutoGenerated</ExtendedDataType>
			<HelpText>@TaxTrans:TaxAutogeneratedHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseAmountHelpText</HelpText>
			<Label>@SYS73028</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseAmountCurHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountRep</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseAmountRepHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountOrig</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseAmountOrigHelpText</HelpText>
			<Label>@GLS226</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountRaw</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseAmountRawHelpText</HelpText>
			<Label>@SYS73028</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxQty</ExtendedDataType>
			<HelpText>@TaxTrans:TaxBaseQtyHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<HelpText>@TaxTrans:TaxCodeHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TaxCodeCombinationId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxCodeCombinationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxDirection</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@TaxTrans:TaxDirectionHelpText</HelpText>
			<EnumType>TaxDirection</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<HelpText>@TaxTrans:TaxGroupHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxInCostPriceHelpText</HelpText>
			<Label>@SYS24596</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPriceCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:TaxInCostPriceCurHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPriceRep</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:TaxInCostPriceRepHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPriceMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<HelpText>@TaxTrans:TaxInCostPriceMSTHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxInCostPriceRegulated</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<HelpText>@TaxTrans:TaxInCostPriceRegulatedHelpText</HelpText>
			<Label>@SYS53190</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<HelpText>@TaxTrans:TaxItemGroupHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxLimitReached</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxLimitReached</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxLoadOnInventoryCur_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxOffsetUseTaxLedgerDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxOrigin</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@TaxTrans:TaxOriginHelpText</HelpText>
			<EnumType>TaxOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxPeriodPaymentCode_PL</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PlTaxPeriodPaymentCode</ExtendedDataType>
			<HelpText>@TaxTrans_W:TaxPeriodPaymentCode_PLHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReceivableLongTerm_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxReceivableLongTerm_BR</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxReductionPct_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxValue</ExtendedDataType>
			<Label>@GLS60</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TaxRefId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxRegistrationNumberTable_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans_W:TaxRegistrationNumberTable_INHelpText</HelpText>
			<Label>@SYS59571</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReports</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxSalesOffsetLedgerDimension_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxSourceType_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxSourceType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxSubstitutionAmountAddedMST_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxTrans</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxTributarySubstitution</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxSubstitution_BR</ExtendedDataType>
			<EnumType>TaxSubstitutionEnum_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType_MX</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<HelpText>@TaxTrans:TaxType_MXHelpText</HelpText>
			<EnumType>TaxType_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxUnrealizedRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxUnrealizedRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxValue_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@TaxTrans:TransDateHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransactionTextLarge</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UnrealizedTax</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>MX</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxTrans:UnrealizedTaxHelpText</HelpText>
			<Label>@SYS115509</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>VatDueDate_W</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
			<HelpText>@TaxTrans_W:VatDueDate_WHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum_PL</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>VATNum</ExtendedDataType>
			<HelpText>@TaxTrans_W:VATNum_PLHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATOperationCode_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VATOperationCode_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATTaxAgentVendAccount_RU</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VATTaxAgentVendAccount_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceInfoLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<HelpText>@TaxTrans:VoucherHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Warning</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxWarning</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WithoutTaxTrans_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>WithoutTaxTrans_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseCharge_W</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxReverseCharge</ExtendedDataType>
			<HelpText>@TaxTrans:ReverseCharge_WHelpText</HelpText>
			<Label>@SYS118818</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<ExtendedDataType>ExchRate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxId</Name>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
			<HelpText>@TaxTrans:TaxIDHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportingCurrencyExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportingCurrencyExchRate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValue</ExtendedDataType>
			<HelpText>@TaxTrans:TaxValueHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyTaxId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxTrans:PartyTaxIdHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SourceLineType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@TaxIntegration:LineType</Label>
			<EnumType>TaxIntegrationLineType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceOrderLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@TaxIntegration:OrderLineNumber</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SourceChargeLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@TaxIntegration:ChargeLineNumber</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsReversalGainLoss_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ISVFeatureSetupGuid</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysGuid</ExtendedDataType>
			<FeatureClass>TaxIntegrationISVTaxPostToggle</FeatureClass>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ISVFeatureSetupName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationFeatureSetupName</ExtendedDataType>
			<FeatureClass>TaxServiceUniversalTaxRateAPIFeature</FeatureClass>
			<Label>@TaxIntegration:FeatureSetupName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateSourceBaseAmountCur_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<Label>@Tax:ConsolidatedAmountOrigin</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateSourceTaxAmountCurPosted_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<Label>@Tax:ConsolidatedPostedSalesTax</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateSourceTaxAmountCur_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateSourceRegulateAmountCur_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<Label>@Tax:ActualConsolidatedSalesTax</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateTaxInCostPricePosted_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateTaxInCostPrice_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ConsolidateTaxInCostPriceRegulated_JP</Name>
			<AssetClassification>Customer content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxDirection</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceRefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HeadingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HeadingRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HeadingTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ManualInsertedTax</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ExemptIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExemptTax</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DirectionOriginIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxDirection</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OriginIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceRecId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxSalesOffsetLedgerDimension_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxSalesOffsetLedgerDimension_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendInvoiceInfoLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendInvoiceInfoLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxUnrealizedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxUnrealizedRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TaxModelTaxTransaction_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CalculationDate</MapField>
					<MapFieldTo>CalculationDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Company</MapField>
					<MapFieldTo>Company</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
					<MapFieldTo>ExchRate_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExemptTax</MapField>
					<MapFieldTo>ExemptTax</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximAuthorizationId</MapField>
					<MapFieldTo>EximAuthorizationId_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximBalanceTaxAmount</MapField>
					<MapFieldTo>EximBalanceTaxAmount_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximBalanceTaxAmountCur</MapField>
					<MapFieldTo>EximBalanceTaxAmountCur_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximBalanceTaxCorrectedAmount</MapField>
					<MapFieldTo>EximBalanceTaxCorrectedAmount_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximBalanceTaxCorrectedAmountCur</MapField>
					<MapFieldTo>EximBalanceTaxCorrectedAmountCur_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximDEPBAmount</MapField>
					<MapFieldTo>EximDEPBAmount_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximDEPBAmountCur</MapField>
					<MapFieldTo>EximDEPBAmountCur_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximIncentiveScheme</MapField>
					<MapFieldTo>EximIncentiveScheme_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximTaxAmount</MapField>
					<MapFieldTo>EximTaxAmount_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximTaxAmountCur</MapField>
					<MapFieldTo>EximTaxAmountCur_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximTaxCorrectedAmount</MapField>
					<MapFieldTo>EximTaxCorrectedAmount_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EximTaxCorrectedAmountCur</MapField>
					<MapFieldTo>EximTaxCorrectedAmountCur_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FormulaID</MapField>
					<MapFieldTo>FormulaID_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>HeadingRecId</MapField>
					<MapFieldTo>HeadingRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>HeadingTableId</MapField>
					<MapFieldTo>HeadingTableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
					<MapFieldTo>InventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension</MapField>
					<MapFieldTo>LedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension_IN</MapField>
					<MapFieldTo>LedgerDimension_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LoadOnInventoryTax</MapField>
					<MapFieldTo>TaxInCostPriceMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OperationLedgerDimension</MapField>
					<MapFieldTo>OperationLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OperationPostingType</MapField>
					<MapFieldTo>OperationPostingType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Source</MapField>
					<MapFieldTo>Source</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceBaseAmountCur</MapField>
					<MapFieldTo>SourceBaseAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceBaseAmountCurCalculated</MapField>
					<MapFieldTo>SourceBaseAmountCurCalculated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceBaseAmountCurRaw</MapField>
					<MapFieldTo>SourceBaseAmountCurRaw</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceBaseAmountCurRegulated</MapField>
					<MapFieldTo>SourceBaseAmountCurRegulated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceCurrencyCode</MapField>
					<MapFieldTo>SourceCurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>SourceRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRegulateAmountCur</MapField>
					<MapFieldTo>SourceRegulateAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRegulateAmountCustoms</MapField>
					<MapFieldTo>SourceRegulateAmountCustoms_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>SourceTableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTaxAmountCur</MapField>
					<MapFieldTo>SourceTaxAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTaxAmountCurReal</MapField>
					<MapFieldTo>SourceTaxAmountCurReal</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAccountType</MapField>
					<MapFieldTo>TaxAccountType_IN</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount</MapField>
					<MapFieldTo>TaxAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmountCur</MapField>
					<MapFieldTo>TaxAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAutogenerated</MapField>
					<MapFieldTo>TaxAutogenerated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxBaseAmount</MapField>
					<MapFieldTo>TaxBaseAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxBaseAmountCur</MapField>
					<MapFieldTo>TaxBaseAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxBaseAmountRaw</MapField>
					<MapFieldTo>TaxBaseAmountRaw</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxBaseQty</MapField>
					<MapFieldTo>TaxBaseQty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
					<MapFieldTo>TaxCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxDirection</MapField>
					<MapFieldTo>TaxDirection</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPrice</MapField>
					<MapFieldTo>TaxInCostPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPriceCur</MapField>
					<MapFieldTo>TaxInCostPriceCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPriceMST</MapField>
					<MapFieldTo>TaxInCostPriceMST</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPriceRegulated</MapField>
					<MapFieldTo>TaxInCostPriceRegulated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxOffsetUseTaxLedgerDimension</MapField>
					<MapFieldTo>TaxOffsetUseTaxLedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxOrigin</MapField>
					<MapFieldTo>TaxOrigin</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>VATRegData_W</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostponeVAT</MapField>
					<MapFieldTo>PostponeVAT</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
					<MapFieldTo>TaxCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TaxMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EUROTriangulation</MapField>
					<MapFieldTo>EUROTriangulation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchangeRate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchangeRateSecond</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchangeRateSourceRegulateAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchangeRateTaxAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FiscalValue_BR</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Reason</MapField>
					<MapFieldTo>Reason</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReasonComment</MapField>
					<MapFieldTo>ReasonComment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceCurrencyCode</MapField>
					<MapFieldTo>SourceCurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceDocumentLine</MapField>
					<MapFieldTo>SourceDocumentLine</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceOtherBaseTaxAmount_BR</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>SourceRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRegulateAmountCur</MapField>
					<MapFieldTo>SourceRegulateAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>SourceTableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTaxAmountCur</MapField>
					<MapFieldTo>SourceTaxAmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAutoGenerated</MapField>
					<MapFieldTo>TaxAutogenerated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxCode</MapField>
					<MapFieldTo>TaxCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxDirection</MapField>
					<MapFieldTo>TaxDirection</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPrice</MapField>
					<MapFieldTo>TaxInCostPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInCostPriceRegulated</MapField>
					<MapFieldTo>TaxInCostPriceRegulated</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VATDueDate_W</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>WithoutTaxTrans_RU</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>BankStatementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankStmtISOReportEntry</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency_CurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency_CurrencyCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency_SourceCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceCurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>SourceCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Company</Name>
					<SourceEDT>SelectableDataArea</SourceEDT>
					<Field>Company</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<SourceEDT>SelectableDataArea</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventQualityOrderTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@GLS60820</EntityRelationshipRole>
			<RelatedTable>InventQualityOrderTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransferLine_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension_IN</Name>
					<Field>LedgerDimension_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimensionRev_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RevDimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RevTmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimensionRev_IN</Name>
					<Field>LedgerDimensionRev_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalTrans</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MarkupTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>MarkupTrans_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MarkupTransRecId_RU</Name>
					<Field>MarkupTransRecId_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension_RU</Name>
					<Field>OffsetLedgerDimension_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OperationLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OperationLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OperationLedgerDimension</Name>
					<Field>OperationLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginalTaxTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OriginalTaxTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginalTaxTrans</Name>
					<Field>OriginalTaxTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PlTaxDueTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PlTaxDueTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PlTaxDueTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxPeriodPaymentCode_PL</Name>
					<Field>TaxPeriodPaymentCode_PL</Field>
					<RelatedField>TaxPeriodPaymentCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalCost_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalCost</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalCost_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalCost_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalEmpl_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalEmpl</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalEmpl_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalEmpl_1_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalItem_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalItem</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalItem_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalItem_1_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalOnAcc_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalOnAcc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalOnAcc_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalOnAcc_1_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalRevenue_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjProposalRevenue</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalRevenue_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjProposalRevenue_1_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesLine</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxExpenseLedgerDimension_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxExpenseLedgerDimension_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxSalesOffsetLedgerDimension_BR</Name>
					<Field>TaxSalesOffsetLedgerDimension_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxOffsetUseTaxLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxOffsetUseTaxLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxOffsetUseTaxLedgerDimension</Name>
					<Field>TaxOffsetUseTaxLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistrationNumberTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistrationNumbers_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistrationNumbers_IN_TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxRegistrationNumberTable_IN</Name>
					<Field>TaxRegistrationNumberTable_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxUnrealizedRefRecId</Name>
					<Field>TaxUnrealizedRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VATOperationCodeTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VATOperationCodeTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATOperationCode_RU</Name>
					<SourceEDT>VATOperationCode_RU</SourceEDT>
					<Field>VATOperationCode_RU</Field>
					<RelatedField>OperationCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceInfoLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceInfoLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceInfoLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceInfoLine_TmpTaxWorkTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceInfoLine</Name>
					<Field>VendInvoiceInfoLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TableRefIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable_VATTaxAgent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATTaxAgentVendAccount_RU</Name>
					<SourceEDT>VATTaxAgentVendAccount_RU</SourceEDT>
					<Field>VATTaxAgentVendAccount_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>VATTaxAgent_RU_Extern</Name>
					<SourceEDT>VATTaxAgentVendAccount_RU</SourceEDT>
					<RelatedField>VATTaxAgent_RU</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxId</Name>
					<Field>TaxId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyTaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyTaxId</Name>
					<Field>PartyTaxId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpTaxWorkTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>