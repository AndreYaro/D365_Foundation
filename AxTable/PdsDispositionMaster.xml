<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsDispositionMaster</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsDispositionMaster extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDispositionFields</Name>
				<Source><![CDATA[
    public container getDispositionFields()
    {
        container   cntBlocked;
        container   cntAvailable;
        str         strFill;

        void fieldLabel(
            fieldId             _fieldId,
            PdsDispModuleType   _modType,
            boolean             _reverse = false)
        {
            boolean restrict;

            if (!_reverse)
            {
                restrict = this.(_fieldId);
            }
            else
            {
                restrict = this.(_fieldId) == true ? false : true;
            }

            strFill =  strfmt('%1 - %2',
                                    enum2str(_modType),
                                    fieldLabelValue(tablenum(PdsDispositionMaster),
                                                    _fieldId,
                                                    this.(_fieldId)));

            if (restrict)
            {
                cntBlocked = conins(cntBlocked,conlen(cntBlocked)+1,strFill);
            }
            else
            {
                cntAvailable = conins(cntAvailable,conlen(cntAvailable)+1,strFill);
            }
        }

        fieldLabel(fieldnum(PdsDispositionMaster,PdsProdBlockPick),
                    PdsDispModuleType::Production);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsProdBlockReserve),
                    PdsDispModuleType::Production);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsProdBlockProductionPickingJournal),
                    PdsDispModuleType::Production);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsSalesBlockPick),
                    PdsDispModuleType::Sales);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsSalesBlockReserve),
                    PdsDispModuleType::Sales);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsSalesBlockShip),
                    PdsDispModuleType::Sales);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsTransBlockPick),
                    PdsDispModuleType::Transfer);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsTransBlockReserve),
                    PdsDispModuleType::Transfer);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsTransBlockShip),
                    PdsDispModuleType::Transfer);
        fieldLabel(fieldnum(PdsDispositionMaster,PdsNettable),
                    PdsDispModuleType::Planning,
                    true);

        return [cntBlocked,cntAvailable];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
                [fieldnum(PdsDispositionMaster, PdsNettable),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsProdBlockPick),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsProdBlockReserve),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsSalesBlockPick),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsSalesBlockReserve),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsSalesBlockShip),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsTransBlockPick),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsTransBlockReserve),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsTransBlockShip),
                    [fieldnum(PdsDispositionMaster, Status)]],
                [fieldnum(PdsDispositionMaster, PdsProdBlockProductionPickingJournal),
                    [fieldnum(PdsDispositionMaster, Status)]]
            ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsNettable</Name>
				<Source><![CDATA[
    private void defaultPdsNettable()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsNettable = NoYes::No;
            }
            else
            {
                this.PdsNettable = NoYes::Yes;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsProdBlockPick</Name>
				<Source><![CDATA[
    private void defaultPdsProdBlockPick()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsProdBlockPick = NoYes::Yes;
            }
            else 
            {
                this.PdsProdBlockPick = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsProdBlockReserve</Name>
				<Source><![CDATA[
    private void defaultPdsProdBlockReserve()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsProdBlockReserve = NoYes::Yes;
            }
            else 
            {
                this.PdsProdBlockReserve = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsSalesBlockPick</Name>
				<Source><![CDATA[
    private void defaultPdsSalesBlockPick()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsSalesBlockPick = NoYes::Yes;
            }
            else 
            {
                this.PdsSalesBlockPick = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsSalesBlockReserve</Name>
				<Source><![CDATA[
    private void defaultPdsSalesBlockReserve()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsSalesBlockReserve = NoYes::Yes;
            }
            else 
            {
                this.PdsSalesBlockReserve = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsSalesBlockShip</Name>
				<Source><![CDATA[
    private void defaultPdsSalesBlockShip()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsSalesBlockShip = NoYes::Yes;
            }
            else 
            {
                this.PdsSalesBlockShip = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsTransBlockPick</Name>
				<Source><![CDATA[
    private void defaultPdsTransBlockPick()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsTransBlockPick = NoYes::Yes;
            }
            else 
            {
                this.PdsTransBlockPick = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsTransBlockReserve</Name>
				<Source><![CDATA[
    private void defaultPdsTransBlockReserve()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsTransBlockReserve = NoYes::Yes;
            }
            else 
            {
                this.PdsTransBlockReserve = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsTransBlockShip</Name>
				<Source><![CDATA[
    private void defaultPdsTransBlockShip()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsTransBlockShip = NoYes::Yes;
            }
            else
            {
                this.PdsTransBlockShip = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPdsProdBlockProductionPickingJournal</Name>
				<Source><![CDATA[
    private void defaultPdsProdBlockProductionPickingJournal()
    {
        if(this.isFieldSet(fieldNum(PdsDispositionMaster, Status)))
        {
            if(this.Status != PdsStatus::Available)
            {
                this.PdsProdBlockProductionPickingJournal = NoYes::Yes;
            }
            else
            {
                this.PdsProdBlockProductionPickingJournal = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(PdsDispositionMaster, PdsNettable):
                this.defaultPdsNettable();
                break;
            case fieldnum(PdsDispositionMaster, PdsProdBlockPick):
                this.defaultPdsProdBlockPick();
                break;
            case fieldnum(PdsDispositionMaster, PdsProdBlockReserve):
                this.defaultPdsProdBlockReserve();
                break;
            case fieldnum(PdsDispositionMaster, PdsSalesBlockPick):
                this.defaultPdsSalesBlockPick();
                break;
            case fieldnum(PdsDispositionMaster, PdsSalesBlockReserve):
                this.defaultPdsSalesBlockReserve();
                break;
            case fieldnum(PdsDispositionMaster, PdsSalesBlockShip):
                this.defaultPdsSalesBlockShip();
                break;
            case fieldnum(PdsDispositionMaster, PdsTransBlockPick):
                this.defaultPdsTransBlockPick();
                break;
            case fieldnum(PdsDispositionMaster, PdsTransBlockReserve):
                this.defaultPdsTransBlockReserve();
                break;
            case fieldnum(PdsDispositionMaster, PdsTransBlockShip):
                this.defaultPdsTransBlockShip();
                break;
            case fieldnum(PdsDispositionMaster, PdsProdBlockProductionPickingJournal):
                this.defaultPdsProdBlockProductionPickingJournal();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodRestrictStatus</Name>
				<Source><![CDATA[
    public display PdsProdRestrictStatus prodRestrictStatus()
    {
        boolean     ret = false;

        if (this.PdsProdBlockPick
        ||  this.PdsProdBlockReserve
        ||  this.PdsProdBlockProductionPickingJournal)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqPlanRestrictStatus</Name>
				<Source><![CDATA[
    public display PdsReqPlanRestrictStatus reqPlanRestrictStatus()
    {
        return this.PdsNettable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesRestrictStatus</Name>
				<Source><![CDATA[
    public display PdsSalesRestrictStatus salesRestrictStatus()
    {
        boolean     ret = false;

        if (this.PdsSalesBlockPick
            || this.PdsSalesBlockReserve
            || this.PdsSalesBlockShip)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferRestrictStatus</Name>
				<Source><![CDATA[
    public display PdsTransferRestrictStatus transferRestrictStatus()
    {
        boolean     ret = false;

        if (this.PdsTransBlockPick
            || this.PdsTransBlockReserve
            || this.PdsTransBlockShip)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(PdsDispositionCode _dispositionCode)
    {
        boolean ret = true;

        if (_dispositionCode
            && !PdsDispositionMaster::exist(_dispositionCode))
        {
            ret = checkFailed(strfmt(PdsDispositionMaster::txtNotExist(), _dispositionCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(PdsDispositionCode _dispositionCode)
    {
        return _dispositionCode
            && (select firstonly pdsDispositionMaster
                    where pdsDispositionMaster.DispositionCode == _dispositionCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsDispositionMaster find(
        PdsDispositionCode  _dispositionCode,
        boolean             _forUpdate = false)
    {
        PdsDispositionMaster    pdsDispositionMaster;

        pdsDispositionMaster.selectForUpdate(_forUpdate);

        if (_dispositionCode)
        {
            select firstonly pdsDispositionMaster
                where pdsDispositionMaster.DispositionCode == _dispositionCode;
        }

        return pdsDispositionMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@PRO174";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRestrict</Name>
				<Source><![CDATA[
    public void updateRestrict()
    {
        if (this.Status != PdsStatus::Unavailable)
        {
            this.PdsNettable            = NoYes::Yes;
            this.PdsProdBlockPick       = NoYes::No;
            this.PdsProdBlockReserve    = NoYes::No;
            this.PdsSalesBlockPick      = NoYes::No;
            this.PdsSalesBlockReserve   = NoYes::No;
            this.PdsSalesBlockShip      = NoYes::No;
            this.PdsTransBlockPick      = NoYes::No;
            this.PdsTransBlockReserve   = NoYes::No;
            this.PdsTransBlockShip      = NoYes::No;
            this.PdsProdBlockProductionPickingJournal = NoYes::No;
        }
        else
        {
            this.PdsNettable            = NoYes::No;
            this.PdsProdBlockPick       = NoYes::Yes;
            this.PdsProdBlockReserve    = NoYes::Yes;
            this.PdsSalesBlockPick      = NoYes::Yes;
            this.PdsSalesBlockReserve   = NoYes::Yes;
            this.PdsSalesBlockShip      = NoYes::Yes;
            this.PdsTransBlockPick      = NoYes::Yes;
            this.PdsTransBlockReserve   = NoYes::Yes;
            this.PdsTransBlockShip      = NoYes::Yes;
            this.PdsProdBlockProductionPickingJournal = NoYes::Yes;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if(this.Status == PdsStatus::Available 
            && (!this.PdsNettable 
            || this.PdsProdBlockPick
            || this.PdsProdBlockReserve
            || this.PdsSalesBlockPick
            || this.PdsProdBlockProductionPickingJournal
            || this.PdsSalesBlockReserve
            || this.PdsSalesBlockShip
            || this.PdsTransBlockPick
            || this.PdsTransBlockReserve
            || this.PdsTransBlockShip))
        {
            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsShelf</ConfigurationKey>
	<DeveloperDocumentation>@PDS1075</DeveloperDocumentation>
	<FormRef>PdsDispositionMaster</FormRef>
	<Label>@PRO181</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>DispositionCode</TitleField1>
	<TitleField2>Status</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>DispositionCodeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<PrimaryIndex>DispositionCodeIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispositionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@PRO1445</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DispositionStatus</Name>
			<Label>@PRO252</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DispositionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProdRestrict</Name>
			<Label>@PRO2110</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsProdBlockReserve</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsProdBlockPick</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsProdBlockProductionPickingJournal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReqPlanRestrict</Name>
			<Label>@PRO2084</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsNettable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesRestrict</Name>
			<Label>@PRO2108</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsSalesBlockReserve</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsSalesBlockPick</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsSalesBlockShip</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransRestrict</Name>
			<Label>@PRO2109</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsTransBlockReserve</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsTransBlockPick</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsTransBlockShip</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DispositionCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsDispositionCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsNettable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsNettable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsProdBlockPick</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsProdBlockPick</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsProdBlockProductionPickingJournal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsProdBlockProductionPickingJournal</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsProdBlockReserve</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsProdBlockReserve</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsSalesBlockPick</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsSalesBlockPick</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsSalesBlockReserve</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsSalesBlockReserve</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsSalesBlockShip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsSalesBlockShip</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsTransBlockPick</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsTransBlockPick</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsTransBlockReserve</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsTransBlockReserve</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsTransBlockShip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsTransBlockShip</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DispositionCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DispositionCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>