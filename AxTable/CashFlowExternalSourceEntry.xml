<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowExternalSourceEntry</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashFlowExternalSourceEntry extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLedgerCov</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates cash flow forecasts for cash flow external source entry record.
    /// </summary>
    /// <param name = "_ledgerCoverage">The cash flow forecasting calculations.</param>
    internal void updateLedgerCov(LedgerCoverage _ledgerCoverage)
    {
        if (CashflowInsightsActivation::isActive())
        {
            LedgerCoverage ledgerCoverage = _ledgerCoverage;

            ledgerCoverage.init(this);

            this.updateLedgerCovData(_ledgerCoverage);

            ledgerCoverage.endCov();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerCovData</Name>
				<Source><![CDATA[
    private void updateLedgerCovData(LedgerCoverage _ledgerCoverage)
    {
        CashFlowExternalSourceLegalEntity extSourceLegalEntity = CashFlowExternalSourceLegalEntity::find(this.ExternalSourceLegalEntity);
        CashFlowExternalSource extSource = CashFlowExternalSource::find(extSourceLegalEntity.externalSource);

        // If this entry belongs to an outgoing external source, flip the signs on ammount 
        // to make sure the cash flow engine can calculate LedgerCov.crediting correctly. 
        AmountCur transAmountForLedgerCov = this.TransactionAmount;

        if (extSource.LiquidityDirection == LedgerCovLiquidityDirection::Outgoing)
        {
            transAmountForLedgerCov = -this.TransactionAmount;
        }

        _ledgerCoverage.updateSum(
            this.TransactionDate,
            extSource.PostingType,
            extSourceLegalEntity.MainAccount,
            this.DefaultDimension,
            this.TransactionCurrencyCode,
            transAmountForLedgerCov);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOrCreateLedgerCovDataAndRecalculateBalance</Name>
				<Source><![CDATA[
    internal void updateOrCreateLedgerCovDataAndRecalculateBalance(TransDate _previousTransDate = this.TransactionDate)
    {
        this.updateLedgerCov(LedgerCoverage::construct(this));

        this.updateOrCreateLedgerCovDocument();
                
        CashFlowForecastFutureBalanceDateRecalculator::recalculateDay(this.TransactionDate);

        this.CovStatus = 1;
        this.update();

        // If _previousTransDate is not the same as this.TransactionDate, that means the transactionData is updated.
        // Need to re-calculate the balance for previous date.
        if (_previousTransDate != this.TransactionDate)
        {
            CashFlowForecastFutureBalanceDateRecalculator::recalculateDay(_previousTransDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLedgerCovDataAndRecalculateDayBalance</Name>
				<Source><![CDATA[
    internal void deleteLedgerCovDataAndRecalculateDayBalance()
    {
        TableId cashFlowExternalSourceEntryTableNum = TableNum(CashFlowExternalSourceEntry);

        LedgerCov::deleteTransact(cashFlowExternalSourceEntryTableNum, this.RecId);
        LedgerCovDocument::deleteTransact(cashFlowExternalSourceEntryTableNum, this.RecId);
        CashFlowForecastFutureBalanceDateRecalculator::recalculateDay(this.TransactionDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOrCreateLedgerCovDocument</Name>
				<Source><![CDATA[
    private void updateOrCreateLedgerCovDocument()
    {
        TableId cashFlowExternalSourceEntryTableNum = TableNum(CashFlowExternalSourceEntry);

        CashFlowExternalSource extSource;
        CashFlowExternalSourceLegalEntity extSourceLE;

        select firstonly Name from extSource
            join extSourceLE
                where extSourceLE.RecId == this.ExternalSourceLegalEntity
                    && extSourceLE.ExternalSource == extSource.RecId;

        LedgerCovDocument ledgerCovDoc = LedgerCovDocument::findByTransTableIdAndTransRecId(cashFlowExternalSourceEntryTableNum, this.RecId, true);

        if (ledgerCovDoc)
        {
            ledgerCovDoc.TransDate = this.TransactionDate;
            ledgerCovDoc.Number = this.DocumentNumber;
            ledgerCovDoc.AccountNumber = this.AccountNumber;
            ledgerCovDoc.AccountName = this.AccountName;
            ledgerCovDoc.SubTypeName = extSource.Name;
            ledgerCovDoc.update();
        }
        else
        {
            ledgerCovDoc.TransTableId = cashFlowExternalSourceEntryTableNum;
            ledgerCovDoc.TransRecId = this.RecId;
            ledgerCovDoc.TransDate = this.TransactionDate;
            ledgerCovDoc.Type = LedgerCovDocumentType::ExternalSourceEntry;
            ledgerCovDoc.AccountingCurrency = Ledger::accountingCurrency();
            ledgerCovDoc.Number = this.DocumentNumber;
            ledgerCovDoc.AccountNumber = this.AccountNumber;
            ledgerCovDoc.AccountName = this.AccountName;
            ledgerCovDoc.SubTypeName = extSource.Name;
            ledgerCovDoc.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetEntryCovStatusForLegalEntity</Name>
				<Source><![CDATA[
    internal static void resetEntryCovStatusForLegalEntity(CashFlowExternalSourceLegalEntityRecId _extSourcelegalEntity)
    {
        CashFlowExternalSourceEntry extSourceEntry;

        update_recordset extSourceEntry
            setting CovStatus = 0
                where extSourceEntry.ExternalSourceLegalEntity == _extSourcelegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetEntryCovStatusForExtSource</Name>
				<Source><![CDATA[
    internal static void resetEntryCovStatusForExtSource(CashFlowExternalSourceRecId _extSource)
    {
        CashFlowExternalSource extSource;
        CashFlowExternalSourceLegalEntity extSourceLE;
        CashFlowExternalSourceEntry extSourceEntry;

        update_recordset extSourceEntry
            setting CovStatus = 0
                exists join extSourceLE
                    where extSourceEntry.ExternalSourceLegalEntity == extSourceLE.RecId
                        && extSourceLE.ExternalSource == _extSource;               
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@CashManagement:CashFlowExternalSourceEntryDevDoc</DeveloperDocumentation>
	<Label>@CashManagement:CashFlowExternalSourceEntry</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>EntryId</TitleField1>
	<TitleField2>Description</TitleField2>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EntryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EntryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EntryId</Name>
			<ExtendedDataType>CashFLowExternalSourceEntryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExternalSourceLegalEntity</Name>
			<ExtendedDataType>CashFlowExternalSourceLegalEntityRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransactionDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TransactionAmount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransactionCurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CovStatus</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNumber</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@CashManagement:DocumentNumber</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNumber</Name>
			<ExtendedDataType>String20</ExtendedDataType>
			<Label>@CashManagement:AccountNumber</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
			<Label>@CashManagement:AccountName</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EntryIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EntryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LegalEntityCovStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExternalSourceLegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CovStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransactionDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CashFlowExternalSourceLegalEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CashFlowExternalSourceLegalEntity</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CashFlowExternalSourceLegalEntity</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CashFlowExternalSourceEntryExternalSourceLegalEntity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerCovExternalSourceLegalEntity</Name>
					<Field>ExternalSourceLegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Role>LedgerCovExternalSourceEntryCurrency</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransactionCurrencyCode</Name>
					<Field>TransactionCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerCovExternalSourceEntryDimension</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>