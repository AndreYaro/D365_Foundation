<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyEndpointActionPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InterCompanyEndpointActionPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAllowUpdateOpenInterCompanyOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether existing inter-company orders are invoiced and displays a dialog for the user to
    /// decide whether to update.
    /// </summary>
    /// <returns>
    /// true if there are no intercompany orders that are not invoiced or if the user selects to continue
    /// the update; otherwise, false.
    /// </returns>
    public boolean checkAllowUpdateOpenInterCompanyOrders()
    {
        InterCompanyTradingPartner  interCompanyTradingPartner;
        PurchTable                  purchTable;
        SalesTable                  salesTable;

        boolean                     doUpdate = true;

        interCompanyTradingPartner = InterCompanyTradingPartner::find(this.InterCompanyTradingPartner);

        switch (interCompanyTradingPartner.TradingPartnerType)
        {
            case InterCompanyTradingPartnerType::Customer :
                select RecId from salesTable
                    index hint StatusCustAccIdx
                    where (salesTable.SalesStatus == SalesStatus::None
                            || salesTable.SalesStatus == SalesStatus::Backorder
                            || salesTable.SalesStatus == SalesStatus::Delivered)
                          && salesTable.CustAccount == interCompanyTradingPartner.custAccount();

                if (salesTable)
                {
                    doUpdate = (Box::yesNo("@SYS98138"+'\n'+
                                           "@SYS98140"+'\n\n'+
                                           "@SYS79387",DialogButton::No, "@SYS98139") == DialogButton::Yes);
                }
                break;

            case InterCompanyTradingPartnerType::Vendor :
                select RecId from purchTable
                    index hint StatusOrderAccIdx
                    where (purchTable.PurchStatus == PurchStatus::None
                            || purchTable.PurchStatus == PurchStatus::Backorder
                            || purchTable.PurchStatus == PurchStatus::Received)
                        && purchTable.OrderAccount == interCompanyTradingPartner.vendAccount();

                if (purchTable)
                {
                    doUpdate = (Box::yesNo("@SYS98138"+'\n'+
                                           "@SYS98140"+'\n\n'+
                                           "@SYS79387",DialogButton::No, "@SYS98139") == DialogButton::Yes);
                }
                break;
        }

        return doUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSalesAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a sales agreement that relates to the customer trading partners exists.
    /// </summary>
    /// <returns>
    /// true if a sales agreement that relates to the customer trading partners exists; otherwise, false.
    /// </returns>
    public boolean existSalesAgreement()
    {
        container                   companies;
        SalesAgreementHeader        salesAgreementHeader;
        InterCompanyTradingPartner  interCompanyTradingPartner;
        CustTable                   custTable;

        interCompanyTradingPartner = interCompanyTradingPartner::find(this.InterCompanyTradingPartner);
        if (interCompanyTradingPartner.RecId)
        {
            companies += interCompanyTradingPartner.CustomerDataAreaId;
            select firstonly crossCompany:companies RecId
                from custTable
                where custTable.Party      == interCompanyTradingPartner.CustomerParty
                    exists join salesAgreementHeader
                        where salesAgreementHeader.CustAccount         == custTable.AccountNum
                           && salesAgreementHeader.CustomerDataAreaId  == custTable.DataAreaId;
        }

        return custTable.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInterCompanyTradingPartner</Name>
				<Source><![CDATA[
        public InterCompanyTradingPartner getInterCompanyTradingPartner(boolean    _forUpdate = false)
    {
        return InterCompanyTradingPartner::find(this.InterCompanyTradingPartner);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateInterCompanyPolicyTransfer</Name>
				<Source><![CDATA[
        public InterCompanyEndpointActionPolicyTransfer getOrCreateInterCompanyPolicyTransfer(InterCompanyFieldTransferType   _fieldTransferType, boolean _forUpdate = false)
    {
        InterCompanyEndpointActionPolicyTransfer    interCompanyEndpointActionPolicyTransfer;

        if (this.RecId)
        {
            interCompanyEndpointActionPolicyTransfer = InterCompanyEndpointActionPolicyTransfer::findPolicyFieldType(this.RecId, _fieldTransferType, _forUpdate);

            if (!interCompanyEndpointActionPolicyTransfer)
            {
                interCompanyEndpointActionPolicyTransfer.initValue();
                interCompanyEndpointActionPolicyTransfer.InterCompanyEndpointActionPolicy = this.RecId;
                interCompanyEndpointActionPolicyTransfer.FieldTransferType                = _fieldTransferType;
                interCompanyEndpointActionPolicyTransfer.insert();
            }
        }

        return interCompanyEndpointActionPolicyTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
        public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InterCompanyEndpointActionPolicy, UnitPriceEqualsCostPrice) :

                if (this.UnitPriceEqualsCostPrice == NoYes::Yes && this.existSalesAgreement())
                {
                    warning(strFmtLB("@SYS334934"));
                }

            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in the <c>InterCompanyEndpointActionPolicy</c> table.
    /// </summary>
    public void update()
    {
        if (!this.UnitPriceEqualsCostPrice)
        {
            this.InvoiceOriginalSales = false;
        }

        if (!this.LedgerJournalNameIdCustPaym)
        {
            this.AutoPostCustPaym = false;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a field in the <c>InterCompanyEndpointActionPolicy</c> table.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate.
    /// </param>
    /// <returns>
    /// true if the value in the field is valid; otherwise, false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean         ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InterCompanyEndpointActionPolicy, SalesIdNumbering):
                if (this.SalesIdNumbering != InterCompanySalesIdNumbering::NumberSequence)
                {
                    this.SalesIdNumberSequence = 0;
                }
                break;

            case fieldNum(InterCompanyEndpointActionPolicy, UnitPriceEqualsCostPrice):
                if (!this.UnitPriceEqualsCostPrice)
                {
                    this.InvoiceOriginalSales = false;
                }
                break;

            case fieldNum(InterCompanyEndpointActionPolicy, LedgerJournalNameIdCustPaym):
                if (!this.LedgerJournalNameIdCustPaym)
                {
                    this.AutoPostCustPaym = false;
                }
                break;

            case fieldNum(InterCompanyEndpointActionPolicy, PriceDiscountSearchDerivedSalesLine):
                if (!this.PriceDiscountSearch && this.PriceDiscountSearchDerivedSalesLine)
                {
                    ret = checkFailed("@SCM:PriceDiscountSearchDerivedSalesLineValidateField");
                }

                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        static InterCompanyEndpointActionPolicy find(InterCompanyActionPolicyRecID  _interCompanyActionPolicyRecID,
                                                 boolean                        _forUpdate = false)
    {
        InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy;

        if (_interCompanyActionPolicyRecID)
        {
            interCompanyEndpointActionPolicy.selectForUpdate(_forUpdate);

            select firstonly interCompanyEndpointActionPolicy
                where interCompanyEndpointActionPolicy.RecId == _interCompanyActionPolicyRecID;
        }

        return interCompanyEndpointActionPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPartner</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InterCompanyEndpointActionPolicy</c> table by intercompany
    /// trading partners.
    /// </summary>
    /// <param name="_partnerRecId">
    /// The record ID of the <c>InterCompanyTradingPartner</c> record that relates to the value mapping.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InterCompanyEndpointActionPolicy</c> table; otherwise, an empty record.
    /// </returns>
    public static InterCompanyEndpointActionPolicy findPartner(InterCompanyTradingPartnerRecID   _partnerRecId,
                                                               boolean                           _forUpdate = false)
    {
        InterCompanyEndpointActionPolicy  interCompanyEndpointActionPolicy;

        if (_partnerRecId)
        {
            interCompanyEndpointActionPolicy.selectForUpdate(_forUpdate);

            select firstonly interCompanyEndpointActionPolicy
                where interCompanyEndpointActionPolicy.InterCompanyTradingPartner == _partnerRecId;
        }

        return interCompanyEndpointActionPolicy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeInterCompany</ConfigurationKey>
	<DeveloperDocumentation>@SYS124489</DeveloperDocumentation>
	<FormRef>InterCompanyTradingRelationSetupCustomer</FormRef>
	<Label>@SYS93825</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>InterCompanyTradingPartner</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>InterCompanyTradingPartnerIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>InterCompanyTradingPartnerIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InterCompanyEndpointActionPolicyTransfer</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>InterCompanyEndpointActionPolicyTransfer</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostSalesInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CopyAutoSumFromOriginalCust</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesIdNumbering</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesIdNumberSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitPriceEqualsCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceOriginalSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostPurchInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalNameIdCustPaym</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoPostCustPaym</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSalesPackingslip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSalesInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintPurchPackingslip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintPurchInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PickinglistAutoPrint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupAllocateAfter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterCompanyTradingPartner</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompanyPurchaseOrder</Name>
			<Label>@SYS93829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintPurchPackingslip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostPurchInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintPurchInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BypassVendorInvoiceWorkflowForIntercompanyVendorInvoices</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompanyPurchOrderMarkupAllocation</Name>
			<Label>@SYS310787</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarkupAllocateAfter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupInventoriedOnly</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompanySalesInvoicePosting</Name>
			<Label>@SYS93828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnitPriceEqualsCostPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceOriginalSales</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompanySalesOrderCreation</Name>
			<Label>@SYS93827</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesIdNumbering</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesIdNumberSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CopyAutoSumFromOriginalCust</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PickinglistAutoPrint</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OriginalSalesOrder</Name>
			<Label>@SYS93826</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintSalesPackingslip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostSalesInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintSalesInvoice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prices</Name>
			<Label>@SYS97433</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceDiscountSearch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceDiscountSearchDerivedSalesLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EditPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EditDiscount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesPayment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalNameIdCustPaym</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoPostCustPaym</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoPostCustPaym</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyAutoPostCustPaym</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CopyAutoSumFromOriginalCust</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyCopyAutoSumFromOriginalCust</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EditDiscount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyEditDiscount</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EditPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyEditPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InterCompanyTradingPartner</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyTradingPartnerRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InvoiceOriginalSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyInvoiceOriginalSales</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerJournalNameIdCustPaym</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyLedgerJournalNameIdCustPaym</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarkupAllocateAfter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MarkupAllocateAfter</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarkupInventoriedOnly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyMarkupInventoriedOnly</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PickinglistAutoPrint</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPickinglistAutoPrint</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostPurchInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPostPurchInvoice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostSalesInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPostSalesInvoice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceDiscountSearchDerivedSalesLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPriceDiscountSearchDerivedSalesLine</ExtendedDataType>
			<FeatureClass>IntrcmpSalesPriceAutoUpdFeature</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceDiscountSearch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPriceDiscountSearch</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintPurchInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPrintPurchInvoice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintPurchPackingslip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPrintPurchPackingslip</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintSalesInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPrintSalesInvoice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintSalesPackingslip</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyPrintSalesPackingslip</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesIdNumbering</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InterCompanySalesIdNumbering</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesIdNumberSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS23567</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UnitPriceEqualsCostPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterCompanyUnitPriceEqualsCostPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BypassVendorInvoiceWorkflowForIntercompanyVendorInvoices</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@AccountsPayable:BypassIntercompanyWorkflowForVendorInvoicesHelptext</HelpText>
			<Label>@AccountsPayable:BypassIntercompanyWorkflowForVendorInvoicesLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InterCompanyTradingPartnerIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InterCompanyTradingPartner</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InterCompanyTradingPartner</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InterCompanyTradingPartner</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InterCompanyTradingPartner</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InterCompanyTradingPartner_InterCompanyEndpointActionPolicy</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyTradingPartner</Name>
					<Field>InterCompanyTradingPartner</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalNameIdCustPaym</Name>
					<SourceEDT>InterCompanyLedgerJournalNameIdCustPaym</SourceEDT>
					<Field>LedgerJournalNameIdCustPaym</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<SourceEDT>InterCompanyLedgerJournalNameIdCustPaym</SourceEDT>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>LedgerJournalType::CustPayment</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequenceTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>NumberSequenceTable_SalesIdNumberSequence</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesIdNumberSequence</Name>
					<Field>SalesIdNumberSequence</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>