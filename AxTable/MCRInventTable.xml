<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRInventTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            // [field that needs defaulting,
            //      [fields that affect the default value]]

            [fieldNum(MCRInventTable, FTCExempt),
                [fieldNum(MCRInventTable, ContinuityScheduleId)]],

            [fieldNum(MCRInventTable, ContEventDuration),
                [fieldNum(MCRInventTable, ContinuityScheduleId)]],

            [fieldNum(MCRInventTable, SellStartDate),
                [fieldNum(MCRInventTable, ShipStartDate)]],

            [fieldNum(MCRInventTable, ShipStartDate),
                [fieldNum(MCRInventTable, SellStartDate)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default warehouse of this <c>MCRInventTable</c> record.
    /// If called for direct delivery it returns the DefaultDropShipmentWarehouse field of this record
    /// otherwise it returns the default location for the related InventTable record.
    /// </summary>
    /// <param name = "_isDirectDelivery">
    /// A Boolean indicating if the warehouse should be the default warehouse for direct delivery.
    /// </param>
    public InventLocationId getDefaultWarehouse(boolean _isDirectDelivery)
    {
        if (!_isDirectDelivery)
        {
            InventDim inventDim;
            InventDimId inventDimId;

            InventTable inventTable = InventTable::findRecId(this.InventTable);
            inventDim.InventSiteId = inventTable.inventItemOrderSetupMap(InventItemOrderSetupType::Sales).inventSiteId('', inventTable);

            if (inventDim.InventSiteId)
            {
                inventDimId = InventDim::findOrCreate(inventDim).InventDimId;
            }
            else
            {
                inventDimId = InventDim::inventDimIdBlank();
            }

            return inventTable.inventItemOrderSetupMap(InventItemOrderSetupType::Sales, inventDimId).inventLocationId('', inventTable, inventDim.InventSiteId);
        }
        else
        {
            return this.DefaultDropShipmentWarehouse;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(MCRInventTable, FTCExempt):
                if (this.ContinuityScheduleId)
                {
                    this.FTCExempt = NoYes::Yes;
                }
                else if (this.FTCExempt == NoYes::Yes)
                {
                    warning("@MCR12928");
                }
                break;

            case fieldNum(MCRInventTable, ContEventDuration):
                if (this.isFieldSet(fieldNum(MCRInventTable, ContinuityScheduleId)))
                {
                    this.ContEventDuration = 0;
                }                
                break;

            case fieldNum(MCRInventTable, SellStartDate):
                if (!this.SellStartDate
                    && this.isFieldSet(fieldNum(MCRInventTable, ShipStartDate))
                    && !this.isFieldSet(fieldNum(MCRInventTable, SellStartDate)))
                {
                    this.SellStartDate = this.ShipStartDate;
                }
                break;

            case fieldNum(MCRInventTable, ShipStartDate):
                if (!this.ShipStartDate
                    && this.isFieldSet(fieldNum(MCRInventTable, SellStartDate))
                    && !this.isFieldSet(fieldNum(MCRInventTable, ShipStartDate)))
                {
                    this.ShipStartDate = this.SellStartDate;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(MCRInventTable, SellStartDate):
            case fieldNum(MCRInventTable, ShipStartDate):
                this.fieldState(fieldNum(MCRInventTable, SellStartDate), FieldState::NotSet);
                this.fieldState(fieldNum(MCRInventTable, ShipStartDate), FieldState::NotSet);
                break;
            case fieldNum(MCRInventTable, ContinuityScheduleId):
                this.fieldState(fieldNum(MCRInventTable, ContinuityScheduleId), FieldState::NotSet);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the value of a field.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field being validated.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// true if the field being validated is valid; otherwise false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            // If a continuity schedule is entered, it must be active.
            case (fieldstr(MCRInventTable, ContinuityScheduleId)) :
                if (this.ContinuityScheduleId &&
                    !MCRContinuityScheduleHeader::find(this.ContinuityScheduleId).Active)
                {
                    ret = checkfailed("@MCR12131");
                }
                break;

            // Don't allow an event duration if the user has not populated
            // the continuity schedule.
            case (fieldstr(MCRInventTable, ContEventDuration)) :
                if (!this.ContinuityScheduleId && this.ContEventDuration)
                {
                    ret = checkfailed("@MCR12806");
                }
                break;

            case (fieldStr(MCRInventTable, InstallmentEligible)) :
                if (!this.InstallmentEligible
                    && MCRInstallmentSetup::exist(InventTable::findRecId(this.InventTable).ItemId))
                {
                    ret = checkFailed("@MCR30881");
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        // If the item is marked as eligible for installment
        // billing need to make sure it is not a continuity
        // item and doesn't have catch weight setup
        if (ret && this.InstallmentEligible && this.ContinuityScheduleID)
        {
            ret = checkFailed("@MCR30795");
        }

        if ((!this.ShipStartDate && this.SellStartDate) || (this.ShipStartDate && !this.SellStartDate))
        {
            ret = checkFailed("@MCR35405");
        }
        else if (this)
        {
            if (this.ShipStartDate < this.SellStartDate)
            {
                ret = checkFailed("@MCR34890");
            }
            if (this.SellEndDate && this.SellEndDate < this.ShipStartDate)
            {
                ret = checkFailed("@MCR34891");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>MCRInventTable</c> table.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID of the <c>MCRInventTable</c> table record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>MCRInventTable</c>; otherwise, an empty record.
    /// </returns>
    public static MCRInventTable findByItemId(ItemId _itemId, boolean _forUpdate = false)
    {
        MCRInventTable mcrInventTable;
        InventTable inventTable;

        mcrInventTable.selectForUpdate(_forUpdate);

        if (_itemId)
        {
            // Exists join caching will not cache values based on a join if
            // they are not already in cache since the kernel doesn't know
            // which of the two records didn't exist. So to allow the
            // cache to warm up and reduce RPC and SQL load, perform
            // seperate queries for the join.
            inventTable = inventTable::find(_itemId);

            if (inventTable.RecId)
            {
                select firstOnly mcrInventTable where mcrInventTable.InventTable == inventTable.RecId;
            }
        }
        return mcrInventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>MCRInventTable</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>MCRInventTable</c> table record to find.
    /// </param>
    /// <param name="_dataAreaId">
    /// The company of the <c>MCRInventTable</c> table record to find.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>MCRInventTable</c>; otherwise, an empty record.
    /// </returns>
    public static MCRInventTable findRecId(
        RecId       _recId,
        DataAreaId  _dataAreaId = curExt2dataareaid(tableNum(MCRInventTable)),
        boolean     _update     = false)
    {
        MCRInventTable  mcrInventTable;

        mcrInventTable.selectForUpdate(_update);

        if (_recId)
        {
            select firstonly crossCompany mcrInventTable
            where   mcrInventTable.RecId       == _recId
                &&  mcrInventTable.DataAreaId  == _dataAreaId;
        }

        return mcrInventTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@MCR40064</DeveloperDocumentation>
	<Label>@MCR40059</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>InventTable</TitleField1>
	<TitleField2>AllowPriceAdjust</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>InventTableIdx</ClusteredIndex>
	<DataSharingType>Single</DataSharingType>
	<Modules>Merchandising</Modules>
	<ReplacementKey>InventTableIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipAlone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SellEndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SellStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CouponUse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllowPriceAdjust</Name>
			<Label>@MCR34324</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowPriceAdjust</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllowReturn</Name>
			<Label>@MCR34326</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowReturn</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContEventDuration</Name>
			<Label>@MCR12801</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContEventDuration</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContinuityScheduleId</Name>
			<Label>@MCR12491</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContinuityScheduleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Coupon</Name>
			<Label>@MCR25483</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CouponUse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dates</Name>
			<Label>@SYS80293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SellStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SellEndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipStartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultDropShipmentWarehouse</Name>
			<Label>@MCR10392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDropShipmentWarehouse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DropShipment</Name>
			<Label>@MCR10392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DropShipment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FTCExempt</Name>
			<Label>@MCR12363</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FTCExempt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InstallmentEligible</Name>
			<Label>@MCR30655</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InstallmentEligible</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingBox</Name>
			<Label>@MCR22185</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsPackingBoxable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SellStartEndDates</Name>
			<Label>@MCR39797</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SellStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SellEndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShipAlone</Name>
			<Label>@MCR22289</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipAlone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShipDates</Name>
			<Label>@SYS177298</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipStartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorRebateItemGroup</Name>
			<Label>@MCR24930</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemVendRebateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowPriceAdjust</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>MCRCallCenter</ConfigurationKey>
			<Label>@MCR34324</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowReturn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>MCRCallCenter</ConfigurationKey>
			<Label>@MCR34326</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ContEventDuration</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContEventDuration</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContinuityScheduleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContinuityScheduleID</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CouponUse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRCouponRestriction</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultDropShipmentWarehouse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@MCR10460</Label>
			<SysSharingType>Optional</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DropShipment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRDropShipment</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FTCExempt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRFTCExempt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InstallmentEligible</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRInstallmentEligible</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRInventTableRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPackingBoxable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRIsPackingBoxable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemVendRebateGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TAMItemVendRebateGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SellEndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRSellEndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SellStartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRSellStartDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShipAlone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRShipAlone</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ShipStartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRShipStartDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>InventTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDropShipmentWarehouse</Name>
					<Field>DefaultDropShipmentWarehouse</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTableExpanded</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTableExpanded</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>Item</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MCRContinuityScheduleHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MCRContinuityScheduleHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContinuityScheduleId</Name>
					<Field>ContinuityScheduleId</Field>
					<RelatedField>ScheduleID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>MCRContinuityScheduleId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TAMItemVendRebateGroup</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>TAMItemVendRebateGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemVendRebateGroupId</Name>
					<SourceEDT>TAMItemVendRebateGroupId</SourceEDT>
					<Field>ItemVendRebateGroupId</Field>
					<RelatedField>ItemVendRebateGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TAMItemVendRebateGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventItemIdLookupSimpleView</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventItemIdLookupSimpleView</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>Item</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>