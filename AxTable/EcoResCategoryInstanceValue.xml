<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResCategoryInstanceValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResCategoryInstanceValue extends EcoResInstanceValue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;
        EcoResCategory ecoResCategory;

        ecoResCategory = EcoResCategory::find(this.Category);

        if (EcoResCategoryHierarchyRole::existRoleHierarchyPair(
                                                EcoResCategoryNamedHierarchyRole::Retail,
                                                ecoResCategory.CategoryHierarchy)
         || EcoResCategoryHierarchyRole::existRoleHierarchyPair(
                                                EcoResCategoryNamedHierarchyRole::RetailSpecialGroup,
                                                ecoResCategory.CategoryHierarchy)
         || EcoResCategoryHierarchyRole::existRoleHierarchyPair(
                                                EcoResCategoryNamedHierarchyRole::RetailChannelNavigation,
                                                ecoResCategory.CategoryHierarchy)                                            )
        {
            ret = this.Category && this.InstanceRelationType;
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(RefRecId _recId)
    {
        if (_recId && EcoResCategoryInstanceValue::exist(_recId))
            return true;

        return checkFailed(strfmt(EcoResCategoryInstanceValue::txtNotExist(), tablepname(EcoResCategoryInstanceValue), _recId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(RefRecId _recId)
    {
        return (EcoResCategoryInstanceValue::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the specified record in the <c>EcoResCategoryInstanceValue</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResCategoryInstanceValue</c> table; otherwise, an empty.
    /// </returns>
    public static EcoResCategoryInstanceValue find(RefRecId _recId, boolean _forupdate = false)
    {
        EcoResCategoryInstanceValue record;
        if (_recId)
        {
            record.selectForUpdate(_forupdate);
            select firstonly record where record.RecId == _recId;
        }
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategoryInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Category Instance Value in the <c>EcoResCategoryInstanceValue</c> table.
    /// </summary>
    /// <param name="_category">
    /// The category ID to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The legal entity ID to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>EcoResCategoryInstanceValue</c> table; otherwise, an empty record.
    /// </returns>
    public static EcoResCategoryInstanceValue findByCategoryInstance(RefRecId _category,RefRecId _legalEntity, boolean _forUpdate = false)
    {
        EcoResCategoryInstanceValue     ecoResCategoryInstanceValue = null;

        // disable LE requirement to enable global category instances
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
            && _category)
        {
            ecoResCategoryInstanceValue.selectForUpdate(_forUpdate);
            select firstonly ecoResCategoryInstanceValue
                where ecoResCategoryInstanceValue.Category == _category
                    && ecoResCategoryInstanceValue.BuyingLegalEntity == _legalEntity;
        }
        else
        {
            if (
               (!isConfigurationkeyEnabled(configurationKeyNum(Retail))
                &&
                _category && _legalEntity
                )
                )
            {
                ecoResCategoryInstanceValue.selectForUpdate(_forUpdate);
                select firstonly ecoResCategoryInstanceValue
                    where ecoResCategoryInstanceValue.Category == _category
                        && ecoResCategoryInstanceValue.BuyingLegalEntity == _legalEntity;
            }
        }
        return ecoResCategoryInstanceValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCategoryInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the category instance value in the <c>EcoResCategoryInstanceValue</c> table.
    /// </summary>
    /// <param name="_category">
    /// The category ID to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The legal entity ID to find.
    /// </param>
    /// <returns>
    /// A record ID of the <c>EcoResCategoryInstanceValue</c> table; otherwise, an empty record.
    /// </returns>
    public static RecId  insertCategoryInstance(RefRecId _category,RefRecId _legalEntity)
    {
        EcoResCategoryAttribute         localEcoResCategoryAttribute;
        EcoResAttributeDefaultValue     localEcoResAttributeDefaultValue;
        EcoResAttributeValue            localEcoResAttributeValue;
        EcoResCategoryInstanceValue     ecoResCategoryInstanceValue = null;

        ecoResCategoryInstanceValue = EcoResCategoryInstanceValue::findByCategoryInstance(_category, _legalEntity);

        ttsbegin;
        if (ecoResCategoryInstanceValue.RecId == 0)
        {
            ecoResCategoryInstanceValue.Category = _category;
            ecoResCategoryInstanceValue.BuyingLegalEntity = _legalEntity;
            ecoResCategoryInstanceValue.insert();
        }

        // Initialize the default value.
        while select Attribute from localEcoResCategoryAttribute
                    where localEcoResCategoryAttribute.Category  == _category
                        && localEcoResCategoryAttribute.Modifier == EcoResCategoryAttributeModifier::Category
                join Value from localEcoResAttributeDefaultValue
                    where localEcoResAttributeDefaultValue.Attribute == localEcoResCategoryAttribute.Attribute
                notexists join localEcoResAttributeValue
                    where localEcoResAttributeValue.Attribute       == localEcoResCategoryAttribute.Attribute
                       && localEcoResAttributeValue.InstanceValue   == ecoResCategoryInstanceValue.RecId
        {
            localEcoResAttributeValue.Attribute     = localEcoResCategoryAttribute.Attribute;
            localEcoResAttributeValue.InstanceValue = ecoResCategoryInstanceValue.RecId;
            localEcoResAttributeValue.Value         = EcoResValue::find(localEcoResAttributeDefaultValue.Value).pcDuplicate();
            localEcoResAttributeValue.insert();
        }
        ttscommit;

        return ecoResCategoryInstanceValue.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS327065";
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS317562</DeveloperDocumentation>
	<Label>@SYS304937</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Category</TitleField1>
	<TitleField2>RecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>EcoResInstanceValue</Extends>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>EcoResInstanceValueIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BuyingLegalEntity</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResInstanceValueIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LegalEntityIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CompanyInfo</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategoryInstanceValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyingLegalEntity</Name>
					<Field>BuyingLegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategory_EcoResCategoryInstanceValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InstanceValue_CategoryInstanceValue</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResInstanceValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>