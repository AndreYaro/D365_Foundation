<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductIdentifier</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductIdentifier extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existsByProductNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>EcoResProductIdentifier</c> table.
    /// </summary>
    /// <param name="_productNumber">
    /// The product number that identifies the <c>EcoResProductIdentifier</c> record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existsByProductNumber(EcoResProductNumber _productNumber)
    {
        return _productNumber
            && (select RecId from ecoResProductIdentifier
                    where ecoResProductIdentifier.ProductNumber == _productNumber).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProduct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResProductIdentificationCode</c> table.
    /// </summary>
    /// <param name="_product">
    ///    The ID of the <c>EcoResProduct</c> record to use as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResProductIdentifier</c> table; otherwise, an empty record.
    /// </returns>
    static EcoResProductIdentifier findByProduct(RefRecId _product, boolean _forUpdate = false)
    {
        EcoResProductIdentifier ecoResProductIdentifier;

        ecoResProductIdentifier.selectForUpdate(_forUpdate);

        if (_product)
        {
            select firstonly ecoResProductIdentifier
                where ecoResProductIdentifier.Product == _product;
        }
        return ecoResProductIdentifier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProductNumber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResProductIdentificationCode</c> table.
    /// </summary>
    /// <param name="_productNumber">
    ///    The <c>EcoResProductNumber</c> product number value to use as a filter.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResProductIdentifier</c> table; otherwise, an empty record.
    /// </returns>
    static EcoResProductIdentifier findByProductNumber(EcoResProductNumber _productNumber, boolean _forUpdate = false)
    {
        EcoResProductIdentifier ecoResProductIdentifier;

        ecoResProductIdentifier.selectForUpdate(_forUpdate);

        if (_productNumber)
        {
            select firstonly ecoResProductIdentifier
                where ecoResProductIdentifier.ProductNumber == _productNumber;
        }
        return ecoResProductIdentifier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS325333</DeveloperDocumentation>
	<FormRef>EcoResProductDetails</FormRef>
	<Label>@SYS133863</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProductNumber</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>EcoResProduct</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>ProductNumberIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResProduct</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProduct</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>EcoResProduct_EcoResProductIdentifier</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>