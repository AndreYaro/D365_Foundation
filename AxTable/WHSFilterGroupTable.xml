<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSFilterGroupTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSFilterGroupTable extends common
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>WHSFilterGroupTable</c> table exists.
    /// </summary>
    /// <param name="_whsFilterGroup">
    /// The filter group to find
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(WHSFilterGroup _whsFilterGroup)
    {
        return (_whsFilterGroup) &&
               (select firstonly whsFilterGroupTable
                where whsFilterGroupTable.FilterGroup == _whsFilterGroup).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSFilterGroupTable</c> table.
    /// </summary>
    /// <param name="_filterGroup">
    /// The filter goup of <c>WHSFilterGroupTable</c> to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSFilterGroupTable</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSFilterGroupTable find(WHSFilterGroup _filterGroup,
                                           boolean        _forupdate = false)
    {
        WHSFilterGroupTable    filterGroupTable;

        if (_filterGroup)
        {
            filterGroupTable.selectForUpdate(_forupdate);

            select firstonly filterGroupTable
                where filterGroupTable.FilterGroup == _filterGroup;
        }

        return filterGroupTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSFilterGroupTable</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>WHSFilterGroupTable</c> to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSFilterGroupTable</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSFilterGroupTable findByRecId(RecId   _recId,
                                                  boolean _forupdate = false)
    {
        WHSFilterGroupTable    filterGroupTable;

        if (_recId)
        {
            filterGroupTable.selectForUpdate(_forupdate);

            select firstonly filterGroupTable
                where filterGroupTable.RecId == _recId;
        }

        return filterGroupTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProductFilterGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSFilterGroupTable</c> table by product filter groups.
    /// </summary>
    /// <param name="_firstFilterGroup">
    /// The first filter goup of <c>WHSFilterGroupTable</c> to find.
    /// </param>
    /// <param name="_secondFilterGroup">
    /// The second filter goup of <c>WHSFilterGroupTable</c> to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSFilterGroupTable</c> table; otherwise, an empty record.
    /// </returns>
    /// <remarks>
    /// Searching on a collapsed edt filter group doesn't find a record, hence expanded field search is needed.
    /// Used in <c>WHSProductFilterGroupDetailEntity</c> data entity.
    /// </remarks>
    public static WHSFilterGroupTable findByProductFilterGroup(str            _firstFilterGroup, 
                                                               str            _secondFilterGroup,
                                                               boolean        _forupdate = false)
    {
        WHSFilterGroupTable    filterGroupTable;

        if (_firstFilterGroup || _secondFilterGroup)
        {
            filterGroupTable.selectForUpdate(_forupdate);

            select firstonly filterGroupTable
                where filterGroupTable.FilterGroup[1] == _firstFilterGroup
                    && filterGroupTable.FilterGroup[2] == _secondFilterGroup;
        }

        return filterGroupTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4355</DeveloperDocumentation>
	<Label>@WAX975</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FilterGroup</TitleField1>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>FilterGroup</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>FilterGroup</PrimaryIndex>
	<ReplacementKey>FilterGroup</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FilterGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FilterGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFilterGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FilterGroup</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FilterGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>