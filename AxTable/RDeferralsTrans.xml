<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deferralsBookName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets book name.
    /// </summary>
    /// <returns><c>RDeferralsBookName</c> object.</returns>
    public display RDeferralsBookName deferralsBookName()
    {
        return RDeferralsBookTable::find(this.DeferralsBookId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deferralsName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets deferral name.
    /// </summary>
    /// <returns><c>RDeferralsName</c> object.</returns>
    public display RDeferralsName deferralsName()
    {
        return RDeferralsTable::find(this.DeferralsId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and posts voucher trans.
    /// </summary>
    /// <param name = "_common">Table identificator.</param>
    /// <param name = "_ledgerVoucher">Voucher.</param>
    /// <param name = "_correct">Correcting or not.</param>
    public static void createTrans(Common             _common,
                                          LedgerVoucher      _ledgerVoucher,
                                          boolean            _correct = false)
    {
        RDeferralsPost   deferralsPost;

        deferralsPost = RDeferralsPost::construct(_common,
                                                  _ledgerVoucher,
                                                  RDeferralsTrans::getTransType(_common),
                                                  _correct);

        if (deferralsPost.canCreateDeferralsTrans())
        {
            deferralsPost.createTrans();
        }

        deferralsPost.post();
        deferralsPost.updateStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects deferral transaction.
    /// </summary>
    /// <param name = "_recId">Record Id.</param>
    /// <param name = "_forUpdate">Selection mode.</param>
    /// <returns><c>RDeferralsTrans</c> object.</returns>
    public static RDeferralsTrans find(RecId        _recId,
                                              boolean      _forUpdate = false)
    {
        RDeferralsTrans deferralsTrans;

        if (_recId)
        {
            deferralsTrans.selectForUpdate(_forUpdate);

            select firstonly deferralsTrans
                where deferralsTrans.RecId      == _recId;
        }

        return deferralsTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first <c>RDeferralsTrans</c> record that matches the specified criteria.
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <param name="_deferralsTransType">
    /// The specified transaction type.
    /// </param>
    /// <param name="_includeStorno">
    /// A Boolean value that indicates whether storno transactions should be included in the search.
    /// </param>
    /// <param name="_transDate">
    /// The specified transaction date.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the record is selected for udpate.
    /// </param>
    /// <returns>
    /// A record in the <c>RDeferralsTrans</c> table.
    /// </returns>
    public static RDeferralsTrans findFirstType(RDeferralsId        _deferralsId,
                                                RDeferralsBookId    _deferralsBookId,
                                                RDeferralsTransType _deferralsTransType,
                                                boolean             _includeStorno,
                                                TransDate           _transDate     = dateNull(),
                                                boolean             _forUpdate     = false)
    {
        RDeferralsTrans deferralsTrans;

        if (_deferralsId && _deferralsBookId)
        {
            deferralsTrans.selectForUpdate(_forUpdate);

            select firstonly deferralsTrans
                order by TransDate asc
                where deferralsTrans.DeferralsId        == _deferralsId         &&
                      deferralsTrans.DeferralsBookId    == _deferralsBookId     &&
                      deferralsTrans.TransType          == _deferralsTransType  &&
                      deferralsTrans.TransDate          >= _transDate           &&
                      (deferralsTrans.StornoRecId       == 0 || _includeStorno);
        }

        return deferralsTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the last <c>RDeferralsTrans</c> record that matches the specified criteria.
    /// </summary>
    /// <param name="_deferralsId">
    /// The deferrals ID of the <c>RDeferralsTable</c> record.
    /// </param>
    /// <param name="_deferralsBookId">
    /// The deferrals book ID of the <c>RDeferralsBookTable</c> record.
    /// </param>
    /// <param name="_deferralsTransType">
    /// The specified transaction type.
    /// </param>
    /// <param name="_includeStorno">
    /// A Boolean value that indicates whether storno transactions should be included in the search.
    /// </param>
    /// <param name="_transDate">
    /// The specified transaction date.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the record is selected for update.
    /// </param>
    /// <returns>
    /// A record in the <c>RDeferralsTrans</c> table.
    /// </returns>
    public static RDeferralsTrans findLastType(RDeferralsId        _deferralsId,
                                               RDeferralsBookId    _deferralsBookId,
                                               RDeferralsTransType _deferralsTransType,
                                               boolean             _includeStorno,
                                               TransDate           _transDate     = dateNull(),
                                               boolean             _forUpdate     = false)
    {
        RDeferralsTrans deferralsTrans;

        if (_deferralsId && _deferralsBookId)
        {
            deferralsTrans.selectForUpdate(_forUpdate);

            select firstonly deferralsTrans
                order by TransDate desc
                where deferralsTrans.DeferralsId        == _deferralsId         &&
                      deferralsTrans.DeferralsBookId    == _deferralsBookId     &&
                      deferralsTrans.TransType          == _deferralsTransType  &&
                      deferralsTrans.TransDate          >= _transDate           &&
                      (deferralsTrans.StornoRecId       == 0 || _includeStorno);
        }

        return deferralsTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransType</Name>
				<Source><![CDATA[
    private static RDeferralsTransType getTransType(Common _common)
    {
        switch (_common.TableId)
        {
            case tableNum(LedgerJournalTrans):
                return LedgerJournalTrans_RDeferrals::find(_common.RecId).TransType;
            case tablenum(RDeferralsBook):
                return RDeferralsTransType::Receipt;
        }
        throw error(strFmt("@SYS23396", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>transFirstDate</Name>
				<Source><![CDATA[
    public static date transFirstDate(RDeferralsId      _deferralsId,
                                             RDeferralsBookId  _deferralsBookId)
    {
        return (select minof(TransDate) from rDeferralsTrans
                    where rDeferralsTrans.DeferralsId     == _deferralsId       &&
                          rDeferralsTrans.DeferralsBookId == _deferralsBookId).TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transLastDate</Name>
				<Source><![CDATA[
    public static date transLastDate(RDeferralsId      _deferralsId,
                                            RDeferralsBookId  _deferralsBookId,
                                            boolean           _includeStorno = false)
    {
        return (select maxof(TransDate) from rDeferralsTrans
                    where rDeferralsTrans.DeferralsId     == _deferralsId       &&
                          rDeferralsTrans.DeferralsBookId == _deferralsBookId   &&
                         (rDeferralsTrans.StornoRecId     == 0 || _includeStorno)).TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the accounting date of the current transaction.
    /// </summary>
    /// <returns>
    /// The accounting date.
    /// </returns>
    public TransDate getAccountingDate()
    {
        TransDate accountingDate = this.RecId == 0 ? dateNull() : TransLink_RU::findSec(this.TableId, this.RecId).AccountingDate;

        return accountingDate ? accountingDate : this.TransDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS103721</DeveloperDocumentation>
	<FormRef>RDeferralsTrans</FormRef>
	<Label>@GLS115964</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DeferralsId</TitleField1>
	<TitleField2>DeferralsBookId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RDeferralsDateIdx</ClusteredIndex>
	<Modules>RDeferrals</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateGroup</Name>
			<Label>@SYS7402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferralsPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Deferrals</Name>
			<Label>@GLS103723</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>deferralsName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@GLS105293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetAccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Storno</Name>
			<Label>@GLS104842</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StornoRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransType</Name>
			<Label>@SYS21201</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValueModel</Name>
			<Label>@GLS103683</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeferralsBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>deferralsBookName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsSum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferralsBookId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsBookId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeferralsId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsId</ExtendedDataType>
			<GroupPrompt>@SYS13864</GroupPrompt>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeferralsPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsTransDate</ExtendedDataType>
			<Label>@GLS103753</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OffsetAccountType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23950</Label>
			<EnumType>LedgerJournalACType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StornoRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroupJournal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroupJournal</ExtendedDataType>
			<Label>@SYS21932</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsTransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RDeferralsTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalTransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OffsetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RDeferralsDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DeferralsId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeferralsBookId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VocherDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RDeferralsTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RDeferralsTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RDeferralsBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsBook</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RDeferralsTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsBookId</Name>
					<Field>DeferralsBookId</Field>
					<RelatedField>DeferralsBookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsId</Name>
					<Field>DeferralsId</Field>
					<RelatedField>DeferralsId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsBookTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RDeferralsBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsBookId</Name>
					<SourceEDT>RDeferralsBookId</SourceEDT>
					<Field>DeferralsBookId</Field>
					<RelatedField>DeferralsBookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BookIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RDeferralsTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RDeferralsTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeferralsId</Name>
					<SourceEDT>RDeferralsId</SourceEDT>
					<Field>DeferralsId</Field>
					<RelatedField>DeferralsId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RDeferralsIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RDeferralsTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RDeferralsTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RDeferralsTrans</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RDeferralsTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StornoRecId</Name>
					<Field>StornoRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>