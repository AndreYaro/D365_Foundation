<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustomerServiceSelectionField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRCustomerServiceSelectionField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    public static MCRCustomerServiceSelectionField findOrCreate(MCRCustomerServiceFormViewMode _viewMode, TableName _tableName, FieldName _fieldName)
    {
        MCRCustomerServiceSelectionField selectionFieldList = MCRCustomerServiceSelectionField::find(_viewMode, _tableName, _fieldName);

        if (selectionFieldList.RecId == 0)
        {
            selectionFieldList.ViewMode = _viewMode;
            selectionFieldList.TableName = _tableName;
            selectionFieldList.FieldName = _fieldName;
            selectionFieldList.insert();
        }

        return selectionFieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static MCRCustomerServiceSelectionField find(MCRCustomerServiceFormViewMode _viewMode, TableName _tableName, FieldName _fieldName, boolean _forUpdate = false)
    {
        MCRCustomerServiceSelectionField selectionFieldList;

        if (_forUpdate)
        {
            selectionFieldList.selectForUpdate(_forUpdate);
        }

        select firstonly selectionFieldList
            where selectionFieldList.ViewMode   == _viewMode
               && selectionFieldList.TableName == _tableName
               && selectionFieldList.FieldName == _fieldName;

        return selectionFieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        if (_fieldIdToCheck == fieldNum(MCRCustomerServiceSelectionField, TableName))
        {
            TableId tableId = tableName2Id(this.TableName);

            if (tableId == 0)
            {
                ret = checkFailed(strFmt('Table %1 does not exist', this.TableName));
            }
        }
        else if (_fieldIdToCheck == fieldNum(MCRCustomerServiceSelectionField, FieldName))
        {
            TableId tableId = tableName2Id(this.TableName);
            FieldId fieldId = fieldName2Id(tableId, this.FieldName);

            if (fieldId == 0)
            {
                ret = checkFailed(strFmt('Field %1 does not exist', this.FieldName));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        TableId tableId = tableName2Id(this.TableName);
        FieldId fieldId = fieldName2Id(tableId, this.FieldName);

        if (tableId == 0 || fieldId == 0)
        {
            ret = checkFailed(strFmt('Field %1.%2 does not exist', this.TableName, this.FieldName));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@MCRCustomerService:CustomerServiceSelectionFieldsTableLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>TableName</TitleField1>
	<TitleField2>FieldName</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ViewMode</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<EnumType>MCRCustomerServiceFormViewMode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableName</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>TableName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AlternateKey</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ViewMode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>