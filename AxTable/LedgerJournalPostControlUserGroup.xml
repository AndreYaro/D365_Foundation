<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalPostControlUserGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerJournalPostControlUserGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>LedgerJournalPostControlUserGroup</c> table
    ///    exists and displays an error if it does not.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userGroupId">
    ///    The user group ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(LedgerJournalNameId _ledgerJournalName, LedgerJournalPostControlUserGroupId _userGroupId)
    {
        boolean ret = true;

        if (!LedgerJournalPostControlUserGroup::exist(_ledgerJournalName, _userGroupId))
        {
            ret = checkFailed(strfmt(LedgerJournalPostControlUserGroup::txtNotExist(), _ledgerJournalName, _userGroupId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>LedgerJournalPostControlUserGroup</c> table
    ///    exists.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userGroupId">
    ///    The user group ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(LedgerJournalNameId _ledgerJournalName, LedgerJournalPostControlUserGroupId _userGroupId)
    {
        boolean found;

        found = (select firstonly
                    RecId
                from
                    ledgerJournalPostControlUserGroup
                where
                    ledgerJournalPostControlUserGroup.LedgerJournalName == _ledgerJournalName &&
                    ledgerJournalPostControlUserGroup.UserGroupId == _userGroupId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LedgerJournalPostControlUserGroup</c> table.
    /// </summary>
    /// <param name="_ledgerJournalName">
    ///    The ledger journal name of the record to find.
    /// </param>
    /// <param name="_userGroupId">
    ///    The user group ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LedgerJournalPostControlUserGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static LedgerJournalPostControlUserGroup find(
        LedgerJournalNameId _ledgerJournalName,
        LedgerJournalPostControlUserGroupId _userGroupId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerJournalPostControlUserGroup ledgerJournalPostControlUserGroup;

        ledgerJournalPostControlUserGroup.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerJournalPostControlUserGroup.concurrencyModel(_concurrencyModel);
        }

        if (_ledgerJournalName != '' && _userGroupId != '')
        {
            select firstonly
                ledgerJournalPostControlUserGroup
            where
                ledgerJournalPostControlUserGroup.LedgerJournalName == _ledgerJournalName &&
                ledgerJournalPostControlUserGroup.UserGroupId == _userGroupId;
        }

        return ledgerJournalPostControlUserGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>LedgerJournalPostControlUserGroup</c>
    ///    table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS114082";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126156</DeveloperDocumentation>
	<FormRef>LedgerJournalPostControl</FormRef>
	<Label>@SYS113959</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LedgerJournalName</TitleField1>
	<TitleField2>UserGroupId</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>LedgerJournalNameUserGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>AccountingFoundation</Modules>
	<PrimaryIndex>LedgerJournalNameUserGroupIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Group</Name>
			<Label>@SYS3815</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ControlEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastSetupTimestamp</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journal</Name>
			<Label>@SYS24010</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ControlEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS93153</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>LastSetupTimestamp</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UTCTimestamp</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerJournalName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalPostControlUserGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerJournalNameUserGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerJournalName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UserGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126155</EntityRelationshipRole>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalName</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>LedgerJournalPostControlUserGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalName</Name>
					<SourceEDT>LedgerJournalNameId</SourceEDT>
					<Field>LedgerJournalName</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserGroupInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserGroupId</Name>
					<SourceEDT>LedgerJournalPostControlUserGroupId</SourceEDT>
					<Field>UserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>