<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInventItemSectionLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInventItemSectionLocation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a caption based on whether the <c>ShelfId</c> value is available.
    /// </summary>
    /// <returns>
    /// A string caption.
    /// </returns>
    public str caption()
    {
        str ret;

        ret = super();

        if (this.ShelfId == "")
        {
            if (RetailStoreTable::exist(this.StoreId))
                ret = this.StoreId + " " + RetailStoreTable::find(this.StoreId).name() + " " + this.SectionId;
        }
        else
        {
            if (RetailStoreSection::exist(this.StoreId, this.SectionId))
                ret = RetailStoreSection::find(this.StoreId, this.SectionId).SectionId + " " + RetailStoreSection::find(this.StoreId, this.SectionId).Name + " " + this.ShelfId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the item name for a specified <c>ItemId</c> value.
    /// </summary>
    /// <returns>
    /// The item name for the specified <c>ItemId</c> value.
    /// </returns>
    display Name itemName()
    {
        return InventTable::find(this.ItemId).defaultProductName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sectionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the store name for a specified store ID and section ID.
    /// </summary>
    /// <returns>
    /// The store name for the specified store ID and section ID values.
    /// </returns>
    display Name sectionName()
    {
        return RetailStoreSection::find(this.StoreId, this.SectionId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shelfName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the staff name for a specified store ID, section ID, and shelf ID.
    /// </summary>
    /// <returns>
    /// The staff name for the specified store ID, section ID, and shelf ID values.
    /// </returns>
    display Name shelfName()
    {
        return RetailStoreShelf::find(this.StoreId, this.SectionId, this.ShelfId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id which is to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid; otherwise false.
    /// </returns>
    /// <remarks>
    /// Calls method <c>validateShowsSalesStatistics</c> to validate fields <c>ShowsSalesStatistics</c> from table <c>RetailInventItemSectionLocation</c>.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailInventItemSectionLocation, ShowsSalesStatistics))
        {
            ret = this.validateShowsSalesStatistics();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateShowsSalesStatistics</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the <c>ShowsSalesStatistics</c> field of the <c>RetailInventItemSectionLocation</c> table.
    /// </summary>
    /// <returns>
    /// true if the field is valid or does not have to be inserted; otherwise false.
    /// </returns>
    boolean validateShowsSalesStatistics()
    {
        RetailInventItemSectionLocation   itemSectionLocation;
        boolean ret = true;

        if (this.ShowsSalesStatistics == true)
        {
            select firstonly itemSectionLocation
            where   itemSectionLocation.ItemId == this.ItemId
            &&      itemSectionLocation.StoreId == this.StoreId
            &&      (itemSectionLocation.SectionId != this.SectionId
                    ||(itemSectionLocation.SectionId == this.SectionId
                    && itemSectionLocation.ShelfId != this.ShelfId))
            &&      itemSectionLocation.ShowsSalesStatistics == true;

            if (itemSectionLocation)
                ret = checkFailed(strFmt("@RET3976",itemSectionLocation.ItemId, itemSectionLocation.StoreId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInventItemSectionLocation</c> table.
    /// </summary>
    /// <param name="_itemId">
    /// The <c>ItemId</c> value of the record to find.
    /// </param>
    /// <param name="_storeId">
    /// The store ID of the record to find.
    /// </param>
    /// <param name="_sectionId">
    /// The section ID of the record to find.
    /// </param>
    /// <param name="_shelfId">
    /// The shelf ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInventItemSectionLocation</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInventItemSectionLocation find(ItemId _itemId,
                                                    RetailStoreId _storeId,
                                                    RetailSectionId _sectionId,
                                                    RetailShelfId _shelfId,
                                                    boolean _forUpdate = false)
    {
        RetailInventItemSectionLocation inventItemSectionLocation;

        if (_itemId && _storeId && _sectionId && _shelfId)
        {
            inventItemSectionLocation.selectForUpdate(_forUpdate);

            select firstonly inventItemSectionLocation
                index hint primaryIdx
                where inventItemSectionLocation.ItemId == _itemId
                   && inventItemSectionLocation.StoreId == _storeId
                   && inventItemSectionLocation.SectionId == _sectionId
                   && inventItemSectionLocation.ShelfId == _shelfId;
        }

        return inventItemSectionLocation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260584</DeveloperDocumentation>
	<FormRef>RetailInventItemSectionLocation</FormRef>
	<Label>@RET3135</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>itemId</TitleField1>
	<TitleField2>storeId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>primaryIdx</ClusteredIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>primaryIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showsSalesStatistics</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shelfId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>storeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>item</Name>
			<Label>@RET3059</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>itemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>section</Name>
			<Label>@RET3119</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sectionName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>shelf</Name>
			<Label>@RET3120</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>shelfId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shelfName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>statistics</Name>
			<Label>@RET3121</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>showsSalesStatistics</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>store</Name>
			<Label>@RET3088</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>storeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>itemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>sectionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSectionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>shelfId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailShelfId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>showsSalesStatistics</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailShowsSalesStatistics</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>storeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>primaryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>itemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>storeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>sectionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>shelfId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventItemBarcode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemBarcode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>itemId</Name>
					<Field>itemId</Field>
					<RelatedField>itemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>inventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>itemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>itemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>storeId</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>storeSection</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailStoreSection</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<Field>storeId</Field>
					<RelatedField>storeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>sectionId</Name>
					<Field>sectionId</Field>
					<RelatedField>sectionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>storeShelf</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailStoreShelf</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<Field>storeId</Field>
					<RelatedField>storeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>sectionId</Name>
					<Field>sectionId</Field>
					<RelatedField>sectionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>shelfId</Name>
					<Field>shelfId</Field>
					<RelatedField>shelfId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>