<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.ProdAutoPurchCollectPerVendor          	= NoYes::Yes;
		this.bomJournalDrawNegative                		= NoYes::Yes;
        this.LeanCostSplitLedgerVoucherTransactions 	= NoYes::Yes;
        this.LeanCostEnableFullBatchParallelization 	= NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables search per agreement when collecting per agreement is enabled.
    /// </summary>
    /// <param name="_fieldName">
    /// The fieldname that was changed.
    /// </param>
    /// <param name="_arrayIndex">
    /// The index in the array that was changed. This is used when the changed field is an array; optional.
    /// </param>
    /// <remarks>
    /// This method is executed when the value of a field has changed on the current record.
    /// </remarks>
    public void modifiedFieldValue(
        fieldName _fieldName,
        int       _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldId2name(tableNum(ProdParameters), fieldNum(ProdParameters,ProdAutoPurchCollectPerPurchAgreement)):
                // When collecting per agreement is enabled SearchPerAgreement should be enabled as well (implicitly).
                if (this.ProdAutoPurchCollectPerPurchAgreement)
                {
                    this.ProdAutoPurchSearchPurchAgreement = NoYes::Yes;
                }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.bomJournalDrawNegative = this.bomJournalReducePhysical ? NoYes::No : this.bomJournalDrawNegative;
        if (!this.ProdAutoPurchCollectPerVendor)
        {
            // When collection per vendor is disabled, there can't be neither collectionper buyer group
            // nor collection per agreement enabled
            this.ProdAutoPurchCollectPerBuyer               = NoYes::No;
            this.ProdAutoPurchCollectPerPurchAgreement      = NoYes::No;
        }
        super();
        flush ProdParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(
        fieldName _fieldName,
        int       _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(ProdParameters, LeanCostingTimeBucketPeriod):
                    if (this.LeanCostingTimeBucketPeriodUnit != LeanCostingTimeBucketPeriodUnit::None
                        && this.LeanCostingTimeBucketPeriod <= 0)
                    {
                        ret = checkFailed("@SYS318027");
                    }
                    if (this.LeanCostingTimeBucketPeriodUnit == LeanCostingTimeBucketPeriodUnit::None
                        && this.LeanCostingTimeBucketPeriod < 0)
                    {
                        ret = checkFailed("@SYS318028");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProdParameters find(boolean _forupdate = false)
    {
        ProdParameters parameter;

        parameter.selectForUpdate(_forupdate);

        select firstonly parameter
            index Key
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);
            ProdStatusParameters::checkExistCreate();
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public static NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Prod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefActivityId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the number sequence of the activity ID.
    /// </summary>
    /// <returns>
    /// A number sequence reference of the activity ID.
    /// </returns>
    public static NumberSequenceReference numRefActivityId()
    {
        // Returns number sequence reference for activity
        return NumberSeqReference::findReference(extendedTypeNum(PlanActivityId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefKanbanCardId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the number sequence of the kanban card ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference of the kanban card ID.
    /// </returns>
    public static NumberSequenceReference numRefKanbanCardId()
    {
        // Returns number sequence reference for production flows
        return NumberSeqReference::findReference(extendedTypeNum(KanbanCardId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefKanbanId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the number sequence of the kanban ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference of the kanban ID.
    /// </returns>
    public static NumberSequenceReference numRefKanbanId()
    {
        // Returns number sequence reference for kanban
        return NumberSeqReference::findReference(extendedTypeNum(KanbanId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefKanbanRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the number sequence of the kanban rule ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference of the kanban rule ID.
    /// </returns>
    public static NumberSequenceReference numRefKanbanRuleId()
    {
        // Returns number sequence reference for production flows
        return NumberSeqReference::findReference(extendedTypeNum(LeanReplenishmentRuleId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefLeanDocumentReceiptAdviceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the number sequence reference of the receipt lines that are created as subcontracting
    /// documents.
    /// </summary>
    /// <returns>
    /// The number sequence reference of the receipt lines that are created as subcontracting documents.
    /// </returns>
    public static NumberSequenceReference numRefLeanDocumentReceiptAdviceId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(LeanDocumentReceiptAdviceId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefProdCalcVoucherId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefProdCalcVoucherId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ProdCalcVoucherId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefProdId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefProdId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ProdId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefProdJobId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefProdJobId()
    {
        if (FeatureStateProvider::isFeatureEnabled(ProductionAndShopFloorJobIdNumberSeqFeature::instance()))
        {
            return NumberSeqReference::findReference(extendedTypeNum(ProductionAndShopFloorJobId));
        }
        else
        {
            return NumberSeqReference::findReference(extendedTypeNum(ProdJobId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefProdJournalId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefProdJournalId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ProdJournalId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefProdJournalVoucherId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefProdJournalVoucherId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ProdJournalVoucherId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfNumRefConsOrdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a number sequence reference for the consolidate order ID.
    /// </summary>
    /// <returns>
    /// A number sequence for the consolidate order.
    /// </returns>
    public static NumberSequenceReference pmfNumRefConsOrdId()
    {
        return NumberSeqReference::findReference(extendedtypenum(PmfConsOrdId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfNumRefProcessBatchId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference pmfNumRefProcessBatchId()
    {
        return NumberSeqReference::findReference(extendedtypenum(PmfProcessBatchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// If field ProdParameters.ProdParamInventDimLookup is set to ProdParamInventDimLookup::Site then the SiteId field in the InventDim record of
    /// supplied InventDimId is extracted and the InventDim record only containing this field is returned, else the default InventDim record is returned.
    /// </summary>
    /// <param name="_inventDimId">
    /// Id of the InventDim record to get the site from.
    /// </param>
    /// <returns>
    /// If field ProdParameters.ProdParamInventDimLookup is set to ProdParamInventDimLookup::Site then the SiteId field in the InventDim record of
    /// supplied InventDimId is extracted and the InventDim record only containing this field is returned, else the default InventDim record is returned.
    /// </returns>
    public static InventDimId resolveInventDimId(InventDimId _inventDimId)
    {
        InventDim           inventDim;
        InventDimId         inventDimId;
        ProdParameters      prodParameters = ProdParameters::find();

        inventDimId = _inventDimId;

        //Do not allow lookup on specific inventDimId if set to only seach on company level
        if (prodParameters.ProdParamInventDimLookup == ProdParamInventDimLookup::Company)
        {
            inventDimId = InventDim::inventDimIdBlank();
        }

        if (inventDimId != InventDim::inventDimIdBlank())
        {
            //Compose the dimension to search for
            if (prodParameters.ProdParamInventDimLookup == ProdParamInventDimLookup::Site)
            {
                inventDim.InventSiteId = InventDim::find(_inventDimId).InventSiteId;
            }

            inventDimId = InventDim::findOrCreate(inventDim).InventDimId;
        }

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@SYS124161</DeveloperDocumentation>
	<Label>@SYS25861</Label>
	<SingularLabel>@SYS25861</SingularLabel>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ProdTimeUnitOfMeasure</Name>
			<Relation></Relation>
			<Table>ProdTimeUnitOfMeasure</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemReservation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutomaticPurchaseCreation</Name>
			<Label>@SYS28446</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdAutoPurchCollectPerVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdAutoPurchCollectPerBuyer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdAutoPurchCollectPerPurchAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdAutoPurchSearchPurchAgreement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Create</Name>
			<Label>@SYS21847</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfitSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemReservation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdPostingType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultPickingListJournal</Name>
			<Label>@SYS55209</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMJournalDrawNegative</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMJournalReducePhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventControlProposal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventCostProdRecalcMulti</Name>
			<Label>@SYS4009911</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventCostProdRecalcMultiBundleSize</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SkipUpdateOfProdCalcTransWhenPosting</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LeanCostingTimeBucket</Name>
			<Label>@SYS318026</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeanCostingTimeBucketPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeanCostingTimeBucketPeriodUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ParameterLookup</Name>
			<Label>@SYS109013</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdParamInventDimLookup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShowSchedDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PmfBatchRouteNotifications</Name>
			<Label>@PRO2679</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PmfAlertNonStdVersionUsage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PmfBurden</Name>
			<Label>@PRO79</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PmfBurdenCostCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PmfCoByJournal</Name>
			<Label>@PRO938</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PmfBurdenCostCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductionFlow</Name>
			<Label>@SYS131795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductionFlowDefaultQuantityUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductionFlowDefaultTimeUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductionInstructionDocumentType</Name>
			<Label>@SYS132209</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductionInstructionDocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReportedAsFinishedJournal</Name>
			<Label>@SYS26712</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalAcceptError</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdAutoPickList</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RouteConsumptionJournal</Name>
			<Label>@SYS22751</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RouteAutoPickList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReportFinished</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LeanCostBatchProcessing</Name>
			<Label>@CostManagement:FieldGroup_ProdParameters_LeanCostBatchProcessing</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LeanCostSplitLedgerVoucherTransactions</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeanCostEnableFullBatchParallelization</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoReportFinished</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoReportFinished</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOMJournalDrawNegative</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDrawNegative</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOMJournalReducePhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventReducePhysical</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventControlProposal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdInventControlProposal</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventCostProdRecalcMultiBundleSize</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventCostProdRecalcMultiBundleSize</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemReservation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProdReservation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalAcceptError</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdJournalAcceptError</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LeanCostEnableFullBatchParallelization</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeanCostEnableFullBatchParallelization</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LeanCostingTimeBucketPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS318023</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LeanCostingTimeBucketPeriodUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LeanCostingTimeBucketPeriodUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LeanCostSplitLedgerVoucherTransactions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeanCostSplitLedgerVoucherTransactions</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PmfAlertNonStdVersionUsage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PMF</ConfigurationKey>
			<HelpText>@SCM:PmfAlertNonStandardVersionUsageDescription</HelpText>
			<Label>@PRO2678</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PmfBurdenCostCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PMF</ConfigurationKey>
			<ExtendedDataType>RouteCostCategoryId</ExtendedDataType>
			<HelpText>@SCM:PmfBurdenCostCategoryDescription</HelpText>
			<Label>@PRO2348</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdAutoPickList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoPicklist</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdAutoPurchCollectPerBuyer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoPurchCollectPerBuyer</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdAutoPurchCollectPerPurchAgreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoPurchCollectPerPurchAgreement</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdAutoPurchCollectPerVendor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoPurchCollectPerVendor</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdAutoPurchSearchPurchAgreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdAutoPurchSearchPurchAgreement</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdParamInventDimLookup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProdParamInventDimLookup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdPostingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProdPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductionFlowDefaultQuantityUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureRecId</ExtendedDataType>
			<Label>@SYS307495</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductionFlowDefaultTimeUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureRecId</ExtendedDataType>
			<Label>@SYS307497</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductionInstructionDocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdInstructionDocuTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProdWHSReleasePolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX:Field_ProdWHSReleasePolicy_Label</Label>
			<EnumType>ProdWHSReleasePolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProfitSet</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CostProfitSet</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RouteAutoPickList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdRouteAutoPickList</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipUpdateOfProdCalcTransWhenPosting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@CostManagement:Field_ProdParameters_SkipUpdateOfProdCalcTransWhenPosting</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShowSchedDateTimeWithUserTimeZone</Name>
			<FeatureClass>ProdApplyUserTimezoneOffsetFlight</FeatureClass>
			<HelpText>@SCM:ShowSchedDateTimeWithUserTimeZoneHelpText</HelpText>
			<Label>@SCM:ShowSchedDateTimeWithUserTimeZone</Label>
			<EnumType>ProdShowDateTimeTimeZone</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnitOfMeasureIdxTime</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductionFlowDefaultTimeUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnitOfMeasureIdxQty</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductionFlowDefaultQuantityUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DocuType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductionInstructionDocumentType</Name>
					<SourceEDT>ProdInstructionDocuTypeId</SourceEDT>
					<Field>ProductionInstructionDocumentType</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PmfBurdenCostCategory</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RouteCostCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PmfBurdenCostCategory</Name>
					<SourceEDT>RouteCostCategoryId</SourceEDT>
					<Field>PmfBurdenCostCategory</Field>
					<RelatedField>CostCategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>QuantityUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>QuantityUnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProdParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductionFlowDefaultQuantityUnit</Name>
					<Field>ProductionFlowDefaultQuantityUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TimeUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TimeUnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProdParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductionFlowDefaultTimeUnit</Name>
					<Field>ProductionFlowDefaultTimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>