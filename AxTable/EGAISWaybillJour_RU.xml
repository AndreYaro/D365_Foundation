<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EGAISWaybillJour_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EGAISWaybillJour_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeDeleted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current record can be deleted.
    /// </summary>
    /// <returns>
    ///    true if the the current record can be deleted; otherwise, false.
    /// </returns>
    public boolean canBeDeleted()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Outgoing
        && this.StatusIssue == EGAISWaybillStatusIssue_RU::Created
        && !EGAISOutgoingDocument_RU::existSourceRecId(this.RecId, EGAISDocumentType_RU::Waybill);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeEdited</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current record can be edited.
    /// </summary>
    /// <returns>
    ///    true if the the current record can be edited; otherwise, false.
    /// </returns>
    public boolean canBeEdited()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Outgoing
        && (  this.StatusIssue == EGAISWaybillStatusIssue_RU::Created
            || this.StatusIssue == EGAISWaybillStatusIssue_RU::AcceptanceError
            || this.StatusIssue == EGAISWaybillStatusIssue_RU::ConfirmationError)
        // no unsent documents
        && (select firstOnly EGAISOutgoingDocument_RU
                where EGAISOutgoingDocument_RU.SourceRecId == this.RecId
                   && EGAISOutgoingDocument_RU.DocumentType == EGAISDocumentType_RU::WayBill
                   && EGAISOutgoingDocument_RU.Status != EGAISOutgoingDocumentStatus_RU::Sent).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeRegistered</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current EGAIS waybill can be registered.
    /// </summary>
    /// <returns>
    ///    true if the the current EGAIS waybill can be registered; otherwise, false.
    /// </returns>
    public boolean canBeRegistered()
    {
        return this.RecId
        && this.Direction       == EGAISDocumentDirection_RU::Incoming
        && this.StatusReceipt   == EGAISWaybillStatusReceipt_RU::Confirmed
        && ((select firstOnly EGAISRequestRepealWB_RU
                where EGAISRequestRepealWB_RU.WaybillJour == this.RecId
                   && (   EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Created
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Sent
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Accepted
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Confirmed)).RecId == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInvoiceBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if an invoice can be posted for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if an invoice can be posted for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canInvoiceBePosted()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Incoming
        && (   this.StatusReceipt == EGAISWaybillStatusReceipt_RU::Registered
            || this.StatusReceipt == EGAISWaybillStatusReceipt_RU::ProductReceiptPosted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canProductReceiptBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if a product receipt can be posted for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if a product receipt can be posted for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canProductReceiptBePosted()
    {
        return this.RecId
        && this.Direction       == EGAISDocumentDirection_RU::Incoming
        && this.StatusReceipt   == EGAISWaybillStatusReceipt_RU::Registered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPurchBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the purchase order can be created for the EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true, if the purchase order can be created for the EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canPurchBeCreated()
    {
        EGAISWaybillLine_RU         waybillLine;
        EGAISWaybillSettlement_RU   settlement;

        select firstOnly RecId from waybillLine
        where waybillLine.WaybillJour == this.RecId
    exists join settlement
        where settlement.WaybillLine == waybillLine.RecId;

        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Incoming
        && this.StatusReceipt == EGAISWaybillStatusReceipt_RU::Received
        && waybillLine.RecId == 0
        && (select firstOnly EGAISWaybillActJour_RU
            where EGAISWaybillActJour_RU.WaybillJour == this.RecId
               && EGAISWaybillActJour_RU.Direction == EGAISDocumentDirection_RU::Outgoing
               && (   EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Created
                   || EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Sent
                   || EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Accepted)).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRegistrationBeCancelled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the registration can be cancelled for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if the registration can be cancelled for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canRegistrationBeCancelled()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Incoming
        && this.StatusReceipt == EGAISWaybillStatusReceipt_RU::Registered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRequestRepealWBBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the repeal request can be created for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if the repeal request can be created for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canRequestRepealWBBeCreated()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Incoming
        && this.StatusReceipt == EGAISWaybillStatusReceipt_RU::Confirmed
        && (select firstonly EGAISRequestRepealWB_RU
                where EGAISRequestRepealWB_RU.WaybillJour == this.RecId
                   && EGAISRequestRepealWB_RU.Direction == EGAISDocumentDirection_RU::Outgoing
                   && (   EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Created
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Sent
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Accepted
                       || EGAISRequestRepealWB_RU.StatusIssue == EGAISRequestRepealWBStatusIssue_RU::Confirmed)).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canReturnOrderBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if a return order can be created for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if a return order can be created for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canReturnOrderBeCreated()
    {
        EGAISWaybillActJour_RU      waybillActJour;
        EGAISConfirmTicket_RU       confirmTicket;
        boolean                     existsConfirmedAct = false;

        select firstonly RecId from waybillActJour
        where waybillActJour.WaybillJour == this.recId
           && waybillActJour.Direction == EGAISDocumentDirection_RU::Incoming
           && waybillActJour.WaybillAcceptStatus == EGAISWaybillAcceptStatus_RU::Accepted
        exists join confirmTicket
        where confirmTicket.WaybillActJour == waybillActJour.RecId
           && confirmTicket.Direction == EGAISDocumentDirection_RU::Outgoing
           && confirmTicket.StatusIssue == EGAISConfirmTicketStatusIssue_RU::Accepted;

        existsConfirmedAct = waybillActJour.RecId ? true : false;
        
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Outgoing
        && !this.ReturnOrderSalesId
        && (    this.StatusIssue == EGAISWaybillStatusIssue_RU::Unconfirmed
            || (   this.StatusIssue == EGAISWaybillStatusIssue_RU::Confirmed
                // there should be lines with Qty != RealQty:
        && (select firstonly EGAISWaybillLine_RU
                        where EGAISWaybillLine_RU.WaybillJour == this.RecId
                           && EGAISWaybillLine_RU.Qty != EGAISWaybillLine_RU.RealQty).RecId != 0
                // there should be 2 "Confirm tickets": one after sending of the waybill, another one - after accepting the received non-empty act:
        && (select count(RecId) from EGAISTicket_RU
                        where EGAISTicket_RU.SourceRecId == this.RecId
                           && EGAISTicket_RU.DocumentType == EGAISDocumentType_RU::WayBill
                           && EGAISTicket_RU.OperationName == EGAISHelper_RU::Confirm
                           && EGAISTicket_RU.OperationResult == EGAISConclusionType_RU::Accepted).RecId == 2
                // there should be confirmed act itself:
        && existsConfirmedAct));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canWaybillActBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if a waybill act can be created for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true if a waybill act can be created for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canWaybillActBeCreated()
    {
        return this.RecId
        && this.RegId
        && ((   this.Direction == EGAISDocumentDirection_RU::Incoming
             && this.StatusReceipt == EGAISWaybillStatusReceipt_RU::Received
             // there are no pending or processed acts
        && (select firstOnly EGAISWaybillActJour_RU
                     where EGAISWaybillActJour_RU.WaybillJour == this.RecId
                        && EGAISWaybillActJour_RU.Direction == EGAISDocumentDirection_RU::Outgoing
                        && (   EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Created
                            || EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Sent
                            || EGAISWaybillActJour_RU.StatusIssue == EGAISWaybillActStatusIssue_RU::Accepted)).RecId == 0)

            || (   this.Direction == EGAISDocumentDirection_RU::Outgoing
                && this.StatusIssue == EGAISWaybillStatusIssue_RU::Confirmed
                // there are no acts at all
        && (select firstOnly EGAISWaybillActJour_RU
                        where EGAISWaybillActJour_RU.WaybillJour == this.RecId).RecId == 0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canXmlBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the outgoing XML document can be created for the current EGAIS waybill.
    /// </summary>
    /// <returns>
    ///    true, if the outgoing XML document can be created for the current EGAIS waybill; otherwise, false.
    /// </returns>
    public boolean canXmlBeCreated()
    {
        return this.RecId
        && this.Direction == EGAISDocumentDirection_RU::Outgoing
        && (   this.StatusIssue == EGAISWaybillStatusIssue_RU::Created
            || this.StatusIssue == EGAISWaybillStatusIssue_RU::AcceptanceError
            || this.StatusIssue == EGAISWaybillStatusIssue_RU::ConfirmationError)
        // no unsent documents
        && (select firstOnly EGAISOutgoingDocument_RU
                where EGAISOutgoingDocument_RU.SourceRecId == this.RecId
                   && EGAISOutgoingDocument_RU.DocumentType == EGAISDocumentType_RU::WayBill
                   && EGAISOutgoingDocument_RU.Status != EGAISOutgoingDocumentStatus_RU::Sent).RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>consignee</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill consignee.
    /// </summary>
    /// <returns>
    ///    A record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill consignee.
    /// </returns>
    public EGAISClient_RU consignee()
    {
        return EGAISClient_RU::findRecId(this.Consignee);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPurchTablesPacked</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets packed map containing information about the purchase orders with which the current EGAIS waybill is settled.
    /// </summary>
    /// <returns>
    ///    Packed map containing information about the purchase orders with which the current EGAIS waybill is settled.
    /// </returns>
    public container getPurchTablesPacked()
    {
        EGAISWaybillSettlement_RU   settlement;
        EGAISWaybillLine_RU         waybillLine;
        Map                         mapTradeRecord = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Record);
        PurchTable                  purchTable;
        PurchLine                   purchLine;

        while select waybillLine
        where waybillLine.WaybillJour == this.RecId
    join settlement
        where settlement.WaybillLine == waybillLine.RecId
    join purchLine
        group by PurchId
        where purchLine.InventTransId == settlement.InventTransId
        {
            purchTable = purchLine.purchTable();
            mapTradeRecord.insert(purchTable.RecId, purchTable);
        }

        return mapTradeRecord.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFullySettled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the current EGAIS bill of lading is fully settled with the purchase order lines.
    /// </summary>
    /// <returns>
    /// true, if the current EGAIS bill of lading is fully settled with the purchase order lines; otherwise, false.
    /// </returns>
    public boolean isFullySettled()
    {
        EGAISWaybillLine_RU         waybillLine;
        EGAISWaybillSettlement_RU   settlement;

        while select Qty from waybillLine
        where waybillLine.WaybillJour == this.RecId
        {
            select sum(Qty) from settlement
            where settlement.WaybillLine == waybillLine.RecId;

            if (waybillLine.Qty != settlement.Qty)
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shipper</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill shipper.
    /// </summary>
    /// <returns>
    ///    A record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill shipper.
    /// </returns>
    public EGAISClient_RU shipper()
    {
        return EGAISClient_RU::findRecId(this.Shipper);
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplier</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill supplier.
    /// </summary>
    /// <returns>
    ///    A record in the <c>EGAISClient_RU</c> table corresponding to the EGAIS waybill supplier.
    /// </returns>
    public EGAISClient_RU supplier()
    {
        return EGAISClient_RU::findRecId(this.Supplier);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(EGAISWaybillNum_RU _waybillNum,
        EGAISWaybillDate_RU _waybillDate,
        RefRecId _shipper,
        RefRecId _consignee,
        boolean _throwErrorIfNotExist = false)
    {
        boolean ret = true;
        str     errorMsg;

        if (_waybillNum && _waybillDate && _shipper && _consignee &&
        !EGAISWaybillJour_RU::exist(_waybillNum, _waybillDate, _shipper, _consignee))
        {
            errorMsg = strFmt(EGAISWaybillJour_RU::txtNotExist(),
                          _waybillNum,
                          _waybillDate,
                          EGAISClient_RU::findRecId(_shipper).RegId,
                          EGAISClient_RU::findRecId(_consignee).RegId);

            if (_throwErrorIfNotExist)
            {
                throw error(errorMsg);
            }

            ret = checkFailed(errorMsg);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(EGAISWaybillNum_RU _waybillNum,
        EGAISWaybillDate_RU _waybillDate,
        RefRecId _shipper,
        RefRecId _consignee)
    {
        return _waybillNum && _waybillDate && _shipper && _consignee
        && (select firstonly RecId from EGAISWaybillJour_RU
                index hint NumDateShipperConsigneeIdx
                where EGAISWaybillJour_RU.WaybillNum    == _waybillNum
                    && EGAISWaybillJour_RU.WaybillDate  == _waybillDate
                    && EGAISWaybillJour_RU.Shipper      == _shipper
                    && EGAISWaybillJour_RU.Consignee    == _consignee).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static EGAISWaybillJour_RU find(EGAISWaybillNum_RU _waybillNum,
        EGAISWaybillDate_RU _waybillDate,
        RefRecId _shipper,
        RefRecId _consignee,
        boolean _forUpdate = false)
    {
        EGAISWaybillJour_RU     waybillJour;

        if (_waybillNum && _waybillDate && _shipper && _consignee)
        {
            if (_forUpdate)
            {
                waybillJour.selectForUpdate(_forUpdate);
            }

            select firstonly waybillJour
            index hint NumDateShipperConsigneeIdx
            where waybillJour.WaybillNum    == _waybillNum
                && waybillJour.WaybillDate  == _waybillDate
                && waybillJour.Shipper      == _shipper
                && waybillJour.Consignee    == _consignee;
        }

        return waybillJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRegId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>EGAISWaybillJour_RU</c> table for the specified EGAIS waybill registration ID.
    /// </summary>
    /// <param name="_regId">
    ///    EGAIS waybill registration ID.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the returned record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EGAISWaybillJour_RU</c> table.
    /// </returns>
    static EGAISWaybillJour_RU findByRegId(EGAISWaybillRegId_RU _regId,
        boolean _forUpdate = false)
    {
        EGAISWaybillJour_RU     waybillJour;

        if (_regId)
        {
            if (_forUpdate)
            {
                waybillJour.selectForUpdate(_forUpdate);
            }

            select firstonly waybillJour
            index hint RegIdx
            where waybillJour.RegId == _regId;
        }

        return waybillJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByReplyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>EGAISWaybillJour_RU</c> table based on the EGAIS reply identifier.
    /// </summary>
    /// <param name="_replyId">
    ///    EGAIS reply identifier.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EGAISWaybillJour_RU</c> table.
    /// </returns>
    public static EGAISWaybillJour_RU findByReplyId(
        EGAISReplyId_RU _replyId,
        boolean _forUpdate = false)
    {
        EGAISWaybillJour_RU     waybillJour;

        if (_replyId)
        {
            if (_forUpdate)
            {
                waybillJour.selectForUpdate(_forUpdate);
            }

            select firstonly waybillJour
            index hint ReplyIdx
            where waybillJour.ReplyId == _replyId;
        }

        return waybillJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static EGAISWaybillJour_RU findRecId(RefRecId _recId, boolean _forUpdate = false)
    {
        EGAISWaybillJour_RU     waybillJour;

        if (_recId)
        {
            waybillJour.selectForUpdate(_forUpdate);

            select firstonly waybillJour
                where waybillJour.RecId == _recId;
        }

        return waybillJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@EGAIS:EgaisBillOfLadingNumberDateShipperConsigneeDoesNot";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@EGAIS:TheEgaiswaybilljour_ruTableContainsInformationAbou</DeveloperDocumentation>
	<Label>@EGAIS:EgaisBillOfLadingJournalHeaders</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>WaybillNum</TitleField1>
	<TitleField2>WaybillDate</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>EGAIS</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Direction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Shipper</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Consignee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusReceipt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaybillNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdditionalNotes</Name>
			<Label>@SYS94241</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AddNote1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddNote2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddNote3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Counteragents</Name>
			<Label>@GLS103507</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Shipper</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Consignee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Supplier</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@WAX517</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Shipper</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Base</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EGAIS</Name>
			<Label>@EGAIS:Egais</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@EGAIS:EgaisBol</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaybillType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Identity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Version</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LoadPoint</Name>
			<Label>@GLS116002</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportLoadpoint</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaybillNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Shipper</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Consignee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Redirection</Name>
			<Label>@EGAIS:Redirection</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportRedirect</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS334090</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatusReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transport</Name>
			<Label>@GLS111070</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportCar</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportTrailer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportCustomer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportDriver</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportForwarder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UnitType</Name>
			<Label>@EGAIS:ProductType</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnitType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UnloadPoint</Name>
			<Label>@GLS115977</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportUnloadpoint</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AddNote1</Name>
			<ExtendedDataType>EGAISWaybillAddNote_RU</ExtendedDataType>
			<Label>@EGAIS:AdditionalNote1</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AddNote2</Name>
			<ExtendedDataType>EGAISWaybillAddNote_RU</ExtendedDataType>
			<Label>@EGAIS:AdditionalNote2</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AddNote3</Name>
			<ExtendedDataType>EGAISWaybillAddNote_RU</ExtendedDataType>
			<Label>@EGAIS:AdditionalNote3</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Base</Name>
			<ExtendedDataType>EGAISWaybillBase_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Consignee</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS100752</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Direction</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Visible>No</Visible>
			<EnumType>EGAISDocumentDirection_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Identity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISIdentity_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Note</Name>
			<ExtendedDataType>EGAISWaybillNote_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISWaybillRegId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISReplyId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReturnCustInvoiceJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReturnCustPackingSlipJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnOrderSalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Shipper</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS73079</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ShippingDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS112581</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceCustInvoiceJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusIssue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISWaybillStatusIssue_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusReceipt</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISWaybillStatusReceipt_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Supplier</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@EGAIS:Supplier</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportCar</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@EGAIS:VehicleDescription</HelpText>
			<Label>@GLS111078</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportCompany</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@SYS50732</HelpText>
			<Label>@SYS50733</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportCustomer</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@EGAIS:DescriptionOfCustomer</HelpText>
			<Label>@EGAIS:Customer</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportDriver</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@GLS222897</HelpText>
			<Label>@GLS107369</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportForwarder</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@EGAIS:NameOfForwarder</HelpText>
			<Label>@EGAIS:Forwarder</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportLoadpoint</Name>
			<ExtendedDataType>EGAISTransportLoadPoint_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportRedirect</Name>
			<ExtendedDataType>EGAISTransportRedirect_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportTrailer</Name>
			<ExtendedDataType>String255</ExtendedDataType>
			<HelpText>@EGAIS:DescriptionOfTrailer</HelpText>
			<Label>@EGAIS:Trailer</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportType</Name>
			<ExtendedDataType>String50</ExtendedDataType>
			<HelpText>@EGAIS:TypeOfTransportation</HelpText>
			<Label>@SYS24895</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportUnloadpoint</Name>
			<ExtendedDataType>EGAISTransportUnoadPoint_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UnitType</Name>
			<EnumType>EGAISWaybillUnitType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendPackingSlipJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Version</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISDocumentVersion_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WaybillDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISWaybillDate_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaybillNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISWaybillNum_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaybillType</Name>
			<EnumType>EGAISWaybillType_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumDateShipperConsigneeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WaybillNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaybillDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Shipper</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Consignee</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RegIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RegId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReplyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Consignee</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EGAISClient_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Consignee</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Consignee</Name>
					<Field>Consignee</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReturnCustInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReturnCustInvoiceJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnCustInvoiceJour</Name>
					<Field>ReturnCustInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReturnCustPackingSlipJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustPackingSlipJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnCustPackingSlipJour</Name>
					<Field>ReturnCustPackingSlipJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnOrderSalesId</Name>
					<Field>ReturnOrderSalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Shipper</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EGAISClient_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Shipper</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Shipper</Name>
					<Field>Shipper</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceCustInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceCustInvoiceJour</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceCustInvoiceJour</Name>
					<Field>SourceCustInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Supplier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EGAISClient_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Supplier</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Supplier</Name>
					<Field>Supplier</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceJour</Name>
					<Field>VendInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPackingSlipJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendPackingSlipJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPackingSlipJour</Name>
					<Field>VendPackingSlipJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>