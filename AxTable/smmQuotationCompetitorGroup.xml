<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmQuotationCompetitorGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmQuotationCompetitorGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ttsbegin;
        super();

        DirPartyRelationship::removeLegalEntityRelationship(this.Party, DirSystemRelationshipType::Competitor);
        // Auto delete party at backend
        DirParty::autoDeleteParty(this.Party);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyName</Name>
				<Source><![CDATA[
    public display DirPartyName dirPartyName()
    {
        DirPartyTable   dirPartyTable;
        DirPartyName    partyName;
        boolean         isSet = false;

        if (this.hasRelatedTable(identifierStr(IsPartyOf)))
        {
            dirPartyTable = this.relatedTable(identifierStr(IsPartyOf)) as DirPartyTable;

            //Check to make sure the fields we are accessing are selected.
            if (dirPartyTable && dirPartyTable.isFieldDataRetrieved(fieldstr(DirPartyTable, Name)))
            {
                partyName = dirPartyTable.Name;
                isSet = true;
            }
        }

        //If we aren't joined to DirPartyTable or it isn't selected, then do a query to get it.
        if (!isSet)
        {
            partyName = dirPartyTable::getName(this.Party);
        }

        return partyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;
        super();
        DirPartyRelationship::createLegalEntityRelationship(this.Party, this.DataAreaId, DirSystemRelationshipType::Competitor);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyType</Name>
				<Source><![CDATA[
    display DirPartyType partyType()
    {
        DirPartyTable   party;

        select InstanceRelationType from party where party.RecId == this.Party;

        return party.type();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPartyMatchIcon</Name>
				<Source><![CDATA[
    display DirPartyMatchIcon showPartyMatchIcon()
    {
        #resAppl
        int             icon;
        // Already saved
        if (this.RecId)
        {
            icon = #ImageDocumentationItemBlue;
        }
        else
        {
            // Existing
            if (this.Party && DirPartyTable::findRec(this.Party))
            {
                icon = #ImageWarning;
            }
            // New
            else
            {
                icon = #ImageMethodEmpty;
            }
        }
        return icon;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static smmQuotationCompetitorGroup find(DirPartyRecId _party, boolean _forupdate = false)
    {
        smmQuotationCompetitorGroup smmQuotationCompetitorGroup = null;

        if (_party)
        {
            smmQuotationCompetitorGroup.selectForUpdate(_forupdate);

            select firstonly smmQuotationCompetitorGroup
                   index hint Party
                   where smmQuotationCompetitorGroup.Party == _party;
        }

        return smmQuotationCompetitorGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCompetitorName</Name>
				<Source><![CDATA[
    public static smmQuotationCompetitorGroup findCompetitorName(Name _name, boolean _forupdate = false)
    {
        smmQuotationCompetitorGroup smmQuotationCompetitorGroup = null;
        DirPartyTable partyTable;

        if (_name)
        {
            smmQuotationCompetitorGroup.selectForUpdate(_forupdate);

            select firstonly smmQuotationCompetitorGroup
                join RecId from partyTable
                   where smmQuotationCompetitorGroup.Party == partyTable.RecId &&
                         partyTable.Name == _name;
        }

        return smmQuotationCompetitorGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRec</Name>
				<Source><![CDATA[
    public static smmQuotationCompetitorGroup findRec(recId _recId, boolean _forupdate = false)
    {
        smmQuotationCompetitorGroup smmQuotationCompetitorGroup = null;

        if (_recId)
        {
            smmQuotationCompetitorGroup.selectForUpdate(_forupdate);

            select firstonly smmQuotationCompetitorGroup
                   where smmQuotationCompetitorGroup.RecId == _recId;
        }

        return smmQuotationCompetitorGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsPartyOf</Name>
				<Source><![CDATA[
    public DirPartyTable IsPartyOf(DirPartyTable _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('IsPartyOf');
            }
            else
            {
                return this.setLink('IsPartyOf', _relatedTable);
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnInsert</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnInsert))]
    static void DocuRefOnInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(smmQuotationCompetitorGroup))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                _docuRef.Party                  = smmQuotationCompetitorGroup::findRec(_docuRef.RefRecId).Party;
                _docuRef.Author                 = DirPersonUser::current().PersonParty;
                _docuRef.ActualCompanyId        = curext();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124763</DeveloperDocumentation>
	<FormRef>smmQuotationCompetitorGroup</FormRef>
	<Label>@SYS79821</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Party</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Party</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>Party</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmQuotationCompetitors</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>smmQuotationCompetitors</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmSwotTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmSwotTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>dirPartyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>dirPartyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CompetitorGroup</Name>
			<Label>@SYS80456</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EPMiniPage</Name>
			<Label>@SYS108232</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ungrouped</Name>
			<Label>@MCR23892</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRFromMergedPartyID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmQuotationCompetitorDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MCRFromMergedPartyID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Party</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DirPartyTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRFromMergedPartyID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DirPartyMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Party</MapField>
					<MapFieldTo>Party</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>DirAddressBookParty</Name>
			<RelatedTable>DirAddressBookPartyAllView</RelatedTable>
			<RelatedTableRole>DirAddressBookPartyAllView</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>smmQuotationCompetitorGroup</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRFromMergedPartyID</Name>
					<Field>MCRFromMergedPartyID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IsPartyOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsQuotationCompetitorFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DirPartyView</Name>
			<EntityRelationshipRole>@SYS124765</EntityRelationshipRole>
			<RelatedTable>DirPartyView</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>