<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmQuotationAlternativeQuotations</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmQuotationAlternativeQuotations extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        SalesQuotationTable salesQuotationTable;
        smmOpportunityId    opportunityId;

        salesQuotationTable = SalesQuotationTable::find(this.LinkedQuotationId, true);

        // Check if the alternative quotation has already been linked.
        if (smmQuotationAlternativeQuotations::existLinked(this.LinkedQuotationId))
        {
            // This quotation has already been linked
            throw error("@SYS90249");
        }

        if (this.LinkedQuotationId == this.QuotationId)
        {
            // It is not possible to link quotation %1 with quotation %2
            throw error(strFmt("@SYS99982", this.LinkedQuotationId, this.QuotationId));
        }

        if (salesQuotationTable.BusRelAccount != SalesQuotationTable::find(this.QuotationId).BusRelAccount)
        {
            // Only quotations issued to the same business relation can be selected as an alternative quotation
            throw error("@SYS98985");
        }

        this.validateQuotationCanBeSelected(salesQuotationTable);

        if (salesQuotationTable.QuotationType != SalesQuotationTable::find(this.QuotationId).QuotationType)
        {
            // Only quotations of same 'Quotation type' can be selected
            throw error("@SYS99983");
        }

        if (salesQuotationTable.isTemplate() == true)
        {
            // Quotation template
            throw error("@SYS84501");
        }

        opportunityId = SalesQuotationTable::find(this.QuotationId).OpportunityId;
        if (salesQuotationTable.OpportunityId && salesQuotationTable.OpportunityId != opportunityId)
        {
            // Only quotations issued to the same opportunity can be selected as an alternative quotation
            throw error("@SYS105498");
        }

        super();

        // Synchronize opportunity Id
        salesQuotationTable.OpportunityId = opportunityId;
        salesQuotationTable.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQuotationCanBeSelected</Name>
				<Source><![CDATA[
    private void validateQuotationCanBeSelected(SalesQuotationTable _salesQuotationTable)
    {
        if (_salesQuotationTable.QuotationType == QuotationType::Sales && !_salesQuotationTable.canQuotationBeSelected())
        {
            // Only quotations with status 'Created' or 'Sent' can be selected
            throw error("@SYS99984");
        }
        else if (_salesQuotationTable.QuotationType == QuotationType::Project && !_salesQuotationTable.canQuotationBeSelected())
        {
            // Only quotations with status 'Created','Sent' or "Revised" can be selected
            throw error("@SYS4010144");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showCurrency</Name>
				<Source><![CDATA[
    display CustCurrencyCode showCurrency()
    {
        return SalesQuotationTable::find(this.LinkedQuotationId).CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showExpiryDate</Name>
				<Source><![CDATA[
    display smmQuotationExpiryDate showExpiryDate()
    {
        return SalesQuotationTable::find(this.LinkedQuotationId).QuotationExpiryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQuotationName</Name>
				<Source><![CDATA[
    display smmQuotationName showQuotationName()
    {
        return SalesQuotationTable::find(this.LinkedQuotationId).QuotationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQuotationStatus</Name>
				<Source><![CDATA[
    display SalesQuotationStatus showQuotationStatus()
    {
        if (!SalesQuotationTable::find(this.LinkedQuotationId))
        {
            return SalesQuotationStatus::Created;
        }
        else
        {
            return SalesQuotationTable::find(this.LinkedQuotationId).QuotationStatus;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showSalesResponsible</Name>
				<Source><![CDATA[
    display smmSalesResponsibleName showSalesResponsible()
    {
        return HcmWorker::find(SalesQuotationTable::find(this.LinkedQuotationId).WorkerSalesResponsible).PersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(smmQuotationId _quotationId)
    {
        return _quotationId && (select firstonly smmQuotationAlternativeQuotations
                    index QuotationIdx
                    where smmQuotationAlternativeQuotations.QuotationId == _quotationId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLinked</Name>
				<Source><![CDATA[
    public static boolean existLinked(smmQuotationId _linkedQuotationId)
    {
        return _linkedQuotationId && (select firstonly smmQuotationAlternativeQuotations
                    index LinkedQuotationIdx
                    where smmQuotationAlternativeQuotations.LinkedQuotationId == _linkedQuotationId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static smmQuotationAlternativeQuotations find(smmQuotationId   _quotationId,
                                                         boolean          _forupdate = false)
    {
        smmQuotationAlternativeQuotations   alternativeQuotations;

        if (_quotationId)
        {
            alternativeQuotations.selectForUpdate(_forupdate);
            alternativeQuotations.selectLocked(_forupdate);

            select firstonly alternativeQuotations
                index QuotationIdx
                where   alternativeQuotations.QuotationId         == _quotationId;
        }

        return alternativeQuotations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLinkedQuotation</Name>
				<Source><![CDATA[
    public static smmQuotationAlternativeQuotations findLinkedQuotation(smmQuotationIdLinked  _quotationId,
                                                                        boolean               _forupdate = false)
    {
        smmQuotationAlternativeQuotations   alternativeQuotations;

        if (_quotationId)
        {
            alternativeQuotations.selectForUpdate(_forupdate);
            alternativeQuotations.selectLocked(_forupdate);

            select firstonly alternativeQuotations
                index QuotationIdx
                where alternativeQuotations.LinkedQuotationId   == _quotationId;
        }

        return alternativeQuotations;
    }

]]></Source>
			</Method>
			<Method>
				<Name>peformJumpRef</Name>
				<Source><![CDATA[
    public static void peformJumpRef(QuotationId _quotationId)
    {

        MenuFunction getMenuFunction(QuotationType _quotationType)
        {
            if (_quotationType == QuotationType::Project)
            {
                return new MenuFunction(menuitemdisplaystr(SalesQuotationProjTable), MenuItemType::Display);
            }

            return new MenuFunction(menuitemdisplaystr(SalesQuotationTable), MenuItemType::Display);
        }

        if (_quotationId)
        {
            SalesQuotationTable salesQuotationTableAlt = SalesQuotationTable::find(_quotationId);

            if (salesQuotationTableAlt)
            {
                MenuFunction menuFunction;
                Args args = new Args();
                args.record(salesQuotationTableAlt);

                menuFunction = getMenuFunction(salesQuotationTableAlt.QuotationType);
                menuFunction.run(args);
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124651</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>SalesQuotationTable</FormRef>
	<Label>@SYS90096</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>QuotationId</TitleField1>
	<TitleField2>LinkedQuotationId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>QuotationIdx</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinkedQuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showSalesResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinkedQuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showSalesResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinkedQuotationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showSalesResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showQuotationStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showExpiryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quotation</Name>
			<Label>@SYS5864</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>QuotationInfo</Name>
			<Label>@SYS5864</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>showCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showExpiryDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QuotationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmQuotationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LinkedQuotationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmQuotationIdLinked</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>QuotationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>QuotationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LinkedQuotationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LinkedQuotationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LinkedSalesQuotation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SalesQuotationTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesQuotationTable_Linked</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>SalesQuotationTable_smmQuotationAlternativeQuotations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinkedQuotationId</Name>
					<SourceEDT>smmQuotationIdLinked</SourceEDT>
					<Field>LinkedQuotationId</Field>
					<RelatedField>QuotationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>QuotationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesQuotation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123872</EntityRelationshipRole>
			<RelatedTable>SalesQuotationTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QuotationId</Name>
					<SourceEDT>smmQuotationId</SourceEDT>
					<Field>QuotationId</Field>
					<RelatedField>QuotationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>