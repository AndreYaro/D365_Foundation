<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankTransCorrectionVoucherHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Tracks the history of bank account trans correction amount vouchers.
/// </summary>
public class BankTransCorrectionVoucherHistory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertCorrectionAmountVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tracks the bank account trans correction amount voucher.
    /// </summary>
    /// <param name = "_bankTransRecId">Bank account trans recId.</param>
    /// <param name = "_bankTransOriginalVoucher">Bank account trans voucher.</param>
    /// <param name = "_newVoucher">New Voucher for the correction amount.</param>
    /// <param name = "_reversed">Boolean value indicating whether the bank account trans with that correction voucher has been reversed.</param>
    internal static BankTransCorrectionVoucherHistory insertCorrectionAmountVoucher(
        RefRecId _bankTransRecId, 
        Voucher _bankTransOriginalVoucher, 
        Voucher _newVoucher,
        NoYes _reversed)
    {
        BankTransCorrectionVoucherHistory bankTransCorrectionVoucherHistory;

        bankTransCorrectionVoucherHistory.BankTransRecId = _bankTransRecId;
        bankTransCorrectionVoucherHistory.OriginalVoucher = _bankTransOriginalVoucher;
        bankTransCorrectionVoucherHistory.CorrectionAmountVoucher = _newVoucher;
        bankTransCorrectionVoucherHistory.Reversed = _reversed;

        bankTransCorrectionVoucherHistory.insert();

        return bankTransCorrectionVoucherHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findMostRecentCorrectionAmountVoucher</Name>
				<Source><![CDATA[
    internal static Voucher findMostRecentCorrectionAmountVoucher(RefRecId _bankTransRecId)
    {
        BankTransCorrectionVoucherHistory bankTransCorrectionVoucherHistory;

        select firstonly bankTransCorrectionVoucherHistory
            where bankTransCorrectionVoucherHistory.BankTransRecId == _bankTransRecId
                && bankTransCorrectionVoucherHistory.Reversed == NoYes::No;

        return bankTransCorrectionVoucherHistory.CorrectionAmountVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMostRecentCorretionAmountVoucher</Name>
				<Source><![CDATA[
    internal static void updateMostRecentCorretionAmountVoucher(RefRecId _bankTransRecId, Voucher _correctionAmountVoucher)
    {
        BankTransCorrectionVoucherHistory bankTransCorrectionVoucherHistory;

        select firstonly forUpdate bankTransCorrectionVoucherHistory
            where bankTransCorrectionVoucherHistory.BankTransRecId == _bankTransRecId
                && bankTransCorrectionVoucherHistory.CorrectionAmountVoucher == _correctionAmountVoucher
                && bankTransCorrectionVoucherHistory.Reversed == NoYes::No;

        bankTransCorrectionVoucherHistory.Reversed = NoYes::Yes;
        bankTransCorrectionVoucherHistory.doUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the voucher exists for given bank account trans.
    /// </summary>
    /// <param name = "_bankTransRecId">Bank account trans recId.</param>
    /// <returns>true if the voucher exists for given bank account trans; otherwise, false.</returns>
    internal static boolean exist(RefRecId _bankTransRecId)
    {
        return BankTransCorrectionVoucherHistory::findMostRecentCorrectionAmountVoucher(_bankTransRecId)!= '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankTransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginalVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@SYS28582</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectionAmountVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@CashManagement:BankTransCorrectionAmountVoucher</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reversed</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@SYS54594</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>