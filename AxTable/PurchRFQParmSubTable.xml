<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQParmSubTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQParmSubTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromPurchRFQParmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchRFQParmSubTable</c> record that has values that are based on a
    /// <c>PurchRFQParmTable</c> record.
    /// </summary>
    /// <param name="_purchRFQParmTable">
    /// A <c>PurchRFQParmTable</c> record buffer.
    /// </param>
    void  initFromPurchRFQParmTable(PurchRFQParmTable  _purchRFQParmTable)
    {
        this.ParmId         = _purchRFQParmTable.ParmId;
        this.TableRefId     = _purchRFQParmTable.TableRefId;
        this.rfqName        = _purchRFQParmTable.rfqName;

        this.initFromPurchRFQTable(_purchRFQParmTable.purchRFQTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchRFQTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchRFQParmSubTable</c> record that has values that are based on a
    /// <c>PurchRFQTable</c> record.
    /// </summary>
    /// <param name="_purchRFQTable">
    /// A <c>PurchRFQTable</c> record buffer.
    /// </param>
    void  initFromPurchRFQTable(PurchRFQTable  _purchRFQTable)
    {
        this.rfqId = _purchRFQTable.rfqId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the <c>PurchRFQTable</c> record that is associated with the current
    ///    <c>PurchRFQParmSubTable</c> record.
    /// </summary>
    /// <param name="_update">
    ///    A Boolean that indicates whether the <c>purchRFQTable</c> must be selected for update.
    /// </param>
    /// <returns>
    ///    A <c>PurchRFQTable</c> record buffer.
    /// </returns>
    PurchRFQTable purchRFQTable(boolean  _update = false)
    {
        return PurchRFQTable::find(this.rfqId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromPurchRFQParmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>PurchRFQParmSubTable</c> record that has values that are based on a
    /// <c>PurchRFQParmTable</c> record.
    /// </summary>
    /// <param name="_purchRFQParmTable">
    /// A <c>PurchRFQParmTable</c> record buffer.
    /// </param>
    static void  createFromPurchRFQParmTable(PurchRFQParmTable _purchRFQParmTable)
    {
        PurchRFQParmSubTable   purchRFQParmSubTable;

        ttsbegin;
        purchRFQParmSubTable.clear();
        purchRFQParmSubTable.initValue();
        purchRFQParmSubTable.initFromPurchRFQParmTable(_purchRFQParmTable);
        purchRFQParmSubTable.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteIfNoParmLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all of the <c>PurchRFQParmSubTable</c> records that do not have a corresponding
    /// <c>PurchRFQParmSubTable</c> record.
    /// </summary>
    /// <param name="_rfqId">
    /// The RFQ ID of a <c>PurchRFQParmLine</c> record.
    /// </param>
    /// <param name="_parmId">
    /// The parameter ID of a <c>PurchRFQParmLine</c> record.
    /// </param>
    static void deleteIfNoParmLines(PurchRFQId  _rfqId,
                                           ParmId      _parmId)
    {
        PurchRFQParmLine       purchRFQParmLine;
        PurchRFQParmSubTable   purchRFQParmSubTable;

        select firstonly RecId
        from   purchRFQParmLine
            where purchRFQParmLine.rfqId    == _rfqId &&
                  purchRFQParmLine.ParmId   == _parmId;

        if (!purchRFQParmLine.RecId)
        {
            ttsbegin;
            delete_from purchRFQParmSubTable where
                purchRFQParmSubTable.ParmId == _parmId &&
                purchRFQParmSubTable.rfqId  == _rfqId;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a <c>purchRFQParmSubTable</c> record exists.
    /// </summary>
    /// <param name="_parmId">
    ///    The ID of a <c>purchRFQParmSubTable</c> record.
    /// </param>
    /// <param name="_tableRefId">
    ///    The reference table ID of a <c>purchRFQParmSubTable</c> record.
    /// </param>
    /// <param name="_rfqId">
    ///    The RFQ ID of a <c>purchRFQParmSubTable</c> record.
    /// </param>
    /// <returns>
    ///    true if the <c>purchRFQParmSubTable</c> record exists; otherwise, false.
    /// </returns>
    static boolean  exist(ParmId            _parmId,
                          TradeLineRefId    _tableRefId,
                          PurchRFQId        _rfqId)
    {
        if (_parmId  &&  _tableRefId && _rfqId)
        {
            return (select firstonly RecId from purchRFQParmSubTable
                        where purchRFQParmSubTable.ParmId       == _parmId
                           && purchRFQParmSubTable.TableRefId   == _tableRefId
                           && purchRFQParmSubTable.rfqId        == _rfqId
                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a <c>PurchRFQParmSubTable</c> record.
    /// </summary>
    /// <param name="_parmId">
    ///    The parameter ID of a <c>PurchRFQParmSubTable</c> record.
    /// </param>
    /// <param name="_tableRefId">
    ///    The reference table ID of a <c>PurchRFQParmSubTable</c> record.
    /// </param>
    /// <param name="_rfqId">
    ///    The RFQ ID of a <c>PurchRFQParmSubTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the <c>PurchRFQParmSubTable</c> record is to be selected for
    ///    update.
    /// </param>
    /// <returns>
    ///    A <c>PurchRFQParmSubTable</c> record buffer.
    /// </returns>
    static PurchRFQParmSubTable find(ParmId         _parmId,
                                  TradeLineRefId    _tableRefId,
                                  PurchRFQId        _rfqId,
                                  boolean           _forUpdate = false)
    {
        PurchRFQParmSubTable  purchRFQParmSubTable;

        if (_parmId && _tableRefId && _rfqId)
        {
            if (_forUpdate)
                purchRFQParmSubTable.selectForUpdate(_forUpdate);

            select firstonly purchRFQParmSubTable
                where purchRFQParmSubTable.ParmId          == _parmId
                   && purchRFQParmSubTable.TableRefId      == _tableRefId
                   && purchRFQParmSubTable.rfqId           == _rfqId;
        }

        return purchRFQParmSubTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124597</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS105956</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>RFQId</TitleField1>
	<TitleField2>RFQName</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmTableRefIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>ParmTableRefIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PurchRFQParmLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PurchRFQParmLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RfqTable</Name>
			<Label>@SYS102808</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFQId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFQName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmTableRefIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RFQId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PurchRFQParmTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchRFQParmTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQParmTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchRFQParmTable_PurchRFQParmSubTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableRefId</Name>
					<Field>TableRefId</Field>
					<RelatedField>TableRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<NavigationPropertyMethodNameOverride>PurchRFQTableRelation</NavigationPropertyMethodNameOverride>
			<RelatedTable>PurchRFQTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchRFQParmSubTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFQId</Name>
					<SourceEDT>PurchRFQId</SourceEDT>
					<Field>RFQId</Field>
					<RelatedField>RFQId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RFQIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>