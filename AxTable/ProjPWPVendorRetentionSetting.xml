<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPWPVendorRetentionSetting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjPWPVendorRetentionSetting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAccountRelation</Name>
				<Source><![CDATA[
        boolean  checkAccountRelation()
    {
        boolean  ok = true;

        switch (this.AccountCode)
        {
            case TableGroupAll::Table :
                if (!VendTable::exist(this.VendorRelation))
                {
                    str errorMessage = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled() ? "@Proj:MissingVendorValueInPWPSettings" : "@SYS17074";
                    ok = checkFailed(errorMessage);
                }
                break;

            case TableGroupAll::GroupId :
                if (!VendGroup::exist(this.VendorRelation))
                {
                    str errorMessage = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled() ? "@Proj:MissingVendorValueInPWPSettings" : "@SYS17074";
                    ok = checkFailed(errorMessage);
                }
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkThresholdPercent</Name>
				<Source><![CDATA[
        boolean checkThresholdPercent()
    {
        boolean     ok = true;

        if (this.PwpThresholdPercent > 100)
        {
            ok = checkFailed("@PSA11267");
        }
        if (this.PwpThresholdPercent < 0)
        {
            ok = checkFailed("@PSA11271");
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
        public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjPWPVendorRetentionSetting, AccountCode):
                this.VendorRelation = "";
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case(fieldNum(ProjPWPVendorRetentionSetting, PwpThresholdPercent)) :
                ret = this.checkThresholdPercent();
                break;

            case(fieldNum(ProjPWPVendorRetentionSetting, VendorRelation)) :
                ret = this.checkAccountRelation();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        boolean  validateWrite()
    {
        boolean ok = super();

        if (!this.checkAccountRelation())
        {
            ok = false;
        }

        if (ok && !this.ProjId && ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
        {
            ok = checkFailed("@Proj:MissingProjIdError");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                 from
                     projPWPVendorRetentionSetting
                 where
                     projPWPVendorRetentionSetting.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProjVendAccountCode</Name>
				<Source><![CDATA[
        static ProjPWPVendorRetentionSetting findByProjVendAccountCode(ProjId _projId,
        VendAccount   _vendAccount,
        TableGroupAll _tableGroupAll = TableGroupAll::All)
    {
        ProjPWPVendorRetentionSetting   projPWPVendorRetentionSetting;

        select firstOnly projPWPVendorRetentionSetting
            where projPWPVendorRetentionSetting.ProjId          == _projId
                && projPWPVendorRetentionSetting.VendorRelation == _vendAccount
                && projPWPVendorRetentionSetting.AccountCode    == _tableGroupAll;

        return projPWPVendorRetentionSetting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProjVendor</Name>
				<Source><![CDATA[
        static ProjPWPVendorRetentionSetting findByProjVendor(ProjId _projId, VendAccount _vendAccount)
    {
        ProjPWPVendorRetentionSetting   projPWPVendorRetentionSetting;
        VendGroupId                     vendGroupId;

        if (_projId && _vendAccount)
        {
            select firstOnly projPWPVendorRetentionSetting
                where projPWPVendorRetentionSetting.ProjId          == _projId
                    && projPWPVendorRetentionSetting.VendorRelation == _vendAccount
                    && projPWPVendorRetentionSetting.AccountCode    == TableGroupAll::Table;

            if (!projPWPVendorRetentionSetting)
            {
                vendGroupId = VendTable::find(_vendAccount).VendGroup;

                select firstOnly projPWPVendorRetentionSetting
                    where projPWPVendorRetentionSetting.ProjId          == _projId
                        && projPWPVendorRetentionSetting.VendorRelation == vendGroupId
                        && projPWPVendorRetentionSetting.AccountCode    == TableGroupAll::GroupId;

                if (!projPWPVendorRetentionSetting)
                {
                    select firstOnly projPWPVendorRetentionSetting
                        where projPWPVendorRetentionSetting.ProjId       == _projId
                            && projPWPVendorRetentionSetting.AccountCode == TableGroupAll::All;
                }
            }
        }

        return projPWPVendorRetentionSetting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
        static ProjPWPVendorRetentionSetting findRecId(recId    _recId,
                                          boolean  _forUpdate = false)
    {
        ProjPWPVendorRetentionSetting projPWPVendorRetentionSetting;

        if (_recId)
        {
            projPWPVendorRetentionSetting.selectForUpdate(_forUpdate);

            select firstonly projPWPVendorRetentionSetting
                where projPWPVendorRetentionSetting.RecId == _recId;
        }
        return projPWPVendorRetentionSetting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPwpThresholdPercent</Name>
				<Source><![CDATA[
        static PSAPercent getPwpThresholdPercent(ProjId _projId, NoYes _isPwp, VendAccount _vendAccount)
    {
        ProjPWPVendorRetentionSetting   projPWPVendorRetentionSetting;
        PSAPercent                      pwpThresholdPercent;

        if (_isPwp)
        {
            projPWPVendorRetentionSetting = ProjPWPVendorRetentionSetting::findByProjVendor(_projId, _vendAccount);
            if (projPWPVendorRetentionSetting)
            {
                pwpThresholdPercent = projPWPVendorRetentionSetting.PwpThresholdPercent;
            }
            else
            {
                pwpThresholdPercent = 100;
            }
        }
        return pwpThresholdPercent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@PSA11219</DeveloperDocumentation>
	<Label>@SYS338914</Label>
	<TitleField1>VendorRelation</TitleField1>
	<TitleField2>PwpThresholdPercent</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PwpThresholdPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS315099</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PwpThresholdPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS12243</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PwpThresholdPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>PSAPercent</ExtendedDataType>
			<Label>@PSA11212</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PSAPurchRetainScheduleId</ExtendedDataType>
			<Label>@PSA11202</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendRel</ExtendedDataType>
			<Label>@PSA11211</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountCodeVendorRelationIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PSAVendorRetentionTermsTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PSAVendorRetentionTermsTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RuleId</Name>
					<SourceEDT>PSAPurchRetainScheduleId</SourceEDT>
					<Field>RuleId</Field>
					<RelatedField>VendorRetentionTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>VendorRetentionTermIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorRelation</Name>
					<Field>VendorRelation</Field>
					<RelatedField>VendGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorRelation</Name>
					<Field>VendorRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>