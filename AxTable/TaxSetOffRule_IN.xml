<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSetOffRule_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxSetOffRule_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        TaxSetOffRule_IN taxSetOffRule;

        if (this.Column == 1)
        {
            select maxof(Column) from taxSetOffRule
                where taxSetOffRule.TaxComponentTable   == this.TaxComponentTable;

            this.Column = taxSetOffRule.Column + 1;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the name in <c>TaxComponentTable_IN</c> table.
    /// </summary>
    /// <returns>
    /// Returns the name in <c>TaxComponentTable_IN</c> table.
    /// </returns>
    display Description taxName()
    {
        return TaxComponentTable_IN::find(this.TaxComponentTableSetOff).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>TaxSetOffRule_IN</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>TaxSetOffRule_IN</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static public boolean exist(recId _recId)
    {
        if (_recId)
        {
            return (select firstonly RecId from taxSetOffRule_IN
                    where taxSetOffRule_IN.RecId  == _recId).RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existComponentTaxType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>TaxSetOffRule_IN</c> table exists.
    /// </summary>
    /// <param name="_component">
    /// The record id of <c>TaxComponentTable</c> table is used to find record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existComponentTaxType(RefRecId _component)
    {
        return _component && (select firstonly RecId from taxSetOffRule_IN
                                  where taxSetOffRule_IN.TaxComponentTable == _component).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the TaxSetOffRule_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing TaxSetOffRule_IN table.
    /// </returns>
    public static TaxSetOffRule_IN find(
        RefRecId         _recId,
        boolean          _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxSetOffRule_IN taxSetOffRule;

        taxSetOffRule.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxSetOffRule.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxSetOffRule
            where taxSetOffRule.RecId == _recId;

        return taxSetOffRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByComponent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>TaxSetOffRule_IN</c> table specified by a component.
    /// </summary>
    /// <param name="_component">
    /// The component reference record ID of the <c>TaxSetOffRule_IN</c> record to find.
    /// </param>
    /// <param name="_setOffComponent">
    /// The setoff component reference record ID of the <c>TaxSetOffRule_IN</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>TaxSetOffRule_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxSetOffRule_IN findByComponent(
        RefRecId _component,
        RefRecId _setOffComponent,
        boolean  _forUpdate = false)
    {
        TaxSetOffRule_IN taxSetOffRule;

        if (_component && _setOffComponent)
        {
            taxSetOffRule.selectForUpdate(_forUpdate);
            select firstonly taxSetOffRule
                where taxSetOffRule.TaxComponentTable == _component
                   && taxSetOffRule.TaxComponentTableSetOff == _setOffComponent;
        }

        return taxSetOffRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first record in the <c>TaxSetOffRule_IN</c> table specified by a component and a column.
    /// </summary>
    /// <param name="_component">
    /// The component reference record ID of the <c>TaxSetOffRule_IN</c> record to find.
    /// </param>
    /// <param name="_column">
    /// The column is used to find record.
    /// </param>
    /// <returns>
    /// A record of the <c>TaxSetOffRule_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxSetOffRule_IN findFirstColumn(
        RefRecId   _component,
        Column     _column)
    {
        TaxSetOffRule_IN taxSetOffRuleUpdate;

        select firstonly taxSetOffRuleUpdate
            order by Column desc
            where taxSetOffRuleUpdate.TaxComponentTable == _component
               && taxSetOffRuleUpdate.Column            <= _column;

        return taxSetOffRuleUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findMaxColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the maximal column in the <c>TaxSetOffRule_IN</c> table specified by a component.
    /// </summary>
    /// <param name="_component">
    /// The component reference record ID of the <c>TaxSetOffRule_IN</c> record to find.
    /// </param>
    /// <returns>
    /// The maximal column.
    /// </returns>
    public static Column findMaxColumn(RefRecId _component)
    {
        TaxSetOffRule_IN taxSetOffMaximum;

        select maxof(Column) from taxSetOffMaximum
            where taxSetOffMaximum.TaxComponentTable == _component;

        return taxSetOffMaximum.Column;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves down the column of the record of the <c>TaxSetOffRule_IN</c> table.
    /// </summary>
    /// <param name="_taxSetOffRule">
    /// The buffer of <c>TaxSetOffRule_IN</c> talbe.
    /// </param>
    /// <returns>
    /// A record of <c>TaxSetOffRule_IN</c> talbe.
    /// </returns>
    public  static TaxSetOffRule_IN moveDown(TaxSetOffRule_IN _taxSetOffRule)
    {
        TaxSetOffRule_IN taxSetOffRuleBufferPrevious;
        TaxSetOffRule_IN taxSetOffRuleBufferCurrent;
        Column           columnBuffer;

        ttsbegin;
        select firstonly forupdate taxSetOffRuleBufferPrevious
            order by Column
            where taxSetOffRuleBufferPrevious.TaxComponentTable == _taxSetOffRule.TaxComponentTable
               && taxSetOffRuleBufferPrevious.Column            >  _taxSetOffRule.Column;

        select firstonly forupdate taxSetOffRuleBufferCurrent
            where taxSetOffRuleBufferCurrent.TaxComponentTable  == _taxSetOffRule.TaxComponentTable
               && taxSetOffRuleBufferCurrent.Column             == _taxSetOffRule.Column;

        if (taxSetOffRuleBufferPrevious && taxSetOffRuleBufferCurrent)
        {
            columnBuffer = taxSetOffRuleBufferPrevious.Column;
            taxSetOffRuleBufferPrevious.Column = _taxSetOffRule.Column;

            taxSetOffRuleBufferCurrent.Column = -1;
            taxSetOffRuleBufferCurrent.update();
            taxSetOffRuleBufferPrevious.update();

            taxSetOffRuleBufferCurrent.Column = columnBuffer;
            taxSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return taxSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves up the column of the record of the <c>TaxSetOffRule_IN</c> table.
    /// </summary>
    /// <param name="_taxSetOffRule">
    /// The buffer of <c>TaxSetOffRule_IN</c> talbe.
    /// </param>
    /// <returns>
    /// A record of <c>TaxSetOffRule_IN</c> talbe.
    /// </returns>
    public  static TaxSetOffRule_IN moveUp(TaxSetOffRule_IN _taxSetOffRule)
    {
        TaxSetOffRule_IN taxSetOffRuleBufferPrevious;
        TaxSetOffRule_IN taxSetOffRuleBufferCurrent;
        Column           columnBuffer;

        ttsbegin;
        select firstonly forupdate taxSetOffRuleBufferPrevious
            order by Column desc
            where taxSetOffRuleBufferPrevious.TaxComponentTable == _taxSetOffRule.TaxComponentTable
               && taxSetOffRuleBufferPrevious.Column            <  _taxSetOffRule.Column;

        select firstonly forupdate taxSetOffRuleBufferCurrent
            where taxSetOffRuleBufferCurrent.TaxComponentTable  == _taxSetOffRule.TaxComponentTable
               && taxSetOffRuleBufferCurrent.Column             == _taxSetOffRule.Column;

        if (taxSetOffRuleBufferPrevious && taxSetOffRuleBufferCurrent)
        {
            columnBuffer = taxSetOffRuleBufferPrevious.Column;
            taxSetOffRuleBufferPrevious.Column = _taxSetOffRule.Column;

            taxSetOffRuleBufferCurrent.Column = -1;
            taxSetOffRuleBufferCurrent.update();
            taxSetOffRuleBufferPrevious.update();

            taxSetOffRuleBufferCurrent.Column = columnBuffer;
            taxSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return taxSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the column in the <c>TaxSetOffRule_IN</c> table to a given column specified by a component.
    /// </summary>
    /// <param name="_taxComponent">
    /// The component reference record ID of the <c>TaxSetOffRule_IN</c> record to find.
    /// </param>
    /// <param name="_column">
    /// The needed to update colunm.
    /// </param>
    public static void updateColumn(
        RefRecId _taxComponent,
        Column   _column)
    {
        TaxSetOffRule_IN taxSetOffRuleUpdate;

        ttsbegin;
        while select forupdate taxSetOffRuleUpdate
            where taxSetOffRuleUpdate.TaxComponentTable == _taxComponent
               && taxSetOffRuleUpdate.Column            > _column
        {
            taxSetOffRuleUpdate.Column -= 1;
            taxSetOffRuleUpdate.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63743</DeveloperDocumentation>
	<Label>@GLS5089</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TaxComponentTable</TitleField1>
	<TitleField2>TaxComponentTableSetOff</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TaxComponentColumnIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Column</Name>
			<Label>@SYS5771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTableSetOff</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxComponent</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Column</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Column</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxComponentTable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5042</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxComponentTableSetOff</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5090</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxComponentColumnIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxComponentTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Column</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CompanyTypeSetOffComponentTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxComponentTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxComponentTableSetOff</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxComponentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@GLS5042</EntityRelationshipRole>
			<RelatedTable>TaxComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxComponentTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxComponentTable_IN_TaxSetOffRule_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxComponentTable</Name>
					<Field>TaxComponentTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxComponentTableSetOff</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@GLS5042</EntityRelationshipRole>
			<RelatedTable>TaxComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxComponentTable_IN_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxComponentTable_IN_1_TaxSetOffRule_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxComponentTableSetOff</Name>
					<Field>TaxComponentTableSetOff</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>