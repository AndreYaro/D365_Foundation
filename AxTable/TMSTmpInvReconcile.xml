<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSTmpInvReconcile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSTmpInvReconcile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayFreightBillAmountRemaining</Name>
				<Source><![CDATA[
    display Amount displayFreightBillAmountRemaining()
    {
        return TMSFreightBillDetail::find(this.RefRecId).amountRemaining();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayLineType</Name>
				<Source><![CDATA[
    display TMSLineType displayLineType()
    {
        return this.freightBillDetail().LineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPayAmount</Name>
				<Source><![CDATA[
    display TMSPayAmount displayPayAmount()
    {
        return TMSFreightMatchReason::find(this.FreightReasonCode).PayAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRate</Name>
				<Source><![CDATA[
    display TMSRate displayRate()
    {
        return this.freightBillDetail().RateCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRateId</Name>
				<Source><![CDATA[
    display TMSAccessorialMasterCode displayRateId()
    {
        return this.freightBillDetail().RateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayReasonCodeDesc</Name>
				<Source><![CDATA[
    display Description displayReasonCodeDesc()
    {
        return TMSFreightMatchReason::find(this.FreightReasonCode).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRoute</Name>
				<Source><![CDATA[
    display TMSRouteCode displayRoute()
    {
        return this.freightBillDetail().RouteCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>freightBillDetail</Name>
				<Source><![CDATA[
    TMSFreightBillDetail freightBillDetail()
    {
        return TMSFreightBillDetail::find(this.RefRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitReconcile</Name>
				<Source><![CDATA[
    TMSTmpInvReconcile splitReconcile(TMSTmpInvReconcile _tmpInvReconcile, Amount _amount)
    {
        ttsBegin;

        this.Amount -= _amount;
        this.update();

        _tmpInvReconcile.RefRecId     = this.RefRecId;
        _tmpInvReconcile.RefTableId   = this.RefTableId;
        _tmpInvReconcile.Amount       = _amount;
        if (!_tmpInvReconcile.validateWrite())
        {
            throw error(strFmt("@TRX:TMSCannotInsertRecordInTable", tablePName(TMSTmpInvReconcile)));
        }
        else
        {
            _tmpInvReconcile.insert();
        }

        ttsCommit;

        return _tmpInvReconcile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly TMSInvoiceLineReconcile
                    where TMSInvoiceLineReconcile.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TMSInvoiceLineReconcile find(RecId   _recId,
                                               boolean _forupdate = false)
    {
        TMSInvoiceLineReconcile    tmsInvoiceLineReconcile;

        if (_recId)
        {
            tmsInvoiceLineReconcile.selectForUpdate(_forupdate);

            select firstonly tmsInvoiceLineReconcile
                where tmsInvoiceLineReconcile.RecId == _recId;
        }

        return tmsInvoiceLineReconcile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reconcileInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert the temporary Invoice Reconcile records into the permanent Invoice Reconcile table.
    /// </summary>
    /// <param name="_tmpInvReconcile">
    /// The Invoice Reconcile temporary records.
    /// </param>
    /// <param name="_comment">
    /// The optional comments associated with the records.
    /// </param>
    public static void reconcileInvoice(
        TMSTmpInvReconcile _tmpInvReconcile,
        Description        _comment = '')
    {
        TMSTmpInvReconcile tmsTmpInvReconcile = _tmpInvReconcile;
        TMSInvoiceApproval invoiceApproval = new TMSInvoiceApproval();

        if (tmsTmpInvReconcile.RecId)
        {
            tmsTmpInvReconcile.update();
        }

        ttsBegin;
        // Loop through non-existing reconciles
        while select forUpdate tmsTmpInvReconcile
            where tmsTmpInvReconcile.CurrentRecord == NoYes::No
        {
            if (tmsTmpInvReconcile.FreightReasonCode)
            {
                TMSInvoiceLineReconcile::createReconcile(tmsTmpInvReconcile, _comment);
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1975</DeveloperDocumentation>
	<Label>@TRX1309</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FreightReasonCode</TitleField1>
	<TitleField2>Amount</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentRecord</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkflowStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentRecord</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CurrentRecord</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TMSCurrentRecord</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightReasonCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TMSFreightReasonCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowStatus</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TMSWorkflowStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TMSFreightMatchReason</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSFreightMatchReason</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FreightReasonCode</Name>
					<SourceEDT>TMSFreightReasonCode</SourceEDT>
					<Field>FreightReasonCode</Field>
					<RelatedField>FreightReasonCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSInvoiceLine</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>TMSInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>