<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendBankAccountChangeProposalFieldEnablement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendBankAccountChangeProposalFieldEnablement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record.
    /// </summary>
    /// <param name="_field">The field to find.</param>
    /// <param name="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record from the <c>VendBankAccountChangeProposalFieldEnablement</c> table; otherwise, a newly created record.</returns>
    [Hookable(false)]
    public static VendBankAccountChangeProposalFieldEnablement findOrCreate(VendBankAccountChangeProposalFields _field, boolean _forUpdate = false)
    {
        VendBankAccountChangeProposalFieldEnablement result;

        result.selectForUpdate(_forUpdate);

        select firstonly result
            where result.Field == _field;

        if (!result.RecId)
        {
            ttsbegin;
            result.Field = _field;
            result.insert();
            ttscommit;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates entries for all fields if they do not already exist.
    /// </summary>
    public static void initializeAll()
    {
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::AccountNum);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::Name);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::AccountID);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::RegistrationNum);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::SWIFTNo);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::BankIBAN);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::CurrencyCode);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::CurrencyCode);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::ActiveDate);
        VendBankAccountChangeProposalFieldEnablement::findOrCreate(VendBankAccountChangeProposalFields::ExpiryDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledFor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether or not change proposal functionality is enabled for the corresponding field.
    /// </summary>
    /// <param name="_field">The field to find.</param>
    /// <returns>True if change proposal is enabled for the provided field; otherwise false.</returns>
    public static boolean isEnabledFor(VendBankAccountChangeProposalFields _field)
    {
        if (!VendParameters::find().VendBankAccountChangeProposalIsEnabled)
        {
            return false;
        }
        
        VendBankAccountChangeProposalFieldEnablement record = VendBankAccountChangeProposalFieldEnablement::findOrCreate(_field);
        return (record.RecId && record.IsEnabled);

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:VendBankAccountChangeProposalFieldEnablement_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@AccountsPayable:VendBankAccountChangeProposalFieldEnablement_Title</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>FieldIdx</ClusteredIndex>
	<Modules>Vendor</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Field</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendBankAccountChangeProposalFields</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SCM:VendBankAccountChangeProposalFieldEnabled</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Field</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>