<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransMarkingKey</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class implements a key structure for the <c>InventTransMarkingMap</c> map
/// </summary>
class InventTransMarkingKey
{
    str                 key;
    InventDimId         inventDimId;
    InventTransOriginId inventTransOriginId;

    #define.Delimeter('#')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the inventory dimension ID which is the part of the key structure.
    /// </summary>
    /// <returns>
    ///     An <c>InventDimId</c> value.
    /// </returns>
    public InventDimId getInventDimId()
    {
        if (inventDimId == '')
        {
            Integer delimeterPos = strFind(key, #Delimeter, 1, strLen(key));
            inventDimId = subStr(key, delimeterPos+1, strLen(key)-delimeterPos);
        }

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the inventory transaction originator ID which is the part of the key structure.
    /// </summary>
    /// <returns>
    ///     A <c>InventTransOriginId</c> value.
    /// </returns>
    public InventTransOriginId getInventTransOriginId()
    {
        if (!inventTransOriginId)
        {
            Integer delimeterPos = strFind(key, #Delimeter, 1, strLen(key));
            inventTransOriginId = str2int64(subStr(key, 1, delimeterPos-1));
        }

        return inventTransOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getKeyStr</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets a string representation of the key value.
    /// </summary>
    /// <returns>
    ///     A key value which is used to store and retriev the data in the <c>InventTransMarkingMap</c> map.
    /// </returns>
    public str getKeyStr()
    {
        if (key == '')
        {
            key = int642str(inventTransOriginId) + #Delimeter + inventDimId;
        }

        return key;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setKeyStr</Name>
				<Source><![CDATA[
        private void setKeyStr(str _key)
    {
        if (!strFind(_key, #Delimeter, 1, strLen(_key)))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        key = _key;
        inventDimId = '';
        inventTransOriginId = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParams</Name>
				<Source><![CDATA[
        private void setParams(
        InventTransOriginId _inventTransOriginId,
        InventDimId         _inventDimId)
    {
        inventDimId = _inventDimId;
        inventTransOriginId = _inventTransOriginId;
        key =  this.getKeyStr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static InventTransMarkingKey construct()
    {
        return new InventTransMarkingKey();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newParams</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates and initializes a new instance of <c>InventTransMarkingKey</c> class.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///     An <c>InventTransMarkingKey</c> value that is a part of the marking key.
    /// </param>
    /// <param name="_inventDimId">
    ///     An <c>InventDimId</c> value that is a part of the marking key.
    /// </param>
    /// <returns>
    ///     A new instance of <c>InventTransMarkingKey</c> class.
    /// </returns>
    public static InventTransMarkingKey newParams(
        InventTransOriginId _inventTransOriginId,
        InventDimId         _inventDimId)
    {
        InventTransMarkingKey markingKey = InventTransMarkingKey::construct();
        markingKey.setParams(_inventTransOriginId, _inventDimId);

        return markingKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newString</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates and initializes a new instance of <c>InventTransMarkingKey</c> class.
    /// </summary>
    /// <param name="_key">
    ///     The value of <c>InventTransMarkingKey</c> map key.
    /// </param>
    /// <returns>
    ///     A new instance of <c>InventTransMarkingKey</c> class.
    /// </returns>
    public static InventTransMarkingKey newString(str _key)
    {
        InventTransMarkingKey markingKey = InventTransMarkingKey::construct();
        markingKey.setKeyStr(_key);

        return markingKey;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
