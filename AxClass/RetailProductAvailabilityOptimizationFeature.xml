<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailProductAvailabilityOptimizationFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.BusinessPlatform.SharedTypes;

/// <summary>
/// The <c>RetailProductAvailabilityOptimizationFeature </c> class defines feature flag for optimizing processing jobs for product availability.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class RetailProductAvailabilityOptimizationFeature implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable, IFeatureLifecycle
{
    private static RetailProductAvailabilityOptimizationFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new RetailProductAvailabilityOptimizationFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static RetailProductAvailabilityOptimizationFeature instance()
    {
        return RetailProductAvailabilityOptimizationFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Retail:ProductAvailabilityJobFeatureManagementLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::Retail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Retail:ProductAvailabilityJobFeatureManagementSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2128353';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        ttsbegin;

        RetailSharedParameters parameters = RetailSharedParameters::find(true);
        parameters.ProductAvailabilityJobPolicy = RetailProductAvailabilityJobControlModel::PopulateRetailProductWarehouseInventoryTable; // Optimized

        // Inventory Availability on Channel side uses the last value brought from CDX (From Product Availability Job).
        // Then, it takes the Sum of transacations that have not been included in that last calculation.
        // This parameter determines the cache expiration period for checking the last value brought from CDX.
        parameters.InventoryAvailabilityCachePeriod = 180;

        // This parameter determines the cache expiration period for checking if more uncounted sales transactions have occurred.
        parameters.InventoryAvailabilitySumDeltaCachePeriod = 60;

        // This parameter determines the cache expiration period in e-Commerce for checking if more uncounted sales transactions have occurred.
        parameters.InventoryAvailabilitySumDeltaCachePeriodEcommerce = 0;

        parameters.doUpdate();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        ttsbegin;

        RetailSharedParameters parameters = RetailSharedParameters::find(true);
        parameters.ProductAvailabilityJobPolicy = RetailProductAvailabilityJobControlModel::PopulateRetailInventAvailabilityTable; // Legacy
        parameters.doUpdate();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>