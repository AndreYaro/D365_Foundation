<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlConfigurationSetLedgerEnablement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlConfigurationSetLedgerEnablement</c> class is the controller class for setting the budget control enablement for the ledger.
/// </summary>
public class BudgetControlConfigurationSetLedgerEnablement extends SysOperationServiceController implements BatchRetryable
{
    private boolean isRequestToEnable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(IdentifierName _className = '', IdentifierName _methodName = '', SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Asynchronous)
    {
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
	/// <summary>
    /// Updates dialog button labels for state of ledger enablement of budget control.
    /// </summary>
    protected void dialogPostRun()
    {
        super();

        BudgetControlConfigurationISetLedgerEnablement budgetControlConfigurationISetLedgerEnablement = dialog.formRun() as BudgetControlConfigurationISetLedgerEnablement;

        if (budgetControlConfigurationISetLedgerEnablement)
        {
            if (isRequestToEnable)
            {
                // set OK button text to "Turn on"
                budgetControlConfigurationISetLedgerEnablement.setOkButtonText("@SYS327332");
            }
            else
            {
                // set OK button text to "Turn off"
                budgetControlConfigurationISetLedgerEnablement.setOkButtonText("@SYS327330");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>BudgetControlConfigurationSetLedgerEnablement</c> class.
    /// </summary>
    /// <param name = "_isRequestToEnable">
    /// A Boolean value that specifies whether to enable or disable budget control.
    /// </param>
    protected void initialize(boolean _isRequestToEnable)
    {
        isRequestToEnable = _isRequestToEnable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateForm</Name>
				<Source><![CDATA[
    public FormName templateForm()
    {
        return formStr(BudgetControlConfigurationSetLedgerEnablement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the request to set the budget control enablement for the ledger.
    /// </summary>
    /// <param name = "_request">
    /// The <c>BudgetControlConfigurationSetLedgerEnablementRequest</c> class instance for which to process.
    /// </param>
    public void processRequest(BudgetControlConfigurationSetLedgerEnablementRequest _request)
    {
        if (_request.parmIsRequestToEnable())
        {
            // turn on budget control
            BudgetControlConfigurationManager::enableBudgetControl(_request.parmPrimaryLedgerRecId());
        }
        else
        {
            // turn off budget control
            BudgetControlConfigurationManager::disableBudgetControl(_request.parmPrimaryLedgerRecId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@SYS315226";
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnablement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the budget control enablement for the ledger.
    /// </summary>
    /// <param name = "_primaryLedgerRecId">
    /// The <c>Ledger</c> record ID for which to set the budget control enablement.
    /// </param>
    /// <param name = "_isRequestToEnable">
    /// A Boolean value that specifies whether to enable budget control.
    /// </param>
    public static void setEnablement(LedgerRecId _primaryLedgerRecId, boolean _isRequestToEnable)
    {
        BudgetControlConfigurationSetLedgerEnablement controller = new BudgetControlConfigurationSetLedgerEnablement(
            classStr(BudgetControlConfigurationSetLedgerEnablement),
            methodStr(BudgetControlConfigurationSetLedgerEnablement, processRequest),
            SysOperationExecutionMode::Synchronous);

        controller.parmDialogCaption("@SYS315226");

        controller.initialize(_isRequestToEnable);

        BudgetControlConfigurationSetLedgerEnablementRequest request = controller.getBaseDataContract() as BudgetControlConfigurationSetLedgerEnablementRequest;

        request.parmPrimaryLedgerRecId(_primaryLedgerRecId);
        request.parmIsRequestToEnable(_isRequestToEnable);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>