<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TimesheetSubledgerJournalTransferCommandExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Timesheet extension for the <c>SubledgerJournalTransferCommand</c> class.
/// </summary>
[SourceDocumentExtensionAttribute()]
class TimesheetSubledgerJournalTransferCommandExtension extends SubledgerJournalTransferCommandExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertedGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    public static void insertedGeneralJournalAccountEntry(RefRecId _transferidVal, SourceDocument _sourceDocument, boolean _doSummarization)
    {
        GeneralJournalEntry             generalJournalEntry;
        GeneralJournalAccountEntry      localGeneralJournalAccountEntry;
        SubledgerJournalAccountEntry    subledgerJournalAccountEntry;
        SourceDocumentHeader            sourceDocumentHeader;
        SubledgerJournalEntry           subledgerJournalEntry;
        AccountingEvent                 accountingEvent;
        SubledgerJournalAccountEntryDistribution subledgerJournalAccountEntryDistribution;
        TSTimesheetTrans                tsTimesheetTrans;
        TSTimesheetTable                tsTimesheetTable;

        sourceDocumentHeader = _sourceDocument.parmSourceDocumentHeader();

        select firstonly tsTimesheetTable where tsTimesheetTable.SourceDocumentHeader == sourceDocumentHeader.RecId;

        if (!_doSummarization && tsTimesheetTable)
        {
            localGeneralJournalAccountEntry.skipDataMethods(true);
            localGeneralJournalAccountEntry.skipDatabaseLog(true);
            localGeneralJournalAccountEntry.skipEvents(true);

            update_recordset localGeneralJournalAccountEntry
                setting Quantity = tsTimesheetTrans.Hours
            join generalJournalEntry
                where generalJournalEntry.TransferId == _transferidVal &&
                    generalJournalEntry.RecId == localGeneralJournalAccountEntry.GeneralJournalEntry
            join TransferId, RecId from subledgerJournalEntry
                where subLedgerJournalEntry.TransferId == _transferidVal
            join GeneralJournalAccountEntry, RecId, SubledgerJournalEntry, AccountingCurrencyAmount from subLedgerJournalAccountEntry
                where subLedgerJournalAccountEntry.GeneralJournalAccountEntry == localGeneralJournalAccountEntry.RecId &&
                    subLedgerJournalAccountEntry.SubledgerJournalEntry == subledgerJournalEntry.RecId &&
                    subLedgerJournalAccountEntry.AccountingCurrencyAmount == localGeneralJournalAccountEntry.AccountingCurrencyAmount
            join SubledgerJournalAccountEntry, SourceDocumentLine from subledgerJournalAccountEntryDistribution
                where subledgerJournalAccountEntryDistribution.SubledgerJournalAccountEntry == subLedgerJournalAccountEntry.RecId
            join Hours from tsTimesheetTrans
                where tsTimesheetTrans.SourceDocumentLine == subledgerJournalAccountEntryDistribution.SourceDocumentLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    protected void subscribe()
    {
        super();
        command.insertedGeneralJournalAccountEntry += eventhandler(TimesheetSubledgerJournalTransferCommandExtension::insertedGeneralJournalAccountEntry);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>