<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendCreatePaymJournalNoteDraw</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendCreatePaymJournalNoteDraw extends CustVendCreatePaymJournalNote_Vend implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be built by using the <c>Dialog</c> class or by using a class that is created in the
    ///    Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        super();

        dialogNegInstStatus.visible(false);

        if (dialogDueBillsOnly)
        {
            dialogDueBillsOnly.visible(false);
        }

        if (dialogLackDate)
        {
            dialogLackDate.visible(false);
        }

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runProposalEditForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Runs the form to edit the generated payment proposal.
    /// </summary>
    public void runProposalEditForm()
    {
        CustVendPaymProposalEditForm::newPaymProposal(paymProposal, true, paymProposal.ledgerJournalId(), paymProposal.ledgerJournalType(), paymProposal.moduleCustVend()).run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS75713";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>