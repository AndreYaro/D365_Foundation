<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransTypeInstrumentation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerJournalTransTypeInstrumentation</c> holds static methods to emit telemetry based on ledger journal transaction type.
/// </summary>
internal final static class LedgerJournalTransTypeInstrumentation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static SysInstrumentationLogger createLogger()
    {
        return SysInstrumentationLoggerFactory::CreateLogger(LedgerJournalTransTypeInstrumentationConstants::SourceNameLedgerJournalTransType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logJournalNameRecIdZero</Name>
				<Source><![CDATA[
    internal static void logJournalNameRecIdZero()
    {
        LedgerJournalTransTypeInstrumentation::createLogger().logWarning(LedgerJournalTransTypeInstrumentationConstants::ErrorLedgerJournalNameRecIdZero);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logJournalBlankVoucherWarning</Name>
				<Source><![CDATA[
    internal static void logJournalBlankVoucherWarning(NewVoucher _newVoucher, RecId _recid)
    {
        LedgerJournalTransTypeInstrumentation::createLogger().logWarning(strFmt(LedgerJournalTransTypeInstrumentationConstants::VoucherErrorBlankVoucher, enum2Symbol(enumNum(NewVoucher), _newVoucher), _recid));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logJournalLineCreation</Name>
				<Source><![CDATA[
    internal static void logJournalLineCreation()
    {
        LedgerJournalTransTypeInstrumentation::createLogger().logInformation(LedgerJournalTransTypeInstrumentationConstants::JournalLineCreation);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>