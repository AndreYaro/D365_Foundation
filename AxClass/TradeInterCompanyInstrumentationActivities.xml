<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeInterCompanyInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeInterCompanyInstrumentationActivities</c> class provides activities for intercompany instrumentation logging.
/// </summary>
internal final class TradeInterCompanyInstrumentationActivities
{
    private const str ActivityNamePrefix = 'TradeInterCompany.';
    private const str TryAutoCreateLine = 'TryAutoCreateLine';
    private const str AutoCreateOrder = 'AutoCreateOrder';
    private const str SynchronizeDocuRef = 'SynchronizeDocuRef';
    private const str SelectAndProcessInventSum = 'SelectAndProcessInventSum';
    private const str SelectAndProcessInventSumWHS = 'SelectAndProcessInventSumWHS';
    private const str RemoveMarking = 'RemoveMarking';
    private const str ProcessInventDimAndInventSum = 'ProcessInventDimAndInventSum';
    private const str SynchronizeCommon = 'SynchronizeCommon';
    private const str SyncNotesDeleteDocuRef = 'SyncNotesDeleteDocuRef';
    private const str SyncNotesSeleteDocuRefExists = 'SyncNotesSeleteDocuRefExists';

    private const str DocuRefRecIdProperty = 'DocuRefRecId';
    private const str RefCompanyIdProperty = 'RefCompanyId';
    private const str FromRecIdProperty = 'FromRecId';

    private TradeInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
       private void new(TradeInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static TradeInterCompanyInstrumentationActivities newFromLogger(TradeInstrumentationLogger _logger)
    {
        return new TradeInterCompanyInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryAutoCreateLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext tryAutoCreateLine(SalesLine _salesLine)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + TryAutoCreateLine);

        activityContext.addCustomProperty(tableStr(SalesLine), int642Str(_salesLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoCreateOrder</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext autoCreateOrder(Common _common)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + AutoCreateOrder);

        if (_common.tableId)
        {
            activityContext.addCustomProperty(tableId2Name(_common.tableId), int642Str(_common.RecId));
        }

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeDocuRef</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext synchronizeDocuRef(Common _common)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + SynchronizeDocuRef);

        if (_common.tableId)
        {
            activityContext.addCustomProperty(tableId2Name(_common.tableId), int642Str(_common.RecId));
        }

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectAndProcessInventSumForCrossCompanyWHS</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext selectAndProcessInventSumForCrossCompanyWHS()
    {
        return logger.activityContext(ActivityNamePrefix + SelectAndProcessInventSumWHS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectAndProcessInventSumForCrossCompany</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext selectAndProcessInventSumForCrossCompany()
    {
        return logger.activityContext(ActivityNamePrefix + SelectAndProcessInventSum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeMarking</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext removeMarking(SalesLine _salesLine)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + RemoveMarking);

        activityContext.addCustomProperty(tableStr(SalesLine), int642Str(_salesLine.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processInventDimAndInventSumForCrossCompany</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext processInventDimAndInventSumForCrossCompany(InventDim _inventDim)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + ProcessInventDimAndInventSum);

        activityContext.addCustomProperty(tableStr(InventDim), int642Str(_inventDim.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeCommon</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext synchronizeCommon(RecId _docuRefRecId, CompanyId _refCompanyId, tableId _refTableId, recId _refRecId)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + SynchronizeCommon);

        activityContext.addCustomProperty(DocuRefRecIdProperty, int642Str(_docuRefRecId));
        activityContext.addCustomProperty(RefCompanyIdProperty, _refCompanyId);

        if (_refTableId)
        {
            activityContext.addCustomProperty(tableId2Name(_refTableId), int642Str(_refRecId));
        }

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncNotesDeleteDocuRef</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext syncNotesDeleteDocuRef(Common _common, recId _fromRecId)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + SyncNotesDeleteDocuRef);

        if (_common.tableId)
        {
            activityContext.addCustomProperty(tableId2Name(_common.tableId), int642Str(_common.RecId));
        }
        activityContext.addCustomProperty(FromRecIdProperty, int642Str(_fromRecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncNotesSeleteDocuRefExists</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext syncNotesSeleteDocuRefExists(Common _common, recId _fromRecId)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + SyncNotesSeleteDocuRefExists);

        if (_common.tableId)
        {
            activityContext.addCustomProperty(tableId2Name(_common.tableId), int642Str(_common.RecId));
        }
        activityContext.addCustomProperty(FromRecIdProperty, int642Str(_fromRecId));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>