<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalERGenerationMenuService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventJournalERGenerationMenuService</c> builds and maintains a list of available ER reports for Inventory journal.
/// </summary>
final class InventJournalERGenerationMenuService
{
    InventJournalNameId currentJournalName;
    Map fullERMenuItemMap = new Map(Types::Int64, Types::Class);
    Map journalNamesMenuitemControls = new Map(Types::String, Types::Class);
    FormMenuButtonControl reportsButtonControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportsButtonControl</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FormMenuButtonControl parmReportsButtonControl(FormMenuButtonControl _reportsButtonControl)
    {
        reportsButtonControl = _reportsButtonControl;
        return reportsButtonControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>InventJournalERGenerationMenuService</c> class.
    /// </summary>
    /// <param name = "_reportsButtonControl">A parent menu button control.</param>
    /// <returns>A new instance of the <c>InventJournalERGenerationMenuService</c> class</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static InventJournalERGenerationMenuService construct(FormMenuButtonControl _reportsButtonControl)
    {
        InventJournalERGenerationMenuService inventJournalERGenerationMenuService = new InventJournalERGenerationMenuService();
        inventJournalERGenerationMenuService.parmReportsButtonControl(_reportsButtonControl);
        return inventJournalERGenerationMenuService;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearMenu</Name>
				<Source><![CDATA[
    private void clearMenu(InventJournalNameId _journalName)
    {
        if (journalNamesMenuitemControls.exists(_journalName))
        {
            Set controlSet = journalNamesMenuitemControls.lookup(_journalName);
            SetEnumerator setEnumerator = controlSet.getEnumerator();
            while (setEnumerator.moveNext())
            {
                FormFunctionButtonControl formControl = setEnumerator.current();
                formControl.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addMenuItemControls</Name>
				<Source><![CDATA[
    private Set addMenuItemControls(InventJournalNameId _journalName)
    {
        InventJournalNameReports inventJournalNameReports;
        ERFormatMappingTable formatMappingTable;
        InventJournalName inventJournalName;

        Set controlSet = new Set(Types::Class);

        while select RecId from formatMappingTable
            join ReportName from inventJournalNameReports
                where formatMappingTable.RecId == inventJournalNameReports.FormatMappingTable
            exists join inventJournalName
                where inventJournalName.RecId == inventJournalNameReports.InventJournalName
                    && inventJournalName.JournalNameId == _journalName
        {
            FormFunctionButtonControl menuItemControl;
            ERFormatMappingId formatMappingId = formatMappingTable.RecId;
            if (fullERMenuItemMap.exists(formatMappingId))
            {
                menuItemControl = fullERMenuItemMap.lookup(formatMappingId);
            }
            else
            {
                menuItemControl = reportsButtonControl.addControl(FormControlType::MenuFunctionButton, InventJournalERGenerationConstants::MenuItemControlNamePrefix + int642Str(formatMappingId));
                menuItemControl.menuItemType(MenuItemType::Output);
                menuItemControl.menuItemName(menuItemOutputStr(InventJournalERGeneration));
                menuItemControl.text(inventJournalNameReports.ReportName);
                menuItemControl.multiSelect(false);
                menuItemControl.needsRecord(true);
                menuItemControl.dataSource(reportsButtonControl.dataSourceObject());

                fullERMenuItemMap.insert(formatMappingId, menuItemControl);
            }
            controlSet.add(menuItemControl);
        }

        return controlSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renewMenu</Name>
				<Source><![CDATA[
    private void renewMenu(InventJournalNameId _journalName)
    {
        Set controlSet;
        if (journalNamesMenuitemControls.exists(_journalName))
        {
            controlSet = journalNamesMenuitemControls.lookup(_journalName);
        }
        else
        {
            controlSet = this.addMenuItemControls(_journalName);
            journalNamesMenuitemControls.insert(_journalName, controlSet);
        }

        SetEnumerator setEnumerator = controlSet.getEnumerator();

        while (setEnumerator.moveNext())
        {
            FormFunctionButtonControl formControl = setEnumerator.current();
            formControl.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMenu</Name>
				<Source><![CDATA[
    /// <summary>
    /// Redecorates print menu in accordance with a given cursor.
    /// </summary>
    /// <param name = "_inventJournalTable">The <c>InventJournalTable</c> cursor.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setMenu(InventJournalTable _inventJournalTable)
    {
        if (!_inventJournalTable || currentJournalName == _inventJournalTable.JournalNameId)
        {
            return;
        }

        this.clearMenu(currentJournalName);

        currentJournalName = _inventJournalTable.JournalNameId;
        this.renewMenu(currentJournalName);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>