<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyReqTransCov</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyReqTransCovKeep</c> class copies the requirement coverage from the source master plan to the target master plan.
/// </summary>
public class ReqPlanCopyReqTransCov extends SysQueryInsertRecordSet
{
    protected int reqTransCovDatasourceId;
    protected int reqTransReceiptDataSourceId;
    protected int reqTransIssueDataSourceId;

    protected ReqPlanVersion reqPlanVersionFrom;
    protected ReqPlanVersion reqPlanVersionTo;
    private ReqPlanCopyReqTransCovTmp tempReqTransLastPlanRecIdIssue;
    private ReqPlanCopyReqTransCovTmp tempReqTransLastPlanRecIdReceipt;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.mapField(reqTransCovDatasourceId, fieldStr(ReqTransCov, ItemId), fieldStr(ReqTransCov, ItemId));
        this.mapField(reqTransCovDatasourceId, fieldStr(ReqTransCov, Qty), fieldStr(ReqTransCov, Qty));
        this.mapField(reqTransCovDatasourceId, fieldStr(ReqTransCov, ActionQtyAdd), fieldStr(ReqTransCov, ActionQtyAdd));
        this.mapField(reqTransCovDatasourceId, fieldStr(ReqTransCov, IsDerivedDirectly), fieldStr(ReqTransCov, IsDerivedDirectly));

        this.mapField(reqTransReceiptDataSourceId, fieldStr(ReqPlanCopyReqTransCovTmp, TargetPlanRecId), fieldStr(ReqTransCov, ReceiptRecId));
        this.mapField(reqTransIssueDataSourceId,   fieldStr(ReqPlanCopyReqTransCovTmp, TargetPlanRecId), fieldStr(ReqTransCov, IssueRecId));
        this.mapField(reqTransIssueDataSourceId,   fieldStr(ReqPlanCopyReqTransCovTmp, PlanVersion), fieldStr(ReqTransCov, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        ReqPlanCopyReqTransCovTmp tempTable = this.copyReqTransReferencesToTempTable();
        tempReqTransLastPlanRecIdIssue.linkPhysicalTableInstance(tempTable);
        tempReqTransLastPlanRecIdReceipt.linkPhysicalTableInstance(tempTable);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsReqTransCovSelect = query.addDataSource(tableNum(ReqTransCov), identifierStr(ReqTransCov));
        qbdsReqTransCovSelect.addRange(fieldNum(ReqTransCov, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        reqTransCovDatasourceId = qbdsReqTransCovSelect.uniqueId();

        QueryBuildDataSource qbdsReqTransReceipt = qbdsReqTransCovSelect.addDataSource(tableNum(ReqPlanCopyReqTransCovTmp), identifierStr(ReqTransReceipt));
        qbdsReqTransReceipt.addLink(fieldNum(ReqTransCov, ReceiptRecId), fieldNum(ReqPlanCopyReqTransCovTmp, SourcePlanRecId));
        qbdsReqTransReceipt.cursor(tempReqTransLastPlanRecIdReceipt);
        reqTransReceiptDataSourceId = qbdsReqTransReceipt.uniqueId();

        QueryBuildDataSource qbdsReqTransIssue = qbdsReqTransReceipt.addDataSource(tableNum(ReqPlanCopyReqTransCovTmp), identifierStr(ReqTransIssue));
        qbdsReqTransIssue.addLink(fieldNum(ReqTransCov, IssueRecId), fieldNum(ReqPlanCopyReqTransCovTmp, SourcePlanRecId), identifierStr(ReqTransCov));
        qbdsReqTransIssue.cursor(tempReqTransLastPlanRecIdIssue);
        reqTransIssueDataSourceId = qbdsReqTransIssue.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        ReqTransCov reqTransCovInsert;

        reqTransCovInsert.skipDataMethods(true);
        reqTransCovInsert.skipAosValidation(true);

        return reqTransCovInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyReqTransCov</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyReqTransCov newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyReqTransCov instance = new ReqPlanCopyReqTransCov();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyReqTransReferencesToTempTable</Name>
				<Source><![CDATA[
    private ReqPlanCopyReqTransCovTmp copyReqTransReferencesToTempTable()
    {
        ReqPlanCopyReqTransCovTmp tempTable;
        ReqTrans reqTrans;
        RecId targetPlanVersionRecId = reqPlanVersionTo.RecId;

        tempTable.skipAosValidation(true);
        tempTable.skipDataMethods(true);

        ttsbegin;

        insert_recordset tempTable (PlanVersion, SourcePlanRecId, TargetPlanRecId)
            select targetPlanVersionRecId, LastPlanRecId, RecId
            from reqTrans
            where reqTrans.PlanVersion == reqPlanVersionTo.RecId;

        ttscommit;

        return tempTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>