<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSCrossDockCreatorDemandTransferOrderShip</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSCrossDockCreatorHelperTransferOrderShip</c> is responsible for getting transfer order ship specific data used to help create cross docking.
/// </summary>
[WHSCrossDockCreatorDemandAttribute(InventTransType::TransferOrderShip)]
class WHSCrossDockCreatorDemandTransferOrderShip extends WHSCrossDockCreatorDemand
{
    InventTransferLine  transferLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromInventTransId</Name>
				<Source><![CDATA[
    protected void initFromInventTransId(InventTransId _inventTransId)
    {
        transferLine = InventTransferLine::findTransIdShip(_inventTransId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDemandMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs and returns a new movement for transfer lines.
    /// </summary>
    /// <param name = "_demandTransId">
    /// The transaction ID of the current transfer line for cross docking.
    /// </param>
    /// <returns>
    /// A movement for the related transfer line.
    /// </returns>
    public InventMovement getDemandMovement()
    {
        return InventMovement::construct(transferLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDemandInventDimCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns the <c>InventDim</c> record relating to the transfer line.
    /// </summary>
    /// <param name = "_demandTransId">
    /// The transaction ID of the current demand line for cross docking.
    /// </param>
    /// <returns>
    /// An <c>InventDim</c> record from the transfer line.
    /// </returns>
    public InventDim getDemandInventDimCriteria()
    {
        return transferLine.inventDim();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>