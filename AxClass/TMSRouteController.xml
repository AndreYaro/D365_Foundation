<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSRouteController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TMSRouteController</c> class is used to run print management for <c>TMSRoute</c> report.
/// </summary>
public class TMSRouteController extends SrsPrintMgmtController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        this.setRanges();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPrintMgmt</Name>
				<Source><![CDATA[
    protected void runPrintMgmt()
    {
        printMgmtReportRun = PrintMgmtReportRun::construct(PrintMgmtHierarchyType::TMS, PrintMgmtNodeType::TMS, PrintMgmtDocumentType::TMSRoute);

        printMgmtReportRun.parmReportRunController(this);

        printMgmtReportRun.load(this.parmArgs().record(), this.parmArgs().record(), Global::currentUserLanguage());

        this.outputReports();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    private void setRanges()
    {
        var q                       = this.getFirstQuery();
        var queryBuildDataSource    = SysQuery::findOrCreateDataSource(q, tableNum(TMSRoute));
        var queryBuildRange         = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(TMSRoute, RouteCode));

        if (this.parmArgs().parm())
        {
            queryBuildRange.value(queryValue(this.parmArgs().parm()));
        }
        else if (this.parmArgs().record() && this.parmArgs().dataset() == tableNum(TMSRoute))
        {
            TMSRoute tmsRoute = this.parmArgs().record();
            queryBuildRange.value(tmsRoute.RouteCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSRouteController construct()
    {
        return new TMSRouteController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>