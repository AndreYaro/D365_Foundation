<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationWaveWorkCreatedQtyValidatorActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for Wave work created quantity validation logging.
/// </summary>
internal final class WHSInstrumentationWaveWorkCreatedQtyValidatorActivities
{
    private const str WhsWaveUpdatedLoadLineRecId = 'WaveUpdatedLoadLineRecId';
    private const str LoadLineRefRecId            = 'LoadLineRefRecId';
    private const str ActivityNamePrefix          = 'WaveWorkCreatedQtyValidator';

    WHSInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _instrumentationLogger)
    {
        instrumentationLogger = _instrumentationLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActivity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivity getActivity(str _activityName)
    {
        return instrumentationLogger.activity(ActivityNamePrefix + _activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInstrumentationWaveWorkCreatedQtyValidatorActivities newFromLogger(WHSInstrumentationLogger _instrumentationLogger)
    {
        return new WHSInstrumentationWaveWorkCreatedQtyValidatorActivities(_instrumentationLogger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkWorkLinesInventQtyWorkInSyncWithExpectedCreatedQuantities</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext checkWorkLinesInventQtyWorkInSyncWithExpectedCreatedQuantities()
    {
        return instrumentationLogger.activityContext(this.getActivity('checkWorkLinesInventQtyWorkInSyncWithExpectedCreatedQuantities'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWaveUpdatedLoadLineRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void logWaveUpdatedLoadLineRecId(RefRecId _waveUpdatedLoadLineRecId)
    {
        instrumentationLogger.logInformation(strFmt('%1:%2', WhsWaveUpdatedLoadLineRecId, _waveUpdatedLoadLineRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logLoadLineRefRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void logLoadLineRefRecId(RefRecId _loadLineRefRecId)
    {
        instrumentationLogger.logInformation(strFmt('%1:%2', LoadLineRefRecId, _loadLineRefRecId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>