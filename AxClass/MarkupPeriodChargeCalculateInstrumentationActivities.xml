<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupPeriodChargeCalculateInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MarkupPeriodChargeCalculateInstrumentationActivities</c> class provides activity contexts to the period charge calculation instrumentation logging.
/// </summary>
internal final class MarkupPeriodChargeCalculateInstrumentationActivities
{
    private const str PeriodChargePrefix = 'PeriodCharge';
    private const str RunCalculationActivity = 'RunCalculation';
    private const str PopulateInvoiceDataActivity = 'PopulateInvoiceData';
    private const str ProcessOperationActivity = 'ProcessOperation';
    private const str InitializeInvoiceLineBaseActivity = 'InitializeInvoiceLineBase';
    private const str RuleLineTypeProperty = 'RuleLineTypeProperty';
    private const str CustInvoiceJourRecIdProperty = 'CustInvoiceJourRecIdProperty';
    private const str NumberOfThreadsProperty = 'NumberOfThreadsProperty';
    private const str CustInvoiceTransRecIdCountProperty = 'CustInvoiceTransRecIdCountProperty';

    private MarkupInstrumentationLogger logger;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(MarkupInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static MarkupPeriodChargeCalculateInstrumentationActivities newFromLogger(MarkupInstrumentationLogger _logger)
    {
        return new MarkupPeriodChargeCalculateInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(strFmt('%1.%2', PeriodChargePrefix, _activityName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runCalculation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runCalculation()
    {
        return this.activityContext(RunCalculationActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInvoiceData</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext populateInvoiceData()
    {
        return this.activityContext(PopulateInvoiceDataActivity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processOperationActivity</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext processOperationActivity(MarkupPeriodChargeBatchHelpers _numberOfThreads)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ProcessOperationActivity);

        activityContext.addCustomProperty(NumberOfThreadsProperty, int2str(_numberOfThreads));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeInvoiceLineBaseActivity</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext initializeInvoiceLineBaseActivity(MarkupPeriodChargeRuleLineType _ruleType, CustInvoiceJour _custInvoiceJour)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(InitializeInvoiceLineBaseActivity);

        activityContext.addCustomProperty(RuleLineTypeProperty, enum2Symbol(enumNum(MarkupPeriodChargeRuleLineType), _ruleType));
        activityContext.addCustomProperty(CustInvoiceJourRecIdProperty, int642Str(_custInvoiceJour.RecId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInitializeInvoiceLineBaseRecord</Name>
				<Source><![CDATA[
    internal MarkupPeriodChargeCalculateInstrumentationActivities logInitializeInvoiceLineBaseRecord(SysInstrumentationActivityContext _activityContext, Common _common)
    {
        _activityContext.addCustomProperty(tableId2Name(_common.TableId), any2Str(_common.RecId));
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logCustInvoiceTransRecIdCount</Name>
				<Source><![CDATA[
    internal MarkupPeriodChargeCalculateInstrumentationActivities logCustInvoiceTransRecIdCount(SysInstrumentationActivityContext _activityContext, MarkupPeriodChargeCustInvoiceTransRecIdCount _custInvoiceTransRecIdCount)
    {
        _activityContext.addCustomProperty(CustInvoiceTransRecIdCountProperty, int2Str(_custInvoiceTransRecIdCount));
        return this;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>