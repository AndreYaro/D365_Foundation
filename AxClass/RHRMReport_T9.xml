<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMReport_T9</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RHRMReport_T9 extends RHRMReport implements BatchRetryable
{
    RHRMOrderTable           orderTable;
    RHRMOrderTrans           orderTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>animationBoxCaption</Name>
				<Source><![CDATA[
    public str animationBoxCaption()
    {
        return "@RUP1726";
    }

]]></Source>
			</Method>
			<Method>
				<Name>animationBoxText</Name>
				<Source><![CDATA[
    public str animationBoxText()
    {
        return "@RUP1808";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initData</Name>
				<Source><![CDATA[
    public void initData(Args _args)
    {
        super(_args);
        orderTrans = _args.record();
        orderTable = RHRMOrderTable::find(orderTrans.OrderTableRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    public boolean prompt()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RPayHistory rpayHistoryLast;

        wordDocument.insertFieldValue(#CI_Name,               CompanyInfo::find().Name);

        wordDocument.insertFieldValue(#CI_CodeOKPO_RU,        CompanyInfoHelper::partyOKPOasOfDate_RU(CompanyInfo::find(), orderTable.TransDate));

        wordDocument.insertFieldValue(#VNBT_tripOrder,        orderTable.OrderNum);

        wordDocument.insertFieldValue(#VNBT_tripOrderDate,    date2str(orderTable.TransDate,123,2,2,2,2,4, DateFlags::None));

        wordDocument.insertFieldValue(#ET_Name,               orderTrans.emplName());

        wordDocument.insertFieldValue(#ET_EmplId,             orderTrans.EmplId);

        rpayHistoryLast = RPayHistory::findLastSignOnMove(orderTrans.EmplId, orderTrans.StartDate, orderTrans.RecId);

        wordDocument.insertFieldValue(#Organization,          RPayHRMOrganization::find(rpayHistoryLast.HrmOrganizationId).Description);

        wordDocument.insertFieldValue(#Position,              rpayHistoryLast.titleId());

        wordDocument.insertFieldValue(#VNBT_TownCountryOrg,   this.delimiter(this.delimiter(this.delimiter(LogisticsAddressCountryRegionTranslation::find(LogisticsPostalAddress::findByLocation(orderTable.TripLocation).CountryRegionId).LongName,
                                                                                           LogisticsAddressState::find(LogisticsPostalAddress::findByLocation(orderTable.TripLocation).CountryRegionId, LogisticsPostalAddress::findByLocation(orderTable.TripLocation).State).Name),
                                                                                           LogisticsPostalAddress::findByLocation(orderTable.TripLocation).City),
                                                                                           orderTable.TripOrganization));

        wordDocument.insertFieldValue(#VNBT_tripObject,       orderTrans.TripObject);

        wordDocument.insertFieldValue(#VNBT_dayNumber,        int2str(orderTrans.EndDate - orderTrans.StartDate + 1));

        if (orderTrans.StartDate)
            wordDocument.insertFieldValue(#VNBT_start,        this.dateInWord(orderTrans.StartDate));

        if (orderTrans.EndDate)
            wordDocument.insertFieldValue(#VNBT_end,          this.dateInWord(orderTrans.EndDate));

        wordDocument.insertFieldValue(#VNBT_tripAtCost,       orderTrans.TripAtCost);

        wordDocument.insertFieldValue(#VNBT_reason,           strfmt("@GLS103885",
                                                                     "@RUP2206",
                                                                     orderTrans.AttachDocNum,
                                                                     orderTrans.AttachDocDate));

        wordDocument.insertFieldValue(#reason,                orderTable.Reason);

        wordDocument.insertFieldValue(#OTR_title,             OfficialsTable_RU::findDirector().Title);
        wordDocument.insertFieldValue(#OTR_name,              OfficialsTable_RU::findDirector().Name);
        wordDocument.unlinkFields();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>