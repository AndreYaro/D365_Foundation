<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSGS1DefaultGenericSetupCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class WHSGS1DefaultGenericSetupCreator
{
    RecordInsertList genericSetupList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WHSGS1DefaultGenericSetupCreator::createDefaultGenericSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefaultGenericSetup</Name>
				<Source><![CDATA[
    private static void createDefaultGenericSetup()
    {     
        if (!WHSGS1ParsingSetup::isParsingSetupMade())
        {
            throw error("@WAX:GS1MakeParsingSetupWarning");
        }

        ttsbegin;

        WHSGS1DefaultGenericSetupCreator::clearGenericSetup();
        WHSGS1DefaultGenericSetupCreator defaultGenericSetupCreator = new WHSGS1DefaultGenericSetupCreator();
        defaultGenericSetupCreator.insertDefaultValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearGenericSetup</Name>
				<Source><![CDATA[
    private static void clearGenericSetup()
    {
        WHSGS1GenericSetup genericSetup;

        delete_from genericSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDefaultValues</Name>
				<Source><![CDATA[
    private void insertDefaultValues()
    {
        genericSetupList = new RecordInsertList(tableNum(WHSGS1GenericSetup));

        this.populateRecordInsertList();

        genericSetupList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateRecordInsertList</Name>
				<Source><![CDATA[
    private void populateRecordInsertList()
    {
        this.addRecord(WHSGS1DefaultMDIdentifiers::ConsolidateFromLicensePlateId, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ConsolidateToLicensePlateId, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ExpDate, WHSGS1DefaultIdentifiers::ExpDateIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::InventBatchId, WHSGS1DefaultIdentifiers::BatchIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::InventSerialId, WHSGS1DefaultIdentifiers::SerialIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ItemId, WHSGS1DefaultIdentifiers::GTINIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LicensePlateId, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LocOrLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LocOrLP_From, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LocOrLP_To, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LocOrLPCheck, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPAdjustIn, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPBreakChildLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPBreakParentLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPBuildChildLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPBuildParentLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::LPVerification, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::NewQty, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ProductConfirmation, WHSGS1DefaultIdentifiers::GTINIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::Qty, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyAdjust, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyShort, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyToConsume, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyToPick, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyToPut, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyToScrap, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::QtyVerification, WHSGS1DefaultIdentifiers::QtyIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::SortLicensePlateId, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::TargetLicensePlateId, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ChildLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::ParentLP, WHSGS1DefaultIdentifiers::SSCCIdentifier);
        this.addRecord(WHSGS1DefaultMDIdentifiers::Id, WHSGS1DefaultIdentifiers::SSCCIdentifier);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRecord</Name>
				<Source><![CDATA[
    private void addRecord(WHSGS1MDIdentifier  _mdIdentifier,
                            WHSGS1Identifier   _identifier)
    {
        WHSGS1GenericSetup genericSetup;

        if (WHSGS1ParsingSetup::exist(_identifier))
        {
            genericSetup.initValue();

            genericSetup.Identifier     = _identifier;
            genericSetup.MDIdentifier   = _mdIdentifier;

            if (genericSetup.validateWrite())
            {
                genericSetupList.add(genericSetup);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>