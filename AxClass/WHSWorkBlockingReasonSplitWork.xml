<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkBlockingReasonSplitWork</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class encapsulates the rules for the blocking reason for work that is being split.
/// </summary>
[WHSWorkBlockingReasonTypeAttribute(WHSWorkBlockingReasonType::SplitWork)]
internal class WHSWorkBlockingReasonSplitWork extends WHSWorkBlockingReason
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canUnBlockReason</Name>
				<Source><![CDATA[
    public WHSWorkUnBlockingValidationResult canUnBlockReason()
    {
        if (this.isWorkBeingSplit())
        {   
            return WHSWorkUnBlockingValidationResult::newFailureWithMessage(this.detailedBlockingMessage());
        }
            
        return WHSWorkUnBlockingValidationResult::newSuccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorkBeingSplit</Name>
				<Source><![CDATA[
    private boolean isWorkBeingSplit()
    {
        return WHSActiveWorkSplit::find(workTable.WorkId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailedBlockingMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected internal str detailedBlockingMessage()
    {
        return strFmt("@WAX:WHSWorkBlockingSplitWorkReasonErrorMessage", workTable.WorkId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected internal WHSWorkBlockingReasonDescription description()
    {
        return "@WAX:WHSWorkBlocking_SplitWork_Description";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>