<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ACOJournalStatic_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysTableNameFactoryAttribute(tableStr(ACOJournalTable_BR))]
class ACOJournalStatic_BR extends JournalStatic
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(JournalTableMap _journalTable)
    {
        if (!BrazilParameters::isEnabled())
        {
            throw error(strFmt("@SYS19306",funcName()));
        }
        
        super(_journalTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalName</Name>
				<Source><![CDATA[
    JournalNameMap journalName()
    {
        ACOJournalName_BR    acoJournalName;

        return acoJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTable</Name>
				<Source><![CDATA[
    JournalTableMap journalTable()
    {
        ACOJournalTable_BR    acoJournalTable;

        return acoJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTrans</Name>
				<Source><![CDATA[
    JournalTransMap journalTrans()
    {
        ACOJournalTransOverHead_BR acoJournalTransOverHead;

        return acoJournalTransOverHead;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTypeIdToEnum</Name>
				<Source><![CDATA[
    ACOJournalType_BR journalTypeIdToEnum(Integer _journalTypeId)
    {
        ACOJournalType_BR journalType = _journalTypeId;

        return journalType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemStrLines</Name>
				<Source><![CDATA[
    str menuItemStrLines(Integer _journalType = journalTable.JournalType)
    {
        return menuitemdisplaystr(ACOJournalTableOverheadCosts_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>nameFieldIdJournalNameId</Name>
				<Source><![CDATA[
    fieldId nameFieldIdJournalNameId()
    {
        return fieldnum(ACOJournalName_BR,JournalNameId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalTableData</Name>
				<Source><![CDATA[
    JournalTableData newJournalTableData(ACOJournalTable_BR _journalTable)
    {
        return new ACOJournalTableData_BR(_journalTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalTransData</Name>
				<Source><![CDATA[
    JournalTransData newJournalTransData(JournalTransMap _journalTrans, JournalTableData _journalTableData)
    {
        return new ACOJournalTransData_BR(_journalTrans,_journalTableData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalVoucherObject</Name>
				<Source><![CDATA[
    JournalVoucherObject newJournalVoucherObject(JournalVoucherList _journalVoucherList)
    {
        return new ACOJournalVoucherObject_BR(_journalVoucherList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefJournalId</Name>
				<Source><![CDATA[
    public NumberSequenceReference numRefJournalId()
    {
        if (!numberSequenceRefJourIdCached.RecId)
        {
            numberSequenceRefJourIdCached = ACOParameters_BR::numRefAbsorbedCostsVoucher();
        }

        return numberSequenceRefJourIdCached;
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardJournalNameId</Name>
				<Source><![CDATA[
    JournalNameId standardJournalNameId(Integer _journalTypeId)
    {
        return 'OC';
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrongJournalTypeMessage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Builds an error message by using the specified journal type.
    /// </summary>
    /// <param name="_journalTypeId">
    ///    The ID of the journal type to consider the wrong journal type.
    /// </param>
    /// <returns>
    ///    An error message that indicates an incorrect journal type.
    /// </returns>
    public str wrongJournalTypeMessage(int _journalTypeId)
    {
        return strFmt("@SYS22977", this.journalTypeIdToEnum(_journalTypeId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>