<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_KanbanJob_TransIssue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventMov_KanbanJob_TransIssue extends InventMov_KanbanJob_Transfer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canHaveReservedWork</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the movement type can have WHS work created that takes over reserving the lower levels of the hierarchy.
    /// </summary>
    /// <returns>
    /// true if the movement item is WHS enabled; otherwise, false.
    /// </returns>
    public boolean canHaveReservedWork()
    {
        return this.isItemWHSEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the relationship between the inventory transactions originator and the owner.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public void createOriginOwnerRelationship()
    {
        InventTransOriginId originId = this.inventTransOriginId();

        if (originId && kanbanJob.RecId)
        {
            InventTransOriginKanbanJobTrsIssue::writeOriginOwnerRelationship(kanbanJob.RecId, originId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the relationship between the inventory transactions originator and the owner that
    ///    corresponds.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public void deleteOriginOwnerRelationship()
    {
        if (kanbanJob)
        {
            InventTransOriginKanbanJobTrsIssue::deleteOwnerRelationship(kanbanJob.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the movement <c>InventDimId</c> value.
    /// </summary>
    /// <returns>
    ///    An <c>InventDimId</c> value.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base method. Use the <c>IssueInventDimId</c> field from the
    ///    <c>KanbanJob</c> table.
    /// </remarks>
    public InventDimId inventDimId()
    {
        return kanbanJob.IssueInventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the ID of the inventory transaction originator that corresponds to the movement.
    /// </summary>
    /// <param name="_inventTransOriginId">
    ///    The new value of the ID of the inventory transaction originator.
    /// </param>
    /// <returns>
    ///    The ID of the inventory transaction originator that corresponds to the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransOriginId inventTransOriginId(InventTransOriginId _inventTransOriginId = inventTransOriginId)
    {
        if (_inventTransOriginId != inventTransOriginId)
        {
            inventTransOriginId = _inventTransOriginId;
        }
        else
        {
            if (!inventTransOriginId)
            {
                inventTransOriginId = InventTransOriginKanbanJobTrsIssue::findInventTransOriginId(kanbanJob.RecId);
            }
        }

        return inventTransOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeWMSOrderControlled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether output orders must be used with the movement.
    /// </summary>
    /// <returns>
    ///    true if an output order must be created; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    This method is an override of the base class method.
    /// </remarks>
    public boolean mustBeWMSOrderControlled()
    {
        return kanbanJob.type().mustBeWMSOrderControlled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an inventory movement from the original <c>KanbanJob</c> table buffer.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>InventMovement</c> class if the current <c>KanbanJob</c> record has been
    ///    inserted; otherwise, null.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_Orig()
    {
        return kanbanJob.RecId ? new InventMov_KanbanJob_TransIssue(kanbanJob.orig(),kanbanJob.orig().type()) : null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferIssue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves an instance of the inventory movement.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>InventMovement</c> class.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_TransferIssue()
    {
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_TransferReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>InventMovement</c> class that is based on the <c>KanbanJob</c>
    ///    table buffer of this movement.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>InventMovement</c> class that is constructed based on the <c>KanbanJob</c>
    ///    table buffer of the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventMovement newMovement_TransferReceipt()
    {
        return InventMovement::construct(this.buffer(),InventMovSubType::TransferReceipt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingBalanceSheet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the balance sheet ledger posting type for the movement.
    /// </summary>
    /// <returns>
    ///    A <c>LedgerPostingType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method. Use the <c>LedgerPostingType::InventIssue</c> type for
    ///    posting.
    /// </remarks>
    public LedgerPostingType postingBalanceSheet()
    {
        return LedgerPostingType::InventIssue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingOperations</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the operations ledger posting type for the movement.
    /// </summary>
    /// <returns>
    ///    A <c>LedgerPostingType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides a base class method. Use a value of
    ///    <c>LedgerPostingType::InventInterUnitReceivable</c> for posting.
    /// </remarks>
    public LedgerPostingType postingOperations()
    {
        return LedgerPostingType::InventInterUnitReceivable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the inventory dimension of the <c>KanbanJob</c> table.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The new <c>InventDimId</c> value.
    /// </param>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public void setInventDimId(InventDimId _inventDimId)
    {
        kanbanJob.setIssueInventDimId(_inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferDirection</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the direction of the transfer movements.
    /// </summary>
    /// <returns>
    ///    The direction the transfer movements.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventDirection transferDirection()
    {
        return InventDirection::Issue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the transfer counterpart inventory transaction originator that corresponds to
    ///    the movement.
    /// </summary>
    /// <returns>
    ///    The ID of a transfer counterpart inventory transaction originator that corresponds to the movement.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransOriginId transferInventTransOriginId()
    {
        return InventTransOriginKanbanJobTrsReceipt::findInventTransOriginId(kanbanJob.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the issue transaction ID from the <c>KanbanJob</c> table.
    /// </summary>
    /// <returns>
    ///    The issue inventory blocking transaction ID.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransId transId()
    {
        return kanbanJob.IssueInventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the transaction type of the movement.
    /// </summary>
    /// <returns>
    ///    An <c>InventTransType</c> enumeration value.
    /// </returns>
    /// <remarks>
    ///    This method overrides the base class method.
    /// </remarks>
    public InventTransType transType()
    {
        return InventTransType::KanbanJobTransferIssue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromKanbanJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventMov_KanbanJob_TransIssue</c> class based on the
    ///    specified record.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The record in the <c>KanbanJob</c> table for which the class is instantiated.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_KanbanJob_TransIssue</c> class.
    /// </returns>
    public static InventMov_KanbanJob_TransIssue newFromKanbanJob(KanbanJob _kanbanJob)
    {
        return new InventMov_KanbanJob_TransIssue(_kanbanJob);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>