<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteCalc_Formula2</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RouteCalc_Formula2 extends RouteCalcConsumption
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcWrkCtrProcessTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the processing time using a batch formula.
    /// </summary>
    /// <param name="_calc">
    ///    A <c>BOMCalcData</c> class holding basic calculation information.
    /// </param>
    /// <param name="_primaryRoute">
    ///    A <c>RouteMap</c> map for the primary route.
    /// </param>
    /// <param name="_primaryOpr">
    ///    A <c>RouteOprMap</c> map for the primary operation.
    /// </param>
    /// <param name="_wrkCtrId">
    ///    A <c>WrkCtrId</c> value that identifies the resource to use in the calculation.
    /// </param>
    /// <returns>
    ///    The duration in hours for the process job.
    /// </returns>
    public Hours calcWrkCtrProcessTime(BOMCalcData  _calc,
                                       RouteMap     _primaryRoute,
                                       RouteOprMap  _primaryOpr,
                                       WrkCtrId     _wrkCtrId = '')
    {
        RouteOprTime    hoursBatch;
        InventQty       qty;
        InventQty       batchSize;
        int             batchesUsed;

        if (!_primaryRoute.RecId || !_primaryOpr.RecId || _primaryRoute.OprPriority != RouteOprPriority::Primary)
            throw error("@SYS17275");

        //Total quantity to produce including accumulated error
        qty             = _calc.seriesSize() * (_primaryRoute.AccError > 1 ? _primaryRoute.AccError : 1);

        //Time in hours per batch
        hoursBatch      = _primaryOpr.ProcessTime * minOne(_primaryOpr.ToHours);
        batchSize       = _primaryOpr.ProcessPerQty;

        //Find number of batches used;
        batchesUsed     = real2int(roundUpDec(qty / minOne(batchSize),0));

        //Total time = number of batches needed * hours/batch
        return decround(batchesUsed * hoursBatch,decimals);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>