<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesAgreementFulfillmentCalculateController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The The <c>RetailSalesAgreementFulfillmentCalculateController</c> class controls the execution of the <c>RetailSalesAgreementFulfillmentCalculateService</c>.
/// </summary>
internal class RetailSalesAgreementFulfillmentCalculateController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();

        this.parmRegisterCallbackForReliableAsyncCall(false);
        this.parmExecutionMode(SysOperationExecutionMode::ScheduledBatch);

        this.parmClassName(classStr(RetailSalesAgreementFulfillmentCalculateService));
        this.parmMethodName(methodStr(RetailSalesAgreementFulfillmentCalculateService, processOperation));
        this.parmDialogCaption(this.caption());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RetailSalesAgreementFulfillmentCalculateController operation;

        operation = new RetailSalesAgreementFulfillmentCalculateController();
        operation.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@RetailPricing:RetailSalesAgreementFulfillmentCalculateLabel";
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDialogCaption</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public LabelType parmDialogCaption(LabelType _dialogCaption = '')
    {
        return this.caption();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the job must be run in batch.
    /// </summary>
    /// <returns>Always return true.</returns>
    public boolean mustGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>