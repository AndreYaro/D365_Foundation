<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustomerMergeValidation_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>MCRCustomerMergeValidation_BR</c> class contains
///     methods used to validade the localization fields during
///     the customer merge.
/// </summary>
class MCRCustomerMergeValidation_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ValidateCustomerMerge</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validate the Brazilian localization for the cutomer merge.
    /// </summary>
    /// <param name="_mergeFrom">
    ///     The account number of the customer to be merged to another customer.
    /// </param>
    /// <param name="_mergeTo">
    ///     The account number of the customer that is absorbing another customer.
    /// </param>
    public static void ValidateCustomerMerge(CustAccount _mergeFrom, CustAccount _mergeTo)
    {
        CustTable       custTableMergeFrom, custTableMergeTo;

        custTableMergeTo = CustTable::find(_mergeTo);
        custTableMergeFrom = CustTable::find(_mergeFrom);

        // check customer's party type
        if (custTableMergeTo.partyType() != custTableMergeFrom.partyType())
        {
            throw error("@SYP4860088");
        }

        // compare CNPJ/CPF when both customers have one
        if ((custTableMergeFrom.CNPJCPFNum_BR && custTableMergeTo.CNPJCPFNum_BR)
            && (custTableMergeTo.CNPJCPFNum_BR != custTableMergeFrom.CNPJCPFNum_BR))
        {
            throw error("@SYP4860089");
        }

         // when just one customer has CNPJ/CPF, it must be the parent customer
        if (custTableMergeFrom.CNPJCPFNum_BR && !custTableMergeTo.CNPJCPFNum_BR)
        {
            throw error(strfmt("@SYP4860090", custTableMergeFrom.AccountNum));
        }
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>