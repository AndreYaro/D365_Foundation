<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionDefaultCashflowResolver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CashflowDimensionResolver</c> class resolves default dimension values for the cashflow forcasting format.
/// </summary>
final public class DimensionDefaultCashflowResolver extends DimensionResolver
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newResolver</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of a the <c>CashflowDimensionResolver</c> class.
    /// </summary>
    /// <param name = "_dimensionValues">A string of dimension values separated by the dimension integration delimiter.</param>
    /// <returns>The new instance of an <c>DimensionDefaultCashflowResolver</c> subclass.</returns>
    public static DimensionDefaultCashflowResolver newResolver(DefaultDimensionIntegrationValues _dimensionValues)
    {
        DimensionDefaultCashflowResolver dimensionDefaultResolver = new DimensionDefaultCashflowResolver();
        
        dimensionDefaultResolver.parmDimensionFormat(dimensionDefaultResolver.getDimensionAttributeFormat());
        dimensionDefaultResolver.parmDimensionValues(_dimensionValues);

        return dimensionDefaultResolver;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionNameValueListServiceProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>DimensionNameValueListServiceProvider</c> instance for the specified dimension name value list contract.
    /// </summary>
    /// <param name="_dimensionNameValueListContract">
    /// The <c>DimensionNameValueListContract</c> instance.
    /// </param>
    /// <returns>
    /// The <c>DimensionNameValueListServiceProvider</c> instance.
    /// </returns>
    protected DimensionNameValueListServiceProvider getDimensionNameValueListServiceProvider(DimensionNameValueListContract _dimensionNameValueListContract)
    {
        DimensionDefaultContract dimensionDefaultContract = _dimensionNameValueListContract;

        if (!dimensionDefaultContract)
        {
            throw error("@SYS326400", DimensionServiceFaults::DimensionContractIsNotInitialized);
        }

        return DimensionNameValueListServiceProvider::newForDimensionNameValueListContract(dimensionDefaultContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructDimensionContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of a subclass of the <c>DimensionNameValueListContract</c> class.
    /// </summary>
    /// <returns>The new instance of an <c>DimensionNameValueListContract</c> subclass.</returns>
    protected DimensionNameValueListContract constructDimensionContract()
    {
        return new DimensionDefaultContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionAttributeFormat</Name>
				<Source><![CDATA[
    protected DefaultDimensionIntegrationStructureDisplay getDimensionAttributeFormat()
    {
        DefaultDimensionIntegrationStructureDisplay dimensionAttributesFormat;
        
        dimensionAttributesFormat = DimensionHierarchy::getDisplayStringDimensionIntegrationStructure(
            DimensionDataEntityStructureType::DataEntityCashFlowDimensionFormat);

        return dimensionAttributesFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtendedDataTypeName</Name>
				<Source><![CDATA[
    protected ExtendedDataTypeName getExtendedDataTypeName()
    {
        return extendedtypestr(DimensionDefaultCashflow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumValue</Name>
				<Source><![CDATA[
    protected DimensionAccountType getEnumValue()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionHierarchyName</Name>
				<Source><![CDATA[
    protected Name getDimensionHierarchyName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionHierarchyType</Name>
				<Source><![CDATA[
    protected DimensionHierarchyType getDimensionHierarchyType()
    {
        return DimensionHierarchyType::CashFlowForecast;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>