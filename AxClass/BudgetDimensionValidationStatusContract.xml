<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetDimensionValidationStatusContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetDimensionValidationStatusContract</c> class is used as a data contract for budget dimension validation.
/// </summary>
[System.ComponentModel.Composition.ExportMetadataAttribute(enumstr(LedgerDimensionType), LedgerDimensionType::Budget),
 System.ComponentModel.Composition.ExportAttribute(identifierstr(Dynamics.AX.Application.DimensionValidationStatusContract))]
public class BudgetDimensionValidationStatusContract extends LedgerDimensionValidationStatusContract
{
    // Cache for doDisplayValidValue
    // Value: [DimensionAttribute.RecId, DimensionAttribute localized name]
    List dimensionAttributesBudgetEnabled;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addValidationMessagesForStructureChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the validation messages for the structure changes status to the validation messages list.
    /// </summary>
    /// <remarks>
    /// Added messages for the case where the dimension is not enabled for budget.
    /// </remarks>
    protected void addValidationMessagesForStructureChanged()
    {
        if (this.parmStructureChangedError() == DimensionStructureChangedError::DimensionNotEnabledForBudget)
        {
            this.addValidationMessage("@SYS341689", #DimensionAttributeIsNotBudgetEnabled);
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doDisplayValidValue</Name>
				<Source><![CDATA[
    protected boolean doDisplayValidValue(DimensionAttributeRecId _dimensionAttributeId, DimensionStorageSegment _segment)
    {
        BudgetDimensionValidationRequest budgetDimensionValidationRequest;

        if (!dimensionAttributesBudgetEnabled)
        {
            budgetDimensionValidationRequest = this.parmValidationRequest() as BudgetDimensionValidationRequest;

            if (budgetDimensionValidationRequest)
            {
                dimensionAttributesBudgetEnabled = BudgetPrimaryLedgerDimensionAttribute::budgetDimensionsList(budgetDimensionValidationRequest.parmLedgerRecId());
            }
            else
            {
                // The BudgetDimensionValidationStatusContract instance should not have been instantiated without a BudgetDimensionValidationRequest instance.
                Debug::assert(false);
            }
        }

        return BudgetPrimaryLedgerDimensionAttribute::isDimensionAttributeInList(_dimensionAttributeId, dimensionAttributesBudgetEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(DimensionValidationRequest _validationRequest = null)
    {
        super(_validationRequest);

        dimensionAttributesBudgetEnabled = null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>