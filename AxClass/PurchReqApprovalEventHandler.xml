<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqApprovalEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqApprovalEventHandler</c> class is used as the event handler for the purchase
/// requisition workflow.
/// </summary>

class PurchReqApprovalEventHandler implements
    WorkflowElementCompletedEventHandler,
    WorkflowElementCanceledEventHandler,
    WorkflowElementReturnedEventHandler,
    WorkflowElemChangeRequestedEventHandler,
    WorkflowElementStartedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs when the approval is canceled.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval is canceled.
    /// </remarks>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeRequested</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs when a change is requested.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when a change is requested.
    /// </remarks>
    public void changeRequested(WorkflowElementEventArgs _workflowElementEventArgs)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the approval completed event.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval is completed.
    /// </remarks>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        Common              common;
        PurchReqTable       purchReqTable;
        PurchReqLine        purchReqLine;
        boolean             ret     = true;
        VersioningPurchReq  versioningPurchReq;

        if (_workflowElementEventArgs.parmWorkflowContext().parmTableId() == tableNum(PurchReqTable))
        {
            common          = PurchReqTable::find(_workflowElementEventArgs.parmWorkflowContext().parmRecId());
            purchReqTable   = common;
            ret             = PurchReqWorkflow::validateAccountingDistributions(purchReqTable.RecId);

            versioningPurchReq = VersioningPurchReq::newVersioningPurchReq(purchReqTable.RecId);
            versioningPurchReq.archiveCurrentVersion(purchReqTable.RecId);
        }
        else
        {
            common          = PurchReqLine::find(_workflowElementEventArgs.parmWorkflowContext().parmRecId());
            purchReqLine    = common;
            ret             = PurchReqWorkflow::validateAccountingDistributions(purchReqLine.PurchReqTable);

            if (ret)
            {
                PurchReqWFStatusTransitionHelper::setPurchReqLineStatus(purchReqLine.RecId, PurchReqRequisitionStatus::Approved);
            }
        }

        if (ret)
        {
            PurchReqTable::throwIfRFQPending(common.TableId == tableNum(PurchReqTable), common.RecId);
        }

        if (!ret)
        {
            throw error("");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the status on the corresponding record.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval is returned.
    /// </remarks>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
    {
        if (_workflowElementEventArgs.parmWorkflowContext().parmTableId() == tableNum(PurchReqTable))
        {
            PurchReqWFStatusTransitionHelper::setPurchReqTable2Rejected(_workflowElementEventArgs.parmWorkflowContext().parmRecId());
        }
        else
        {
            PurchReqWFStatusTransitionHelper::setPurchReqLineStatus(_workflowElementEventArgs.parmWorkflowContext().parmRecId(), PurchReqRequisitionStatus::Rejected);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs when the approval is started.
    /// </summary>
    /// <param name="_workflowElementEventArgs">
    /// A <c>WorkflowElementEventArgs</c> instance.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the approval is started.
    /// </remarks>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>