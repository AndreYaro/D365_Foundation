<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchVendorPortalDocumentHandling</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class handles document attachment for records that are used for CRUD operations on the vendor portal.
/// </summary>
public static class PurchVendorPortalDocumentHandling
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocuRefOnInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the restriction for the attachment to external when it is attached to records that are used for CRUD operations on the vendor side,
    /// and set the company on the attachment to the current company.
    /// </summary>
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnInsert))]
    public static void DocuRefOnInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        switch (_docuRef.RefTableId)
        {
            case tablenum(PurchaseOrderResponseHeader):
            case tablenum(PurchaseOrderResponseLine):
            case tablenum(PurchRFQReplyTable):
            case tablenum(PurchRFQReplyLine):
                {
                    changecompany(_docuRef.RefCompanyId)
                    {
                        _docuRef.Restriction        = DocuRestriction::External;
                        _docuRef.ActualCompanyId    = curext();
                    }

                    break;
                }

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnPostInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the response line state after the insertion of a new attachemnt.
    /// </summary>
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnPostInsert))]
    public static void DocuRefOnPostInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(PurchaseOrderResponseLine))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                PurchVendorPortalDocumentHandling::updateResponseLineState(_docuRef.RefRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnPostUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the response line state after the deletion of an attachemnt.
    /// </summary>
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnPostUpdate))]
    public static void DocuRefOnPostUpdate(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(PurchaseOrderResponseLine))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                PurchVendorPortalDocumentHandling::updateResponseLineState(_docuRef.RefRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnPostDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the response line state after the modification of an attachemnt.
    /// </summary>
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnPostDelete))]
    public static void DocuRefOnPostDelete(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        if (_docuRef.RefTableId == tablenum(PurchaseOrderResponseLine))
        {
            changecompany(_docuRef.RefCompanyId)
            {
                PurchVendorPortalDocumentHandling::updateResponseLineState(_docuRef.RefRecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateResponseLineState</Name>
				<Source><![CDATA[
    private static void updateResponseLineState(PurchaseOrderResponseLineRecId _purchaseOrderResponseLineRecId)
    {
        ttsbegin;
        PurchaseOrderResponseLine purchaseOrderResponseLine = PurchaseOrderResponseLine::find(_purchaseOrderResponseLineRecId, true);
        PurchaseOrderResponseVersion responseVersion = purchaseOrderResponseLine.purchaseOrderResponseHeader().findLatestResponseVersion();
        if (responseVersion && responseVersion.ResponseState == PurchaseOrderResponseState::Editing && purchaseOrderResponseLine.LineState == PurchaseOrderResponseLineState::Accepted)
        {
            purchaseOrderResponseLine.LineState = PurchaseOrderResponseLineState::AcceptedWithChanges;
            purchaseOrderResponseLine.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>