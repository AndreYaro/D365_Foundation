<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableSalesPurchTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesTableSalesPurchTable</c> class contains <c>SalesTable</c> table specific functionality and mapped fields
/// related to the <c>SalesPurchTable</c> table map.
/// </summary>
[SalesPurchTableInterfaceFactory(tableStr(SalesTable))]
class SalesTableSalesPurchTable extends SalesPurchTableInterface
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSalesTable</Name>
				<Source><![CDATA[
    protected SalesTable parmSalesTable()
    {
        return this.parmSalesPurchTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderId</Name>
				<Source><![CDATA[
    public Num parmOrderId()
    {
        return this.parmSalesTable().SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCashDiscPercent</Name>
				<Source><![CDATA[
    public boolean hasCashDiscPercent()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent()
    {
        return this.parmSalesTable().CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public CashDiscCode parmCashDisc()
    {
        return this.parmSalesTable().CashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmCurrencyCode()
    {
        return this.parmSalesTable().CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmDiscPercent()
    {
        return this.parmSalesTable().DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public InclTax parmInclTax()
    {
        return this.parmSalesTable().InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public CustVendAC parmInvoiceAccount()
    {
        return this.parmSalesTable().InvoiceAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public CustVendAC parmOrderAccount()
    {
        return this.parmSalesTable().CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxModuleType</Name>
				<Source><![CDATA[
    public TaxModuleType parmTaxModuleType()
    {
        return this.parmSalesTable().taxModuleType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendGroup</Name>
				<Source><![CDATA[
    public SysGroup parmCustVendGroup()
    {
        return this.parmSalesTable().CustGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension()
    {
        return this.parmSalesTable().DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    public LanguageId parmLanguageId()
    {
        return this.parmSalesTable().LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId parmNumberSequenceGroup()
    {
        return this.parmSalesTable().NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public PaymTermId parmPayment()
    {
        return this.parmSalesTable().Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentSched</Name>
				<Source><![CDATA[
    public PaymSchedId parmPaymentSched()
    {
        return this.parmSalesTable().PaymentSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    internal TransDate parmDeliveryDate()
    {
        return this.parmSalesTable().DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymDayId</Name>
				<Source><![CDATA[
    internal PaymDayId parmPaymDayId()
    {
        return this.parmSalesTable().paymDayId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    internal TransDate parmFixedDueDate()
    {
        return this.parmSalesTable().FixedDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summaryLedgerDimension</Name>
				<Source><![CDATA[
    internal LedgerDimensionDefaultAccount summaryLedgerDimension()
    {
        return this.parmSalesTable().accountCustLedgerDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingLedgerDimension</Name>
				<Source><![CDATA[
    internal LedgerDimensionDefaultAccount clearingLedgerDimension()
    {
        return this.parmSalesTable().clearingLedgerDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingPeriod</Name>
				<Source><![CDATA[
    internal ClearingPeriod clearingPeriod()
    {
        return this.parmSalesTable().clearingPeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentSched</Name>
				<Source><![CDATA[
    internal void createPaymentSched()
    {
        this.parmSalesTable().createPaymentSched();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyPaymentSched</Name>
				<Source><![CDATA[
    internal void copyPaymentSched(CustVendInvoiceJour _custVendInvoiceJour)
    {
        this.parmSalesTable().copyPaymentSched(_custVendInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public PaymMode parmPaymMode()
    {
        return this.parmSalesTable().PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public PaymSpec parmPaymSpec()
    {
        return this.parmSalesTable().PaymSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSiteId</Name>
				<Source><![CDATA[
    public InventSiteId parmInventSiteId()
    {
        return this.parmSalesTable().InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public InventLocationId parmInventLocationId()
    {
        return this.parmSalesTable().InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFactureJourSortedList_RU</Name>
				<Source><![CDATA[
    protected void populateFactureJourSortedList_RU(RecordSortedList _list)
    {
        super(_list);

        CustInvoiceJour         invoiceJour;
        CustInvoiceSalesLink    invoiceLink;

        select invoiceJour
        join invoiceLink
            where  invoiceLink.InvoiceId   == invoiceJour.InvoiceId   &&
                   invoiceLink.InvoiceDate == invoiceJour.InvoiceDate &&
                   invoiceLink.SalesId     == invoiceJour.SalesId         &&
                   invoiceLink.OrigSalesId == this.parmSalesTable().SalesId;

        while (invoiceJour)
        {
            RecordSortedList tmpList = invoiceJour.factureJourSortedList_RU();
            boolean          loop;
            FactureJour_RU   factureJour;

            for (loop = tmpList.first(factureJour); loop; loop = tmpList.next(factureJour))
            {
                if (! _list.find(factureJour))
                {
                    _list.ins(factureJour);
                }
            }

            next invoiceJour;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementHeaderExt</Name>
				<Source><![CDATA[
    public AgreementHeaderExtRecId_RU getAgreementHeaderExt()
    {
        return this.parmSalesTable().salesTable_RU().AgreementHeaderExt_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastConsDate_JP</Name>
				<Source><![CDATA[
    public CustVendConsDate_JP getLastConsDate_JP()
    {
        return CustConsInvoice_JP::findByNaturalKey(this.getLastConsId_JP()).ConsDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastConsId_JP</Name>
				<Source><![CDATA[
    public CustVendConsId_JP getLastConsId_JP()
    {
        CustInvoiceJour         custInvoiceJour;
        CustInvoiceJour_W       custInvoiceJourW;

        select firstonly CustConsInvoice_JP from custInvoiceJourW
            order by CustConsInvoice_JP desc
        exists join custInvoiceJour
            where custInvoiceJour.RecId == custInvoiceJourW.CustInvoiceJour
                && custInvoiceJour.SalesId == this.parmSalesTable().SalesId;

        return CustConsInvoice_JP::find(custInvoiceJourW.CustConsInvoice_JP).ConsId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceAgreementDate</Name>
				<Source><![CDATA[
    public PriceAgreementDate_RU getPriceAgreementDate()
    {
        return this.parmSalesTable().salesTable_RU().PriceAgreementDate_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailSalesPurchTable</Name>
				<Source><![CDATA[
    public RetailSalesPurchTableMap getRetailSalesPurchTable()
    {
        return this.parmSalesTable().retailSalesTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDate_RU</Name>
				<Source><![CDATA[
    public PriceDate priceDate_RU()
    {
        #ISOCountryRegionCodes

        PriceAgreementDate_RU priceAgreementDate = super();

        if (!priceAgreementDate && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            SalesPurchLine      line    = new DictTable(tableNum(SalesLine)).makeRecord();
            SalesPurchLine_W    line_W  = new DictTable(tableNum(SalesLine)).makeRecord();

            select minof(PriceAgreementDate_RU) from line_W
                exists join line
                    where line_W.BaseRecId == line.RecId
                        && line.SalesPurchId == this.parmSalesTable().SalesId;

            priceAgreementDate = line_W.PriceAgreementDate_RU;
        }

        return priceAgreementDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateExcludeTaxFromInvoice</Name>
				<Source><![CDATA[
    public boolean validateExcludeTaxFromInvoice()
    {
        SalesLine       salesLine;

        while select salesLine
            where salesLine.SalesId == this.parmSalesTable().SalesId
        {
            if (!salesLine.salesPurchLineInterface().validateExcludeTaxFromInvoice(this.parmSalesTable().InclTax))
            {
                return false;
            }
        }

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>