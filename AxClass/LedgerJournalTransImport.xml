<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransImport</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LedgerJournalTransImport
{
    // This interface class is used for creating a LedgerJournalTrans by importing data from a file
    AccountNum          accountNum;
    AmountCurDebit      amountCurDebit;
    AmountCurCredit     amountCurCredit;
    CurrencyCode        currencyCode;
    InvoiceId           invoice;
    PaymId              paymId;
    TransDate           transDate;
    dataAreaId          primaryCompany;

    PaymReference               paymReference;
    DimensionDefault            defaultDimension;
    LedgerJournalTransTxt       txt;
    BankAccountID               custVendBankAccountId;
    container                   custTransId;
    container                   custTransAmount;
    DueDate                     dueDate;
    TaxGroup                    taxGroup;
    PaymTermId                  paymTermId;
    PaymNote                    paymentNotes;
    BankCentralBankPurposeCode  bankPurposeCode;
    BankCentralBankPurposeText  bankPurposeText;
    AmountCur                   sumAmountCur;

    DocumentDate        documentDate;
    DocumentNum         documentNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountNum</Name>
				<Source><![CDATA[
    MainAccountNum accountNum(MainAccountNum _accountNum = accountNum)
    {
        accountNum = _accountNum;
        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCurCredit</Name>
				<Source><![CDATA[
    AmountCurCredit amountCurCredit(AmountCurCredit _amountCurCredit = amountCurCredit)
    {
        amountCurCredit = _amountCurCredit;
        return amountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCurDebit</Name>
				<Source><![CDATA[
    AmountCurDebit amountCurDebit(AmountCurDebit _amountCurDebit = amountCurDebit)
    {
        amountCurDebit = _amountCurDebit;
        return amountCurDebit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankPurposeCode</Name>
				<Source><![CDATA[
    BankCentralBankPurposeCode bankPurposeCode(BankCentralBankPurposeCode _bankPurposeCode = bankPurposeCode)
    {
        bankPurposeCode = _bankPurposeCode;
        return bankPurposeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankPurposeText</Name>
				<Source><![CDATA[
    BankCentralBankPurposeText bankPurposeText(BankCentralBankPurposeText _bankPurposeText = bankPurposeText)
    {
        bankPurposeText = _bankPurposeText;
        return bankPurposeText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    void clear()
    {
        accountNum              = "";
        amountCurDebit          = 0;
        amountCurCredit         = 0;
        currencyCode            = "";
        invoice                 = "";
        paymId                  = "";
        transDate               = dateNull();
        paymReference           = "";
        defaultDimension        = 0;
        txt                     = "";
        custVendBankAccountId   = "";
        custTransId             = connull();
        dueDate                 = dateNull();
        taxGroup                = "";
        paymTermId              = "";
        custTransAmount         = connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyData</Name>
				<Source><![CDATA[
    void copyData(LedgerJournalTransImport _transImport)
    {
        this.clear();
        this.accountNum             (_transImport.accountNum());
        this.amountCurCredit        (_transImport.amountCurCredit());
        this.amountCurDebit         (_transImport.amountCurDebit());
        this.bankPurposeCode        (_transImport.bankPurposeCode());
        this.bankPurposeText        (_transImport.bankPurposeText());
        this.currencyCode           (_transImport.currencyCode());
        this.custTransAmount        (_transImport.custTransAmount());
        this.custTransId            (_transImport.custTransId());
        this.custVendBankAccountId  (_transImport.custVendBankAccountId());
        this.defaultDimension       (_transImport.defaultDimension());
        this.dueDate                (_transImport.dueDate());
        this.invoice                (_transImport.invoice());
        this.paymentNotes           (_transImport.paymentNotes());
        this.paymId                 (_transImport.paymId());
        this.paymReference          (_transImport.paymReference());
        this.paymTermId             (_transImport.paymTermId());
        this.sumAmountCur           (_transImport.sumAmountCur());
        this.taxGroup               (_transImport.taxGroup());
        this.transDate              (_transImport.transDate());
        this.txt                    (_transImport.txt());
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    CurrencyCode currencyCode(CurrencyCode _currencyCode = currencyCode)
    {
        currencyCode = _currencyCode;
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransAmount</Name>
				<Source><![CDATA[
    Container custTransAmount(container _custTransAmount = custTransAmount)
    {
        custTransAmount = _custTransAmount;
        return custTransAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransAmountAdd</Name>
				<Source><![CDATA[
    Container custTransAmountAdd(Amount _custTransAmount)
    {
        custTransAmount += _custTransAmount;
        return custTransAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransId</Name>
				<Source><![CDATA[
    Container custTransId(container _custTransId = custTransId)
    {
        custTransId = _custTransId;
        return custTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTransIdAdd</Name>
				<Source><![CDATA[
    Container custTransIdAdd(RecId _custTransId)
    {
        custTransId += _custTransId;
        return custTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendBankAccountId</Name>
				<Source><![CDATA[
    BankAccountId custVendBankAccountId(BankAccountID _custVendBankAccountId = custVendBankAccountId)
    {
        custVendBankAccountId = _custVendBankAccountId;
        return custVendBankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    DimensionDefault defaultDimension(DimensionDefault _defaultDimension = defaultDimension)
    {
        defaultDimension = _defaultDimension;
        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Parameter method for documentDate
    /// </summary>
    /// <param name="_documentDate">
    ///     Document date of transaction
    /// </param>
    /// <returns>
    ///     Document date of transaction
    /// </returns>
    public DocumentDate documentDate_JP(DocumentDate _documentDate = documentDate)
    {
        documentDate = _documentDate;
        return documentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentNum_JP</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Parameter method for documentNum
    /// </summary>
    /// <param name="_documentNum">
    ///     Document number of transaction
    /// </param>
    /// <returns>
    ///     Document number of transaction
    /// </returns>
    public DocumentNum documentNum_JP(DocumentNum _documentNum = documentNum)
    {
        documentNum = _documentNum;
        return documentNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dueDate</Name>
				<Source><![CDATA[
    DueDate dueDate(DueDate _dueDate = dueDate)
    {
        dueDate = _dueDate;
        return dueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoice</Name>
				<Source><![CDATA[
    InvoiceId invoice(InvoiceId _invoice = invoice)
    {
        invoice = _invoice;
        return invoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentNotes</Name>
				<Source><![CDATA[
    PaymNote paymentNotes(PaymNote _paymentNotes = paymentNotes)
    {
        paymentNotes = _paymentNotes;
        return paymentNotes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymId</Name>
				<Source><![CDATA[
    PaymId paymId(PaymId _paymId = paymId)
    {
        paymId = _paymId;
        return paymId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymReference</Name>
				<Source><![CDATA[
    PaymReference paymReference(PaymReference _paymReference = paymReference)
    {
        paymReference = _paymReference;
        return paymReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymTermId</Name>
				<Source><![CDATA[
    PaymTermId paymTermId(PaymTermId _paymTermId = paymTermId)
    {
        paymTermId = _paymTermId;
        return paymTermId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryCompany</Name>
				<Source><![CDATA[
    dataAreaId primaryCompany(dataAreaId _primaryCompany = primaryCompany)
    {
        primaryCompany = _primaryCompany;
        return primaryCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumAmountCur</Name>
				<Source><![CDATA[
    AmountCur sumAmountCur(AmountCur _sumAmountCur = sumAmountCur)
    {
        sumAmountCur = _sumAmountCur;
        return sumAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroup</Name>
				<Source><![CDATA[
    TaxGroup taxGroup(TaxGroup _taxGroup = taxGroup)
    {
        taxGroup = _taxGroup;
        return taxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    TransDate transDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txt</Name>
				<Source><![CDATA[
    LedgerJournalTransTxt txt(LedgerJournalTransTxt _txt = txt)
    {
        txt = _txt;
        return txt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>