<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTransNeutralTracker_Update</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ReqTransNeutralTracker_Update extends ReqTransNeutralTracker
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createNewBundle</Name>
				<Source><![CDATA[
    internal ReqTransNeutralBundle createNewBundle()
    {
        return new ReqTransNeutralBundle_Update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteNeutralizableTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes any neutralizable transactions in the tracker.
    /// </summary>
    /// <param name = "_reqSetup">The <c>ReqSetup</c> for the transaction.</param>
    internal void deleteNeutralizableTransactions(ReqSetup _reqSetup)
    {
        MapEnumerator bundleEnumerator = reqTransNeutralBundleByBundleId.getEnumerator();

        while (bundleEnumerator.moveNext())
        {
            ReqTransNeutralBundle_Update bundle = bundleEnumerator.currentValue();
            totalNeutralizedTransactions += bundle.deleteNeutralRecords(_reqSetup);
        }

        this.finalizeTelemetry();
    }

]]></Source>
			</Method>
			<Method>
				<Name>trackDeletedRecord</Name>
				<Source><![CDATA[
    internal void trackDeletedRecord(ReqTrans _reqTrans)
    {
        str neutralBundleId =  ReqTransNeutralBundle::bundleId(_reqTrans);

        ReqTransNeutralBundle_Update bundle;

        if (reqTransNeutralBundleByBundleId.exists(neutralBundleId))
        {
            bundle = reqTransNeutralBundleByBundleId.lookup(neutralBundleId);
        }
        else
        {
            bundle = this.createNewBundle();
            reqTransNeutralBundleByBundleId.insert(neutralBundleId, bundle);
        }

        bundle.deleteReqTrans(_reqTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTelemetryActivityName</Name>
				<Source><![CDATA[
    internal str getTelemetryActivityName()
    {
        return ReqInstrumentationActivities::NeutralTransactionTracking_Update;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>