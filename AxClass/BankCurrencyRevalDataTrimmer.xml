<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCurrencyRevalDataTrimmer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCurrencyRevalDataTrimmer</c> class handles the trimming of data for the bank - foreign currency revaluation process.
/// After the trimmer is complete, only data that is valid for continuing the process will remain.
/// </summary>
internal final class BankCurrencyRevalDataTrimmer
{
    private BankCurrencyRevalTmp bankCurrencyRevalTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBankCurrencyRevalTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>BankCurrencyRevalDataTrimmer</c> class given a populated <c>BankCurrencyRevalTmp</c> table buffer.
    /// </summary>
    /// <param name = "_bankCurrencyRevalTmp">A <c>BankCurrencyRevalTmp</c> table buffer containing calculated currency revaluation values.</param>
    /// <returns>A new instance of the <c>BankCurrencyRevalDataTrimmer</c> class.</returns>
    internal static BankCurrencyRevalDataTrimmer newFromBankCurrencyRevalTmp(BankCurrencyRevalTmp _bankCurrencyRevalTmp)
    {
        BankCurrencyRevalDataTrimmer trimmer = new BankCurrencyRevalDataTrimmer();
        trimmer.bankCurrencyRevalTmp = _bankCurrencyRevalTmp;

        return trimmer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>trim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all <c>BankCurrencyRevalTmp</c> table records that will not have any final adjustments.
    /// </summary>
    internal void trim()
    {
        BankCurrencyRevalTmp bankCurrencyRevalTmpUpdate;

        bankCurrencyRevalTmpUpdate.useExistingTempDBTable(bankCurrencyRevalTmp.getPhysicalTableName());

        while select LegalEntity
            from bankCurrencyRevalTmpUpdate
            group by LegalEntity
        {            
            delete_from bankCurrencyRevalTmp
                where bankCurrencyRevalTmp.LegalEntity == bankCurrencyRevalTmpUpdate.LegalEntity
                    && bankCurrencyRevalTmp.AccountingCurrencyAdjustmentAmount == 0
                    && bankCurrencyRevalTmp.ReportingCurrencyAdjustmentAmount == 0;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>