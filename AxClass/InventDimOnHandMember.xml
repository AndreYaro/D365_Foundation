<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimOnHandMember</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventDimOnHandMember
{
    ItemId      itemId;
    InventDimId inventDimId;
    InventQty   inventQty;

    PdsCWInventQty  cwInventQty;

    #DEFINE.CurrentVersion(2)
    #LOCALMACRO.CurrentList
         itemId,
         inventDimId,
         inventQty,
         cwInventQty
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = inventDimId)
    {
        inventDimId = _inventDimId;
        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
    public InventQty parmInventQty(InventQty _inventQty = inventQty)
    {
        inventQty = _inventQty;
        return inventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWParmInventQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the <c>cwInventQty</c> parameter.
    /// </summary>
    /// <param name="_cwInventQty">
    /// The value to set; optional.
    /// </param>
    /// <returns>
    /// The value of the <c>cwInventQty</c> parameter.
    /// </returns>
    public PdsCWInventQty pdsCWParmInventQty(
        PdsCWInventQty _cwInventQty = cwInventQty)
    {
        cwInventQty = _cwInventQty;
        return cwInventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion   :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventDimOnHandMember construct(
        ItemId          _itemId,
        InventDimId     _inventDimId,
        InventQty       _inventQty,
        PdsCWInventQty  _cwInventQty = 0
        )
    {
        InventDimOnHandMember inventDimOnHandMember = new InventDimOnHandMember();

        inventDimOnHandMember.parmItemId(_itemId);
        inventDimOnHandMember.parmInventDimId(_inventDimId);
        inventDimOnHandMember.parmInventQty(_inventQty);
        inventDimOnHandMember.pdsCWParmInventQty(_cwInventQty);

        return inventDimOnHandMember;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>