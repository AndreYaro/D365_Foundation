<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAgingReportContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>CustAgingReport</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>CustAgingReport</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(CustAgingReportUIBuilder)),
    SysOperationGroupAttribute('Order',"@ApplicationPlatform:SingleSpace", '1')
]
public class CustAgingReportContract implements SysOperationValidatable
    , SysOperationInitializable
{
    TransDate balanceAsOfDate;
    TransDate zeroDate;
    DateTransactionDuedate dateTransactionDuedate;
    CustVendAgingBucketLookUp agingBuckets;
    NoYesCombo printAgingBucketDescription;
    PositiveDays interval;
    DayMonth period;
    ForwardBackwardPrinting direction;
    boolean detailed;
    boolean printZeroOrNegative;
    boolean payments;
    boolean excludeZeroBalanceCustomer;
    boolean includeAmountCur;
    boolean updateCollectionStatus;
    #define.emptyString('')

    NoYes inclTransWithNoBillingClass;
    List billingClassification;
    LedgerCurrencySelection ledgerCurrencySelection;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data contract values.
    /// </summary>
    public void initialize()
    {
        billingClassification = new List(Types::String);

        if (!CustParameters::isBillingClassificationEnabled())
        {
            billingClassification.addEnd(SysLabel::labelId2String(literalStr("@GLS223107")));
        }

        updateCollectionStatus = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingBuckets</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter AgingBuckets.
    /// </summary>
    /// <param name="_agingBuckets">
    /// The new value of the datacontract parameter AgingBuckets; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter AgingBuckets
    /// </returns>
    [
        DataMemberAttribute('AgingBuckets'),
        SysOperationLabelAttribute(literalstr("@SYS78607")),
        SysOperationHelpTextAttribute(literalstr("@SYS28056")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public CustVendAgingBucketLookUp parmAgingBuckets(CustVendAgingBucketLookUp _agingBuckets = agingBuckets)
    {
        agingBuckets = _agingBuckets;
        return agingBuckets;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or Sets the <C>ledgerCurrencySelection</C> parameter.
    /// </summary>
    /// <param name="_ledgerCurrencySelection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter.
    /// </returns>
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@AccountsReceivable:CurrencySelectionText")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('5')
    ]
    public LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('BillingClassification'),
        SysOperationLabelAttribute(literalStr("@SPS371")),
        SysOperationHelpTextAttribute(literalStr("@SPS677")),
        SysOperationDisplayOrderAttribute('0'),
        AifCollectionTypeAttribute('return', Types::String)
    ]
    public List parmBillingClassification(List _billingClassification = billingClassification)
    {
        billingClassification = _billingClassification;
        return billingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTransactionDuedate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter DateTransactionDuedate.
    /// </summary>
    /// <param name="_dateTransactionDuedate">
    /// The new value of the datacontract parameter DateTransactionDuedate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter DateTransactionDuedate
    /// </returns>
    [
        DataMemberAttribute('DateTransactionDuedate'),
        SysOperationLabelAttribute(literalstr("@SYS13128")),
        SysOperationHelpTextAttribute(literalstr("@SYS29102")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public DateTransactionDuedate parmDateTransactionDuedate(DateTransactionDuedate _dateTransactionDuedate = dateTransactionDuedate)
    {
        dateTransactionDuedate = _dateTransactionDuedate;
        return dateTransactionDuedate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDetailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Detailed.
    /// </summary>
    /// <param name="_detailed">
    /// The new value of the datacontract parameter Detailed; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Detailed
    /// </returns>
    [
        DataMemberAttribute('Detailed'),
        SysOperationLabelAttribute(literalstr("@SYS8811")),
        SysOperationHelpTextAttribute(literalstr("@SYS20687")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('10')
    ]
    public boolean parmDetailed(boolean _detailed = detailed)
    {
        detailed = _detailed;
        return detailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Direction.
    /// </summary>
    /// <param name="_direction">
    /// The new value of the datacontract parameter Direction; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Direction
    /// </returns>
    [
        DataMemberAttribute('Direction'),
        SysOperationLabelAttribute(literalstr("@SYS70307")),
        SysOperationHelpTextAttribute(literalstr("@SYS70312")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('9')
    ]
    public ForwardBackwardPrinting parmDirection(ForwardBackwardPrinting _direction = direction)
    {
        direction = _direction;
        return direction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExcludeZeroBalanceCustomer</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('ExcludeZeroBalanceCustomer'),
        SysOperationLabelAttribute(literalstr("@SYS344269")),
        SysOperationHelpTextAttribute(literalstr("@SYS344270")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('12')
    ]
    public boolean parmExcludeZeroBalanceCustomer(boolean _excludeZeroBalanceCustomer = excludeZeroBalanceCustomer)
    {
        excludeZeroBalanceCustomer = _excludeZeroBalanceCustomer;
        return excludeZeroBalanceCustomer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClass</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('InclTransWithNoBillingClass'),
        SysOperationLabelAttribute(literalStr("@SPS691")),
        SysOperationHelpTextAttribute(literalStr("@SPS1009")),
        SysOperationDisplayOrderAttribute('0')
    ]
    public NoYes parmInclTransWithNoBillingClass(NoYes _inclTransWithNoBillingClass = inclTransWithNoBillingClass)
    {
        inclTransWithNoBillingClass = _inclTransWithNoBillingClass;

        return inclTransWithNoBillingClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeAmountCur</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IncludeAmountCur'),
        SysOperationLabelAttribute(literalstr("@SYS344267")),
        SysOperationHelpTextAttribute(literalstr("@SYS344268")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('11')
    ]
    public boolean parmIncludeAmountCur(boolean _includeAmountCur = includeAmountCur)
    {
        includeAmountCur = _includeAmountCur;
        return includeAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Interval.
    /// </summary>
    /// <param name="_interval">
    /// The new value of the datacontract parameter Interval; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Interval
    /// </returns>
    [
        DataMemberAttribute('Interval'),
        SysOperationLabelAttribute(literalstr("@SYS12899")),
        SysOperationHelpTextAttribute(literalstr("@SYS17806")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('7')
    ]
    public PositiveDays parmInterval(PositiveDays _interval = interval)
    {
        interval = _interval;
        return interval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Payments.
    /// </summary>
    /// <param name="_payments">
    /// The new value of the datacontract parameter Payments; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Payments
    /// </returns>
    [
        DataMemberAttribute('Payments'),
        SysOperationLabelAttribute(literalstr("@SYS68577")),
        SysOperationHelpTextAttribute(literalstr("@SYS68578")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('14')
    ]
    public boolean parmPayments(boolean _payments = payments)
    {
        payments = _payments;
        return payments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateCollectionStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter UpdateCollectionStatus.
    /// </summary>
    /// <param name="_updateCollectionStatus">
    /// The new value of the datacontract parameter UpdateCollectionStatus; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter UpdateCollectionStatus.
    /// </returns>
    [
        DataMemberAttribute('UpdateCollectionStatus'),
        SysOperationLabelAttribute(literalstr("@AccountsReceivable:CustDisputeHistoryAutomationAging")),
        SysOperationHelpTextAttribute(literalstr("@AccountsReceivable:CustDisputeHistoryAutomationAging")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('15')
    ]
    public boolean parmUpdateCollectionStatus(boolean _updateCollectionStatus = updateCollectionStatus)
    {
        updateCollectionStatus = _updateCollectionStatus;
        return updateCollectionStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Period.
    /// </summary>
    /// <param name="_period">
    /// The new value of the datacontract parameter Period; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Period
    /// </returns>
    [
        DataMemberAttribute('Period'),
        SysOperationLabelAttribute(literalstr("@SYS16024")),
        SysOperationHelpTextAttribute(literalstr("@SYS67813")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('8')
    ]
    public DayMonth parmPeriod(DayMonth _period = period)
    {
        period = _period;
        return period;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintAgingBucketDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PrintAgingBucketDescription.
    /// </summary>
    /// <param name="_printAgingBucketDescription">
    /// The new value of the datacontract parameter PrintAgingBucketDescription; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PrintAgingBucketDescription
    /// </returns>
    [
        DataMemberAttribute('PrintAgingBucketDescription'),
        SysOperationLabelAttribute(literalstr("@SYS97360")),
        SysOperationHelpTextAttribute(literalstr("@SYS96942")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('6')
    ]
    public NoYesCombo parmPrintAgingBucketDescription(NoYesCombo _printAgingBucketDescription = printAgingBucketDescription)
    {
        printAgingBucketDescription = _printAgingBucketDescription;
        return printAgingBucketDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintZeroOrNegative</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PrintZeroOrNegative.
    /// </summary>
    /// <param name="_printZeroOrNegative">
    /// The new value of the datacontract parameter PrintZeroOrNegative; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PrintZeroOrNegative
    /// </returns>
    [
        DataMemberAttribute('PrintZeroOrNegative'),
        SysOperationLabelAttribute(literalstr("@SYS69732")),
        SysOperationHelpTextAttribute(literalstr("@SYS69733")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('13')
    ]
    public boolean parmPrintZeroOrNegative(boolean _printZeroOrNegative = printZeroOrNegative)
    {
        printZeroOrNegative = _printZeroOrNegative;
        return printZeroOrNegative;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBalanceAsOfDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter BalanceAsOfDate.
    /// </summary>
    /// <param name="_balanceAsOfDate">
    ///     The new value of the datacontract parameter BalanceAsOfDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter BalanceAsOfDate
    /// </returns>
    /// <remarks>Transactions must be open as of this date to be considered during the aging process.</remarks>
    [
        DataMemberAttribute('BalanceAsOfDate'),
        SysOperationLabelAttribute(literalstr("@SYS137399")),
        SysOperationHelpTextAttribute(literalstr("@SYS137399")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public TransDate parmBalanceAsOfDate(TransDate _balanceAsOfDate = balanceAsOfDate)
    {
        balanceAsOfDate = _balanceAsOfDate;
        return balanceAsOfDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZeroDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter ZeroDate.
    /// </summary>
    /// <param name="_zeroDate">
    ///     The new value of the datacontract parameter ZeroDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter ZeroDate
    /// </returns>
    /// <remarks>Used to specify the reference date from which aging buckets will be calculated.</remarks>
    [
        DataMemberAttribute('ZeroDate'),
        SysOperationLabelAttribute(literalstr("@SYS132593")),
        SysOperationHelpTextAttribute(literalstr("@SYS132593")),
        SysOperationGroupMemberAttribute('Order'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmZeroDate(TransDate _zeroDate = zeroDate)
    {
        zeroDate = _zeroDate;

        return zeroDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors.
    /// </summary>
    /// <returns>
    /// false if an error has occurred in the dialog values; otherwise, true .
    /// </returns>
    /// <remarks>
    /// The dialog values are handled through the contract.
    /// </remarks>
    public boolean validate()
    {
        boolean ret;
        CustVendAgingBucketLookUp agingBucket;
        StatRepIntervalLine statRepIntervalLine;
        ret = true;
        agingBucket = this.parmAgingBuckets();

        if (agingBucket != #emptyString)
        {
            select count(Qty) from statRepIntervalLine
                where statRepIntervalLine.Name == agingBucket;

            if (! statRepIntervalLine.Qty)
            {
                ret = checkFailed("@SYS90115");
            }

            if (statRepIntervalLine.Qty > CustVendBalanceList::getMaximumAgingBuckets())
            {
                ret = checkFailed("@SYS90116");
            }
        }

        if (ret)
        {
            ret = CustBillingClassificationReportManager::validate(billingClassification, inclTransWithNoBillingClass);
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>