<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetRevWorkflowDocument</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjBudgetRevWorkflowDocument extends WorkflowDocument
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateNewTotalBudgetCost</Name>
				<Source><![CDATA[
        private AmountCur calculateNewTotalBudgetCost(tableId _tableId, recId _recId, ProjTransType _transType = ProjTransType::None)
    {
        ProjBudgetRevisionLine projBudgetRevisionLine;
        ProjBudgetLine projBudgetLine;
        ProjBudgetRevision  projBudgetRevision;

        if (_tableId != tableNum(ProjBudgetRevision))
        {
            // Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        if (_transType == ProjTransType::None) // all trx types
        {
            select sum(TotalBudget) from projBudgetLine
                join projBudgetRevision
                        where projBudgetRevision.ProjBudget == projBudgetLine.ProjBudget &&
                              projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost &&
                              projBudgetRevision.RecId == _recId
                outer join sum(RevisionAmount) from projBudgetRevisionLine
                        where projBudgetRevisionLine.ProjBudgetLine == projBudgetLine.RecId &&
                              projBudgetRevisionLine.ProjBudgetRevision == _recId;
                    
        }
        else
        {
            select sum(TotalBudget) from projBudgetLine
                join projBudgetRevision
                        where projBudgetRevision.ProjBudget == projBudgetLine.ProjBudget &&
                              projBudgetLine.ProjTransType == _transType &&
                              projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost &&
                              projBudgetRevision.RecId == _recId
                outer join sum(RevisionAmount) from projBudgetRevisionLine
                        where projBudgetRevisionLine.ProjBudgetLine == projBudgetLine.RecId &&
                              projBudgetRevisionLine.ProjBudgetRevision == _recId;                                
        }

        return projBudgetLine.TotalBudget + projBudgetRevisionLine.RevisionAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculatePreviousApprovedBudgetCost</Name>
				<Source><![CDATA[
        private AmountCur calculatePreviousApprovedBudgetCost(tableId _tableId, recId _recId, ProjTransType _transType = ProjTransType::None)
    {
        ProjBudgetRevision projBudgetRevision;
        ProjBudgetLine projBudgetLine;

        if (_tableId != tableNum(ProjBudgetRevision))
        {
            // Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        if (_transType == ProjTransType::None) // all trx types
        {
            select sum(TotalBudget) from projBudgetLine
                join projBudgetRevision
                        where projBudgetRevision.ProjBudget == projBudgetLine.ProjBudget &&
                              projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost &&
                              projBudgetRevision.RecId == _recId;
        }
        else
        {
            select sum(TotalBudget) from projBudgetLine
                join projBudgetRevision
                        where projBudgetRevision.ProjBudget == projBudgetLine.ProjBudget &&
                              projBudgetLine.ProjTransType == _transType &&
                              projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost &&
                              projBudgetRevision.RecId == _recId;
        }

        return projBudgetLine.TotalBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateRevisedCosts</Name>
				<Source><![CDATA[
        private AmountCur calculateRevisedCosts(tableId _tableId, recId _recId, ProjTransType _transType = ProjTransType::None)
    {
        ProjBudgetRevisionLine projBudgetRevisionLine;
        ProjBudgetLine projBudgetLine;

        if (_tableId != tableNum(ProjBudgetRevision))
        {
            // Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        if (_transType == ProjTransType::None) // all trx types
        {
            select sum(RevisionAmount) from projBudgetRevisionLine where projBudgetRevisionLine.ProjBudgetRevision == _recId
                join RecId, ProjTransType from projBudgetLine
            where projBudgetLine.RecId == projBudgetRevisionLine.ProjBudgetLine &&
                  projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost;
        }
        else
        {
            select sum(RevisionAmount) from projBudgetRevisionLine
                            where projBudgetRevisionLine.ProjBudgetRevision == _recId
                    join RecId, ProjTransType from projBudgetLine
                            where projBudgetLine.RecId == projBudgetRevisionLine.ProjBudgetLine &&
                                  projBudgetLine.ProjTransType == _transType  &&
                                  projBudgetLine.ProjBudgetLineType == ProjBudgetLineType::Cost;
        }

        return projBudgetRevisionLine.RevisionAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query name for this workflow document.
    /// </summary>
    /// <returns>
    /// The query name from the AOT.
    /// </returns>
    queryName getQueryName()
    {
        return queryStr(ProjBudgetRevWorkflowDocument);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreviousApprovedCostBudgetForExpense</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the approved cost budgets for expenses.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the approved cost budget for expenses.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjPreviousApprovedCostBudgetForExpense parmPreviousApprovedCostBudgetForExpense(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculatePreviousApprovedBudgetCost(_tableId, _recId, ProjTransType::Cost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreviousApprovedCostBudgetForHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the approved cost budgets for hours.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the approved cost budgets for hours.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjPreviousApprovedCostBudgetForHours parmPreviousApprovedCostBudgetForHours(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculatePreviousApprovedBudgetCost(_tableId, _recId, ProjTransType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreviousApprovedCostBudgetForItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the approved cost budgets for items.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the approved cost budgets for items.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjPreviousApprovedCostBudgetForItems parmPreviousApprovedCostBudgetForItems(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculatePreviousApprovedBudgetCost(_tableId, _recId, ProjTransType::Item);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequesterType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the revision is requested by an Employee, Vendor, or a Customer.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The requester type.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjBudgetRevRequestorType parmRequesterType(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        ProjBudgetRevision projBudgetRevision;

        if (_tableId != tableNum(ProjBudgetRevision))
        {
            // Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        projBudgetRevision = ProjBudgetRevision::find(_recId);

        if (projBudgetRevision.RequestedByEmpl)
        {
            return ProjBudgetRevRequestorType::Employee;
        }

        if (projBudgetRevision.RequestedByCust)
        {
            return ProjBudgetRevRequestorType::Customer;
        }

        if (projBudgetRevision.RequestedByVend)
        {
            return ProjBudgetRevRequestorType::Vendor;
        }

        return ProjBudgetRevRequestorType::Employee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalNewCostBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the new cost budgets for all transaction types.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the new cost budgets for all transaction types.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalNewCostBudget parmTotalNewCostBudget(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateNewTotalBudgetCost(_tableId, _recId, ProjTransType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalNewCostBudgetForExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the new cost budgets for expenses.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the new cost budget for expenses.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalNewCostBudgetForExpenses parmTotalNewCostBudgetForExpenses(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateNewTotalBudgetCost(_tableId, _recId, ProjTransType::Cost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalNewCostBudgetForHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the new cost budgets for hours.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the new cost budgets for hours.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalNewCostBudgetForHours parmTotalNewCostBudgetForHours(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateNewTotalBudgetCost(_tableId, _recId, ProjTransType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalNewCostBudgetForItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the new cost budgets for items.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the new cost budgets for items.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalNewCostBudgetForItems parmTotalNewCostBudgetForItems(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateNewTotalBudgetCost(_tableId, _recId, ProjTransType::Item);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalPreviousApprovedCostBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the approved cost budgets for all transaction types.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the approved cost budgets for all transaction types.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalPreviousApprovedCostBudget parmTotalPreviousApprovedCostBudget(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculatePreviousApprovedBudgetCost(_tableId, _recId, ProjTransType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRevisedCostBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the revised cost budgets for all transaction types.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the revised cost budgets for all transaction types.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalRevisedCostBudget parmTotalRevisedCostBudget(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateRevisedCosts(_tableId, _recId, ProjTransType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRevisedCostBudgetForExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the revised cost budgets for expenses.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the revised cost budgets for expenses.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalRevisedCostBudgetForExpenses parmTotalRevisedCostBudgetForExpenses(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateRevisedCosts(_tableId, _recId, ProjTransType::Cost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRevisedCostBudgetForHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the revised cost budgets for hours.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the revised cost budgets for hours.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalRevisedCostBudgetForHours parmTotalRevisedCostBudgetForHours(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateRevisedCosts(_tableId, _recId, ProjTransType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalRevisedCostBudgetForItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sum of all the revised cost budgets for items.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The sum of all the revised cost budgets for items.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjTotalRevisedCostBudgetForItems parmTotalRevisedCostBudgetForItems(CompanyId _companyId,tableId _tableId,recId _recId)
    {
        return this.calculateRevisedCosts(_tableId, _recId, ProjTransType::Item);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRootProjId</Name>
				<Source><![CDATA[
    private ProjId getRootProjId(TableId _tableId, RecId _recId)
    {
        if (_tableId != tableNum(ProjBudgetRevision))
        {
            //Document table id reference: %1 is not valid.
            throw error(strFmt("@SYS112754", _tableId));
        }

        ProjBudget projBudget;
        ProjBudgetRevision projBudgetRevision;
        select firstonly RootProjId from projBudget
        exists join projBudgetRevision
            where projBudgetRevision.ProjBudget == projBudget.RecId
                && projBudgetRevision.RecId == _recId;

        return projBudget.RootProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRootProjId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the Project ID of all the revised project budgets.
    /// </summary>
    /// <param name="_companyId">
    /// The company ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_tableId">
    /// The table ID that corresponds to the workflow instance.
    /// </param>
    /// <param name="_recId">
    /// The record ID that corresponds to the workflow instance.
    /// </param>
    /// <returns>
    /// The Project ID of all the revised project budgets.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The table ID in the workflow context is not a <c>ProjBudgetRevision</c> record, or the record ID in
    /// the workflow context is zero.
    /// </exception>
    public ProjId parmRootProjId(CompanyId _companyId, TableId _tableId, RecId _recId)
    {
        return this.getRootProjId(_tableId, _recId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>