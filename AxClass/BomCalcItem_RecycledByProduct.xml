<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BomCalcItem_RecycledByProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BomCalcItem_RecycledByProduct</c> class is responsible for calculating the cost of recycled byproduct.
/// </summary>
/// <remarks>
/// As this class is invoked multiple times in one calculation it deletes previous calculations and recreates them.
/// </remarks>
class BomCalcItem_RecycledByProduct extends BomCalcItem_PmfByProduct
{
    PmfRecycledBpConsumptionCalcParameters pmfRecycledBpConsumptionCalcParameters;

    BOMCalcItemLine bomCalcItemLine,
                    bomCalcItemLineWithUpdatedConsumption;

    Qty             qtyAllocatedInPreviousCalls;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructBomRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new <c>BOM</c> record that is used to simulate the recycled byproduct consumption.
    /// </summary>
    /// <returns>
    /// The <c>BOM</c> record.
    /// </returns>
    private BOM constructBomRecord()
    {
        BOM bomRecord;

        bomRecord.initFromBOM(bomCalcItemLine.parmBOM());

        return bomRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRecycledBpConsumptionCalc</Name>
				<Source><![CDATA[
    public IPmfRecycledBpConsumptionCalc createRecycledBpConsumptionCalc(BOMCalcLine _bomCalcLine)
    {
        PmfRecycledBpConsumptionCalc_Recycled calc = PmfRecycledBpConsumptionCalc_Recycled::construct();

        this.parmPmfRecycledBpConsumptionCalcParam().parmQtyToBeAddedToConsumption(qtyAllocatedInPreviousCalls);

        calc.parmPmfRecycledBpConsumptionCalcParam(this.parmPmfRecycledBpConsumptionCalcParam());

        return calc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAndDeleteAlreadyCreatedTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes <c>BomCalcTrans</c> records that have been created by previous calculations.
    /// </summary>
    private void findAndDeleteAlreadyCreatedTransactions()
    {
        BOMCalcTrans localBomCalcTrans;

        if (bomCalcTable)
        {
            select firstonly localBomCalcTrans
            where localBomCalcTrans.PriceCalcId == bomCalcTable.PriceCalcId
               && localBomCalcTrans.Level       == this.parmLevel() + 1;

            qtyAllocatedInPreviousCalls   = localBomCalcTrans.ConsumptionVariable;

            delete_from localBomCalcTrans
            where localBomCalcTrans.PriceCalcId == bomCalcTable.PriceCalcId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        this.findAndDeleteAlreadyCreatedTransactions();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListBOM</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes list of <c>BOMCalcItemLine</c> class instances used for calculation.
    /// </summary>
    /// <remarks>
    /// In context of recycled byproduct the bom is not used. Instead single <c>BomCalcItemLine</c> class
    /// instance is created simulating the consumption of recycled byproduct.
    /// </remarks>
    protected void initListBOM()
    {
        listBOM = new List(Types::Class);

        if (bomCalcItemLine)
        {
            bomCalcItemLineWithUpdatedConsumption = BOMCalcItemLine::newBOMCalcItem(this.constructBomRecord(),
                                                                                    this,
                                                                                    costingVersionId,
                                                                                    bomCalcFallBack,
                                                                                    fallBackVersionId,
                                                                                    siteId,
                                                                                    bomCalcExplosionMode);

            bomCalcItemLineWithUpdatedConsumption.parmPmfRecycledBpConsumptionCalc(this.createRecycledBpConsumptionCalc(bomCalcItemLineWithUpdatedConsumption));

            listBOM.addEnd(bomCalcItemLineWithUpdatedConsumption);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        pmfRecycledBpConsumptionCalcParameters = PmfRecycledBpConsumptionCalcParameters::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllocatedQty</Name>
				<Source><![CDATA[
    public Qty parmAllocatedQty()
    {
        Qty qty = bomCalcItemLineWithUpdatedConsumption.parmCalcConsumptionInventQty() - qtyAllocatedInPreviousCalls;

        return qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBomCalcItemLine</Name>
				<Source><![CDATA[
    public BOMCalcItemLine parmBomCalcItemLine(BOMCalcItemLine _bomCalcItemLine)
    {
        bomCalcItemLine = _bomCalcItemLine;

        return bomCalcItemLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPmfRecycledBpConsumptionCalcParam</Name>
				<Source><![CDATA[
    public PmfRecycledBpConsumptionCalcParameters parmPmfRecycledBpConsumptionCalcParam(PmfRecycledBpConsumptionCalcParameters _pmfRecycledBpConsumptionCalcParameters = pmfRecycledBpConsumptionCalcParameters)
    {
        pmfRecycledBpConsumptionCalcParameters = _pmfRecycledBpConsumptionCalcParameters;

        return pmfRecycledBpConsumptionCalcParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCostCalcTransData</Name>
				<Source><![CDATA[
    public void updateCostCalcTransData(BOMCalcTrans _bomCalcTrans)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCostBreakdownAllowed</Name>
				<Source><![CDATA[
    public boolean parmIsCostBreakdownAllowed()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BomCalcItem_RecycledByProduct construct()
    {
        return new BomCalcItem_RecycledByProduct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>