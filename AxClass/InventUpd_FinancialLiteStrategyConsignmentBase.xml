<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpd_FinancialLiteStrategyConsignmentBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventUpd_FinancialLiteStrategyConsignmentBase</c> class is used to determine which transactions to consignment process based on the inventory movement.
/// </summary>
abstract public class InventUpd_FinancialLiteStrategyConsignmentBase extends InventUpd_FinancialLiteStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventTransactionsToUpdate</Name>
				<Source><![CDATA[
    public InventTrans getInventTransactionsToUpdate(
        InventDirection _direction,
        InventDim       _inventDim,
        InventDimParm   _inventDimParm)
    {
        InventTrans         inventTrans;
        InventTransOrigin   inventTransOrigin;

        select forupdate inventTrans
            where inventTrans.ItemId                    == movement.itemId()
               && inventTrans.StatusIssue               == this.getStatusIssue(_direction)
               && inventTrans.StatusReceipt             == this.getStatusReceipt(_direction)
            exists join inventTransOrigin
                where inventTransOrigin.RecId           == inventTrans.InventTransOrigin
                    && inventTransOrigin.InventTransId  == movement.transId();

        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatusIssue</Name>
				<Source><![CDATA[
    protected StatusIssue getStatusIssue(InventDirection _direction)
    {
        if (_direction == InventDirection::Issue)
        {
            return StatusIssue::Deducted;
        }

        return StatusIssue::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatusReceipt</Name>
				<Source><![CDATA[
    protected StatusReceipt getStatusReceipt(InventDirection _direction)
    {
        if (_direction == InventDirection::Receipt)
        {
            return StatusReceipt::Received;
        }

        return StatusReceipt::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingDate</Name>
				<Source><![CDATA[
    public date getPostingDate(InventTrans _inventTrans)
    {
        return _inventTrans.DatePhysical ? _inventTrans.DatePhysical : DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>