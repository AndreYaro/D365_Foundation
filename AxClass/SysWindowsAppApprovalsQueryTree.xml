<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysWindowsAppApprovalsQueryTree</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is a system class to populate the tree lookup using the Workflow approval document query.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
public class SysWindowsAppApprovalsQueryTree
{
    #macrolib.resAppl

    ImageListAppl_Query imageList;
    FormTreeControl     tree;
    FormTreeItem        item;
    Map                 queryMap;
    Map                 datasourceMap;
    Integer             id;

    WorkflowDocumentFieldElement    documentFieldElement;
    WorkflowDocumentFieldName       documentFieldName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildTree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the form tree control
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void buildTree()
    {
        MapEnumerator   queryMapEnum = queryMap.getEnumerator();
        List            hierarchyList;
        ListEnumerator  hierarchyListEnum;
        int             level, parentIdx;

        while (queryMapEnum.moveNext())
        {
            documentFieldName = queryMapEnum.currentKey();
            documentFieldElement = queryMapEnum.currentValue();

            // Currently workflow document field types WorkItem and Workflow are disabled,
            // because SysWorkflowApprovalWorkitemService.getData() does not support them.
            if (documentFieldElement.parmType() != WorkflowDocumentFieldType::Workflow &&
            documentFieldElement.parmType() != WorkflowDocumentFieldType::WorkItem)
            {
                hierarchyList = strSplit(documentFieldName, '.');
                hierarchyListEnum = hierarchyList.getEnumerator();
                parentIdx = 0;

                for (level = 1; level <= hierarchyList.elements(); level++)
                {
                    hierarchyListEnum.moveNext();
                    documentFieldName = hierarchyListEnum.current();
                    if (level < hierarchyList.elements())
                    {
                        // Datasource
                        if (!datasourceMap.exists(documentFieldName))
                        {
                            parentIdx = this.createNode(parentIdx, documentFieldName);
                            datasourceMap.insert(documentFieldName, parentIdx);
                        }
                        else
                        {
                            parentIdx = datasourceMap.lookup(documentFieldName);
                        }
                    }
                    else
                    {
                        // Last item is always the field
                        parentIdx = this.createNode(parentIdx, documentFieldName, documentFieldElement);
                    }
                }
            }
        }
        SysFormTreeControl::expandTree(tree, tree.getRoot(), 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNode</Name>
				<Source><![CDATA[
    private int createNode(TreeItemIdx _parentIdx, WorkflowDocumentFieldName _nodeName, WorkflowDocumentFieldElement _documentFieldElement = null)
    {
        item = new FormTreeItem();
        item.text(_nodeName);
        item.data(_documentFieldElement);
        item.image(this.image(_documentFieldElement));
        id  = tree.addItem(_parentIdx, 0, item);

        return id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current selected node in the tree.
    /// </summary>
    /// <returns>
    /// The <c>WorkflowDocumentFieldElement</c> object class of the selection.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// The selected node must be a field node.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public WorkflowDocumentFieldElement getSelection()
    {
        id = tree.getSelection();
        if (id)
        {
            item = tree.getItem(id);
            documentFieldElement = item.data();
            if (!documentFieldElement)
            {
                // You must select a field node.
                throw error("@SYS4007904");
            }

            return documentFieldElement;
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>image</Name>
				<Source><![CDATA[
    private int image(WorkflowDocumentFieldElement _documentFieldElement)
    {
        int fieldImage;

        if (_documentFieldElement != null)
        {
            switch (_documentFieldElement.parmType())
            {
                case WorkflowDocumentFieldType::Field :
                    fieldImage = imageList.findFieldImage(_documentFieldElement.parmBaseType());

                    // Make sure image code exists in the map of images. If it doesn't, add it there.
                    if (!imageList.imageConvert().exists(fieldImage))
                    {
                        imageList.add(fieldImage);
                    }
                    return imageList.image(fieldImage);

                case WorkflowDocumentFieldType::Method :
                    return imageList.image(#ImageField);

                case WorkflowDocumentFieldType::Workflow :
                    return imageList.image(#ImageField);

                case WorkflowDocumentFieldType::WorkItem :
                    return imageList.image(#ImageDefault);

                default :
                    return 0;
            }
        }
        return imageList.image(#ImageTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize a new <c>SysWindowsAppApprovalsQueryTree</c> instance.
    /// </summary>
    /// <param name="_formTree">
    /// New value of tree.
    /// </param>
    /// <remarks>
    /// Sets default values for new object.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(FormTreeControl _formTree)
    {
        tree = _formTree;
        imageList = new ImageListAppl_Query();
        tree.setImagelist(imageList.imageList());
        datasourceMap = new Map(Types::String, Types::Integer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQueryMap</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Map parmQueryMap(Map _queryMap = queryMap)
    {
        queryMap = _queryMap;
        return queryMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor for the <c>SysWindowsAppApprovalsQueryTree</c> class.
    /// </summary>
    /// <param name="_formTree">
    /// The <c>FormTreeControl</c> control to build.
    /// </param>
    /// <param name="_queryMap">
    /// The <c>Map</c> containing the list of query artifacts.
    /// </param>
    /// <returns>
    /// <c>SysWindowsAppApprovalsQueryTree</c> object instance.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static SysWindowsAppApprovalsQueryTree construct(FormTreeControl _formTree, Map _queryMap)
    {
        SysWindowsAppApprovalsQueryTree queryTree = new SysWindowsAppApprovalsQueryTree(_formTree);
        queryTree.parmQueryMap(_queryMap);
        return queryTree;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>