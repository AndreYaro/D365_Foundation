<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCImportNomenclatureSegmentNumberSequenceHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is responsible for importing number sequence nomenclature segment definitions.
/// </summary>
class PCImportNomenclatureSegmentNumberSequenceHandler extends PCImportModelNodeHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>importData</Name>
				<Source><![CDATA[
    protected void importData()
    {
        PCImportConfigurationNomenclatureHandler parent = this.parent();

        EcoResNomenclatureSegmentNumberSequence nomenclatureSegmentNumberSequence;

        NumberSequenceCode numberSequenceCode = this.getFieldByName(fieldStr(EcoResNomenclatureSegmentNumberSequence, NumberSequence));

        nomenclatureSegmentNumberSequence.Nomenclature      = parent.getNomenclatureId();
        nomenclatureSegmentNumberSequence.NumberSequence    = this.getNumberSequenceId(numberSequenceCode);
        nomenclatureSegmentNumberSequence.SegmentNumber     = this.getIntFieldByName(fieldStr(EcoResNomenclatureSegmentNumberSequence, SegmentNumber));
        nomenclatureSegmentNumberSequence.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberSequenceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence ID given a number sequence code.
    /// </summary>
    /// <param name = "_numberSequenceCode">A number sequence code.</param>
    /// <returns>A number sequence ID.</returns>
    public RecId getNumberSequenceId(NumberSequenceCode _numberSequenceCode)
    {
        NumberSequenceTable numberSequenceTable;
        NumberSequenceScope numberSequenceScope;

        select firstonly RecId from numberSequenceTable
            where numberSequenceTable.NumberSequence == _numberSequenceCode
            exists join numberSequenceScope
            where numberSequenceScope.DataArea          == ''
            &&    numberSequenceScope.LegalEntity       == 0
            &&    numberSequenceScope.OperatingUnit     == 0
            &&    numberSequenceScope.OperatingUnitType == OMOperatingUnitType::None;

        return numberSequenceTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nodeType</Name>
				<Source><![CDATA[
    public str nodeType()
    {
        return tableStr(EcoResNomenclatureSegmentNumberSequence);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCImportNomenclatureSegmentNumberSequenceHandler construct()
    {
        return new PCImportNomenclatureSegmentNumberSequenceHandler();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>