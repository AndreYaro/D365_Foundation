<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_RTW_BudgetPlanning</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrade script for budget planning schema changes.
/// </summary>
public class ReleaseUpdateDB70_RTW_BudgetPlanning extends ReleaseUpdateDB
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the module name of an upgrade class.
    /// </summary>
    /// <returns>
    ///    The module name.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented by sub classes.The module name is displayed on the cockpit form for
    ///    every script.
    /// </remarks>
    public ReleaseUpdateModule moduleName()
    {
        return "@Budget:BudgetPlanningTitle";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    /// <summary>
    ///     The script runs in any system having version > CTP8.
    /// </summary>
    /// <returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::R1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBudgetPlanLayoutTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes the existing <c>BudgetPlanLayout</c>'s template.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(DocuTemplate), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteBudgetPlanLayoutTemplate()
    {
        BudgetPlanLayout    deleteBudgetPlanLayoutTemplate;

        ttsbegin;
        while select deleteBudgetPlanLayoutTemplate
        {
            BudgetPlanTemplateManager::deleteTemplate(deleteBudgetPlanLayoutTemplate.RecId);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLayoutCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes layout cache for all <c>BudgetPlanLayout</c>s.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLayoutCache), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteLayoutCache()
    {
        BudgetPlanLayoutCache layoutCache;
        delete_from layoutCache;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLayoutMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes layout mapping for all <c>BudgetPlanLayout</c>s.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLayoutMapping), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void deleteLayoutMapping()
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;
        delete_from budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSystemSequenceForBudgetPlanLineActiveView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the system sequences for <c>BudgetPlanLineActiveView</c>.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLineActiveView), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateSystemSequenceForBudgetPlanLineActiveView()
    {
        BudgetPlanLineActiveView activeView;

        select maxof(RecId) from activeView;

        this.adjustSystemsequence(activeView.TableId, activeView.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSystemSequenceForBudgetPlanLineActiveViewDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the system sequences for <c>BudgetPlanLineActiveViewDetail</c>.
    /// </summary>
    [   UpgradeScriptDescriptionAttribute(classstr(ReleaseUpdateDB70_BudgetPlanning)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::PartitionScript),
        UpgradeScriptTableAttribute(tableStr(BudgetPlanLineActiveViewDetail), false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateSystemSequenceForBudgetPlanLineActiveViewDetail()
    {
        BudgetPlanLineActiveViewDetail activeViewDetail;

        select maxof(RecId) from activeViewDetail;

        this.adjustSystemsequence(activeViewDetail.TableId, activeViewDetail.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustSystemsequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts the system sequence for the specified table ID.
    /// </summary>
    /// <param name = "_tableId"> The ID of the table to adjust the system sequences. </param>
    /// <param name = "_maxRecId"> The current maximum record ID value in the given table. </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void adjustSystemsequence(TableId _tableId, RecId _maxRecId)
    {
        RecId nextValue;
        SystemSequence  systemSequence = new SystemSequence();
        systemSequence.suspendRecIds(_tableId);
        systemSequence.flushValues(_tableId);

        nextValue = systemSequence.reserveValues(0, _tableId);
        if (_maxRecId - nextValue > 0)
        {
            systemSequence.reserveValues((_maxRecId - nextValue) + 1, _tableId);
        }

        systemSequence.removeRecIdSuspension(_tableId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>