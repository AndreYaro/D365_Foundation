<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAutoDimCheckUpdateAdpt_InventTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventAutoDimCheckUpdateAdpt_InventTrans</c> class is responsible for providing
/// the information about an inventory update to the <c>InventTransAutoCreateDimCheck</c> class
/// based on an inventory transaction.
/// </summary>
class InventAutoDimCheckUpdateAdpt_InventTrans extends InventAutoDimCheckUpdateAdapter
{
    InventTrans         inventTrans;
    InventTable         inventTable;
    InventDim           inventDim;
    InventDimGroupSetup inventDimGroupSetup;
    InventTransOrigin   origin;

    boolean             inventTableInitialized;
    boolean             inventDimInitialized;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isWHSItem</Name>
				<Source><![CDATA[
        protected boolean isWHSItem()
    {
        return WHSInventEnabled::exist(this.parmInventTable().ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
        public InventDim parmInventDim(InventDim _inventDim = inventDim)
    {
        if (!inventDimInitialized && prmisDefault(_inventDim))
        {
            inventDim = inventTrans.inventDim();
        }
        else
        {
            inventDim = _inventDim;
        }

        inventDimInitialized = true;

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimGroupSetup</Name>
				<Source><![CDATA[
        public InventDimGroupSetup parmInventDimGroupSetup()
    {
        if (!inventDimGroupSetup)
        {
            inventDimGroupSetup = InventDimGroupSetup::newInventTable(this.parmInventTable());
        }

        return inventDimGroupSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTable</Name>
				<Source><![CDATA[
        public InventTable parmInventTable(InventTable _inventTable = inventTable)
    {
        if (!inventTableInitialized && prmisDefault(_inventTable))
        {
            inventTable = inventTrans.inventTable();
        }
        else
        {
            inventTable = _inventTable;
        }

        inventTableInitialized = true;

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTrans</Name>
				<Source><![CDATA[
        public InventTrans parmInventTrans(InventTrans _inventTrans = inventTrans)
    {
        inventTrans = _inventTrans;
        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransType</Name>
				<Source><![CDATA[
        public InventTransType parmInventTransType()
    {
        if (!origin)
        {
           origin = inventTrans.inventTransOrigin();
        }

        return origin.ReferenceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventAutoDimCheckUpdateAdpt_InventTrans construct()
    {
        return new InventAutoDimCheckUpdateAdpt_InventTrans();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>