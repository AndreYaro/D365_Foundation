<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalDocumentHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FiscalDocumentHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkPresenseTypeForThirdPartySalesDigitalPlatform</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if presense type valid for third party sales digital platform.
    /// </summary>
    /// <param name = "_presenceType">Presence type</param>
    /// <returns>True if presense type valid for third party sales digital platform
    /// otherwise false</returns>
    public static boolean checkPresenseTypeForThirdPartySalesDigitalPlatform(EFDocPresenceType_BR _presenceType)
    {
        return _presenceType == EFDocPresenceType_BR::Internet
            || _presenceType == EFDocPresenceType_BR::Others
            || _presenceType == EFDocPresenceType_BR::Telesales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfThirdPartySalesDigitalPlatformApplicable</Name>
				<Source><![CDATA[
    public static boolean checkIfThirdPartySalesDigitalPlatformApplicable(
        FiscalDocDirection_BR _direction,
        boolean _isNFeNT2020006v100Enabled,
        EFDocPresenceType_BR _presenceType)
    {
        return _direction == FiscalDocDirection_BR::Outgoing
            && _isNFeNT2020006v100Enabled
            && FiscalDocumentHelper::checkPresenseTypeForThirdPartySalesDigitalPlatform(_presenceType)
            && FeatureStateProvider::IsFeatureEnabled(ThirdPartySalesDigitalPlatformNFeNT2020006Feature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertFreightTermsToInt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts <c>FiscalDocumentFreightTerms_BR</c> enum value to int.
    /// </summary>
    /// <param name = "_freightTerms"><c>FiscalDocumentFreightTerms_BR</c> enum value.</param>
    /// <returns>
    /// Conatiner with 2 values: first is int value for given enum value, second is indicator which shows that this enum value can be converted to int.
    /// </returns>
    public static container convertFreightTermsToInt(FiscalDocumentFreightTerms_BR _freightTerms)
    {
        int freightTerms;
        boolean wasFound;

        switch (_freightTerms)
        {
            case FiscalDocumentFreightTerms_BR::Prepaid:
                freightTerms = EFDocConstants_BR::FiscalDocumentFreightTerms_PrepaidInt;
                wasFound = true;
                break;

            case FiscalDocumentFreightTerms_BR::Collect:
                freightTerms = EFDocConstants_BR::FiscalDocumentFreightTerms_CollectInt;
                wasFound = true;
                break;

            case FiscalDocumentFreightTerms_BR::ThirdParty:
                freightTerms = EFDocConstants_BR::FiscalDocumentFreightTerms_ThirdPartyInt;
                wasFound = true;
                break;

            case FiscalDocumentFreightTerms_BR::Nofreight:
                freightTerms = EFDocConstants_BR::FiscalDocumentFreightTerms_NofreightInt;
                wasFound = true;
                break;

            default:
                wasFound = false;
        }

        return [freightTerms, wasFound];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFreightTermsIntValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts <c>FiscalDocumentFreightTerms_BR</c> enum value to int.
    /// </summary>
    /// <param name = "_freightTerms"><c>FiscalDocumentFreightTerms_BR</c> enum value.</param>
    /// <returns>
    /// Int value for given enum value.
    /// </returns>
    [Hookable(false)]
    public static int getFreightTermsIntValue(FiscalDocumentFreightTerms_BR _freightTerms)
    {
        container freightTermsCon = FiscalDocumentHelper::convertFreightTermsToInt(_freightTerms);
        boolean isEnumValueCorrect = conPeek(freightTermsCon, 2);

        if (!isEnumValueCorrect)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        int freightTerms = conPeek(freightTermsCon, 1);
        return freightTerms;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>