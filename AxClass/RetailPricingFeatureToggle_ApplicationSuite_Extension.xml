<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingFeatureToggle_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension to RetailPricingFeatureToggle to reference the retail pricing features in Application Suite
/// </summary>
[ExtensionOf(classStr(RetailPricingFeatureToggle))]
internal final class RetailPricingFeatureToggle_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRetailDiscountPerformanceImprovementFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if "Improve discount computation performance by using flattened discount tables" is available to end user.
    /// </summary>
    /// <returns>True if the feature is available; otherwise, false.</returns>
    internal static boolean isRetailDiscountPerformanceImprovementFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(RetailDiscountPerformanceImprovementFeature::instance())
            && RetailPricingKillSwitch::useFlattenDiscountFeatures();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldUseRetailPricingDataManagerV3</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if "Improve discount computation performance by using flattened discount tables" is enabled and it's ready for lookup.
    /// </summary>
    /// <returns>True if the feature is available; otherwise, false.</returns>
    internal static boolean shouldUseRetailPricingDataManagerV3()
    {
        RetailPricingSharedParameters parameters = RetailPricingSharedParameters::find();

        return RetailPricingFeatureToggle::isRetailDiscountPerformanceImprovementFeatureEnabled()
            && !parameters.ProcessingLookupTables;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetailPricingPropertyFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if "Enhanced Commerce pricing model with flexible pricing strategies" is available to end user.
    /// </summary>
    /// <returns>True if the feature is available; otherwise, false.</returns>
    internal static boolean isRetailPricingPropertyFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(RetailPricingPropertyFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetailPricingPropertyFeatureVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if "Enhanced Commerce pricing model with flexible pricing strategies" is visible to end user.
    /// The feature as of 10.0.36 is private preview only. Only environments has the flight 'RetailPricingPropertyFeature' enabled can see this.
    /// </summary>
    /// <returns>True if the feature is available; otherwise, false.</returns>
    internal static boolean isRetailPricingPropertyFeatureVisible()
    {
        return Global::isFlightEnabled(classStr(RetailPricingPropertyFeature));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>