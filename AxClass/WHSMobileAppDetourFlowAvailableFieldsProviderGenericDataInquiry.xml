<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppDetourFlowAvailableFieldsProviderGenericDataInquiry</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileAppDetourFlowAvailableFieldsProviderGenericDataInquiry</c> class provides a way to retrieve the fields that can be used to pass context
/// to and from detour generic data inquiry mobile device flow.
/// </summary>
[WHSWorkExecuteMode(WHSWorkExecuteMode::GenericDataInquiry)]
public class WHSMobileAppDetourFlowAvailableFieldsProviderGenericDataInquiry extends WHSMobileAppDetourFlowAvailableFieldsProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeAvailableFieldsMaps</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the collections for available fields for data inquiry detours.
    /// </summary>
    protected void initializeAvailableFieldsMaps()
    {
        const str MethodSuffix = '()';

        WHSRFMenuItemTable menuItem = WHSRFMenuItemTable::find(this.menuItemName);

        for (int i = 1; i <= conLen(menuItem.DataInquiryFieldList); i++)
        {
            FieldName fieldOrMethodName;
            TableName tableName;

            [fieldOrMethodName, tableName] = conPeek(menuItem.DataInquiryFieldList, i);

            if (!strEndsWith(fieldOrMethodName, MethodSuffix))
            {
                SysDictField dictField = SysDictField::newName(tableName, fieldOrMethodName);

                fieldIdToNameMapCopyFrom.insert(dictField.id(), dictField.label());
                fieldNameToIdMapCopyFrom.insert(dictField.label(), dictField.id());
            }
        }

        Query query = new Query(menuItem.DataInquiryQuery);
        TableId queryTableId = tableName2Id(menuItem.DataInquiryQueryTableName);
        QueryBuildDataSource qbds = query.dataSourceTable(queryTableId);
        
        for (int i = 1; i <= query.queryFilterCount(qbds); i++)
        {
            QueryFilter filter = query.queryFilter(i, qbds);

            if (!filter.value())
            {
                SysDictField dictField = SysDictField::newName(menuItem.DataInquiryQueryTableName, filter.field());

                fieldIdToNameMapPasteIn.insert(dictField.id(), dictField.label());
                fieldNameToIdMapPasteIn.insert(dictField.label(), dictField.id());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCopyFromFieldIdFromControl</Name>
				<Source><![CDATA[
    public Integer getCopyFromFieldIdFromControl(container _control)
    {
        return this.getFieldIdFromControlForMap(_control, fieldNameToIdMapCopyFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPasteInFieldIdFromControl</Name>
				<Source><![CDATA[
    public Integer getPasteInFieldIdFromControl(container _control)
    {
        return this.getFieldIdFromControlForMap(_control, fieldNameToIdMapPasteIn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldIdFromControlForMap</Name>
				<Source><![CDATA[
    private Integer getFieldIdFromControlForMap(container _control, Map _fieldNameToIdMap)
    {
        var fieldLabel = conPeek(_control, #label);
        if (_fieldNameToIdMap.exists(fieldLabel))
        {
            var fieldId = _fieldNameToIdMap.lookup(fieldLabel);
            return fieldId;
        }

        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>