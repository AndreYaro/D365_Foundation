<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestWorkflowManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class manages workflow instances related with the payment request.
/// </summary>
class CFMPaymentRequestWorkflowManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cancelWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cancels all unsubmitted workflow instances for the specified payment request.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request record.
    /// </param>
    /// <param name="_workflowComment">
    /// The comment associated with canceling the workflow instance; optional.
    /// </param>
    /// <remarks>
    /// Method does not update payment request record itself, just modify its workflow status value
    /// </remarks>
    public static void cancelWorkflow(CFMPaymentRequestTable _paymentRequestTable, WorkflowComment _workflowComment = '')
    {
        ttsBegin;

        Set workflowsToCancel = Set::create(CFMPaymentRequestWorkflowManager::getUnsubmittedWorkflow(_paymentRequestTable));

        if (workflowsToCancel != null)
        {
            SetEnumerator setEnumerator = workflowsToCancel.getEnumerator();

            while (setEnumerator.moveNext())
            {
                Workflow::cancelWorkflow(setEnumerator.current(), _workflowComment);
            }
        }

        _paymentRequestTable.selectForUpdate(true);
        _paymentRequestTable.initWorkflowStatus();
        _paymentRequestTable.update();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUnsubmittedWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the set of unsubmitted workflow instances for the specified payment request.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request record.
    /// </param>
    /// <returns>
    /// A packed set of workflow correlation IDs.
    /// </returns>
    public static container getUnsubmittedWorkflow(CFMPaymentRequestTable _paymentRequestTable)
    {
        Set workflows = new Set(Types::Guid);

        WorkflowWorkItemTable workflowWorkItemTable;

        while select CorrelationId from workflowWorkItemTable
            where workflowWorkItemTable.Status == WorkflowWorkItemStatus::Pending
               && workflowWorkItemTable.RefRecId == _paymentRequestTable.RecId
               && workflowWorkItemTable.RefTableId == _paymentRequestTable.TableId
        {
            workflows.add(workflowWorkItemTable.CorrelationId);
        }

        WorkflowTrackingStatusTable workflowTrackingStatusTable;

        while select CorrelationId from workflowTrackingStatusTable
            where workflowTrackingStatusTable.ContextTableId == _paymentRequestTable.TableId
               && workflowTrackingStatusTable.ContextRecId == _paymentRequestTable.RecId
               && workflowTrackingStatusTable.TrackingStatus == WorkflowTrackingStatus::Pending
        {
            workflows.add(workflowTrackingStatusTable.CorrelationId);
        }

        return workflows.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Submits workflow for the payment request.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request record.
    /// </param>
    /// <param name="_workflowComment">
    /// The comment that should be associated with the enabled workflow.
    /// </param>
    /// <returns>
    /// The ID of the workflow instance that will be used for correlation.
    /// </returns>
    public  static WorkflowCorrelationId submitWorkflow(CFMPaymentRequestTable _paymentRequestTable, WorkflowComment _workflowComment)
    {
        WorkflowCorrelationId workflowCorrelationId;

        if (_paymentRequestTable.canSubmitToWorkflow())
        {
            workflowCorrelationId = Workflow::activateFromWorkflowConfigurationId(_paymentRequestTable.getWorkflowVersionTable().ConfigurationId,
                _paymentRequestTable.RecId,
                _workflowComment,
                NoYes::No);
        }

        return workflowCorrelationId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>