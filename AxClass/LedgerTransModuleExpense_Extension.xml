<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransModuleExpense_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerTransModule))]
internal final class LedgerTransModuleExpense_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extension to use exchange rate from expense line to 
	/// Caclcuate the tax amount in accounting currency based on accounting distribution and tax transaction.
    /// </summary>
    /// <param name = "_accountingDistribution">Accounting distribution record</param>
    /// <param name = "_taxTrans">Tax transaction record.</param>
    /// <param name = "_accountingDate">Accounting date.</param>
    /// <param name = "_exchangeRate">Exchange rate used to calculate accounting currency amount.</param>
    /// <returns>Tax amount in accounting currency.</returns>
    protected AmountMST getTaxAmountMST(
										AccountingDistribution _accountingDistribution,
										TaxTrans _taxTrans,
										AccountingDate _accountingDate,
										CurrencyExchangeRate _exchangeRate
										)
    {
        AmountMST amountMST;

        if (_taxTrans.SourceTableId == tableNum(TrvExpTrans)
			&& _accountingDistribution.RecId 
			&& _exchangeRate == 0) 
        {
			TrvExpTrans trvExpTrans;
			
			select ExchangeRate from trvExpTrans
                where trvExpTrans.RecId == _taxTrans.SourceRecId;

            if (trvExpTrans.ExchangeRate != 0)
            {
                _exchangeRate = trvExpTrans.ExchangeRate;
            }
        }
		
        amountMST = next getTaxAmountMST(_accountingDistribution,
                                        _taxTrans,
                                        _accountingDate,
                                        _exchangeRate);
		
		return amountMST;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>