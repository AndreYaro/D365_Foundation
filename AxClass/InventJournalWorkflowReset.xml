<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalWorkflowReset</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class InventJournalWorkflowReset
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(args _args)
    {
        Common callerRecord = _args.record();

        if (!callerRecord || callerRecord.TableId != tableNum(WorkflowTrackingStatusTable))
        {
            return;
        }

        if (!InventoryJournalWorkflowResetFeature::isEnabled())
        {
            return;
        }

        WorkflowTrackingStatusTable workflowTrackingStatusTable = WorkflowTrackingStatusTable::findRecId(callerRecord.RecId, true);
        WorkflowContextTableId tableId = workflowTrackingStatusTable.ContextTableId;

        if (workflowTrackingStatusTable.TrackingStatus == WorkflowTrackingStatus::Unrecoverable)
        {
            switch (tableId)
            {
                case (tableNum(InventJournalTable)):
                    InventJournalWorkflowReset::resetInventoryWorkflow(workflowTrackingStatusTable);
                    break;
            }
            info("@SCM:InventoryWorkflowResetSuccessful");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInventoryWorkflow</Name>
				<Source><![CDATA[
    private static void resetInventoryWorkflow(WorkflowTrackingStatusTable _workflowTrackingStatusTable)
    {
        ttsbegin;

        InventJournalTable inventJournalTable;

        select firstonly inventJournalTable
            where inventJournalTable.RecId == _workflowTrackingStatusTable.ContextRecId
               && inventJournalTable.TableId == _workflowTrackingStatusTable.ContextTableId;

        if (!inventJournalTable)
        {
            return;
        }

        inventJournalTable.selectForUpdate(true);
        inventJournalTable.WorkflowApprovalStatus = InventJournalWorkflowApprovalStatus::NotSubmitted;
        inventJournalTable.doUpdate();

        InventJournalWorkflowReset::resetWorkflowTrackingStatusTable(_workflowTrackingStatusTable);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetWorkflowTrackingStatusTable</Name>
				<Source><![CDATA[
    private static void resetWorkflowTrackingStatusTable(WorkflowTrackingStatusTable _workflowTrackingStatusTable)
    {
        _workflowTrackingStatusTable.reread();
        _workflowTrackingStatusTable.TrackingStatus = WorkflowTrackingStatus::Cancelled;
        _workflowTrackingStatusTable.doUpdate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>