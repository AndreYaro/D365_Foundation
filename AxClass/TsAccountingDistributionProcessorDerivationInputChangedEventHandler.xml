<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TsAccountingDistributionProcessorDerivationInputChangedEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles <c>AccountingDistributionProcessor</c> dimension derivation input changed events.
/// </summary>
public class TsAccountingDistributionProcessorDerivationInputChangedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updatingLedgerDimensionForDerivationInputChangedOnDistributionUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the <c>AccountingDistirbutionProcessor</c> ledger dimension derivation input changed on distribution update event.
    /// </summary>
    /// <param name = "_eventArgs">The arguments for the event.</param>
    [SubscribesTo(classstr(AccountingDistributionProcessor), delegatestr(AccountingDistributionProcessor, updatingLedgerDimensionForDerivationInputChangedOnDistributionUpdate))]
    public static void updatingLedgerDimensionForDerivationInputChangedOnDistributionUpdate(AccountingDistributionProcessorDerivationInputChangedEventArgs _eventArgs)
    {
        SourceDocumentLineItem sourceDocumentLineItem = _eventArgs.parmSourceDocumentLineItem();

        if (sourceDocumentLineItem is TSTimesheetTransSourceDocLineItem)
        {
            LedgerDimensionDefaultAccount mainAccount = LedgerDefaultAccountHelper::getDefaultAccountFromLedgerDimension(_eventArgs.parmOriginalLedgerDimension());
            LedgerDimensionAccount ledgerDimension = LedgerDimensionFacade::serviceCreateLedgerDimension(mainAccount, sourceDocumentLineItem.parmDefaultDimension());

            _eventArgs.parmRevisedLedgerDimension(DimensionDerivationDistributionRule::buildLedgerDimension(ledgerDimension, sourceDocumentLineItem.parmDefaultDimension()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>