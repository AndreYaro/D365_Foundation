<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInstrumentationLoggerProperties</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides properties for inventory instrumentation logging.
/// </summary>
final internal class InventInstrumentationLoggerProperties extends SysInstrumentationLoggerAppSuiteProperties
{
    internal readonly str InventUpdateClassName = 'ClassName';
    internal readonly str InventUpdateMovementClass = 'MovementClass';
    internal readonly str InventTransOriginStart = 'TransOriginStart';
    internal readonly str InventTransOriginStop = 'TransOriginStop';
    internal readonly str InventUpdateOnhandContext = 'Context';

    internal readonly str WhsItem = 'WhsItem';
    internal readonly str CwItem = 'CwItem';
    internal readonly str StockedItem = 'StockedItem';
    internal readonly str BatchItem = 'BatchItem';
    internal readonly str SerialItem = 'SerialItem';
    internal readonly str OwnerItem = 'OwnerItem';
    internal readonly str VariantItem = 'VariantItem';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWHSItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isWHSItem(InventMovement _movement)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.WhsItem, int2Str(_movement.isItemWHSEnabled()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCwItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isCwItem(InventMovement _movement)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.CwItem, int2Str(_movement.pdsCWItem()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStockedItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isStockedItem(InventTable _inventTable)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.StockedItem, int2Str(_inventTable.isStocked()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isBatchItem(InventDimParm _physicalDimensions)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.BatchItem, int2Str(_physicalDimensions.InventBatchIdFlag == NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isSerialItem(InventDimParm _physicalDimensions)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.SerialItem, int2Str(_physicalDimensions.InventSerialIdFlag == NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOwnerItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isOwnerItem(InventDimParm _physicalDimensions)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.OwnerItem, int2Str(_physicalDimensions.InventOwnerIdFlag_RU == NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVariantItem</Name>
				<Source><![CDATA[
    final internal SysInstrumentationLoggerAppSuiteProperty isVariantItem(InventDimParm _productDimensions)
    {
        return SysInstrumentationLoggerAppSuiteProperty::newProperty(this.VariantItem, int2Str(_productDimensions.anyProductDimensionFlagSet()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static InventInstrumentationLoggerProperties construct()
    {
        return new InventInstrumentationLoggerProperties();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>