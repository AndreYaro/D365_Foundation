<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KmQuestionnaireSaveResultEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class KmQuestionnaireSaveResultEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>KmQuestionnaireSaveResult_saveCallingRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// The saveCallingRelation delegate event handler for the KmQuestionnaireSaveResult class
    /// Inserts a record in the <c>PurchReqLineQuestionnaireResponse</c> or <c>PurchRFQTableQuestionnaireResponse</c> table.
    /// </summary>
    /// <param name = "_kmVirtualNetworkAnswerTableId">The ID of a <c>KMVirtualNetworkAnswerTable</c> record.</param>
    /// <param name = "_kmCollectionId">The ID of a <c>KMCollection</c> record.</param>
    /// <param name = "_refCallingTableId">The table ID of the record from where the questionnaire is opened.</param>
    /// <param name = "_refCallingRecId">The record ID of the record from where the questionnaire is opened.</param>
    [SubscribesTo(classStr(KmQuestionnaireSaveResult), delegateStr(KmQuestionnaireSaveResult, saveCallingRelation))]
    public static void KmQuestionnaireSaveResult_saveCallingRelation(
        KMVirtualNetworkAnswerTableId _kmVirtualNetworkAnswerTableId,
        KMCollectionId _kmCollectionId,
        tableId _refCallingTableId,
        recId _refCallingRecId)
    {
        boolean saveCallingRelation = KmQuestionnaireSaveResultEventHandler::addSaveCallingRelation(_kmVirtualNetworkAnswerTableId,
                                                                                                    _kmCollectionId,
                                                                                                    _refCallingTableId,
                                                                                                    _refCallingRecId);

        if (!saveCallingRelation)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSaveCallingRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the saveCallingRelation delegate value.
    /// </summary>
    /// <param name = "_kmVirtualNetworkAnswerTableId">The ID of a <c>KMVirtualNetworkAnswerTable</c> record.</param>
    /// <param name = "_kmCollectionId">The ID of a <c>KMCollection</c> record.</param>
    /// <param name = "_refCallingTableId">The table ID of the record from where the questionnaire is opened.</param>
    /// <param name = "_refCallingRecId">The record ID of the record from where the questionnaire is opened.</param>
    /// <returns>true if the saveCallingRelation can be saved; otherwise, false.</returns>
    protected static boolean addSaveCallingRelation(
        KMVirtualNetworkAnswerTableId _kmVirtualNetworkAnswerTableId,
        KMCollectionId _kmCollectionId,
        tableId _refCallingTableId,
        recId _refCallingRecId)
    {
        PurchReqLineQuestionnaireResponse purchReqLineQuestionnaireResponse;
        PurchReqLineQuestionnaireResponse purchReqLineQuestionnaireResponseDelete;
        KMVirtualNetworkAnswerTable kmVirtualNetworkAnswerTableDelete;
        boolean saveCallingRelation = true;

        switch (_refCallingTableId)
        {
            case tableNum(PurchReqLine):
                purchReqLineQuestionnaireResponse.PurchReqLine = _refCallingRecId;
                purchReqLineQuestionnaireResponse.kmVirtualNetworkAnswerTableId = _kmVirtualNetworkAnswerTableId;
                purchReqLineQuestionnaireResponse.kmVirtualNetworkAnswerTableIdDataArea = curext();
                purchReqLineQuestionnaireResponse.insert();

                purchReqLineQuestionnaireResponseDelete.selectForUpdate(true);
                kmVirtualNetworkAnswerTableDelete.selectForUpdate(true);

                while select purchReqLineQuestionnaireResponseDelete
                    where purchReqLineQuestionnaireResponseDelete.PurchReqLine == _refCallingRecId
                        && purchReqLineQuestionnaireResponseDelete.RecId != purchReqLineQuestionnaireResponse.RecId
                    join kmVirtualNetworkAnswerTableDelete
                        where kmVirtualNetworkAnswerTableDelete.KmVirtualNetworkAnswerTableId == purchReqLineQuestionnaireResponseDelete.kmVirtualNetworkAnswerTableId
                            && kmVirtualNetworkAnswerTableDelete.DataAreaId == purchReqLineQuestionnaireResponseDelete.kmVirtualNetworkAnswerTableIdDataArea
                            && kmVirtualNetworkAnswerTableDelete.KmCollectionId == _kmCollectionId
                {
                    purchReqLineQuestionnaireResponseDelete.delete();
                    kmVirtualNetworkAnswerTableDelete.delete();
                }
                break;

            case tableNum(PurchRFQTableKMCollection):
                PurchRFQTableQuestionnaireResponse::saveResponse(_refCallingRecId, _kmVirtualNetworkAnswerTableId);
                break;

            case tableNum(VendProspectiveVendorQuestionnaire):
                VendProspectiveVendorQuestionnaire::saveResponse(_refCallingRecId, _kmVirtualNetworkAnswerTableId);
                break;

            default:
                saveCallingRelation = false;
        }

        return saveCallingRelation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>