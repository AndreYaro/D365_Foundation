<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FieldList</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
final class FieldList
{
    tableId     tableId;
    container   fields;
    container   formatSpec;

    int         currentPos;

    NoYes       sumAll;
    NoYes       sumPlus;
    NoYes       sumMinus;
    int         lgth;
    int         negative;

    DictTable   _table;
    fieldId     fieldId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
        void add(fieldId _fieldId)
    {
        fields     = conins(fields,9999,_fieldId);
        formatSpec = conins(formatSpec,9999,this.initFormat());
        this.find(conlen(fields));
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultList</Name>
				<Source><![CDATA[
        void defaultList()
    {
        DictFieldGroup  dictFieldGroup;
        fieldId         counter;
        DictField       dictField;

        this.reset();

        dictFieldGroup = new DictFieldGroup(_table.id(), 'AutoReport');
        if (dictFieldGroup)
            for (counter=1;counter<=dictFieldGroup.numberOfFields();counter++)
            {
                dictField = new DictField(_table.id(), dictFieldGroup.field(counter));
                if ((dictField.flags() & 1) && (dictField.flags() & 8))
                    this.add(fieldId2Ext(dictField.id(),0));
            }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        void delete()
    {
        fields     = condel(fields    ,currentPos,1);
        formatSpec = condel(formatSpec,currentPos,1);

        if (currentPos > conlen(fields))
            currentPos--;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportFieldsFormatSpec</Name>
				<Source><![CDATA[
        container exportFieldsFormatSpec()
    {
        return [fields,formatSpec];
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldCount</Name>
				<Source><![CDATA[
        int fieldCount()
    {
        return conlen(fields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldId</Name>
				<Source><![CDATA[
        fieldId fieldId()
    {
        return conpeek(fields,currentPos);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        void find(int pos)
    {
        if (pos >= 1 && pos <= conlen(fields))
        {
            currentPos= pos;

            [sumAll,sumPlus,sumMinus,lgth,negative] = conpeek(formatSpec,currentPos);

            fieldId = this.fieldId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>importFieldsFormatSpec</Name>
				<Source><![CDATA[
        void importFieldsFormatSpec(container data)
    {
        [fields,formatSpec] = data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormat</Name>
				<Source><![CDATA[
        container initFormat()
    {
        return [NoYes::No,NoYes::No,NoYes::No,0,0];
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        void insert(fieldId _fieldId)
    {
        fields     = conins(fields    ,currentPos,_fieldId);
        formatSpec = conins(formatSpec,currentPos,this.initFormat());
    }

]]></Source>
			</Method>
			<Method>
				<Name>length</Name>
				<Source><![CDATA[
        int length(int _length = lgth)
    {
        lgth = _length;

        this.packFormat();

        return lgth;
    }

]]></Source>
			</Method>
			<Method>
				<Name>negative</Name>
				<Source><![CDATA[
        int negative(int _negative= negative)
    {
        negative= _negative;

        this.packFormat();

        return negative;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        void new(tableId    _tableId)
    {
        ;
        tableId = _tableId;

        _table = new DictTable(tableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>packFormat</Name>
				<Source><![CDATA[
        void packFormat()
    {
        if (currentPos)
            formatSpec = conpoke(formatSpec,currentPos,[sumAll,sumPlus,sumMinus,lgth,negative]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
        void reset()
    {
        fields     = connull();
        formatSpec = connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumAll</Name>
				<Source><![CDATA[
        NoYes sumAll(NoYes _sumAll  = sumAll)
    {
        sumAll  = _sumAll;

        this.packFormat();

        return sumAll;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumMinus</Name>
				<Source><![CDATA[
        NoYes sumMinus(NoYes _sumMinus = sumMinus)
    {
        sumMinus = _sumMinus;

        this.packFormat();

        return sumMinus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumPlus</Name>
				<Source><![CDATA[
        NoYes sumPlus(NoYes _sumPlus = sumPlus)
    {
        sumPlus = _sumPlus;

        this.packFormat();

        return sumPlus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
        tableId tableId()
    {
        return tableId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>