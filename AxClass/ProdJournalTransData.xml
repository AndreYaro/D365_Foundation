<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalTransData</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class ProdJournalTransData  extends JournalTransData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prodId</Name>
				<Source><![CDATA[
    abstract ProdId prodId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJourType</Name>
				<Source><![CDATA[
    abstract ProdJourType prodJourType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static ProdJournalTransData construct(
        JournalTransMap     _journalTrans,
        JournalTableData    _journalTableData
        )
    {
        ProdJournalTransData prodJournalTransData = ProdJournalTransData::constructByJournalTableData(_journalTrans,_journalTableData);
        if(!prodJournalTransData)
        {            
            throw error("@SYS68235");
        }
        return prodJournalTransData;

    }

]]></Source>
			</Method>
			<Method>
				<Name>constructByJournalTableData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the <c>ProdJournalTransData</c> object depending on the journal type.
    /// </summary>
    /// <param name = "_journalTrans"> The journal transaction. </param>
    /// <param name = "_journalTableData"> The journal table data. </param>
    /// <returns> A <c>ProdJournalTransData</c> object. </returns>
    protected static ProdJournalTransData constructByJournalTableData(JournalTransMap _journalTrans, JournalTableData _journalTableData)
    {
        ProdJournalTable   prodJournalTable = _journalTableData.journalTable();
        switch (prodJournalTable.journalType)
        {
            case ProdJournalType::Picklist:         return new ProdJournalTransDataBOM(_journalTrans,_journalTableData);
            case ProdJournalType::ReportFinished:   return new ProdJournalTransDataProd(_journalTrans,_journalTableData);
            case ProdJournalType::RouteCard:        return new ProdJournalTransDataRoute(_journalTrans,_journalTableData);
            case ProdJournalType::JobCard:          return new ProdJournalTransDataRoute(_journalTrans,_journalTableData);
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTransTable</Name>
				<Source><![CDATA[
    static ProdJournalTransData newTransTable(
        JournalTransMap     _journalTrans,
        JournalTableData    _journalTableData
        )
    {
        return ProdJournalTransData::construct(_journalTrans,_journalTableData);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>