<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCheqPrepCancelJourLineType_CustVend</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankCheqPrepCancelJourLineType_CustVend</c> class prepares a <c>LedgerJournalTrans</c> record with the values necessary to
/// cancel a cheque with a recipient type of customer or vendor.
/// </summary>
class BankCheqPrepCancelJourLineType_CustVend extends BankCheqPrepCancelJourLineType
{
    BankChequeRecipientType bankChequeRecipientType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAmountCur</Name>
				<Source><![CDATA[
        protected AmountCur getAmountCur()
    {
        return custVendPaymTrans.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountCurCredit</Name>
				<Source><![CDATA[
    protected AmountCur getAmountCurCredit()
    {
        LedgerJournalTrans  ledgerJournalTransLocal;
        AmountCur           amountCurCredit;

        if (isWithholdingTaxMarked)
        {
            select crossCompany AmountCurDebit
                from ledgerJournalTransLocal
                    where ledgerJournalTransLocal.VendTransId == custVendPaymTrans.RecId;
        }

        if (isWithholdingTaxMarked
            && ledgerJournalTransLocal.AmountCurDebit
            && ledgerJournalTransLocal.ledgerJournalTable().JournalType == LedgerJournalType::BankChequeReversal)
        {
            amountCurCredit   = ledgerJournalTransLocal.AmountCurDebit;
        }
        else
        {
            amountCurCredit  = this.getAmountCur();
        }

        return amountCurCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionType</Name>
				<Source><![CDATA[
    private LedgerTransType getTransactionType()
    {
        if (bankChequeRecipientType == BankChequeRecipientType::Cust)
        {
            return LedgerTransType::Cust;
        }
        else
        {
            return LedgerTransType::Vend;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initChequeRecipientTypeClass</Name>
				<Source><![CDATA[
        protected void initChequeRecipientTypeClass(Common _common,  BankChequeRecipientType _bankChequeRecipientType, BankAccountTrans _bankAccountTrans, BankChequeTable _bankChequeTable)
    {
        Debug::assert(_common.TableId == tableNum(CustTrans) || _common.TableId == tableNum(VendTrans));

        custVendPaymTrans = _common;
        bankChequeRecipientType = _bankChequeRecipientType;
        bankAccountTransToCancel = _bankAccountTrans;
        bankChequeToCancel = _bankChequeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRecipientTypeSpecificJournalValues</Name>
				<Source><![CDATA[
        protected LedgerJournalTrans setRecipientTypeSpecificJournalValues(LedgerJournalTrans _ledgerJournalTrans)
    {
        _ledgerJournalTrans.DocumentNum         = custVendPaymTrans.DocumentNum;
        _ledgerJournalTrans.DocumentDate        = custVendPaymTrans.TransDate;
        _ledgerJournalTrans.PaymReference       = custVendPaymTrans.PaymReference;
        _ledgerJournalTrans.PaymMode            = custVendPaymTrans.PaymMode;
        _ledgerJournalTrans.ExchRate            = custVendPaymTrans.ExchRate;
        _ledgerJournalTrans.ExchRateSecond      = custVendPaymTrans.ExchRateSecond;
        _ledgerJournalTrans.Triangulation       = custVendPaymTrans.euroTriangulation;
        _ledgerJournalTrans.DefaultDimension    = custVendPaymTrans.DefaultDimension;
        _ledgerJournalTrans.CurrencyCode        = custVendPaymTrans.CurrencyCode;
        _ledgerJournalTrans.TransactionType     = this.getTransactionType();
        _ledgerJournalTrans.ReportingCurrencyExchRate = custVendPaymTrans.ReportingCurrencyExchRate;
        _ledgerJournalTrans.ReportingCurrencyExchRateSecondary = custVendPaymTrans.ReportingCurrencyExchRateSecondary;

        _ledgerJournalTrans.parmAccount(custVendPaymTrans.AccountNum,
            bankChequeRecipientType == BankChequeRecipientType::Vend ? LedgerJournalACType::Vend : LedgerJournalACType::Cust,
            custVendPaymTrans.company());

        return _ledgerJournalTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>