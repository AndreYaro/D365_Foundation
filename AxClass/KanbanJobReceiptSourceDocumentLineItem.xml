<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobReceiptSourceDocumentLineItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanJobReceiptSourceDocumentLineItem</c> class provides information that is related to a
/// kanban job receipt line item on a kanban job source document.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocumentLine_Kanban), SourceDocumentLine_Kanban::KanbanJobReceipt)]
public class KanbanJobReceiptSourceDocumentLineItem extends SourceDocumentLineItem
{
    KanbanJobReceipt    kanbanJobReceipt;
    KanbanJob           kanbanJob;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the default dimension for a line.
    /// </summary>
    /// <returns>
    /// The default dimension for the line.
    /// </returns>
    /// <remarks>
    /// This value is cached on the <c>SourceDocumentLineItem</c> class in the
    /// <c>SourceDocumentLineItem.parmDefaultDimension</c> method. All consumers should use that method to
    /// retrieve the default dimension, because it will call this method as necessary.
    /// </remarks>
    protected DimensionDefault calculateDefaultDimension()
    {
        return kanbanJob.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateLegalEntityRecId</Name>
				<Source><![CDATA[
    protected LegalEntityRecId calculateLegalEntityRecId()
    {
        return kanbanJob.legalEntity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSourceDocumentAmountMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates an amount map for the line.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>SourceDocumentAmountMap</c> class.
    /// </returns>
    /// <remarks>
    /// This map is cached on the <c>SourceDocumentLineItem</c> class in the
    /// <c>SourceDocumentLineItem.parmSourceDocumentAmountMap</c> method. All consumers must use that
    /// method to retrieve the map, because it will call this method as necessary.
    /// </remarks>
    protected SourceDocumentAmountMap calculateSourceDocumentAmountMap()
    {
        return SourceDocumentAmountMap::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the business event that is documented by a source document line.
    /// </summary>
    /// <returns>
    /// An instance of the <c>BusinessEvent</c> class.
    /// </returns>
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent businessEvent = new BusinessEvent(enumNum(BusinessEvent_Kanban),BusinessEvent_Kanban::PostKanbanJobReceipt);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_sourceDocumentLineImplementation">
    /// A <c>SourceDocumentLineImplementation</c> map.
    /// </param>
    /// <param name="_additionalInformation">
    /// A map to hold buffers of pre initiliazed objects need by the framework to the source document.
    /// </param>
    protected void initializeImplementation(SourceDocumentLineImplementation _sourceDocumentLineImplementation, Map _additionalInformation = null)
    {
        kanbanJobReceipt = _sourceDocumentLineImplementation;
        kanbanJob        = KanbanJob::find(kanbanJobReceipt.KanbanJob);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmTransactionCurrencyCode()
    {
        return Ledger::accountingCurrency(kanbanJob.legalEntity());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
