<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConsolidationQueryCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipConsolidationQueryCriteria</c> class transports the shipment consolidation data for creating a query.
/// </summary>
public class WHSShipConsolidationQueryCriteria implements SysPackable
{
    Query                           baseQuery;
    WHSShipConsolidationPolicyType  shipConsolidationPolicyType;
    CustAccount                     customerAccount;
    TransDate                       shippingDateFrom;
    TransDate                       shippingDateTo;
    InventLocationId                originLocationId;
    InventSiteId                    originSiteId;
    TMSPostalCodeFromRegExpression  originPostalCodeFrom;
    TMSPostalCodeToRegExpression    originPostalCodeTo;
    TMSCountryRegion                originCountry;
    TransDate                       deliveryDateFrom;
    TransDate                       deliveryDateTo;
    InventLocationId                destinationLocationId;
    InventSiteId                    destinationSiteId;
    TMSPostalCodeFromRegExpression  destinationPostalCodeFrom;
    TMSPostalCodeToRegExpression    destinationPostalCodeTo;
    TMSCountryRegion                destinationCountry;
    TMSFilterCode1                  filterCode1;
    TMSFilterCode2                  filterCode2;
    TMSFilterCode3                  filterCode3;
    TMSFilterCode4                  filterCode4;
    boolean                         splitByLoadTemplateMaxValues;
    boolean                         updateScheduledShipDateTime;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        shipConsolidationPolicyType,
        customerAccount,
        shippingDateFrom,
        shippingDateTo,
        originLocationId,
        originSiteId,
        originPostalCodeFrom,
        originPostalCodeTo,
        originCountry,
        deliveryDateFrom,
        deliveryDateTo,
        destinationLocationId,
        destinationSiteId,
        destinationPostalCodeFrom,
        destinationPostalCodeTo,
        destinationCountry,
        filterCode1,
        filterCode2,
        filterCode3,
        filterCode4,
        splitByLoadTemplateMaxValues,
        updateScheduledShipDateTime
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSShipConsolidationQueryCriteria construct()
    {
        return new WHSShipConsolidationQueryCriteria();
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    internal static WHSShipConsolidationQueryCriteria create(container _parameters)
    {
        WHSShipConsolidationQueryCriteria queryCriteria = WHSShipConsolidationQueryCriteria::construct();

        queryCriteria.unpack(_parameters);

        return queryCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, baseQuery.pack(), #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret;
        Integer version = conPeek(_packedClass, 1);
        container baseQueryPacked;

        switch (version)
        {
            case #CurrentVersion:
                [version, baseQueryPacked, #CurrentList] = _packedClass;
                baseQuery = new Query(baseQueryPacked);
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipConsolidationPolicyType</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public  WHSShipConsolidationPolicyType parmShipConsolidationPolicyType(WHSShipConsolidationPolicyType _shipConsolidationPolicyType = shipConsolidationPolicyType)
    {
        shipConsolidationPolicyType = _shipConsolidationPolicyType;

        return shipConsolidationPolicyType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerAccount</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public CustAccount parmCustomerAccount(CustAccount _customerAccount = customerAccount)
    {
        customerAccount = _customerAccount;

        return customerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBaseQuery</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public Query parmBaseQuery(Query _baseQuery = baseQuery)
    {
        baseQuery = _baseQuery;

        return baseQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateFrom</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TransDate parmDeliveryDateFrom(TransDate _deliveryDateFrom = deliveryDateFrom)
    {
        deliveryDateFrom = _deliveryDateFrom;

        return deliveryDateFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateTo</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TransDate parmDeliveryDateTo(TransDate _deliveryDateTo = deliveryDateTo)
    {
        deliveryDateTo = _deliveryDateTo;

        return deliveryDateTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationLocationId</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public InventLocationId parmDestinationLocationId(InventLocationId _destinationLocationId = destinationLocationId)
    {
        destinationLocationId = _destinationLocationId;

        return destinationLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationSiteId</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public InventSiteId parmDestinationSiteId(InventSiteId _destinationSiteId = destinationSiteId)
    {
        destinationSiteId = _destinationSiteId;

        return destinationSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationCountry</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSCountryRegion parmDestinationCountry(TMSCountryRegion _destinationCountry = destinationCountry)
    {
        destinationCountry = _destinationCountry;

        return destinationCountry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationPostalCodeFrom</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSPostalCodeFromRegExpression parmDestinationPostalCodeFrom(TMSPostalCodeFromRegExpression _destinationPostalCodeFrom = destinationPostalCodeFrom)
    {
        destinationPostalCodeFrom = _destinationPostalCodeFrom;

        return destinationPostalCodeFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDestinationPostalCodeTo</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSPostalCodeToRegExpression parmDestinationPostalCodeTo(TMSPostalCodeToRegExpression _destinationPostalCodeTo = destinationPostalCodeTo)
    {
        destinationPostalCodeTo = _destinationPostalCodeTo;

        return destinationPostalCodeTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginLocationId</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public InventLocationId parmOriginLocationId(InventLocationId _originLocationId = originLocationId)
    {
        originLocationId = _originLocationId;

        return originLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginSiteId</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public InventSiteId parmOriginSiteId(InventSiteId _originSiteId = originSiteId)
    {
        originSiteId = _originSiteId;

        return originSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginCountry</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSCountryRegion parmOriginCountry(TMSCountryRegion _originCountry = originCountry)
    {
        originCountry = _originCountry;

        return originCountry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginPostalCodeFrom</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSPostalCodeFromRegExpression parmOriginPostalCodeFrom(TMSPostalCodeFromRegExpression _originPostalCodeFrom = originPostalCodeFrom)
    {
        originPostalCodeFrom = _originPostalCodeFrom;

        return originPostalCodeFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOriginPostalCodeTo</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSPostalCodeToRegExpression parmOriginPostalCodeTo(TMSPostalCodeToRegExpression _originPostalCodeTo = originPostalCodeTo)
    {
        originPostalCodeTo = _originPostalCodeTo;

        return originPostalCodeTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateFrom</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TransDate parmShippingDateFrom(TransDate _shippingDateFrom = shippingDateFrom)
    {
        shippingDateFrom = _shippingDateFrom;

        return shippingDateFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateTo</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TransDate parmShippingDateTo(TransDate _shippingDateTo = shippingDateTo)
    {
        shippingDateTo = _shippingDateTo;

        return shippingDateTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilterCode1</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSFilterCode1 parmFilterCode1(TMSFilterCode1 _filterCode1 = filterCode1)
    {
        filterCode1 = _filterCode1;

        return filterCode1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilterCode2</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSFilterCode2 parmFilterCode2(TMSFilterCode2 _filterCode2 = filterCode2)
    {
        filterCode2 = _filterCode2;

        return filterCode2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilterCode3</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSFilterCode3 parmFilterCode3(TMSFilterCode3 _filterCode3 = filterCode3)
    {
        filterCode3 = _filterCode3;

        return filterCode3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilterCode4</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public TMSFilterCode4 parmFilterCode4(TMSFilterCode4 _filterCode4 = filterCode4)
    {
        filterCode4 = _filterCode4;

        return filterCode4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSplitByLoadTemplateMaxValues</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public boolean parmSplitByLoadTemplateMaxValues(boolean _splitByLoadTemplateMaxValues = splitByLoadTemplateMaxValues)
    {
        splitByLoadTemplateMaxValues = _splitByLoadTemplateMaxValues;

        return splitByLoadTemplateMaxValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUpdateScheduledShipDateTime</Name>
				<Source><![CDATA[
    [Hookable(false), Wrappable(false)]
    public boolean parmUpdateScheduledShipDateTime(boolean _updateScheduledShipDateTime = updateScheduledShipDateTime)
    {
        updateScheduledShipDateTime = _updateScheduledShipDateTime;

        return updateScheduledShipDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>