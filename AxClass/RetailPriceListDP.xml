<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPriceListDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailPriceListDP</c> class provides data source for price list report.
/// </summary>
[
SRSReportParameterAttribute(classStr(RetailPriceListRDPContract))
]
internal class RetailPriceListDP extends SRSReportDataProviderPreProcessTempDB
{
    TmpRetailPriceListDisplayValues retailPriceList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRetailPriceListTmpTable</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tablestr(TmpRetailPriceListDisplayValues))]
    internal TmpRetailPriceListDisplayValues getRetailPriceListTmpTable()
    {
        return retailPriceList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        // Retrive contract data
        RetailPriceListRDPContract contract = this.parmDataContract() as RetailPriceListRDPContract;

        // Set up helper class
        RetailPriceListDPHelper priceListHelper = new RetailPriceListDPHelper();
        priceListHelper.parmStoreNumber(contract.parmStoreNumber());
        priceListHelper.parmActiveDate(contract.parmActiveDate());
        priceListHelper.setTmpDBInstanceToStoreValues(this.retailPriceList);

        priceListHelper.getPriceList();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>