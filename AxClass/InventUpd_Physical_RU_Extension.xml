<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpd_Physical_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventUpd_Physical_RU_Extension</c> contains the Russian customization logic of the <c>InventUpd_Physical</c> class.
/// </summary>
[ExtensionOf(classStr(InventUpd_Physical))]
internal final class InventUpd_Physical_RU_Extension
{
    private Voucher transferOrderVoucherMatched;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>performCustomIssueInventTransExtraValidation</Name>
				<Source><![CDATA[
    protected boolean performCustomIssueInventTransExtraValidation(
        StatusIssue                             _fromStatus,
        StatusIssue                             _toStatus,
        InventDimId                             _inventDimId,
        InventDim                               _inventDimCriteria,
        InventDimParm                           _inventDimParm,
        InventTransChildType                    _inventTransChildType,
        InventTransChildRefId                   _inventTransChildRefId,
        InventUpdateCustomTransIssueListItem    _listItem)
    {
        boolean result = next performCustomIssueInventTransExtraValidation(
                                _fromStatus, 
                                _toStatus, 
                                _inventDimId, 
                                _inventDimCriteria, 
                                _inventDimParm, 
                                _inventTransChildType, 
                                _inventTransChildRefId, 
                                _listItem);

        if (result && returnMode)
        {
            if (movement.parmCompanyCountryRegion().isCountryRegionRU())
            {
                return (((needTransIDTransit && _listItem.inventTrans.InventTransOriginTransit_RU) 
                        || (!needTransIDTransit && _listItem.inventTrans.InventTransOriginTransit_RU == 0))
                        &&  (! documentStornoId || (!_listItem.inventTrans.InvoiceReturned && _listItem.inventTrans.InvoiceId == documentStornoId)));
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInventTransBeUsedAsReturnedIssueTrans</Name>
				<Source><![CDATA[
    protected boolean canInventTransBeUsedAsReturnedIssueTrans(InventTrans _inventTrans, boolean _dimensionsSpecified)
    {
        boolean result = next canInventTransBeUsedAsReturnedIssueTrans(_inventTrans, _dimensionsSpecified);

        if (result && movement.parmCompanyCountryRegion().isCountryRegionRU())
        {
            if (movement.returnedSpecialCheckUpdate_RU() == UnknownNoYes::No &&  ( _inventTrans.MarkingRefInventTransOrigin || _inventTrans.InvoiceReturned) 
                || (movement.returnedSpecialCheckUpdate_RU() == UnknownNoYes::Yes && (!_inventTrans.MarkingRefInventTransOrigin || _inventTrans.InvoiceReturned)))
            {
                return false;
            }

            if (_dimensionsSpecified)
            {
                return !_inventTrans.MarkingRefInventTransOrigin || !_inventTrans.isGoodsInRouteTransit_RU();
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMatchingInformationForTransferOrderReturnSpecified</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a shipping voucher for matching has been specified.
    /// </summary>
    /// <returns>
    ///    true if shipping voucher for matching has been set; otherwise, false.
    /// </returns>
    internal boolean isMatchingInformationForTransferOrderReturnSpecified()
    {
        if (this.parmTransferOrderVoucherMatched())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferOrderVoucherMatched</Name>
				<Source><![CDATA[
    internal Voucher parmTransferOrderVoucherMatched(Voucher _transferOrdervoucherMatched = transferOrdervoucherMatched)
    {
        transferOrdervoucherMatched = _transferOrdervoucherMatched;
        return transferOrdervoucherMatched;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>