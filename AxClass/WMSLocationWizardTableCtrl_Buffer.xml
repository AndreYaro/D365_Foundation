<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsLocationWizardTableCtrl_Buffer</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WmsLocationWizardTableCtrl_Buffer extends WMSLocationWizardTableCtrl_NormalName
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkNotExistTmp</Name>
				<Source><![CDATA[
    public boolean checkNotExistTmp(
        Common      _cursor      = this.buffer(),
        boolean     onlySuper   = false
        )
    {
        WMSLocationWizard   localLocationWizard = this.defaultDataParent() as WMSLocationWizard;
        WMSLocation         cursor = _cursor as WMSLocation;
        if (!super(cursor,onlySuper))
        {
            return false;
        }

        if (onlySuper)
        {
            return true;
        }

        if (!localLocationWizard.wmsLocationWizardTableCtrl_Pick().checkNotExistTmp(cursor,true))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultFromShelf</Name>
				<Source><![CDATA[
    public WMSLevelId defaultFromShelf()
    {
        return (InventLocation::find(this.inventLocationId()).wmsLevelNameActive) ? 2 : 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultToShelf</Name>
				<Source><![CDATA[
    public WMSLevelId defaultToShelf()
    {
        return 4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public Name description(int _tableNo = 1)
    {
        if (_tableNo != 1)
        {
            return super();
        }

        return "@SYS57563";
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableGridTab</Name>
				<Source><![CDATA[
    public boolean enableGridTab()
    {
        WMSLocationWizard localLocationWizard = this.defaultDataParent() as WMSLocationWizard;
        InventLocation  inventLocation = InventLocation::find(this.inventLocationId());

        if (! super())
        {
            return false;
        }

        if (! localLocationWizard.hasLocationCoordinate())
        {
            return false;
        }

        if (inventLocation.wmsAisleNameActive && aisleFrom > aisleTo)
        {
            return false;
        }

        if (inventLocation.wmsRackNameActive && rackFrom > rackTo)
        {
            return false;
        }

        if (   inventLocation.wmsLevelNameActive
            && WMSLocationWizardTableCtrl_NormalName::isAll(shelfs,false))
        {
            return false;
        }

        if (   inventLocation.wmsPositionNameActive
            && WMSLocationWizardTableCtrl_NormalName::isAll(bins,false))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpTxt</Name>
				<Source><![CDATA[
    public HelpTxt helpTxt()
    {
        return "@SYS57567";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLocation</Name>
				<Source><![CDATA[
    protected boolean initLocation(WMSAisleId _wmsAisleId, WMSAisleNo _wmsAisleNo, WMSRackId _wmsRackId, WMSLevelId _wmsLevelId, WMSPositionId _wmsPositionId)
    {
        if (!super(_wmsAisleId, _wmsAisleNo, _wmsRackId, _wmsLevelId, _wmsPositionId))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWarehouseInformation</Name>
				<Source><![CDATA[
    public void initWarehouseInformation(InventLocationId _inventLocationId, container _warehouseInformation)
    {
        super(_inventLocationId, _warehouseInformation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBufferBuffer</Name>
				<Source><![CDATA[
    WMSLocation parmBufferBuffer(WMSLocation _bufferBuffer = bufferBuffer)
    {
        WMSLocation wmsLocation = super(_bufferBuffer);

        buffer = wmsLocation;
        return wmsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sorting</Name>
				<Source><![CDATA[
    public Sorting sorting()
    {
        return 5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmsLocationType</Name>
				<Source><![CDATA[
    WMSLocationType wmsLocationType()
    {
        return WMSLocationType::Buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static WMSLocationWizardTableCtrl_Buffer construct()
    {
        WMSLocationWizardTableCtrl_Buffer   wmsLocationWizardTableCtrl_Buffer = new WMSLocationWizardTableCtrl_Buffer();

        return wmsLocationWizardTableCtrl_Buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWarehouseInformation</Name>
				<Source><![CDATA[
    static container getWarehouseInformation(InventLocationId _inventLocationId)
    {
        return [WMSLocationWizardTableCtrl_NormalName::getWarehouseInformation(_inventLocationId, WMSLocationType::Pick)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWizard</Name>
				<Source><![CDATA[
    static WMSLocationWizardTableCtrl_Buffer newFromWizard(WMSLocationWizard _wmsLocationWizard)
    {
        WMSLocationWizardTableCtrl_Buffer wmsLocationWizardTableCtrl_Buffer = WMSLocationWizardTableCtrl_Buffer::construct();

        wmsLocationWizardTableCtrl_Buffer.parmDefaultDataParent(_wmsLocationWizard);
        return wmsLocationWizardTableCtrl_Buffer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>