<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerAP_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Accounts Payable on new tax information UI and transaction update.
/// </summary>
[ExtensionOf(classstr(TransTaxInformationUIControllerAP))]
final class TransTaxInformationUIControllerAP_IN_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initAllCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes UI controls for Tax information form.
    /// </summary>
    protected void initAllCtrls()
    {
        next initAllCtrls();
        // VAT
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            transTaxInformationDS.object(fieldNum(TransTaxInformation, VATNonRecoverablePercent)).registerOverrideMethod(methodStr(FormDataObject, modified), methodStr(TransTaxInformationUIControllerAP, modifiedVATNonRecoverablePercent), this);
            transTaxInformationDS.object(fieldNum(TransTaxInformation, NonBusinessUsagePercentage)).registerOverrideMethod(methodStr(FormDataObject, modified), methodStr(TransTaxInformationUIControllerAP, modifiedNonBusinessUsagePercent), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedNonBusinessUsagePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the modified method to NonBusinessUsagePercentage percent.
    /// </summary>
    /// <param name="_nonBusinessUsagePercent">
    /// The form data source field NonBusinessUsagePercentage percent.
    /// </param>
    protected void modifiedNonBusinessUsagePercent(FormDataObject _nonBusinessUsagePercent)
    {
        transTaxInformation.NonBusinessUsagePercentage = min(100, max(0, transTaxInformation.NonBusinessUsagePercentage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToExciseCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Excise tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToExciseCtrls()
    {
        next setVisibleToExciseCtrls();
        transTaxInformationExciseCtrl.parmIsScrap().visible(false);
        transTaxInformationExciseCtrl.parmDisposalType().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToVATCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all VAT tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToVATCtrls()
    {
        next setVisibleToVATCtrls();
        transTaxInformationVATCtrl.parmVatCommodityCodeStrCtrl().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all customer tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToCustomsCtrls()
    {
        next setVisibleToCustomsCtrls();
        transTaxInformationCustomsCtrl.parmCustomsTariffDirection().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToGSTTCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all GST tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToGSTTCtrls()
    {
        LedgerJournalTrans ledgerJournalTrans;

        next setVisibleToGSTTCtrls();

        if (sourceTable.TableId == tablenum(LedgerJournalTrans))
        {
            ledgerJournalTrans = LedgerJournalTrans::findRecId(sourceTable.RecId, false);
        }

        if (ledgerJournalTrans.RecId != 0
            && ledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::Daily
            && (ledgerJournalTrans.AccountType != LedgerJournalACType::Vend
                && ledgerJournalTrans.OffsetAccountType != LedgerJournalACType::Vend))
        {
            transTaxInformationGSTCtrl.parmNonBusinessUsagePercent().visible(false);
            transTaxInformationGSTCtrl.parmServiceCategory().visible(false);
        }
        else
        {
            transTaxInformationGSTCtrl.parmNonBusinessUsagePercent().visible(true);
            transTaxInformationGSTCtrl.parmServiceCategory().visible(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>