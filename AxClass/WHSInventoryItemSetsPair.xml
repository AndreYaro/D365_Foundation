<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryItemSetsPair</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides ability to build WHS inventory item sets pair (issue and receipt).
/// </summary>
internal final class WHSInventoryItemSetsPair
{
    private WHSInventoryItemSetUpdate   itemSetUpdateIssue      = new WHSInventoryItemSetUpdate();
    private WHSInventoryItemSetUpdate   itemSetUpdateReceipt    = new WHSInventoryItemSetUpdate();
    private WHSInventoryItemSetId       issueItemSetId;
    private WHSInventoryItemSetId       receiptItemSetId;

    // Whether two sets (issue and receipt) are required
    // For most cases issue set is the same as receipt set,
    // but for cases like serial number registration on Pack/Pick, they will differ
    private boolean mustUseTwoSets = false;
    
    private Set containerTransIds = new Set(Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>containerTransIdsEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an enumerator over a set of ids of the containerTranses
    /// that were used to propagate the elements added to the current item sets pair.
    /// </summary>
    /// <returns>SetEnumerator over WHSContainerTransIds used as source of the current item sets pair.</returns>
    [Hookable(false)]
    internal SetEnumerator containerTransIdsEnumerator()
    {
        return containerTransIds.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateIssueSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or creates the issue inventory item set.
    /// </summary>
    /// <returns>Issue inventory item set.</returns>
    [Hookable(false)]
    internal WHSInventoryItemSetId getOrCreateIssueSet()
    {
        if (!issueItemSetId)
        {
            issueItemSetId = itemSetUpdateIssue.createItemSet();
        }

        return issueItemSetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateReceiptSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or creates the receipt inventory item set.
    /// Receipt set in most cases is the same as issue set.
    /// </summary>
    /// <returns>Receipt inventory item set.</returns>
    [Hookable(false)]
    internal WHSInventoryItemSetId getOrCreateReceiptSet()
    {
        if (receiptItemSetId)
        {
            return receiptItemSetId;
        }

        receiptItemSetId = mustUseTwoSets
                            ? itemSetUpdateReceipt.createItemSet()
                            : this.getOrCreateIssueSet();

        return receiptItemSetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addContainerElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds new item to the the set.
    /// </summary>
    /// <param name = "_source">Source for which the element is added to the sets.</param>
    /// <param name = "_itemId">Id of item to add.</param>
    /// <param name = "_inventDimIdIssue">Product and tracking dimensions on issue.</param>
    /// <param name = "_inventDimIdReceipt">Product and tracking dimensions on receipt.</param>
    /// <param name = "_handlingQty">Handling quantity to add.</param>
    /// <param name = "_handlingWeight">Handling weight to add.</param>
    [Hookable(false)]
    internal void addContainerElement(
        WHSContainerTrans _containerTrans,
        ItemId _itemId,
        InventDimId _inventDimIdIssue,
        InventDimId _inventDimIdReceipt,
        WHSInventoryTransactionHandlingQty _handlingQty,
        WHSInventoryTransactionHandlingWeight _handlingWeight)
    {
        if (_inventDimIdIssue != _inventDimIdReceipt)
        {
            mustUseTwoSets = true;
        }

        itemSetUpdateIssue.addElement(
            _ItemId,
            _inventDimIdIssue,
            _handlingQty,
            _handlingWeight);

        itemSetUpdateReceipt.addElement(
            _ItemId,
            _inventDimIdReceipt,
            _handlingQty,
            _handlingWeight);

        containerTransIds.add(_containerTrans.ContainerTransId);

        // Item sets have just changed (new element added)
        // If they were materialized already,
        // these ids would not be valid anymore.
        issueItemSetId      = emptyGuid();
        receiptItemSetId    = emptyGuid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static WHSInventoryItemSetsPair construct()
    {
        return new WHSInventoryItemSetsPair();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>