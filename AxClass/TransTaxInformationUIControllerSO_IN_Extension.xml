<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerSO_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Sales Orders on new tax information UI and transaction update.
/// </summary>
[ExtensionOf(classStr(TransTaxInformationUIControllerSO))]
final class TransTaxInformationUIControllerSO_IN_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setVisibleToExciseCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all excise tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToExciseCtrls()
    {
        next setVisibleToExciseCtrls();

        if (salesLine.ProjId)
        {
            transTaxInformationExciseCtrl.parmIsScrap().visible(false);
        }

        transTaxInformationExciseCtrl.parmDSA().visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Customs tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToCustomsCtrls()
    {
        next setVisibleToCustomsCtrls();
        TaxModelTaxable_IN taxModelTaxable_IN = this.parmTaxModelTaxable();

        if (!(taxModelTaxable_IN.isForeignTransaction()) || (salesLine.SalesType == SalesType::ReturnItem))
        {
            transTaxInformationCustomsCtrl.parmCustomsTab().visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnabledToExciseCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set enabled or disabled to all Excise controls on Tax information form.
    /// </summary>
    protected void setEnabledToExciseCtrls()
    {
        next setEnabledToExciseCtrls();

        transTaxInformationExciseCtrl.parmDirectSettlement().enabled(
            TaxExciseTypeController_IN::isDirectSettlementAllowed(
                transTaxInformation.ExciseType,
                transTaxInformation.ExciseRecordType,
                this.getTaxDirection()));
        transTaxInformationExciseCtrl.parmDSA().enabled(
            TaxExciseTypeController_IN::isDSAAllowed(
                transTaxInformation.ExciseType,
                transTaxInformation.ExciseRecordType,
                this.parmTaxModelTaxable().getItemId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToGSTTCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set enabled or disabled to all GST controls on Tax information form.
    /// </summary>
    protected void setVisibleToGSTTCtrls()
    {
        next setVisibleToGSTTCtrls();

        transTaxInformationGSTCtrl.parmIsScrap().visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedExciseField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the modified method to Excise fields.
    /// </summary>
    protected void modifiedExciseField()
    {
        next modifiedExciseField();

        TransTaxInformationHelper::updateExciseDSA(transTaxInformation, this.parmTaxModelTaxable().getItemId());
        TransTaxInformationHelper::updateExciseDirectSettlement(transTaxInformation, this.getTaxDirection());
        transTaxInformationExciseCtrl.parmDirectSettlement().enabled(
            TaxExciseTypeController_IN::isDirectSettlementAllowed(
                transTaxInformation.ExciseType,
                transTaxInformation.ExciseRecordType,
                this.getTaxDirection()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>