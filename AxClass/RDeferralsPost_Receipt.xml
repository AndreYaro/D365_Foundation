<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rDeferralsPost_Receipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rDeferralsPost_Receipt extends RDeferralsPost
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromBookSource</Name>
				<Source><![CDATA[
        protected RDeferralsTrans initFromBookSource()
    {
        RDeferralsTrans rDeferralsTrans;

        rDeferralsTrans = super();

        rDeferralsTrans.TransType       = RDeferralsTransType::Receipt;
        rDeferralsTrans.Txt             = "@SYS16476";
        if (! RDeferralsTable::find(rDeferralsBook.DeferralsId).RefRecId)
        {
            //<RUP>
            if (isConfigurationkeyEnabled(configurationKeyNum(RPayroll)) && this.parmLedgerAccount())
            {
                rDeferralsTrans.LedgerDimension = this.parmLedgerAccount();
            }
            else
            {
            //</RUP>
                rDeferralsTrans.LedgerDimension       = RDeferralsLedgerAccounts::deferralsLedgerDim(rDeferralsTrans.DeferralsId,
                                                                                                     RDeferralsTransType::Receipt,
                                                                                                     rDeferralsTrans.DeferralsBookId,
                                                                                                     rDeferralsBook.PostingProfile);
            //<RUP>
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(RPayroll)) && this.parmLedgerAccountOffset())
            {
                rDeferralsTrans.OffsetLedgerDimension = this.parmLedgerAccountOffset();
            }
            else
            {
            //</RUP>
                rDeferralsTrans.OffsetLedgerDimension = RDeferralsLedgerAccounts::deferralsOffsetLedgerDim(rDeferralsTrans.DeferralsId,
                                                                                                           RDeferralsTransType::Receipt,
                                                                                                           rDeferralsTrans.DeferralsBookId,
                                                                                                           rDeferralsBook.PostingProfile);
            //<RUP>
            }
            //</RUP>
        }

        return rDeferralsTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
        public RDeferralsTrans initFromLedgerJournalTrans()
    {
        RDeferralsTrans rDeferralsTrans;

        rDeferralsTrans = super();
        rDeferralsTrans.Amount = ledgerJournalTrans.amountMST_RU();

        return rDeferralsTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatus</Name>
				<Source><![CDATA[
        public void updateStatus()
    {
        TransDate startWriteOffDate;

        if (! rDeferralsBook)
        {
            rDeferralsBook = RDeferralsBook::find(ledgerJournalTrans_RDeferrals.DeferralsId, ledgerJournalTrans_RDeferrals.BookId, true);
        }

        rDeferralsBook.Status          = RDeferralsStatus::Open;
        if (ledgerJournalTrans)
            rDeferralsBook.DeferralsAmount = ledgerJournalTrans.amountMST_RU();
        startWriteOffDate              = transDate;

        rDeferralsBook.StartDeferralsDate = RDeferralsGroup::initWriteStartDate(rDeferralsBook.DeferralsGroupId, startWriteOffDate);

        rDeferralsBook.initEndDeferralsDate();

        rDeferralsBook.doUpdate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>