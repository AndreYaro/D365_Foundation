<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDIFreeTextController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceCFDIFreeTextController_MX</c> class is a controller class for <c>EInvoiceCFDIReport_MX</c>
/// report.
/// </summary>
class EInvoiceCFDIFreeTextController_MX extends EInvoiceCFDISalesController_MX implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document type for the print management.
    /// </summary>
    /// <returns>A <c>PrintMgmtDocumentType</c> option.</returns>
    protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
        return PrintMgmtDocumentType::SalesFreeTextInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceId2RecID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the RecId for a given invoice.
    /// </summary>
    /// <param name="_invoiceId">The InvoiceId which is formed by the character # plus a RecId as string.</param>
    /// <returns>The RecId</returns>
    /// <remarks>
    /// When printing a proforma Free Text Invoice ID, the custInvoiceJour.InvoiceId is concatenation of # and the custInvoiceJour.RecId.
    /// This method will strip the leading # and cast the string to a int64.
    /// </remarks>
    protected recId invoiceId2RecID(InvoiceId _invoiceId)
    {
        return str2int64(subStr(_invoiceId, 2, strLen(_invoiceId)-1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtReferencedTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the print management referenced table.
    /// </summary>
    /// <returns>A loaded record.</returns>
    protected Common getPrintMgmtReferencedTable()
    {
        CustInvoiceTable custInvoiceTable;

        if (custInvoiceJour.isProforma())
        {
            // custInvoiceJour.InvoiceId is # + Recid so we must strip the leading #
            select custInvoiceTable
                    where custInvoiceTable.RecId == this.invoiceId2RecID(custInvoiceJour.InvoiceId);
        }
        else
        {
            select custInvoiceTable
                    where custInvoiceTable.InvoiceId == custInvoiceJour.InvoiceId &&
                            custInvoiceTable.InvoiceDate == custInvoiceJour.InvoiceDate &&
                            custInvoiceTable.NumberSequenceGroup == custInvoiceJour.NumberSequenceGroup;
        }

        return custInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>EInvoiceReport_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">Args object.</param>
    public static void main(Args _args)
    {
        EInvoiceControllerBase_MX controller = new EInvoiceCFDIFreeTextController_MX();

        controller.initialize(_args);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>