<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFDIWithholdingReportController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CFDIWithholdingController_MX</c> class is a controller class for <c>EInvoiceCFDIReport_MX</c>
/// report.
/// </summary>
public class CFDIWithholdingReportController_MX extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        CFDIWithholdingJour_MX withholdingJour = this.parmArgs().record();
        EInvoiceJour_MX eInvoiceJour_MX = EInvoiceJour_MX::findByRef(withholdingJour.TableId, withholdingJour.RecId);

        if(!eInvoiceJour_MX)
        {
            throw error("@SYS26348");
        }

        this.parmReportContract().parmRdlContract().parmLanguageId('es-MX');

        CFDIWithholdingReportContract_MX contract = this.parmReportContract().parmRdpContract() as CFDIWithholdingReportContract_MX;
        contract.parmRecordId(eInvoiceJour_MX.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>CFDIWithholdingController_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Args object.
    /// </param>
    public static void main(Args _args)
    {
        SrsReportRunController controller = new CFDIWithholdingReportController_MX();

        controller.parmReportName(ssrsReportStr(CFDIWithholdingReport_MX,Report));
        controller.parmArgs(_args);
        controller.parmShowDialog(true);
        controller.parmDialogCaption("@MexicoCFDIWithholding:WithholdingJour");
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>