<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMVendRebateApprSubmitManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMVendRebateApprSubmitManager</c> class manages the actions related to the submit workflow step of the
/// vendor rebate workflow.
/// </summary>
public class TAMVendRebateApprSubmitManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WorkflowCorrelationId           workflowCorrelationId;
        WorkflowTypeName                workflowTypeName =workflowtypestr(TAMVendRebateAppr);
        WorkflowComment                 note = "";
        WorkflowSubmitDialog            workflowSubmitDialog;
        TAMVendRebateAgreement          tamVendRebateAgreement;
        Object                          tamVendRebateAgreement_ds;

        if (_args != null && _args.record())
        {
            tamVendRebateAgreement = _args.record();

            if (TAMVendRebateApprSubmitManager::validateRebateAgreement(tamVendRebateAgreement))
            {
                // Opens the submit to workflow dialog.
                workflowSubmitDialog = WorkflowSubmitDialog::construct(_args.caller().getActiveWorkflowConfiguration());
                workflowSubmitDialog.run();
                if (workflowSubmitDialog.parmIsClosedOK())
                {
                    // Get comments from the submit to workflow dialog.
                    note = workflowSubmitDialog.parmWorkflowComment();
                    try
                    {
                        ttsbegin;
                        workflowCorrelationId = Workflow::activateFromWorkflowType(workflowTypeName, tamVendRebateAgreement.RecId, note, NoYes::No);

                        tamVendRebateAgreement_ds = FormDataUtil::getFormDataSource(tamVendRebateAgreement);
                        tamVendRebateAgreement.WFApprovalStatus = TAMVendRebateApprovalStatus::Submitted;

                        // If the record contains a datasource, update it and cause the form to update.
                        if (tamVendRebateAgreement_ds)
                        {
                            tamVendRebateAgreement_ds.write();
                            tamVendRebateAgreement_ds.refresh();
                        }
                        // Send an Infolog message.
                        info(strFmt("@MCR40273", tamVendRebateAgreement.RecId));
                        ttscommit;

                        _args.caller().updateWorkFlowControls();
                    }
                    catch(exception::Error)
                    {
                        info("@MCR40274");
                    }
                }
            }
        }
        else
        {
            throw error("@MCR27548");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRebateAgreement</Name>
				<Source><![CDATA[
private static boolean validateRebateAgreement(TAMVendRebateAgreement _tamVendRebateAgreement)
    {
        boolean ret = true;

        ret = _tamVendRebateAgreement.checkIfLineExists();
        ret = ret && _tamVendRebateAgreement.checkLineBreaks();
        ret = ret && _tamVendRebateAgreement.checkUOMConvert();

        return ret;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>