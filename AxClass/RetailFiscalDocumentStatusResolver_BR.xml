<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalDocumentStatusResolver_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailFiscalDocumentStatusResolver_BR</c> class is used to resolve status of fiscal document.
/// </summary>
internal final class RetailFiscalDocumentStatusResolver_BR
{
    private RetailFiscalTransaction_BR retailFiscalTransaction;
    private RetailFiscalDocument_BR retailFiscalDocument;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the resolver from fiscal document.
    /// </summary>
    /// <param name = "_retailFiscalDocument">The retail fiscal document.</param>
    /// <returns>The resolver.</returns>
    public static RetailFiscalDocumentStatusResolver_BR construct(RetailFiscalDocument_BR _retailFiscalDocument)
    {
        RetailFiscalDocumentStatusResolver_BR resolver = new RetailFiscalDocumentStatusResolver_BR();

        resolver.retailFiscalDocument = _retailFiscalDocument;
        resolver.retailFiscalTransaction = RetailFiscalTransactionRetrieverFiscalDocument_BR::construct(_retailFiscalDocument).getFiscalTransaction();

        return resolver;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalTransactionStatus</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public RetailFiscalIntegrationFiscalTransStatus getFiscalTransactionStatus()
    {
        return retailFiscalTransaction.getLastFiscalTrans().RegistrationStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatus</Name>
				<Source><![CDATA[
    public FiscalDocumentStatus_BR getStatus()
    {
        if (retailFiscalDocument.Status == FiscalDocumentStatus_BR::CancelledBySubstitution)
        {
            return FiscalDocumentStatus_BR::CancelledBySubstitution;
        }

        RetailTransactionFiscalTrans lastFiscalTrans = retailFiscalTransaction.getLastFiscalTrans();

        if (lastFiscalTrans &&
            (lastFiscalTrans.RegistrationStatus == RetailFiscalIntegrationFiscalTransStatus::Skipped ||
            lastFiscalTrans.RegistrationStatus == RetailFiscalIntegrationFiscalTransStatus::AutoSkipped))
        {
            return FiscalDocumentStatus_BR::RejectedNoFix;
        }

        EFDocReturnCode_BR returnCode = retailFiscalTransaction.getReturnCode();

        if (!returnCode)
        {
            return FiscalDocumentStatus_BR::Created;
        }

        return EFDocReturnCodeAction_BR::construct(EFDocMessageType_BR::Submit, returnCode).status();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>