<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleAdvLedgerEntryExt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    An accounting distribution rule for advanced ledger entry source document.
/// </summary>
[
    SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_AdvancedLedgerEntry), BusinessEvent_AdvancedLedgerEntry::AdvancedLedgerEntryPosting, MonetaryAmount::ExtendedPrice)
]
class AccDistRuleAdvLedgerEntryExt extends AccountingDistributionRule
{
    AdvancedLedgerEntryLine advancedLedgerEntryLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize()
    {
        advancedLedgerEntryLine = AdvancedLedgerEntryLine::findBySourceDocumentLine(this.parmSourceDocumentLineItem().parmSourceDocumentLine().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule  projectAccDistRule;
        boolean             isProject;
        LedgerPostingType   ledgerPostingType;

        projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
        isProject = projectAccDistRule.parmIsProject();

        if (isProject)
        {
            ledgerPostingType = projectAccDistRule.parmLedgerPostingType();
        }
        else
        {
            ledgerPostingType = LedgerPostingType::LedgerJournal;
        }

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        if (ProjCategory::find(advancedLedgerEntryLine.ProjCategoryId).CategoryType == ProjCategoryType::Revenue)
        {
            return this.parmAccountingdistribution().TransactionCurrencyAmount < 0 ? DebitCredit::Debit : DebitCredit::Credit;
        }

        else
        {
            return this.parmAccountingdistribution().TransactionCurrencyAmount < 0 ? DebitCredit::Credit : DebitCredit::Debit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>