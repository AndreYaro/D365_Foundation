<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkCreateLPInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for license plate receiving work creation instrumentation logging.
/// </summary>
internal final class WHSWorkCreateLPInstrumentationActivities
{
    private WHSInstrumentationLogger logger;
    private const str ActivityNamePrefix = 'WorkCreateLicensePlateReceiving.';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static WHSWorkCreateLPInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSWorkCreateLPInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTempTable</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createTempTable()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'createTempTable'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logTotalProductsSkipped</Name>
				<Source><![CDATA[
    internal void logTotalProductsSkipped(int _total)
    {
        logger.logInformation('Work creation skipped total times: ' + int2Str(_total));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logReceivingLocationIsNotLPEnabled</Name>
				<Source><![CDATA[
    internal void logReceivingLocationIsNotLPEnabled()
    {
        logger.logInformation('Receiving location is not LP enabled.');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>