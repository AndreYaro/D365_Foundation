<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalStatic</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysTableNameFactoryAttribute(tableStr(ProdJournalTable))]
class ProdJournalStatic extends JournalStatic
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>journalName</Name>
				<Source><![CDATA[
    JournalNameMap journalName()
    {
        ProdJournalName     prodJournalName;
        return prodJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTable</Name>
				<Source><![CDATA[
    JournalTableMap journalTable()
    {
        ProdJournalTable    prodJournalTable;
        return prodJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTrans</Name>
				<Source><![CDATA[
    JournalTransMap journalTrans()
    {
        ProdJournalTable    prodJournalTable = journalTable;
        ProdJournalBOM      prodJournalBOM;
        ProdJournalProd     prodJournalProd;
        ProdJournalRoute    prodJournalRoute;
        // <GEERU>
        ProdJournalRelease_RU   prodJournalRelease;
        // </GEERU>
        switch (prodJournalTable.JournalType)
        {
            case ProdJournalType::Picklist:         return prodJournalBOM;
            case ProdJournalType::ReportFinished:   return prodJournalProd;
            case ProdJournalType::RouteCard:        return prodJournalRoute;
            case ProdJournalType::JobCard:          return prodJournalRoute;
            // <GEERU>
            case ProdJournalType::ReleaseFromProduction_RU: return prodJournalRelease;
            // </GEERU>
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTypeIdToEnum</Name>
				<Source><![CDATA[
    ProdJournalType journalTypeIdToEnum(Integer _journalTypeId)
    {
        ProdJournalType journalType = _journalTypeId;

        return journalType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemStrLines</Name>
				<Source><![CDATA[
    str menuItemStrLines(Integer _journalTypeId = journalTable.JournalType)
    {
        ProdJournalType journalType = _journalTypeId;
        switch (journalType)
        {
            case ProdJournalType::Picklist:
                return menuitemdisplaystr(ProdJournalBOM);
            case ProdJournalType::ReportFinished:
                return menuitemdisplaystr(ProdJournalProd);
            case ProdJournalType::RouteCard:
                return menuitemdisplaystr(ProdJournalRoute);
            case ProdJournalType::JobCard:
                return menuitemdisplaystr(ProdJournalJob);
            // <GEERU>
            case ProdJournalType::ReleaseFromProduction_RU:
                return menuitemdisplaystr(ProdJournalRelease_RU);
            // </GEERU>
        }
        return menuitemdisplaystr(ProdJournalBOM);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalTransData</Name>
				<Source><![CDATA[
    JournalTransData newJournalTransData(JournalTransMap _journalTrans,JournalTableData _journalTableData)
    {
        return ProdJournalTransData::newTransTable(_journalTrans,_journalTableData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJournalVoucherObject</Name>
				<Source><![CDATA[
    JournalVoucherObject newJournalVoucherObject(JournalVoucherList _journalVoucherList)
    {
        return new ProdJournalVoucherObject(_journalVoucherList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefJournalId</Name>
				<Source><![CDATA[
    NumberSequenceReference numRefJournalId()
    {
        return ProdParameters::numRefProdJournalId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardJournalNameId</Name>
				<Source><![CDATA[
    ProdJournalNameId standardJournalNameId(Integer _journalTypeId)
    {
        ProdJournalTable prodJournalTable = journalTable;
        return ProdJournalName::standardJournalName(_journalTypeId,prodJournalTable.ProdId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrongJournalTypeMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds an error message that is based on the <c>journalTypeId</c> parameter that is being passed.
    /// </summary>
    /// <param name="_journalTypeId">
    /// The ID of the journal type, which is considered to be the wrong journal type.
    /// </param>
    /// <returns>
    /// A string that is built from the @SYS22977 label and the found journal type.
    /// </returns>
    public str wrongJournalTypeMessage(int _journalTypeId)
    {
        return strfmt("@SYS22977", this.journalTypeIdToEnum(_journalTypeId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>