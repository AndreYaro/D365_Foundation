<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDlvModeExplodeStageTimer</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

/// <summary>
/// Provides instrumentation for a stage during the "Process delivery modes" job.
/// </summary>
internal class RetailDlvModeExplodeStageTimer implements System.IDisposable
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

    private System.Diagnostics.Stopwatch stopWatch;
    private RecId dlvModeRecId;
    private str stage;
    private guid correlationId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(RecId _dlvModeRecId, str _stage)
    {
        stopwatch     = new System.Diagnostics.Stopwatch();
                      
        dlvModeRecId  = _dlvModeRecId;
        stage         = _stage;

        correlationId = newGuid();

        this.start();
    }

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ends the monitoring scope.
    /// </summary>
    public void Dispose()
    {
        stopwatch.Stop();

        eventSource.EventWriteProcessDeliveryModesStageStop(dlvModeRecId, stage, stopWatch.get_ElapsedMilliseconds(), correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts a new instrumentation segment.
    /// </summary>
    /// <param name = "_dlvModeRecId">The Delivery Mode RecId.</param>
    /// <param name = "_stage">The stage name.</param>
    /// <returns>An instrumentation segment.</returns>
    public static RetailDlvModeExplodeStageTimer construct(RecId _dlvModeRecId, str _stage)
    {
        return new RetailDlvModeExplodeStageTimer(_dlvModeRecId, _stage);
    }

]]></Source>
			</Method>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts measuring the execution time.
    /// </summary>
    protected void start()
    {
        eventSource.EventWriteProcessDeliveryModesStageStart(dlvModeRecId, stage, correlationId);

        stopWatch.Start();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>