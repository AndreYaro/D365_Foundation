<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanningContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetPlanningContract</c> class is used as a data contract to pass budget planning to and from services.
/// </summary>
[DataContractAttribute]
public class BudgetPlanningContract extends DimensionCombinationContract
{
    str accountStructure;

    #define.CurrentVersion(1)

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLedgerDimensionType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    The ledger dimension type of the dimension combination contract.
    /// </summary>
    /// <returns>
    ///    The <c>LedgerDimensionType</c> enum value.
    /// </returns>
    public LedgerDimensionType getLedgerDimensionType()
    {
        return LedgerDimensionType::BudgetPlanning;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountStructure</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmAccountStructure(str _accountStructure = accountStructure)
    {
        accountStructure = _accountStructure;
        return accountStructure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, accountStructure, super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packed)
    {
        int version = conpeek(_packed, 1);

        switch (version)
        {
            case #CurrentVersion:
                container superPack;
                [version, accountStructure, superPack] = _packed;
                super(superPack);
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>