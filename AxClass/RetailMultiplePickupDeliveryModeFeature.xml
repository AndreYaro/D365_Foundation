<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMultiplePickupDeliveryModeFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.BusinessPlatform.SharedTypes;

/// <summary>
/// The <c>RetailMultiplePickupDeliveryModeFeature </c> class defines feature flag for enabling multiple pickup delivery mode.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class RetailMultiplePickupDeliveryModeFeature implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable
{
    private static RetailMultiplePickupDeliveryModeFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>typeNew</Name>
				<Source><![CDATA[
    private static void typeNew()
    {
        instance = new RetailMultiplePickupDeliveryModeFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static RetailMultiplePickupDeliveryModeFeature instance()
    {
        return RetailMultiplePickupDeliveryModeFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Retail:MultiplePickupDeliveryModeFeatureNameLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::Retail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Retail:MultiplePickupDeliveryModeFeatureDescriptionLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2132632';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        ttsbegin;

        CompanyInfo companyInfo;
        while select crosscompany DataArea from companyInfo
        {
            DataAreaId dataAreaId = companyInfo.DataArea;

            changeCompany(dataAreaId)
            {
                RetailDlvMode retailDlvMode;
                RetailParameters retailParameters = RetailParameters::find();

                if (retailParameters && retailParameters.PickupDeliveryModeCode != "")
                {
                    retailDlvMode.Code = retailParameters.PickupDeliveryModeCode;
                    retailDlvMode.Type = RetailDlvModeType::Pickup;
                    retailDlvMode.DisplayOrder = 0;

                    retailDlvMode.doInsert();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        ttsbegin;

        CompanyInfo companyInfo;
        while select crosscompany DataArea from companyInfo
        {
            DataAreaId dataAreaId = companyInfo.DataArea;

            changeCompany(dataAreaId)
            {
                RetailDlvMode retailDlvMode;
                RetailParameters retailParameters = RetailParameters::find(true);
                
                select firstonly retailDlvMode
                    where retailDlvMode.Type == RetailDlvModeType::Pickup;

                retailParameters.PickUpDeliveryModeCode = retailDlvMode.Code;
                retailParameters.doUpdate();

                delete_from retailDlvMode 
                    where retailDlvMode.Type == RetailDlvModeType::Pickup;
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>