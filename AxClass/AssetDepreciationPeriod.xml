<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepreciationPeriod</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class AssetDepreciationPeriod
{
    private TransDate periodFromDate;
    private TransDate periodToDate;
    private NoYes originalIsPriorPeriod;
    private TransDate originalTransDate;
    private AssetId assetId;
    private AssetBookId bookId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPeriodFromDate</Name>
				<Source><![CDATA[
    internal TransDate parmPeriodFromDate(TransDate _periodFromDate = periodFromDate)
    {
        periodFromDate = _periodFromDate;
        return periodFromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodToDate</Name>
				<Source><![CDATA[
    internal TransDate parmPeriodToDate(TransDate _periodToDate = periodToDate)
    {
        periodToDate = _periodToDate;
        return periodToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPeriodDefined</Name>
				<Source><![CDATA[
    internal boolean isPeriodDefined()
    {
        boolean ret;

        if (this.periodFromDate != dateNull() 
            && this.periodToDate != dateNull())
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsPriorPeriod</Name>
				<Source><![CDATA[
    internal NoYes determineIsPriorPeriod(TransDate _newTransDate)
    {
        NoYes isPriorPeriod;

        if (_newTransDate == dateNull()
            || periodFromDate == dateNull()
            || periodToDate == dateNull()
            || originalTransDate == dateNull()
            || assetId == ''
            || bookId == '')
        {
            return isPriorPeriod;
        }

        AssetBook assetBook = AssetBook::find(assetId, bookId);
        AssetTableInterval assetTableInterval = assetBook.AssetGroupDepBookMap_JP::assetTableInterval();

        TransDate firstDayOfYear = assetTableInterval.findFirstDayOfYear(originalTransDate);
        TransDate lastDayOfYear = assetTableInterval.findLastDayOfYear(originalTransDate);

        if (_newTransDate >= firstDayOfYear && _newTransDate <= lastDayOfYear)
        {
            isPriorPeriod = originalIsPriorPeriod;
        }
        else
        {
            switch (originalIsPriorPeriod)
            {   
                case NoYes::Yes:
                    if (_newTransDate < firstDayOfYear)
                    {
                        isPriorPeriod = NoYes::No;
                    }
                    if (_newTransDate > lastDayOfYear)
                    {
                        isPriorPeriod = originalIsPriorPeriod;
                    }
                    break;

                case NoYes::No:
                    if (_newTransDate < firstDayOfYear)
                    {
                        isPriorPeriod = originalIsPriorPeriod;
                    }
                    if (_newTransDate > lastDayOfYear)
                    {
                        isPriorPeriod = NoYes::Yes;
                    }
                    break;
            }
        }

        return isPriorPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static AssetDepreciationPeriod construct()
    {
        AssetDepreciationPeriod instance = new AssetDepreciationPeriod();
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromLedgerJournalTransAsset</Name>
				<Source><![CDATA[
    internal static AssetDepreciationPeriod constructFromLedgerJournalTransAsset(LedgerJournalTrans_Asset _ledgerJournalTrans_Asset)
    {
        AssetDepreciationPeriod instance = new AssetDepreciationPeriod();

        instance.periodFromDate = _ledgerJournalTrans_Asset.PeriodFromDate;
        instance.periodToDate = _ledgerJournalTrans_Asset.PeriodToDate;
        instance.originalIsPriorPeriod = _ledgerJournalTrans_Asset.OriginalIsPriorYear;
        instance.originalTransDate = _ledgerJournalTrans_Asset.OriginalTransDate;
        instance.assetId = _ledgerJournalTrans_Asset.AssetId;
        instance.bookId = _ledgerJournalTrans_Asset.BookId;

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>