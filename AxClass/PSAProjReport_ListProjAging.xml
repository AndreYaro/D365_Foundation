<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PSAProjReport_ListProjAging</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PSAProjReport_ListProjAging extends ProjListLedgerTrans
{
    DialogField     dialogPositveWIP;
    DialogField     dialogNegativeWIP;
    DialogField     dialogShowThousand;
    DialogField     dialogShowClient;
    DialogField     dialogShowContract;
    DialogField     dialogShowProject;
    DialogField     dialogZeroLines;

    boolean         positiveWIP;
    boolean         negativeWIP;
    boolean         m_bshowThousand;

    boolean         m_bShowClient;
    boolean         m_bShowContract;
    boolean         m_bShowProject;

    #define.CurrentVersion(4)

    #localmacro.CurrentList
        levelSearch,
        positiveWIP,
        negativeWIP,
        m_bshowThousand,
        fromDate,
        toDate,
        m_bShowClient,
        m_bShowContract,
        m_bShowProject
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
        Object dialog(Object _dialog)
    {
        DialogRunbase   dialog = super(_dialog);

        if (! positiveWIP && !negativeWIP)
        {
            positiveWIP = true;
            negativeWIP = true;
        }

        dialogShowClient        = dialog.addFieldValue(enumstr(boolean), m_bShowClient, "@PSA685","@PSA686");
        dialogShowContract      = dialog.addFieldValue(enumstr(boolean), m_bShowContract, "@PSA687","@PSA688");
        dialogShowProject       = dialog.addFieldValue(enumstr(boolean), m_bShowProject, "@PSA689","@PSA690");

        dialogShowThousand      = dialog.addFieldValue(enumstr(boolean), m_bshowThousand, "@SYS24460", "@SYS12637");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
        boolean getFromDialog()
    {
        m_bshowThousand = dialogShowThousand.value();
        fromDate        = dialogFromDate.value();
        toDate          = dialogToDate.value();

        m_bShowClient   = dialogShowClient.value();
        m_bShowContract = dialogShowContract.value();
        m_bShowProject  = dialogShowProject.value();

        // ----------------------
        levelSearch     = 1;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion, #CurrentList] + [super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNegativeWIP</Name>
				<Source><![CDATA[
        public boolean parmNegativeWIP(boolean _negativeWIP = negativeWIP)
    {
        negativeWIP = _negativeWIP;

        return negativeWIP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPositiveWIP</Name>
				<Source><![CDATA[
        public boolean parmPositiveWIP(boolean _positiveWIP = positiveWIP)
    {
        positiveWIP = _positiveWIP;

        return positiveWIP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowClient</Name>
				<Source><![CDATA[
        public boolean parmShowClient(boolean _bShowClient = m_bShowClient)
    {
        m_bShowClient = _bShowClient;

        return m_bShowClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowContract</Name>
				<Source><![CDATA[
        public boolean parmShowContract(boolean _bShowContract = m_bShowContract)
    {
        m_bShowContract = _bShowContract;

        return m_bShowContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowProject</Name>
				<Source><![CDATA[
        public boolean parmShowProject(boolean _bShowProject = m_bShowProject)
    {
        m_bShowProject = _bShowProject;

        return m_bShowProject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowThousand</Name>
				<Source><![CDATA[
        public boolean parmShowThousand(Level _showThousand = m_bshowThousand)
    {
        m_bshowThousand = _showThousand;

        return m_bshowThousand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container _packedClass)
    {
        container       base;
        boolean         ret;
        Integer         version    = conPeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList, base] = _packedClass;
                ret = super(base);
                break;
            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static PSAProjReport_ListProjAging construct()
    {
        PSAProjReport_ListProjAging   projReport_ListProjAging;

        projReport_ListProjAging = new PSAProjReport_ListProjAging();

        return projReport_ListProjAging;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        private static ClassDescription description()
    {
        return "@PSA654";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>