<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashRegisterWebRequestLogHelper_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class <c>CashRegisterWebRequestLogHelper_W</c> handles the requests and receipts logging for the Cash register.
/// </summary>
public class CashRegisterWebRequestLogHelper_W
{
    CashRegisterWebRequestLog_W log;

    Voucher     voucher;
    TransDate   transDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>logImported</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs the event of successful import.
    /// </summary>
    public void logImported()
    {
        CashRegisterWebRequestLog_W finalLog = CashRegisterWebRequestLog_W::findRecId(log.RecId, true);

        finalLog.Status = CashRegisterWebRequestStatus_W::Imported;
        finalLog.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the log entry.
    /// </summary>
    private void logInit()
    {
        log.clear();
        log.Voucher = voucher;
        log.TransDate = transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs the event of the request being sent.
    /// </summary>
    /// <param name="_requestXML">
    /// The request XML.
    /// </param>
    /// <remarks>
    /// Uses a separate database connection.
    /// </remarks>
    public void logRequest(XML _requestXML)
    {
        ttsbegin;

        this.logInit();
        log.XMLRequest = _requestXML;
        log.Status = CashRegisterWebRequestStatus_W::Sent;
        log.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Logs the event of the response being received.
    /// </summary>
    /// <param name="_responseXML">
    /// The response XML.
    /// </param>
    /// <remarks>
    /// Uses a separate database connection.
    /// </remarks>
    public void logResponse(XML _responseXML)
    {
        ttsbegin;

        if (!log.RecId || log.XMLResponse)
        {
            this.logInit();
        }

        log.XMLResponse = _responseXML;
        log.Status = CashRegisterWebRequestStatus_W::Received;
        log.write();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>transDate</c> parameter.
    /// </summary>
    /// <param name="_transDate">
    /// The new value of the <c>transDate</c> parameter.
    /// </param>
    /// <returns>
    /// The current object.
    /// </returns>
    public CashRegisterWebRequestLogHelper_W transDate(TransDate _transDate)
    {
        transDate = _transDate;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>voucher</c> parameter.
    /// </summary>
    /// <param name="_voucher">
    /// The new value of the <c>voucher</c> parameter.
    /// </param>
    /// <returns>
    /// The current object.
    /// </returns>
    public CashRegisterWebRequestLogHelper_W voucher(Voucher _voucher)
    {
        voucher = _voucher;
        return this;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>