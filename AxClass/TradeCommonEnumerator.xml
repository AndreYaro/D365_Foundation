<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeCommonEnumerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeCommonEnumerator</c> class allows a user to traverse through the elements in a
/// <c>TradeCommonIEnumerable</c> object.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
public class TradeCommonEnumerator  implements TradeCommonIEnumerator
{
    TradeCommonIEnumerable  tradeCommonIEnumerable;
    boolean                 atBeginning;
    boolean                 atEnd;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    public common current()
    {
        if (atBeginning)
            throw error("@SYS125456");

        return tradeCommonIEnumerable.current();
    }

]]></Source>
			</Method>
			<Method>
				<Name>definitionString</Name>
				<Source><![CDATA[
    public str definitionString()
    {
        return new List(Types::Record).getEnumerator().definitionString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the enumerator represents a valid <c>Common</c> buffer.
    /// </summary>
    /// <returns>
    /// true if the current position in the <c>TradeCommonIEnumerable</c> object holds a valid element;
    /// otherwise, false.
    /// </returns>
    /// <remarks>
    /// <c>TradeCommonIEnumerable</c> enumerators start before the first buffer in the
    /// <c>TradeCommonIEnumerable</c> object.You must call the <c>TradeCommonEnumerator.moveNext</c> method
    /// to make it point to the first element in the list.
    /// </remarks>
    public boolean moveNext()
    {
        boolean moveNext;

        if (atEnd)
        {
            throw error("@SYS125456");
        }

        if (atBeginning)
        {
            tradeCommonIEnumerable.initiateEnumeration();
            atBeginning = false;
        }

        moveNext = tradeCommonIEnumerable.moveNext();

        if (!moveNext)
        {
            atEnd = true;
        }

        return moveNext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        atBeginning = true;
        atEnd = false;
        this.reset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTradeCommonIEnumerable</Name>
				<Source><![CDATA[
    protected TradeCommonIEnumerable parmTradeCommonIEnumerable(TradeCommonIEnumerable _tradeCommonIEnumerable = tradeCommonIEnumerable)
    {
        tradeCommonIEnumerable = _tradeCommonIEnumerable;

        return tradeCommonIEnumerable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the enumerator to the start of the <c>TradeCommonIEnumerable</c> object.
    /// </summary>
    /// <remarks>
    /// The reset method moves the enumerator to the start of the <c>TradeCommonIEnumerable</c> object,
    /// before the first element in the <c>TradeCommonIEnumerable</c> object.You must call the
    /// <c>TradeCommonEnumerator.moveNext</c> method to make it point to the first element in the
    /// <c>TradeCommonIEnumerable</c> object.
    /// </remarks>
    public void reset()
    {
        if (!atBeginning && !tradeCommonIEnumerable.canBeReset())
        {
            throw error("@SYS344540");
        }

        atBeginning = true;
        atEnd = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    public str toString()
    {
        str     toString;

        if (atBeginning)
        {
            toString = "@SYS344541";
        }
        else
        {
            toString = tableId2name(tableNum(Common));

            if (atEnd)
            {
                toString += "@SYS344542";
            }
        }
        return toString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromTradeCommonIEnumerable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>TradeCommonEnumerator</c> class.
    /// </summary>
    /// <param name="_tradeCommonIEnumerable">
    /// A <c>TradeCommonIEnumerable</c> object that is enumerated.
    /// </param>
    /// <returns>
    /// An instance of the <c>TradeCommonEnumerator</c> class.
    /// </returns>
    static public TradeCommonEnumerator newFromTradeCommonIEnumerable(TradeCommonIEnumerable _tradeCommonIEnumerable)
    {
        TradeCommonEnumerator   tradeCommonEnumerator;

        tradeCommonEnumerator = new TradeCommonEnumerator();
        tradeCommonEnumerator.parmTradeCommonIEnumerable(_tradeCommonIEnumerable);
        return tradeCommonEnumerator;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>