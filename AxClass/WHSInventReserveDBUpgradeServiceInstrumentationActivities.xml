<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventReserveDBUpgradeServiceInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSInventReserveDBUpgradeServiceInstrumentationActivities
{
    private InventInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(InventInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static WHSInventReserveDBUpgradeServiceInstrumentationActivities newFromLogger(InventInstrumentationLogger _logger)
    {
        return new WHSInventReserveDBUpgradeServiceInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logMeasure</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext logMeasure(str _methodName)
    {
        SysInstrumentationActivity activity = logger.activity(strFmt('Run %1', _methodName));
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logDateUpgradeMarkedStatus</Name>
				<Source><![CDATA[
    internal void logDateUpgradeMarkedStatus(SysInstrumentationActivityContext _activityContext, boolean _markCompleted)
    {
        if (_markCompleted)
        {
            _activityContext.addCustomProperty('Record WHSInventReserveInventDimEnable mark completed', '1');
        }
        else
        {
            _activityContext.addCustomProperty('Need to disable flight WHSInventReserveSkipDBTriggerCreationFlight', '1');
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>