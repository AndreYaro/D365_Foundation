<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchTableInterface</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base class providing an interface to common functionality applicable for tables mapped to the <c>SalesPurchTable</c> table map.
/// </summary>
abstract class SalesPurchTableInterface
{
    private SalesPurchTable salesPurchTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeSalesPurchTable</Name>
				<Source><![CDATA[
    private void initializeSalesPurchTable(SalesPurchTable _salesPurchTable)
    {
        salesPurchTable = _salesPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPurchTable</Name>
				<Source><![CDATA[
    final public SalesPurchTable parmSalesPurchTable()
    {
        return salesPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>SalesPurchTableInstance</c> object based on the provided <c>SalesPurchTable</c> record.
    /// </summary>
    /// <param name = "_salesPurchTable">
    /// A <c>SalesPurchTable</c> record to create a <c>SalesPurchTableInstance</c> object for.
    /// </param>
    /// <returns>
    /// The instantiated <c>SalesPurchTableInterface</c> object.
    /// </returns>
    public static SalesPurchTableInterface createInstance(SalesPurchTable _salesPurchTable)
    {
        SalesPurchTableInterfaceFactoryAttribute attr = new SalesPurchTableInterfaceFactoryAttribute(tableId2Name(_salesPurchTable.tableId));
        
        SalesPurchTableInterface instance = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(SalesPurchTableInterface), attr) as SalesPurchTableInterface;

        instance.initializeSalesPurchTable(_salesPurchTable);

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderId</Name>
				<Source><![CDATA[
    abstract public Num parmOrderId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    abstract public CurrencyCode parmCurrencyCode()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxModuleType</Name>
				<Source><![CDATA[
    abstract public TaxModuleType parmTaxModuleType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSiteId</Name>
				<Source><![CDATA[
    public InventSiteId parmInventSiteId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public InventLocationId parmInventLocationId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCashDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the mapped record has a specific cash discount percentage field.
    /// </summary>
    /// <returns>
    /// true if a cash discount percentage field exists; otherwise, false.
    /// </returns>
    public boolean hasCashDiscPercent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public CashDiscCode parmCashDisc()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmDiscPercent()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public InclTax parmInclTax()
    {
        return NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public CustVendAC parmInvoiceAccount()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public CustVendAC parmOrderAccount()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendGroup</Name>
				<Source><![CDATA[
    public SysGroup parmCustVendGroup()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    public LanguageId parmLanguageId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId parmNumberSequenceGroup()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public PaymTermId parmPayment()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentSched</Name>
				<Source><![CDATA[
    public PaymSchedId parmPaymentSched()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    internal TransDate parmDeliveryDate()
    {
        return Global::dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymDayId</Name>
				<Source><![CDATA[
    internal PaymDayId parmPaymDayId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    internal TransDate parmFixedDueDate()
    {
        return Global::dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>summaryLedgerDimension</Name>
				<Source><![CDATA[
    internal LedgerDimensionDefaultAccount summaryLedgerDimension()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingLedgerDimension</Name>
				<Source><![CDATA[
    internal LedgerDimensionDefaultAccount clearingLedgerDimension()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearingPeriod</Name>
				<Source><![CDATA[
    internal ClearingPeriod clearingPeriod()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentSched</Name>
				<Source><![CDATA[
    internal void createPaymentSched()
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyPaymentSched</Name>
				<Source><![CDATA[
    internal void copyPaymentSched(CustVendInvoiceJour _custVendInvoiceJour)
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public PaymMode parmPaymMode()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public PaymSpec parmPaymSpec()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRenumberLineNumbers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the line number field can be edited.
    /// </summary>
    /// <returns>
    /// true if the line number field can be edited; otherwise, false.
    /// </returns>
    public boolean canRenumberLineNumbers()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>factureJourSortedList_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves all factures created for the current order.
    /// </summary>
    /// <returns>
    /// A <c>RecordSortedList</c> object containing all factures.
    /// </returns>
    public RecordSortedList factureJourSortedList_RU()
    {
        RecordSortedList        list = new RecordSortedList(tableNum(FactureJour_RU));

        list.sortOrder(fieldNum(FactureJour_RU, FactureDate),
                       fieldNum(FactureJour_RU, FactureExternalId),
                       fieldNum(FactureJour_RU, ModifiedDateTime),
                       fieldNum(FactureJour_RU, RecId));

        this.populateFactureJourSortedList_RU(list);

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFactureJourSortedList_RU</Name>
				<Source><![CDATA[
    protected void populateFactureJourSortedList_RU(RecordSortedList _list)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementHeaderExt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the associated <c>AgreementHeaderExt_RU</c> record id.
    /// </summary>
    /// <returns>
    /// The <c>AgreementHeaderExt_RU</c> record Id.
    /// </returns>
    public AgreementHeaderExtRecId_RU getAgreementHeaderExt()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastConsDate_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the latest consolidation date for this order.
    /// </summary>
    /// <returns>
    /// The consolidation date.
    /// </returns>
    public CustVendConsDate_JP getLastConsDate_JP()
    {
        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastConsId_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the latest consolidation invoice id for this order.
    /// </summary>
    /// <returns>
    /// The consolidation invoice Id.
    /// </returns>
    public CustVendConsId_JP getLastConsId_JP()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceAgreementDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the price agreement date from the record.
    /// </summary>
    /// <returns>
    /// A price agreement date.
    /// </returns>
    public PriceAgreementDate_RU getPriceAgreementDate()
    {
        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailSalesPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the retail map based on the tabel id.
    /// </summary>
    /// <returns>
    /// The <c>RetailSalesPurchTableMap</c> object containing the retail specific fields.
    /// </returns>
    public RetailSalesPurchTableMap getRetailSalesPurchTable()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDate_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the date for price determining in price agreement.
    /// </summary>
    /// <returns>
    /// The date for price determining in price agreement.
    /// </returns>
    public PriceDate priceDate_RU()
    {
        #ISOCountryRegionCodes

        PriceAgreementDate_RU priceAgreementDate = dateNull();
        
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            priceAgreementDate = this.getPriceAgreementDate();
        }

        return priceAgreementDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateExcludeTaxFromInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates an invoice to ensure that tax is not excluded for the tax code
    /// if the tax is included for the invoice.
    /// </summary>
    /// <returns>
    /// true if the invoice is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// This functionality is only valid in Lithuanian and Hungarian country context.
    /// </remarks>
    public boolean validateExcludeTaxFromInvoice()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>