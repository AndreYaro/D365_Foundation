<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressCountryRegionTranslationAppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class of the <c>LogisticsAddressCountryRegionTranslation</c> table.
/// </summary>
[ExtensionOf(tablestr(LogisticsAddressCountryRegionTranslation))]
final class  LogisticsAddressCountryRegionTranslationAppSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>replaceAddressTokenByFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Replace country region token in formatted address with the translated name based on the current user's language.
    /// </summary>
    /// <param name = "currTable">A buffer with both address field and country region id field</param>
    /// <param name = "_addressFieldName"The address field name></param>
    /// <param name = "_countryRegionIdFieldName">The country region id field name</param>
    public static void replaceAddressTokenByFieldName(Common currTable, str _addressFieldName, str _countryRegionIdFieldName)
    {
        if (currTable.isFieldDataRetrieved(_addressFieldName))
        {
            str addressStr = currTable.(fieldName2id(currTable.TableId, _addressFieldName));

            if (addressStr && strContains(addressStr, '%1'))
            {
                str countryRegionStr;

                if (!currTable.isFieldDataRetrieved(_countryRegionIdFieldName))
                {
                    // The country region data may not be retrieved based on the data access settings of the caller.
                    // Reread the caller record to get the country region data.
                    Common currTableRetrieved = DictTable::createRecord(tableId2Name(currTable.TableId));

                    // Skip post load to avoid recursion and redundant processing
                    // as the primary caller of this method is the table's postLoad method.
                    currTableRetrieved.skipPostLoad(true);

                    select * from currTableRetrieved
                        where currTableRetrieved.RecId == currTable.RecId;

                    countryRegionStr = currTableRetrieved.(fieldName2id(currTableRetrieved.TableId, _countryRegionIdFieldName));
                }
                else
                {
                    countryRegionStr = currTable.(fieldName2id(currTable.TableId, _countryRegionIdFieldName));
                }

                if (countryRegionStr)
                {
                    UserInfo userInfo;

                    select Language from userInfo where userInfo.Id == curUserId();

                    // Get the short name for the country/region in the system language set for Current User
                    LogisticsAddressCountryRegionTranslation logisticsAddressCountryRegionTranslation = LogisticsAddressCountryRegionTranslation::find(countryRegionStr, userInfo.Language);

                    // Replace token with short name of country translated in system language
                    currTable.(fieldName2id(currTable.TableId, _addressFieldName)) = strFmt(addressStr, logisticsAddressCountryRegionTranslation.ShortName);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>