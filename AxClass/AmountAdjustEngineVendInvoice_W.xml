<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AmountAdjustEngineVendInvoice_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class AmountAdjustEngineVendInvoice_W extends AmountAdjustEngine_W
{
    VendInvoiceJour vendInvoiceJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcLine_MarkupTrans</Name>
				<Source><![CDATA[
    protected container calcLine_MarkupTrans(MarkupTrans _line)
    {
        AmountMST amountCalculated, amountLocked;

        if (_line.CurrencyCode == CompanyInfoHelper::standardCurrency())
        {
            amountLocked     = _line.CalculatedAmount;
        }
        else
        {
            amountCalculated = CurrencyExchangeHelper::mstAmount(_line.CalculatedAmount, _line.CurrencyCode, vendInvoiceJour.InvoiceDate, Currency::noYes2UnknownNoYes(vendInvoiceJour.Triangulation), _line.CurrencyCode == vendInvoiceJour.CurrencyCode ? vendInvoiceJour.ExchRate : 0, _line.CurrencyCode == vendInvoiceJour.CurrencyCode ? vendInvoiceJour.ExchRateSecondary : 0);
        }

        return [ amountCalculated, amountLocked ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLine_VendInvoiceTrans</Name>
				<Source><![CDATA[
    protected container calcLine_VendInvoiceTrans(VendInvoiceTrans _line)
    {
        AmountMST amountCalculated, amountLocked;

        if (vendInvoiceJour.CurrencyCode == CompanyInfoHelper::standardCurrency())
        {
            amountLocked     = _line.LineAmount;
        }
        else
        {
            amountCalculated = vendInvoiceJour.amountMST(_line.LineAmount);
        }

        return [ amountCalculated, amountLocked ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceJour</Name>
				<Source><![CDATA[
    protected void parmVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
    {
        ;
        vendInvoiceJour = _vendInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustInvoiceJour</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public static void adjustInvoiceJour(VendInvoiceJour _invoiceJour)
    {
        AmountAdjustEngineVendInvoice_W adjustEngine;
        MarkupTrans                     markupTrans;
        VendInvoiceTrans                invoiceTrans;

        if (! SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) &&
            ! isConfigurationkeyEnabled(configurationkeynum(LogisticsBasic)))
            return;

        adjustEngine = new AmountAdjustEngineVendInvoice_W();
        adjustEngine.parmVendInvoiceJour(_invoiceJour);
        adjustEngine.parmTotalMST(_invoiceJour.amountMST(_invoiceJour.InvoiceAmount)   -
                                  _invoiceJour.amountMST(_invoiceJour.SumTax)          -
                                  _invoiceJour.amountMST(_invoiceJour.InvoiceRoundOff) -
                                  _invoiceJour.amountMST(_invoiceJour.EndDisc));

        ttsbegin;

        while select forupdate markupTrans
            where markupTrans.TransTableId == _invoiceJour.TableId &&
                  markupTrans.TransRecId   == _invoiceJour.RecId
        {
            adjustEngine.addLine(markupTrans);
        }

        while select forupdate invoiceTrans
            where invoiceTrans.PurchID             == _invoiceJour.PurchId           &&
                  invoiceTrans.InvoiceId           == _invoiceJour.InvoiceId         &&
                  invoiceTrans.InvoiceDate         == _invoiceJour.InvoiceDate       &&
                  invoiceTrans.InternalInvoiceId   == _invoiceJour.InternalInvoiceId &&
                  invoiceTrans.NumberSequenceGroup == _invoiceJour.NumberSequenceGroup
        {
            adjustEngine.addLine(invoiceTrans);

            while select forupdate markupTrans
                where markupTrans.TransTableId == invoiceTrans.TableId &&
                      markupTrans.TransRecId   == invoiceTrans.RecId
            {
                adjustEngine.addLine(markupTrans);
            }
        }

        adjustEngine.run();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
