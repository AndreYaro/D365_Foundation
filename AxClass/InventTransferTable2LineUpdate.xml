<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferTable2LineUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferTable2LineUpdate
{
    InventTransferTable         inventTransferTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(InventTransferOrders2LineUpdatePrompt inventTransferTable2LineUpdatePrompt)
    {
        this.initFromInventTransferTable2LineUpdatePrompt(inventTransferTable2LineUpdatePrompt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferTable2LineUpdatePrompt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize from the <c>InventTransferOrders2LineUpdatePrompt</c> class.
    /// </summary>
    /// <param name="_inventTransferTable2LineUpdatePrompt">Instance to the <c>InventTransferOrders2LineUpdatePrompt</c> class.</param>
    protected void initFromInventTransferTable2LineUpdatePrompt(InventTransferOrders2LineUpdatePrompt _inventTransferTable2LineUpdatePrompt)
    {
        inventTransferTable = _inventTransferTable2LineUpdatePrompt.inventTransferTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUpdateInventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a <c>InventTransferLine</c> record can be updated.
    /// </summary>
    /// <param name="_inventTransferLine">
    /// <c>InventTransferLine</c> record to check
    /// </param>
    /// <returns>true if the QtyRemainShip is not 0, QtyShipped and QtyReceived of <c>InventTransferLine</c> are 0; otherwise, false.</returns>
    protected boolean canUpdateInventTransferLine(InventTransferLine _inventTransferLine)
    {
        return _inventTransferLine.QtyRemainShip != 0
            && _inventTransferLine.QtyShipped == 0
            && _inventTransferLine.QtyReceived == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        boolean errorFound = false;

        ttsbegin;
        InventTransferLine inventTransferLine;

        while select forupdate inventTransferLine
            where inventTransferLine.transferId == inventTransferTable.transferId
        {
            if (this.canUpdateInventTransferLine(inventTransferLine))
            {
                inventTransferLine.ShipDate = inventTransferTable.ShipDate;
                inventTransferLine.ReceiveDate = inventTransferTable.ReceiveDate;
                inventTransferLine.DeliveryDateControlType = SalesDeliveryDateControlType::None;
                inventTransferLine.update();
            }
            else
            {
                errorFound = true;
                info(strFmt("@SCM:TransferLineHasShippedQty",
                    inventTransferLine.ItemId,
                    inventTransferLine.LineNum,
                    inventTransferLine.QtyShipped,
                    inventTransferLine.QtyReceived));
            }
        }
        ttscommit;

        if (errorFound)
        {
            info("@SCM:CannotChangeShipReceiptDate");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>