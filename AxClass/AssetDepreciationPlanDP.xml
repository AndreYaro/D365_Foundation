<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDepreciationPlanDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetDepreciationPlanDP</c> class is the data provider for the <c>AssetDepreciationPlan</c> SSRS report.
/// </summary>
[SRSReportQueryAttribute(queryStr(AssetDepreciationPlan))]
public class AssetDepreciationPlanDP extends SrsReportDataProviderPreProcessTempDB
{
    AssetDepreciationPlanTmp assetDepreciationPlanTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetDepreciationPlanTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the dataset of the report data provider.
    /// </summary>
    /// <returns>
    /// The dataset of the report data provider.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(AssetDepreciationPlanTmp)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AssetDepreciationPlanTmp getAssetDepreciationPlanTmp()
    {
        select assetDepreciationPlanTmp;
        return assetDepreciationPlanTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        AssetBook assetBook;
        AssetTable assetTable;
        AssetDepreciationProfile primaryAssetDeprProfile;
        AssetDepreciationProfile alternateAssetDeprProfile;
        TmpDateSum tmpDateSum;
        Query query;
        QueryBuildDataSource ds;
        QueryBuildRange range;
        QueryRun queryRun;
        boolean haveOne;
        boolean inPoland;

        #IsoCountryRegionCodes

        inPoland = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);

        if (inPoland)
        {
            assetDepreciationPlanTmp.SortingId3Label = "@GLS110123";
        }
        else
        {
            assetDepreciationPlanTmp.SortingId3Label = "@SYS54055";
        }

        query = this.parmQuery();

        ds = query.dataSourceTable(tableNum(AssetBook));
        range = ds.addRange(fieldNum(AssetBook, Status));
        range.value(SysQuery::valueNot(enum2str(AssetStatus::Sold)));

        queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            assetTable = queryRun.get(tableNum(AssetTable)) as AssetTable;
            assetBook = queryRun.get(tableNum(AssetBook)) as AssetBook;
            primaryAssetDeprProfile = queryRun.get(tableNum(AssetDepreciationProfile), 1) as AssetDepreciationProfile;
            alternateAssetDeprProfile = queryRun.get(tableNum(AssetDepreciationProfile), 2) as AssetDepreciationProfile;

            assetDepreciationPlanTmp.initFromAssetTable(assetTable);
            assetDepreciationPlanTmp.initFromAssetBook(assetBook, inPoland);
            assetDepreciationPlanTmp.initFromAssetDepreciationProfiles(primaryAssetDeprProfile, alternateAssetDeprProfile.Profile);

            haveOne = false;
            AssetInitDepreciationProfile profile = AssetInitDepreciationProfile::newFromBookDate(assetBook);
            profile.parmCalculateOnlyDepreciation(true);
            tmpDateSum.setTmpData(profile.calcDepreciationProfile());

            while select tmpDateSum
            {
                assetDepreciationPlanTmp.initFromTmpDateSum(assetBook, tmpDateSum);
                assetDepreciationPlanTmp.insert();

                haveOne = true;
            }

            if (!haveOne)
            {
                // create one record with empty fields for TmpDateSum because the
                // AssetTable and AssetBook should be on the report
                assetDepreciationPlanTmp.initFromTmpDateSum(null, null);
                assetDepreciationPlanTmp.insert();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>