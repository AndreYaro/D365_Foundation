<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqInternalOrgManager_OperatingUnit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchReqInternalOrgManager_OperatingUnit extends PurchReqInternalOrgManager
{
    PurchReqTmpAuthorizationOperatingUnit     purchReqTmpAuthorizationOperatingUnit;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteStaleRecords</Name>
				<Source><![CDATA[
        protected void deleteStaleRecords(HcmWorkerRecId _hcmWorkerRecId)
    {
        delete_from purchReqTmpAuthorizationOperatingUnit where
            purchReqTmpAuthorizationOperatingUnit.Requisitioner == _hcmWorkerRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record of the purchase requisition temporary authorization operating unit.
    /// </summary>
    /// <returns>
    /// The <c>PurchReqTmpAuthorizationOperatingUnit</c> record.
    /// </returns>
    public Common getData()
    {
        return purchReqTmpAuthorizationOperatingUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRequisitioner</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>PurchReqTmpAuthorizationOperatingUnit</c> record for the specified
    /// <c>HcmWorkerRecId</c> data type.
    /// </summary>
    /// <param name="_requisitioner">
    /// The <c>HcmWorkerRecId</c> data type of the requisitioner.
    /// </param>
    public void insertRequisitioner(HcmWorkerRecId _requisitioner)
    {
        Set                         operatingUnitSet;
        SetEnumerator               se;

        if (!this.isRequisitionerInMemory(_requisitioner))
        {
            operatingUnitSet = Set::create(PurchReqInternalOrgManager_OperatingUnit::createRequisitionerList(_requisitioner));

            se = operatingUnitSet.getEnumerator();

            while (se.moveNext())
            {
                purchReqTmpAuthorizationOperatingUnit.Requisitioner             = _requisitioner;
                purchReqTmpAuthorizationOperatingUnit.ReceivingOperatingUnit    = se.current();
                purchReqTmpAuthorizationOperatingUnit.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table id of the <c>PurchReqTmpAuthorizationOperatingUnit</c> table.
    /// </summary>
    /// <returns>
    /// The table id of the <c>PurchReqTmpAuthorizationOperatingUnit</c> table.
    /// </returns>
    public tableId tableId()
    {
        return tableNum(PurchReqTmpAuthorizationOperatingUnit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a requisitioner and a receiving operating unit are valid.
    /// </summary>
    /// <param name="_requisitioner">
    /// The requisitioner.
    /// </param>
    /// <param name="_receivingOperatingUnit">
    /// The receiving operating unit.
    /// </param>
    /// <param name="_showError">
    /// A <c>boolean</c> indicating whether or not an error message should be shown.
    /// </param>
    /// <returns>
    /// true if the requisitioner and receiving operating unit are valid; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The requisitioner is not valid.
    /// </exception>
    public boolean validate(HcmWorkerRecId _requisitioner, RefRecId _receivingOperatingUnit, boolean _showError = true)
    {
        if (!this.validateRequisitioner(_requisitioner))
        {
            throw Exception::Error;
        }

        this.insertRequisitioner(_requisitioner);

        select firstonly RecId from purchReqTmpAuthorizationOperatingUnit where
            purchReqTmpAuthorizationOperatingUnit.Requisitioner          == _requisitioner &&
            purchReqTmpAuthorizationOperatingUnit.ReceivingOperatingUnit == _receivingOperatingUnit;

        if (!purchReqTmpAuthorizationOperatingUnit)
        {
            if (_showError)
            {
                error("@SYS311074");
            }

            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRequisitionerList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a requisitioner list for the specified <c>HcmWorkerRecId</c> data type.
    /// </summary>
    /// <param name="_requisitioner">
    /// The <c>HcmWorkerRecId</c> data type on which to filter the
    /// <c>PurchReqAuthorizationOperatingUnit</c> table.
    /// </param>
    /// <returns>
    /// The list of receiving operating units for the specified requisitioner.
    /// </returns>
    public static container createRequisitionerList(HcmWorkerRecId _requisitioner)
    {
        container                             departmentRecIds;
        int                                   i;
        PurchReqAuthorizationOperatingUnit    purchReqAuthorizationOperatingUnit;
        Set                                   operatingUnitSet                = new Set(Types::Int64);

        departmentRecIds = HcmWorkerHelper::getDepartmentRecIds(_requisitioner);
        for (i=1; i<=conLen(departmentRecIds); i++)
        {
            operatingUnitSet.add(conPeek(departmentRecIds, i));
        }

        while select ReceivingOperatingUnit from purchReqAuthorizationOperatingUnit
                where purchReqAuthorizationOperatingUnit.Requisitioner == _requisitioner
        {
            operatingUnitSet.add(purchReqAuthorizationOperatingUnit.ReceivingOperatingUnit);
        }

        return operatingUnitSet.pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>