<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanOverlappingValidatorRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanOverlappingValidatorRequest</c> class is used to capture and validate the information
/// that is required to create <c>BudgetPlanOverlappingColumnValidator</c> values.
/// </summary>
public class BudgetPlanOverlappingValidatorRequest
{
    BudgetPlanRecordModificationType    columnRuleModificationType;
    BudgetPlanColumnRule                columnRuleToCheck;
    BudgetPlanColumn                    currentBudgetPlanColumn;
    boolean                             showColumnModificationWarning;
    boolean                             showLayoutElementModificationWarning;
    boolean                             showLayoutElementOverlapWarning;
    BudgetPlanLayoutRecId               budgetPlanLayoutRecId;
    BudgetCycleRecId                    currentBudgetCycleRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        // Force the use of static constructor
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BudgetPlanOverlappingValidatorRequest construct()
    {
        return new BudgetPlanOverlappingValidatorRequest();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrentBudgetPlanColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetPlanColumn</c> value.
    /// </summary>
    /// <param name = "_currentBudgetPlanColumn"> The <c>BudgetPlanColumn</c> to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setCurrentBudgetPlanColumn(BudgetPlanColumn _currentBudgetPlanColumn)
    {
        this.currentBudgetPlanColumn = _currentBudgetPlanColumn;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentBudgetPlanColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>BudgetPlanColumn</c> value.
    /// </summary>
    /// <returns> The <c>BudgetPlanColumn</c> value. </returns>
    public BudgetPlanColumn getCurrentBudgetPlanColumn()
    {
        return this.currentBudgetPlanColumn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBudgetPlanLayoutRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetPlanLayoutRecId</c> value.
    /// </summary>
    /// <param name = "_budgetPlanLayoutRecId"> The <c>BudgetPlanLayoutRecId</c> to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setBudgetPlanLayoutRecId(BudgetPlanLayoutRecId _budgetPlanLayoutRecId)
    {
        this.budgetPlanLayoutRecId = _budgetPlanLayoutRecId;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetPlanLayoutRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetPlanLayoutRecId</c> value.
    /// </summary>
    /// <returns> The <c>BudgetPlanLayoutRecId</c> value. </returns>
    public BudgetPlanLayoutRecId getBudgetPlanLayoutRecId()
    {
        return this.budgetPlanLayoutRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setColumnRuleToCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetPlanColumnRule</c> value.
    /// </summary>
    /// <param name = "_columnRuleToCheck"> The <c>BudgetPlanColumnRule</c> to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setColumnRuleToCheck(BudgetPlanColumnRule _columnRuleToCheck)
    {
        this.columnRuleToCheck = _columnRuleToCheck;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getColumnRuleToCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>BudgetPlanColumnRule</c> value.
    /// </summary>
    /// <returns> The <c>BudgetPlanColumnRule</c> value. </returns>
    public BudgetPlanColumnRule getColumnRuleToCheck()
    {
        return this.columnRuleToCheck;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setColumnRuleModificationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetPlanRecordModificationType</c> value.
    /// </summary>
    /// <param name = "_columnRuleModificationType"> The <c>BudgetPlanRecordModificationType</c> to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setColumnRuleModificationType(BudgetPlanRecordModificationType _columnRuleModificationType)
    {
        this.columnRuleModificationType = _columnRuleModificationType;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getColumnRuleModificationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>BudgetPlanRecordModificationType</c> value.
    /// </summary>
    /// <returns> The <c>BudgetPlanRecordModificationType</c> value. </returns>
    public BudgetPlanRecordModificationType getColumnRuleModificationType()
    {
        return this.columnRuleModificationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBudgetCycleRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetCycleRecId</c> value.
    /// </summary>
    /// <param name = "_currentBudgetCycleRecId"> The <c>BudgetPlanColumn</c> to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingLayoutValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setBudgetCycleRecId(BudgetCycleRecId _currentBudgetCycleRecId)
    {
        this.currentBudgetCycleRecId = _currentBudgetCycleRecId;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetcycleRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>BudgetCycleRecId</c> value.
    /// </summary>
    /// <returns> The <c>BudgetCycleRecId</c> value. </returns>
    public BudgetCycleRecId getBudgetcycleRecId()
    {
        return this.currentBudgetCycleRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShowLayoutElementOverlapWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>boolean</c> value of the flag to show the layout element overlap warning.
    /// </summary>
    /// <param name = "_showLayoutElementOverlapWarning"> The <c>boolean</c> value to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingLayoutValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setShowLayoutElementOverlapWarning(boolean _showLayoutElementOverlapWarning)
    {
        this.showLayoutElementOverlapWarning = _showLayoutElementOverlapWarning;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowLayoutElementOverlapWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>boolean</c> value of the flag to show the layout element overlap warning.
    /// </summary>
    /// <returns> The <c>boolean</c> value. </returns>
    public boolean getShowLayoutElementOverlapWarning()
    {
        return this.showLayoutElementOverlapWarning;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShowColumnModificationWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>boolean</c> value of the flag to show the column modification warning.
    /// </summary>
    /// <param name = "_showColumnModificationWarning"> The <c>boolean</c> value to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setShowColumnModificationWarning(boolean _showColumnModificationWarning)
    {
        this.showColumnModificationWarning = _showColumnModificationWarning;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowColumnModificationWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>boolean</c> value of the flag to show the column modification warning.
    /// </summary>
    /// <returns> The <c>boolean</c> value. </returns>
    public boolean getShowColumnModificationWarning()
    {
        return this.showColumnModificationWarning;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShowLayoutElementModificationWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>boolean</c> value of the flag to show the layout element modification warning.
    /// </summary>
    /// <param name = "_showLayoutElementModificationWarning"> The <c>boolean</c> value to be set. </param>
    /// <returns> The <c>BudgetPlanOverlappingValidatorRequest</c> with the request value set. </returns>
    public BudgetPlanOverlappingValidatorRequest setShowLayoutElementModificationWarning(boolean _showLayoutElementModificationWarning)
    {
        this.showLayoutElementModificationWarning = _showLayoutElementModificationWarning;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowLayoutElementModificationWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>boolean</c> value of the flag to show the column modification warning.
    /// </summary>
    /// <returns> The <c>boolean</c> value. </returns>
    public boolean getShowLayoutElementModificationWarning()
    {
        return this.showLayoutElementModificationWarning;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the overlapping column validator request is valid.
    /// </summary>
    /// <returns> true if the overlapping column validator request is valid; otherwise, false. </returns>
    public boolean validate()
    {
        boolean isValid = currentBudgetPlanColumn.RecId != 0;

        if (!isValid)
        {
            throw error(strFmt("@Budget:BudgetPlanning_Config_Validation_ValidationRequestMissingParameter", tableStr(BudgetPlanColumn)));
        }

        if (isValid && budgetPlanLayoutRecId == 0)
        {
            isValid = false;
            throw error(strFmt("@Budget:BudgetPlanning_Config_Validation_ValidationRequestMissingParameter", extendedTypeId2name(extendedTypeNum(BudgetPlanLayoutRecId))));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>