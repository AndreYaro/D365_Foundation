<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustShippedNotInvoicedDP_NA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustShippedNotInvoicedDP_NA</c> class provides data for the <c>CustShippedNotInvoiced_NA</c>
///    SQL Server Reporting Services (SSRS) report.
/// </summary>
/// <remarks>
///    This is the Report Data Provider class for the <c>CustShippedNotInvoiced_NA</c> SSRS report.
/// </remarks>
[
    SRSReportQueryAttribute(querystr(CustShippedNotInvoiced_NA)),
        SRSReportParameterAttribute(classstr(CustShippedNotInvoicedContract_NA))
]
class CustShippedNotInvoicedDP_NA extends SrsReportDataProviderPreProcessTempDB
{
    private const str FeatureReference = 'US-00002';

    CustShippedNotInvoicedTmp_NA custShippedNotInvoicedTmp_NA;
    CustShippedNotInvoicedContract_NA contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustShippedNotInvoicedTmp_NA</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves data from the <c>CustShippedNotInvoicedTmp_NA</c> temporary table.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>CustShippedNotInvoicedTmp_NA</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(CustShippedNotInvoicedTmp_NA))
    ]
    public CustShippedNotInvoicedTmp_NA getCustShippedNotInvoicedTmp_NA()
    {
        select custShippedNotInvoicedTmp_NA;
        return custShippedNotInvoicedTmp_NA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initService</Name>
				<Source><![CDATA[
    private void initService(CustReport_ShippedNotInvoiced_NA custReport_ShippedNotInvoiced_NA)
    {
        custReport_ShippedNotInvoiced_NA.parmQuery(this.parmQuery());
        custReport_ShippedNotInvoiced_NA.parmCutOffDate(contract.parmCutOffDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the business logic of the SQL Server Reporting Services (SSRS) report.
    /// </summary>
    /// <remarks>
    ///    This method will be called by SSRS at run time.The method will compute the data and populate the
    ///    data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        CustReport_ShippedNotInvoiced_NA custReport_ShippedNotInvoiced_NA;

        contract = this.parmDataContract() as CustShippedNotInvoicedContract_NA;
        custReport_ShippedNotInvoiced_NA = new CustReport_ShippedNotInvoiced_NA(custShippedNotInvoicedTmp_NA);

        this.initService(custReport_ShippedNotInvoiced_NA);
        custShippedNotInvoicedTmp_NA = custReport_ShippedNotInvoiced_NA.processCustNotInvoicedReport(this.parmUserConnection());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>