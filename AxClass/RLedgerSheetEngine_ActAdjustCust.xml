<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RLedgerSheetEngine_ActAdjustCust</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RLedgerSheetEngine_ActAdjustCust extends RLedgerSheetEngine_ActAdjustCustVend implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>edtForCustVendAC</Name>
				<Source><![CDATA[
        protected extendedTypeId edtForCustVendAC()
    {
        return extendedtypenum(CustAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formDesignCaption</Name>
				<Source><![CDATA[
        public str formDesignCaption(int _idx = -1)
    {
        ;

        if ((fromDate != dateNull()) && (toDate != dateNull()))
            return strfmt("@GLS110521", custVendTable.AccountNum, custVendTable.name(), fromDate, toDate);
        else if (toDate != dateNull())
            return strfmt("@GLS110522", custVendTable.AccountNum, custVendTable.name(), toDate);
        else
            throw error(error::wrongUseOfFunction(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportCaption</Name>
				<Source><![CDATA[
        public TempStr getReportCaption()
    {
        return strfmt("@GLS110520", custVendTable.AccountNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpTextCovenantee</Name>
				<Source><![CDATA[
        protected str helpTextCovenantee()
    {
        return "@GLS108406";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustVendTable</Name>
				<Source><![CDATA[
        protected CustVendTable initCustVendTable(CustVendAC  _custVendAC)
    {
        return CustTable::find(_custVendAC);
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyFirstKernelObj</Name>
				<Source><![CDATA[
        protected ModuleCustVend keyFirstKernelObj()
    {
        return ModuleCustVend::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>keySecondKernelObj</Name>
				<Source><![CDATA[
        protected ModuleCustVend keySecondKernelObj()
    {
        return ModuleCustVend::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>relationCustVendTable</Name>
				<Source><![CDATA[
        protected CustVendTable relationCustVendTable()
    {
        CustTable   custTable = custVendTable;
        VendTable   vendTable;

        ;

        vendTable = VendTable::findByPartyRecId(custTable.Party);

        return vendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static str description()
    {
        return "@GLS108398";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>