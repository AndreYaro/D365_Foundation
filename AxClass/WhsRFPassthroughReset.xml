<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsRFPassthroughReset</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WhsRFPassthroughReset
{
    #WHSRF

    protected WHSMenuItemName menuItemName;
    protected WHSRFMenuItemTable menuItem;

    protected internal WHSRFPassthrough pass;
    protected internal WHSWorkExecuteMode mode;
    protected internal int step;

    internal WhsWorkExecuteDisplayProcessorState processorState;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustReset</Name>
				<Source><![CDATA[
    protected boolean mustReset()
    {
        if ((mode != WHSWorkExecuteMode::CycleCounting || processorState.workUserSessionState().parmPrevPass() == conNull())
            && ((!menuItem.ConfirmCancel || step == 1)
            &&  ((mode != WHSWorkExecuteMode::MixedLPReceiving
            &&	  mode != WHSWorkExecuteMode::MixedLPReceivingAndLocate)
            ||   (!pass.hasValue(#ItemId) || pass.hasValue(#DoingWork)))))
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize()
    {
        menuItemName = pass.lookupStr(#MenuItem);
        menuItem = WHSRFMenuItemTable::find(menuItemName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reset</Name>
				<Source><![CDATA[
    protected boolean reset()
    {
        if (this.mustReset())
        {
            guid deviceId = pass.parmDeviceId();

            pass = WHSRFPassthrough::newEmpty();
            pass.insert(#UserId, processorState.userId);
            pass.insert(#UserSessionId, guid2str(processorState.userSessionId));
            pass.insert(#MenuItem, menuItemName);
            pass.insert(#RequestDeviceId, guid2str(deviceId));

            return true;
        }

        return false;     
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal boolean run()
    {
        this.initialize();

        return this.reset();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromState</Name>
				<Source><![CDATA[
    static internal WhsRFPassthroughReset newFromState(
        WhsWorkExecuteDisplayProcessorState _processorState,
        WHSWorkExecuteMode _mode,
        int _step)
    {
        WhsRFPassthroughReset reset = WhsRFPassthroughReset::newFromPass(_processorState.pass);

        if (!reset)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        reset.processorState = _processorState;
        reset.pass = _processorState.pass;
        reset.mode = _mode;
        reset.step = _step;

        return reset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPass</Name>
				<Source><![CDATA[
    [Replaceable]
    static protected WhsRFPassthroughReset newFromPass(WHSRFPassthrough _pass)
    {
        if (_pass.exists(#CameFromWorkList))
        {
            return new WhsRFPassthroughResetWorkList();
        }
        
        return new WhsRFPassthroughReset();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>