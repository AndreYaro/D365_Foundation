<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailUpdateProductDimensionsWithVariantGroupsController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>RetailUpdateProductDimensionsWithVariantGroupsController</c> class acts as a controller for the <c>RetailUpdateProductDimensionsWithVariantGroupsService</c> service.
/// </summary>
Internal class RetailUpdateProductDimensionsWithVariantGroupsController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructToRunFromTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>RetailUpdateProductDimensionsWithVariantGroupsController</c> instance to run the service operation from respective form
    /// </summary>
    /// <param name = "_methodName">The method name to use when executing the service operation.</param>
    /// <returns>Instance of <c>RetailUpdateProductDimensionsWithVariantGroupsController</c> </returns>
    internal static RetailUpdateProductDimensionsWithVariantGroupsController constructToRunFromTable(identifierName _methodName)
    {
        identifierName className = classStr(RetailUpdateProductDimensionsWithVariantGroupsService);
        SysOperationExecutionMode executionMode = SysOperationExecutionMode::ReliableAsynchronous;

        RetailUpdateProductDimensionsWithVariantGroupsController controller = new RetailUpdateProductDimensionsWithVariantGroupsController(className, _methodName, executionMode);

        controller.parmShowDialog(false);
        controller.parmLoadFromSysLastValue(false);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromColorGroupTransTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of updating product dimensions of color with the specifed <c>RetailColorGroupTrans</c> record.
    /// </summary>
    /// <param name = "_colorGroupTransRecId"><c>RetailColorGroupTrans</c> RecId</param>
    internal static void runFromColorGroupTransTable(RefRecId _colorGroupTransRecId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, updateProductDimensionsWithColorGroup);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmColorGroupTransRecId(_colorGroupTransRecId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromColorGroupTransTranslationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of synchronizing corresponding product master dimension value translations for the specifed <c>RetailColorGroupTransTranslation</c> record.
    /// </summary>
    /// <param name = "_colorGroupTransRecId"><c>RetailColorGroupTrans</c> RecId</param>
    /// <param name = "languageId">Language Id</param>
    internal static void runFromColorGroupTransTranslationTable(RefRecId _colorGroupTransRecId, LanguageIdAll languageId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, syncProductLevelTranslationsForColor);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmColorGroupTransRecId(_colorGroupTransRecId);
        contract.parmLanguageId(languageId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromSizeGroupTransTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of updating product dimensions of size with the specifed <c>RetailSizeGroupTrans</c> record.
    /// </summary>
    /// <param name = "_sizeGroupTransRecId"><c>RetailSizeGroupTrans</c> RecId</param>
    internal static void runFromSizeGroupTransTable(RefRecId _sizeGroupTransRecId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, updateProductDimensionsWithSizeGroup);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmSizeGroupTransRecId(_sizeGroupTransRecId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromSizeGroupTransTranslationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of synchronizing corresponding product master dimension value translations for the specifed <c>RetailSizeGroupTransTranslation</c> record.
    /// </summary>
    /// <param name = "_sizeGroupTransRecId"><c>RetailSizeGroupTrans</c> RecId</param>
    /// <param name = "languageId">Language Id</param>
    internal static void runFromSizeGroupTransTranslationTable(RefRecId _sizeGroupTransRecId, LanguageIdAll languageId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, syncProductLevelTranslationsForSize);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmSizeGroupTransRecId(_sizeGroupTransRecId);
        contract.parmLanguageId(languageId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromStyleGroupTransTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of updating product dimensions of style with the specifed <c>RetailStyleGroupTrans</c> record.
    /// </summary>
    /// <param name = "_styleGroupTransRecId"><c>RetailStyleGroupTrans</c> RecId</param>
    internal static void runFromStyleGroupTransTable(RefRecId _styleGroupTransRecId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, updateProductDimensionsWithStyleGroup);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmStyleGroupTransRecId(_styleGroupTransRecId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromStyleGroupTransTranslationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the operation of synchronizing corresponding product master dimension value translations for the specifed <c>RetailStyleGroupTransTranslation</c> record.
    /// </summary>
    /// <param name = "_styleGroupTransRecId"><c>RetailStyleGroupTrans</c> RecId</param>
    /// <param name = "languageId">Language Id</param>
    internal static void runFromStyleGroupTransTranslationTable(RefRecId _styleGroupTransRecId, LanguageIdAll languageId)
    {
        identifierName methodName = methodStr(RetailUpdateProductDimensionsWithVariantGroupsService, syncProductLevelTranslationsForStyle);

        RetailUpdateProductDimensionsWithVariantGroupsController controller = RetailUpdateProductDimensionsWithVariantGroupsController::constructToRunFromTable(methodName);

        RetailUpdateProductDimensionsWithVariantGroupsContract contract = controller.getDataContractObject();
        contract.parmStyleGroupTransRecId(_styleGroupTransRecId);
        contract.parmLanguageId(languageId);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the default value for the caption shown in batch and the operation user interface.
    /// </summary>
    /// <returns> Description for the operation.</returns>
    [Hookable(false)]
    public ClassDescription caption()
    {
        return "@Retail:RetailUpdateProductDimensionsWithVariantGroupsLabel";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>