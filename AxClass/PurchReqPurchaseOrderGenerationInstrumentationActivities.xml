<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqPurchaseOrderGenerationInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqPurchaseOrderGenerationInstrumentationActivities</c> class provides activities for purchase order generation instrumentation logging.
/// </summary>
internal final class PurchReqPurchaseOrderGenerationInstrumentationActivities
{
    private PurchReqInstrumentationLogger logger;

    private const str ActivityNamePrefix = 'PurchReqPurchaseOrderGeneration.';
    private const str Run = 'Run';
    private const str RunAsync = 'RunAsync';
    private const str RunSync = 'RunSync';
    private const str RunBatch = 'RunBatch';
    private const str RunBatchLine = 'RunBatchLine';
    private const str RunBatchCreateTask = 'RunBatchCreateTask';
    private const str RecordBudgetFundReservation = 'RecordBudgetFundReservation';
    private const str RunAutoPurchOrderGeneration = 'RunAutoPurchOrderGeneration';
    private const str PurchaseRequistionWithRetry = 'PurchaseRequistionWithRetry';

    private const str RequisitionStatusProperty = 'RequisitionStatus';
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PurchReqInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static PurchReqPurchaseOrderGenerationInstrumentationActivities newFromLogger(PurchReqInstrumentationLogger _logger)
    {
        return new PurchReqPurchaseOrderGenerationInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContextReqisitionTable</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext createActivityContextReqisitionTable(str _activityName, RecId _purchReqTable)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(_activityName);

        activityContext.addCustomProperty(tableStr(PurchReqTable), int642Str(_purchReqTable));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivityContextReqisitionLine</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext createActivityContextReqisitionLine(str _activityName, RecId _purchReqLine)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(_activityName);

        activityContext.addCustomProperty(tableStr(PurchReqLine), int642Str(_purchReqLine));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext run(PurchReqTable _purchReqTable)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityNamePrefix + Run);

        activityContext
            .addCustomProperty(tableStr(PurchReqTable), int642Str(_purchReqTable.RecId))
            .addCustomProperty(RequisitionStatusProperty, int2Str(_purchReqTable.RequisitionStatus));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBatch</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runBatch()
    {
        return logger.activityContext(ActivityNamePrefix + RunBatch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBatchLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runBatchLine(RecId _purchReqLine)
    {
        return this.createActivityContextReqisitionLine(ActivityNamePrefix + RunBatchLine, _purchReqLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBatchCreateTask</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runBatchCreateTask()
    {
        return logger.activityContext(ActivityNamePrefix + RunBatchCreateTask);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordBudgetFundReservation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext recordBudgetFundReservation(RecId _purchReqTable)
    {
        return this.createActivityContextReqisitionTable(ActivityNamePrefix + RecordBudgetFundReservation, _purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runAutoPurchOrderGeneration</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runAutoPurchOrderGeneration(RecId _purchReqTable)
    {
        return this.createActivityContextReqisitionTable(ActivityNamePrefix + RunAutoPurchOrderGeneration, _purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runAsync</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runAsync(RecId _purchReqTable)
    {
        return this.createActivityContextReqisitionTable(ActivityNamePrefix + RunAsync, _purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runSync</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext runSync(RecId _purchReqTable)
    {
        return this.createActivityContextReqisitionTable(ActivityNamePrefix + RunSync, _purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchaseRequistionWithRetry</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext purchaseRequistionWithRetry(RecId _purchReqTable)
    {
        return this.createActivityContextReqisitionTable(ActivityNamePrefix + PurchaseRequistionWithRetry, _purchReqTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>