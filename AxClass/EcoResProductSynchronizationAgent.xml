<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductSynchronizationAgent</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract public class EcoResProductSynchronizationAgent
{
    RefRecId                        product;
    EcoResSynchronizationCommand    synchronizationCommand;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustSynchronize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the synchronization should be executed.
    /// </summary>
    /// <returns>
    ///    true if synchronization should be executed; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The method was not overridden.
    /// </exception>
    public boolean mustSynchronize()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProduct</Name>
				<Source><![CDATA[
        public RefRecId parmProduct(RefRecId _product = product)
    {
        product = _product;

        return product;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSynchronizationCommand</Name>
				<Source><![CDATA[
        public EcoResSynchronizationCommand parmSynchronizationCommand(EcoResSynchronizationCommand _synchronizationCommand = synchronizationCommand)
    {
        synchronizationCommand = _synchronizationCommand;

        return synchronizationCommand;
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeDeleteAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes synchronization between the product attributes and item attributes based on the delete
    ///    action.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The method should be overriden.
    /// </exception>
    public void synchronizeDeleteAction()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInCompanyContext</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Synchronizes product attributes with the current company when the product has been released to it.
    /// </summary>
    public void synchronizeInCompanyContext()
    {
        synchronizationCommand.execute(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInsertAndUpdateAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes synchronization between the product attributes and item attributes based on the insert and
    ///    update actions.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The method should be overriden.
    /// </exception>
    public void synchronizeInsertAndUpdateAction()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
        protected void validate()
    {
        if (!product)
        {
            throw error("@SYS328120");
        }

        if (!synchronizationCommand)
        {
            throw error("@SYS328121");
        }

        if (!EcoResProduct::find(product).RecId)
        {
            throw error(strFmt("@SYS328122", product));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructNameSynchronizationAgent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>EcoResProductSynchronizationAgent</c> class to synchronize the
    ///    product name and search name.
    /// </summary>
    /// <param name="_product">
    ///    An instance of the <c>EcoResProduct</c> table buffer.
    /// </param>
    /// <param name="_searchName">
    ///    The product search name.
    /// </param>
    /// <param name="_searchNameOrigin">
    ///    The product search name.
    /// </param>
    /// <returns>
    ///    An instance of the <c>EcoResProductSynchronizationAgent</c> class.
    /// </returns>
    public static EcoResProductSynchronizationAgent constructNameSynchronizationAgent(
        RefRecId                _product,
        EcoResProductSearchName _searchName,
        EcoResProductSearchName _searchNameOrigin)
    {
        EcoResProductNameSyncAgent synchronizationAgent = EcoResProductNameSyncAgent::construct();

        synchronizationAgent.parmProduct(_product);
        synchronizationAgent.parmSearchName(_searchName);
        synchronizationAgent.parmSearchNameOrigin(_searchNameOrigin);

        return synchronizationAgent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
