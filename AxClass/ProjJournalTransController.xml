<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ProjJournalTransController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>ProjJournalTransController</c> class is the controller class for the
/// <c>ProjJournalRevenue</c> report and the <c>ProjJournalEmpl</c> report.
/// </summary>
class ProjJournalTransController extends SrsReportRunController implements BatchRetryable
{
    #define.ProjJournalRevenue('ProjJournalRevenue.Report')
    #define.ProjJournalEmpl('ProjJournalEmpl.Report')
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
        protected void prePromptModifyContract()
    {
        ProjJournalTable    projJournalTable;

        if (this.parmArgs().record())
        {
            projJournalTable = this.parmArgs().record();
        }

        this.setRanges(this.getFirstQuery(), projJournalTable.JournalId);
    }

]]></Source>
      </Method>
      <Method>
        <Name>setRanges</Name>
        <Source><![CDATA[
    /// <summary>
    /// Applies filters on the report.
    /// </summary>
    /// <param name="_queryContract">
    /// The report query to modify.
    /// </param>
    /// <param name="_journalId">
    /// The project journal ID.
    /// </param>
    /// <remarks>
    /// Sets ranges on a data source based on the values that are selected in the report parameters dialog.
    /// </remarks>
    public void setRanges(Query _queryContract, ProjJournalId _journalId)
    {
        QueryBuildDataSource qbds;

        qbds = _queryContract.dataSourceTable(tableNum(ProjJournalTrans));
        SysQuery::findOrCreateRange(qbds,fieldNum(ProjJournalTrans, JournalId)).value(_journalId);
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
        public static void main(Args _args)
    {
        ProjJournalTransController controller  = new ProjJournalTransController();
        menuItemNameOutput menuName;
        str reportName;
        menuName = _args.menuItemName();
        switch (menuName)
        {
            case menuitemOutputStr(ProjJournalRevenue):
                reportName = #ProjJournalRevenue;
                break;
            case menuitemOutputStr(ProjJournalEmpl):
                reportName = #ProjJournalEmpl;
                break;
        }
        controller.parmReportName(reportName);
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>