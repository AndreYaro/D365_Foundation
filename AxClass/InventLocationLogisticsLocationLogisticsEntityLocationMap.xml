<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventLocationLogisticsLocationLogisticsEntityLocationMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Implements the <c>LogisticsEntityLocationMapInterface</c> for the table <c>InventLocationLogisticsLocation</c>.
/// </summary>
[ExportMetadata(classStr(LogisticsEntityLocationMapInterface), tableStr(InventLocationLogisticsLocation)), ExportAttribute('Dynamics.AX.Application.LogisticsEntityLocationMapInterface')]
class InventLocationLogisticsLocationLogisticsEntityLocationMap extends LogisticsEntityLocationMapInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityLocationRoleTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table id of the entity's related location role table.
    /// </summary>
    /// <returns>The location role table id related to the current entity, which is <c>InventLocationLogisticsLocationRole</c>.</returns>
    public TableId getEntityLocationRoleTableId()
    {
        return tablenum(InventLocationLogisticsLocationRole);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityLocationTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table id of the entity's related location table.
    /// </summary>
    /// <returns>The location table id related to the current entity, otherwise the id of <c>DirPartyLocation</c></returns>
    /// if the entity is mapped to <c>DirPartyMap</c>/returns>
    public TableId getEntityLocationTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>