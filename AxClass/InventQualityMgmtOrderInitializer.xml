<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityMgmtOrderInitializer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventQualityMgmtOrderInitializer</c> class provides facilities for a quality order
///    initialization that require a class instance.
/// </summary>
class InventQualityMgmtOrderInitializer implements InventQualityManagementActionable
{
    InventQualityReferenceType referenceType;
    InventTestAssociationTable associationTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>actOnAssociations</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a quality association that matches the criteria that is passed and also matches the quality
    ///    of the partial quality order that is being considered.
    /// </summary>
    /// <param name="_itemCode">
    ///    An <c>ItemCode</c> value.
    /// </param>
    /// <param name="_itemRelation">
    ///    An <c>ItemRelation</c> value.
    /// </param>
    /// <param name="_accountCode">
    ///    An <c>InventTestAccountCode</c> value.
    /// </param>
    /// <param name="_accountRelation">
    ///    An <c>InventTestAccountRelation</c> value.
    /// </param>
    /// <param name="_wrkCtrCode">
    ///    An <c>InventTestWrkCtrCode</c> value.
    /// </param>
    /// <param name="_wrkCtrRelation">
    ///    A <c>WrkCtrIdBase</c> value.
    /// </param>
    /// <remarks>
    ///    This method is intended to provide a call back for third-party methods that are called in the
    ///    <c>getAssociation</c> method.
    /// </remarks>
    public void actOnAssociations(
        ItemCode                    _itemCode,
        ItemRelation                _itemRelation,
        InventTestAccountCode       _accountCode,
        InventTestAccountRelation   _accountRelation,
        InventTestWrkCtrCode        _wrkCtrCode,
        WrkCtrIdBase                _wrkCtrRelation)
    {
        InventSiteId               inventSiteIdThis     = referenceType.inventSiteId();
        utcdatetime                currentTime          = DateTimeUtil::getSystemDateTime();

        if (associationTable)
        {
            return;
        }

        select firstonly associationTable
            where   associationTable.OrderType          == referenceType.referenceType()
                 && associationTable.ItemCode           == _itemCode
                 && associationTable.ItemRelation       == _itemRelation
                 && associationTable.AccountCode        == _accountCode
                 && associationTable.AccountRelation    == _accountRelation
                 && associationTable.WrkCtrCode         == _wrkCtrCode
                 && associationTable.WrkCtrRelation     == _wrkCtrRelation
                 && associationTable.ValidFromDateTime  <= currentTime
                 && associationTable.ValidToDateTime    >  currentTime
                 && (associationTable.InventSiteId      == inventSiteIdThis
                 || !associationTable.InventSiteId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventTestAssociationTable</c> record that matches the partial quality order.
    /// </summary>
    /// <returns>
    ///    A record in the <c>InventTestAssociationTable</c> table; otherwise, an empty record.
    /// </returns>
    protected InventTestAssociationTable getAssociation()
    {
        referenceType.iterateQualityAssociations(this);
        return associationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected final void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceType</Name>
				<Source><![CDATA[
    protected InventQualityReferenceType parmReferenceType(InventQualityReferenceType _referenceType = referenceType)
    {
        referenceType = _referenceType;
        return referenceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static InventQualityMgmtOrderInitializer construct()
    {
        return new InventQualityMgmtOrderInitializer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQtyByFindingAssociation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the quantity field of a partial quality order by matching it to an association.
    /// </summary>
    /// <param name="_orderTable">
    ///    A <c>InventQualityOrderTable</c> table buffer.
    /// </param>
    /// <remarks>
    ///    This method uses a sampling policy to determine the appropriate default quantity.
    /// </remarks>
    public static void initializeQtyByFindingAssociation(InventQualityOrderTable _orderTable)
    {
        InventQualityMgmtOrderInitializer initializer   = InventQualityMgmtOrderInitializer::construct();
        InventQualityReferenceType        referenceType = InventQualityReferenceType::newFromQualityOrder(_orderTable);

        initializer.parmReferenceType(referenceType);

        _orderTable.initQtyFromAssociation(initializer.getAssociation());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>