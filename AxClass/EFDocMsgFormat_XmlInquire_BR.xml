<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocMsgFormat_XmlInquire_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates and interprets the XML to be sent to the inquire web service.
/// </summary>
class EFDocMsgFormat_XmlInquire_BR extends EFDocMsgFormat_XmlBase_BR implements IEFDocMsgFormat
{
    IEFDocMsgStream_BR      stream;
    EFiscalDocument_BR      fiscalDocument;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes the correct XML to the inquiry stream object
    /// </summary>
    /// <param name="_stream">
    /// The Stream object in which the XML will be written
    /// </param>
    /// <param name="_accessKey">
    /// The access key of the Electronic Fiscal Document that will be written to the stream
    /// </param>
    /// <param name="_efDocEnvironment">
    /// The type of environment that will be written to the stream
    /// </param>
    protected void doWrite(IEFDocMsgStream_BR _stream, EFDocAccessKey_BR _accessKey, EFDocEnvironment_BR _efDocEnvironment)
    {
        XmlElement conSitNFeElement;

        conSitNFeElement  = this.createElement('consSitNFe');
        conSitNFeElement.setAttribute('versao', this.version());

        conSitNFeElement.appendChild(this.createElementWithValue('tpAmb', _efDocEnvironment == EFDocEnvironment_BR::Production ? '1' : '2' ));
        conSitNFeElement.appendChild(this.createElementWithValue('xServ', 'CONSULTAR'));
        conSitNFeElement.appendChild(this.createElementWithValue('chNFe', _accessKey));

        xmlDoc = XmlDocument::newXml(conSitNFeElement.outerXml());
        xmlDoc.insertBefore(xmlDoc.createXmlDeclaration('1.0', 'UTF-8', ''), xmlDoc.documentElement());

        _stream.write(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>eFiscalDocVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the version of the NF-e manual that this class adheres to.
    /// </summary>
    /// <returns>The version of the NF-e manual from <c>EFiscalDocVersion_BR</c> enumerator.</returns>
    public EFiscalDocVersion_BR eFiscalDocVersion()
    {
        return EFiscalDocVersion_BR::V4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>read</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the XML returned by the inquire web service.
    /// </summary>
    /// <param name="_stream">The stream from which to read the XML.</param>
    /// <param name="_returnInfo">A parm object to fill the return information.</param>
    void read(IEFDocMsgStream_BR _stream, EFiscalDocumentReturnInfo_BR _returnInfo)
    {
        #ExportFiscalDocument_BR

        str         returnCode;
        str         returnCodeDescription;
        str         returnProtocolNumber;
        ;

        xmlDoc.loadXml(conpeek(_stream.read(),1));

        returnCode              = this.getNodeContent('/x:retConsSitNFe/x:cStat');
        returnCodeDescription   = this.getNodeContent('/x:retConsSitNFe/x:xMotivo');

        if (returnCode == #Authorized
            || returnCode == #Denied)
        {
            returnProtocolNumber    = this.getNodeContent('/x:retConsSitNFe/x:protNFe/x:infProt/x:nProt');
        }
        else if (returnCode == #Cancelled)
        {
            returnProtocolNumber    = this.getNodeContent('/x:retConsSitNFe/x:retCancNFe/x:infCanc/x:nProt');
        }

        _returnInfo.parmReturnCodeStatus(returnCode);
        _returnInfo.parmReturnCodeDescription(returnCodeDescription);
        _returnInfo.parmProtocolNumber(returnProtocolNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>version</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the version of the XML that this class creates and interprets.
    /// </summary>
    /// <returns>The XML version in string format.</returns>
    public str version()
    {
        return '2.01';
    }

]]></Source>
			</Method>
			<Method>
				<Name>webService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves which web service this format is to be sent to.
    /// </summary>
    /// <returns>A web service from <c>EFDocWebService_BR</c> enumerator.</returns>
    EFDocWebService_BR webService()
    {
        return EFDocWebService_BR::SubmitInquire;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
/// <summary>
    /// Generates the XML messages and sends it to the provided message stream.
    /// </summary>
    /// <param name="_stream">The stream to be used to send the messages</param>
    /// <param name="_documentList">A <c>EFiscalDocumentList_BR</c> list of documents to be sent.</param>
    public void write(IEFDocMsgStream_BR _stream, EFiscalDocumentList_BR _documentList)
    {
        stream = _stream;

        if (_documentList.moveNext())
        {
            fiscalDocument = _documentList.current();

            this.doWrite(_stream, fiscalDocument.accessKey(), fiscalDocument.fiscalEstablishment().webServiceEnvironment(fiscalDocument.fiscalDocument()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeForReceivedXml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the XML messages and sends it to the provided message stream for Received XMLs.
    /// </summary>
    /// <param name="_stream">
    /// The stream to be used to send the messages.
    /// </param>
    /// <param name="_accessKey">
    /// The access key extracted from the Received XMl to be Inquired.
    /// </param>
    /// <param name = "_environment">
    /// The type of environment that will be written to the stream.
    /// </param>
    public void writeForReceivedXml(IEFDocMsgStream_BR _stream, EFDocAccessKey_BR _accessKey, EFDocEnvironment_BR _environment =  EFDocEnvironment_BR::Production)
    {
        stream = _stream;

        this.doWrite(_stream, _accessKey, _environment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>EFDocMsgFormat_XmlInquire_BR</c> object.
    /// </summary>
    /// <returns>A <c>EFDocMsgFormat_XmlInquire_BR</c> object.</returns>
    public static EFDocMsgFormat_XmlInquire_BR construct()
    {
        return new EFDocMsgFormat_XmlInquire_BR();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>