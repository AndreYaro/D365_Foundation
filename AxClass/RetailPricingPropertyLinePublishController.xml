<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingPropertyLinePublishController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <c>RetailPricingPropertyLinePublishController</c> is used to publish retail pricing properties on line level.
/// </summary>
internal final class RetailPricingPropertyLinePublishController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>RetailPricingPropertyLinePublishController</c>.
    /// </summary>
    /// <param name="_className">
    /// The class name to use when executing the service operation.
    /// </param>
    /// <param name="_methodName">
    /// The method name to use when executing the service operation.
    /// </param>
    /// <param name="_executionMode">
    /// The execution mode to use when executing the service operation.
    /// </param>
    internal void new(
        identifierName _className = classStr(RetailPricingPropertyLinePublishService),
        identifierName _methodName = methodStr(RetailPricingPropertyLinePublishService, process),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::ScheduledBatch)
    {
        super(_className, _methodName, _executionMode);
        this.parmDialogCaption("@RetailPricing:RetailPricingPropertyPublishLineBatchLabel");
        this.parmShowProgressForm(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run the batch service.
    /// </summary>
    /// <param name = "_args">The arguments.</param>
    public static void main(Args _args)
    {
        identifierName className;
        identifierName methodName;
        SysOperationExecutionMode executionMode;
        RetailPricingPropertyLinePublishController controller;

        if (_args.parm())
        {
            [className, methodName, executionMode] = SysOperationServiceController::parseServiceInfo(_args);
            controller = new RetailPricingPropertyLinePublishController(className, methodName, executionMode);
        }
        else
        {
            controller = new RetailPricingPropertyLinePublishController();
        }

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the class must run in batch or not.
    /// Forces the slider in the dialog to true.
    /// </summary>
    /// <returns>False since this class must not always run in batch.</returns>
    public boolean mustGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>