<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionCopyFormExtensionBudgetHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains event handlers for the <c>HcmPositionCopy.ExtensionBudget</c> form extension.
/// </summary>
public class HcmPositionCopyFormExtensionBudgetHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HcmPositionCopy_Post_initializeCopyClass</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs additional initialization of the copy class.
    /// </summary>
    /// <param name="_args">The event arguments.</param>
    [PostHandlerFor(formStr(HcmPositionCopy), formMethodStr(HcmPositionCopy, initializeCopyWithFormValues))]
    public static void HcmPositionCopy_Post_initializeCopyClass(XppPrePostArgs _args)
    {
        FormRun element = _args.getThis();

        if (element
            && classIdGet(element.args().caller()) == classNum(HcmPositionForecastCopy))
        {
            FormIntControl numberToCreateBudget = element.design().controlName(formControlStr(HcmPositionCopy, numberToCreateBudget)) as FormIntControl;
            HcmPositionForecastCopy hcmPositionForecastCopy = element.args().caller();
            hcmPositionForecastCopy.parmNumberOfCopies(numberToCreateBudget.value());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberToCreateBudget_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the modified code on the numberToCreateBudget control.
    /// </summary>
    /// <param name="_sender">The control raising the event.</param>
    /// <param name="_e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(HcmPositionCopy, numberToCreateBudget), FormControlEventType::Modified)]
    public static void numberToCreateBudget_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        HcmPositionForecastCopy hcmPositionForecastCopy;
        HcmJobRecId             hcmJobRecId;

        FormRun element = _sender.formRun();

        // Run Budget specific code on their control
        if (classIdGet(element.args().caller()) == classIdGet(hcmPositionForecastCopy))
        {
            hcmPositionForecastCopy = element.args().caller();
            FormIntControl numberToCreate = element.design().controlName(formControlStr(HcmPositionCopy, numberToCreateBudget)) as FormIntControl;

            if (BudgetLinkPositionToMultipleForecastDetailsFlight::instance().isEnabled())
            {
                hcmJobRecId = HcmPositionForecastDetailV2::findByPositionForecastScenerio(hcmPositionForecastCopy.parmPositionForecastScenario().RecId,hcmPositionForecastCopy.parmPositionForecastRecId()).Job;
            }
            else
            {
                hcmJobRecId = HcmPositionForecastDetail::find(hcmPositionForecastCopy.parmPositionForecastRecId()).Job;
            }

            element.doNumberOfCopiesExceedMaximumNumber(hcmJobRecId, numberToCreate.value());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionCopy_Post_init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides controls that are not applicable when calling from Position Forecast.
    /// </summary>
    /// <param name="_args">The event arguments.</param>
    [PostHandlerFor(formStr(HcmPositionCopy), formMethodStr(HcmPositionCopy, init))]
    public static void HcmPositionCopy_Post_init(XppPrePostArgs _args)
    {
        HcmPositionForecastCopy hcmPositionForecastCopy;
        FormRun element = _args.getThis();

        if (element)
        {
            FormIntControl numberToCreateBudget = element.design().controlName(formControlStr(HcmPositionCopy, numberToCreateBudget)) as FormIntControl;

            if (classIdGet(element.args().caller()) == classIdGet(hcmPositionForecastCopy))
            {
                FormCheckBoxControl copyLaborUnion = element.design().controlName(formControlStr(HcmPositionCopy, copyLaborUnion)) as FormCheckBoxControl;
                copyLaborUnion.visible(false);

                FormIntControl numberToCreate = element.design().controlName(formControlStr(HcmPositionCopy, numberToCreate)) as FormIntControl;
                numberToCreate.visible(false);

                if (!isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
                {
                    FormCheckBoxControl copyPayroll = element.design().controlName(formControlStr(HcmPositionCopy, copyPayroll)) as FormCheckBoxControl;
                    copyPayroll.visible(false);
                }

                numberToCreateBudget.visible(true);
            }
            else
            {
                numberToCreateBudget.visible(false);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
