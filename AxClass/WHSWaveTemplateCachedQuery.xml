<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveTemplateCachedQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveTemplateCachedQuery</c> class provides caching of wave template queries.
/// </summary>
class whsWaveTemplateCachedQuery extends SysGlobalObjectCacheItemWrapper
{
    str cacheKeyStr;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cacheKey</Name>
				<Source><![CDATA[
    public str cacheKey(str _cacheKeyStr = cacheKeyStr)
    {
        cacheKeyStr = _cacheKeyStr;
        return cacheKeyStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cacheScope</Name>
				<Source><![CDATA[
    protected GlobalObjectCacheScope cacheScope()
    {
        return strFmt('%1::%2', tableStr(WHSWaveTemplateTable), tableStaticMethodStr(WHSWaveTemplateTable, waveTemplateCachedQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSWaveTemplateCachedQuery construct()
    {
        return new WHSWaveTemplateCachedQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>WHSWaveTemplateCachedQuery</c> object.
    /// </summary>
    /// <param name="_cacheKeyStr">
    /// The key identifying the cached object.
    /// </param>
    /// <returns>
    /// An instance of the <c>WHSWaveTemplateCachedQuery</c> class.
    /// </returns>
    public static WHSWaveTemplateCachedQuery newFromCacheKey(str _cacheKeyStr)
    {
        WHSWaveTemplateCachedQuery waveTemplateCachedQuery = WHSWaveTemplateCachedQuery::construct();
        waveTemplateCachedQuery.cacheKey(_cacheKeyStr);
        return waveTemplateCachedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCacheKeyForCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the company context to the cache key to ensure its uniquness.
    /// </summary>
    /// <param name = "_waveTemplateType">Wave template type.</param>
    /// <param name = "_inventLocationId">Warehouse identifier.</param>
    /// <param name = "_inventSiteId">Site identifier.</param>
    /// <param name = "_company">Company identifier. Current company by default.</param>
    /// <returns>New cache key with specified company context.</returns>
    internal static str createCacheKeyForCompany(WHSWaveTemplateType _waveTemplateType, InventLocationId _inventLocationId, InventSiteId _inventSiteId, DataAreaId _company = curExt())
    {
        return strFmt('%1;%2;%3;%4', _company, _waveTemplateType, _inventLocationId, _inventSiteId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>