<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjUpdateSubProjStagePrompt</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjUpdateSubProjStagePrompt extends RunBase
{
    ProjUpdateSubProjStage projUpdateSubProjStage;

    ProjStatus      newStatus;

    DialogRunbase   dialog;

    DialogField     dialogSelection;

    PSAProjStatus   m_ePSAProjStatus;
    ProjStatus      oldStatus;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        projUpdateSubProjStage
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
    /// in the Application Object Tree (AOT).
    /// </remarks>
    public Object dialog()
    {
        Dialog dialogRunBase = Dialog::newFormnameRunbase(formStr(ProjUpdateSubProjStagePrompt),this);

        projUpdateSubProjStage    = 0;

        dialog = this.dialogInternal(dialog);

        return dialogRunBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(ProjStatus _newStatus)
    {
        newStatus    = _newStatus;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOldProjStatus</Name>
				<Source><![CDATA[
    ProjStatus parmOldProjStatus(ProjStatus _eprojStatus = oldStatus)
    {
        oldStatus  = _eprojStatus;

        return oldStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjUpdateSubProjStage</Name>
				<Source><![CDATA[
    ProjUpdateSubProjStage parmProjUpdateSubProjStage(ProjUpdateSubProjStage _projUpdateSubProjStage = projUpdateSubProjStage)
    {
        projUpdateSubProjStage = _projUpdateSubProjStage;

        return projUpdateSubProjStage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToPSAStatus</Name>
				<Source><![CDATA[
    PSAProjStatus parmToPSAStatus(PSAProjStatus _epsAprojStatus = m_ePSAProjStatus)
    {
        m_ePSAProjStatus  = _epsAprojStatus;

        return m_ePSAProjStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        this.getFromDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer         version         = RunBase::getVersion(packedClass);
        boolean         ret = true;

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                break;
            default:
                ret = false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjUpdateSubProjStagePrompt construct(ProjStatus  _newStatus)
    {
        return new ProjUpdateSubProjStagePrompt(_newStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS56164";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        ProjUpdateSubProjStagePrompt projUpdateSubProjStagePrompt;

        projUpdateSubProjStagePrompt = ProjUpdateSubProjStagePrompt::construct(ProjStatus::InProcess);

        if (projUpdateSubProjStagePrompt.prompt())
        {
            projUpdateSubProjStagePrompt.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>