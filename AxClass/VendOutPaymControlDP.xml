<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOutPaymControlDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendOutPaymControlDP</c> class is the report data provider (RDP) class for the associated
/// <c>VendOutPaymControl</c> SSRS reports.
/// </summary>
/// <remarks>
/// This is the RDP class for the associated <c>VendOutPaymControl</c> SSRS reports.
/// </remarks>
[
    SRSReportQueryAttribute(queryStr(VendOutPaymControl)),
    SRSReportParameterAttribute(classStr(VendOutPaymControlContract))
]
class VendOutPaymControlDP extends SRSReportDataProviderBase
{
    CustVendOutTmp              vendOutPaymControlTmp;
    TmpAccountSum               tmpAccountSum;
    recId                       recIdTableDataSet;
    recId                       recIdSummaryDataSet;
    Query                       query;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpAccountSum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets data from the <c>TmpAccountSum</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>TmpAccountSum</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(TmpAccountSum))
    ]
    public TmpAccountSum getTmpAccountSum()
    {
        select * from tmpAccountSum;
        return tmpAccountSum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendOutPaymControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets data from <c>VendOutPaymControlTmp</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>VendOutPaymControlTmp</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute('VendOutPaymControl')
    ]
    public CustVendOutTmp getVendOutPaymControl()
    {
        select * from vendOutPaymControlTmp;
        return vendOutPaymControlTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    ///    This method provides the ability to write the report business logic.This method will be called by
    ///    SSRS at runtime.The method should compute data and populate the data tables that will be returned
    ///    to SSRS
    /// </remarks>
    public void processReport()
    {
        QueryRun queryRun;
        SRSReportRunPermission permission;
        VendOutPaymControlContract  contract;

        contract = this.parmDataContract() as VendOutPaymControlContract;

        // retrieve a handle to the base query
        query = new Query(this.parmQuery());

        // execute the base Query to establish permissions
        queryRun = new QueryRun(query);

        // retrieve the session parameters
        recIdTableDataSet = contract.parmTableDataRecId();
        recIdSummaryDataSet = contract.parmSummaryDataRecId();

        // temporarily enable access to data cache
        permission = new SRSReportRunPermission();
        permission.assert();

        // fill the temp table objects with data returned from SRSDataCarrier
        vendOutPaymControlTmp = SRSTmpTblMarshaller::getTmpTbl(recIdTableDataSet);
        tmpAccountSum = SRSTmpTblMarshaller::getTmpTbl(recIdSummaryDataSet);

        // delete data
        //SRSTmpTblMarshaller::deleteTmpTblData(recIdTableDataSet);
        //SRSTmpTblMarshaller::deleteTmpTblData(recIdSummaryDataSet);

        // revert code access permissions
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
