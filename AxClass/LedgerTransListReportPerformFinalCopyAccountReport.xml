<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransListReportPerformFinalCopyAccountReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerTransListReportPerformFinalCopyAccountReport</c> class creates queries related to the <c>LedgerTransListReportHelper</c> class.
/// </summary>
public final class LedgerTransListReportPerformFinalCopyAccountReport
{
    private LedgerTransactionListTmp reportTmpTable;
    private LedgerTransactionListStagingTmp finalStagingTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load records to <c>LedgerTransactionListTmp</c> table.
    /// </summary>
    /// <param name = "_reportTmpTable">
    /// The <c>LedgerTransactionListTmp</c> table to be filled.
    /// </param>
    /// <param name = "_finalStagingTable">
    /// The <c>LedgerTransactionListStagingTmp</c> table records being inserted.
    /// </param>
    static internal void insert(LedgerTransactionListTmp _reportTmpTable, LedgerTransactionListStagingTmp _finalStagingTable)
    {
        LedgerTransListReportPerformFinalCopyAccountReport ledgerTransListReportPerformFinalCopyAccountReport = new LedgerTransListReportPerformFinalCopyAccountReport();
        ledgerTransListReportPerformFinalCopyAccountReport.initialize(_reportTmpTable, _finalStagingTable);

        SysDaQueryObject ledgerTransactionListStagingTmpQueryObject = ledgerTransListReportPerformFinalCopyAccountReport.createQueryObject();

        SysDaInsertObject ledgerTransactionListTmpInsertObject = ledgerTransListReportPerformFinalCopyAccountReport.createInsertObject();
        ledgerTransactionListTmpInsertObject.query(ledgerTransactionListStagingTmpQueryObject);

        SysDaInsertStatement ledgerTransactionListTmpInsertStatement = new SysDaInsertStatement();
        ledgerTransactionListTmpInsertStatement.insert(ledgerTransactionListTmpInsertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(LedgerTransactionListTmp _reportTmpTable, LedgerTransactionListStagingTmp _finalStagingTable)
    {
        reportTmpTable = _reportTmpTable;
        finalStagingTable = _finalStagingTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInsertObject</Name>
				<Source><![CDATA[
    private SysDaInsertObject createInsertObject()
    {
        SysDaInsertObject ledgerTransactionListTmpInsertObject = new SysDaInsertObject(reportTmpTable);

        this.addFieldsToInsertObject(ledgerTransactionListTmpInsertObject);

        return ledgerTransactionListTmpInsertObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldsToInsertObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>LedgerTransactionListTmp</c> table fields to an insert object.
    /// </summary>
    /// <param name = "_insertObject">
    /// The insert object to add the fields to.
    /// </param>
    protected void addFieldsToInsertObject(SysDaInsertObject _insertObject)
    {
        _insertObject.fields()
            .add(fieldStr(LedgerTransactionListTmp, AccountingCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListTmp, AccountingCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListTmp, AccountName))
            .add(fieldStr(LedgerTransactionListTmp, AccountNum))
            .add(fieldStr(LedgerTransactionListTmp, AcknowledgementDate))
            .add(fieldStr(LedgerTransactionListTmp, CurrencyCode))
            .add(fieldStr(LedgerTransactionListTmp, Dimension))
            .add(fieldStr(LedgerTransactionListTmp, GeneralJournalAccountEntry))
            .add(fieldStr(LedgerTransactionListTmp, GeneralJournalEntry))
            .add(fieldStr(LedgerTransactionListTmp, GeneralJournalEntryDataArea))
            .add(fieldStr(LedgerTransactionListTmp, JournalNumber))
            .add(fieldStr(LedgerTransactionListTmp, PostingType))
            .add(fieldStr(LedgerTransactionListTmp, ReportingCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListTmp, ReportingCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListTmp, Reversed))
            .add(fieldStr(LedgerTransactionListTmp, TraceNum))
            .add(fieldStr(LedgerTransactionListTmp, TransactionCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListTmp, TransactionCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListTmp, TransDate))
            .add(fieldStr(LedgerTransactionListTmp, Txt))
            .add(fieldStr(LedgerTransactionListTmp, Visibility))
            .add(fieldStr(LedgerTransactionListTmp, Voucher))
            .add(fieldStr(LedgerTransactionListTmp, TaxCode))
            .add(fieldStr(LedgerTransactionListTmp, TaxAmountMST));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject createQueryObject()
    {
        SysDaQueryObject ledgerTransactionListStagingTmpQueryObject = new SysDaQueryObject(finalStagingTable);

        this.addFieldsToQueryProjection(ledgerTransactionListStagingTmpQueryObject);
        this.addFieldsToQueryOrderByClause(ledgerTransactionListStagingTmpQueryObject);

        return ledgerTransactionListStagingTmpQueryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldsToQueryProjection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>LedgerTransactionListStagingTmp</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the fields to.
    /// </param>
    protected void addFieldsToQueryProjection(SysDaQueryObject _queryObject)
    {
        _queryObject.projection()
            .add(fieldStr(LedgerTransactionListStagingTmp, AccountingCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListStagingTmp, AccountingCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListStagingTmp, AccountName))
            .add(fieldStr(LedgerTransactionListStagingTmp, AccountNum))
            .add(fieldStr(LedgerTransactionListStagingTmp, AcknowledgementDate))
            .add(fieldStr(LedgerTransactionListStagingTmp, CurrencyCode))
            .add(fieldStr(LedgerTransactionListStagingTmp, Dimension))
            .add(fieldStr(LedgerTransactionListStagingTmp, GeneralJournalAccountEntry))
            .add(fieldStr(LedgerTransactionListStagingTmp, GeneralJournalEntry))
            .add(fieldStr(LedgerTransactionListStagingTmp, GeneralJournalEntryDataArea))
            .add(fieldStr(LedgerTransactionListStagingTmp, JournalNumber))
            .add(fieldStr(LedgerTransactionListStagingTmp, PostingType))
            .add(fieldStr(LedgerTransactionListStagingTmp, ReportingCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListStagingTmp, ReportingCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListStagingTmp, Reversed))
            .add(fieldStr(LedgerTransactionListStagingTmp, TraceNum))
            .add(fieldStr(LedgerTransactionListStagingTmp, TransactionCurrencyAmountCredit))
            .add(fieldStr(LedgerTransactionListStagingTmp, TransactionCurrencyAmountDebit))
            .add(fieldStr(LedgerTransactionListStagingTmp, TransDate))
            .add(fieldStr(LedgerTransactionListStagingTmp, Txt))
            .add(fieldStr(LedgerTransactionListStagingTmp, Visibility))
            .add(fieldStr(LedgerTransactionListStagingTmp, Voucher))
            .add(fieldStr(LedgerTransactionListStagingTmp, TaxCode))
            .add(fieldStr(LedgerTransactionListStagingTmp, TaxAmountMST));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFieldsToQueryOrderByClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the order by clause to the query.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the order of the selected rows.
    /// </param>
    protected void addFieldsToQueryOrderByClause(SysDaQueryObject _queryObject)
    {
        _queryObject.orderByClause()
            .add(fieldStr(LedgerTransactionListStagingTmp, AccountNum))
            .add(fieldStr(LedgerTransactionListStagingTmp, GeneralJournalEntryDataArea))
            .add(fieldStr(LedgerTransactionListStagingTmp, TransDate))
            .add(fieldStr(LedgerTransactionListStagingTmp, JournalNumber))
            .add(fieldStr(LedgerTransactionListStagingTmp, Voucher))
            .add(fieldStr(LedgerTransactionListStagingTmp, TaxCode));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>