<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQSendJournalPost</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchRFQSendJournalPost extends FormletterJournalPost
{
    VendRFQJour             vendRFQJour;
    VendRFQTrans            vendRFQTrans;
    PurchRFQTotals          purchTotals;
    PurchRFQTable           purchRFQTable;

    PurchRFQParmTable       purchRFQParmTable;
    PurchCalcTax            purchCalcTax;
    PurchRFQTotals          purchRFQTotals;
    PurchRFQCaseTable       purchRFQCaseTable;
    PurchRFQCaseLine        purchRFQCaseLine;
    PurchRFQParmUpdate      purchRFQParmUpdate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addToInventReportDimHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a record to the <c>InventReportDimHistory</c> table.
    /// </summary>
    /// <param name="_journalline">
    /// A journal line record.
    /// </param>
    protected void addToInventReportDimHistory(Common _journalline)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPostLedger</Name>
				<Source><![CDATA[
    protected boolean canPostLedger()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPostTax</Name>
				<Source><![CDATA[
    protected boolean canPostTax()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    protected DocumentStatus documentStatus()
    {
        return DocumentStatus::RFQ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a voucher number.
    /// </summary>
    /// <returns>
    /// A voucher number.
    /// </returns>
    protected Num getVoucher()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class.
    /// </summary>
    public void init()
    {
        vendRFQJour = this.parmJournalTable();
        purchRFQCaseTable  = PurchRFQCaseTable::find(vendRFQJour.rfqCaseId,true);
        select firstonly purchRFQParmUpdate where purchRFQParmUpdate.ParmId == purchRFQParmTable.ParmId;

        select firstonly forupdate purchRFQTable where purchRFQTable.rfqId == vendRFQJour.rfqId;

        super();

        purchRFQTotals = PurchRFQTotals::construct(purchRFQTable,
                                                   purchRFQParmUpdate.SpecQty);
        purchRFQTotals.calc();
        this.tax(purchRFQTotals.tax());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>Markup</c> object.
    /// </summary>
    protected void  initMarkup()
    {
        markup = new Markup(purchRFQTable.CurrencyCode);
        markup.setTax(this.tax());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRelatedLineTables</Name>
				<Source><![CDATA[
    protected void initRelatedLineTables()
    {
        super();

        purchRFQCaseLine = PurchRFQLine::find(vendRFQTrans.RFQId, vendRFQTrans.LineNum).purchRFQCaseLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current journal line record.
    /// </summary>
    /// <param name="_journalLine">
    /// A journal line record.
    /// </param>
    /// <returns>
    /// A journal line record.
    /// </returns>
    protected Common journalLine(Common _journalLine = vendRFQTrans)
    {
        vendRFQTrans = _journalLine as VendRFQTrans;
        return vendRFQTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalLineTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID for the journal line table.
    /// </summary>
    /// <returns>
    /// A table ID.
    /// </returns>
    protected TableId journalLineTableId()
    {
        return tableNum(VendRFQTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalLineType</Name>
				<Source><![CDATA[
    protected VendRFQTrans journalLineType()
    {
        return vendRFQTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalTable</Name>
				<Source><![CDATA[
    public Common parmJournalTable(Common _journalTable = vendRFQJour)
    {
        vendRFQJour = _journalTable as VendRFQJour;
        return vendRFQJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmTable</Name>
				<Source><![CDATA[
    public Common parmParmTable(Common _parmTable = purchRFQParmTable)
    {
        purchRFQParmTable = _parmTable as PurchRFQParmTable;

        return purchRFQParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTaxOnUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether tax should be posted on update.
    /// </summary>
    /// <returns>
    /// true if tax should be posted on update; otherwise, false.
    /// </returns>
    protected boolean postTaxOnUpdate()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs tax postings.
    /// </summary>
    /// <param name="_post">
    /// A Boolean value that indicates whether posting should occur.
    /// </param>
    protected void postTax(boolean _post)
    {
        super(_post);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source line record for the current journal line.
    /// </summary>
    /// <returns>
    /// A source line record.
    /// </returns>
    protected Common sourceLine()
    {
        return purchRFQCaseLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the source header record for the journal header.
    /// </summary>
    /// <returns>
    /// A source header record.
    /// </returns>
    protected Common sourceTable()
    {
        return purchRFQCaseTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tradeCalcTax</Name>
				<Source><![CDATA[
    protected Object tradeCalcTax()
    {
        return PurchCalcTax::construct(this.parmJournalTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionLogTxt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an instance of the <c>TransTxt</c> object.
    /// </summary>
    /// <returns>
    /// An instance of the <c>TransTxt</c> object.
    /// </returns>
    protected TransTxt transactionLogTxt()
    {
        return "@SYS106003";
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionLogType</Name>
				<Source><![CDATA[
    protected TransactionLogType  transactionLogType()
    {
        return TransactionLogType::PurchRFQ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction date.
    /// </summary>
    /// <returns>
    /// A transaction date.
    /// </returns>
    protected TransDate updateDate()
    {
        return vendRFQJour.rfqDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJournalTable</Name>
				<Source><![CDATA[
    protected void updateJournalTable()
    {
        super();

        vendRFQJour.initFromPurchRFQTotals(purchRFQTotals);
        vendRFQJour.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSourceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the source table for the journal header.
    /// </summary>
    protected void updateSourceTable()
    {
        purchRFQTable = PurchRFQTable::find(purchRFQTable.RFQId, true);
        purchRFQTable.updateStatus();

        if (purchRFQParmUpdate.UseVendorPrices)
        {
            purchRFQTable.updateMultiLineDisc();
            purchRFQTable.updateFinalDisc();
            purchRFQTable.doUpdate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchRFQSendJournalPost construct()
    {
        return new PurchRFQSendJournalPost();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>