<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmOpportunityHierarchyProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case Hierarchy.
/// </summary>
[ExportMetadataAttribute('CaseIHierarchy', 'Opportunity'),ExportAttribute('Dynamics.AX.Application.CaseIHierarchy')]
class smmOpportunityHierarchyProvider implements CaseIHierarchy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getProcessButtonMenuItem</Name>
				<Source><![CDATA[
    public Str getProcessButtonMenuItem(HierarchyType _hierarchyType)
    {
        return menuitemDisplayStr(smmProcessSalesInstance);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hierarchyType2fieldId</Name>
				<Source><![CDATA[
    public FieldId hierarchyType2fieldId(HierarchyType _hierarchyType)
    {
        return fieldNum(smmOpportunityTable, OpportunityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hierarchyType2ParentType</Name>
				<Source><![CDATA[
    public smmActivityParentType hierarchyType2ParentType(HierarchyType _hierarchyType)
    {
        return smmActivityParentType::Opportunity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hierarchyType2tableId</Name>
				<Source><![CDATA[
    public RefTableId hierarchyType2tableId(HierarchyType _hierarchyType)
    {
        return tableNum(smmOpportunityTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isHierarchyTypeCRM</Name>
				<Source><![CDATA[
    public boolean isHierarchyTypeCRM(HierarchyType _hierarchyType)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isHierarchyTypeProject</Name>
				<Source><![CDATA[
    public boolean isHierarchyTypeProject(HierarchyType _hierarchyType)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsForHierarchyForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Show or hide the case inquiry button.
    /// </summary>
    /// <param name = "_hierarchyType">
    /// The <c>HierarchyType</c>.
    /// </param>
    /// <param name = "_page">
    /// The list page from the form.
    /// </param>
    [SubscribesTo(classStr(HierarchyInteraction), delegatestr(HierarchyInteraction, setControlsForHierarchyForm))]
    public static void setControlsForHierarchyForm(HierarchyType _hierarchyType, Page _page)
    {
        if (_hierarchyType == HierarchyType::Opportunity)
        {
            _page.actionPaneControlVisible(formControlStr(Hierarchy, inquiryButton_Opportunity), true);
        }
        else
        {
            _page.actionPaneControlVisible(formControlStr(Hierarchy, inquiryButton_Opportunity), false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHierarchyTypeWithTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>Hierarchy.getHierarchyTypeWithTableId()</c> event.
    /// </summary>
    /// <param name = "_eventArgs">
    /// The arguments for the event.
    /// </param>
    /// <param name = "_tableId">
    /// The table ID of the table integrating with Case.
    /// </param>
    [SubscribesTo(tableStr(Hierarchy), delegatestr(Hierarchy, getHierarchyTypeWithTableId))]
    public static void getHierarchyTypeWithTableId(CaseHierarchyTypeEventArgs _args, TableId _tableId)
    {
        if (_tableId == tableNum(smmOpportunityTable))
        {
            _args.parmHierarchyType(HierarchyType::Opportunity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentType2HierarchyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>Hierarchy.parentType2HierarchyType()</c> event.
    /// </summary>
    /// <param name = "_eventArgs">
    /// The arguments for the event.
    /// </param>
    /// <param name = "_tableId">
    /// The table ID of the table integrating with Case.
    /// </param>
    [SubscribesTo(tableStr(Hierarchy), delegatestr(Hierarchy, getHierarchyTypeWithParentType))]
    public static void parentType2HierarchyType(CaseHierarchyTypeEventArgs _args, smmActivityParentType _parentType)
    {
        if (_parentType == smmActivityParentType::Opportunity)
        {
            _args.parmHierarchyType(HierarchyType::Opportunity);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>