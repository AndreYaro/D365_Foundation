<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationWaveProcessingDataCleanupPerformanceTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Implements instrumentation for a performance-tracked task.
/// </summary>
internal class WHSInstrumentationWaveProcessingDataCleanupPerformanceTask extends WHSInstrumentationPerformanceTask
{
    private const str CategoryWaveProcessingDataCleanup         = 'waveProcessingDataCleanup';

    private const str ParameterNameReplenTmpWorkLinesDeleted    = 'replenTmpWorkLinesDeleted';
    private const str ParameterNameTmpReplenWorkLinksDeleted    = 'tmpReplenWorkLinks';
    private const str ParameterNameWaveCleanupType              = 'waveCleanupType';
    private const str ParameterNameDeleteTmpWorkLines           = 'deleteTmpWorkLines';
    private const str ParameterNameDeleteQualityOrders          = 'deleteQualityOrders';
    private const str ParameterNameDeleteWaveFailedShipments    = 'deleteWaveFailedShipments';
    private const str ParameterNameCleanUpCreatedLoads          = 'cleanUpCreatedLoads';
    private const str ParameterNameAdjustLoadLineDeltaQuantity  = 'adjustLoadLineDeltaQuantity';
    private const str ParameterNameResetWaveTable               = 'resetWaveTable';
    private const str ParameterNameDeleteWaveCreatedLoadRecords = 'deleteWaveCreatedLoadRecords';
    private const str ParameterNameDeleteWaveCreatedQualityOrderRecords = 'deleteWaveCreatedQualityOrderRecords';
    private const str ParameterNameDeleteWaveUpdatedLoadLineRecords = 'deleteWaveUpdatedLoadLineRecords';
    private const str ParameterNameDeleteWaveProcessingStatusRecords = 'deleteWaveProcessingStatusRecords';
    private const str ParameterNameDeleteWaveStepControllerRecords = 'deleteWaveStepControllerRecords';
    private const str ParameterNameDeleteWavePendingAllocationRecords = 'deleteWavePendingAllocationRecords';
    private const str ParameterNameDeleteWaveDemandReplenishmentWorkRecords = 'deleteWaveDemandReplenishmentWorkRecords';
    private const str ParameterNameDeleteWaveErroredIndicatorRecords = 'deleteWaveErroredIndicatorRecords';
    private const str ParameterNameDeleteWaveLabelRecords       = 'deleteWaveLabelRecords';
    private const str ParameterNameDeleteSortPositionRecords    = 'deleteSortPositionRecords';
    private const str ParameterNameDeleteSortPositionCriteriaRecords = 'deleteSortPositionCriteriaRecords';

    private const str ParameterNamePostMethodName               = 'postMethodName';
    private const str ParameterNameErroredWave                  = 'erroredWave';
    private const str ParameterNameWaveStatus                   = 'waveStatus';


    private RefRecId            waveTableRecId;
    private WHSWaveExecutionID  waveExecutionId;
    private str                 waveCleanupType;
    private WHSPostMethodName   postMethodName;
    private boolean             erroredWave;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(RefRecId _waveTableRecId, WHSWaveExecutionID _waveExecutionId, str _action, str _waveCleanupType)
    {        
        waveTableRecId = _waveTableRecId;
        waveExecutionId = _waveExecutionId;
        waveCleanupType = _waveCleanupType;
        super(CategoryWaveProcessingDataCleanup, _action);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPostMethod</Name>
				<Source><![CDATA[
    public static WHSInstrumentationWaveProcessingDataCleanupPerformanceTask newPostMethod(
        RefRecId _waveTableRecId,
        WHSWaveExecutionID _waveExecutionId,
        str _action,
        str _waveCleanupType,
        WHSPostMethodName _postMethodName,
        boolean _erroredWave)
    {
        WHSInstrumentationWaveProcessingDataCleanupPerformanceTask task = new WHSInstrumentationWaveProcessingDataCleanupPerformanceTask(_waveTableRecId, _waveExecutionId, _action, _waveCleanupType);
        
        task.postMethodName = _postMethodName;
        task.erroredWave = _erroredWave;

        return task;
    }

]]></Source>
			</Method>
			<Method>
				<Name>waveCleanupType</Name>
				<Source><![CDATA[
    public str waveCleanupType()
    {
        return waveCleanupType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preTaskStart</Name>
				<Source><![CDATA[
    protected void preTaskStart()
    {
        if (WHSInstrumentationPerformanceTask::IsPostTaskStartFlightEnabled)
        {
            return;
        }

        this.setWaveProcessingDataCleanupParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTaskStart</Name>
				<Source><![CDATA[
    protected void postTaskStart()
    {
        if (!WHSInstrumentationPerformanceTask::IsPostTaskStartFlightEnabled)
        {
            return;
        }

        this.setWaveProcessingDataCleanupParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWaveProcessingDataCleanupParameters</Name>
				<Source><![CDATA[
    private void setWaveProcessingDataCleanupParameters()
    {
        if (waveTableRecId)
        {
            this.setParameter(ParameterNameWaveId, int642Str(waveTableRecId));

            this.setParameter(ParameterNameWaveStatus, enum2Symbol(enumNum(WHSWaveStatus), enum2int(WHSWaveTable::findByRecId(waveTableRecId).WaveStatus)));

        }

        if (waveExecutionId != '')
        {
            this.setParameter(ParameterNameWaveExecutionId, WHSInstrumentationPerformanceTask::getHashValue(waveExecutionId));
        }

        if (waveCleanupType)
        {
            this.setParameter(ParameterNameWaveCleanupType, waveCleanupType);
        }

        if (postMethodName)
        {
            this.setParameter(ParameterNamePostMethodName, postMethodName);
            this.setParameter(ParameterNameErroredWave, int2Str(erroredWave));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReplenTmpWorkLinesDeleted</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setReplenTmpWorkLinesDeleted(NumberOfRecords _replenTmpWorkLinesDeleted)
    {
        return this.setParameter(ParameterNameReplenTmpWorkLinesDeleted, int642Str(_replenTmpWorkLinesDeleted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTmpReplenWorkLinksDeleted</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setTmpReplenWorkLinksDeleted(NumberOfRecords _tmpReplenWorkLinksDeleted)
    {
        return this.setParameter(ParameterNameTmpReplenWorkLinksDeleted, int642Str(_tmpReplenWorkLinksDeleted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteTmpWorkLines</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteTmpWorkLines(NumberOfRecords _deleteTmpWorkLines)
    {
        return this.setParameter(ParameterNameDeleteTmpWorkLines, int642Str(_deleteTmpWorkLines));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteQualityOrders</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteQualityOrders(NumberOfRecords _deleteQualityOrders)
    {
        return this.setParameter(ParameterNameDeleteQualityOrders, int642Str(_deleteQualityOrders));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveFailedShipments</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveFailedShipments(NumberOfRecords _deleteWaveFailedShipments)
    {
        return this.setParameter(ParameterNameDeleteWaveFailedShipments, int642Str(_deleteWaveFailedShipments));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCleanUpCreatedLoads</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setCleanUpCreatedLoads(NumberOfRecords _cleanUpCreatedLoads)
    {
        return this.setParameter(ParameterNameCleanUpCreatedLoads, int642Str(_cleanUpCreatedLoads));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdjustLoadLineDeltaQuantity</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setAdjustLoadLineDeltaQuantity(NumberOfRecords _adjustLoadLineDeltaQuantity)
    {
        return this.setParameter(ParameterNameAdjustLoadLineDeltaQuantity, int642Str(_adjustLoadLineDeltaQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResetWaveTable</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setResetWaveTable(NumberOfRecords _resetWaveTable)
    {
        return this.setParameter(ParameterNameResetWaveTable, int642Str(_resetWaveTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveCreatedLoadRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveCreatedLoadRecords(NumberOfRecords _deleteWaveCreatedLoadRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveCreatedLoadRecords, int642Str(_deleteWaveCreatedLoadRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveCreatedQualityOrderRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveCreatedQualityOrderRecords(NumberOfRecords _deleteWaveCreatedQualityOrderRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveCreatedQualityOrderRecords, int642Str(_deleteWaveCreatedQualityOrderRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveUpdatedLoadLineRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveUpdatedLoadLineRecords(NumberOfRecords _deleteWaveUpdatedLoadLineRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveUpdatedLoadLineRecords, int642Str(_deleteWaveUpdatedLoadLineRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveProcessingStatusRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveProcessingStatusRecords(NumberOfRecords _deleteWaveProcessingStatusRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveProcessingStatusRecords, int642Str(_deleteWaveProcessingStatusRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveStepControllerRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveStepControllerRecords(NumberOfRecords _deleteWaveStepControllerRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveStepControllerRecords, int642Str(_deleteWaveStepControllerRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWavePendingAllocationRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWavePendingAllocationRecords(NumberOfRecords _deleteWavePendingAllocationRecords)
    {
        return this.setParameter(ParameterNameDeleteWavePendingAllocationRecords, int642Str(_deleteWavePendingAllocationRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveDemandReplenishmentWorkRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveDemandReplenishmentWorkRecords(NumberOfRecords _deleteWaveDemandReplenishmentWorkRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveDemandReplenishmentWorkRecords, int642Str(_deleteWaveDemandReplenishmentWorkRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveErroredIndicatorRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveErroredIndicatorRecords(NumberOfRecords _deleteWaveErroredIndicatorRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveErroredIndicatorRecords, int642Str(_deleteWaveErroredIndicatorRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteWaveLabelRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteWaveLabelRecords(NumberOfRecords _deleteWaveLabelRecords)
    {
        return this.setParameter(ParameterNameDeleteWaveLabelRecords, int642Str(_deleteWaveLabelRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteSortPositionRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteSortPositionRecords(NumberOfRecords _deleteSortPositionRecords)
    {
        return this.setParameter(ParameterNameDeleteSortPositionRecords, int642Str(_deleteSortPositionRecords));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeleteSortPositionCriteriaRecords</Name>
				<Source><![CDATA[
    public WHSInstrumentationWaveProcessingDataCleanupPerformanceTask setDeleteSortPositionCriteriaRecords(NumberOfRecords _deleteSortPositionCriteriaRecords)
    {
        return this.setParameter(ParameterNameDeleteSortPositionCriteriaRecords, int642Str(_deleteSortPositionCriteriaRecords));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>