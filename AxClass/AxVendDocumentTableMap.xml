<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendDocumentTableMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class AxVendDocumentTableMap extends AxApplicationBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasToIssueFiscalDocument_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the fiscal document must be issued by this company for this vendor invoice.
    /// </summary>
    /// <returns>true if fiscal document is issued by own company; false if it's third-party.</returns>
    public boolean hasToIssueFiscalDocument_BR()
    {
        return this.vendDocumentTableMap().hasToIssueFiscalDocument_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an enumeration value that specificies the internal or external context.
    /// </summary>
    /// <param name="_inputStatus">
    ///    An enumeration value that specifies the new input status; optional.
    /// </param>
    /// <returns>
    ///    Internal or external.
    /// </returns>
    /// <remarks>
    ///    The <c>AxVendDocumentTableMap</c> class is intended to work with the client and the service model.
    ///    This variable is exposed so it is controlled from the client and the service models.The enumeration
    ///    value internal represents the application, while the enumeration value external represents the user
    ///    or application.
    /// </remarks>
    public int inputStatus(InternalExternal _inputStatus = inputStatus)
    {
        int inputStatusReturn;

        inputStatusReturn = super(_inputStatus);

        return inputStatusReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCancelDocument_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether this invoice is associated with a cancellation purchase order.
    /// </summary>
    /// <returns>
    /// true if the invoice is not associated with a cancellation purchase order; otherwise, false.
    /// </returns>
    public boolean isCancelDocument_BR()
    {
        return this.vendDocumentTableMap().isCancelDocument_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNonPO</Name>
				<Source><![CDATA[
    public boolean isNonPO()
    {
        return this.vendDocumentTableMap().isNonPO();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTableFieldSet</Name>
				<Source><![CDATA[
    public boolean isTableFieldSet(fieldId _fieldId)
    {
        fieldId fieldIdInTable = VendDocumentUtil::fieldNum(_fieldId, this.vendDocumentTableMap().TableId);
        return this.isFieldSet(fieldIdInTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsTheFiscalDocumentIssuer_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the fiscal document must be issued by this company for this vendor invoice of if the vendor invoice is cancelling a
    /// fiscal document that had been issued by the company.
    /// </summary>
    /// <returns>true if fiscal document is issued or had been issued by own company; false if it's third-party.</returns>
    public boolean IsTheFiscalDocumentIssuer_BR()
    {
        return this.vendDocumentTableMap().IsTheFiscalDocumentIssuer_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLCImportLine</Name>
				<Source><![CDATA[
    public abstract BankLCLineRefRecId parmBankLCImportLine(BankLCLineRefRecId _bankLCImportLine = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBatchAdministration</Name>
				<Source><![CDATA[
    public abstract BatchAdministration parmBatchAdministration(BatchAdministration _batchAdministration = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public abstract VendCashDiscAmount parmCashDisc(VendCashDiscAmount _cashDisc = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscCode</Name>
				<Source><![CDATA[
    public abstract VendCashDiscCode parmCashDiscCode(VendCashDiscCode _cashDiscCode = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscDate</Name>
				<Source><![CDATA[
    public abstract VendCashDiscDate parmCashDiscDate(VendCashDiscDate _cashDiscDate = dateNull())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public abstract DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public abstract AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest _countyOrigDest = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public abstract str parmCurrencyCode(str _currencyCode = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public abstract VendName parmDeliveryName(VendName _deliveryName = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public abstract LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public abstract InvoiceDescription parmDescription(InvoiceDescription _description = "")
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentDate</Name>
				<Source><![CDATA[
    public abstract DocumentDate parmDocumentDate(DocumentDate _documentDate = dateNull())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNum</Name>
				<Source><![CDATA[
    public abstract DocumentNum parmDocumentNum(DocumentNum _documentNum = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentOrigin</Name>
				<Source><![CDATA[
    public abstract DocumentOrigin parmDocumentOrigin(DocumentOrigin _origin = DocumentOrigin::Manual)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDateTime</Name>
				<Source><![CDATA[
    public abstract EndDateTime parmEndDateTime(EndDateTime _endDateTime = DateTimeUtil::minValue())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDisc</Name>
				<Source><![CDATA[
    public abstract PurchEndDiscAmount parmEndDisc(PurchEndDiscAmount _endDisc = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnterpriseNumber</Name>
				<Source><![CDATA[
    public abstract TaxEnterpriseNumber parmEnterpriseNumber(TaxEnterpriseNumber _enterpriseNumber = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEUROTriangulation</Name>
				<Source><![CDATA[
    public abstract EUROTriangulation parmEUROTriangulation(EUROTriangulation _euroTriangulation = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchRate</Name>
				<Source><![CDATA[
    public abstract VendExchRate parmExchRate(VendExchRate _exchRate = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchRateSecondary</Name>
				<Source><![CDATA[
    public abstract ExchrateSecondary parmExchRateSecondary(ExchrateSecondary _exchrateSecondary = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    public abstract PurchFixedDueDate parmFixedDueDate(PurchFixedDueDate _fixedDueDate = dateNull())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedExchRate</Name>
				<Source><![CDATA[
    public abstract FixedExchRate parmFixedExchRate(FixedExchRate _fixedExchRate = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHold</Name>
				<Source><![CDATA[
    public abstract Hold parmHold(Hold _hold = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIgnoreCalculatedSalesTax</Name>
				<Source><![CDATA[
    public abstract NoYes parmIgnoreCalculatedSalesTax(NoYes _ignore = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public abstract InclTax parmInclTax(InclTax _inclTax = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public abstract str parmInvoiceAccount(str _invoiceAccount = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceReleaseDate</Name>
				<Source><![CDATA[
    public abstract InvoiceReleaseDate parmInvoiceReleaseDate(InvoiceReleaseDate _invoiceReleaseDate = utcDateTimeNull())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceRoundOff</Name>
				<Source><![CDATA[
    public abstract RoundOff parmInvoiceRoundOff(RoundOff _invoiceRoundOff = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLastMatchVariance</Name>
				<Source><![CDATA[
    public abstract LastMatchVariance parmLastMatchVariance(LastMatchVariance _lastMatchVariance = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLog</Name>
				<Source><![CDATA[
    public abstract LogText parmLog(LogText _log = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNum</Name>
				<Source><![CDATA[
    public abstract Num parmNum(Num _num = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
    public abstract NumberSequenceGroupId parmNumberSequenceGroup(NumberSequenceGroupId _numberSequenceGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public abstract str parmOrderAccount(str _orderAccount = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrdering</Name>
				<Source><![CDATA[
    public abstract DocumentStatus parmOrdering(DocumentStatus _ordering = DocumentStatus::None)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmId</Name>
				<Source><![CDATA[
    public abstract ParmId parmParmId(ParmId _parmId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmJobStatus</Name>
				<Source><![CDATA[
    public abstract ParmJobStatus parmParmJobStatus(ParmJobStatus _parmJobStatus = ParmJobStatus::Executed)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public abstract VendPaymTermId parmPayment(VendPaymTermId _payment = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentSched</Name>
				<Source><![CDATA[
    public abstract PaymSchedId parmPaymentSched(PaymSchedId _paymentSched = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymId</Name>
				<Source><![CDATA[
    public abstract PaymId parmPaymId(PaymId _paymId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public abstract VendPaymMode parmPaymMode(VendPaymMode _paymMode = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public abstract PaymSpec parmPaymSpec(PaymSpec _paymSpec = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public abstract IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile</Name>
				<Source><![CDATA[
    public abstract VendPostingProfile parmPostingProfile(VendPostingProfile _postingProfile = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchAgreementHeader_PSN</Name>
				<Source><![CDATA[
    public abstract recId parmPurchAgreementHeader_PSN(Recid _purchAgreementHeader = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchId</Name>
				<Source><![CDATA[
    public abstract PurchId parmPurchId(PurchId _purchId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchName</Name>
				<Source><![CDATA[
    public abstract PurchName parmPurchName(PurchName _purchName = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReCalculate</Name>
				<Source><![CDATA[
    public abstract boolean parmReCalculate(boolean _reCalculate = boolean::false)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseDateComment</Name>
				<Source><![CDATA[
    public abstract ReleaseDateComment parmReleaseDateComment(ReleaseDateComment _releaseDateComment = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemittanceLocation</Name>
				<Source><![CDATA[
    public abstract RemittanceLocation parmRemittanceLocation(RemittanceLocation _remittanceLocation = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleVoucher</Name>
				<Source><![CDATA[
    public abstract PurchSettlementType parmSettleVoucher(PurchSettlementType _settleVoucher = SettlementType::None)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocumentHeader</Name>
				<Source><![CDATA[
    public abstract SourceDocumentHeaderRecId parmSourceDocumentHeader(SourceDocumentHeaderRecId _sourceDocumentHeader = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDateTime</Name>
				<Source><![CDATA[
    public abstract StartDateTime parmStartDateTime(StartDateTime _startDateTime = DateTimeUtil::minValue())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public abstract IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStorno</Name>
				<Source><![CDATA[
    public abstract NoYes parmStorno(NoYes _storno = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableRefId</Name>
				<Source><![CDATA[
    public abstract TradeLineRefId parmTableRefId(TradeLineRefId _tableRefId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public abstract TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxRoundOff</Name>
				<Source><![CDATA[
    public abstract TaxAmountCur parmTaxRoundOff(TaxAmountCur _taxRoundOff = 0)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public abstract IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    public abstract TransDate parmTransDate(TransDate _transDate = dateNull())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public abstract IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVarianceApproved</Name>
				<Source><![CDATA[
    public abstract VarianceApproved parmVarianceApproved(VarianceApproved _varianceApproved = NoYes::No)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVarianceApprovedDateTime</Name>
				<Source><![CDATA[
    public abstract VarianceApprovedDateTime parmVarianceApprovedDateTime(VarianceApprovedDateTime _varianceApprovedDateTime = DateTimeUtil::minValue())
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVarianceComment</Name>
				<Source><![CDATA[
    public abstract VarianceComment parmVarianceComment(VarianceComment _varianceComment = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNum</Name>
				<Source><![CDATA[
    public abstract VATNumJournal parmVATNum(VATNumJournal _vatNum = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendBankAccountID</Name>
				<Source><![CDATA[
    public abstract VendBankAccountId parmVendBankAccountID(VendBankAccountId _vendBankAccountId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceGroup</Name>
				<Source><![CDATA[
    public abstract str parmVendInvoiceGroup(str _vendInvoiceGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendInvoiceSaveStatus</Name>
				<Source><![CDATA[
    public abstract VendInvoiceSaveStatus parmVendInvoiceSaveStatus(VendInvoiceSaveStatus _vendInvoiceSaveStatus = VendInvoiceSaveStatus::New)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendPaymentGroup</Name>
				<Source><![CDATA[
    public abstract VendPaymentGrouping parmVendPaymentGroup(VendPaymentGrouping _vendPaymentGroup = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    public abstract PurchTable purchTable()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>validateField</c> method for the current record and upon failure throws an execption
    ///    or logs an error.
    /// </summary>
    /// <param name="_field">
    ///    The field ID that corresponds with the field to be validated.
    /// </param>
    /// <remarks>
    ///    This method overrides the base implementation, so the <c>AxVendInvoiceInfoTableMap</c> class
    ///    instance can be passed to the corresponding <c>validateField</c> table method.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    An error was found while validating the record.
    /// </exception>
    protected void validateField(fieldId _field)
    {
        if (!this.checkTableValidateField(_field))
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the validate field method of the table that stores this entity.
    /// </summary>
    /// <param name = "_fieldId"> The ID of the field to be validated.</param>
    /// <returns>true if validation succeeds, false otherwise.</returns>
    protected abstract boolean checkTableValidateField(FieldId _fieldId)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>validateWrite</c> method for the current record and upon failure throws an exception
    ///    or logs an error.
    /// </summary>
    /// <remarks>
    ///    This method overrides the base implementation, so the this <c>AxVendInvoiceInfoTableMap</c> class
    ///    instance can be passed to the corresponding <c>validateWrite</c> table method.If the
    ///    <c>continueOnError</c> parameter is true, then an exception will not be thrown.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    ///    An error was found while validating the record.
    /// </exception>
    protected void validateWrite()
    {
        if (!this.checkTableValidateWrite())
        {
            if (continueOnError)
            {
                error("@SYS98197");
            }
            else
            {
                throw error("@SYS98197");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the validate write method of the table that stores this entity.
    /// </summary>
    /// <returns>true if validation succeeds, false otherwise.</returns>
    protected abstract boolean checkTableValidateWrite()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendDocumentTableMap</Name>
				<Source><![CDATA[
    public abstract VendDocumentTableMap vendDocumentTableMap(VendDocumentTableMap _vendDocumentTable = null)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable_InvoiceAccount</Name>
				<Source><![CDATA[
    public abstract VendTable vendTable_InvoiceAccount()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>