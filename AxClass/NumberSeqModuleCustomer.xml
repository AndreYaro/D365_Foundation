<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleCustomer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is use to load customer number seq module.
/// </summary>
public class NumberSeqModuleCustomer extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs module-specific initialization of a <c>NumberSequenceReference</c> object.
    /// </summary>
    /// <param name="_reference">
    ///    The instance of the <c>NumberSequenceReference</c> object to initialize.
    /// </param>
    /// <param name="_datatype">
    ///    The data type to be used by the <c>NumberSequenceReference</c> object.
    /// </param>
    /// <param name="_scope">
    ///    The scope to be used by the <c>NumberSequenceReference</c> object.
    /// </param>
    /// <remarks>
    ///    This is the place to implement the specific initialization of a <c>NumberSequenceReference</c>
    ///    object for fields that are too dynamic to be configured on the <c>NumberSequenceDatatype</c>
    ///    object. The default implementation does nothing, but can be overridden to set dynamic values for
    ///    the <c>AllowSameAs</c> property, based on the context specified by the
    ///    <c>NumberSequenceDatatype</c> and <c>NumberSequenceScope</c> objects.
    /// </remarks>
    public void initializeReference(NumberSequenceReference _reference, NumberSeqDatatype _datatype, NumberSeqScope _scope)
    {
        #ISOCountryRegionCodes

        super(_reference, _datatype, _scope);

        switch (_datatype.parmDatatypeId())
        {
            case extendedTypeNum(CustInvoiceVoucher):
            case extendedTypeNum(CustCreditNoteVoucher):
                if (MultipleTaxIdReportingHelper::isLegalEntityOrAddressInCountryRegion(
                    [#isoIT], MultipleTaxIdScope::VATDeclaration))
                {
                    _reference.AllowSameAs = true;
                }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
/// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    /*
    Detailed description of how to setup references for number sequences can
    be found i method loadModule() on the 'father' class: NumberSeqApplicationModule.
    */

    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();
        /* Setup Customer numbers */

        datatype.parmDatatypeId(extendedTypeNum(CustAccount));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS53967"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(OneTimeCustomerAccount));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS53969"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup posting numbers */

        datatype.parmDatatypeId(extendedTypeNum(CustInvoiceId));
        datatype.parmReferenceLabel(literalStr("@SYS23028"));
        datatype.parmReferenceHelp(literalStr("@SYS53968"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCreditNoteId));
        datatype.parmReferenceLabel(literalStr("@SYS73517"));
        datatype.parmReferenceHelp(literalStr("@SYS53970"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(4);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CollectionLetterNum));
        datatype.parmReferenceHelp(literalStr("@SYS53972"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(5);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(InterestNote));
        datatype.parmReferenceHelp(literalStr("@SYS53973"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(6);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustPaymId));
        datatype.parmReferenceHelp(literalStr("@SYS53974"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(7);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustOverPaymId));
        datatype.parmReferenceHelp(literalStr("@SYS54075"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(8);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustBillOfExchangeID));
        datatype.parmReferenceHelp(literalStr("@SYS71452"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(9);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup voucher numbers */

        datatype.parmDatatypeId(extendedTypeNum(CustInvoiceVoucher));
        datatype.parmReferenceLabel(literalStr("@SYS73519"));
        datatype.parmReferenceHelp(literalStr("@SYS53979"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(CustInvoiceId));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(30000000);
        datatype.parmWizardHighest(39999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(10);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCreditNoteVoucher));
        datatype.parmReferenceLabel(literalStr("@SYS73520"));
        datatype.parmReferenceHelp(literalStr("@SYS53980"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(CustCreditNoteId));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(40000000);
        datatype.parmWizardHighest(49999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(11);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CollectionLetterVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53977"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(50000000);
        datatype.parmWizardHighest(59999999);

        datatype.parmIsGroupEnabled(
            FeatureStateProvider::isFeatureEnabled(ChronologicalNumberingFeature::instance())
                ? NoYes::Yes
                : NoYes::No);

        datatype.parmSortField(12);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(InterestNoteVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53978"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(60000000);
        datatype.parmWizardHighest(69999999);

        datatype.parmIsGroupEnabled(
            FeatureStateProvider::isFeatureEnabled(ChronologicalNumberingFeature::instance())
                ? NoYes::Yes
                : NoYes::No);

        datatype.parmSortField(13);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustExchAdjVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS54013"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(70000000);
        datatype.parmWizardHighest(79999999);
        datatype.parmSortField(14);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustPaymVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS53985"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(80000000);
        datatype.parmWizardHighest(89999999);
        datatype.parmSortField(15);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCloseVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS54012"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(90000000);
        datatype.parmWizardHighest(99999999);
        datatype.parmSortField(16);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(BankRemittanceFileIdCust));
        datatype.parmReferenceHelp(literalStr("@SYS58060"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(18);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(RecurrenceInvoiceId));
        datatype.parmConfigurationKeyId(configurationKeyNum(ledgerBasic));
        datatype.parmReferenceHelp(literalStr("@SYS318923"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(19);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free text debit note
        datatype.parmDatatypeId(extendedTypeNum(CustDebitNoteId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the free text debit note.
        datatype.parmReferenceHelp(literalStr("@SYS4082875"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free text debit note voucher
        datatype.parmDatatypeId(extendedTypeNum(CustDebitNoteVoucher));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the free text debit note voucher.
        datatype.parmReferenceHelp(literalStr("@SYS4082878"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free text tax invoice
        datatype.parmDatatypeId(extendedTypeNum(CustTaxInvoiceId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the free text tax invoice.
        datatype.parmReferenceHelp(literalStr("@SYS4082880"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(22);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free text tax invoice voucher
        datatype.parmDatatypeId(extendedTypeNum(CustTaxInvoiceVoucher));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the free text tax invoice voucher.
        datatype.parmReferenceHelp(literalStr("@SYS4082881"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(23);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Receipt number
        datatype.parmDatatypeId(extendedTypeNum(CustReceiptId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the receipts.
        datatype.parmReferenceHelp(literalStr("@SYS4082877"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(24);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Tax invoice/Receipt number
        datatype.parmDatatypeId(extendedTypeNum(CustTaxInvoiceReceiptId));
        datatype.parmConfigurationKeyId(configurationKeyNum(TaxThailandGovCertification));
        // Select the number sequence to associate with the receipts/tax invoices.
        datatype.parmReferenceHelp(literalStr("@SYS4082876"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(25);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Consolidation Id
        datatype.parmDatatypeId(extendedTypeNum(CustConsId_JP));
        datatype.parmReferenceHelp(literalStr("@GLS62930"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Invoices
        datatype.parmDatatypeId(extendedTypeNum(CustAmountDiffFactureId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101281"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Sales Books numbers
        datatype.parmDatatypeId(extendedTypeNum(SalesBookId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101244"));
        datatype.parmReferenceLabel(literalStr("@GLS101510"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(22);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Number reference for payment orders
        datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrder_Cust_RU));
        datatype.parmReferenceHelp(literalStr("@GLS101370"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(23);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Number reference for payment orders in currency
        datatype.parmDatatypeId(extendedTypeNum(BankPaymentOrderCur_Cust_RU));
        datatype.parmReferenceHelp(literalStr("@GLS102276"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(24);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // RTax25 Bad debts
        datatype.parmDatatypeId(extendedTypeNum(RTax25DebtDebitVoucher));
        datatype.parmReferenceHelp(literalStr("@GLS104208"));
        datatype.parmReferenceLabel(literalStr("@GLS104209"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(500000000);
        datatype.parmWizardHighest(509999999);
        datatype.parmSortField(25);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(RTax25DebtReserveVoucher));
        datatype.parmReferenceHelp(literalStr("@GLS104137"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(510000000);
        datatype.parmWizardHighest(519999999);
        datatype.parmSortField(26);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Facture
        datatype.parmDatatypeId(extendedTypeNum(CustFactureId_RU));
        datatype.parmReferenceLabel(literalStr("@GLS106861"));
        datatype.parmReferenceHelp(literalStr("@GLS104536"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(27);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(FactureExternalId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS106862"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(28);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // CZ Prepayments, Tax Document number
        datatype.parmDatatypeId(extendedTypeNum(CzTaxDocumentNum_Cust));
        datatype.parmReferenceLabel(literalStr("@GLS108299"));
        datatype.parmReferenceHelp(literalStr("@GLS108300"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(29);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // CZ Prepayments, Tax Credit Memo number
        datatype.parmDatatypeId(extendedTypeNum(CzTaxCreditMemoNum_Cust));
        datatype.parmReferenceLabel(literalStr("@GLS108319"));
        datatype.parmReferenceHelp(literalStr("@GLS108320"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(30);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // RU corrective documents
        datatype.parmDatatypeId(extendedTypeNum(CustCorrectInvoiceId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111926"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(31);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCorrectCreditNoteId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111927"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(32);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCorrectInvoiceVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111928"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(CustCorrectInvoiceId_RU));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(30000000);
        datatype.parmWizardHighest(39999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(33);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustCorrectCreditNoteVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111929"));
        datatype.parmDatatypeSameAsId(extendedTypeNum(CustCorrectCreditNoteId_RU));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(40000000);
        datatype.parmWizardHighest(49999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(34);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CorrectFactureExternalId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS111930"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(35);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(SalesBookVATProcessVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS112931"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(520000000);
        datatype.parmWizardHighest(529999999);
        datatype.parmSortField(37);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(SalesExportFactureExternalId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS112951"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(38);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(GoodsInRouteId_RU));
        datatype.parmReferenceHelp(literalStr("@GLS114738"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(39);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(GoodsInRouteVoucher_RU));
        datatype.parmReferenceHelp(literalStr("@GLS114802"));
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(530000000);
        datatype.parmWizardHighest(539999999);
        datatype.parmSortField(40);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // HU Tax Reimbursement Document number
        datatype.parmDatatypeId(extendedTypeNum(TaxReimbursementDoc_HU));
        datatype.parmReferenceHelp(literalStr("@GLS112615"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(9999999);
        datatype.parmSortField(41);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(TaxIntgrExportDocumentId_CN));
        datatype.parmConfigurationKeyId(configurationKeyNum(LedgerBasicSalesTax));
        datatype.parmReferenceHelp(literalStr("@SYS4002264"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(100);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Bill of exchange endorsement voucher id
        datatype.parmDatatypeId(extendedTypeNum(CustBillOfExchangeEndorseVoucher));
        datatype.parmReferenceHelp(literalStr("@GLS221447"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(9999999);
        datatype.parmSortField(42);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // payment reference
        datatype.parmDatatypeId(extendedTypeNum(CustPaymReference_EE));
        datatype.parmReferenceHelp(literalStr("@GLS109021"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(43);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Interest Note Document number
        datatype.parmDatatypeId(extendedTypeNum(PlInterestNoteDocument));
        datatype.parmReferenceHelp(literalStr("@GLS113037"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(44);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustOverdueVATJournalId_W));
        datatype.parmReferenceLabel(literalStr("@SYS4003605"));
        datatype.parmReferenceHelp(literalStr("@SYS4003606"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(45);
    
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    
        datatype.parmDatatypeId(extendedTypeNum(CustOverdueVATVoucher_W));
        datatype.parmReferenceHelp(literalStr("@SYS4003607"));
        datatype.parmReferenceLabel(literalStr("@SYS4003535"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(46);
    
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustDirectiveId_PSN));
        datatype.parmReferenceLabel(literalStr("@GLS223147"));
        datatype.parmReferenceHelp(literalStr("@GLS223182"));
        datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(CustRoutingSlipId_PSN));
        datatype.parmReferenceLabel(literalStr("@GLS223145"));
        datatype.parmReferenceHelp(literalStr("@GLS223183"));
        datatype.parmConfigurationKeyId(configurationKeyNum(PublicSector));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(1);
        datatype.parmSortField(21);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        datatype.addParameterType(NumberSeqParameterType::FiscalCalendarPeriod, true, false);
        this.create(datatype);

        // Direct debit mandate reference
        datatype.parmDatatypeId(extendedTypeNum(CustMandateId));
        //datatype.parmReferenceHelp(literalStr("@???"));
        datatype.parmReferenceHelp(literalStr("@SYS4002659"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999999);
        datatype.parmSortField(26);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Entry certificate id
        datatype.parmDatatypeId(extendedTypeNum(EntryCertificateId_W));
        // Select the number sequence to associate with the entry certificates.
        datatype.parmReferenceHelp(literalStr("@SYS4004147"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(27);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // <GMY>
        // Free text debit note
        datatype.parmDatatypeId(extendedTypeNum(CustDebitNoteId_MY));
        datatype.parmReferenceHelp(literalStr("@SYP4860858"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(50);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free text debit note voucher
        datatype.parmDatatypeId(extendedTypeNum(CustDebitNoteVoucher_MY));
        datatype.parmDatatypeSameAsId(extendedTypeNum(CustDebitNoteId_MY));
        datatype.parmReferenceHelp(literalStr("@SYP4860859"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(140000000);
        datatype.parmWizardHighest(149999999);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(51);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
        // </GMY>

        datatype.parmDatatypeId(extendedTypeNum(SplitPaymentVoucher_IT));
        datatype.parmReferenceHelp(literalStr("@AccountsReceivable:UniqueKeyPostingSplitPayment"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(OrigAsFactureCorrectExternalId_RU));
        datatype.parmReferenceLabel(literalStr("@SalesPurchBook:CorrectionToOriginalDocAsFacture"));
        datatype.parmReferenceHelp(literalStr("@SalesPurchBook:CorrectFactureExternalId_RU_HelpText"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(54);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(OrigDocAsFactureExternalId_RU));
        datatype.parmReferenceLabel(literalStr("@SalesPurchBook:CombineOriginalDocNumberAsFacture"));
        datatype.parmReferenceHelp(literalStr("@SalesPurchBook:OrigDocAsFactureExternalId_RU_HelpText"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(55);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(TaxWithholdingRelatedVoucher_IN));
        datatype.parmReferenceLabel(literalStr("@TaxWithholdLiabilityOnPayment:TaxWithholdRelatedVoucher"));
        datatype.parmReferenceHelp(literalStr("@TaxWithholdLiabilityOnPayment:TaxWithholdRelatedVoucherHelpText"));
        datatype.parmWizardIsContinuous(true);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(56);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        this.mcrLoadModules(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrLoadModules</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures all the data types that are being used by the module.
    /// </summary>
    /// <param name="datatype">
    /// The <c>NumberSeqDataType</c> object that this method configures.
    /// </param>
    private void mcrLoadModules(NumberSeqDatatype datatype)
    {
        // Free texts invoice ID that is created as part of the gift card add amount functionality
        datatype.parmDatatypeId(extendedTypeNum(MCRFreeTextGiftCard));
        datatype.parmConfigurationKeyId(configurationKeyNum(MCRPayment));
        datatype.parmReferenceLabel("@MCR34113");
        datatype.parmReferenceHelp(literalStr("@MCR34114"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(45);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Free texts invoice ID that is created as part of the gift card add amount functionality
        datatype.parmDatatypeId(extendedTypeNum(MCRFreeTextGiftCardVoucher));
        datatype.parmConfigurationKeyId(configurationKeyNum(MCRPayment));
        datatype.parmReferenceLabel("@MCR34115");
        datatype.parmReferenceHelp(literalStr("@MCR34116"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(46);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Item list id number sequence.
        datatype.parmDatatypeId(extendedTypeNum(MCRItemListId));
        datatype.parmConfigurationKeyId(configurationKeyNum(LogisticsBasic));
        datatype.parmReferenceHelp(literalStr("@MCR40219")); // Unique key for item list
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(47);
        datatype.parmWizardHighest(999999);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleCustomer), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>