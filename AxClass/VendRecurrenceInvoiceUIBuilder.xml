<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendRecurrenceInvoiceUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
class VendRecurrenceInvoiceUIBuilder extends SysOperationAutomaticUIBuilder
{
    SysLookupMultiSelectCtrl templateMultiSelectControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        VendRecurrenceInvoiceDataContract vendRecurrenceInvoiceDataContract = this.dataContractObject();
        DialogField dialogRecurrenceInvoiceGenerationDate;
        DialogField dialogRecurrenceInvoiceDate;

        super();

        // From binding info, get the dialog field for recurrence invoice generation date attribute and mark it as a mandatory field.
        dialogRecurrenceInvoiceGenerationDate = this.bindInfo().getDialogField(vendRecurrenceInvoiceDataContract, methodStr(VendRecurrenceInvoiceDataContract, parmRecurrenceGenerationDate));
        dialogRecurrenceInvoiceGenerationDate.fieldControl().mandatory(true);

        // From binding info, get the dialog field for recurrence invoice date attribute and mark it as a mandatory field.
        dialogRecurrenceInvoiceDate = this.bindInfo().getDialogField(vendRecurrenceInvoiceDataContract, methodStr(VendRecurrenceInvoiceDataContract, parmRecurrenceInvoiceDate));
        dialogRecurrenceInvoiceDate.fieldControl().mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();

        super();

         // This method should be called in order to handle events on dialogs.
        dialogLocal.dialogForm().formRun().controlMethodOverload(false);

        DialogField dialogFieldTemplateName = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(VendRecurrenceInvoiceDataContract, parmVendInvoiceTemplateName));
        dialogFieldTemplateName.value(''); // clear last saved value

        // create multi-select lookup control for Template dialog field
        FormRun dialogFormRun = dialogLocal.dialogForm().formRun();

        Query templateQuery = new Query();
        QueryBuildDataSource templateDS = templateQuery.addDataSource(tableNum(VendInvoiceTemplate));
        templateDS.addSelectionField(fieldNum(VendInvoiceTemplate, TemplateName));
        templateDS.addSelectionField(fieldNum(VendInvoiceTemplate, TemplateDescription));


        container selectedFields = [tableNum(VendInvoiceTemplate), fieldNum(VendInvoiceTemplate, TemplateName)];

        templateMultiSelectControl = SysLookupMultiSelectCtrl::constructWithQuery(
            dialogFormRun,
            dialogFieldTemplateName.control(),
            templateQuery,
            false,
            selectedFields);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>