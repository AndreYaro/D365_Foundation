<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductionFlowCostContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LeanProductionFlowCostContract</c> class contains the data contract for the
///    <c>LeanProductionFlowCost</c> report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(SrsReportDataContractUIBuilder), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
class LeanProductionFlowCostContract implements SysOperationValidatable
{
    PlanName                        planName;
    InventCostDateIntervalContract  inventCostDateIntervalContract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventCostDateIntervalContract</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('InventCostDateIntervalContract')
    ]
    public InventCostDateIntervalContract parmInventCostDateIntervalContract(InventCostDateIntervalContract _inventCostDateIntervalContract = inventCostDateIntervalContract)
    {
        inventCostDateIntervalContract = _inventCostDateIntervalContract;

        return inventCostDateIntervalContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPlanName</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PlanName'),
        SysOperationLabelAttribute(literalStr("@SYS131795")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public PlanName parmPlanName(PlanName _planName = planName)
    {
        planName = _planName;

        return planName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the report contract parameters.
    /// </summary>
    /// <returns>
    ///    true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        isValid = inventCostDateIntervalContract.validate();

        if (planName)
        {
            if (PlanReference::findPlanName(planName).PlanType != PlanTypes::ProductionFlow)
            {
                isValid = checkFailed("@SYS303304");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static LeanProductionFlowCostContract construct()
    {
        return new LeanProductionFlowCostContract();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>