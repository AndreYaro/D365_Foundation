<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessProcessGenericTemplateTaskEditorDialogForm_AppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class of the <c>BusinessProcessGenericTemplateTaskEditorDialog</c> form, which is used for retail business process.
/// </summary>
[ExtensionOf(formStr(BusinessProcessGenericTemplateTaskEditorDialog))]
final class BusinessProcessGenericTemplateTaskEditorDialogForm_AppSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        next init();

        BusinessProcessIGenericSubtypeFilterable caller = this.args().caller() as BusinessProcessIGenericSubtypeFilterable;

        if (caller && caller.getGenericSubtype() == BusinessProcessGenericSubtype::Retail)
        {
            FormControl assignmentTypeControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_AssignmentType));
            assignmentTypeControl.visible(false);

            FormControl instructionTab = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, Instructions));
            instructionTab.visible(false);

            FormStringControl descriptionControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_Description));
            descriptionControl.visible(false);

            FormControl noteGroup = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, NotesGroup));
            noteGroup.visible(true);

            FormStringControl nameControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_Name));
            nameControl.label('@RetailTaskManagement:RetailTaskName');

            FormControl isOptionalControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_IsOptional));
            isOptionalControl.visible(false);

            FormControl contactPersonControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_ContactPerson));
            contactPersonControl.visible(false);
            
            FormControl contactWorkerControl = this.design(0).controlName(formControlStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask_ContactWorker));
            contactWorkerControl.visible(true);

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>BusinessProcessTemplateTask_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// event handler when the data source has been initialized. Overrides the lookup UI for contact person using HcmWorkerLookup
    /// </summary>
    /// <param name="sender">the form datasource instance</param>
    /// <param name="e">args</param>
    [FormDataSourceEventHandler(formDataSourceStr(BusinessProcessGenericTemplateTaskEditorDialog, BusinessProcessTemplateTask), FormDataSourceEventType::Initialized)]
    public static void BusinessProcessTemplateTask_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormRun formRun = sender.formRun();
        BusinessProcessIGenericSubtypeFilterable parentFormRun = formRun.args().caller() as BusinessProcessIGenericSubtypeFilterable;

        if (parentFormRun && parentFormRun.getGenericSubtype() == BusinessProcessGenericSubtype::Retail)
        {
            BusinessProcessGenericTaskEditorDialogOverrides overrides = BusinessProcessGenericTaskEditorDialogOverrides::construct();

            sender.object(fieldNum(BusinessProcessTemplateTask, ContactWorker)).registerOverrideMethod(methodStr(FormDataObject, lookupReference), 
                methodStr(BusinessProcessGenericTaskEditorDialogOverrides, ContactWorker_OnLookupReference), overrides);
        }
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>