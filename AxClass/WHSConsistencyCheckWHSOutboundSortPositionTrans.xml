<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSConsistencyCheckWHSOutboundSortPositionTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSConsistencyCheckWHSOutboundSortPositionTrans</c> class enables deletion of <c>WHSConsistencyCheckWHSOutboundSortPositionTrans</c> records where the sort position relation is not valid.
/// </summary>
internal class WHSConsistencyCheckWHSOutboundSortPositionTrans extends SysConsistencyCheck
{
    private int64      errorsFound;
    private QueryRun   queryRun;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        errorsFound
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>numberOfErrorsFound</Name>
				<Source><![CDATA[
	[Hookable(false)]
    internal int64 numberOfErrorsFound()
    {
        return errorsFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
    public ConfigurationKeyId configurationKey()
    {
        return configurationKeyNum(WHSandTMS);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executionOrder</Name>
				<Source><![CDATA[
    public Integer executionOrder()
    {
        return 45;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDialog</Name>
				<Source><![CDATA[
    public boolean hasDialog()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    private Query buildQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsTrans = query.addDataSource(tableNum(WHSOutboundSortPositionTrans));       
        QueryBuildDataSource qbdsPosition = qbdsTrans.addDataSource(tableNum(WHSOutboundSortPosition));

        qbdsPosition.relations(true);
        qbdsPosition.joinMode(JoinMode::NoExistsJoin);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        queryRun = new QueryRun(this.buildQuery());

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        FormRun formRun = classfactory.createQueryForm(this);

        formRun.init();
        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        errorsFound = 0;
        setPrefix(strFmt("@SYS26373", tableId2PName(tableNum(WHSOutboundSortPositionTrans))));

        Query query = QueryRun.query();

        switch (this.checkFix())
        {
            case CheckFix::Check:
                errorsFound = QueryRun::getQueryRowCount(query, intMax());
                if (errorsFound)
                {
                    warning(strFmt("@WAX:WhsOutboundSortPositionTransConsistencyCheckWarningMessage", errorsFound));
                    this.updateNotCorrected();
                }
                break;

            case CheckFix::Fix:
                ttsbegin;
                errorsFound = Query::delete_from(query);
                ttscommit;

                if (errorsFound)
                {
                    this.updateCorrected(errorsFound);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInTree</Name>
				<Source><![CDATA[
    public boolean showInTree()
    {
        return isConfigurationKeyEnabled(configurationKeyNum(WHSandTMS));
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeParentClassId</Name>
				<Source><![CDATA[
    public ClassId treeParentClassId()
    {
        return classNum(WhsConsistencyCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     version     = RunBase::getVersion(_packedClass);
        container   packedQuery;

        switch (version)
        {
            case #CurrentVersion :
                [version, #CurrentList, packedQuery] = _packedClass;
                if (packedQuery)
                {
                    queryRun = new QueryRun(packedQuery);
                }
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return tableId2PName(tableNum(WHSOutboundSortPositionTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
    public static HelpTxt helpText()
    {
        return "@WAX:WhsOutboundSortPositionTransConsistencyCheckDescription";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>