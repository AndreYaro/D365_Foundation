<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR</c> class is used to get fiscal transaction for the fiscal document cancel.
/// </summary>
internal final class RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR extends RetailFiscalTransactionRetriever_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates retriever for the fiscal document cancel.
    /// </summary>
    /// <param name="_fiscalDocument">The fiscal document cancel.</param>
    /// <returns>The retriever.</returns>
    public static RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR construct(RetailFiscalDocumentCancel_BR _fiscalDocument)
    {
        RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR fiscalTransactionRetriever = new RetailFiscalTransactionRetrieverFiscalDocumentCancel_BR();

        fiscalTransactionRetriever.accessKey = _fiscalDocument.AccessKey;

        fiscalTransactionRetriever.channelId = _fiscalDocument.Channel;
        fiscalTransactionRetriever.storeId = _fiscalDocument.store;
        fiscalTransactionRetriever.terminalId = _fiscalDocument.terminal;
        fiscalTransactionRetriever.transactionId = _fiscalDocument.transactionId;


        return fiscalTransactionRetriever;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTransactionDetailsFromFiscalTrans</Name>
				<Source><![CDATA[
    protected void initTransactionDetailsFromFiscalTrans(RetailTransactionFiscalTrans _transactionFiscalTrans)
    {
        RetailFiscalIntegrationRegisterResponse_BR registerResponse = RetailFiscalIntegrationRegisterResponseSerializer_BR::deserialize(_transactionFiscalTrans.RegisterResponse);

        if (!registerResponse.parmAccessKey())
        {
            return;
        }

        if (registerResponse.parmAccessKey() == accessKey)
        {
            fiscalTransactionDetails.parmFiscalTrans(_transactionFiscalTrans.data());
            fiscalTransactionDetails.parmRegisterResponse(registerResponse);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>