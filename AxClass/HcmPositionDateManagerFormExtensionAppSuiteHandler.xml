<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionDateManagerFormExtensionAppSuiteHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the ApplicationSuite form extension events for the HcmPositionDateManager form.
/// </summary>
class HcmPositionDateManagerFormExtensionAppSuiteHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>HcmPositionDateManager_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnInitialized event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension.
    /// </summary>
    /// <param name="_sender">The <c>HcmPositionDateManager</c> form being initialized.</param>
    /// <param name="_e">The args for the event.</param>
    [FormEventHandler(formStr(HcmPositionDateManager), FormEventType::Initialized)]
    public static void HcmPositionDateManager_OnInitialized(xFormRun _sender, FormEventArgs _e)
    {
        var budgetAccountLineLegalEntityControl = _sender.design().controlName(formControlStr(HcmPositionDateManager, BudgetAccountLineLegalEntity)) as FormStringControl;
        budgetAccountLineLegalEntityControl.text(curext());
    }

]]></Source>
			</Method>
			<Method>
				<Name>BudgeAccountLineTabPage_OnPageActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnPageActivated event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form
    /// extension's BudgeAccountLineTabPage form control.
    /// </summary>
    /// <param name="_sender">The tab page form control being activated.</param>
    /// <param name="_e">The args for the event.</param>
    [FormControlEventHandler(formControlStr(HcmPositionDateManager, BudgeAccountLineTabPage), FormControlEventType::PageActivated)]
    public static void BudgeAccountLineTabPage_OnPageActivated(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun positionDateManagerForm = _sender.formRun();
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(positionDateManagerForm);

        var budgetAccountLineLegalEntityControl = positionDateManagerForm.design().controlName(formControlStr(HcmPositionDateManager, BudgetAccountLineLegalEntity)) as FormStringControl;
        budgetAccountLineLegalEntityControl.text(CompanyInfo::getDataArea(selectedDataAreaRecId));
        positionDateManagerForm.setLDDAC_COAContext();
        HcmPositionDateManagerFormExtensionAppSuiteHandler::requeryBudgetAccountLineDataForLEChange(positionDateManagerForm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>BudgetAccountLineLegalEntity_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnModified event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// BudgetAccountLineLegalEntity control
    /// </summary>
    /// <param name="_sender">The form extension control being modified.</param>
    /// <param name="_e">The args for the event.</param>
    [FormControlEventHandler(formControlStr(HcmPositionDateManager, BudgetAccountLineLegalEntity), FormControlEventType::Modified)]
    public static void BudgetAccountLineLegalEntity_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun positionDateManagerForm = _sender.formRun();
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(positionDateManagerForm);

        HcmPositionDateManagerFormExtensionAppSuiteHandler::requeryBudgetAccountLineDataForLEChange(positionDateManagerForm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>BudgetAccountLineLegalEntity_OnValidated</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnValidated event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// BudgetAccountLineLegalEntity control.
    /// </summary>
    /// <param name="_sender">The form extension control being modified.</param>
    /// <param name="_e">The args for the event.</param>
    [FormControlEventHandler(formControlStr(HcmPositionDateManager, BudgetAccountLineLegalEntity), FormControlEventType::Validated)]
    public static void BudgetAccountLineLegalEntity_OnValidated(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun positionDateManagerForm = _sender.formRun();
        var budgetAccountLineLegalEntityControl = positionDateManagerForm.design().controlName(formControlStr(HcmPositionDateManager, BudgetAccountLineLegalEntity)) as FormStringControl;

        if (!CompanyInfo::findDataArea(budgetAccountLineLegalEntityControl.text()).RecId)
        {
            checkFailed(strFmt("@SYS342222", budgetAccountLineLegalEntityControl.text()));

            FormControlCancelEventArgs cancelArgs = _e as FormControlCancelEventArgs;
            cancelArgs.cancel(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionBudgetAccountLine_OnInitValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnInitValue event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// HcmPositionBudgetAccountLine data source.
    /// </summary>
    /// <param name="_sender">The form data source being init-valued.</param>
    /// <param name="_e">The args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetAccountLine), FormDataSourceEventType::InitValue)]
    public static void HcmPositionBudgetAccountLine_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        HcmPositionBudgetAccountLine sourcePositionBudgetAccountLine;
        HcmPositionBudgetAccountLine hcmPositionBudgetAccountLine = _sender.cursor();
        HcmBudgetPurposeTypeRecId selectedBudgetPurposeType = hcmPositionBudgetAccountLine.BudgetPurposeType;
        FormDataSource hcmPosition_ds = _sender.formRun().dataSource(formDataSourceStr(HcmPositionDateManager, HcmPosition)) as FormDataSource;
        HcmPosition hcmPosition = hcmPosition_ds.cursor();
        utcdatetime minDateTime = DateTimeUtil::minValue();
        utcdatetime maxDateTime = DateTimeUtil::maxValue();
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(_sender.formRun());

        select firstonly ValidTimeState(minDateTime, maxDateTime) sourcePositionBudgetAccountLine
               order by ValidFrom desc
               where sourcePositionBudgetAccountLine.Position == hcmPosition.RecId &&
               sourcePositionBudgetAccountLine.LegalEntity == selectedDataAreaRecId &&
               sourcePositionBudgetAccountLine.BudgetPurposeType == selectedBudgetPurposeType;

        if (sourcePositionBudgetAccountLine.RecId != 0)
        {
            buf2Buf(sourcePositionBudgetAccountLine, hcmPositionBudgetAccountLine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionBudgetAccountLine_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnInialized event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// HcmPositionBudgetAccountLine data source.
    /// </summary>
    /// <param name="_sender">The form data source being initialized.</param>
    /// <param name="_e">The args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetAccountLine), FormDataSourceEventType::Initialized)]
    public static void HcmPositionBudgetAccountLine_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        _sender.query().dataSourceTable(tableNum(HcmPositionBudgetAccountLine)).addSortField(fieldNum(HcmPositionBudgetAccountLine, BudgetPurposeType),SortOrder::Ascending);
        _sender.query().dataSourceTable(tableNum(HcmPositionBudgetAccountLine)).addSortField(fieldNum(HcmPositionBudgetAccountLine, ValidFrom),SortOrder::Descending);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionBudgetAccountLine_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnQueryExecuting event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// HcmPositionBudgetAccountLine data source.
    /// </summary>
    /// <param name="_sender">The form data source whose query is being executed.</param>
    /// <param name="_e">The args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetAccountLine), FormDataSourceEventType::QueryExecuting)]
    public static void HcmPositionBudgetAccountLine_OnQueryExecuting(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(_sender.formRun());
        QueryBuildRange rangeBudgetAccountLineLegalEntity;

        rangeBudgetAccountLineLegalEntity = SysQuery::findOrCreateRange(_sender.query().dataSourceTable(tablenum(HcmPositionBudgetAccountLine)), fieldnum(HcmPositionBudgetAccountLine, LegalEntity));
        rangeBudgetAccountLineLegalEntity.value(queryValue(selectedDataAreaRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionBudgetDefaultValue_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnQueryExecuting event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// HcmPositionBudgetDefaultValue data source.
    /// </summary>
    /// <param name="_sender">The form data source whose query is being executed.</param>
    /// <param name="_e">The args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetDefaultValue), FormDataSourceEventType::QueryExecuting)]
    public static void HcmPositionBudgetDefaultValue_OnQueryExecuting(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(_sender.formRun());
        QueryBuildRange rangeBudgetDefaultLegalEntity;

        rangeBudgetDefaultLegalEntity = SysQuery::findOrCreateRange(_sender.query().dataSourceTable(tablenum(HcmPositionBudgetDefaultValue)), fieldnum(HcmPositionBudgetDefaultValue, LegalEntity));
        rangeBudgetDefaultLegalEntity.value(queryValue(selectedDataAreaRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmPositionBudgetDefaultValue_OnInitValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// The OnInitValue event handler for the <c>HcmPositionDateManager.ExtensionAppSuite</c> form extension's
    /// HcmPositionBudgetDefaultValue data source.
    /// </summary>
    /// <param name="_sender">The form data source being init-valued.</param>
    /// <param name="_e">The args for the event.</param>
    [FormDataSourceEventHandler(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetDefaultValue), FormDataSourceEventType::InitValue)]
    public static void HcmPositionBudgetDefaultValue_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        HcmPositionBudgetDefaultValue sourcePositionBudgetDefault;
        HcmPositionBudgetDefaultValue hcmPositionBudgetDefaultValue = _sender.cursor();
        FormDataSource hcmPosition_ds = _sender.formRun().dataSource(formDataSourceStr(HcmPositionDateManager, HcmPosition)) as FormDataSource;
        HcmPosition hcmPosition = hcmPosition_ds.cursor();
        utcdatetime minDateTime = DateTimeUtil::minValue();
        utcdatetime maxDateTime = DateTimeUtil::maxValue();
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(_sender.formRun());

        select firstonly ValidTimeState(minDateTime, maxDateTime) sourcePositionBudgetDefault
               order by ValidFrom desc
               where sourcePositionBudgetDefault.Position == hcmPosition.RecId &&
               sourcePositionBudgetDefault.LegalEntity == selectedDataAreaRecId;

        if (sourcePositionBudgetDefault.RecId != 0)
        {
            buf2Buf(sourcePositionBudgetDefault, hcmPositionBudgetDefaultValue);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>requeryBudgetAccountLineDataForLEChange</Name>
				<Source><![CDATA[
    private static void requeryBudgetAccountLineDataForLEChange(FormRun _positionDateManagerForm)
    {
        LegalEntityRecId selectedDataAreaRecId = HcmPositionDateManagerFormExtensionAppSuiteHandler::getCallerSelectedLegalEntity(_positionDateManagerForm);
        HcmPositionBudgetAccountLine  defaultBudgetAccountLineReset;
        FormDataSource hcmPosition_ds = _positionDateManagerForm.dataSource(formDataSourceStr(HcmPositionDateManager, HcmPosition)) as FormDataSource;
        FormDataSource hcmPositionBudgetAccountLine_ds = _positionDateManagerForm.dataSource(formDataSourceStr(HcmPositionDateManager, HcmPositionBudgetAccountLine)) as FormDataSource;
        HcmPosition hcmPosition = hcmPosition_ds.cursor();

        // Set the context for chart of accounts before executeQuery to avoid clearing of the main account value
        _positionDateManagerForm.setLDDAC_COAContext();
        defaultBudgetAccountLineReset = HcmPositionBudgetAccountLine::findByPositionLegalEntity(hcmPosition.RecId, selectedDataAreaRecId);
        if (!defaultBudgetAccountLineReset)
        {
            defaultBudgetAccountLineReset.Position = hcmPosition.RecId;
            defaultBudgetAccountLineReset.LegalEntity = selectedDataAreaRecId;
        }

        // Reset the datasource so it knows to do an insert vs. update based on new LE choice
        hcmPositionBudgetAccountLine_ds.cursor().data(defaultBudgetAccountLineReset);
        hcmPositionBudgetAccountLine_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCallerSelectedLegalEntity</Name>
				<Source><![CDATA[
    private static LegalEntityRecId getCallerSelectedLegalEntity(FormRun _positionDateManagerForm)
    {
        LegalEntityRecId selectedDataAreaRecId;

        FormRun callerForm = _positionDateManagerForm.args().caller();

        if (callerForm && formHasMethod(callerForm, identifierStr(getSelectedLegalEntity)))
        {
            Object callerObject = callerForm;
            selectedDataAreaRecId = callerObject.getSelectedLegalEntity();
        }
        else
        {
            selectedDataAreaRecId = CompanyInfo::findDataArea(curext()).RecId;
        }

        return selectedDataAreaRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>