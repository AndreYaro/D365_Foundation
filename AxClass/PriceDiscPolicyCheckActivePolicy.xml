<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscPolicyCheckActivePolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PriceDiscPolicyCheckActivePolicy</c> class handles request related to tables,
/// that support price and discount policies.
/// </summary>
final class PriceDiscPolicyCheckActivePolicy extends PriceDiscPolicyCheckPolicy
{
    private PriceDiscPolicyFieldList     manualAndSystemPolicyFieldList;
    private PriceDiscPolicyFieldList     manualPolicyFieldList;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isPolicyField</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected boolean isPolicyField(PriceDiscPolicyField _policyField)
    {
        return manualAndSystemPolicyFieldList.policyFieldExists(_policyField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievePolicyTableFields</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected container retrievePolicyTableFields()
    {
        return PriceDiscResultFields::tableFieldMapping().policyFieldList2TableFieldIds(priceDiscResultFields.TableId, manualAndSystemPolicyFieldList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveFixedPolicyTableFields</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected container retrieveFixedPolicyTableFields()
    {
        PriceDiscPolicyFieldMappingCache fieldMapping = PriceDiscResultFields::tableFieldMapping();
        Enumerator enumerator = fieldMapping.retrievePolicyFieldList(priceDiscResultFields.TableId).getEnumerator();
        container fixedPolicyTableFieldIds;

        while (enumerator.moveNext())
        {
            PriceDiscPolicyField policyField = enumerator.current();

            boolean canCreatePolicy;

            canCreatePolicy = PriceDiscPolicyRule::createInstance(priceDiscResultFields).canCreatePolicy(policyField);

            if (!canCreatePolicy)
            {
                fixedPolicyTableFieldIds += fieldMapping.policyField2TableField(priceDiscResultFields.TableId, policyField);
            }
        }

        return fixedPolicyTableFieldIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isManualPolicyField</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected boolean isManualPolicyField(PriceDiscPolicyField _policyField)    
    {
        return manualPolicyFieldList.policyFieldExists(_policyField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePolicyTable</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected void initializePolicyTable(Common _policyTable)
    {
        super(_policyTable);
        this.parmPriceDiscResultFields(_policyTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePolicyFieldLists</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected void initializePolicyFieldLists()
    {
        PriceDiscPolicyFieldList     systemPolicyFieldList;
        
        if (priceDiscResultFields.isTmp() == false)
        {
            manualPolicyFieldList  = PriceDiscPolicyFields::retrievePolicyFieldList(priceDiscResultFields.ManualEntryChangePolicy);
            systemPolicyFieldList  = PriceDiscPolicyFields::retrievePolicyFieldList(priceDiscResultFields.SystemEntryChangePolicy);
        }
        else
        {
            manualPolicyFieldList  = PriceDiscPolicyFieldList::newList();
            systemPolicyFieldList  = PriceDiscPolicyFieldList::newList();
        }

        manualAndSystemPolicyFieldList = PriceDiscPolicyFieldList::newList();

        Enumerator systemEnumerator = systemPolicyFieldList.getEnumerator();
        while (systemEnumerator.moveNext())
        {
            PriceDiscPolicyField systemPolicyField = systemEnumerator.current();

            manualAndSystemPolicyFieldList.addPolicyField(systemPolicyField);
        }

        Enumerator manualEnumerator = manualPolicyFieldList.getEnumerator();
        while (manualEnumerator.moveNext())
        {
            PriceDiscPolicyField manualPolicyField = manualEnumerator.current();

            manualAndSystemPolicyFieldList.addPolicyField(manualPolicyField);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFixedPolicyField</Name>
				<Source><![CDATA[
    [Wrappable(false)]
    protected boolean isFixedPolicyField(PriceDiscPolicyField _policyField)
    {
        return PriceDiscPolicyRule::createInstance(priceDiscResultFields).canCreatePolicy(_policyField);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>