<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalPrinterConfigManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles importing and exporting procedures needed for work with fiscal register configuration files.
/// </summary>
class RetailFiscalPrinterConfigManager
{
    str sampleConfigResourceName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initSampleConfigResourceName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes sample configuration resource name for the current country region code.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initSampleConfigResourceName()
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSE]))
        {
            sampleConfigResourceName = resourceStr(RetailFiscalRegisterSampleConfig_xml_SE);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>sampleConfigResourceName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets internal resource name with the sample configuration.
    /// </summary>
    /// <returns>Sample configuration resource name.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str sampleConfigResourceName()
    {
        return sampleConfigResourceName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportSampleConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Exports sample fiscal register configuration from the specified resource.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void exportSampleConfiguration()
    {
        str sampleConfigName;
        str sampleConfigContent;

        resourceNode resourceNode = SysResource::getResourceNode(sampleConfigResourceName);

        if (resourceNode)
        {
            container nodeData = SysResource::getResourceNodeData(resourceNode);

            if (nodeData != conNull())
            {
                sampleConfigContent = conPeek(nodeData, 1);
                sampleConfigName    = resourceNode.filename();

                this.ExportConfiguration(sampleConfigContent, sampleConfigName);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exportConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Exports fiscal register configuration.
    /// </summary>
    /// <param name="_configurationContent">
    /// Configuration content.
    /// </param>
    /// <param name="_defaultFileName">
    /// Default file name for download.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void exportConfiguration(str _configurationContent, str _defaultFileName)
    {
        File::SendStringAsFileToUser(_configurationContent, _defaultFileName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>importConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Imports fiscal register configuration.
    /// </summary>
    /// <returns>
    /// Content of the imported configuration if file is successfully imported; otherwise empty string.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str importConfiguration()
    {
        str configurationContent;

        FileUploadResultBase uploadResult = File::GetFileFromUser();
        
        if (uploadResult && uploadResult.getUploadStatus())
        {
            try
            {
                using (System.IO.Stream stream = uploadResult.openResult())
                {
                    using (System.IO.StreamReader streamReader = new System.IO.StreamReader(stream))
                    {
                        configurationContent = streamReader.ReadToEnd();
                    }
                }
            }
            catch(Exception::Error)
            {
                infolog.clear(infologLine()-1);
                warning(strfmt("@SYS104636", uploadResult.getFileName()));
            }
        }

        return configurationContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        this.initSampleConfigResourceName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>RetailFiscalPrinterConfigHelper</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>RetailFiscalPrinterConfigHelper</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalPrinterConfigManager construct()
    {
        RetailFiscalPrinterConfigManager configMgr = new RetailFiscalPrinterConfigManager();

        return configMgr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>