<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_TaxBranch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Shows the address select form for table <c>TaxBranch</c>.
/// </summary>
public class LogisticsLocationSelectForm_TaxBranch extends LogisticsLocationSelectForm
{
    private const str FeatureReference = 'TH-00001';

    TaxBranch taxBranch;
    /// <summary>
    ///     Sets allowed Items for company and site.
    /// </summary>
    /// <returns>
    ///     Returns the allowed Items you set.
    /// </returns>

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    public Set allowedSources()
    {
        Set allowedItems = new Set(Types::Enum);

        allowedItems.add(LogisticsLocationSelectSourceType::Company);
        allowedItems.add(LogisticsLocationSelectSourceType::Site);

        return allowedItems;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the selected address to the calling tax branch line.
    /// </summary>
    /// <param name="_transferFromTable">
    /// The source of the address.
    /// </param>
    /// <param name="_addressRecId">
    /// The selected address.
    /// </param>
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        TaxBranch               taxBranchLocal;
        LogisticsLocationRecId  locationId;
        FormDataSource          dataSource;

        locationId = LogisticsPostalAddress::locationRecIdFromAddressRecId(_addressRecId);
        taxBranchLocal = TaxBranch::findByLocationId(locationId);

        if (locationId
            && taxBranch.LogisticsLocation != locationId
            && taxBranchLocal)
        {
            // The address must be unique for each tax branch.
            throw error("@SYS4082518");
        }
        else
        {
            taxBranch.LogisticsLocation = locationId;

            if (FormDataUtil::isFormDataSource(taxBranch))
            {
                dataSource = FormDataUtil::getFormDataSource(taxBranch);
                dataSource.research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    News a buffer for table <c>TaxBranch</c>.
    /// </summary>
    /// <param name="_taxBranch">
    ///    A buffer for table <c>TaxBranch</c>.
    /// </param>
    void new(TaxBranch _taxBranch)
    {
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        taxBranch = _taxBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new LogisticsLocationSelectForm_TaxBranch
    /// </summary>
    /// <param name="_buffer">
    /// Record used to initialize the LogisticsLocationSelectForm_TaxBranch
    /// </param>
    /// <returns>
    /// A new LogisticsLocationSelectForm_TaxBranch
    /// </returns>
    public static LogisticsLocationSelectForm_TaxBranch construct(Common _buffer)
    {
        return new LogisticsLocationSelectForm_TaxBranch(_buffer);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>