<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCashLedgerReconciliationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>RCashLedgerReconciliation</c> SSRS report
/// </summary>
[
    DataContract,
    SysOperationGroup('PettyCash', "@GLS100666", '1'),
    SysOperationGroup('DateInterval', "@SYS22526", '2'),
    SysOperationGroup('Parms', "@SYS7764", '3')
]
public class RCashLedgerReconciliationContract implements SysOperationValidatable, SysOperationInitializable
{
    RCashAccount                cashAccount;
    StartDate                   startDate;
    ToDate                      toDate;
    RCashReportSpecification    specification;
    Boolean                     zeroBalance;
    boolean                     mainAccountOnly;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default values for report parameters.
    /// </summary>
    public void initialize()
    {
        this.parmStartDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        this.parmToDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        this.parmRCashAccount(RCashParameters::find().DefaultAccountNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMainAccountOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter MainAccountOnly.
    /// </summary>
    /// <param name="_mainAccountOnly">
    /// The new value of the datacontract parameter MainAccountOnly; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter MainAccountOnly
    /// </returns>
    [
        DataMember('MainAccountOnly'),
        SysOperationLabel(literalstr("@SYS325919")),
        SysOperationHelpText(literalstr("@SYS325919")),
        SysOperationGroupMember('Parms'),
        SysOperationDisplayOrder('2')
    ]
    public boolean parmMainAccountOnly(boolean _mainAccountOnly = mainAccountOnly)
    {
        mainAccountOnly = _mainAccountOnly;
        return mainAccountOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRCashAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter RCashAccount.
    /// </summary>
    /// <param name="_cashAccount">
    /// The new value of the datacontract parameter RCashAccount; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter RCashAccount
    /// </returns>
    [
        DataMember('RCashAccount'),
        SysOperationLabel(literalstr("@GLS104347")),
        SysOperationHelpText(literalstr("@GLS111215")),
        SysOperationGroupMember('PettyCash'),
        SysOperationDisplayOrder('1')
    ]
    public RCashAccount parmRCashAccount(RCashAccount _cashAccount = cashAccount)
    {
        cashAccount = _cashAccount;
        return cashAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSpecification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter specification.
    /// </summary>
    /// <param name="_specification">
    /// The new value of the datacontract parameter specification; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter specification
    /// </returns>
    [
        DataMember('Specification'),
        SysOperationLabel(literalstr("@SYS8956")),
        SysOperationHelpText(literalstr("@SYS8956")),
        SysOperationGroupMember('Parms'),
        SysOperationDisplayOrder('1')
    ]
    public RCashReportSpecification parmSpecification(RCashReportSpecification _specification = specification)
    {
        specification = _specification;
        return specification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter startDate.
    /// </summary>
    /// <param name="_startDate">
    /// The new value of the datacontract parameter startDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter startDate
    /// </returns>
    [
        DataMember('StartDate'),
        SysOperationLabel(literalstr("@SYS2168")),
        SysOperationHelpText(literalstr("@SYS82091")),
        SysOperationGroupMember('DateInterval'),
        SysOperationDisplayOrder('1')
    ]
    public StartDate parmStartDate(StartDate _startDate = startDate)
    {
        startDate = _startDate;
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate
    /// </returns>
    [
        DataMember('ToDate'),
        SysOperationLabel(literalstr("@SYS14656")),
        SysOperationHelpText(literalstr("@SYS53942")),
        SysOperationGroupMember('DateInterval'),
        SysOperationDisplayOrder('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZeroBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter zeroBalance.
    /// </summary>
    /// <param name="_zeroBalance">
    /// The new value of the datacontract parameter zeroBalance; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter zeroBalance
    /// </returns>
    [
        DataMember('ZeroBalance'),
        SysOperationLabel(literalstr("@SYS24773")),
        SysOperationHelpText(literalstr("@SYS24773")),
        SysOperationGroupMember('Parms'),
        SysOperationDisplayOrder('3')
    ]
    public boolean parmZeroBalance(boolean _zeroBalance = zeroBalance)
    {
        zeroBalance = _zeroBalance;
        return zeroBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the values entered for parameters.
    /// </summary>
    /// <returns>
    /// <c>True</c> if all values are correct; else <c>False</c>
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (this.parmStartDate() && this.parmToDate())
        {
            // Start date cannot be greater than the end date of a period.
            if (this.parmStartDate() > this.parmToDate())
            {
                ret = checkFailed("@GLS101164");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>