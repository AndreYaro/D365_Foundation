<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDb70_PayrollWorkerAccrualAdjustmentAddSequenceNumber</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrade script for PayrollWorkerAccrualAdjustment schema changes.
/// </summary>
class ReleaseUpdateDb70_PayrollWorkerAccrualAdjustmentAddSequenceNumber extends ReleaseUpdateDB
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the module name of an upgrade class.
    /// </summary>
    /// <returns>
    ///    The module name.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented by sub classes.The module name is displayed on the cockpit form for
    ///    every script.
    /// </remarks>
    public ReleaseUpdateModule moduleName()
    {
        return "@Payroll:Payroll";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    ///<summary>
    ///The script runs in any system having version AX7 R1.
    ///</summary>
    ///<returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::R1Update3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncCopyPayrollWorkerAccrualAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the data from the <c>PayrollWorkerAccrualAdjustment</c> table into the temporary staging
    /// <c>PayrollWorkerAccrualAdjustmentTemp</c> table.
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute(classStr(ReleaseUpdateDb70_PayrollWorkerAccrualAdjustmentAddSequenceNumber)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptConfigKeyAttribute(configurationKeyStr(PayrollAdministration)),
        UpgradeScriptTableAttribute(tableStr(PayrollWorkerAccrualAdjustment), false, true, false, false),
        UpgradeScriptTableAttribute('PayrollWorkerAccrualAdjustmentTemp', true, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncCopyPayrollWorkerAccrualAdjustment()
    {
        str sqlStatement;

        // Copy data from table PayrollWorkerAccrualAdjustment to temp table PayrollWorkerAccrualAdjustmentTemp
        sqlStatement =
        @"IF OBJECT_ID ('[dbo].[PAYROLLWORKERACCRUALADJUSTMENTTEMP]', 'U') IS NOT NULL        
            DROP TABLE [dbo].[PAYROLLWORKERACCRUALADJUSTMENTTEMP]

        SELECT *
        INTO [dbo].[PAYROLLWORKERACCRUALADJUSTMENTTEMP]
        FROM [dbo].[PAYROLLWORKERACCRUALADJUSTMENT]";

        this.executeSqlStatement(sqlStatement);

        // Empty table PayrollWorkerAccrualAdjustment
        sqlStatement = "DELETE FROM PAYROLLWORKERACCRUALADJUSTMENT";
        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncInsertPayrollWorkerAccrualAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the data from the temporary staging <c>PayrollWorkerAccrualAdjustmentTemp</c> table
    /// into the <c>PayrollWorkerAccrualAdjustment</c> table.
    /// </summary>
    /// <remarks>
    /// The temp table will be dropped.
    /// </remarks>
    [
    UpgradeScriptDescriptionAttribute(classStr(ReleaseUpdateDb70_PayrollWorkerAccrualAdjustmentAddSequenceNumber)),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(PayrollAdministration)),
    UpgradeScriptTableAttribute(tableStr(PayrollWorkerAccrualAdjustment), true, true, false, false),
    UpgradeScriptTableAttribute('PayrollWorkerAccrualAdjustmentTemp', false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncInsertPayrollWorkerAccrualAdjustment()
    {
        str sqlStatement;

        // Copy data from temp table PayrollWorkerAccrualAdjustmentTemp to table PayrollWorkerAccrualAdjustment
        sqlStatement =
        @"INSERT INTO [dbo].[PAYROLLWORKERACCRUALADJUSTMENT] (
               [ADJUSTEDHOURS]
              ,[ADJUSTMENTTYPE]
              ,[DESCRIPTION]
              ,[TRANSACTIONDATE]
              ,[WORKERENROLLEDACCRUAL]
              ,[CREATEDDATETIME]
              ,[CREATEDBY]
              ,[DATAAREAID]
              ,[RECVERSION]
              ,[PARTITION]
              ,[RECID]
              ,[SEQUENCENUMBER])
        SELECT
               [ADJUSTEDHOURS]
              ,[ADJUSTMENTTYPE]
              ,[DESCRIPTION]
              ,[TRANSACTIONDATE]
              ,[WORKERENROLLEDACCRUAL]
              ,[CREATEDDATETIME]
              ,[CREATEDBY]
              ,[DATAAREAID]
              ,[RECVERSION]
              ,[PARTITION]
              ,[RECID]
              ,ROW_NUMBER() OVER(PARTITION BY [WORKERENROLLEDACCRUAL], [ADJUSTMENTTYPE] ORDER BY [WORKERENROLLEDACCRUAL], [ADJUSTMENTTYPE]) as [SEQUENCENUMBER]              
        FROM [dbo].[PAYROLLWORKERACCRUALADJUSTMENTTEMP]";

        this.executeSqlStatement(sqlStatement);

        // Drop temp table PayrollWorkerAccrualAdjustmentTemp
        sqlStatement = "DROP TABLE PAYROLLWORKERACCRUALADJUSTMENTTEMP";
        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeSqlStatement</Name>
				<Source><![CDATA[
    private void executeSqlStatement(str _sqlStatement)
    {
        Connection sessionConn = new Connection();

        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(_sqlStatement).assert();
        statement.executeUpdate(_sqlStatement);

        CodeAccessPermission::revertAssert();

        statement.close();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>