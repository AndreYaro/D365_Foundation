<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPlanCopyReqPO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqPlanCopyReqPO</c> class copies planned orders from the source master plan version to the target master plan version.
/// </summary>
class ReqPlanCopyReqPO extends SysQueryInsertRecordSet
{
    int reqPODatasourceId;
    int reqPlanVersionDatasourceId;

    ReqPlanVersion reqPlanVersionFrom;
    ReqPlanVersion reqPlanVersionTo;

    private QueryBuildRange range;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    protected void initFieldMapping()
    {
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ItemId), tableNum(ReqPO), fieldNum(ReqPO, ItemId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, RouteJobsUpdated), tableNum(ReqPO), fieldNum(ReqPO, RouteJobsUpdated));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqDate), tableNum(ReqPO), fieldNum(ReqPO, ReqDate));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, Qty), tableNum(ReqPO), fieldNum(ReqPO, Qty));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqDateOrder), tableNum(ReqPO), fieldNum(ReqPO, ReqDateOrder));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, VendId), tableNum(ReqPO), fieldNum(ReqPO, VendId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ItemGroupId), tableNum(ReqPO), fieldNum(ReqPO, ItemGroupId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqPOStatus), tableNum(ReqPO), fieldNum(ReqPO, ReqPOStatus));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PurchUnit), tableNum(ReqPO), fieldNum(ReqPO, PurchUnit));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, SchedMethod), tableNum(ReqPO), fieldNum(ReqPO, SchedMethod));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PurchId), tableNum(ReqPO), fieldNum(ReqPO, PurchId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqDateDlv), tableNum(ReqPO), fieldNum(ReqPO, ReqDateDlv));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, RefId), tableNum(ReqPO), fieldNum(ReqPO, RefId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, RefType), tableNum(ReqPO), fieldNum(ReqPO, RefType));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ItemRouteId), tableNum(ReqPO), fieldNum(ReqPO, ItemRouteId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ItemBomId), tableNum(ReqPO), fieldNum(ReqPO, ItemBomId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ItemBuyerGroupId), tableNum(ReqPO), fieldNum(ReqPO, ItemBuyerGroupId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, CovInventDimId), tableNum(ReqPO), fieldNum(ReqPO, CovInventDimId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqTimeOrder), tableNum(ReqPO), fieldNum(ReqPO, ReqTimeOrder));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, VendGroupId), tableNum(ReqPO), fieldNum(ReqPO, VendGroupId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, LeadTime), tableNum(ReqPO), fieldNum(ReqPO, LeadTime));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, CalendarDays), tableNum(ReqPO), fieldNum(ReqPO, CalendarDays));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, SchedToDate), tableNum(ReqPO), fieldNum(ReqPO, SchedToDate));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, SchedFromDate), tableNum(ReqPO), fieldNum(ReqPO, SchedFromDate));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PurchQty), tableNum(ReqPO), fieldNum(ReqPO, PurchQty));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, ReqTime), tableNum(ReqPO), fieldNum(ReqPO, ReqTime));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, bomRouteCreated), tableNum(ReqPO), fieldNum(ReqPO, bomRouteCreated));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, IsDerivedDirectly), tableNum(ReqPO), fieldNum(ReqPO, IsDerivedDirectly));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, IsForecastPurch), tableNum(ReqPO), fieldNum(ReqPO, IsForecastPurch));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, IntvQr), tableNum(ReqPO), fieldNum(ReqPO, IntvQr));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, IntvMth), tableNum(ReqPO), fieldNum(ReqPO, IntvMth));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, IntvWk), tableNum(ReqPO), fieldNum(ReqPO, IntvWk));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, CostAmount), tableNum(ReqPO), fieldNum(ReqPO, CostAmount));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, TransferId), tableNum(ReqPO), fieldNum(ReqPO, TransferId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, Product), tableNum(ReqPO), fieldNum(ReqPO, Product)); 
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PmfPlanningItemId), tableNum(ReqPO), fieldNum(ReqPO, PmfPlanningItemId));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PdsCWReqQty), tableNum(ReqPO), fieldNum(ReqPO, PdsCWReqQty)); 
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PmfYieldPct), tableNum(ReqPO), fieldNum(ReqPO, PmfYieldPct));
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PmfBulkOrd), tableNum(ReqPO), fieldNum(ReqPO, PmfBulkOrd)); 
        this.insertFieldMap(reqPODatasourceId, tableNum(ReqPO), fieldNum(ReqPO, PlanningPriority), tableNum(ReqPO), fieldNum(ReqPO, PlanningPriority));

        this.insertFieldMap(reqPlanVersionDatasourceId, tableNum(ReqPlanVersion), fieldNum(ReqPlanVersion, RecId), tableNum(ReqPO), fieldNum(ReqPO, PlanVersion));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    protected Query initQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsReqPO = query.addDataSource(tableNum(ReqPO));
        qbdsReqPO.addRange(fieldNum(ReqPO, PlanVersion)).value(queryValue(reqPlanVersionFrom.RecId));
        range = qbdsReqPO.addRange(fieldNum(ReqPO, ItemId));
        reqPODatasourceId = qbdsReqPO.uniqueId();
        
        // Join required as literals are not supported
        QueryBuildDataSource qbdsReqPlanVersion = qbdsReqPO.addDataSource(tableNum(ReqPlanVersion));
        qbdsReqPlanVersion.addRange(fieldNum(ReqPlanVersion, RecId)).value(queryValue(reqPlanVersionTo.RecId));
        reqPlanVersionDatasourceId = qbdsReqPlanVersion.uniqueId();

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    protected Common initTargetCursor()
    {
        ReqPO reqPOInsert;

        reqPOInsert.skipAosValidation(true);
        reqPOInsert.skipDataMethods(true);

        return reqPOInsert;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromReqPlanVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new instance of the <c>ReqPlanCopyReqPO</c> class.
    /// </summary>
    /// <param name="_reqPlanVersionFrom">
    ///     The version of the source master plan.
    /// </param>
    /// <param name="_reqPlanVersionTo">
    ///     The version of the target master plan.
    /// </param>
    /// <returns>A new instance.</returns>
    public static ReqPlanCopyReqPO newFromReqPlanVersions(ReqPlanVersion _reqPlanVersionFrom, ReqPlanVersion _reqPlanVersionTo)
    {
        ReqPlanCopyReqPO instance = new ReqPlanCopyReqPO();
        instance.reqPlanVersionFrom = _reqPlanVersionFrom;
        instance.reqPlanVersionTo = _reqPlanVersionTo;

        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>