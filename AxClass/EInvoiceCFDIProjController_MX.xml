<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDIProjController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceProjController_MX</c> is controller class for <c>EInvoiceReport_MX</c> report.
/// </summary>
public class EInvoiceCFDIProjController_MX extends EInvoiceControllerBase_MX implements BatchRetryable
{
    ProjInvoiceJour         projInvoiceJour;
    boolean                 projCreditInvoicing;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes basic properties of the controller.
    /// </summary>
    /// <param name = "_args">Args received from main method.</param>
    public void initialize(Args _args)
    {
        super(_args);

        journalList.first(projInvoiceJour);

        if (!projInvoiceJour)
        {
            throw error("@SYS26348");
        }

        // Init projcredit invoice flag. Used to get invoicetext footer.
        projCreditInvoicing = CustParameters::find().CreditInvoicingReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the document type for the print management.
    /// </summary>
    /// <returns>A <c>PrintMgmtDocumentType</c> option.</returns>
    protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            return PrintMgmtDocumentType::SIProjInvoiceWithBR;
        }
        else
        {
            return PrintMgmtDocumentType::ProjectInvoice;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current invoice to be printed.
    /// </summary>
    /// <returns>A record of the transaction to be printed.</returns>
    protected Common getInvoiceJour()
    {
        return projInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>first</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the first invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one invoice and it was load.</returns>
    protected boolean first()
    {
        return journalList.first(projInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the next invoice to be printed in invoiceJour.
    /// </summary>
    /// <returns>True if there are one more invoice and it was load.</returns>
    protected boolean next()
    {
        return journalList.next(projInvoiceJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the language id of the invoice transaction that is being printed.
    /// </summary>
    /// <returns>the language id.</returns>
    protected LanguageId getInvoiceLanguageId()
    {
        return projInvoiceJour.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCFDI</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if the invoice to be printed is CFDI or CFD.
    /// </summary>
    /// <returns>True if the invoice is a CFDI, false if is CFD.</returns>
    protected boolean isCFDI()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtReferencedTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the print management referenced table.
    /// </summary>
    /// <returns>A loaded record.</returns>
    protected Common getPrintMgmtReferencedTable()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            return ProjProposalJour::find(projInvoiceJour.ProposalId);
        }
        else
        {
            return ProjInvoiceTable::find(projInvoiceJour.ProjInvoiceId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>EInvoiceReport_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">Args object.</param>
    public static void main(Args _args)
    {
        EInvoiceControllerBase_MX controller = new EInvoiceCFDIProjController_MX();

        controller.initialize(_args);

        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>