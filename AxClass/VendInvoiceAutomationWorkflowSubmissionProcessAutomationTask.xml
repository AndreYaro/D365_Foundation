<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationWorkflowSubmissionProcessAutomationTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>VendInvoiceAutomaticWorkflowSubmissionTask</c> fulfills the contract needed for <c>ProcessAutomationTask</c>.
/// </summary>
[ExportMetadata(classStr(ProcessAutomationTask), classStr(VendInvoiceAutomationWorkflowSubmissionProcessAutomationTask))]
[Export(identifierStr('Microsoft.Dynamics.AX.Application.ProcessAutomationTask'))]
internal final class VendInvoiceAutomationWorkflowSubmissionProcessAutomationTask extends ProcessAutomationTask implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isProcessAutomationEnabledForThisTask</Name>
				<Source><![CDATA[
    protected boolean isProcessAutomationEnabledForThisTask()
    {
        return VendAutomateVendorInvoicesFeature::isEnabled()
            && this.isAutoSubmissionEnabledForAnyCompaniesInSystem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProcessAutomationEnabledForThisTaskInternal</Name>
				<Source><![CDATA[
    internal boolean isProcessAutomationEnabledForThisTaskInternal()
    {
        return this.isProcessAutomationEnabledForThisTask();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAutoSubmissionEnabledForAnyCompaniesInSystem</Name>
				<Source><![CDATA[
    private boolean isAutoSubmissionEnabledForAnyCompaniesInSystem()
    {
        VendParameters vendParameters;

        select firstonly crosscompany RecId from vendParameters
            where vendParameters.AutomationWorkflowSubmission == NoYes::Yes;

        return vendParameters.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getListOfWorkToBePerformed</Name>
				<Source><![CDATA[
    protected List getListOfWorkToBePerformed()
    {
        VendInvoiceAutomationWorkflowSubmissionTask submissionTask = VendInvoiceAutomationWorkflowSubmissionTask::construct();

        ProcessScheduleWorkItem executionWorkItem = this.parmProcessScheduleWorkItem();

        // Set the data contract on the submission task to the process work item generated by Process Automation
        ProcessScheduleWorkItem processScheduleWorkItemContract = submissionTask.getDataContractObject() as ProcessScheduleWorkItem;
        processScheduleWorkItemContract.initializeFromScheduleWorkItem(executionWorkItem);

        List taskWorkList = new List(Types::Class);
        taskWorkList.addEnd(submissionTask);

        return taskWorkList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>batchJobCaption</Name>
				<Source><![CDATA[
    protected BatchCaption batchJobCaption()
    {
        return "@AccountsPayable:VendInvoiceAutomationWorkflowSubmissionBatchJobCaption";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>