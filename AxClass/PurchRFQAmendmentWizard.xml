<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQAmendmentWizard</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQAmendmentWizard extends SysWizard
{
    PurchRFQCaseId              purchRFQCaseId;
    boolean                     closeOK;
    LongDescription             reasonForReturn;
    LongDescription             reasonForAmendment;
    boolean                     sendNotificationEmail;
    Map                         vendorsEmailsMap;
    Map                         rfqVendorsJournalsToSend;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closeOK</Name>
				<Source><![CDATA[
    public boolean closeOK()
    {
        return closeOK;
    }

]]></Source>
			</Method>
			<Method>
				<Name>finish</Name>
				<Source><![CDATA[
    protected void finish()
    {
        closeOK = true;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    public FormName formName()
    {
        return formstr(PurchRFQAmendmentWizard);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchRFQCaseId</Name>
				<Source><![CDATA[
    public PurchRFQCaseId parmPurchRFQCaseId(PurchRFQCaseId _purchRFQCaseId = purchRFQCaseId)
    {
        purchRFQCaseId = _purchRFQCaseId;
        return purchRFQCaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonForAmendment</Name>
				<Source><![CDATA[
    public LongDescription parmReasonForAmendment(LongDescription _reasonForAmendment = reasonForAmendment)
    {
        reasonForAmendment = _reasonForAmendment;

        return reasonForAmendment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReasonForReturn</Name>
				<Source><![CDATA[
    public LongDescription parmReasonForReturn(LongDescription _reasonForReturn = reasonForReturn)
    {
        reasonForReturn = _reasonForReturn;

        return reasonForReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSendNotificationEmail</Name>
				<Source><![CDATA[
    public boolean parmSendNotificationEmail(boolean _sendNotificationEmail = sendNotificationEmail)
    {
        sendNotificationEmail = _sendNotificationEmail;
        return sendNotificationEmail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorsEmailsMap</Name>
				<Source><![CDATA[
    public Map parmVendorsEmailsMap(Map _vendorsEmailsMap = vendorsEmailsMap)
    {
        vendorsEmailsMap = _vendorsEmailsMap;
        return vendorsEmailsMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQVendorsJournalsToSend</Name>
				<Source><![CDATA[
    public Map parmRFQVendorsJournalsToSend(Map _rfqVendorsJournalsToSend = rfqVendorsJournalsToSend)
    {
        rfqVendorsJournalsToSend = _rfqVendorsJournalsToSend;
        return rfqVendorsJournalsToSend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPostingDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the posting dialog should be shown when posting.
    /// </summary>
    /// <returns>false</returns>
    /// <remarks>Returns always false since we don't want to show posting dialog when posting is done from the RFQ amendment wizard.</remarks>
    public boolean showPostingDialog()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupNavigation</Name>
				<Source><![CDATA[
    /*
    Use this method to setup the two arrays: nextEnabled[] and backEnabled[]
    Call this.nextEnabled(boolean) and this.backEnabled(boolean) to enable/disable the buttons runtime.
    */
    public void setupNavigation()
    {
        this.nextEnabled(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchRFQAmendmentWizard construct()
    {
        return new PurchRFQAmendmentWizard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(args args)
    {
        PurchRFQAmendmentWizard wizard = new PurchRFQAmendmentWizard();
        PurchRFQCaseTable purchRFQCaseTable = args.record();
        wizard.parmPurchRFQCaseId(purchRFQCaseTable.RFQCaseId);

        if (wizard.prompt())
        {
            wizard.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>