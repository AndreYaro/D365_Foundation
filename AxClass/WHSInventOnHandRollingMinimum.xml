<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventOnHandRollingMinimum</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Keeps a minimum value from all the values added to it.
/// </summary>
internal final class WHSInventOnHandRollingMinimum
{
    private boolean isAnyValueAdded;
    private InventQty minValue;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Compares given value to already accumulated minimum. If it is smaller, it becomes a new minimum. Otherwise value is discarded.
    /// </summary>
    /// <param name = "_value">A value to compare to the current running minimum.</param>
    [Hookable(false)]
    public void addValue(InventQty _value)
    {
        if (isAnyValueAdded)
        {
            minValue = min(minValue, _value);
        }
        else
        {
            minValue = _value;
        }

        isAnyValueAdded = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>minValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets current running minimum value.
    /// </summary>
    /// <returns>Current running minimum.</returns>
    [Hookable(false)]
    public InventQty minValue()
    {
        return minValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>