<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmmCampaignSelectionCreateMailing</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SmmCampaignSelectionCreateMailing extends smmCreateMailing
{
    smmCampaignId            callerCampaignId;

    #define.CurrentVersion(1)

    #localmacro.CurrentList
        callerCampaignId
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList,super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    boolean  unpack(container  packedClass)
    {
        Integer     version = RunBase::getVersion(packedClass);
        switch (version)
        {
            case #CurrentVersion:
                container   base;
                [version,#CurrentList,base] = packedClass;
                return super(base);
            default:
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    public void initQuery()
    {
        QueryBuildRange campaignRange;

        campaignRange = this.queryRun().query().dataSourceNo(1).rangeField(fieldnum(smmCampaignSelection, CampaignId));

        if (campaignRange)
        {
            campaignRange.value(callerCampaignId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the instance of the <c>QueryRun</c> class, which is used by the <c>queryPrompt</c> method.
    /// </summary>
    /// <returns>
    /// The instance of the <c>QueryRun</c> class, which is used by the <c>queryPrompt</c> method.
    /// </returns>
    /// <remarks>
    /// This method is used if a query prompt is the dialog, and if a Select menu item is added to a
    /// dialog. Do not create the instance of the <c>QueryRun</c> class when this method is called. Do it
    /// in the <c>unpack</c> method and the <c>initParmDefault</c> method, or in the <c>init</c> method.
    /// </remarks>
    public QueryRun queryRun()
    {
        if (! mailingQR)
        {
            mailingQR = new QueryRun(querystr(smmCampaignMailingQuery));
        }

        return mailingQR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        smmCampaignSelectionCreateMailing::processOnServer(mailingQR.pack(), updateStatus, filename, userDate, callerCampaignId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCallerCampaignId</Name>
				<Source><![CDATA[
    public void setCallerCampaignId(smmCampaignId _callerCampaignId)
    {
        callerCampaignId = _callerCampaignId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static smmCampaignSelectionCreateMailing construct()
    {
        return new smmCampaignSelectionCreateMailing();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        smmCampaignTable                  smmCampaignTable;
        smmCampaignSelectionCreateMailing smmCampaignSelectionCreateMailing = smmCampaignSelectionCreateMailing::construct();

        smmCampaignSelectionCreateMailing.getLast();

        if (args)
        {
            if (args.record())
            {
                smmCampaignTable = args.record();
                smmCampaignSelectionCreateMailing.setCallerCampaignId(smmCampaignTable.CampaignId);
            }
        }

        smmCampaignSelectionCreateMailing.initQuery();

        if (smmCampaignSelectionCreateMailing.prompt())
        {
            if (args.object())
            {
                smmCampaignSelectionCreateMailing.setQueryRun(args.object());
            }

            smmCampaignSelectionCreateMailing.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@SYS80639";
    }

]]></Source>
			</Method>
			<Method>
				<Name>processOnServer</Name>
				<Source><![CDATA[
    static void processOnServer(container packedQuery, boolean updateStatus, Filename filename, date userDate, smmCampaignId callerCampaignId)
    {
        smmCampaignSelection              curCampaignSelection,updCampaignSelection;
        DirPartyTable                     dirPartyTable;
        ContactPerson                     contactPerson;
        Counter                           total;
        smmCampaignId                     campaignId;
        smmCampaignSelectionCreateMailing smmCampaignSelectionCreateMailing;
        QueryRun                          mailingQR = new QueryRun(packedQuery);

        smmCampaignSelectionCreateMailing = new smmCampaignSelectionCreateMailing();
        smmCampaignSelectionCreateMailing.parmFileName(filename);
        smmCampaignSelectionCreateMailing.parmUpdateStatus(updateStatus);
        smmCampaignSelectionCreateMailing.parmUserDate(userDate);

        // Get total number of records in query
        total = QueryRun::getQueryRowCount(mailingQR.query(), intMax());

        // Creating mailing file
        smmCampaignSelectionCreateMailing.progressInit("@SYS80639", total, #AviUpdate);

        // Create a header line
        smmCampaignSelectionCreateMailing.writeHeader();

        while (mailingQR.next())
        {
            if (mailingQR.changed(tablenum(smmCampaignSelection)))
            {
                curCampaignSelection = mailingQR.get(tablenum(smmCampaignSelection));
            }

            campaignId = curCampaignSelection.CampaignId;

            if (mailingQR.changed(tablenum(DirPartyTable)))
            {
                dirPartyTable = mailingQR.get(tablenum(DirPartyTable));
            }

            if (! curCampaignSelection.ContactPersonId)
            {
                // Write only BR info
                smmCampaignSelectionCreateMailing.writeLine(
                    dirPartyTable.RecId,
                    dirPartyTable.Name,
                    null);

                continue;
            }

            if (mailingQR.changed(tablenum(ContactPerson)))
            {
                contactPerson = mailingQR.get(tablenum(ContactPerson));

                // Write Contact info
                smmCampaignSelectionCreateMailing.writeLine(
                    curCampaignSelection.Party,
                    dirPartyTable.Name,
                    contactPerson);

                if (updateStatus)
                {
                    ttsbegin;

                    updCampaignSelection = smmCampaignSelection::findCampaign(
                        curCampaignSelection.CampaignId,
                        curCampaignSelection.Party,
                        curCampaignSelection.ContactPersonId,
                        true);

                    updCampaignSelection.BroadcastType    = smmCampaignBroadcastType::SnailMail;
                    updCampaignSelection.DistributionDate = userDate;
                    updCampaignSelection.update();

                    ttscommit;
                }
            }
        }

        // Save the file with a client bound method
        smmCreateMailing::saveFileToClient(filename,smmCampaignSelectionCreateMailing.fileListPack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>