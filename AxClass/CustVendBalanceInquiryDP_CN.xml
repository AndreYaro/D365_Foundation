<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendBalanceInquiryDP_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data provider class <c>CustVendBalanceInquiryDP_CN</c> declares the variables used by the report <c>CustVendBalanceInquiry_CN</c>.
/// </summary>
[
    SRSReportParameterAttribute(classStr(SrsTmpTblMarshallerContract))
]
public class CustVendBalanceInquiryDP_CN extends SRSReportDataProviderBase
{
    CustVendBalanceListTmp_CN tmptable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustVendBalanceListTmp_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the actual data for the report from the <c>CustVendBalanceListTmp_CN</c> temporary table.
    /// </summary>
    /// <returns>
    /// The <c>CustVendBalanceListTmp_CN</c> temporary table.
    /// </returns>
    [
        SrsReportDataSetAttribute(tableStr(CustVendBalanceListTmp_CN))
    ]
    public CustVendBalanceListTmp_CN getCustVendBalanceListTmp_CN()
    {
        return tmptable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    public void processReport()
    {
        SrsReportRunPermission permission;
        RecId                  tmpTblDataRecId;

        SrsTmpTblMarshallerContract contract = this.parmDataContract() as SrsTmpTblMarshallerContract;

        tmpTblDataRecId = contract.parmTmpTableDataRecId();
        permission      = new SrsReportRunPermission();
        permission.assert();

        //Temp Table Object that was returned from SRSTmpTblMarshaller
        tmptable = SRSTmpTblMarshaller::GetTmpTbl(tmpTblDataRecId);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
