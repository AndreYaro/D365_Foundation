<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdWorkCenterSummaryStatusContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>ProdWorkCenterSummaryStatus_CN</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>ProdWorkCenterSummaryStatus_CN</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(ProdWorkCenterSummaryStatusUIBuilder_CN), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
class ProdWorkCenterSummaryStatusContract_CN implements SysOperationValidatable
{
    ProdId          prodId;
    WrkCtrIdBase    wrkCtrId;
    TransDate       FromDate;
    TransDate       ToDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS177151")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public TransDate parmFromDate(transDate _fromDate = FromDate)
    {
        FromDate  = _fromDate;
        return FromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Production.
    /// </summary>
    /// <param name="_prodId">
    /// The new value of the datacontract parameter Production; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter Production
    /// </returns>
    [
        DataMemberAttribute('ProdId'),
        SysOperationLabelAttribute(literalstr("@GLS64369")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public prodId parmProdId(ProdId _prodId = prodId)
    {
        prodId  = _prodId;
        return prodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS177152")),
        SysOperationDisplayOrderAttribute('4')
    ]
    public TransDate parmToDate(transDate _toDate = ToDate)
    {
        ToDate  = _toDate;
        return ToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWrkCtrId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter WorkCenter.
    /// </summary>
    /// <param name="_wrkCtrId">
    /// The new value of the datacontract parameter WorkCenter; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter WorkCenter
    /// </returns>
    [
        DataMemberAttribute('WrkCtrId'),
        SysOperationLabelAttribute(literalstr("@GLS64368")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public WrkCtrIdBase parmWrkCtrId(WrkCtrIdBase _wrkCtrId = wrkCtrId)
    {
        wrkCtrId  = _wrkCtrId;
        return wrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!this.parmFromDate())
        {
            //Please enter a date for the parameter From date.
            isValid = checkFailed(strFmt("@GLS64410", "@SYS24050"));
        }

        if (isValid && !this.parmToDate())
        {
            //Please enter a date for the parameter To date.
            isValid = checkFailed(strFmt("@GLS64410", "@SYS35904"));
        }

        if (isValid && this.parmFromDate() > this.parmToDate())
        {
            //From date should not be later than To date.
            isValid = checkFailed("@GLS64374");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>