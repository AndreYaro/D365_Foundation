<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAccountStatementExtContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustAccountStatementExtContract</c> class is the contract for the
///    <c>CustAccountStatementExt</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(CustAccountStatementExtUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class CustAccountStatementExtContract extends SrsPrintMgmtContract implements SysOperationInitializable
{
    RecId recordId;

    TransDate fromDate;
    TransDate toDate;
    boolean onlyOpen;
    boolean includeReversed;
    PaymentStub printGiro;
    boolean printNonZero;
    boolean printAmountGiro;
    boolean printPaymentSchedule;
    boolean printCreditLimit;
    TransDate specifyDueToDate;
    boolean printAging;
    CustVendAgingBucketLookUp agingBucket;
    NoYesCombo agingBucketPrintDescription;
    PositiveDays interval;
    DayMonth dayMonth;
    ForwardBackwardPrinting printingDirection;
    boolean agingPeriod;
    boolean manualSetup;
    private boolean singleCurrencyReport = false;
    boolean usePrintManagement;
    Str60 printType;
    CustAccount custAccount;
    TableNameShort CustAccountStatementExtTmp;
    DateCode dateCode;
    private boolean hideSSRSDestination;
    boolean includeCompanyLogo;
    private boolean cleanUpData = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAgingBucket</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('AgingBucket'),
        SysOperationLabelAttribute(literalStr("@SYS78607")),
        SysOperationHelpTextAttribute(literalStr("@SYS28056"))
    ]
    public CustVendAgingBucketLookUp parmAgingBucket(CustVendAgingBucketLookUp _agingBucket = agingBucket)
    {
        agingBucket = _agingBucket;
        return agingBucket;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingBucketPrintDescription</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('AgingBucketPrintDescription'),
        SysOperationLabelAttribute(literalStr("@SYS96941")),
        SysOperationHelpTextAttribute(literalStr("@SYS96942"))
    ]
    public NoYesCombo parmAgingBucketPrintDescription(NoYesCombo _agingBucketPrintDescription = agingBucketPrintDescription)
    {
        agingBucketPrintDescription = _agingBucketPrintDescription;
        return agingBucketPrintDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingPeriod</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('AgingPeriod')
    ]
    public boolean parmAgingPeriod(boolean _agingPeriod = agingPeriod)
    {
        agingPeriod = _agingPeriod;
        return agingPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter CustAccount.
    /// </summary>
    /// <param name="_custAccount">
    /// The new value of the datacontract parameter CustAccount.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter CustAccount.
    /// </returns>
    [DataMemberAttribute('CustAccount')]
    public CustAccount parmCustAccount(CustAccount _custAccount = custAccount)
    {
        custAccount = _custAccount;
        return custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDayMonth</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('DayMonth'),
        SysOperationLabelAttribute(literalStr("@SYS16024")),
        SysOperationHelpTextAttribute(literalStr("@SYS67813"))
    ]
    public DayMonth parmDayMonth(DayMonth _dayMonth = dayMonth)
    {
        dayMonth = _dayMonth;
        return dayMonth;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalStr("@SYS5209")),
        SysOperationHelpTextAttribute(literalStr("@SYS26930"))
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeReversed</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('IncludeReversed'),
        SysOperationLabelAttribute(literalStr("@SYS78625")),
        SysOperationHelpTextAttribute(literalStr("@SYS78627"))
    ]
    public boolean parmIncludeReversed(boolean _includeReversed = includeReversed)
    {
        includeReversed = _includeReversed;
        return includeReversed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterval</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('Interval'),
        SysOperationLabelAttribute(literalStr("@SYS12899")),
        SysOperationHelpTextAttribute(literalStr("@SYS17806"))
    ]
    public PositiveDays parmInterval(PositiveDays _interval = interval)
    {
        interval = _interval;
        return interval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManualSetup</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('ManualSetup')
    ]
    public boolean parmManualSetup(boolean _manualSetup = manualSetup)
    {
        manualSetup = _manualSetup;
        return manualSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSingleCurrencyReport</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('SingleCurrencyReport'),
        SysOperationLabelAttribute(literalStr("@CreditCollections:SingleCurrencyReport")),
        SysOperationHelpTextAttribute(literalStr("@CreditCollections:SingleCurrencyReportHelpText"))
    ]
    public boolean parmSingleCurrencyReport(boolean _singleCurrencyReport = singleCurrencyReport)
    {
        singleCurrencyReport = _singleCurrencyReport;
        return singleCurrencyReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnlyOpen</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('OnlyOpen'),
        SysOperationLabelAttribute(literalStr("@SYS6319")),
        SysOperationHelpTextAttribute(literalStr("@SYS24962"))
    ]
    public boolean parmOnlyOpen(boolean _onlyOpen = onlyOpen)
    {
        onlyOpen = _onlyOpen;
        return onlyOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintAging</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintAging'),
        SysOperationLabelAttribute(literalStr("@SYS69662")),
        SysOperationHelpTextAttribute(literalStr("@SYS70384"))
    ]
    public boolean parmPrintAging(boolean _printAging = printAging)
    {
        printAging = _printAging;
        return printAging;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintAmountGiro</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintAmountGiro'),
        SysOperationLabelAttribute(literalStr("@SYS69799")),
    SysOperationHelpTextAttribute(literalStr("@SYS70382"))
    ]
    public boolean parmPrintAmountGiro(boolean _printAmountGiro = printAmountGiro)
    {
        printAmountGiro = _printAmountGiro;
        return printAmountGiro;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintCreditLimit</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintCreditLimit'),
        SysOperationLabelAttribute(literalStr("@SYS68219")),
        SysOperationHelpTextAttribute(literalStr("@SYS70383"))
    ]
    public boolean parmPrintCreditLimit(boolean _printCreditLimit = printCreditLimit)
    {
        printCreditLimit = _printCreditLimit;
        return printCreditLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintGiro</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintGiro'),
        SysOperationLabelAttribute(literalStr("@SYS314494")),
        SysOperationHelpTextAttribute(literalStr("@SYS69602"))
    ]
    public PaymentStub parmPrintGiro(PaymentStub _printGiro = printGiro)
    {
        printGiro = _printGiro;
        return printGiro;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintingDirection</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintingDirection'),
        SysOperationLabelAttribute(literalStr("@SYS70307")),
        SysOperationHelpTextAttribute(literalStr("@SYS70312"))
    ]
    public ForwardBackwardPrinting parmPrintingDirection(ForwardBackwardPrinting _printingDirection = printingDirection)
    {
        printingDirection = _printingDirection;
        return printingDirection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintNonZero</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintNonZero'),
        SysOperationLabelAttribute(literalStr("@SYS69804")),
        SysOperationHelpTextAttribute(literalStr("@SYS69805"))
    ]
    public boolean parmPrintNonZero(boolean _printNonZero = printNonZero)
    {
        printNonZero = _printNonZero;
        return printNonZero;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintPaymentSchedule</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintPaymentSchedule'),
        SysOperationLabelAttribute(literalStr("@SYS67749")),
        SysOperationHelpTextAttribute(literalStr("@SYS67750"))
    ]
    public boolean parmPrintPaymentSchedule(boolean _printPaymentSchedule = printPaymentSchedule)
    {
        printPaymentSchedule = _printPaymentSchedule;
        return printPaymentSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintType</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('PrintType')
    ]
    public Str60 parmPrintType(Str60 _printType = printType)
    {
        printType = _printType;
        return printType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter RecordId.
    /// </summary>
    /// <param name="_recordId">
    /// The new value of the datacontract parameter RecordId.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter RecordId.
    /// </returns>
    [DataMemberAttribute('RecordId')]
    public RecId parmRecordId(RecId _recordId = recordId)
    {
        recordId = _recordId;
        return recordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSpecifyDueToDate</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('SpecifyDueToDate'),
        SysOperationLabelAttribute(literalStr("@SYS78141")),
        SysOperationHelpTextAttribute(literalStr("@SYS78142"))
    ]
    public TransDate parmSpecifyDueToDate(TransDate _specifyDueToDate = specifyDueToDate)
    {
        specifyDueToDate = _specifyDueToDate;
        return specifyDueToDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationHelpTextAttribute(literalStr("@SYS26929"))
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUsePrintManagement</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('UsePrintManagement'),
        SysOperationLabelAttribute(literalStr("@SYS93922")),
        SysOperationHelpTextAttribute(literalStr("@SYS318700"))
    ]
    public boolean parmUsePrintManagement(boolean _usePrintManagement = usePrintManagement)
    {
        usePrintManagement = _usePrintManagement;
        return usePrintManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccountStatementExtTmp</Name>
				<Source><![CDATA[
    [DataMemberAttribute('PhysicalTableName')]
    public TableNameShort parmCustAccountStatementExtTmp(TableNameShort _custAccountStatementExtTmp = custAccountStatementExtTmp)
    {
        custAccountStatementExtTmp = _custAccountStatementExtTmp;
        return custAccountStatementExtTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dateCode.
    /// </summary>
    /// <param name="_dateCode">
    /// The new value of the datacontract parameter dateCode.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter dateCode.
    /// </returns>
    [
        DataMember('DateCode'),
        SysOperationLabel(literalstr("@SYS22526")),
        SysOperationHelpText(literalstr("@SYS60051")),
        Hookable(false)
    ]
    public DateCode parmDateCode(DateCode _dateCode = dateCode)
    {
        dateCode = _dateCode;
        return dateCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret = true;

        if (this.parmFromDate() > this.parmToDate())
        {
            ret = checkFailed("@SYS16982");
        }

        if (this.parmDateCode())
        {
            ret = LedgerPeriodCode::checkExist(this.parmDateCode()) && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public void initialize()
    {
        if (CustAccountStatementExtIncludeLogoDialogFlight::instance().isEnabled())
        {
            this.parmIncludeCompanyLogo(true);
        }

        if (CustAccountStatementExtCleanTmpTableFlight::instance().isEnabled())
        {
            this.parmCleanUpData(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideSSRSDestination</Name>
				<Source><![CDATA[
    public boolean parmHideSSRSDestination(boolean _hideSSRSDestination = hideSSRSDestination)
    {
        hideSSRSDestination = _hideSSRSDestination;
        return hideSSRSDestination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeCompanyLogo</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('IncludeCompanyLogo'),
        SysOperationLabelAttribute(literalStr("@CreditCollections:IncludeCompanyLogo")),
        SysOperationHelpTextAttribute(literalStr("@CreditCollections:IncludeCompanyLogoHelpText"))
    ]
    public boolean parmIncludeCompanyLogo(boolean _includeCompanyLogo = includeCompanyLogo)
    {
        includeCompanyLogo = _includeCompanyLogo;
        return includeCompanyLogo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCleanUpData</Name>
				<Source><![CDATA[
    public boolean parmCleanUpData(boolean _cleanUpData = cleanUpData)
    {
        cleanUpData = _cleanUpData;
        return cleanUpData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>