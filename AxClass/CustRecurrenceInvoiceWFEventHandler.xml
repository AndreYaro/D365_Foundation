<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustRecurrenceInvoiceWFEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustFreeInvoiceWorkflowEventHandler</c> class is used to handle the workflow level events of
///    the free text invoice workflow.
/// </summary>
public class CustRecurrenceInvoiceWFEventHandler implements
    WorkflowStartedEventHandler,
    WorkflowCanceledEventHandler,
    WorkflowCompletedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WorkflowApprovalState</c> field on the <c>CustRecurrenceInvoiceGroup</c> table to the
    /// <c>CustFreeInvoiceWFApprovalState::NotSubmitted</c> enumeration value.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// A <c>WorkflowEventArgs</c> object.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is canceled. The
    /// <c>WorkflowApprovalState</c> field in the <c>CustRecurrenceInvoiceGroup</c> table is set to the
    /// <c>CustFreeInvoiceWFApprovalState::NotSubmitted</c> enumeration value and the
    /// <c>WorkflowApprovalStatus</c> field is set to the <c>CustFreeInvoiceWFApprovalStatus::Draft</c>
    /// enumeration value.
    /// </remarks>
    public void canceled(WorkflowEventArgs _workflowEventArgs)
    {
        CustRecurrenceInvoiceGroup::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), CustFreeInvoiceWFApprovalState::NotSubmitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WorkflowApprovalState</c> and <c>WorkflowApprovalStatus</c> fields in the
    /// <c>CustRecurrenceInvoiceGroup</c> table to the <c>CustFreeInvoiceWFApprovalState::Approved</c>
    /// enumeration value.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is completed.
    /// </remarks>
    public void completed(WorkflowEventArgs _workflowEventArgs)
    {
        CustRecurrenceInvoiceGroup::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), CustFreeInvoiceWFApprovalState::WorkflowCompleted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>WorkflowApprovalState</c> and <c>WorkflowApprovalStatus</c> fields on the
    /// <c>CustRecurrenceInvoiceGroup</c> table.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is started. The
    /// <c>WorkflowApprovalState</c> field in the <c>CustRecurrenceInvoiceGroup</c> table is set to the
    /// <c>CustFreeInvoiceWFApprovalState::Submitted</c> enumeration value and the
    /// <c>WorkflowApprovalStatus</c> field is set to the
    /// <c>CustFreeInvoiceWFApprovalStatus::PendingApproval</c> enumeration value.
    /// </remarks>
    public void started(WorkflowEventArgs _workflowEventArgs)
    {
        CustRecurrenceInvoiceGroup::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), CustFreeInvoiceWFApprovalState::Submitted);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>