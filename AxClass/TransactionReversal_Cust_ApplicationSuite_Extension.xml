<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransactionReversal_Cust_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(TransactionReversal_Cust))]
internal final class TransactionReversal_Cust_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInvoiceJourExtensions</Name>
				<Source><![CDATA[
    protected void createInvoiceJourExtensions(CustInvoiceJour _custInvoiceJourNew, CustInvoiceJour _custInvoiceJourOrig)
    {
        next createInvoiceJourExtensions(_custInvoiceJourNew, _custInvoiceJourOrig);

        #ISOCountryRegionCodes
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        {
            CustInvoiceJour_W custInvoiceJour_W = _custInvoiceJourNew.custInvoiceJour_W();
            custInvoiceJour_W.WhoIsAuthor_LT = _custInvoiceJourOrig.custInvoiceJour_W().WhoIsAuthor_LT;
            _custInvoiceJourNew.packCustInvoiceJour_W(custInvoiceJour_W);
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            CustInvoiceJour_PL custInvoiceJour_PL = _custInvoiceJourNew.custInvoiceJour_PL();
            custInvoiceJour_PL.FiscalDocState_PL = _custInvoiceJourOrig.custInvoiceJour_PL().FiscalDocState_PL;
            _custInvoiceJourNew.packCustInvoiceJour_PL(custInvoiceJour_PL);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reversal</Name>
				<Source><![CDATA[
    void reversal(Args args)
    {
        next reversal(args);

        if (TaxConsInvoice_JP::isTaxDifferencePostingOnConsInvoiceEnabled(true))
        {
            CustConsInvoice_JP custConsInvoice_JP = CustConsInvoice_JP::findByCustTrans(custTrans, false);

            if (custConsInvoice_JP)
            {
                custConsInvoice_JP.updateReversalStatusFromReversal(custTrans.Voucher);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>