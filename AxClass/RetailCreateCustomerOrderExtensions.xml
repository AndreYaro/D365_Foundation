<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCreateCustomerOrderExtensions</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Collections.Specialized;
using System.Reflection;
using Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;

/// <summary>
///     The <c>RetailCreateCustomerOrderExtensions</c> class is used to provide extensibility to Retail Customer Order Creation.
/// </summary>
public class RetailCreateCustomerOrderExtensions
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowResetRetailOrderLineWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks a condition to reset warehouse location.
    /// </summary>
    /// <param name = "_itemInfo">
    ///     Item information.
    /// </param>
    /// <param name = "_inventDim">
    ///     Inventory dimension.
    /// </param>
    /// <param name = "_isCarryOutLine">
    ///     Boolean to determine if Line is not cash and carry.
    /// </param>
    /// <returns>
    ///     true for the following; otherwise false.
    ///         1. Line is not cash and carry.
    ///         2. Advanced Warehouse Management is enabled for the item.
    ///         3. Delivery mode is not empty.
    ///         4. Line is not a return.
    ///         5. Location is not empty.
    ///         6. Line is being newly added or current location id empty.
    /// </returns>
    public static boolean allowResetRetailOrderLineWarehouse(ItemInfo _itemInfo, InventDim _inventDim, boolean _isCarryOutLine)
    {
        boolean isReturnLine = _itemInfo.Quantity < 0;
        boolean isItemWHSEnabled = WHSInventEnabled::exist(_itemInfo.ItemId);

        return !_isCarryOutLine && isItemWHSEnabled && _itemInfo.DeliveryMode != '' && !isReturnLine && _inventDim.wMSLocationId != ''
            && (_itemInfo.RecId == 0 || _itemInfo.WmsLocationId == '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderHeaderBeforeInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> createOrUpdateRetailOrderHeader() before the customer order is inserted.
    /// </summary>
    /// <param name = "args">RetailCustomerOrderHeaderParameters object which holds all arguments.</param>
    [Replaceable]
    public static void orderHeaderBeforeInsert(RetailCustomerOrderHeaderParameters args)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preOrderLineUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> createOrUpdateRetailOrderLines() before the existing order line is updated.
    /// </summary>
    /// <param name = "retailCustomerOrderLineParameters">RetailCustomerOrderLineParameters object which holds parameters for order line update.</param>
    [Replaceable]
    public static void preOrderLineUpdate(RetailCustomerOrderLineParameters retailCustomerOrderLineParameters)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSalesLineCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> createOrUpdateRetailOrderLines() before the sales line is inserted.
    /// </summary>
    /// <param name = "parameters">RetailCustomerOrderLineParameters object which holds all arguments.</param
    /// <param name = "salesLineCreateLineParameters">SalesLineCreateLineParameters object which holds the sales line creation parameters.</param>
    [Replaceable]
    public static void preSalesLineCreate(RetailCustomerOrderLineParameters retailCustomerOrderLineParameters, SalesLineCreateLineParameters salesLineCreateLineParameters)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSalesQuotationLineCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> createOrUpdateRetailOrderLines() before the sales quotation line is inserted.
    /// </summary>
    /// <param name = "parameters">RetailCustomerOrderLineParameters object which holds all arguments.</param
    /// <param name = "salesQuotationLineCreateLineParameters">SalesQuotationLineCreateLineParameters object which holds the sales quotation line creation parameters.</param>
    [Replaceable]
    public static void preSalesQuotationLineCreate(RetailCustomerOrderLineParameters retailCustomerOrderLineParameters, SalesQuotationLineCreateLineParameters salesQuotationLineCreateLineParameters)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>retailOrderCreated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> createCustomerOrderNew() after the customer order is created.
    /// </summary>
    /// <param name = "args">RetailCustomerOrderHeaderParameters object which holds all arguments.</param>
    [Replaceable]
    public static void retailOrderCreated(RetailCustomerOrderHeaderParameters args)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extensibility point at the end of <c>RetailTransactionServiceOrders</c> settleCustomerOrder().
    /// </summary>
    [Replaceable]
    public static boolean skipInvoice()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>