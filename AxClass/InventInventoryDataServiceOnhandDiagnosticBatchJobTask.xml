<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDataServiceOnhandDiagnosticBatchJobTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class InventInventoryDataServiceOnhandDiagnosticBatchJobTask extends InventInventoryDataServiceBatchJobTask
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runAsync</Name>
				<Source><![CDATA[
    internal System.Threading.Tasks.Task runAsync()
    {
        System.Threading.Tasks.Task threadTask = runAsync(classNum(InventInventoryDataServiceOnhandDiagnosticBatchJobTask),
                                                          staticMethodStr(InventInventoryDataServiceOnhandDiagnosticBatchJobTask, runOperationAsync),
                                                          [this.pack()]);

        return threadTask;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runOperationAsync</Name>
				<Source><![CDATA[
    protected static void runOperationAsync(container params, System.Threading.CancellationToken cancellationToken)
    {
        InventInventoryDataServiceOnhandDiagnosticBatchJobTask dataCollectionTask = new InventInventoryDataServiceOnhandDiagnosticBatchJobTask();
        container packedDataCollectionTask;

        [packedDataCollectionTask] = params;
        dataCollectionTask.unpack(packedDataCollectionTask);

        dataCollectionTask.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.runProcessOnHandDiagnoseQueue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runProcessOnHandDiagnoseQueue</Name>
				<Source><![CDATA[
    public void runProcessOnHandDiagnoseQueue()
    {
        var indexQueryEvents = InventoryServiceOnHandCheckTable::generateIndexQueryEvents(minRecId, maxRecId);

        if (!indexQueryEvents.empty())
        {
            this.postIndexQuery(indexQueryEvents, isPartitionByProductIdForDiagTool);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postIndexQuery</Name>
				<Source><![CDATA[
    private void postIndexQuery(List _indexQueryEvents, boolean _isPartitionByProductIdForDiagTool)
    {
        var inventoryServiceClient = new InventoryServiceClient();
        var inventInventoryDataServiceInstrumentationActivity = logger.getInventoryDataServiceActivity();
        using (var activityContext = inventInventoryDataServiceInstrumentationActivity.getActivityContext_QueryOnHand())
        {
            var indexQueryEventsEnum = _indexQueryEvents.getEnumerator();

            while (indexQueryEventsEnum.moveNext())
            {
                var indexQueryEvent = indexQueryEventsEnum.current() as InventOnHandIndexQueryEvent;
                
                var companyId = indexQueryEvent.getCompany();
                InventInventoryDataServiceQueryResponses responses;

                try
                {
                    responses = inventoryServiceClient.postIndexQuery(indexQueryEvent);
                    if (responses.parmRawStatusCode() == System.Net.HttpStatusCode::OK)
                    {
                        var queryResponses = responses.parmQueryResponses();

                        var queryResponsesEnum = queryResponses.getEnumerator();
                        while (queryResponsesEnum.moveNext())
                        {
                            var queryResponse = queryResponsesEnum.current() as InventInventoryDataServiceQueryResponse;
                            InventoryServiceOnHandCheckTable::updateWithResponseV2(companyId, queryResponse, _isPartitionByProductIdForDiagTool);
                        }
                    }
                }
                catch
                {
                    if (InventInventoryDataServiceRetryHelper::retryTransientError())
                    {
                        retry;
                    }
                    else
                    {
                        continue;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>