<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustFreeInvoiceForm_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains the logic of processing Intent letters lookup for <c>CustFreeInvoice</c> form.
/// </summary>
public static class CustFreeInvoiceForm_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CustInvoiceTable_IntentLetterId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows to display open intent letters for given customer.
    /// </summary>
    /// <param name = "_sender">The event sender.</param>
    /// <param name = "_e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(CustFreeInvoice, IntentLetter_IntentLetterId_IT), FormControlEventType::Lookup)]
    public static void CustInvoiceTable_IntentLetterId_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        if (FeatureStateProvider::isFeatureEnabled(IntentLettersFeature::instance()))
        {
            CustInvoiceTable custInvoiceTable = _sender.dataSourceObject().cursor() as CustInvoiceTable;

            if (custInvoiceTable)
            {
                CustIntentLetter_IT::lookupOpenIntentLetter_IT(_sender, custInvoiceTable.InvoiceAccount);
                // Do not call super to avoid another lookup form from <c>PurchTable</c>
                FormControlCancelableSuperEventArgs ce = _e as FormControlCancelableSuperEventArgs;

                if (ce)
                {
                    ce.CancelSuperCall();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CustInvoiceTable_TaxId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs lookup for company tax registration numbers.
    /// </summary>
    /// <param name = "_sender">The event sender.</param>
    /// <param name = "_e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(CustFreeInvoice, TaxRegistrationNumber_TaxId), FormControlEventType::Lookup)]
    public static void CustInvoiceTable_TaxId_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        CustInvoiceTable custInvoiceTable = _sender.dataSourceObject().cursor() as CustInvoiceTable;

        if (custInvoiceTable)
        {
            if (CompanyTaxRegistrationEntityLookUpFlight::instance().isEnabled())
            {
                TaxInformation_IN::lookUpReferenceTaxRegistration(_sender, 0, CompanyInfo::find().RecId);
            }
            else
            {
                TaxInformation_IN::lookUpReferenceTaxRegistration(_sender);
            }

            FormControlCancelableSuperEventArgs ce = _e as FormControlCancelableSuperEventArgs;

            if (ce)
            {
                ce.CancelSuperCall();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>