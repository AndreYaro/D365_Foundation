<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegType_PayRoll</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class encapsulates Russian payroll register type.
/// </summary>
final class RTax25RegType_PayRoll extends RTax25RegType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns register description.
    /// </summary>
    /// <returns>
    /// register description.
    /// </returns>
    public NotesLine description()
    {
        return "@RUP44";
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
/// <summary>
    /// Initializes the register's variables, structure and parameters.
    /// </summary>
    /// <param name="_useDetachedTable">
    /// If register uses separate table for data storage, then its true.
    /// </param>
    #define.FieldNum(5)
    public void init(boolean _useDetachedTable = true)
    {
        if (_useDetachedTable)
        {
            detachedTableId = tablenum(RTax25RegisterTrans_PayRoll);
            this.initFromDetachedTable();
        }
        else
    {
        fieldType        = [ extendedtypenum(EmplName),
                             extendedtypenum(Description),
                             extendedtypenum(TransDate),
                             extendedtypenum(Description),
                             extendedtypenum(RPayAmount),
                             extendedtypenum(Description)];

        fieldLabel       = [ "@RUP37",
                             "@RUP38",
                             "@GLS103606",
                             "@RUP35",
                             "@GLS103701",
                             "@GLS104291"];

        fieldDescription = [ "@RUP39",
                             "@RUP40",
                             "@RUP41",
                             "@RUP42",
                             "@RUP43",
                             "@GLS104291"];
        }

        registerType = RTax25RegisterType::Payroll;

        headerFields = [0,0,0,0,1,0];

        super();

        balanceField = #FieldNum;
    }
]]></Source>
			</Method>
			<Method>
				<Name>supportLedger</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if register type supports ledger.
    /// </summary>
    /// <returns>
    /// true if register type supports ledger, false otherwise.
    /// </returns>
    public boolean supportLedger()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>