<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPaymReconciliationImportDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Defines settings of "Return file" of Vendor Payment Transfers.
/// </summary>
public final class VendPaymReconciliationImportDialog
{
    private DialogField dialogPaymMode;
    private DialogField configurationSelectorField;

    private const str VendorJournalIntegrationPoint = classStr(ERTableDestination) + '#' + tableStr(VendorPaymentJournalLineEntity);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static VendPaymReconciliationImportDialog construct()
    {
        return new VendPaymReconciliationImportDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows dialogs to specify settings of "Return file" of Vendor Payment Transfers.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> object from the calling form.
    /// </param>
    public void openDialog(Args _args)
    {
        Dialog dialog = this.createDialog();

        if (dialog.run())
        {
            VendPaymModeTable vendPaymMode = VendPaymModeTable::find(dialogPaymMode.value());

            if (vendPaymMode.UseGERConfigurationForReturn)
            {
                ERModelMappingId mappingId;

                if (vendPaymMode.ERReturnConfiguration && vendPaymMode.ERReturnConfigurationSecondary)
                {
                    if (vendPaymMode.ERReturnConfiguration == vendPaymMode.ERReturnConfigurationSecondary)
                    {
                        mappingId = vendPaymMode.ERReturnConfiguration;
                    }
                    else
                    {
                        Dialog dialogER = this.createConfigurationSelectorDialog(vendPaymMode.ERReturnConfiguration, vendPaymMode.ERReturnConfigurationSecondary);

                        if (dialogER.run())
                        {
                            mappingId = configurationSelectorField.value() == 0 ? vendPaymMode.ERReturnConfiguration : vendPaymMode.ERReturnConfigurationSecondary;
                        }
                    }
                }
                else if (vendPaymMode.ERReturnConfiguration)
                {
                    mappingId = vendPaymMode.ERReturnConfiguration;
                }
                else if (vendPaymMode.ERReturnConfigurationSecondary)
                {
                    mappingId = vendPaymMode.ERReturnConfigurationSecondary;
                }

                Map parametersValuesMap = new Map(Types::String, Types::AnyType);
                parametersValuesMap.insert('$PaymMode', vendPaymMode.PaymMode);

                DimensionAttributeValueCombination dimensionAttributeValueCombination = DimensionAttributeValueCombination::find(vendPaymMode.PaymentLedgerDimension);
                BankAccountTable bankAccount = BankAccountTable::find(dimensionAttributeValueCombination.DisplayValue);

                using (CustVendPaymAdditionalParamsHelperRunReportContext context = new CustVendPaymAdditionalParamsHelperRunReportContext())
                {
                    Map visibleParamsMap = new Map(Types::String, Types::String);
                    visibleParamsMap.insert('$BankAccount', bankAccount.AccountID);

                    context.visibleParametersValuesMap = visibleParamsMap;

                    CustVendPaymAdditionalParamsHelper::runReport(mappingId, VendorJournalIntegrationPoint, parametersValuesMap);
                }
            }
            else
            {
                VendPaymReconciliationImport vendPaymReconciliationImport = CustVendPaymReconciliationImport::construct(SysModule::Vend, dialogPaymMode.value());

                vendPaymReconciliationImport.setJournalNum(_args);

                if (vendPaymReconciliationImport.prompt())
                {
                    vendPaymReconciliationImport.runOperation();
                }
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>createDialog</Name>
				<Source><![CDATA[
    private Dialog createDialog()
    {
        Dialog dialog = new Dialog("@SYS18228");

        dialogPaymMode = dialog.addField(extendedTypeStr(VendPaymMode));
        dialogPaymMode.label("@SYS21698");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createConfigurationSelectorDialog</Name>
				<Source><![CDATA[
    private Dialog createConfigurationSelectorDialog(RefRecId _returnConfiguration, RefRecId _returnConfigurationSecondary)
    {
        Dialog dialog = new Dialog("@SYS18228");

        const int cmbItemsCount = 2;
        const int cmbIndexERReturnConfig = 1;
        const int cmbIndexERReturnConfigSecondary = 2;

        configurationSelectorField = dialog.addField(enumStr(ABC));
        FormBuildComboBoxControl formComboBoxControl = configurationSelectorField.control();
        formComboBoxControl.enumType(0);
        formComboBoxControl.label("@CAMPT_Payments:ReturnFormatConfiguration");
        formComboBoxControl.items(cmbItemsCount);
        formComboBoxControl.item(cmbIndexERReturnConfig);
        formComboBoxControl.text(ERModelMappingTable::find(_returnConfiguration).Name);
        formComboBoxControl.item(cmbIndexERReturnConfigSecondary);
        formComboBoxControl.text(ERModelMappingTable::find(_returnConfigurationSecondary).Name);

        return dialog;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>