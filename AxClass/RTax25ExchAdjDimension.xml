<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rTax25ExchAdjDimension</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rTax25ExchAdjDimension
{
    LedgerPostingType   postingTypeGain, postingTypeLoss;
    LedgerDimensionDefaultAccount gainLedgerDimension, lossLedgerDimension;
    RefRecId            profitTableRecIdGain, profitTableRecIdLoss;

    DimensionAttribute      dimAttr;
    DimensionAttributeValue dimAttrValueCacheGain, dimAttrValueCacheLoss;

    RTax25ExchAdjType   exchAdjType;

    #localMacro.switchAdjType
        _exchAdjType == RTax25ExchAdjType::Gain ? %1 : %2
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets dimension default value of gain or loss accounts.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension default value which is merged with.
    /// </param>
    /// <param name="_exchAdjType">
    /// A <c>RTax25ExchAdjType</c> base enum type: gain or loss gain or loss default dimension.
    /// </param>
    /// <returns>
    /// The dimension default value of gain or loss accounts.
    /// </returns>
    public DimensionDefault getDefaultDimension(DimensionDefault _defaultDimension, RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        DimensionDefault                  defaultDimension = _defaultDimension;
        DimensionAttributeValueSetStorage dimAttrValueSetStorage;

        if (dimAttrValueCacheGain || dimAttrValueCacheLoss)
        {
            dimAttrValueSetStorage = DimensionAttributeValueSetStorage::find(defaultDimension);
            dimAttrValueSetStorage.addItem(#switchAdjType(dimAttrValueCacheGain, dimAttrValueCacheLoss));
            defaultDimension = dimAttrValueSetStorage.save();
        }

        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimAttr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a dimension attribute value.
    /// </summary>
    /// <returns>
    /// The dimension attribute value.
    /// </returns>
    public DimensionAttribute getDimAttr()
    {
        return dimAttr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimAttrValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a dimension attribute value of gain or loss account.
    /// </summary>
    /// <param name="_exchAdjType">
    /// A <c>RTax25ExchAdjType</c> base enum type: gain or loss.
    /// </param>
    /// <returns>
    /// The dimension attribute value of gain or loss account.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public DimensionAttributeValue getDimAttrValue(RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        return #switchAdjType(dimAttrValueCacheGain, dimAttrValueCacheLoss);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a ledger default dimension of gain or loss account.
    /// </summary>
    /// <param name="_exchAdjType">
    /// A <c>RTax25ExchAdjType</c> base enum type: gain or loss.
    /// </param>
    /// <returns>
    /// The ledger default dimension of gain or loss account.
    /// </returns>
    public LedgerDimensionDefaultAccount getLedgerDimension(RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        return #switchAdjType(gainLedgerDimension, lossLedgerDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingType</Name>
				<Source><![CDATA[
        public LedgerPostingType getPostingType(RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        return #switchAdjType(postingTypeGain, postingTypeLoss);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProfitTableRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets reference record id of profit code.
    /// </summary>
    /// <param name="_exchAdjType">
    /// A <c>RTax25ExchAdjType</c> base enum type: gain or loss.
    /// </param>
    /// <returns>
    /// The record id of profit code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getProfitTableRecId(RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        return #switchAdjType(profitTableRecIdGain, profitTableRecIdLoss);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        dimAttr = DimensionAttribute::find(RTax25Parameters::find().DimensionAttribute);

        postingTypeGain = LedgerPostingType::ExchRateGain;
        postingTypeLoss = LedgerPostingType::ExchRateLoss;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchAdjType</Name>
				<Source><![CDATA[
        public RTax25ExchAdjType parmExchAdjType(RTax25ExchAdjType _exchAdjType = exchAdjType)
    {
        exchAdjType = _exchAdjType;
        return exchAdjType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets gain and loss ledger dimensions.
    /// </summary>
    /// <param name="_gainLedgerDimension">
    /// A ledger default dimension of gain account.
    /// </param>
    /// <param name="_lossLedgerDimension">
    /// The ledger default dimension of loss account.
    /// </param>
    public void setLedgerDimensions(LedgerDimensionDefaultAccount _gainLedgerDimension, LedgerDimensionDefaultAccount _lossLedgerDimension)
    {
        gainLedgerDimension = _gainLedgerDimension;
        lossLedgerDimension = _lossLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingTypes</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void setPostingTypes(LedgerPostingType _postingTypeGain, LedgerPostingType _postingTypeLoss)
    {
        postingTypeGain = _postingTypeGain;
        postingTypeLoss = _postingTypeLoss;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProfitIds</Name>
				<Source><![CDATA[
        public void setProfitIds(
        RefRecId _profitTableRecIdGain,
        RefRecId _profitTableRecIdLoss)
    {
        profitTableRecIdGain    = _profitTableRecIdGain;
        profitTableRecIdLoss    = _profitTableRecIdLoss;

        if (dimAttr)
        {
            if (_profitTableRecIdGain)
            {
                dimAttrValueCacheGain = DimensionAttributeValue::findByDimensionAttributeAndValueNoError(dimAttr,
                    RTax25ProfitTable::find(_profitTableRecIdGain).ProfitId, false, true);
            }

            if (_profitTableRecIdLoss)
            {
                dimAttrValueCacheLoss = DimensionAttributeValue::findByDimensionAttributeAndValueNoError(dimAttr,
                    RTax25ProfitTable::find(_profitTableRecIdLoss).ProfitId, false, true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingType2AdjType</Name>
				<Source><![CDATA[
        public static RTax25ExchAdjType postingType2AdjType(LedgerPostingType _postingAdjType)
    {
        RTax25ExchAdjType ret;

        switch (_postingAdjType)
        {
            case LedgerPostingType::ExchRateGain :
                ret = RTax25ExchAdjType::Gain;
                break;
            case LedgerPostingType::ExchRateLoss :
                ret = RTax25ExchAdjType::Loss;
                break;
            default :
                throw error(Error::wrongUseOfFunction(funcName()));
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>