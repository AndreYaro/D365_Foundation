<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAdvanceInvoiceJourDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustAdvanceInvoiceJourDP</c> class is the Report Data Provider class for the <c>CustAdvanceInvoiceJour</c>
/// report
/// </summary>
[
    SRSReportQuery (querystr(CustAdvanceInvoiceJour))
]
class CustAdvanceInvoiceJourDP extends SRSReportDataProviderBase
{
    private const str LocalizationFeatureReference = 'EEU-00016';
    private CzCustAdvanceInvoiceTable     custAdvanceInvoiceTable;
    private CustVendAdvanceInvoiceJourTmp custAdvanceInvoiceJourTmp;
    private CurrencyCode                  accountingCurrency;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(LocalizationFeatureReference, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendAdvanceInvoiceJourTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the data from the <c>CustAdvanceInvoiceJourTmp</c> table.
    /// </summary>
    /// <returns>
    /// The data from the <c>CustAdvanceInvoiceJourTmp</c> table.
    /// </returns>
    [SRSReportDataSet (tableStr(CustVendAdvanceInvoiceJourTmp)), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustVendAdvanceInvoiceJourTmp getCustVendAdvanceInvoiceJourTmp()
    {
        select custAdvanceInvoiceJourTmp;
        return custAdvanceInvoiceJourTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCustVendAdvanceInvoiceJourTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data into the <c>CustVendAdvanceInvoiceJourTmp</c> table.
    /// </summary>
    private void insertCustVendAdvanceInvoiceJourTmp()
    {
        custAdvanceInvoiceJourTmp.CurrencyCode   = custAdvanceInvoiceTable.CurrencyCode;
        custAdvanceInvoiceJourTmp.DueDate        = custAdvanceInvoiceTable.DueDate;
        custAdvanceInvoiceJourTmp.InvoiceAmount  = custAdvanceInvoiceTable.InvoiceAmount;
        custAdvanceInvoiceJourTmp.InvoiceAccount = custAdvanceInvoiceTable.InvoiceAccount;
        custAdvanceInvoiceJourTmp.InvoiceDate    = custAdvanceInvoiceTable.InvoiceDate;
        custAdvanceInvoiceJourTmp.InvoiceId      = custAdvanceInvoiceTable.InvoiceId;
        custAdvanceInvoiceJourTmp.Name           = custAdvanceInvoiceTable.Name;

        custAdvanceInvoiceJourTmp.AccountingCurrency = accountingCurrency;
        custAdvanceInvoiceJourTmp.AmountMST = custAdvanceInvoiceTable.amountMST(custAdvanceInvoiceTable.InvoiceAmount);

        custAdvanceInvoiceJourTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method computes data and populates the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        QueryRun qr = new QueryRun(this.parmQuery());

        accountingCurrency = Ledger::accountingCurrencyByLedger(Ledger::current());

        while (qr.next())
        {
            custAdvanceInvoiceTable = qr.get(tablenum(CzCustAdvanceInvoiceTable));
            this.insertCustVendAdvanceInvoiceJourTmp();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>