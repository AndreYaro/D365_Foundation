<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendAgingCalculatedTmpCopyFromProcessingTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustVendAgingCalculatedTmpCopyFromProcessingTmp</c> class copies values from the <c>CustVendAgingProcessingTmp</c> and <c>CustVendAgingProcessingDetailsTmp</c> records into the <c>CustVendAgingCalculatedTmp</c>
/// </summary>
public final class CustVendAgingCalculatedTmpCopyFromProcessingTmp extends SysQueryInsertRecordSet
{
    private CustVendAgingCalculationParameters custVendAgingCalculationParameters;

    private int custVendAgingProcessingTmpDataSourceId;
    private int custVendAgingProcessingDetailsTmpDataSourceId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustVendAgingProcessingTmpDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>CustVendAgingProcessingTmp</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getCustVendAgingProcessingTmpDataSourceId()
    {
        return custVendAgingProcessingTmpDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendAgingProcessingDetailsTmpDataSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data source ID for <c>CustVendAgingProcessingDetailsTmp</c> table.
    /// </summary>
    /// <returns>The unique ID.</returns>
    protected int getCustVendAgingProcessingDetailsTmpDataSourceId()
    {
        return custVendAgingProcessingDetailsTmpDataSourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFieldMapping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the map fields.
    /// </summary>
    protected void initFieldMapping()
    {
        this.mapField(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, AccountNum), fieldStr(CustVendAgingCalculatedTmp, AccountNum));
        this.mapField(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, CurrencyCode), fieldStr(CustVendAgingCalculatedTmp, CurrencyCode));
        this.mapField(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, BillingClassification), fieldStr(CustVendAgingCalculatedTmp, BillingClassification));

        this.mapFieldWithSelectionType(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, Amount), SelectionField::Sum, fieldStr(CustVendAgingCalculatedTmp, Amount));
        this.mapFieldWithSelectionType(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, AmountCur), SelectionField::Sum, fieldStr(CustVendAgingCalculatedTmp, AmountCur));
        this.mapFieldWithSelectionType(custVendAgingProcessingTmpDataSourceId, fieldStr(CustVendAgingProcessingTmp, AmountReporting), SelectionField::Sum, fieldStr(CustVendAgingCalculatedTmp, AmountReporting));

        this.mapField(custVendAgingProcessingDetailsTmpDataSourceId, fieldStr(CustVendAgingProcessingDetailsTmp, BucketNumber), fieldStr(CustVendAgingCalculatedTmp, BucketNumber));
        this.mapField(custVendAgingProcessingDetailsTmpDataSourceId, fieldStr(CustVendAgingProcessingDetailsTmp, TransDate), fieldStr(CustVendAgingCalculatedTmp, TransDate));
        this.mapField(custVendAgingProcessingDetailsTmpDataSourceId, fieldStr(CustVendAgingProcessingDetailsTmp, InvoiceId), fieldStr(CustVendAgingCalculatedTmp, InvoiceId));
        this.mapField(custVendAgingProcessingDetailsTmpDataSourceId, fieldStr(CustVendAgingProcessingDetailsTmp, Voucher), fieldStr(CustVendAgingCalculatedTmp, Voucher));
     }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the query to select <c>CustVendAgingProcessingTmp</c> and <c>CustVendAgingProcessingDetailsTmp</c> records.
    /// </summary>
    /// <returns>
    /// Query instance to select <c>CustVendAgingProcessingTmp</c> and <c>CustVendAgingProcessingDetailsTmp</c> records.
    /// </returns>
    protected Query initQuery()
    {
        Query q = new Query();

        QueryBuildDataSource qbds = q.addDataSource(tableNum(CustVendAgingProcessingTmp));
        qbds.cursor(custVendAgingCalculationParameters.custVendAgingProcessingTmp);

        QueryBuildDataSource qbdsDetails = qbds.addDataSource(tableNum(CustVendAgingProcessingDetailsTmp));
        qbdsDetails.addLink(fieldNum(CustVendAgingProcessingTmp, RecId), fieldNum(CustVendAgingProcessingDetailsTmp, ProcessingRecId));
        qbdsDetails.joinMode(JoinMode::InnerJoin);
        qbdsDetails.cursor(custVendAgingCalculationParameters.custVendAgingProcessingDetailsTmp);

        q.clearAllFields();

        qbds.addGroupByField(fieldNum(CustVendAgingProcessingTmp, AccountNum));
        qbds.addGroupByField(fieldNum(CustVendAgingProcessingTmp, CurrencyCode));
        qbds.addGroupByField(fieldNum(CustVendAgingProcessingTmp, BillingClassification));

        qbdsDetails.addGroupByField(fieldNum(CustVendAgingProcessingDetailsTmp, BucketNumber));
        qbdsDetails.addGroupByField(fieldNum(CustVendAgingProcessingDetailsTmp, TransDate));
        qbdsDetails.addGroupByField(fieldNum(CustVendAgingProcessingDetailsTmp, InvoiceId));
        qbdsDetails.addGroupByField(fieldNum(CustVendAgingProcessingDetailsTmp, Voucher));

        custVendAgingProcessingTmpDataSourceId = qbds.uniqueId();
        custVendAgingProcessingDetailsTmpDataSourceId = qbdsDetails.uniqueId();

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTargetCursor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initizlizes the target <c>CustVendAgingCalculatedTmp</c> cursor.
    /// </summary>
    /// <returns>
    /// The <c>CustVendAgingCalculatedTmp</c> table.
    /// </returns>
    protected Common initTargetCursor()
    {
        CustVendAgingCalculatedTmp custVendAgingCalculatedTmp = custVendAgingCalculationParameters.custVendAgingCalculatedTmp;

        custVendAgingCalculatedTmp.skipDataMethods(true);

        return custVendAgingCalculatedTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static CustVendAgingCalculatedTmpCopyFromProcessingTmp construct()
    {
        return new CustVendAgingCalculatedTmpCopyFromProcessingTmp();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>CustVendAgingCalculatedTmpCopyFromProcessingTmp</c> class.
    /// <returns>
    /// The instantiated <c>CustTmpAccountSumFromCustAgingReportTmp</c> object.
    /// </returns>
    public static CustVendAgingCalculatedTmpCopyFromProcessingTmp newFromParameters(CustVendAgingCalculationParameters _custVendAgingCalculationParameters)
    {
        CustVendAgingCalculatedTmpCopyFromProcessingTmp instance = CustVendAgingCalculatedTmpCopyFromProcessingTmp::construct();
        instance.custVendAgingCalculationParameters = _custVendAgingCalculationParameters;
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>