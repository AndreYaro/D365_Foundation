<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankDocumentSummarizedTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
[BankDocumentAttribute(BankDocumentBookType::SummarizedTrans)]
public class BankDocumentSummarizedTrans extends BankDocument implements BankDocumentIStateChangeEventHandler
{
    private BankTransSummarizationDocument summarizationDocument;
    private BankTransSummarizationLine firstSummarizedLine;
    private BankAccountTrans summarizationTransaction;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bankDocumentStateChanged</Name>
				<Source><![CDATA[
    public void bankDocumentStateChanged(BankDocumentState _bankDocumentState)
    {
        this.processBankAccountTransReconcileStatus(_bankDocumentState.parmBankDocumentStatusChangeType());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankTransType</Name>
				<Source><![CDATA[
    public BankTransactionType getBankTransType()
    {
        return summarizationDocument.BankTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescription</Name>
				<Source><![CDATA[
    public TransTxt getDescription()
    {
        return summarizationTransaction.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentNum</Name>
				<Source><![CDATA[
    public Num getDocumentNum()
    {
        return summarizationDocument.SummarizationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentType</Name>
				<Source><![CDATA[
    public BankDocumentBookType getDocumentType()
    {
        return BankDocumentBookType::SummarizedTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrignalBankDocumentStatusName</Name>
				<Source><![CDATA[
    public BankDocumentOrigDocumentStatus getOrignalBankDocumentStatusName()
    {
        return "@SYS107952";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReference</Name>
				<Source><![CDATA[
    public PaymReference getReference()
    {
        return summarizationDocument.PaymReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionDate</Name>
				<Source><![CDATA[
    public TransDate getTransactionDate()
    {
        return summarizationDocument.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode getBankCurrencyCode()
    {
        return summarizationDocument.BankCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelatedPartyType</Name>
				<Source><![CDATA[
    public BankReconciliationRelatedPartyType getRelatedPartyType()
    {
        if (!firstSummarizedLine)
        {
            return DirPartyRoleType::None;
        }
        return firstSummarizedLine.CustVendAccountType == CustVendACType::Vend ? DirPartyRoleType::Vendor : DirPartyRoleType::Customer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelatedPartyAccount</Name>
				<Source><![CDATA[
    public AccountNum getRelatedPartyAccount()
    {
        return firstSummarizedLine.CustVendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRelatedPartyCompany</Name>
				<Source><![CDATA[
    public CompanyId getRelatedPartyCompany()
    {
        return firstSummarizedLine.PaymCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrency</Name>
				<Source><![CDATA[
    public CurrencyCode getTransactionCurrency()
    {
        return summarizationDocument.TransCurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyAmount</Name>
				<Source><![CDATA[
    public AmountCur getTransactionCurrencyAmount()
    {
        return summarizationDocument.TransAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadSourceBuffer</Name>
				<Source><![CDATA[
    protected void loadSourceBuffer()
    {
        summarizationDocument = documentMap;
        select firstonly summarizationTransaction
            where summarizationTransaction.SourceTableId == summarizationDocument.TableId
                && summarizationTransaction.SourceRecId ==  summarizationDocument.RecId;
        select firstonly firstSummarizedLine
            order by firstSummarizedLine.RecId
            where firstSummarizedLine.BankTransSummarizationDocument == summarizationDocument.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>