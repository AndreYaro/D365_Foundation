<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanItemCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>KanbanItemCheck</c> class checks whether a specific item can be used with kanbans.
/// </summary>
/// <remarks>
/// Generally, all items that are used with kanbans must be standard cost controlled.The exception is a
/// withdrawal kanban that updates inventory on issue and receipt.
/// </remarks>
public abstract class KanbanItemCheck
{
    ItemId          itemId;
    InventTable     inventTable;
    boolean         warningOnFailure;
    boolean         errorOnFailure;
    boolean         isAllowed;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowBlankItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a blank item ID is allowed.
    /// </summary>
    /// <returns>
    /// true if the blank item ID is allowed; otherwise, false.
    /// </returns>
    protected boolean allowBlankItemId()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIsAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether an item can be used with kanbans.
    /// </summary>
    /// <returns>
    /// true if the item can be used; otherwise, false.
    /// </returns>
    protected abstract boolean checkIsAllowed()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether an item ID can be used with kanbans.
    /// </summary>
    /// <returns>
    /// true if the item ID can be used; otherwise, false.
    /// </returns>
    protected boolean checkItemId()
    {
        return    (!itemId
               &&  this.allowBlankItemId())
               || (itemId
               &&  this.inventTable().modelGroup().inventModelType().stdCostBased());
    }

]]></Source>
			</Method>
			<Method>
				<Name>error</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Throws an error to the infolog.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The item must be standard cost controlled.
    /// </exception>
    protected void error()
    {
        throw error(strFmt("@SYS307260",itemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTable</c> record for the current item.
    /// </summary>
    /// <returns>
    /// The <c>InventTable</c> record for the current item.
    /// </returns>
    protected InventTable inventTable()
    {
        if (   !inventTable
            && itemId)
        {
            inventTable = InventTable::find(itemId);
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the item can be used with kanbans.
    /// </summary>
    /// <returns>
    /// true if the item can be used with kanbans; otherwise, false.
    /// </returns>
    public boolean isAllowed()
    {
        isAllowed = this.checkIsAllowed();

        if (!isAllowed)
        {
            if (warningOnFailure)
            {
                this.warning();
            }

            if (errorOnFailure)
            {
                this.error();
            }
        }

        return isAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmErrorOnFailure</Name>
				<Source><![CDATA[
        public boolean parmErrorOnFailure(boolean _errorOnFailure = errorOnFailure)
    {
        errorOnFailure = _errorOnFailure;
        return errorOnFailure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTable</Name>
				<Source><![CDATA[
        public InventTable parmInventTable(InventTable _inventTable = inventTable)
    {
        inventTable = _inventTable;
        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
        public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarningOnFailure</Name>
				<Source><![CDATA[
        public boolean parmWarningOnFailure(boolean _warningOnFailure = warningOnFailure)
    {
        warningOnFailure = _warningOnFailure;
        return warningOnFailure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>warning</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows a warning in the infolog.
    /// </summary>
    protected void warning()
    {
        checkFailed(strFmt("@SYS307260",itemId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>