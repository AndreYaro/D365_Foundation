<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TamActualContribution</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMActualContribution</c> class calculates actual contribution
/// and incremental contribution during the time the promotion ran.
/// </summary>
class TamActualContribution
{
    TAMTradePromotion   tamTradePromotion;
    SalesQty            actualShipQty;
    SalesQty            actualIncQty;
    AmountCur           unitNetDiscPrice;
    AmountCur           plannedCost;
    AmountCur           actualContribution;
    AmountCur           actualIncContribution;
    TAMWhatIfAnalysis   tamWhatIfAnalysis;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcActualContribution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates actual contribution.
    /// </summary>
    private void calcActualContribution()
    {
        actualContribution = (actualShipQty * unitNetDiscPrice) - tamWhatIfAnalysis.getLSCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcActualIncContribution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the actual incremental contribution.
    /// </summary>
    private void calcActualIncContribution()
    {
        actualIncContribution = actualContribution - tamWhatIfAnalysis.getSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcAllActualContributions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates all actual contributions for the promotion.
    /// </summary>
    public void calcAllActualContributions()
    {
        TAMActualQuantities tamActualQuantities = new TAMActualQuantities(tamTradePromotion);

        tamActualQuantities.calcAllQuantities();

        actualShipQty = tamActualQuantities.getInvoicedQty();
        actualIncQty = actualShipQty - tamActualQuantities.getActualBaseQty();

        tamWhatIfAnalysis = new TAMWhatIfAnalysis(tamTradePromotion);
        tamWhatIfAnalysis.calcAllValues();
        unitNetDiscPrice = tamWhatIfAnalysis.getUnitNetDiscPrice();

        this.calcActualContribution();
        this.calcActualIncContribution();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActualContribution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the actual contribution.
    /// </summary>
    /// <returns>
    /// The actual contribution.
    /// </returns>
    public AmountCur getActualContribution()
    {
        return actualContribution;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActualIncContribution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the incremental contribution.
    /// </summary>
    /// <returns>
    /// The incremental contribution.
    /// </returns>
    public AmountCur getActualIncContribution()
    {
        return actualIncContribution;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the trade promotion for which to find the actual contribution.
    /// </summary>
    /// <param name="_tamTradePromotion">
    /// The trade promotion for which to find the actual contribution.
    /// </param>
    public void new(TAMTradePromotion _tamTradePromotion)
    {
        tamTradePromotion = _tamTradePromotion;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>