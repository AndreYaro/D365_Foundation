<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjEnableProfitAndLossItemReqConsumptionFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
using IFeatureLifecycle = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureLifecycle;
using FeatureLifecycleStage = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureLifecycleStage;

/// <summary>
/// The <c>ProjEnableProfitAndLossItemReqConsumptionFlight</c> class controls if voucher transactions should 
/// be consumed to project for item requirement non-stocked item scenario with profit and loss project group.
/// </summary>
internal final class ProjEnableProfitAndLossItemReqConsumptionFlight  implements IFeatureLifecycle
{
    private static ProjEnableProfitAndLossItemReqConsumptionFlight instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new ProjEnableProfitAndLossItemReqConsumptionFlight();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>ProjEnableProfitAndLossItemReqConsumptionFlight</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    static internal ProjEnableProfitAndLossItemReqConsumptionFlight instance()
    {
        return ProjEnableProfitAndLossItemReqConsumptionFlight::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    public FeatureLifecycleStage FeatureStage()
    {
        // The flight is listed as PublicPreview even though the feature is GA. This
        // is based on the guidance for IFeatureLifecycle which allows this flight to
        // still act as a "kill switch" as long as the stage is marked as
        // PublicPreview. Once live in GA long enough where a kill switch will no
        // longer be necessary, then this class can be completely removed.
        return FeatureLifecycleStage::PublicPreview;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>