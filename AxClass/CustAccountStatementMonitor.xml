<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustAccountStatementMonitor</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class CustAccountStatementMonitor
{
    private SysInstrumentationLogger logger;
    private readonly boolean isRunningInBatch = BatchHeader::isExecutingInBatch();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new (SysInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CustAccountStatementMonitor construct(SysInstrumentationLogger _logger)
    {
        return new CustAccountStatementMonitor(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterActivity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext enterActivity(SysInstrumentationActivity _activity)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(_activity);
        activityContext.addCustomProperty(
            CustAccountStatementInstrumentationConstants::CustomPropertyIsRunningInBatch,
            int2Str(isRunningInBatch));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterProcessRecords_Internal</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterProcessRecords_Internal()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            CustAccountStatementInstrumentationConstants::ActivityNameProcessRecords,
            CustAccountStatementInstrumentationConstants::InternalNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitProcessRecords_Internal</Name>
				<Source><![CDATA[
    internal void exitProcessRecords_Internal(SysInstrumentationActivityContext _context, int _LineCount)
    {
        _context.addCustomProperty(CustAccountStatementInstrumentationConstants::CustomPropertyLineCountMagnitude, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_LineCount));

    }

]]></Source>
			</Method>
			<Method>
				<Name>enterProcessRecords_External</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterProcessRecords_External()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            CustAccountStatementInstrumentationConstants::ActivityNameProcessRecords,
            CustAccountStatementInstrumentationConstants::ExternalNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitProcessRecords_External</Name>
				<Source><![CDATA[
    internal void exitProcessRecords_External(SysInstrumentationActivityContext _context, int _LineCount)
    {
        _context.addCustomProperty(CustAccountStatementInstrumentationConstants::CustomPropertyLineCountMagnitude, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_LineCount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterProcessRecords_France</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterProcessRecords_France()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            CustAccountStatementInstrumentationConstants::ActivityNameProcessRecords,
            CustAccountStatementInstrumentationConstants::FranceNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitProcessRecords_France</Name>
				<Source><![CDATA[
    internal void exitProcessRecords_France(SysInstrumentationActivityContext _context, int _LineCount)
    {
        _context.addCustomProperty(CustAccountStatementInstrumentationConstants::CustomPropertyLineCountMagnitude, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_LineCount));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>