<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmActivitiesHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// smmActivities helper class
/// </summary>
public static class smmActivitiesHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setActivityDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets activity start date time and end date time for all day activity
    /// </summary>
    /// <param name = "_smmActivities">smmActivities table </param>
    /// <returns>smmActivities</returns>
    public static smmActivities setActivityDateTime(smmActivities _smmActivities)
    {
        #define.AllDayEndTime('23:59')

        smmActivities smmActivities = _smmActivities;

        if (smmActivities.AllDay ==NoYes::Yes)
        {
                date startDate = DateTimeUtil::date(DateTimeUtil::removeTimeZoneOffset(smmActivities.StartDateTime, DateTimeUtil::getUserPreferredTimeZone()));
                utcdatetime endDateTime = DateTimeUtil::removeTimeZoneOffset(smmActivities.EndDateTime, DateTimeUtil::getUserPreferredTimeZone());

                if (DateTimeUtil::date(endDateTime) > startDate)
                {
                    // For DualWrite end date time: A day is reduced from end date to support EndDateTime behavior of dataverse i.e next day: 12:00 AM when an activity is set to All Day
                    date reducedEndDate = DateTimeUtil::date(DateTimeUtil::addDays(endDateTime, -1));

                    smmActivities.StartDateTime = DateTimeUtil::newDateTime(startDate, 0, DateTimeUtil::getUserPreferredTimeZone());
                    smmActivities.EndDateTime = DateTimeUtil::newDateTime(reducedEndDate, str2time(#allDayEndTime), DateTimeUtil::getUserPreferredTimeZone());
                }
        }

        return smmActivities;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>