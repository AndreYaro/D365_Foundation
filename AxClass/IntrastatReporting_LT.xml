<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntrastatReporting_LT</Name>
	<SourceCode>
		<Declaration><![CDATA[
#ISOCountryRegionCodes
/// <summary>
/// The <c>IntrastatReporting_LT</c> class is responsible for generating file and SSRS report for Intrastat Lithuania.
/// </summary>
[IntrastatCountryRegionAttribute(#isoLT)]
class IntrastatReporting_LT extends IntrastatReporting
{
    IntrastatDirection          repDirection;

    DialogField fieldCorrectionOnly;
    DialogField fieldRepDirection;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        correctionOnly,
        repDirection
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        dialog = super();

        //hide file name contorl from super, file name will be automatically generated
        dialogFilename.visible(false);

        //disable ToDate, it will be automatically set
        dialogToDate.enabled(false);

        fieldCorrectionOnly = dialog.addFieldValue(extendedTypeStr(NoYesId), correctionOnly,  "@SYS3966");
        fieldRepDirection   = dialog.addFieldValue(enumStr(IntrastatDirection), repDirection);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret = super();

        correctionOnly = fieldCorrectionOnly.value();
        repDirection   = fieldRepDirection.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret;

        ret = super(calledFrom);

        if (generateFile)
        {
            if ( yearDiff(fromDate, toDate) != 0 ||mthOfYr(fromDate) != mthOfYr(toDate))
            {
                warning("@GLS114676");
            }
        }

        if (dayOfMth(fromDate) != 1)
        {
            ret = checkFailed("@SYS312862");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList, super()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerEventHandlers</Name>
				<Source><![CDATA[
    public void registerEventHandlers()
    {
        super();

        if (this.canGenerateFile())
        {
            dialogFromDate.control().registerOverrideMethod(
                methodStr(FormStringControl, modified),
                methodStr(IntrastatReporting_LT, fromDate_Modified),
                this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer         version = RunBase::getVersion(packedClass);
        container       packedSuper;

        switch (version)
        {
            case #CurrentVersion:
                [version, #currentList, packedSuper] = packedClass;
                if (packedSuper)
                {
                    return super(packedSuper);
                }
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>throwOnEmptyReport</Name>
				<Source><![CDATA[
    protected boolean throwOnEmptyReport()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareQuery</Name>
				<Source><![CDATA[
    protected QueryBuildDataSource prepareQuery()
    {
        QueryBuildDataSource dataSource;
        dataSource = super();

        return this.updateRange(dataSource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRange</Name>
				<Source><![CDATA[
    private QueryBuildDataSource updateRange(QueryBuildDataSource _dataSource)
    {
        if (_dataSource)
        {
            _dataSource.clearRange(fieldNum(Intrastat, Direction));
            _dataSource.addRange(fieldNum(Intrastat, Direction)).value(queryValue(repDirection));

            if (correctionOnly)
            {
                _dataSource.clearRange(fieldNum(Intrastat, Correct));
                _dataSource.addRange(fieldNum(Intrastat, Correct)).value(queryValue(1));
            }
        }

        return _dataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromDate_Modified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs neccesary processing when the From date field is modified in the dialog.
    /// </summary>
    /// <param name="_formControl">
    /// The control triggering the modified event.
    /// </param>
    /// <returns>
    /// true, if the modified event was processed correctly; otherwise, false.
    /// </returns>
    private boolean fromDate_Modified(FormDateControl _formControl)
    {
        boolean             ret = _formControl.modified();
        FromDate            fromDateTemp = dialogFromDate.value();

        if (dayOfMth(fromDateTemp) != 1)
        {
            ret = checkFailed("@SYS312862");
        }

        if (ret)
        {
            dialogToDate.value(endmth(fromDateTemp));
        }
        else //reset fromDate value
        {
            dialogFromDate.value(fromDateTemp);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>