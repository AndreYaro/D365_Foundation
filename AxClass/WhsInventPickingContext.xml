<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsInventPickingContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WhsInventPickingContext implements System.IDisposable
{    
    private static WhsInventPickingContext instance;
    
    private WhsInventTransPickIdAllocator pickIdAllocator;
    private boolean skipPickIdAllocation;
    private boolean forcePickIdAllocation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));            
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    public void Dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPickIdAllocator</Name>
				<Source><![CDATA[
    internal static WhsInventPickingContext newFromPickIdAllocator(WhsInventTransPickIdAllocator _pickIdAllocator)
    {        
        WhsInventPickingContext context = new WhsInventPickingContext();
        context.pickIdAllocator = _pickIdAllocator;
        context.skipPickIdAllocation = false;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForcedFromPickIdAllocator</Name>
				<Source><![CDATA[
    internal static WhsInventPickingContext newForcedFromPickIdAllocator(WhsInventTransPickIdAllocator _pickIdAllocator)
    {
        WhsInventPickingContext context = WhsInventPickingContext::newFromPickIdAllocator(_pickIdAllocator);
        context.forcePickIdAllocation = true;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSkipPickIdAllocation</Name>
				<Source><![CDATA[
    internal static WhsInventPickingContext newSkipPickIdAllocation()
    {
        WhsInventPickingContext context = new WhsInventPickingContext();
        context.skipPickIdAllocation = true;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    internal static WhsInventPickingContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPickIdAllocator</Name>
				<Source><![CDATA[
    internal WhsInventTransPickIdAllocator parmPickIdAllocator()
    {
        return pickIdAllocator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmForcePickIdAllocation</Name>
				<Source><![CDATA[
    internal boolean parmForcePickIdAllocation()
    {
        return forcePickIdAllocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipPickIdAllocation</Name>
				<Source><![CDATA[
    internal boolean parmSkipPickIdAllocation()
    {
        return skipPickIdAllocation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>