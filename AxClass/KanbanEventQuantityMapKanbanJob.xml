<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanEventQuantityMapKanbanJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>KanbanEventQuantityMapKanbanJob</c> class provides a <c>Map</c> object that holds event
///    kanbans that are related to a kanban job event.
/// </summary>
public class KanbanEventQuantityMapKanbanJob extends KanbanEventQuantityMap
{
    KanbanJob       kanbanJob;
    KanbanJobIssue  kanbanJobIssue;
    boolean         cachedInventTransOriginId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defines the inventory transaction originator for which to determine the pegging.
    /// </summary>
    /// <returns>
    ///    A record ID of the <c>InventTransOrigin</c> table.
    /// </returns>
    protected InventTransOriginId inventTransOriginId()
    {
        if (!cachedInventTransOriginId)
        {
            inventTransOriginId       = kanbanJob.issueInventTransOriginId();
            cachedInventTransOriginId = true;
        }

        return inventTransOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmKanbanJob</Name>
				<Source><![CDATA[
        public KanbanJob parmKanbanJob(KanbanJob _kanbanJob = kanbanJob)
    {
        kanbanJob = _kanbanJob;
        return kanbanJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentLineRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defines the source document line for which to determine the pegged quantities.
    /// </summary>
    /// <returns>
    ///    A record ID of the <c>SourceDocumentLine</c> table.
    /// </returns>
    protected SourceDocumentLineRefRecId sourceDocumentLineRefRecId()
    {
        if (!kanbanJobIssue)
        {
            kanbanJobIssue = kanbanJob.kanbanJobIssue();
        }

        return kanbanJobIssue.SourceDocumentLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static KanbanEventQuantityMapKanbanJob construct()
    {
        return new KanbanEventQuantityMapKanbanJob();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>KanbanEventQuantityMapKanbanJob</c> class.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    A <c>KanbanJob</c> table buffer to use to create an instance of the class.
    /// </param>
    /// <returns>
    ///    A <c>KanbanEventQuantityMapKanbanJob</c> object.
    /// </returns>
    public static KanbanEventQuantityMap newStandard(KanbanJob _kanbanJob)
    {
        KanbanEventQuantityMapKanbanJob  kanbanEventQuantityMap = KanbanEventQuantityMapKanbanJob::construct();

        if (!_kanbanJob)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        kanbanEventQuantityMap.parmKanbanJob(_kanbanJob);

        return kanbanEventQuantityMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>