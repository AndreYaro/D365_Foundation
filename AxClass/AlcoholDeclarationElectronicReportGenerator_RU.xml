<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholDeclarationElectronicReportGenerator_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

public class AlcoholDeclarationElectronicReportGenerator_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main (Args _args)
    {
        const str modelStr = "model";
        const str journalNumStr = "000_Variables/$JournalNum";
        const str declTypeStr = "000_Variables/$DeclarationType";

        AlcoholDeclarationJournalTrans_RU alcoholDeclarationJournalTrans_RU = _args.record();
        ERFormatMappingID formatMappingId = AlcoholDeclarationElectronicReportGenerator_RU::getFormatMappingId(alcoholDeclarationJournalTrans_RU.AlcoholDeclarationType);

        if (formatMappingId)
        {
            ERModelDefinitionInputParametersAction erModelNewDefinitionInputParametersAction = new ERModelDefinitionInputParametersAction();
            erModelNewDefinitionInputParametersAction
                .addParameter(ERPath::combine(modelStr, journalNumStr), alcoholDeclarationJournalTrans_RU.JournalId)
                .addParameter(ERPath::combine(modelStr, declTypeStr), alcoholDeclarationJournalTrans_RU.AlcoholDeclarationType);

            ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMappingId)
                    .withFileDestination(ERObjectsFactory::createFileDestinationBrowser())
                    .withParameter(erModelNewDefinitionInputParametersAction)
                    .run();
        }
        else
        {
            error(strFmt("@Inventory_Localization:NoFormatSelectedForAlcoholDeclarationType", alcoholDeclarationJournalTrans_RU.AlcoholDeclarationType));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatMappingId</Name>
				<Source><![CDATA[
    protected static RefRecId getFormatMappingId(AlcoholDeclarationType_RU _declarationType)
    {
        RefRecId formatMappingId;
        InventParameters inventParameters = InventParameters::find();

        switch (_declarationType)
        {
            case AlcoholDeclarationType_RU::Wholesale5:
                formatMappingId = inventParameters.AlcoholDeclaraitonERFormatWholesale5_RU;
                break;
            case AlcoholDeclarationType_RU::Wholesale6:
                formatMappingId = inventParameters.AlcoholDeclaraitonERFormatWholesale6_RU;
                break;
            case AlcoholDeclarationType_RU::Wholesale7:
                formatMappingId = inventParameters.AlcoholDeclaraitonERFormatWholesale7_RU;
                break;
            case AlcoholDeclarationType_RU::Retail11:
                formatMappingId = inventParameters.AlcoholDeclaraitonERFormatRetail11_RU;
                break;
            case AlcoholDeclarationType_RU::Retail12:
                formatMappingId = inventParameters.AlcoholDeclaraitonERFormatRetail12_RU;
                break;
            default:
                break;
        }

        return formatMappingId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>