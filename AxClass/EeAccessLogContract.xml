<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EeAccessLogContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>EeAccessLog</c> SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>EeAccessLog</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('Person', "@SYS31456", '1'),
    SysOperationGroupAttribute('Date', "@SYS108609", '2')
]
class EeAccessLogContract
{
    DirPersonRecId      personId;
    FromDate            fromDate;
    ToDate              toDate;
    UserName            queriedByUserName;
    UserName            personUserName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        // default the date range the first time
        this.parmFromDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) - 7);
        this.parmToDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS24050")),
        SysOperationGroupMemberAttribute('Date'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPersonId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PersonId.
    /// </summary>
    /// <param name="_personId">
    /// The new value of the datacontract parameter PersonId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PersonId.
    /// </returns>
    [
        DataMemberAttribute('PersonId'),
        SysOperationLabelAttribute(literalstr("@SYS31456")),
        SysOperationGroupMemberAttribute('Person'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DirPersonRecId parmPersonId(DirPersonRecId _personId = personId)
    {
        personId = _personId;

        // set the person name parameter value in the contract
        this.parmPersonUserName(DirPerson::find(personId).Name);

        return personId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPersonUserName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PersonUserName.
    /// </summary>
    /// <param name="_personUserName">
    /// The new value of the datacontract parameter PersonUserName; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PersonUserName.
    /// </returns>
    [
        DataMemberAttribute('PersonUserName')
    ]
    public PersonName parmPersonUserName(PersonName _personUserName = personUserName)
    {
        personUserName = _personUserName;
        return personUserName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuriedByUserName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter QueriedByUserName.
    /// </summary>
    /// <param name="_queriedByUserName">
    /// The new value of the datacontract parameter QueriedByUserName; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter QueriedByUserName.
    /// </returns>
    [
        DataMemberAttribute('QueriedByUserName')
    ]
    public UserName parmQuriedByUserName(UserName _queriedByUserName = queriedByUserName)
    {
        // always return the current user id - e.g. ignore SysLastValue settings from the reporting framework
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS36680")),
        SysOperationGroupMemberAttribute('Date'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>