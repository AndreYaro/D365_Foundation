<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerConsolidatePerformanceMonitor</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to monitor the performance of <c>LedgerConsolidate</c>.
/// </summary>
internal final class LedgerConsolidatePerformanceMonitor
{
    private SysInstrumentationLogger logger;
    private RecId consolidationId;

    private readonly boolean isRunningInBatch = BatchHeader::isExecutingInBatch();

    private const str Yes = 'Yes';
    private const str No = 'No';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmConsolidationId</Name>
				<Source><![CDATA[
    internal RecId parmConsolidationId(RecId _consolidationId = consolidationId)
    {
        consolidationId = _consolidationId;
        return consolidationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new (SysInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LedgerConsolidatePerformanceMonitor construct(SysInstrumentationLogger _logger)
    {
        return new LedgerConsolidatePerformanceMonitor(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterActivity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext enterActivity(SysInstrumentationActivity _activity)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContextWithCustomProperties(_activity);
        this.addCustomPropertyIsRunningInBatch(activityContext);
        this.addCustomPropertyHistoryRecId(activityContext);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterAggregateTransactions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterAggregateTransactions(
        date _fromDate,
        date _toDate,
        boolean _useConsolidationAccount,
        boolean _includeActual,
        boolean _includeBudget,
        boolean _rebuildBalances,
        boolean _transferOnly_BR)
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameAggregate,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);
        SysInstrumentationActivityContext activityContext = this.enterActivity(activity);

        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyDateFrom, any2Str(_fromDate));
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyDateTo, any2Str(_toDate));

        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyUseConsolidationAccount, _useConsolidationAccount ? Yes : No);
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyIncludeActual, _includeActual ? Yes : No);
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyIncludeBudget, _includeBudget ? Yes : No);
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyRebuildBalances, _rebuildBalances ? Yes : No);
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyTransferOnly_BR, _transferOnly_BR ? Yes : No);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitAggregateTransactions</Name>
				<Source><![CDATA[
    internal void exitAggregateTransactions(SysInstrumentationActivityContext _context, Counter _countInput)
    {
        _context.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyWorkloadScale, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_countInput));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterImportConsolidationTransactions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterImportConsolidationTransactions()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameImport,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitImportConsolidationTransactions</Name>
				<Source><![CDATA[
    internal void exitImportConsolidationTransactions(SysInstrumentationActivityContext _context, Counter _countImport)
    {
        _context.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyWorkloadScale, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_countImport));

    }

]]></Source>
			</Method>
			<Method>
				<Name>enterTransferConsolidationTransactions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterTransferConsolidationTransactions()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameTransfer,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitTransferConsolidationTransactions</Name>
				<Source><![CDATA[
    internal void exitTransferConsolidationTransactions(SysInstrumentationActivityContext _context, Counter _countOutput)
    {
        _context.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyWorkloadScale, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_countOutput));

    }

]]></Source>
			</Method>
			<Method>
				<Name>enterDeleteConsolidationTransactions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterDeleteConsolidationTransactions()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameDelete,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitDeleteConsolidationTransactions</Name>
				<Source><![CDATA[
    internal void exitDeleteConsolidationTransactions(SysInstrumentationActivityContext _context, Counter _countDeleted)
    {
        _context.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyWorkloadScale, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_countDeleted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterExportConsolidationTransactions</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterExportConsolidationTransactions()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameExport,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exitExportConsolidationTransactions</Name>
				<Source><![CDATA[
    internal void exitExportConsolidationTransactions(SysInstrumentationActivityContext _context, Counter _countExported)
    {
        _context.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyWorkloadScale, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_countExported));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomPropertyHistoryRecId</Name>
				<Source><![CDATA[
    private void addCustomPropertyHistoryRecId(SysInstrumentationActivityContext _activityContext)
    {
        _activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyConsolidationId, any2Str(this.parmConsolidationId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomPropertyIsRunningInBatch</Name>
				<Source><![CDATA[
    private void addCustomPropertyIsRunningInBatch(SysInstrumentationActivityContext _activityContext)
    {
        _activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyIsRunningInBatch, isRunningInBatch ? Yes : No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterConsolidateWithTemplate</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterConsolidateWithTemplate(
        date _fromDate,
        date _toDate,
        RecId _templateId,
        boolean _rebuildBalances)
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameTemplate,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        SysInstrumentationActivityContext activityContext = this.enterActivity(activity);

        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyDateFrom, any2Str(_fromDate));
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyDateTo, any2Str(_toDate));
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyTemplateId, any2Str(_templateId));
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyRebuildBalances, _rebuildBalances ? Yes : No);
        activityContext.addCustomProperty(LedgerConsolidateInstrumentationConstants::CustomPropertyIsRunningInBatch, isRunningInBatch ? Yes : No);

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enterRerunConsolidation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext enterRerunConsolidation()
    {
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(
            LedgerConsolidateInstrumentationConstants::ActionNameRerun,
            LedgerConsolidateInstrumentationConstants::InstrumentationNamespace);

        return this.enterActivity(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>