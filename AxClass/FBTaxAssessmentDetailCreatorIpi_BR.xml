<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBTaxAssessmentDetailCreatorIpi_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Calculates the ICMS tax assessment details.
/// </summary>
class FBTaxAssessmentDetailCreatorIpi_BR extends FBTaxAssessmentDetailCreator_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createAllAssessmentDetails</Name>
				<Source><![CDATA[
/// <summary>
    /// Creates the IPI assessment detail for all fiscal documents.
    /// </summary>
    public void createAllAssessmentDetails()
    {
        FiscalDocument_BR                   fiscalDocument;
        FiscalDocumentLine_BR               fiscalDocumentLine;
        FiscalDocumentTaxTrans_BR           fiscalDocumentTaxTrans;
        FBBookingPeriodFiscalDocument_BR    bookingPeriodFiscalDocument;
        FBTaxTrans_BR                       existingFbTaxTrans;
        FBTaxTrans_BR                       fbTaxTrans;

        ttsbegin;

        this.bookPostedTaxAdjustments();

        while select AccountingDate, Direction, RecId, Voucher, FiscalEstablishment, DataAreaId
            from fiscalDocument
            where fiscalDocument.AccountingDate  >= fbTaxAssessment.FromDate
                && fiscalDocument.AccountingDate <= fbTaxAssessment.ToDate
            join fbBookingPeriod_BR, FiscalDocument_BR
                from bookingPeriodFiscalDocument
                where bookingPeriodFiscalDocument.fbBookingPeriod_BR    == fbTaxAssessment.fbBookingPeriod_BR
                    && bookingPeriodFiscalDocument.FiscalDocument_BR    == fiscalDocument.RecId
                    && (bookingPeriodFiscalDocument.FiscalSituation == FBFiscalDocumentSituation_BR::Regular
                        || bookingPeriodFiscalDocument.FiscalSituation == FBFiscalDocumentSituation_BR::Complementary
                        || bookingPeriodFiscalDocument.FiscalSituation == FBFiscalDocumentSituation_BR::SpecialLegislation)
            join CFOP, AccountingAmount
                from fiscalDocumentLine
                where fiscalDocumentLine.FiscalDocument == fiscalDocument.RecId
            join FiscalDocumentLine, TaxationCode, TaxBaseAmount, TaxBaseAmountExempt, TaxBaseAmountOther, TaxAmount, Type, RecId, RetainedTax
                from fiscalDocumentTaxTrans
                where fiscalDocumentTaxTrans.FiscalDocumentLine == fiscalDocumentLine.RecId
                    && fiscalDocumentTaxTrans.Type              == TaxType_BR::IPI
            notexists join existingFbTaxTrans
                where existingFbTaxTrans.FiscalDocumentTaxTrans_BR == fiscalDocumentTaxTrans.RecId

        {
            fbTaxTrans.TaxType            = TaxType_BR::IPI;
            fbTaxTrans.cfop               = fiscalDocumentLine.cfop;

            if (fiscalDocument.Direction == FiscalDocDirection_BR::Outgoing)
            {
                fbTaxTrans.Classification = FBTaxAssessmentClassification_BR::DocumentDebit;
            }
            else
            {
                fbTaxTrans.Classification = FBTaxAssessmentClassification_BR::DocumentCredit;
            }

            fbTaxTrans.fbTaxAssessment_BR           = fbTaxAssessment.RecId;
            fbTaxTrans.FiscalDocumentTaxTrans_BR    = fiscalDocumentTaxTrans.RecId;
            fbTaxTrans.TaxationCode                 = fiscalDocumentTaxTrans.TaxationCode;
            fbTaxTrans.TaxBaseAmount                = fiscalDocumentTaxTrans.TaxBaseAmount;
            fbTaxTrans.TaxBaseAmountExempt          = fiscalDocumentTaxTrans.TaxBaseAmountExempt;
            fbTaxTrans.TaxBaseAmountOther           = fiscalDocumentTaxTrans.TaxBaseAmountOther;
            fbTaxTrans.TaxAmount                    = fiscalDocumentTaxTrans.TaxAmount;
            fbTaxTrans.FiscalDocument_BR            = fiscalDocument.RecId;
            fbTaxTrans.FiscalEstablishmentId        = fiscalDocument.FiscalEstablishment;
            fbTaxTrans.FiscalEstablishmentDataArea  = fiscalDocument.dataAreaId;
            fbTaxTrans.Voucher                      = fiscalDocument.Voucher;
            fbTaxTrans.VoucherDataArea              = fiscalDocument.dataAreaId;
            fbTaxTrans.VoucherTransDate             = fiscalDocument.AccountingDate;
            fbTaxTrans.WithholdingTax               = fiscalDocumentTaxTrans.RetainedTax;

            fbTaxTrans.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>