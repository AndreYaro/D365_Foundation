<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxOverUnderPaymentDiffMinusFromTaxAmountFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>TaxOverUnderPaymentDiffMinusFromTaxAmountFlight</c> is enabled, when settling transactions with an over/under payment,
/// the tax of the over/under paid amount would be rounded correctly.
/// </summary>
/// <remarks>
/// Available from 10.0.37.
/// The flight is controlled by entering the following in the flighting service (ECS or similar):
/// "TaxOverUnderPaymentDiffMinusFromTaxAmountFlight_KillSwitch" to disable. This overrules any enablement.
/// </remarks>
[TaxFlighting(TaxFlightingGroup::IndirectTax)]
internal final class TaxOverUnderPaymentDiffMinusFromTaxAmountFlight extends Flight
{
    static private TaxOverUnderPaymentDiffMinusFromTaxAmountFlight singleton = new TaxOverUnderPaymentDiffMinusFromTaxAmountFlight();
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static TaxOverUnderPaymentDiffMinusFromTaxAmountFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>