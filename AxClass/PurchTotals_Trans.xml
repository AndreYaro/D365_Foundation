<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTotals_Trans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchTotals_Trans extends PurchTotals
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructPurchCalcTax</Name>
				<Source><![CDATA[
    public PurchCalcTax constructPurchCalcTax()
    {
        return PurchCalcTax::construct(purchTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    public DiscPct discPercent()
    {
        return purchTable.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    ExchRate exchRate()
    {
        return ExchangeRateHelper::exchRate(purchTable.CurrencyCode, this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    ExchrateSecondary exchRateSecondary()
    {
        return ExchangeRateHelper::exchRateSecond(purchTable.CurrencyCode, this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompanyLineAmount</Name>
				<Source><![CDATA[
    LineAmount interCompanyLineAmount(PurchLine _purchLine, PurchQty _purchQty, InvoiceDate _invoiceDate)
    {
        return _purchLine.interCompanyLineAmount(_purchQty, _invoiceDate, tax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    TransDate invoiceDate()
    {
        return DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderLine_orderTable</Name>
				<Source><![CDATA[
    protected Common orderLine_orderTable()
    {
        return purchLine.purchTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContract</Name>
				<Source><![CDATA[
    protected TradeTotalsIContract parmContract()
    {
        return PurchTotalsTransContract::newFromPurchTable(purchTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    Object  queryBuild()
    {
        QueryRun  query;

        query = new QueryRun(queryStr(PurchLine));
        query.query().dataSourceTable(tableNum(PurchLine)).rangeField(fieldNum(PurchLine, PurchId)).value(queryValue(purchTable.PurchId));
        query.query().dataSourceTable(tableNum(PurchLine)).addRange(fieldNum(PurchLine, LineDeliveryType)).value(SysQuery::valueNot(LineDeliveryType::OrderLineWithMultipleDeliveries));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuildPurchTable</Name>
				<Source><![CDATA[
    QueryRun queryBuildPurchTable()
    {
        QueryRun  queryRun;

        queryRun = new QueryRun(queryStr(PurchTableSelect));
        queryRun.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable, PurchId)).value(queryValue(purchTable.PurchId));

        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGet</Name>
				<Source><![CDATA[
    Common queryGet(QueryRun _queryRun)
    {
        if (_queryRun.changed(tableNum(PurchLine)))
        {
            purchLine = _queryRun.get(tableNum(PurchLine));
        }

        return purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryGetPurchTable</Name>
				<Source><![CDATA[
    PurchTable queryGetPurchTable(QueryRun _queryRun)
    {
        PurchTable queryPurchTable;

        if (_queryRun.changed(tableNum(PurchTable)))
        {
            queryPurchTable = _queryRun.get(tableNum(PurchTable));
        }

        return queryPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    EUROTriangulation triangulation()
    {
        return Currency::triangulation(purchTable.CurrencyCode, this.invoiceDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>PurchTotals</c> class to calculate totals from an associated
    ///    record.
    /// </summary>
    /// <param name="_source">
    ///    The source record.
    /// </param>
    /// <param name="_specQty">
    ///    A value that indicates which quantity will be used.
    /// </param>
    /// <returns>
    ///    An instance of the <c>PurchTotals</c> class.
    /// </returns>
    static public PurchTotals construct(PurchTable _source, PurchUpdate _specQty)
    {
        return new PurchTotals_Trans(_source, _specQty);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>