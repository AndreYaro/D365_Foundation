<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSParametersForm</c> class contains the business logic of the <c>WHSParameters</c> form.
/// </summary>
public class WHSParametersForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>printMgmtButton_clicked</Name>
				<Source><![CDATA[
	/// <summary>
	/// Launches print management setup for WHS when button is clicked.
	/// </summary>
	/// <param name="_element">
	/// Caller form object.
	/// </param>
    public void printMgmtButton_clicked(Object _element)
    {
        PrintMgmtSetupContext   setupContext = new PrintMgmtSetupContext();

        setupContext.addHierarchyContext(PrintMgmtHierarchyType::WHS, PrintMgmtNodeType::WHS);
        setupContext.parmCaller(_element);
        setupContext.parmReferencedTableBuffer(null);
        PrintMgmt::launchSetup(setupContext);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveReference</Name>
				<Source><![CDATA[
	/// <summary>
	/// Resolves reference by number sequence.
	/// </summary>
	/// <param name="_formReferenceControl">
	/// Form reference control.
	/// </param>
	/// <param name="_scope">
	/// Number sequence scope.
	/// </param>
	/// <returns>
	/// Number sequence record.
	/// </returns>
    public NumberSequenceTable resolveReference(FormReferenceControl _formReferenceControl, NumberSeqScope _scope)
    {
        NumberSequenceCode code = _formReferenceControl.filterValue(
            AbsoluteFieldBinding::construct(fieldStr(NumberSequenceTable, NumberSequence),
            tableStr(NumberSequenceTable))).value();

        return NumberSequenceTable::findByNaturalKey(code, _scope.getId(true));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWHSInitializeReleaseToWarehouseRuleVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the button to initialize release to warehouse rule should be visible.
    /// </summary>
    /// <returns>True if the button should be visible; otherwise, false.</returns>
    [Hookable(false)]
    internal final boolean isWHSInitializeReleaseToWarehouseRuleVisible()
    {
        InventLocation warehouse;

        // If we have WHS warehouses that are set to not applicable, 
        // then the job to initiate the rule has not been run.
        select firstonly RecId from warehouse
            where warehouse.WHSEnabled == NoYes::Yes
            &&    warehouse.ReleaseToWarehouseRule == WHSReleaseToWarehouseRule::NotApplicable;

        if (warehouse.RecId)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>