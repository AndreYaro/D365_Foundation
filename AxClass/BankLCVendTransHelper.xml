<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCVendTransHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCVendTransHelper</c> class helps filter and shows the <c>VendTransOpen</c> records that
///    are on the <c>VendOpenTrans</c> form that are related to the letter of credit.
/// </summary>
class BankLCVendTransHelper extends BankLCCustVendTransHelper
{
    FormDataSource              bankLCVendTrans_ds;
    BankLCImportFeatureChecker  bankLCImportFeatureChecker;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query for the form.
    /// </summary>
    /// <param name="_query">
    /// The form query.
    /// </param>
    public void buildQuery(Query _query)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        queryBuildDataSource = _query.dataSourceTable(tablenum(BankLCVendTrans));

        switch (bankDocumentTypeFilter)
        {
            case BankLCBankDocumentType::All :
                queryBuildDataSource.joinMode(JoinMode::OuterJoin);
                queryBuildDataSource.clearRange(fieldnum(BankLCVendTrans, BankDocumentType));
                break;
            default :
                queryBuildDataSource.joinMode(JoinMode::InnerJoin);
                queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(BankLCVendTrans, BankDocumentType));
                queryBuildRange.value(QueryValue(BankLCCustVendTransHelper::convertDocumentType(bankDocumentTypeFilter)));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>configBankLCControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configs the Letter of Credit related controls shown on the form.
    /// </summary>
    /// <param name="_query">
    /// The form query.
    /// </param>
    public void configBankLCControls(
        Query   _query)
    {
        QueryBuildDataSource queryBuildDataSource;

        queryBuildDataSource = _query.dataSourceTable(tablenum(BankLCVendTrans));

        queryBuildDataSource.relations(false);
        queryBuildDataSource.addLink(fieldnum(VendTrans, BankLCImportLine), fieldnum(BankLCVendTrans, BankLCImportLine));

        if (bankLCImportFeatureChecker.checkFeatureEnabled())
        {
            bankDocumentTypeFilterControl.visible(true);
            bankLCVendTrans_ds.object(fieldnum(BankLCVendTrans, BankLCNumber)).visible(true);
            bankLCVendTrans_ds.object(fieldnum(BankLCVendTrans, LineNum)).visible(true);
        }
        else
        {
            _query.dataSourceTable(tablenum(BankLCVendTrans)).enabled(false);
            bankDocumentTypeFilterControl.visible(false);
            bankLCVendTrans_ds.object(fieldnum(BankLCVendTrans, BankLCNumber)).visible(false);
            bankLCVendTrans_ds.object(fieldnum(BankLCVendTrans, LineNum)).visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
        bankLCImportFeatureChecker = BankLCImportFeatureChecker::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankLCVendTransDS</Name>
				<Source><![CDATA[
        public FormDataSource parmBankLCVendTransDS(FormDataSource _bankLCVendTrans_ds = bankLCVendTrans_ds)
    {
        bankLCVendTrans_ds = _bankLCVendTrans_ds;
        return bankLCVendTrans_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static BankLCVendTransHelper construct()
    {
        return new BankLCVendTransHelper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>