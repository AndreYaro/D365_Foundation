<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionValidationTimer</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

/// <summary>
/// The <c>RetailTransactionValidationTimer</c> class contains logic to measure the duration of the validation process.
/// </summary>
internal final class RetailTransactionValidationTimer implements System.IDisposable
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

    private System.Diagnostics.Stopwatch validationStopwatch;
    private RetailTransactionTable transactionTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        validationStopwatch = new System.Diagnostics.Stopwatch();
        validationStopwatch.Start();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of <c>RetailTransactionValidationTimer</c>.
    /// </summary>
    /// <param name = "_transactionTable">The transaction being validated.</param>
    /// <returns>An instance of <c>RetailTransactionValidationTimer</c>.</returns>
    public static RetailTransactionValidationTimer construct(RetailTransactionTable _transactionTable)
    {
        var instance = new RetailTransactionValidationTimer();
        instance.transactionTable = _transactionTable;

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stops the timer and logs the duration of the transaction validation to the telemetry.
    /// </summary>
    public void Dispose()
    {
        validationStopwatch.Stop();

        eventSource.EventWriteTransactionValidationTransactionValidationFinished(transactionTable.RecId, validationStopwatch.ElapsedMilliseconds);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>