<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrSchedulerRuntimes</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WrkCtrSchedulerRuntimes</c> class is used to log the runtimes of various events.
/// </summary>
class WrkCtrSchedulerRuntimes
{
    Map     mapMeasurements;
    boolean enabled;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endMeasurement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ends a runtime measurement for a specified event and records the measured time in the <c>WrkCtrSchedulerRuntimeTable</c> table.
    /// </summary>
    /// <param name="_runtimeKey">
    /// A string with the event name.
    /// </param>
    public void endMeasurement(str _runtimeKey)
    {
        WrkCtrSchedulerRuntimeTable wrkCtrSchedulerRuntimeTable;
        int                         endTime;

        if (enabled)
        {
            endTime = System.Environment::get_TickCount();
            if (mapMeasurements.exists(_runtimeKey))
            {
                ttsbegin;

                wrkCtrSchedulerRuntimeTable.Event = _runtimeKey;
                wrkCtrSchedulerRuntimeTable.RunTime = endTime - mapMeasurements.lookup(_runtimeKey);
                wrkCtrSchedulerRuntimeTable.EventEndTime = DateTimeUtil::utcNow();
                wrkCtrSchedulerRuntimeTable.insert();
                mapMeasurements.remove(_runtimeKey);

                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        enabled = WrkCtrParameters::find().SchedulerRuntimeLoggingEnabled;

        mapMeasurements = new Map(Types::String, Types::Int64);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnabled</Name>
				<Source><![CDATA[
        public boolean parmEnabled(boolean _enabled = enabled)
    {
        if (!prmIsDefault(_enabled))
        {
            enabled = _enabled;
        }
        return enabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startMeasurement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts a measurement for a specific event.
    /// </summary>
    /// <param name="_runtimeKey">
    /// A string with the event name.
    /// </param>
    public void startMeasurement(str _runtimeKey)
    {
        int startTime;

        if (enabled)
        {
            startTime = System.Environment::get_TickCount();
            mapMeasurements.insert(_runtimeKey, startTime);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static WrkCtrSchedulerRuntimes construct()
    {
        return new WrkCtrSchedulerRuntimes();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>