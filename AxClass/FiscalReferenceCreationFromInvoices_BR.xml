<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalReferenceCreationFromInvoices_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FiscalRferenceCreationFromInvoices_BR</c> class is used to manage a temporary table with
/// information about existent invoices, where is possible to select some of them.
/// </summary>
public class FiscalReferenceCreationFromInvoices_BR extends RunBase
{
    Object					callerForm;
    tableId					sourceTableId;
    recId					sourceRecId;
    TmpFiscalReference_BR	tmpFiscalReference;
    FiscalDocumentTextID_BR	defaultLegalTextId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addFromInvoiceMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a new record in the <c>TmpFiscalReference_BR</c> table initialized from a given map.
    /// </summary>
    /// <param name="_invoicesReferencedMap">
    /// The map to be used for initialization of the record.
    /// </param>
    public void addFromInvoiceMap(InvoicesReferencedByMap_BR _invoicesReferencedMap)
    {
        tmpFiscalReference.clear();
        tmpFiscalReference.initFromReferenceMap(_invoicesReferencedMap);
        tmpFiscalReference.LegalTextId = defaultLegalTextId;
        tmpFiscalReference.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the interface
    /// </summary>
    /// <returns>
    /// Returns the interface
    /// </returns>
    public Object  dialog()
    {
        Args            parameters = new Args();
        FormRun         fiscalReferenceCreateFromInvoices_BR;

        parameters.name(formStr(FiscalReferenceCreationFromInvoices_BR));
        parameters.caller(this);
        fiscalReferenceCreateFromInvoices_BR = classfactory.formRunClass(parameters);

        return fiscalReferenceCreateFromInvoices_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the fiscal establishment of the table record for which this class is called.
    /// </summary>
    /// <returns>
    /// The <c>FiscalEstablishment_BR</c> table record; otherwise, null.
    /// </returns>
    public FiscalEstablishment_BR getFiscalEstablishment()
    {
        switch (this.parmSourceTableId())
        {
            case tableNum(SalesParmTable) :
                return InventSite::find(salesParmTable::findRecId_W(this.parmSourceRecId()).InventSiteId).fiscalEstablishment();

            case tableNum(VendInvoiceInfoTable) :
                return FiscalEstablishment_BR::find(conPeek(vendInvoiceInfoTable::findRecId(this.parmSourceRecId()).getFiscalEstablishment(), 1));

            case tableNum(SalesComplementaryInvoiceHeader) :
                return SalesComplementaryInvoiceHeader::find(this.parmSourceRecId()).fiscalEstablishment();

            case tableNum(PurchComplementaryInvoiceHeader) :
                return PurchComplementaryInvoiceHeader::find(this.parmSourceRecId()).fiscalEstablishment();
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get/define the original Record ID
    /// </summary>
    /// <param name= "_sourceRecId">
    /// Record identifier
    /// </param>
    /// <returns>
    /// Returns the rec ID
    /// </returns>
    public recId parmSourceRecId(recId _sourceRecId = sourceRecId)
    {
        sourceRecId = _sourceRecId;
        return  sourceRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultLegalTextId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get/define default legal text ID
    /// </summary>
    /// <param name= "_defaultLegalTextId">
    /// Default legal text ID
    /// </param>
    /// <returns>
    /// Returns the default legal text ID
    /// </returns>
    public FiscalDocumentTextID_BR parmDefaultLegalTextId(FiscalDocumentTextID_BR _defaultLegalTextId = defaultLegalTextId)
    {
        defaultLegalTextId = _defaultLegalTextId;
        return defaultLegalTextId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get/define the original Table ID
    /// </summary>
    /// <param name = "_sourcetableId">
    /// Table identifier
    /// </param>
    /// <returns>
    /// Returns the table ID
    /// </returns>
    public tableId parmSourceTableId(tableId _sourcetableId = sourcetableId)
    {
        sourcetableId = _sourcetableId;
        return  sourcetableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpFiscalReference</Name>
				<Source><![CDATA[
    public TmpFiscalReference_BR parmTmpFiscalReference(TmpFiscalReference_BR _tmpFiscalReference = tmpFiscalReference)
    {
        tmpFiscalReference = _tmpFiscalReference;
        return tmpFiscalReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets basic information in order to start the class.
    /// </summary>
    /// <param name= "args">
    /// Args
    /// </param>
    static void main(Args args)
    {
        TmpFiscalReference_BR                       tmpfiscalReference;
        Object                                      callerFormDataSource;
        FiscalReferenceCreationFromInvoices_BR      fiscalReferenceCreator;

        FormRun                                     callerForm;
        tableId                                     sourceTableId;
        recId                                       sourceRecId;

        callerForm    = args.caller();
        sourceTableId = callerForm.args().record().TableId;
        sourceRecId   = callerForm.args().record().RecId;

        tmpfiscalReference   = args.record();
        callerFormDataSource = FormDataUtil::getFormDataSource(tmpfiscalReference);

        fiscalReferenceCreator = new FiscalReferenceCreationFromInvoices_BR();
        fiscalReferenceCreator.parmTmpFiscalReference(tmpfiscalReference);
        fiscalReferenceCreator.parmSourceTableId(sourceTableId);
        fiscalReferenceCreator.parmSourceRecId(sourceRecId);

        TmpFiscalReferenceIDefaultLegalText_BR tmpFiscalReferenceForm = callerForm as TmpFiscalReferenceIDefaultLegalText_BR;
        fiscalReferenceCreator.parmDefaultLegalTextId(tmpFiscalReferenceForm.getDefaultLegalTextId());

        if (fiscalReferenceCreator.prompt())
        {
            fiscalReferenceCreator.runOperation();
        }

        callerFormDataSource.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>