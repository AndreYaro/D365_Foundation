<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollPEGeneratorPerEarningStmntLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollPEGeneratorPerEarningStmntLine</c> class provides the functionality to generate premium earning lines per earning statement line.
/// </summary>
public class PayrollPEGeneratorPerEarningStmntLine extends PayrollPEGenerator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertPremiumEarningLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a premium earning statement line in the <c>PayrollEarningStatementLine</c> table.
    /// </summary>
    /// <param name="_payrollEarningStatementLine">
    /// The <c>PayrollEarningStatementLine</c> table record.
    /// </param>
    protected void insertPremiumEarningLine(PayrollEarningStatementLine _payrollEarningStatementLine)
    {
        PayrollEarningStatementLine premiumEarningStatementLine;

        premiumEarningStatementLine.clear();

        buf2Buf(_payrollEarningStatementLine, premiumEarningStatementLine);

        premiumEarningStatementLine.PaymentStatus      = PayrollPaymentProcessingStatus::None;
        premiumEarningStatementLine.GenerationSource   = PayrollGenerationSource::Premium;
        premiumEarningStatementLine.PremiumEarningCode = premiumEarningCode.RecId;
        premiumEarningStatementLine.EarningStatement   = earningStatement.RecId;
        premiumEarningStatementLine.EarningCode        = premiumEarningCode.EarningCode;
        premiumEarningStatementLine.Quantity           = 1;
        premiumEarningStatementLine.AccountingDate     = _payrollEarningStatementLine.AccountingDate;
        premiumEarningStatementLine.EarningDate        = _payrollEarningStatementLine.EarningDate;

        if (this.parmPremiumEarningCode())
        {
            premiumEarningStatementLine.OriginatingEarningStatementLine = _payrollEarningStatementLine.RecId;
            premiumEarningStatementLine.SourceDocumentLine = 0;
            SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(premiumEarningStatementLine);
        }

        premiumEarningStatementLine.modifiedField(fieldNum(PayrollEarningStatementLine, EarningCode));

        if (premiumEarningStatementLine.AccountingCurrencyAmount != 0)
        {
            premiumEarningLineInsertList.add(premiumEarningStatementLine);

            isPremiumEarningLineInserted = true;
        }

        canContinue = true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>