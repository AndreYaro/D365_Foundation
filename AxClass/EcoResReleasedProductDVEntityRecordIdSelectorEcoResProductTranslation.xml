<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResReleasedProductDVEntityRecordIdSelectorEcoResProductTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[ExportMetadata(identifierStr(TableName), tableStr(EcoResProductTranslation))]
[ExportMetadata(identifierStr(EntityName), dataentityviewstr(EcoResReleasedProductDVEntity))]
[Export(identifierstr(Dynamics.AX.Application.IBusinessEventsTableToEntityRecordIdSelector))]
internal final class EcoResReleasedProductDVEntityRecordIdSelectorEcoResProductTranslation implements IBusinessEventsTableToEntityRecordIdSelector
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityRecordIdsImpactedByTableChange</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public List getEntityRecordIdsImpactedByTableChange(BusinessEventsDefinition _eventDefinition, BusinessEventsActions _changeType, RecId _changedRecordId)
    {
        if (_eventDefinition.DataSourceName != dataEntityDataSourceStr(EcoResReleasedProductDVEntity, EcoResProductTranslationToSystemLanguage)
            || !EcoResReleasedProductDVEntitiesUseRecordIdSelectorsFlight::instance().isEnabled())
        {
            return null;
        }

        List impactedRecIds = new List(Types::Int64);

        InventTable inventTable;
        EcoResProductTranslation ecoResProductTranslation;

        while select RecId from inventTable
            exists join ecoResProductTranslation
            where inventTable.Product == ecoResProductTranslation.Product
                && ecoResProductTranslation.LanguageId == SystemParameters::systemLanguageId()
                && ecoResProductTranslation.RecId == _changedRecordId
        {
            impactedRecIds.addEnd(inventTable.RecId);
        }
        
        return impactedRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>