<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgResetParametersToDefault</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgResetParametersToDefault</c> class resets fields in the <c>JmgParameters</c> table to
///    their default values.
/// </summary>
/// <remarks>
///    For a description of the default values, see the <see cref="M:JmgParameters.InitValue" /> method.
/// </remarks>
class JmgResetParametersToDefault extends RunBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <param name="dialog">
    /// An already initialized dialog can be passed.
    /// </param>
    /// <param name="forceOnClient">
    /// Specifies whether  the dialog must be instantiated on the client.
    /// </param>
    /// <returns>
    /// An object that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    /// A dialog can either be built using the <c>Dialog</c> class or using a class created in the AOT.The
    /// <c>JmgResetParametersToDefault</c> class adds a text to the dialog, asking the user to confirm that
    /// parameters should be reset to default values.
    /// </remarks>
    public Object dialog(DialogRunbase dialog = null, boolean forceOnClient = false)
    {
        Dialog ret;

        ret = this.dialogInternal(dialog, forceOnClient);

        ret.caption("@SYS55764");
        ret.addText("@SYS27477");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS55764";
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the fields on the <see cref="T:JmgParameters" /> to default values. If the table is called
    ///    from a form, its data source is refreshed.
    /// </summary>
    public void run()
    {
        super();

        ttsbegin;
        JmgParameters   jmgParameters = JmgParameters::find(true);
        jmgParameters.initValue();
        jmgParameters.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean ret = super(packedClass);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>JmgResetParametersToDefault</c> class
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>JmgResetParametersToDefault</c> class.
    /// </returns>
    public static JmgResetParametersToDefault construct()
    {
        return new JmgResetParametersToDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides an entry point for the <c>JmgResetParametersToDefault</c> class when it is called from a
    ///    menu item.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the <c>JmgResetParametersToDefault</c> class.
    /// </param>
    /// <remarks>
    ///       Use the
    ///    <c>
    ///       main
    ///    </c>
    ///       class design pattern whenever a class is called from a menu item. Do not call the
    ///    <c>
    ///       main
    ///    </c>
    ///       method explicitly from the code; call it implicitly from a menu item.Typically, you would:
    ///    <list type="bullet">
    ///       <item>
    ///          <description>
    ///             Instantiate the class by calling the static <c>construct</c> method.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Call the <c>prompt</c> method to create a dialog box.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Call the <c>run</c> method, if the user clicks OK in the dialog box.
    ///          </description>
    ///       </item>
    ///    </list>
    /// </remarks>
    public static void main(Args _args)
    {
        JmgResetParametersToDefault jmgResetParametersToDefault = JmgResetParametersToDefault::construct();

        if (jmgResetParametersToDefault.prompt())
        {
            jmgResetParametersToDefault.runOperation();
            if (_args && _args.caller())
            {
                FormRun caller = _args.caller();
                caller.dataSource().research();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>