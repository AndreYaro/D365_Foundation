<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerPostingCollectionRecordIdLink</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerPostingCollectionRecordIdLink</c> class maintains a record ID to record ID association
///    collection.
/// </summary>
/// <remarks>
///    The collection is specific to legal entity and ledger category.
/// </remarks>
public class LedgerPostingCollectionRecordIdLink extends LedgerPostingCollection
{
    #define.ThrowForDuplicates(false)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEmptyInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty instance of the collection.
    /// </summary>
    /// <returns>
    /// An empty instance of the collection.
    /// </returns>
    /// <remarks>
    /// This method is used to initialize the collection for a new legal entity, ledger category, and
    /// custom qualifier combination. The value returned corresponds to the values returned by the
    /// <c>getCollection</c> method and the <c>getCollectionForAdd</c> method.
    /// </remarks>
    protected Object getEmptyInstance()
    {
        LedgerPostingOneToManyCollection emptyInstance = LedgerPostingOneToManyCollection::construct(
                Types::Int64, // use this for perf
                Types::Int64, // use this for perf
                #ThrowForDuplicates);

        return emptyInstance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static LedgerPostingCollectionRecordIdLink construct()
    {
        LedgerPostingCollectionRecordIdLink collection = new LedgerPostingCollectionRecordIdLink();

        return collection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>