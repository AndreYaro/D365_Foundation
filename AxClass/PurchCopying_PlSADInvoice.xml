<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCopying_PlSADInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchCopying_PlSADInvoice</c> performs copying for Polish SAD.
/// </summary>
[SalesPurchCopyFactory(SalesPurchCopy::CopyAllLines, tableStr(PlSADInvoice))]
internal class PurchCopying_PlSADInvoice extends PurchCopyingBase
{
    private PlSADInvoice sadInvoice;
    private Map sadPurchLineNoMap = new Map(Types::String, Types::Record);
    private RecordInsertList sadPurchLineList = new RecordInsertList(tableNum(PlSADPurchLine), true, false, true);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createSADPurchTable</Name>
				<Source><![CDATA[
    private PlSADPurchTable createSADPurchTable(PurchId _purchId)
    {
        PlSADPurchTable sadPurchTable;

        if (!_purchId)
        {
            return sadPurchTable;
        }

        if (sadPurchLineNoMap.exists(_purchId))
        {
            sadPurchTable = sadPurchLineNoMap.lookup(_purchId);
        } 
        else 
        {
            sadPurchTable = PlSADPurchTable::find(_purchId);

            if (!sadPurchTable)
            {
                sadPurchTable.PurchId = _purchId;
                sadPurchTable.SADNumberCode = sadInvoice.SADNumberCode;
                sadPurchTable.insert();
            }
            sadPurchLineNoMap.insert(_purchId, sadPurchTable);
        }

        return sadPurchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyLine</Name>
				<Source><![CDATA[
    protected void copyLine(TmpFrmVirtual _tmpFrmVirtualLine)
    {
        if (_tmpFrmVirtualLine.Qty)
        {
            PurchLine purchLine = PurchLine::findRecId(_tmpFrmVirtualLine.RecordNo, true);
            if (purchLine && !PlSADPurchLine::findRefRecIdInvoiceId(purchLine.RecId, sadInvoice.InvoiceId))
            {
                PurchId purchId = purchLine.PurchId;

                PlSADPurchTable sadPurchTable = this.createSADPurchTable(purchId);

                if (sadPurchTable)
                {
                    sadPurchTable.addPurchLine(purchLine, sadPurchLineList, sadInvoice.SADInvoiceLineNo, _tmpFrmVirtualLine.Qty);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>endCopy</Name>
				<Source><![CDATA[
    protected void endCopy()
    {
        sadPurchLineList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParameters</Name>
				<Source><![CDATA[
    public void initParameters(PurchCopyingContract _contract)
    {
        super(_contract);

        sadInvoice = _contract.parmCallingTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>