<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CurrencyRelatedExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class implements the <c>CurrencyRelatedExtensible</c> interface which provides currency information to models
/// which do not have access to the Currency model.
/// </summary>
class CurrencyRelatedExtension implements CurrencyRelatedExtensible
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registerExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers this class as an extension class to provide currency information.
    /// </summary>
    /// <param name = "_helper">
    /// The <c>CurrencyRelatedHelper</c> class.
    /// </param>
    [SubscribesTo(classstr(CurrencyRelatedHelper), delegatestr(CurrencyRelatedHelper, registerExtensionDelegate))]
    static void registerExtension(CurrencyRelatedHelper _helper)
    {
        CurrencyRelatedExtension extension = new CurrencyRelatedExtension();
        _helper.registerExtension(extension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyTableId</Name>
				<Source><![CDATA[
    tableId getCurrencyTableId()
    {
        return tableName2id(tableStr(Currency));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyFieldId</Name>
				<Source><![CDATA[
    fieldId getCurrencyFieldId(tableId relatedTableId)
    {
        return fieldName2id(relatedTableId, fieldStr(Currency,CurrencyCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertCurrencyValue</Name>
				<Source><![CDATA[
    AmountMST convertCurrencyValue(date exchangeDate, ExchangeRateTypeRecID exchangeRateTypeRecID, CurrencyCode fromCurrencyCode, CurrencyCode toCurrencyCode, Amount fromAmount)
    {
        CurrencyExchangeHelper currencyExchangeHelper;
        AmountMST convertedAmount;

        // Convert currency value
        currencyExchangeHelper = CurrencyExchangeHelper::construct();
        currencyExchangeHelper.parmExchangeDate(exchangeDate);
        currencyExchangeHelper.parmExchangeRateTypeRecId(exchangeRateTypeRecID);
        convertedAmount = currencyExchangeHelper.calculateCurrencyToCurrency(fromCurrencyCode,
                                                                                 toCurrencyCode,
                                                                                 fromAmount,
                                                                                 true);

        return convertedAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>