<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingProdTransactionFilter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventTrackingProdTransactionFilter</c> class provides filtering based on a production order for
///    the <see cref="InventTrans form"/> form.
/// </summary>
public class InventTrackingProdTransactionFilter extends InventTrackingTraceFilter
{
    #define.CurrentVersion(1)

    ProdTable prodTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillFilterTable</Name>
				<Source><![CDATA[
    protected void fillFilterTable()
    {
        InventTransOrigin       inventTransOrigin;
        InventTrans             inventTrans;
        InventTransTmpFilter    inventTransTmpFilter = filterTmp as InventTransTmpFilter;

        while select RecId from inventTrans
            exists join inventTransOrigin
                where inventTransOrigin.RecId == inventTrans.InventTransOrigin
                && (inventTransOrigin.ReferenceCategory     == InventTransType::Production
                    || inventTransOrigin.ReferenceCategory  == InventTransType::PmfProdCoBy)
                && inventTransOrigin.ReferenceId == prodTable.ProdId
        {
            inventTransTmpFilter.InventTrans = inventTrans.RecId;
            inventTransTmpFilter.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterTableType</Name>
				<Source><![CDATA[
    protected TableId filterTableType()
    {
        return tableNum(InventTransTmpFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    public void formInitPost()
    {
        super();

        formRun.design().caption(formRun.design().caption() + #CaptionSeparator + "@SYS133912" + " " + prodTable.ProdId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#currentVersion, prodTable];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdTable</Name>
				<Source><![CDATA[
    public ProdTable parmProdTable(ProdTable _prodTable = prodTable)
    {
        prodTable = _prodTable;

        return prodTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packed)
    {
        Version version = RunBase::getVersion(_packed);

        switch (version)
        {
            case #CurrentVersion:
                [version, prodTable] = _packed;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTrackingProdTransactionFilter construct()
    {
        return new InventTrackingProdTransactionFilter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of <c>InventTrackingProdTransactionFilter</c> from a <c>ProdTable</c> buffer.
    /// </summary>
    /// <param name="_prodTable">
    ///    A <c>ProdTable</c> buffer.
    /// </param>
    /// <returns>
    ///   An instance of <c>InventTrackingProdTransactionFilter</c>.
    /// </returns>
    public static InventTrackingProdTransactionFilter newProdTable(ProdTable _prodTable)
    {
        InventTrackingProdTransactionFilter filter = InventTrackingProdTransactionFilter::construct();

        filter.parmProdTable(_prodTable);

        return filter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>