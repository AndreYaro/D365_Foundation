<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdPostProjAdvancedJournal_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class initialized to post withhold taxes for project advanced journal extends from TaxWithholdPost_IN.
/// </summary>
internal final class TaxWithholdPostProjAdvancedJournal_IN extends TaxWithholdPost_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of the <c>TaxWithholdPostProjAdvancedJournal_IN</c> class.
    /// </summary>
    /// <param name="_post">
    /// Yes if the instance will be post.
    /// </param>
    /// <param name="_initializationClass">
    /// The initialization class.
    /// </param>
    /// <param name="_tmpTaxWithholdWorkTrans">
    /// The temporary tax withhold work transaction, optional.
    /// </param>
    public void new(
        NoYes _post,
        Object _initializationClass,
        TmpTaxWithholdWorkTrans_IN _tmpTaxWithholdWorkTrans = null)
    {
        taxableDocument = _initializationClass as TaxableDocument;
        if (taxableDocument == null)
        {
            throw error("@SYS95118");
        }

        post = _post;
        taxWithholdWorkTrans = _tmpTaxWithholdWorkTrans;

        taxModuleType = TaxModuleType::Voucher;

        headingTableId = taxableDocument.getJournalizedDocument().TableId;
        headingRecId = taxableDocument.getJournalizedDocument().RecId;
        origHeadingTableId = taxableDocument.getSourceHeader().TableId;
        origHeadingRecId = taxableDocument.getSourceHeader().RecId;

        if (!headingTableId || !headingRecId)
        {
            throw error("@SYS18447");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postToTaxWithHoldTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Posts a TaxWithholdTrans_IN record.
    /// </summary>
    /// <param name="_ledgerPostingController">
    /// The ledger posting controller to use for ledger posting.
    /// </param>
    /// <param name="_taxWithholdTrans">
    /// Transaction line being posted.
    /// </param>
    /// <param name="_exchangeRateHelper">
    /// An instance of <c>CurrencyExchHalper</c> with the currency, exchange rates, and triangulation values set.
    /// </param>
    /// <param name="_taxWithholdData">
    /// The container with the required source data.
    /// </param>
    [Wrappable(false)]
    protected void postToTaxWithHoldTrans(LedgerPostingController _ledgerPostingController, TaxWithholdTrans_IN _taxWithholdTrans, CurrencyExchangeHelper _exchangeRateHelper, container _taxWithholdData)
    {
        ProjAdvancedJournalLine projAdvancedJournalLine;

        select firstonly projAdvancedJournalLine
            where projAdvancedJournalLine.RecId == _taxWithholdTrans.SourceRecId
                && projAdvancedJournalLine.TableId == _taxWithholdTrans.SourceTableId;

        VendTable vendTableLoc = VendTable::findByLedgerDimension(projAdvancedJournalLine.OffsetLedgerDimension);

        _taxWithholdTrans.VendAccount = vendTableLoc.AccountNum;
        _taxWithholdTrans.LineNum = projAdvancedJournalLine.LineNumber;
        _taxWithholdTrans.ProjId = projAdvancedJournalLine.ProjId;
        _taxWithholdTrans.RecoverableAccount = projAdvancedJournalLine.projAdvancedJournalLineTaxExtensionIN().TCSGroup ? true : false;
        _taxWithholdTrans.TaxWithholdRegNumber = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(projAdvancedJournalLine).TaxWithholdTAN;

        super(_ledgerPostingController, _taxWithholdTrans, _exchangeRateHelper, _taxWithholdData);

        ttsbegin;
        _taxWithholdTrans.selectForUpdate(true);
        _taxWithholdTrans.Voucher = projAdvancedJournalLine.Voucher;
        _taxWithholdTrans.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAndPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is the main entry point to execute transaction-specific logic and to post to
    /// <c>TaxWithholdTrans</c> table and to post withhold tax amounts to the Ledger.
    /// </summary>
    /// <param name="_ledgerPostingController">
    /// The ledger posting controller to use for ledger posting.
    /// </param>
    /// <returns>
    /// The total withhold tax amount.
    /// </returns>
    public TaxAmount updateAndPost(LedgerPostingController _ledgerPostingController)
    {
        TaxAmountCur taxAmount;

        if (!this.existsTax())
        {
            return 0;
        }

        this.initLedgerPosting(_ledgerPostingController);

        if (post)
        {
            this.saveAndPostWHT(_ledgerPostingController);

            if (_ledgerPostingController.getReference())
            {
                voucher = _ledgerPostingController.getReference().parmVoucher();
                taxDate = _ledgerPostingController.getReference().parmTransDate();
                taxAmount = TaxWithholdPost_IN::taxTotalVoucherDate(voucher, taxDate);
            }
        }

        return taxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSubLedgerJournalLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a Boolean value that indicates whether the current transaction being posted supports the <c>SubLedgerDistributions</c> or <c>SubLedgerJournalLines</c>.
    /// </summary>
    /// <returns>
    /// true if the current transaction supports sub-ledgers; otherwise, false.
    /// </returns>
    public boolean useSubLedgerJournalLines()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useTaxUncommitted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the <c>TaxWithholdPostProjAdvancedJournal_IN</c> class should use the <c>TaxWithholdUncommitted_IN</c> table.
    /// </summary>
    /// <returns>
    /// true if the <c>TaxWithholdPostProjAdvancedJournal_IN</c> class should use the <c>TaxWithholdUncommitted_IN</c> table; otherwise, false.
    /// </returns>
    public boolean useTaxUncommitted()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>