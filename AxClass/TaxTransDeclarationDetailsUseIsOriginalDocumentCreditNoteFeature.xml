<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using KernelStateProvider = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureStateProvider;

/// <summary>
/// The <c>TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature</c> class defines the feature responsible
/// for consumption of "Original document is credit note" property from tax transaction in VAT declaration reporting.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable
{
    private static TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature instance = new TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature instance()
    {
        return TaxTransDeclarationDetailsUseIsOriginalDocumentCreditNoteFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@TaxDeclarationDetails:UseIsOriginalDocumentCreditNoteFeatureLabel");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::Tax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@TaxDeclarationDetails:UseIsOriginalDocumentCreditNoteFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2230527';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        if (TaxTransDeclarationDetailsViewBatchSynchronize::doesBatchJobExist())
        {
            throw error(strFmt(
                "@TaxDeclarationDetails:FeatureStateCannotBeChangedBeforeBatchJobCompletion",
                TaxTransDeclarationDetailsViewBatchSynchronize::batchCaption()));
        }

        TaxTransDeclarationDetailsViewBatchSynchronize::createBatchJob();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        if (TaxTransDeclarationDetailsViewBatchSynchronize::doesBatchJobExist())
        {
            throw error(strFmt(
                "@TaxDeclarationDetails:FeatureStateCannotBeChangedBeforeBatchJobCompletion",
                TaxTransDeclarationDetailsViewBatchSynchronize::batchCaption()));
        }

        TaxTransDeclarationDetailsViewBatchSynchronize::createBatchJob();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>