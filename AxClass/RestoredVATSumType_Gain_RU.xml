<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RestoredVATSumType_Gain_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RestoredVATSumType_Gain_RU extends RestoredVATSumType_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>keyFields</Name>
				<Source><![CDATA[
        public container keyFields()
    {
        return [ fieldnum(RestoredVATLogGain_RU, TransDate) ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(Common _common, Map _mapParentSumTypes)
    {
        RestoredVATLogGain_RU restoredVATLogGain = _common;
        ;

        parentRecord = RestoredVATLogTable_RU::find(restoredVATLogGain.TransDate, true);

        super(_common, _mapParentSumTypes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSum</Name>
				<Source><![CDATA[
        public void updateSum(Common _updatedRecord = common)
    {
        RestoredVATLogGain_RU   gain        = _updatedRecord;
        RestoredVATLogGain_RU   orig        = _updatedRecord.orig();
        RestoredVATLogGain_RU   gain_Orig;
        RestoredVATLogTable_RU  logTable    = parentSumType.record();
        int                     sign        = gain.Include - orig.Include;
        ;

        if (commonPrev)
        {
            gain_Orig = commonPrev;
        }
        else
        {
            gain_Orig = orig;
        }

        if (gain.Include == orig.Include && ! gain.Include)
        {
            return;
        }

        logTable.TotalGain      += gain.TotalGain     - gain_Orig.TotalGain;
        logTable.ExportGain     += gain.ExportGain    - gain_Orig.ExportGain;
        logTable.DomesticGain   += gain.DomesticGain  - gain_Orig.DomesticGain;
        logTable.NotLiableGain  += gain.NotLiableGain - gain_Orig.NotLiableGain;

        super();

        if (sign)
        {
            logTable.TotalGain      += sign * gain.TotalGain;
            logTable.ExportGain     += sign * gain.ExportGain;
            logTable.DomesticGain   += sign * gain.DomesticGain;
            logTable.NotLiableGain  += sign * gain.NotLiableGain;

            super();
        }

        commonPrev = gain.data();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>