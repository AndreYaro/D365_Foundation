<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoicePostedBusinessEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Vendor invoice posted business event.
/// </summary>
[BusinessEvents(classStr(VendorInvoicePostedBusinessEventContract), 'AccountsPayable:VendorInvoicePostedBusinessEventName', 'AccountsPayable:VendorInvoicePostedBusinessEventDescription', ModuleAxapta::Vendor)]
public final class VendorInvoicePostedBusinessEvent extends BusinessEventsBase
{
    private SourceDocumentHeaderRecId sourceDocumentHeaderRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSourceDocumentHeaderRecId</Name>
				<Source><![CDATA[
    private SourceDocumentHeaderRecId parmSourceDocumentHeaderRecId(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId = sourceDocumentHeaderRecId)
    {
        sourceDocumentHeaderRecId = _sourceDocumentHeaderRecId;

        return sourceDocumentHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSourceDocumentHeaderRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>VendorInvoicePostedBusinessEvent</c> from a SourceDocumentHeaderRecId.
    /// </summary>
    /// <param name = "_sourceDocumentHeaderRecId"> The A record identifier for the <c>SourceDocumentHeader</c> associated with the invoice.</param>
    /// <returns>A <c>VendorInvoicePostedBusinessEvent</c>.</returns>
    public static VendorInvoicePostedBusinessEvent newFromSourceDocumentHeaderRecId(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId)
    {
        VendorInvoicePostedBusinessEvent businessEvent = new VendorInvoicePostedBusinessEvent();
        businessEvent.parmSourceDocumentHeaderRecId(_sourceDocumentHeaderRecId);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildContract</Name>
				<Source><![CDATA[
    [Wrappable(true), Replaceable(true)]
    public BusinessEventsContract buildContract()
    {
        return VendorInvoicePostedBusinessEventContract::newFromVendInvoiceJour(VendInvoiceJour::findSourceDocumentHeader(sourceDocumentHeaderRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContextRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record context for this event.
    /// </summary>
    /// <returns>The <c>VendInvoiceJour</c> buffer for the record context for this event.</returns>
    public Common getContextRecord()
    {
        return VendInvoiceJour::findSourceDocumentHeader(sourceDocumentHeaderRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentContextRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of parent records for the current context
    /// </summary>
    /// <returns>A Set of <c>VendInvoiceInfoTable</c> records, if they exist.</returns>
    public Set getParentContextRecords()
    {
        Set result = new Set(Types::Record);

        if (sourceDocumentHeaderRecId)
        {
            VendInvoiceInfoTable invoice = VendInvoiceInfoTable::findSourceDocumentHeader(sourceDocumentHeaderRecId);

            if (invoice)
            {
                result.add(invoice);
            }
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>