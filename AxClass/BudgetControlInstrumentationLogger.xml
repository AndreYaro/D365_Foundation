<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlInstrumentationLogger</c> class provides activity contexts for budget control area instrumentation logging.
/// </summary>
internal final class BudgetControlInstrumentationLogger
{
    private SysInstrumentationLogger instrumentationLogger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static BudgetControlInstrumentationLogger createLogger(str _name)
    {
        BudgetControlInstrumentationLogger logger = new BudgetControlInstrumentationLogger();
        logger.instrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(_name);

        return logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext activityContext(SysInstrumentationActivity _activity)
    {
        return instrumentationLogger.activityContextWithCustomProperties(_activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivity activity(str _activityName)
    {
        return SysInstrumentationActivity::construct(_activityName, BudgetControlInstrumentationConstants::InstrumentationNamespace);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWarning</Name>
				<Source><![CDATA[
    internal void logWarning(str _message)
    {
        instrumentationLogger.logWarning(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logError</Name>
				<Source><![CDATA[
    internal void logError(str _message)
    {
        instrumentationLogger.logError(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInformation</Name>
				<Source><![CDATA[
    internal void logInformation(str _message)
    {
        instrumentationLogger.logInformation(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logBucketizedCount</Name>
				<Source><![CDATA[
    internal void logBucketizedCount(SysInstrumentationActivityContext _activityContext, int _count)
    {        
        _activityContext.addCustomProperty(BudgetControlInstrumentationConstants::BucketizedCount, ApplicationCommonInstrumentationMagnitude::log10magnitude(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logBucketizedCountWithTableNameType</Name>
				<Source><![CDATA[
    internal void logBucketizedCountWithTableNameType(SysInstrumentationActivityContext _activityContext, int _count, str _tableName, str _rebuildType)
    {
        _activityContext.addCustomProperty(BudgetControlInstrumentationConstants::TableName, _tableName)
            .addCustomProperty(BudgetControlInstrumentationConstants::BucketizedCount, ApplicationCommonInstrumentationMagnitude::log10magnitude(_count))
            .addCustomProperty(BudgetControlInstrumentationConstants::RebuildType, _rebuildType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logBucketizedCountWithTableName</Name>
				<Source><![CDATA[
    internal void logBucketizedCountWithTableName(SysInstrumentationActivityContext _activityContext, int _count, str _tableName)
    {
        _activityContext.addCustomProperty(BudgetControlInstrumentationConstants::TableName, _tableName)
            .addCustomProperty(BudgetControlInstrumentationConstants::BucketizedCount, ApplicationCommonInstrumentationMagnitude::log10magnitude(_count));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>