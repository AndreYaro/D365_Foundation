<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectsListPageFilterApplier</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Applies additional filters to a provided query, based on the state variables of this class.
/// </summary>
class ProjProjectsListPageFilterApplier
{
    private str stageName;
    private str projectName;
    private str customerName;
    private boolean clearFormsBuiltInStageFilter;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmStageName</Name>
				<Source><![CDATA[
    public str parmStageName(str _stageName = stageName)
    {
        stageName = _stageName;
        return stageName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjectName</Name>
				<Source><![CDATA[
    public str parmProjectName(str _projectName = projectName)
    {
        projectName = _projectName;
        return projectName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerName</Name>
				<Source><![CDATA[
    public str parmCustomerName(str _customerName = customerName)
    {
        customerName = _customerName;
        return customerName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClearFormsBuiltInStageFilter</Name>
				<Source><![CDATA[
    public boolean parmClearFormsBuiltInStageFilter(boolean _clearFormsBuiltInStageFilter = clearFormsBuiltInStageFilter)
    {
        clearFormsBuiltInStageFilter = _clearFormsBuiltInStageFilter;
        return clearFormsBuiltInStageFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>apply</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies additional filters to a provided query, based on the state variables of this class.
    /// </summary>
    /// <param name = "_query">The query to apply the filters to.</param>
    public void apply(Query _query)
    {
        if (_query)
        {

            var dataSourceTable = _query.dataSourceTable(tableNum(ProjTable));
            if (clearFormsBuiltInStageFilter && dataSourceTable)
            {
                SysQuery::findOrCreateRange(dataSourceTable, fieldNum(ProjTable, Status)).value(SysQuery::valueUnlimited());
            }
            
            if (stageName && dataSourceTable)
            {
                SysQuery::findOrCreateRange(dataSourceTable, fieldNum(ProjTable, Status)).value(queryValue(stageName));
            }

            if (projectName && dataSourceTable)
            {
                SysQuery::findOrCreateRange(dataSourceTable, fieldNum(ProjTable, Name)).value(queryValue(projectName));
            }

            dataSourceTable = _query.dataSourceTable(tableNum(DirPartyTable));
            if (customerName && dataSourceTable)
            {
                //Override outer join, as we are filtering on projects for specific customers
                dataSourceTable.joinMode(JoinMode::InnerJoin); 
                SysQuery::findOrCreateRange(dataSourceTable, fieldNum(DirPartyTable, Name)).value(queryValue(customerName));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>