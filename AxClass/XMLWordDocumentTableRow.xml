<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>XMLWordDocumentTableRow</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The table row controller.
/// </summary>
public class XMLWordDocumentTableRow
{
    private System.Collections.SortedList cells;
    private NetDFOXMLWordprocessingTableRowProxy tableRow;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(NetDFOXMLWordprocessingTableRowProxy _tableRow)
    {
        tableRow = _tableRow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the table row controller.
    /// </summary>
    /// <param name = "_tableRow">The table row proxy.</param>
    /// <returns>The table row controller.</returns>
    public static XMLWordDocumentTableRow construct(NetDFOXMLWordprocessingTableRowProxy _tableRow)
    {
        XMLWordDocumentTableRow wordDocumentTableRow = new XMLWordDocumentTableRow(_tableRow);
        wordDocumentTableRow.initializeCells();

        return wordDocumentTableRow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProxy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the proxy.
    /// </summary>
    /// <returns>The proxy.</returns>
    public NetDFOXMLWordprocessingTableRowProxy getProxy()
    {
        return tableRow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clones the row.
    /// </summary>
    /// <returns>The cloned row.</returns>
    public XMLWordDocumentTableRow clone()
    {
        NetDFOXMLWordprocessingTableRowProxy tableRowNew = tableRow.clone() as NetDFOXMLWordprocessingTableRowProxy;
        return new XMLWordDocumentTableRow(tableRowNew);
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remove the row.
    /// </summary>
    public void remove()
    {
        tableRow.remove();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCells</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes cells.
    /// </summary>
    protected void initializeCells()
    {
        cells = new System.Collections.SortedList();

        System.Collections.IEnumerable tableRowEnumerable = tableRow.descendantsTableCell();
        if (tableRowEnumerable != null)
        {
            int idx = 0;
            System.Collections.IEnumerator tableRowEnumerator = tableRowEnumerable.GetEnumerator();
            while (tableRowEnumerator.MoveNext())
            {
                NetDFOXMLWordprocessingTableCellProxy cell = ERCast::asAny(tableRowEnumerator.Current) as NetDFOXMLWordprocessingTableCellProxy;
                if (cell != null)
                {
                    cells.Add(idx, XMLWordDocumentTableCell::construct(cell));
                    idx++;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCell</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cell.
    /// </summary>
    /// <param name = "_index">The cell index.</param>
    /// <returns>The cell.</returns>
    public XMLWordDocumentTableCell getCell(int _index)
    {
        XMLWordDocumentTableCell result = null;

        if (cells.ContainsKey(_index))
        {
            result = ERCast::asAny(cells.GetByIndex(_index)) as XMLWordDocumentTableCell;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanAllCells</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cleans the all values in the all cells.
    /// </summary>
    public void cleanAllCells()
    {
        if (cells.Count > 0)
        {
            for (int idx = 0; idx < cells.Count; idx++)
            {
                XMLWordDocumentTableCell cell = ERCast::asAny(cells.GetByIndex(idx)) as XMLWordDocumentTableCell;
                if (cell != null)
                {
                    cell.clean();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>cells</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the row cells.
    /// </summary>
    /// <returns>Thee row cells.</returns>
    public System.Collections.SortedList cells()
    {
        return cells;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCellValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the cell value.
    /// </summary>
    /// <param name = "_cell">The cell index.</param>
    /// <param name = "_value">The value.</param>
    public void insertCellValue(int _cell, anytype _value)
    {
        XMLWordDocumentTableCell cell = this.getCell(_cell);
        if (cell != null)
        {
            cell.setValue(any2Str(_value));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>