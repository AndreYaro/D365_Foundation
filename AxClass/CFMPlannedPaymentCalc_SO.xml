<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPlannedPaymentCalc_SO</Name>
	<SourceCode>
		<Declaration><![CDATA[
[CFMPlannedPaymentSourceAttribute(tableStr(SalesTable))]
public class CFMPlannedPaymentCalc_SO extends CFMPlannedPaymentCalc
{
    SalesTotals salesTotals;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPaymSched</Name>
				<Source><![CDATA[
    protected CustVendPaymentSched createPaymSched()
    {
        CustVendPaymSched custVendPaymSched = CustVendPaymSched::construct(SysModule::Cust, this.salesTable());
        custVendPaymSched.setSalesTotals(this.salesTotals());
        custVendPaymSched.createPaymSched(PaymSched::find(this.salesTable().PaymentSched));

        return this.findPaymSched();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymSched</Name>
				<Source><![CDATA[
    protected CustVendPaymentSched findPaymSched()
    {
        return CustPaymSched::find(this.salesTable().TableId, this.salesTable().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymSchedLineInstance</Name>
				<Source><![CDATA[
    protected CustVendPaymentSchedLine paymSchedLineInstance()
    {
        CustPaymSchedLine ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>plannedPaymentRequired</Name>
				<Source><![CDATA[
    protected boolean plannedPaymentRequired()
    {
        return this.salesTable().SalesType != SalesType::Journal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    private SalesTable salesTable()
    {
        return source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTotals</Name>
				<Source><![CDATA[
    private SalesTotals salesTotals()
    {
        if (!salesTotals)
        {
            salesTotals = SalesTotals::construct(this.salesTable(), SalesUpdate::All);
            salesTotals.prepareTotalAmountCalculation();
            salesTotals.calc();
        }

        return salesTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sign</Name>
				<Source><![CDATA[
    protected Sign sign()
    {
        return -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceAccountNum</Name>
				<Source><![CDATA[
    protected CFMAccountNum sourceAccountNum()
    {
        return this.salesTable().CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceAccountType</Name>
				<Source><![CDATA[
    protected CFMAccountType sourceAccountType()
    {
        return CFMAccountType::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode sourceCurrencyCode()
    {
        return this.salesTable().CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDataAreaId</Name>
				<Source><![CDATA[
    protected DataAreaId sourceDataAreaId()
    {
        return this.salesTable().dataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDiscAmount</Name>
				<Source><![CDATA[
    protected DiscAmount sourceDiscAmount()
    {
        return this.salesTotals().totalCashDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDiscDate</Name>
				<Source><![CDATA[
    protected DiscDate sourceDiscDate()
    {
        return this.salesTotals().cashDiscDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDueAmount</Name>
				<Source><![CDATA[
    protected AmountCur sourceDueAmount()
    {
        return this.salesTotals().totalAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDueDate</Name>
				<Source><![CDATA[
    protected DueDate sourceDueDate()
    {
        DueDate dueDate;

        if (this.salesTable().FixedDueDate)
        {
            dueDate = this.salesTable().FixedDueDate;
        }
        else
        {
            dueDate = this.salesTable().ShippingDateRequested ?
                this.salesTable().ShippingDateRequested :
                this.salesTable().ShippingDateConfirmed;

            if (!dueDate)
            {
                dueDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            }

            if (dueDate && this.salesTable().Payment)
            {
                dueDate = PaymTerm::advanceDate(this.salesTable().Payment, dueDate);
            }
        }

        if (!dueDate || dueDate < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
        {
            dueDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }

        return dueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceInvoiceAccountNum</Name>
				<Source><![CDATA[
    protected CFMAccountNum sourceInvoiceAccountNum()
    {
        return this.salesTable().InvoiceAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourcePaymMode</Name>
				<Source><![CDATA[
    protected PaymMode sourcePaymMode()
    {
        return this.salesTable().PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourcePaymModeType</Name>
				<Source><![CDATA[
    protected CustVendACType sourcePaymModeType()
    {
        return CustVendACType::Cust;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourcePaymTerm</Name>
				<Source><![CDATA[
    protected PaymTermId sourcePaymTerm()
    {
        return this.salesTable().Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceType</Name>
				<Source><![CDATA[
    protected CFMPlannedPaymentSourceType sourceType()
    {
        return CFMPlannedPaymentSourceType::SalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>usePaymentSchedule</Name>
				<Source><![CDATA[
    protected boolean usePaymentSchedule()
    {
        return this.salesTable().PaymentSched != "";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>