<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMCalcProd_PmfCoByProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>BOMCalcProd_PmfCoByProduct</c> is responsible for the calculation of production cost for co- and byproducts.
/// </summary>
class BOMCalcProd_PmfCoByProduct extends BOMCalcProd
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newCoByProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>BOMCalcProd_PmfCoByProduct</c> class.
    /// </summary>
    /// <param name="_prodCoBy">
    /// The <c>PmfProdCoBy</c> record used to run the calculation.
    /// </param>
    /// <param name="_profitSet">
    /// A profit setting used to calculate the price.
    /// </param>
    /// <param name="_calcDate">
    /// Date the calculation is being generated.
    /// </param>
    /// <param name="_calcReferences">
    /// true if references should be calculated; otherwise, false.
    /// </param>
    /// <param name="_showProgress">
    /// true if a progress bar should be shown during calculation run; otherwise, false.
    /// </param>
    /// <returns>
    /// The concrete instance of the <c>BOMCalcProd_PmfCoByProduct</c> class.
    /// </returns>
    public static BOMCalcProd_PmfCoByProduct newCoByProduct(
        PmfProdCoBy   _prodCoBy,
        CostProfitSet _profitSet      = ProdParameters::find().ProfitSet,
        TransDate     _calcDate       = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        NoYes         _calcReferences = NoYes::Yes,
        boolean       _showProgress   = false)
    {
        return BOMCalcProd_PmfCoByProduct::newCoByProductFromPmfProdCoBy(_prodCoBy, _profitSet, _calcDate, _calcReferences, _showProgress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCoByProductFromPmfProdCoBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>BOMCalcProd_PmfCoByProduct</c> class.
    /// </summary>
    /// <param name="_prodCoBy">
    /// The <c>PmfProdCoBy</c> record used to run the calculation.
    /// </param>
    /// <param name="_profitSet">
    /// A profit setting used to calculate the price.
    /// </param>
    /// <param name="_calcDate">
    /// Date the calculation is being generated.
    /// </param>
    /// <param name="_calcReferences">
    /// true if references should be calculated; otherwise, false.
    /// </param>
    /// <param name="_showProgress">
    /// true if a progress bar should be shown during calculation run; otherwise, false.
    /// </param>
    /// <returns>
    /// The concrete instance of the <c>BOMCalcProd_PmfCoByProduct</c> class.
    /// </returns>
    [Replaceable]
    protected static BOMCalcProd_PmfCoByProduct newCoByProductFromPmfProdCoBy(
        PmfProdCoBy   _prodCoBy,
        CostProfitSet _profitSet,      
        TransDate     _calcDate,
        NoYes         _calcReferences,
        boolean       _showProgress)
    {
        switch (_prodCoBy.ProductType)
        {
            case PmfProductType::Co_Product:
                return BOMCalcProd_PmfCoProduct::newCoProduct(
                                                    _prodCoBy,
                                                    _profitSet,
                                                    _calcDate,
                                                    _calcReferences,
                                                    _showProgress);

            case PmfProductType::By_Product:
                return BOMCalcProd_PmfByProduct::newByProduct(
                                                    _prodCoBy,
                                                    _profitSet,
                                                    _calcDate,
                                                    _calcReferences,
                                                    _showProgress);
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>