<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CalcUnpostedTaxes_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
//Russian taxes calculation - unposted taxes
class CalcUnpostedTaxes_RU    extends CalcTaxes_RU
{
    TmpTaxWorkTrans    tmpTaxWorkTrans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
        public void calc()
    {
        TaxTable taxTable;
        ;

        this.clearResults();

        while (tmpTaxWorkTrans)
        {
            taxTable = TaxTable::find(tmpTaxWorkTrans.TaxCode);

            switch (taxTable.TaxType_W)
            {
                case TaxType_W::VAT :
                    tax_VAT20        += tmpTaxWorkTrans.TaxAmount;
                    taxBase_VAT20    += tmpTaxWorkTrans.TaxBaseAmount;
                    taxCur_VAT20     += tmpTaxWorkTrans.transactionCurrencyTaxAmount();
                    taxBaseCur_VAT20 += tmpTaxWorkTrans.taxBaseCur_W();
                    taxValue_VAT     += TaxData::percent(taxTable.TaxCode, tmpTaxWorkTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATFull.add(taxTable.TaxCode);
                    break;

                case TaxType_W::VATReduced :
                    tax_VAT10        += tmpTaxWorkTrans.TaxAmount;
                    taxBase_VAT10    += tmpTaxWorkTrans.TaxBaseAmount;
                    taxCur_VAT10     += tmpTaxWorkTrans.transactionCurrencyTaxAmount();
                    taxBaseCur_VAT10 += tmpTaxWorkTrans.taxBaseCur_W();
                    taxValue_VAT     += TaxData::percent(taxTable.TaxCode, tmpTaxWorkTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATReduced.add(taxTable.TaxCode);
                    break;

                case TaxType_W::VATZero :
                    tax_VAT0         += tmpTaxWorkTrans.TaxAmount;
                    taxbase_VAT0     += tmpTaxWorkTrans.TaxBaseAmount;
                    taxCur_VAT0      += tmpTaxWorkTrans.transactionCurrencyTaxAmount();
                    taxbaseCur_VAT0  += tmpTaxWorkTrans.taxBaseCur_W();
                    taxValue_VAT     += TaxData::percent(taxTable.TaxCode, tmpTaxWorkTrans.TransDate, taxTable.TaxBase);
                    taxCodes_VATZero.add(taxTable.TaxCode);
                    break;

                case TaxType_W::Excise :
                    tax_Excise       += tmpTaxWorkTrans.TaxAmount;
                    taxBase_Excise   += tmpTaxWorkTrans.TaxBaseAmount;
                    taxCur_Excise    += tmpTaxWorkTrans.transactionCurrencyTaxAmount();
                    taxBaseCur_Excise+= tmpTaxWorkTrans.taxBaseCur_W();
                    taxValue_Excise  += TaxData::percent(taxTable.TaxCode, tmpTaxWorkTrans.TransDate, taxTable.TaxBase);
                    break;

                default :
                    tax_Other        += tmpTaxWorkTrans.TaxAmount;
                    taxBase_Other    += tmpTaxWorkTrans.TaxBaseAmount;
                    taxCur_Other     += tmpTaxWorkTrans.transactionCurrencyTaxAmount();
                    taxBaseCur_Other += tmpTaxWorkTrans.taxBaseCur_W();
            }
            next tmpTaxWorkTrans;
        }

        if (taxBase_SalesTax != 0 )
        {
            totalValue_SalesTax = abs(tax_SalesTax / taxBase_SalesTax);
        }
        else
        {
            totalValue_SalesTax = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        ;
        tmpTaxWorkTrans = _tmpTaxWorkTrans;
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>