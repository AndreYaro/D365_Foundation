<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OXMLExcelReport_TurnoverBond_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class prints Turnover sheet with correspondence report to excel.
/// </summary>
class OXMLExcelReport_TurnoverBond_RU extends OXMLExcelReport_LedgerSheetAccount_RU implements BatchRetryable, ERIReportPostProcessingSupported
{
    protected const int value2 = 2;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>firstNumCol</Name>
				<Source><![CDATA[
    protected int firstNumCol()
    {
        return  value2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
    public void setParameters(FormListControl         _formListControl,
                              RLedgerSheetEngine      _rLedgerSheetEngine,
                              TempStr                 _reportTitle           = '',
                              TempStr                 _reportCaption         = '',
                              container               _conRepeatableColumn   = [0],
                              container               _conNotPrintColumn     = connull(),
                              Object                  _paramIntoReport       = null)
    {
        RLedgerSheetEngine_TurnoverBond  turnoverBond = _rLedgerSheetEngine;

        turnoverBond.parmFormListControl(_formListControl);

        if (!turnoverBond)
            throw error(Error::wrongUseOfFunction(funcname()));

        super(_formListControl, _rLedgerSheetEngine, turnoverBond.formDesignCaption(0), turnoverBond.formDesignCaption(0), [0], conNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns name of report template.
    /// </summary>
    /// <returns>
    /// Name of report template.
    /// </returns>
    protected Filename templateName()
    {
        return resourceStr(RLedger_TurnoverBond);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report file.
    /// </summary>
    /// <returns>
    /// The name of the report file.
    /// </returns>
    public str getReportFileName()
    {
        return this.excelFileName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report.
    /// </summary>
    /// <returns>
    /// Name of the report.
    /// </returns>
    public str getReportName()
    {
        return 'TurnoverBond';
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static OXMLExcelReport_TurnoverBond_RU construct()
    {
        return new OXMLExcelReport_TurnoverBond_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>