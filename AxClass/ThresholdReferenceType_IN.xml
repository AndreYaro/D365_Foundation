<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ThresholdReferenceType_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>ThresholdReferenceType_IN</c> class is operation class of table <c>ThresholdReference_IN</c>.
/// </summary>
class ThresholdReferenceType_IN
{
    ThresholdReference_IN      thresholdReference;
    ThresholdReferenceMap_IN   thresholdReferenceMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getThresholdReferenceMap</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets <c>ThresholdReferenceMap_IN</c>.
    /// </summary>
    /// <returns>
    ///     Returns <c>ThresholdReferenceMap_IN</c>.
    /// </returns>
    public ThresholdReferenceMap_IN getThresholdReferenceMap()
    {
        return thresholdReferenceMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inits <c>ThresholdReferenceType_IN</c> instance.
    /// </summary>
    /// <param name="_thresholdReference">
    ///     The <c>ThresholdReference_IN</c>.
    /// </param>
    public void init(ThresholdReference_IN _thresholdReference = thresholdReference)
    {
        this.parmThresholdReference(_thresholdReference);
        this.initThresholdReferenceMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initThresholdReferenceMap</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes <c>ThresholdReferenceMap_IN</c>.
    /// </summary>
    private void initThresholdReferenceMap()
    {
        DictTable dictTable;

        if (thresholdReference.ReferenceTableId)
        {
            dictTable = new DictTable (thresholdReference.ReferenceTableId);

            if (dictTable)
            {
                thresholdReferenceMap = dictTable.makeRecord();

                select firstOnly thresholdReferenceMap
                    where thresholdReferenceMap.RecId == thresholdReference.ReferenceRecId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmThresholdReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets and gets <c>ThresholdReference_IN</c>.
    /// </summary>
    /// <param name="_thresholdReference">
    ///     The <c>ThresholdReference_IN</c>.
    /// </param>
    /// <returns>
    ///     Returns <c>ThresholdReference_IN</c>.
    /// </returns>
    public ThresholdReference_IN parmThresholdReference(ThresholdReference_IN _thresholdReference = thresholdReference)
    {
        thresholdReference = _thresholdReference;
        return thresholdReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs a <c>ThresholdReferenceType_IN</c> instance.
    /// </summary>
    /// <param name="_thresholdReference">
    ///     The <c>ThresholdReference_IN</c>.
    /// </param>
    /// <returns>
    ///     returns a <c>ThresholdReferenceType_IN</c> instance.
    /// </returns>
    public static ThresholdReferenceType_IN construct(ThresholdReference_IN _thresholdReference)
    {
        ThresholdReferenceType_IN thresholdReferenceType;

        thresholdReferenceType = new ThresholdReferenceType_IN();
        thresholdReferenceType.init(_thresholdReference);
        return thresholdReferenceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createThresholdReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a <c>ThresholdReference_IN</c>.
    /// </summary>
    /// <param name="_thresholdRefTableId">
    ///     The source reference tableId of which the reference to be created.
    /// </param>
    /// <param name="_thresholdRefRecId">
    ///     The source reference recId of which the reference to be created.
    /// </param>
    /// <param name="_thresholdRecId">
    ///     The threhold recid of which the reference to be created.
    /// </param>
    static public void createThresholdReference(RefTableId _thresholdRefTableId, RefRecId _thresholdRefRecId, ThresholdRecId_IN _thresholdRecId)
    {
        ThresholdReference_IN  thresholdReference;
        ttsBegin;
        thresholdReference.ReferenceTableId = _thresholdRefTableId;
        thresholdReference.ReferenceRecId   = _thresholdRefRecId;
        thresholdReference.Threshold        = _thresholdRecId;
        thresholdReference.insert();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Deletes <c>ThresholdReference_IN</c> by the tableid and recId of the source reference.
    /// </summary>
    /// <param name="_thresholdRefTableId">
    ///     The tableid of the source reference.
    /// </param>
    /// <param name="_thresholdRefRecId">
    ///     The recId of the source reference.
    /// </param>
    static public void deleteByReference(RefTableId _thresholdRefTableId, RefRecId _thresholdRefRecId)
    {
        ThresholdReference_IN  thresholdReference;
        ttsBegin;
        delete_from thresholdReference
            where thresholdReference.ReferenceTableId   == _thresholdRefTableId
                && thresholdReference.ReferenceRecId    == _thresholdRefRecId;
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByThreshold</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Delete <c>ThresholdReference_IN</c> by threshold recId.
    /// </summary>
    /// <param name="_thresholdRecId">
    ///     The threhold recid of which the reference to be deleted.
    /// </param>
    static public void deleteByThreshold(ThresholdRecId_IN _thresholdRecId)
    {
        ThresholdReference_IN  thresholdReference;
        ttsBegin;
        delete_from thresholdReference
            where thresholdReference.Threshold   == _thresholdRecId;
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>