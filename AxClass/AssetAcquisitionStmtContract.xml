<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAcquisitionStmtContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetAcquisitionStmtContract</c> class is the data contract for the <c>AssetAcquisitionStatement</c> SSRS report.
/// </summary>
[DataContractAttribute]
public class AssetAcquisitionStmtContract implements SysOperationValidatable
{
    DocumentNum documentNumber;
    DocumentDate documentDate;

    // not displayed on the dialog
    DirPartyName companyName;
    LogisticsAddressing companyAddress;
    CompanyRegNum companyRoutingNumber;
    CompanyCoRegNum companyTaxRegistrationNumber;
    BankAccount companyBankAccountNumber;
    Name companyBankName;
    BankRegNum companyBankRoutingNumber;
    FreeText documentDateLongFormat;
    FreeText reportTitle;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDocumentDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(DocumentDate)),
        SysOperationLabelAttribute(literalStr("@SYS2587")),
        SysOperationHelpTextAttribute(literalStr("@GLS220892")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public DocumentDate parmDocumentDate(DocumentDate _documentDate = documentDate)
    {
        documentDate = _documentDate;

        return documentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentNumber</Name>
				<Source><![CDATA[

    [
        DataMemberAttribute(identifierStr(DocumentNumber)),
        SysOperationLabelAttribute(literalStr("@SYS8434")),
        SysOperationHelpTextAttribute(literalStr("@GLS220893")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public DocumentNum parmDocumentNumber(DocumentNum _documentNumber = documentNumber)
    {
        documentNumber = _documentNumber;
        return documentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyAddress</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyAddress))]
    public LogisticsAddressing parmHiddenCompanyAddress(LogisticsAddressing _companyAddress = companyAddress)
    {
        companyAddress = _companyAddress;

        return companyAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyBankAccountNumber</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyBankAccountNumber))]
    public BankAccount parmHiddenCompanyBankAccountNumber(BankAccount _companyBankAccountNumber = companyBankAccountNumber)
    {
        companyBankAccountNumber = _companyBankAccountNumber;

        return companyBankAccountNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyBankName</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyBankName))]
    public Name parmHiddenCompanyBankName(Name _companyBankName = companyBankName)
    {
        companyBankName = _companyBankName;

        return companyBankName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyBankRoutingNumber</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyBankRoutingNumber))]
    public BankRegNum parmHiddenCompanyBankRoutingNumber(BankRegNum _companyBankRoutingNumber = companyBankRoutingNumber)
    {
        companyBankRoutingNumber = _companyBankRoutingNumber;

        return companyBankRoutingNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyName</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyNameLong))]
    public DirPartyName parmHiddenCompanyName(DirPartyName _companyName = companyName)
    {
        companyName = _companyName;

        return companyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyRoutingNumber</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyRoutingNumber))]
    public CompanyRegNum parmHiddenCompanyRoutingNumber(CompanyRegNum _companyRoutingNumber = companyRoutingNumber)
    {
        companyRoutingNumber = _companyRoutingNumber;

        return companyRoutingNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenCompanyTaxRegistrationNum</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(CompanyTaxRegistrationNumber))]
    public CompanyCoRegNum parmHiddenCompanyTaxRegistrationNum(CompanyCoRegNum _companyTaxRegistrationNumber = companyTaxRegistrationNumber)
    {
        companyTaxRegistrationNumber = _companyTaxRegistrationNumber;

        return companyTaxRegistrationNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenDocumentDateLongFormat</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(DocumentDateLongFormat))]
    public FreeText parmHiddenDocumentDateLongFormat(FreeText _documentDateLongFormat = documentDateLongFormat)
    {
        documentDateLongFormat = _documentDateLongFormat;

        return documentDateLongFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHiddenReportTitle</Name>
				<Source><![CDATA[

    // not displayed on the dialog
    [DataMemberAttribute(identifierStr(ReportTitle))]
    public FreeText parmHiddenReportTitle(FreeText _reportTitle = reportTitle)
    {
        reportTitle = _reportTitle;

        return reportTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[

    /// <summary>
    /// Indicates whether the contract is valid.
    /// </summary>
    /// <returns>
    /// A Boolean value that indicates whether the contract is valid.
    /// </returns>
    public boolean validate()
    {
        boolean isValid;

        #IsoCountryRegionCodes

        isValid = true;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
        {
            if (isValid && documentNumber == '')
            {
                isValid = checkFailed("@GLS220577");
            }

            if (isValid && documentDate == dateNull())
            {
                isValid = checkFailed("@GLS110109");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>