<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSCommProxy</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TMSCommProxy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sendRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sends an xml string to the transportation managed code for processing and receives a reponse xml in return.
    /// </summary>
    /// <param name="_xml">
    /// Xml to be processed by the transportation managed code.
    /// </param>
    /// <returns>
    /// Processed xml in response to the request.
    /// </returns>
    public str sendRequest(XML _xml)
    {
        str                 ret;
        System.Exception    ex;

        try
        {
            TMSFwkProcessXMLService processXMLService = TMSFwkProcessXMLService::construct();
            ret = processXMLService.execute(_xml);
        }
        catch (Exception::CLRError)
        {
            ex = ClrInterop::getLastException();

            if (ex != null)
            {
                ApplicationUnhandledExceptionLogger::logCLRException(ex);
                ex = ex.get_InnerException();
            }
        }
        catch (Exception::Internal)
        {
            ex = ClrInterop::getLastException();

            if (ex != null)
            {
                ApplicationUnhandledExceptionLogger::logCLRException(ex);
                ex = ex.get_InnerException();
            }
        }

        if (ex != null)
        {
            TMSErrorLog::createLogEntry(ex);
            throw error(strFmt("@SYS26868", "@TRX2497", ex.StackTrace));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>language</Name>
				<Source><![CDATA[
    public static LanguageId language()
    {
        xInfo   xinfo = new xInfo();
        return xInfo.language();
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitInvoiceApproval</Name>
				<Source><![CDATA[
    public static WorkflowCorrelationId submitInvoiceApproval(RecId                _recId,
                                                              WorkflowComment      _note = '',
                                                              boolean              _userSubmited = false)
    {
        WorkflowCorrelationId   workflowCorrelationId;
        TMSInvoiceTable         invoiceTable            = TMSInvoiceTable::findByRecId(_recId, true);
        WorkflowType            workflowType            = new WorkflowType();

        workflowType = workflowType::newType(workFlowTypeStr(TMSInvoiceApproval));

        ttsbegin;

        if (_userSubmited)
        {
            workflowCorrelationId = Workflow::activateFromWorkflowType(workflowType.parmTypeName(),
                                                                       _recId,
                                                                       _note,
                                                                       NoYes::No);
        }

        else
        {
            workflowCorrelationId = Workflow::activateFromWorkflowType(workflowType.parmTypeName(),
                                                                       _recId,
                                                                       _note,
                                                                       NoYes::No,
                                                                       TMSParameters::find().WorkflowUser);
        }

        info("@TRX1226");

        invoiceTable.InvoiceStatus = TMSInvoiceStatus::Pending;
        invoiceTable.update();

        ttscommit;

        return workflowCorrelationId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>