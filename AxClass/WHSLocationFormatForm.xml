<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationFormatForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSLocationFormatForm</c> class contains the business logic of the <c>WHSLocationFormat</c> form.
/// </summary>
public class WHSLocationFormatForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setExampleText</Name>
				<Source><![CDATA[
	/// <summary>
	/// Creates an example location id from a location format.
	/// </summary>
	/// <param name="_whsLocationFormat">
	/// Location format to be used to create example location id.
	/// </param>
	/// <param name="_locationLength">
	/// Maximum location id length.
	/// </param>
	/// <returns>
	/// An example location id formatted as defined in <c>WHSLocationFormat</c> record.
	/// </returns>
    public str setExampleText(WHSLocationFormat _whsLocationFormat, int _locationLength)
    {
        WHSLocationFormatLine   line;
        str                     s;
        int                     i;
        int                     length;

        while select SegmentLength, SegmentSeparator from line
            where line.LocFormatId == _whsLocationFormat.LocFormatId
        {
            for (i = 1; i <= line.SegmentLength; ++i)
            {
                ++length;

                if (length > _locationLength)
                {
                    break;
                }

                s += '0';
            }

            if (line.SegmentSeparator)
            {
                ++length;
            }

            if (length > _locationLength)
            {
                break;
            }

            s += line.SegmentSeparator;
        }

        if (length > _locationLength)
        {
            length = this.getFormatLength(_whsLocationFormat.LocFormatId);

            warning(strFmt("@WAX2363", length - _locationLength, _locationLength));
        }

        return s;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates location format length.
    /// </summary>
    /// <param name="_locFormatId">Location format Id.</param>
    /// <returns>Location format length.</returns>
    private int getFormatLength(WHSLocFormatId _locFormatId)
    {
        WHSLocationFormatLine locationFormatLine;
        int length;

        while select SegmentLength, SegmentSeparator from locationFormatLine
            where locationFormatLine.LocFormatId == _locFormatId
        {
            length += locationFormatLine.SegmentLength;

            if (locationFormatLine.SegmentSeparator)
            {
                ++length;
            }
        }

        return length;
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsLocationFormatLine_initValue</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds the next line number to be set to a location format line.
	/// </summary>
	/// <param name="_whsLocationFormatLine">
	/// Location format line.
	/// </param>
	/// <returns>
	/// The next line number to be set to a location format line.
	/// </returns>
    public LineNum whsLocationFormatLine_initValue(WHSLocationFormatLine  _whsLocationFormatLine)
    {
        WHSLocationFormatLine   formatLine;

        select firstonly LineNum from formatLine
            order by formatLine.LineNum desc
            where formatLine.LocFormatId == _whsLocationFormatLine.LocFormatId;

        return formatLine.LineNum + 1;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>