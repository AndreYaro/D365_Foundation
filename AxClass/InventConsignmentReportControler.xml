<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventConsignmentReportControler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ConsignmentReportControler</c> class is the helper class for the associated SRS Report.
/// </summary>
public class InventConsignmentReportControler extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the query values to the dialog.
    /// </summary>
    /// <param name="parameterName">
    /// The name of the query parameter in the data contract.
    /// </param>
    /// <returns>
    /// true if query values are to be shown otherwise false.
    /// </returns>
    /// <remarks>
    /// Used by the query UI builder.
    /// </remarks>
    public boolean showQueryValues(str parameterName)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initailzes the controller, sets the print management, assigns parameter values and runs the SRS report.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public static void main(Args _args)
    {
        const str FeatureReference = 'HU-00009';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        InventConsignmentReportControler controller = new InventConsignmentReportControler();

        controller.parmReportName(ssrsReportStr(InventConsignmentReport, Report));
        controller.parmArgs(_args);
        controller.parmDialogCaption("@GLS112633");
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>