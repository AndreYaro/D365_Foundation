<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTableChangeProposalWorkflowApprovalResubmitActionMgr</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustTableChangeProposalWorkflowApprovalResubmitActionMgr</c> menu item action event handler.
/// </summary>
public class CustTableChangeProposalWorkflowApprovalResubmitActionMgr 
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
	{
		//  Runs after the items are resubmitted.
        recID recID = _args.record().RecId;
        CustTable cust = _args.record();
        WorkflowWorkItemTable workItem = _args.caller().getActiveWorkflowWorkItem();
        if (workItem)
        {
            try
            {
                WorkflowWorkItemActionDialog dialog = WorkflowWorkItemActionDialog::construct(
                    workItem,
                    WorkflowWorkItemActionType::Resubmit,
                    new MenuFunction(_args.menuItemName(),_args.menuItemType()));
                dialog.run();

                if (dialog.parmIsClosedOK())
                {
                    workItem = _args.caller().getActiveWorkflowWorkItem();
                    WorkflowWorkItemActionManager::dispatchWorkItemAction(
                        workItem,
                        dialog.parmWorkflowComment(),
                        dialog.parmTargetUser(),
                        WorkflowWorkItemActionType::Resubmit,
                        _args.menuItemName());

                    ttsbegin;
                    CustTable::updateWorkflowState(recId, CustTableChangeProposalWorkflowState::Submitted);
                    info("@AccountsReceivable:CustTableChangeProposalWorkflow_InfoResubmitted");
                    ttscommit;
                }
            }
            catch(exception::Error)
            {
                info("@AccountsReceivable:CustTableChangeProposalWorkflow_ErrorOnResubmit");
            }
        }

        // make sure changes in status are reflected on the caller
        FormDataSource callerDS;
        callerDS = _args.record().dataSource();
        callerDS.reread();
        callerDS.refresh();
        _args.caller().updateWorkflowControls();
	}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>