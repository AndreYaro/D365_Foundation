<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsCustomLabelPrintCommandGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
public final class WhsCustomLabelPrintCommandGenerator extends WhsLabelPrintCommandGenerator
{
    public static boolean IsParameterSupportEnabled = WhsCustomLabelsParametersFlight::instance().isEnabled();
    public static const str LabelLayoutDataSourceParametersName = 'dsparams';

    private RefRecId rootDataSourceRecId;
    private Map labelLayoutDataSourceParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>withRootDataSourceRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected WhsCustomLabelPrintCommandGenerator withRootDataSourceRecId(RefRecId _rootDataSourceRecId)
    {
        rootDataSourceRecId = _rootDataSourceRecId;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>withLabelLayoutDataSourceParameters</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WhsCustomLabelPrintCommandGenerator withLabelLayoutDataSourceParameters(Map _labelLayoutDataSourceParameters)
    {
        labelLayoutDataSourceParameters = _labelLayoutDataSourceParameters;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printLabelsForRecord</Name>
				<Source><![CDATA[
    [Replaceable]
    public static int printLabelsForRecord(WHSLabelLayout _labelLayout, WHSPrinterName _printer, RefRecId _rootDataSourceRecId)
    {
        var generator = WhsCustomLabelPrintCommandGenerator::newFromParameters(_labelLayout, _printer, _rootDataSourceRecId);                            
        return generator.printLabels();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WhsCustomLabelPrintCommandGenerator newFromParameters(WHSLabelLayout _labelLayout, WHSPrinterName _printer, RefRecId _rootDataSourceRecId)
    {
        return new WhsCustomLabelPrintCommandGenerator()
            .withRootDataSourceRecId(_rootDataSourceRecId)
            .withLabelLayout(_labelLayout)
            .withPrinter(_printer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureTranslator</Name>
				<Source><![CDATA[
    protected void configureTranslator(WhsDocumentRoutingTranslator _translator)
    {
        if (labelLayoutDataSourceParameters && IsParameterSupportEnabled)
        {
            _translator.withParameterMap(labelLayoutDataSourceParameters, LabelLayoutDataSourceParametersName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureTranslatorForDefaultDataSource</Name>
				<Source><![CDATA[
    protected void configureTranslatorForDefaultDataSource(WhsDocumentRoutingTranslator _translator)
    {
        throw Error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureQuery</Name>
				<Source><![CDATA[
    protected void configureQuery(Query _query)
    {
        const FieldId RecIdFieldId = 65534; // Platform defined FieldId for RecId field (see Query/Constants.cs in Platform for example)
        
        _query.dataSourceNo(1)
              .addRange(RecIdFieldId)
              .value(queryValue(rootDataSourceRecId));

        this.validateCustomLabelDSQueryForLabelLayout(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCustomLabelDSQueryForLabelLayout</Name>
				<Source><![CDATA[
    private void validateCustomLabelDSQueryForLabelLayout(Query _query)
    {
        WHSLabelLayoutDataSource labelLayoutDataSource = WHSLabelLayoutDataSource::find(labelLayout.LabelLayoutDataSource);

        if (DictTable::construct(labelLayoutDataSource.CustomLabelRootDataSourceTable).id() != _query.dataSourceNo(1).table())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>