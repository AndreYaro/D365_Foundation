<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SigbomRouteVersionActivateProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SIGBOMRouteVersionActivateProcedure</c> class is the base class for the BOM version and
///    route version signature procedure.
/// </summary>
abstract class SigbomRouteVersionActivateProcedure extends SIGProcedureProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether to include the signature requirements in the setup.
    /// </summary>
    /// <returns>
    ///   Always returns true.
    /// </returns>
    public boolean setupAllowed()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>signatureRequired</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether the signature for this procedure is required.
    /// </summary>
    /// <returns>
    ///   True if the built-in signature requirement is enabled or one of the fields requires a signature; otherwise, false.
    /// </returns>
    public boolean signatureRequired()
    {
        classId classId = classidget(this);
        boolean ret = SIGProcSetup::classIdEnabled(classId)
                      || SIGProcSetupField::classIdFieldsEnabled(classId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCommon</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Creates a new signature procedure based on the specified record.
    /// </summary>
    /// <param name="_common">
    ///   The record for which to create the procedure.
    /// </param>
    /// <returns>
    ///   A signature procedure if the record is either a BOM version or a route version.
    /// </returns>
    public static SIGBOMRouteVersionActivateProcedure newCommon(Common _common)
    {
        SIGBOMRouteVersionActivateProcedure procedure;
        switch (_common.TableId)
        {
            case tablenum(BOMVersion):
                procedure = SIGBOMVersionActivateProcedure::newBOMVersion(_common);
                break;
            case tablenum(RouteVersion):
                procedure = SIGRouteVersionActivateProcedure::newRouteVersion(_common);
                break;
        }

        return procedure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>