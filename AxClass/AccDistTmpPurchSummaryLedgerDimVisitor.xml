<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistTmpPurchSummaryLedgerDimVisitor</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AccDistTmpPurchSummaryLedgerDimVisitor implements SourceDocumentAmountLedgerDimIVisitor
{
    AccountingDistributionTmpPurchSummary   accountingDistributionTmpPurchSummary;
    PurchId                                 purchId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialze</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the instance variables.
    /// </summary>
    /// <param name="_accountingDistributionTmpPurchSummary">
    /// The <c>AccountingDistributionTmpPurchSummary</c> temporary table.
    /// </param>
    /// <param name="_purchId">
    /// The purchase order ID.
    /// </param>

    protected void initialze(
        AccountingDistributionTmpPurchSummary   _accountingDistributionTmpPurchSummary,
        PurchId                                 _purchId
        )
    {
        accountingDistributionTmpPurchSummary = _accountingDistributionTmpPurchSummary;
        purchId                               = _purchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionVisited</Name>
				<Source><![CDATA[
    public void ledgerDimensionVisited(
        SourceDocumentLineRecId _sourceDocumentLineRecId,
        LedgerDimensionAccount  _ledgerDimension,
        Amount                  _distributed,
        Amount                  _journalized,
        Amount                  _relieved,
        Amount                  _balance,
        Amount                  _encumbered = 0
        )
    {
        accountingDistributionTmpPurchSummary.EncumberedAmount += _encumbered;
        accountingDistributionTmpPurchSummary.RelievedAmount   += _relieved;
        accountingDistributionTmpPurchSummary.RemainingAmount  += _balance;

        accountingDistributionTmpPurchSummary.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionVisiting</Name>
				<Source><![CDATA[
    public void ledgerDimensionVisiting(
        SourceDocumentLineRecId _sourceDocumentLineRecId,
        LedgerDimensionAccount  _ledgerDimension
        )
    {
        select forupdate accountingDistributionTmpPurchSummary
            where accountingDistributionTmpPurchSummary.LedgerDimension == _ledgerDimension;

        if (!accountingDistributionTmpPurchSummary)
        {
            accountingDistributionTmpPurchSummary.LedgerDimension = _ledgerDimension;
            accountingDistributionTmpPurchSummary.PurchIdBase = purchId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static AccDistTmpPurchSummaryLedgerDimVisitor construct()
    {
        return new AccDistTmpPurchSummaryLedgerDimVisitor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create an <c>AccDistTmpPurchSummaryLedgerDimVisitor</c> record for a purchase order.
    /// </summary>
    /// <param name="_accountingDistributionTmpPurchSummary">
    /// An <c>AccountingDistributionTmpPurchSummary</c> temporary table.
    /// </param>
    /// <param name="_purchId">
    /// The purchase order ID.
    /// </param>
    /// <returns>
    /// A record in the <c>AccDistTmpPurchSummaryLedgerDimVisitor</c> table.
    /// </returns>

    public static AccDistTmpPurchSummaryLedgerDimVisitor newFromParameters(
        AccountingDistributionTmpPurchSummary   _accountingDistributionTmpPurchSummary,
        PurchId                                 _purchId
        )
    {
        AccDistTmpPurchSummaryLedgerDimVisitor    ledgerDimensionVisitor;

        if (!_purchId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ledgerDimensionVisitor = AccDistTmpPurchSummaryLedgerDimVisitor::construct();
        ledgerDimensionVisitor.initialze(_accountingDistributionTmpPurchSummary, _purchId);

        return ledgerDimensionVisitor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doUseEncumberedAmount</Name>
				<Source><![CDATA[
    public boolean doUseEncumberedAmount()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>