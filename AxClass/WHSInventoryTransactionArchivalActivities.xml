<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventoryTransactionArchivalActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for inventory transaction archival instrumentation logging.
/// </summary>
internal final class WHSInventoryTransactionArchivalActivities
{
    private const str ActivityNamePrefix = 'WHSInventoryTransactionArchival.';

    public const str WHSInventoryTransactionAddWorkToArchivalQueue = 'AddWorkToArchivalQueue';
    public const str WHSInventoryTransactionExecuteArchival = 'ExecuteArchival';
    public const str WHSInventoryTransactionArchiveForCompany = 'ArchiveForCompany';
    public const str WHSInventoryTransactionArchiveTransactionsBundle = 'ArchiveTransactionsBundle';
    public const str WHSInventoryTransactionDeleteUnreferencedItemSets = 'DeleteUnreferencedItemSets';

    // Custom properties
    private const str CustomPropertyNumberOfArchivedReferenceCategories = 'NumberOfArchivedReferenceCategories';
    private const str CustomPropertyNumberOfRowsInsertedInWHSInventoryTransactionArchive = 'NumberOfRowsInsertedInWHSInventoryTransactionArchive';
    private const str CustomPropertyNumberOfRowsDeletedFromWHSInventoryItemSetElement = 'NumberOfRowsDeletedFromWHSInventoryItemSetElement';
    private const str CustomPropertyNumberOfRowsDeletedFromWHSInventoryTransaction = 'NumberOfRowsDeletedFromWHSInventoryTransaction';
    private const str CustomPropertyNumberOfRowsUpdatedInWHSWorkInventTrans = 'NumberOfRowsUpdatedInWHSWorkInventTrans';
    private const str CustomPropertyNumberOfDeletedUnreferencedItemSetElements = 'NumberOfDeletedUnreferencedItemSetElements';
    private const str CustomPropertyArchivalUtilization = 'ArchivalUtilization';

    private const str CustomPropertyNumberOfArchivedReferenceCategoriesPerBundle = 'NumberOfArchivedReferenceCategoriesPerBundle';
    private const str CustomPropertyNumberOfRowsInsertedInWHSInventoryTransactionArchivePerBundle = 'NumberOfRowsInsertedInWHSInventoryTransactionArchivePerBundle';
    private const str CustomPropertyNumberOfRowsDeletedFromWHSInventoryItemSetElementPerBundle = 'NumberOfRowsDeletedFromWHSInventoryItemSetElementPerBundle';
    private const str CustomPropertyNumberOfRowsDeletedFromWHSInventoryTransactionPerBundle = 'NumberOfRowsDeletedFromWHSInventoryTransactionPerBundle';
    private const str CustomPropertyNumberOfRowsUpdatedInWHSWorkInventTransPerBundle = 'NumberOfRowsUpdatedInWHSWorkInventTransPerBundle';
    private const str CustomPropertyArchivalUtilizationForBundle = 'ArchivalUtilizationForBundle';

    private WHSInstrumentationLogger logger;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static WHSInventoryTransactionArchivalActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSInventoryTransactionArchivalActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addWorkToArchivalQueue</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext addWorkToArchivalQueue()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + WHSInventoryTransactionAddWorkToArchivalQueue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeArchival</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext executeArchival()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + WHSInventoryTransactionExecuteArchival));
    }

]]></Source>
			</Method>
			<Method>
				<Name>archiveTransactionsBundle</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext archiveTransactionsBundle()
    {
        var activity = logger.activity(ActivityNamePrefix + WHSInventoryTransactionArchiveTransactionsBundle);

        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteUnreferencedItemSets</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext deleteUnreferencedItemSets()
    {
        var activity = logger.activity(ActivityNamePrefix + WHSInventoryTransactionDeleteUnreferencedItemSets);

        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logArchivalMetadata</Name>
				<Source><![CDATA[
    internal void logArchivalMetadata(
        SysInstrumentationActivityContext _activityContext,
        int64 _numberOfArchivedReferenceCategories,
        int64 _numberOfRowsInsertedInWHSInventoryTransactionArchive,
        int64 _numberOfRowsDeletedFromWHSInventoryItemSetElement,
        int64 _numberOfRowsDeletedFromWHSInventoryTransaction,
        int64 _numberOfRowsUpdatedInWHSWorkInventTrans,
        int64 _numberOfDeletedUnreferencedItemSetElements,
        utcdatetime _earliestTransactionDateTimeInArchivalQueue,
        utcdatetime _latestTransactionDateTimeInArchivalQueue,
        int64 _archivalTimeInMilliseconds)
    {
        _activityContext.addCustomProperty(CustomPropertyNumberOfArchivedReferenceCategories, int642Str(_numberOfArchivedReferenceCategories));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsInsertedInWHSInventoryTransactionArchive, int642Str(_numberOfRowsInsertedInWHSInventoryTransactionArchive));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsDeletedFromWHSInventoryItemSetElement, int642Str(_numberOfRowsDeletedFromWHSInventoryItemSetElement));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsDeletedFromWHSInventoryTransaction, int642Str(_numberOfRowsDeletedFromWHSInventoryTransaction));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsUpdatedInWHSWorkInventTrans, int642Str(_numberOfRowsUpdatedInWHSWorkInventTrans));

        if (WHSInventoryTransactionDeleteUnreferencedItemSetElementsFlight::instance().isEnabled())
        {
            _activityContext.addCustomProperty(CustomPropertyNumberOfDeletedUnreferencedItemSetElements, int642Str(_numberOfDeletedUnreferencedItemSetElements));
        }

        var archivalUtilization = this.calculateUtilization(_earliestTransactionDateTimeInArchivalQueue, _latestTransactionDateTimeInArchivalQueue, _archivalTimeInMilliseconds);

        _activityContext.addCustomProperty(CustomPropertyArchivalUtilization, real2double(archivalUtilization).ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>logArchivalMetadataForTransactionBundle</Name>
				<Source><![CDATA[
    internal void logArchivalMetadataForTransactionBundle(
        SysInstrumentationActivityContext _activityContext,
        int64 _numberOfArchivedReferenceCategoriesPerBundle,
        int64 _numberOfRowsInsertedInWHSInventoryTransactionArchivePerBundle,
        int64 _numberOfRowsDeletedFromWHSInventoryItemSetElementPerBundle,
        int64 _numberOfRowsDeletedFromWHSInventoryTransactionPerBundle,
        int64 _numberOfRowsUpdatedInWHSWorkInventTransPerBundle,
        utcdatetime _earliestTransactionDateTimeInArchivalBundle,
        utcdatetime _latestTransactionDateTimeInArchivalBundle,
        int64 _archivalTimeInMilliseconds)
    {
        _activityContext.addCustomProperty(CustomPropertyNumberOfArchivedReferenceCategoriesPerBundle, int642Str(_numberOfArchivedReferenceCategoriesPerBundle));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsInsertedInWHSInventoryTransactionArchivePerBundle, int642Str(_numberOfRowsInsertedInWHSInventoryTransactionArchivePerBundle));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsDeletedFromWHSInventoryItemSetElementPerBundle, int642Str(_numberOfRowsDeletedFromWHSInventoryItemSetElementPerBundle));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsDeletedFromWHSInventoryTransactionPerBundle, int642Str(_numberOfRowsDeletedFromWHSInventoryTransactionPerBundle));
        _activityContext.addCustomProperty(CustomPropertyNumberOfRowsUpdatedInWHSWorkInventTransPerBundle, int642Str(_numberOfRowsUpdatedInWHSWorkInventTransPerBundle));

        var archivalUtilization = this.calculateUtilization(_earliestTransactionDateTimeInArchivalBundle, _latestTransactionDateTimeInArchivalBundle, _archivalTimeInMilliseconds);

        _activityContext.addCustomProperty(CustomPropertyArchivalUtilization, real2double(archivalUtilization).ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateUtilization</Name>
				<Source><![CDATA[
    private real calculateUtilization(
        utcdatetime _earliestTransactionDateTime,
        utcdatetime _latestTransactionDateTime,
        int64 _archivalTimeInMilliseconds)
    {
        if (_archivalTimeInMilliseconds == 0)
        {
            return 1;
        }

        var utilization = DateTimeUtil::getDifference(_latestTransactionDateTime, _earliestTransactionDateTime) * 60 / _archivalTimeInMilliseconds;
        
        return utilization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addContainerToArchivalQueue</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext addContainerToArchivalQueue()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'AddContainerToArchivalQueue'));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>