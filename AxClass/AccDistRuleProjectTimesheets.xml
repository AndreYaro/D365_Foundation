<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccDistRuleProjectTimesheets</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    An accounting distribution rule for project timesheets source document.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProjectTimesheets), BusinessEvent_ProjectTimesheets::ProjectTimesheetPosting, MonetaryAmount::ExtendedPrice)]
public class AccDistRuleProjectTimesheets extends AccountingDistributionRule
{
    TSTimesheetTable tsTimesheetTable;
    TSTimesheetTrans tsTimesheetTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the accounting rule.
    /// </summary>
    protected void initialize()
    {
        Common  sourceDocumentLineImplementation;

        sourceDocumentLineImplementation = sourceDocumentLineItem.parmSourceDocumentLine().getSourceDocumentLineImplementation();
        if (sourceDocumentLineImplementation.TableId != tableNum(TSTimesheetTrans))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        tsTimesheetTrans = sourceDocumentLineImplementation;
        tsTimesheetTable = TSTimesheetTable::find(tsTimesheetTrans.timesheetLine().TimesheetNbr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
public LedgerPostingType parmLedgerPostingType()
    {
        ProjectAccDistRule              projectAccDistRule;
        boolean                         isProject;

        projectAccDistRule = ProjectAccDistRule::newFromAccountingDistributionRule(this);
        isProject = projectAccDistRule.parmIsProject();

        if (isProject)
        {
            return projectAccDistRule.parmLedgerPostingType();
        }

        return LedgerPostingType::ProjCost;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    public DebitCredit parmSide()
    {
        if (this.parmAmount() >= 0)
        {
            return DebitCredit::Debit;
        }
        else
        {
            return DebitCredit::Credit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSummarize</Name>
				<Source><![CDATA[
    public boolean parmSummarize()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>