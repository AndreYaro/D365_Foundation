<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankTransSummarizationDataInitializer</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankTransSummarizationDataInitializer
{
    private Query sourceDataQuery;
    private BankTransSummarizationCriteria criteria;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(List _ledgerJournalIdList)
    {
        this.initializeSourceData(_ledgerJournalIdList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BankTransSummarizationDataInitializer construct(List _ledgerJournalIdList)
    {
        return new BankTransSummarizationDataInitializer(_ledgerJournalIdList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDataQuery</Name>
				<Source><![CDATA[
    public Query getSourceDataQuery()
    {
        return sourceDataQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCriteria</Name>
				<Source><![CDATA[
    public BankTransSummarizationCriteria getCriteria()
    {
        return criteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSourceData</Name>
				<Source><![CDATA[
    private void initializeSourceData(List _ledgerJournalIdList)
    {
        ListEnumerator journalIdEnumerator = _ledgerJournalIdList.getEnumerator();
        Query query = this.buildBaseQuery();

        while (journalIdEnumerator.moveNext())
        {
            LedgerJournalTable journalHeader = LedgerJournalTable::find(journalIdEnumerator.current());

            // return null if any journal Id is not eligible for grouping
            if (!journalHeader.isEligableForBankSummarization())
            {
                query = null;
                break;
            }

            if (!criteria)
            {
                criteria = journalHeader.BankTransSummarizationCriteria;
            }

            QueryBuildDataSource qbds = query.dataSourceTable(tableNum(BankTransSummarizationView));
            qbds.addRange(fieldNum(BankTransSummarizationView, JournalNum)).value(queryValue(journalHeader.JournalNum));
        }

        sourceDataQuery = query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildBaseQuery</Name>
				<Source><![CDATA[
    private Query buildBaseQuery()
    {
        return new Query(queryStr(BankTransSummarization));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>