<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseInitiationWizardWorkTemplateCreatorBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal abstract class WHSWarehouseInitiationWizardWorkTemplateCreatorBase extends WHSWarehouseInitiationWizardEntityCreatorBase
{
    private readonly WHSWorkTemplateCode workTemplateCode;
    private readonly WHSWorkTransType workOrderType;
    private readonly InventLocationId warehouseId;
    private Set warehouseIds;
    private WhsWarehouseGroupId warehouseGroupId;
    private WhsWarehouseGroupAll warehouseSelection;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(
        WHSWarehouseInitiationWizardEntitiesCreatorMode _mode,
        WHSWarehouseInitiationWizardEntitiesCreationSummaryBuilder _summaryBuilder,
        WHSWorkTemplateCode _workTemplateCode,
        WHSWorkTransType _workOrderType,
        InventLocationId _warehouseId,
        Set _warehouseIds,
        WhsWarehouseGroupId _warehouseGroupId,
        WhsWarehouseGroupAll _warehouseSelection)
    {
        super(_mode, _summaryBuilder);
        workTemplateCode = strFmt('%1 %2', _warehouseId, _workTemplateCode);
        workOrderType = _workOrderType;
        warehouseId = _warehouseId;
        warehouseIds = _warehouseIds;
        warehouseGroupId = _warehouseGroupId;
        warehouseSelection = _warehouseSelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreate</Name>
				<Source><![CDATA[
    protected boolean canCreate()
    {
        return workTemplateCode != ''
            && warehouseId != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>entityName</Name>
				<Source><![CDATA[
    public str entityName()
    {
        return tablePName(WHSWorkTemplateTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    protected boolean exist()
    {
        return WHSWorkTemplateTable::exist(workTemplateCode, workOrderType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    protected void insert()
    {

        this.createWorkTemplate();
        this.createLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLines</Name>
				<Source><![CDATA[
    protected abstract void createLines()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkTemplate</Name>
				<Source><![CDATA[
    protected void createWorkTemplate()
    {
        WHSWorkTemplateTable workTemplate;

        workTemplate.initFromWorkTransType(workOrderType);
        workTemplate.initQuery();

        workTemplate.WorkTemplateCode = workTemplateCode;
        workTemplate.WorkTemplateDesc = workTemplateCode;
        workTemplate.WorkTemplateValid = NoYes::Yes;

        if (warehouseSelection == WhsWarehouseGroupAll::Group)
        {
            this.addWarehouseGroupRange(workTemplate);
        }
        else if(warehouseSelection == WhsWarehouseGroupAll::Warehouse)
        {
            this.addWarehouseRanges(workTemplate);
        }

        workTemplate.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPickPutPair</Name>
				<Source><![CDATA[
    protected void createPickPutPair(WHSWorkClassId _workClassId, WHSLocDirHintCode _directiveCode, LineNum _lineNumber, WHSWorkStop _workStop)
    {
        WHSWorkTemplateLine pickWorkTemplateLine = this.buildWorkTemplateLine(WHSWorkType::Pick, _workClassId, _lineNumber, _workStop);
        WHSWorkTemplateLine putWorkTemplateLine = this.buildWorkTemplateLine(WHSWorkType::Put, _workClassId, _lineNumber + 1, NoYes::No);
        putWorkTemplateLine.LocDirHintCode = _directiveCode;

        pickWorkTemplateLine.insert();
        putWorkTemplateLine.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildWorkTemplateLine</Name>
				<Source><![CDATA[
    private WHSWorkTemplateLine buildWorkTemplateLine(
        WHSWorkType _workType,
        WHSWorkClassId _workClassId,
        LineNum _lineNumber,
        WHSWorkStop _workStop)
    {
        WHSWorkTemplateLine workTemplateLine;
        worktemplateLine.initValue();

        workTemplateLine.WorkType = _workType;
        workTemplateLine.WorkTransType = workOrderType;
        workTemplateLine.WorkClassId = _workClassId;
        workTemplateLine.WorkTemplateCode = workTemplateCode;
        workTemplateLine.LineNum = _lineNumber;
        workTemplateLine.WorkStop = _workStop;

        return workTemplateLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addWarehouseGroupRange</Name>
				<Source><![CDATA[
    protected void addWarehouseGroupRange(WHSWorkTemplateTable _workTemplateTable)
    {
        QueryRun queryRun = new QueryRun(_workTemplateTable.WorkTemplateQuery);

        QueryBuildDataSource qbdsWMSLocation = queryRun.query().dataSourceTable(tableNum(WMSLocation));
        qbdsWMSLocation.addDataSource(tableNum(WhsWarehouseGroupLink));
        qbdsWMSLocation.addLink(fieldNum(WMSLocation, InventLocationId), fieldNum(WhsWarehouseGroupLink, InventLocationId));

        QueryBuildDataSource qbdsWarehouseGroupLink = queryRun.query().dataSourceTable(tableNum(WhsWarehouseGroupLink));
        SysQuery::findOrCreateRange(qbdsWarehouseGroupLink, fieldNum(WhsWarehouseGroupLink, WarehouseGroupId)).value(queryValue(warehouseGroupId));

        _workTemplateTable.workTemplateQuery = queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addWarehouseRanges</Name>
				<Source><![CDATA[
    private void addWarehouseRanges(WHSWorkTemplateTable _workTemplateTable)
    {
        QueryRun queryRun = new QueryRun(_workTemplateTable.WorkTemplateQuery);
        QueryBuildDataSource tmpDataSource = queryRun.query().dataSourceTable(tableNum(WHSTmpWorkLine));

        SetEnumerator warehouseIdsEnumerator = warehouseIds.getEnumerator();
        str whsRanges;
        while (warehouseIdsEnumerator.moveNext())
        {
            if(whsRanges)
            {
                whsRanges += ',';
            }
            whsRanges += warehouseIdsEnumerator.current();
        }

        tmpDataSource.addRange(fieldNum(WHSTmpWorkLine, InventLocationId)).value(whsRanges);

        _workTemplateTable.workTemplateQuery = queryRun.pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>