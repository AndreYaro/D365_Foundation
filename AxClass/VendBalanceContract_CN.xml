<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendBalanceContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Contract class for Vendor balance report.
/// </summary>
[
    DataContract,
    SysOperationContractProcessing(classStr(VendBalanceUIBuilder_CN)),
    SysOperationGroupAttribute('ProfileUIGroup', "@SYS21530", '2'),
    SysOperationGroupAttribute('VendGroupUIGroup', "@SYS9253", '3'),
    SysOperationGroupAttribute('BuyerGroupUIGroup', "@SYS54032", '4')
]
class VendBalanceContract_CN extends ERFormatMappingRunBaseContract
{
    ERFormatMappingId erBinding;
    List localizedAttributeNames;
    LedgerFiscalPeriodNameContractER_CN ledgerFiscalPeriodNameContractER_CN;
    VendPostingProfile fromProfile, toProfile;
    VendGroupId fromVendGroup, toVendGroup;
    ItemBuyerGroupId fromBuyerGroup, toBuyerGroup;

    private const ERFinDimensionsSelectType dimSelectType = ERFinDimensionsSelectType::LegalEntity;
    private const DimensionSetName dimSetSelectType = '';
    private const NoYes askForMainAccount = NoYes::No;
    private const NoYes isMainAccountMandatory = NoYes::No;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmLedgerFiscalPeriodNameContractER_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Data property of ledger period range.
    /// </summary>
    /// <param name = "_ledgerFiscalPeriodNameContractER_CN">Ledger period range contract</param>
    /// <returns>Ledger period range contract</returns>
    [
        DataMemberAttribute('LedgerFiscalPeriodNameContractER'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerFiscalPeriodNameContractER_CN parmLedgerFiscalPeriodNameContractER_CN(LedgerFiscalPeriodNameContractER_CN _ledgerFiscalPeriodNameContractER_CN = ledgerFiscalPeriodNameContractER_CN)
    {
        ledgerFiscalPeriodNameContractER_CN = _ledgerFiscalPeriodNameContractER_CN;
        return ledgerFiscalPeriodNameContractER_CN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting posting profile.
    /// </summary>
    /// <param name = "_fromProfile">Starting posting profile</param>
    /// <returns>Starting posting profile</returns>
    [
        DataMemberAttribute('FromProfile'),
        SysOperationLabelAttribute(literalstr("@SYS179495")),
        SysOperationGroupMemberAttribute('ProfileUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public VendPostingProfile parmFromProfile(VendPostingProfile _fromProfile = fromProfile)
    {
        fromProfile = _fromProfile;
        return fromProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending posting profile.
    /// </summary>
    /// <param name = "_toProfile">Ending posting profile</param>
    /// <returns>Ending posting profile</returns>
    [
        DataMemberAttribute('ToProfile'),
        SysOperationLabelAttribute(literalstr("@SYS179496")),
        SysOperationGroupMemberAttribute('ProfileUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public VendPostingProfile parmToProfile(VendPostingProfile _toProfile = toProfile)
    {
        toProfile = _toProfile;
        return toProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromVendGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting vendor group.
    /// </summary>
    /// <param name = "_fromVendGroup">Starting vendor group</param>
    /// <returns>Starting vendor group</returns>
    [
        DataMemberAttribute('FromVendorGroup'),
        SysOperationLabelAttribute(literalstr("@GLS220042")),
        SysOperationGroupMemberAttribute('VendGroupUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public VendGroupId parmFromVendGroup(VendGroupId _fromVendGroup = fromVendGroup)
    {
        fromVendGroup = _fromVendGroup;
        return fromVendGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToVendGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending vendor group.
    /// </summary>
    /// <param name = "_toVendGroup">Ending vendor group</param>
    /// <returns>Ending vendor group</returns>
    [
        DataMemberAttribute('ToVendorGroup'),
        SysOperationLabelAttribute(literalstr("@GLS220043")),
        SysOperationGroupMemberAttribute('VendGroupUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public VendGroupId parmToVendGroup(VendGroupId _toVendGroup = toVendGroup)
    {
        toVendGroup = _toVendGroup;
        return toVendGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromBuyerGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starting sales group.
    /// </summary>
    /// <param name = "_fromBuyerGroup">Starting sales group</param>
    /// <returns>Starting sales group</returns>
    [
        DataMemberAttribute('FromBuyerGroup'),
        SysOperationLabelAttribute(literalstr("@GLS100135")),
        SysOperationGroupMemberAttribute('BuyerGroupUIGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public ItemBuyerGroupId parmFromBuyerGroup(ItemBuyerGroupId _fromBuyerGroup = fromBuyerGroup)
    {
        fromBuyerGroup = _fromBuyerGroup;
        return fromBuyerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToBuyerGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ending sales group.
    /// </summary>
    /// <param name = "_toBuyerGroup">Ending sales group</param>
    /// <returns>Ending sales group</returns>
    [
        DataMemberAttribute('ToBuyerGroup'),
        SysOperationLabelAttribute(literalstr("@GLS100136")),
        SysOperationGroupMemberAttribute('BuyerGroupUIGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ItemBuyerGroupId parmToBuyerGroup(ItemBuyerGroupId _toBuyerGroup = toBuyerGroup)
    {
        toBuyerGroup = _toBuyerGroup;
        return toBuyerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERBinding</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter erBinding
    /// </summary>
    /// <param name = "_erBinding">ER format binding</param>
    /// <returns>ER format binding</returns>
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationDisplayOrderAttribute('5')
    ]
    public ERFormatMappingId parmERBinding(ERFormatMappingId _erBinding = erBinding)
    {
        erBinding = _erBinding;
        return erBinding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocalizedAttributeNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter localizedAttributeNames.
    /// </summary>
    /// <param name = "_localizedAttributeNames">List of dimension names</param>
    /// <returns>List of dimension names</returns>
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@SYS56299")),
        AifCollectionTypeAttribute('return', Types::String),
        SysOperationDisplayOrderAttribute('6')
    ]
    public List parmLocalizedAttributeNames(List _localizedAttributeNames = localizedAttributeNames)
    {
        localizedAttributeNames = _localizedAttributeNames;
        return localizedAttributeNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the user parameter values.
    /// </summary>
    /// <returns>
    /// <c>true</c> if valid; else <c>false</c>
    /// </returns>
    public boolean validate()
    {
        return ledgerFiscalPeriodNameContractER_CN.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimSelectType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets financial dimension selection type.
    /// </summary>
    /// <returns>Financial dimension selection type</returns>
    public ERFinDimensionsSelectType getDimSelectType()
    {
        return dimSelectType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimSetSelectType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets financial dimension set name.
    /// </summary>
    /// <returns>Financial dimension set name</returns>
    public DimensionSetName getDimSetSelectType()
    {
        return dimSetSelectType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAskForMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if ask for main account.
    /// </summary>
    /// <returns>True if ask for main account; otherwise, false.</returns>
    public NoYes getAskForMainAccount()
    {
        return askForMainAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsMainAccountMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets is main account mandatory.
    /// </summary>
    /// <returns>True if main account is mandatory; otherwise, false.</returns>
    public NoYes getIsMainAccountMandatory()
    {
        return isMainAccountMandatory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>