<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalReferenceControllerPosted_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class handles the tmpFiscalReference behavior for posted invoices.
/// </summary>
class FiscalReferenceControllerPosted_BR extends FiscalReferenceController_BR
{
    RecId fiscalDocumentRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canDeleteRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a record can be deleted.
    /// </summary>
    /// <param name="_tmpFiscalReference">The record to be checked.</param>
    /// <returns><c>true</c> if record can be deleted; <c>false</c> otherwise.</returns>
    public boolean canDeleteRecord(TmpFiscalReference_BR _tmpFiscalReference)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canManageRecords</Name>
				<Source><![CDATA[
    public boolean canManageRecords()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTempTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the delete process for a specific tmpTable record.
    /// </summary>
    /// <param name="_tmpFiscalReference">Row to be deleted</param>
    public void deleteTempTableRecord(TmpFiscalReference_BR _tmpFiscalReference)
    {
        //Don't do anything
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the temporary table with the rows that must be presented to the user
    /// with posted fiscal reference.
    /// </summary>
    /// <returns>tmpTable pointer to be presented to the user</returns>
    public TmpFiscalReference_BR initTempTable()
    {
        TmpFiscalReference_BR tmpFiscalReference;
        FiscalDocumentReferenced_BR fiscalDocReferenced;
        InvoicesReferencedByMap_BR invoicesReferencedByMap;

        ttsbegin;
        while select fiscalDocReferenced
              where  fiscalDocReferenced.FiscalDocument == fiscalDocumentRecId
        {
            tmpFiscalReference.clear();
            tmpFiscalReference.LegalTextId = fiscalDocReferenced.FiscalDocumentSourceText;

            if (fiscalDocReferenced.ReferencedFiscalDocument)
            {
                invoicesReferencedByMap = FiscalDocument_BR::find(fiscalDocReferenced.ReferencedFiscalDocument);
            }
            else
            {
                invoicesReferencedByMap = ExternalFiscalDocument_BR::find(fiscalDocReferenced.ExternalReferencedFiscalDocument);
            }
            tmpFiscalReference.initFromReferenceMap(invoicesReferencedByMap);
            tmpFiscalReference.insert();
        }
        ttscommit;
        return tmpFiscalReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(Common _source)
    {
        FiscalDocument_BR fiscalDocument;

        if (_source.TableId != tableNum(FiscalDocument_BR))
        {
            select firstOnly recId from fiscalDocument
                where fiscalDocument.RefTableId == _source.TableId
                   && fiscalDocument.RefRecId   == _source.RecId;
        }
        else
        {
            fiscalDocument = _source;
        }

        fiscalDocumentRecId = fiscalDocument.RecId;

        super(_source);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveLegalTextsToSourceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolve legal texts for source table.
    /// As it is already posted, no resolving is needed.
    /// </summary>
    public void resolveLegalTextsToSourceTable()
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeTempTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the tmpTable record update accordingly.
    /// </summary>
    /// <param name="_tmpFiscalReference">
    /// Record to be persisted
    /// </param>
    public void writeTempTableRecord(TmpFiscalReference_BR _tmpFiscalReference)
    {
        //Don't do anything
        return;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>