<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteCopyToProd</Name>
	<SourceCode>
		<Declaration><![CDATA[
/*

In 2.5 called RouteCopy_FromRoute_ToProd
*/
public class RouteCopyToProd extends RouteCopyTo
{
    ProdId              toProdId;

    ProdTable           prodTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcOprOffset</Name>
				<Source><![CDATA[
    OprNum calcOprOffset()
    {
        return ProdRoute::lastOprNum(toProdId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>configId</Name>
				<Source><![CDATA[
    EcoResItemConfigurationName configId()
    {
        return prodTable.inventDim().ConfigId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the route to a production route.
    /// </summary>
    /// <param name="copyFrom">
    /// The <c>CopyFrom</c> class that determines from what route is copied.
    /// </param>
    /// <param name="search">
    /// A <c>RouteSearchBase</c> class for enumerating the from route.
    /// </param>
    /// <param name="_toRoute">
    /// The target <c>ProdRoute</c> table buffer.
    /// </param>
    void copyTo(
        RouteCopyFrom       copyFrom,
        RouteSearchBase     search,
        RouteMap            _toRoute
        )
    {
        ProdRoute toRoute = _toRoute;

        this.initToProdRoute(_toRoute, copyFrom);

        super(copyFrom, search, toRoute);

        Docu::copy(copyFrom.docuRefTable(), toRoute);

        //Also copy the requirements to the new route
        WrkCtrActivityRequirementSet::copyRequirements(copyFrom.activity(), toRoute.activity());

        this.initProdRouteDefaultDimension(toRoute);

        if (prodTable.isProjMethodConsumed())
        {
            this.insertProjectProductionRoute(toRoute, ItemCalcType::Setup);
            this.insertProjectProductionRoute(toRoute, ItemCalcType::Process);
            this.insertProjectProductionRoute(toRoute, ItemCalcType::Qty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delegateCopy</Name>
				<Source><![CDATA[
    [SysObsolete("This method is not used", false, 15\05\2024)]
    static delegate void delegateCopy(Common _from, Common _to)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initToProdRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the passed <c>ProdRoute</c> record
    /// based on <c>ProdTable</c> record and <c>RouteCopyFrom</c> instance.
    /// </summary>
    /// <param name = "_toRoute">
    /// A <c>ProdRoute</c> record to be initialized.
    /// </param>
    /// <param name = "_copyFrom">
    /// An <c>RouteCopyFrom</c> instance to initialize from.
    /// </param>
    protected void initToProdRoute(ProdRoute _toRoute, RouteCopyFrom _copyFrom)
    {
        _toRoute.initFromProdTable(prodTable);

        _copyFrom.initToProdRoute(_toRoute);

        _toRoute.ProdId = toProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProdRouteDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes default dimension for <c>ProdRoute</c> from corresponding resource.
    /// </summary>
    /// <param name = "_prodRoute">
    /// A <c>ProdRoute</c> record.
    /// </param>
    protected void initProdRouteDefaultDimension(ProdRoute _toRoute)
    {
        _toRoute.selectForUpdate(true);
        _toRoute.initDimensionWrkCtrTable();
        _toRoute.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertProjectProductionRoute</Name>
				<Source><![CDATA[
    private void insertProjectProductionRoute(ProdRoute _prodRoute, ItemCalcType _itemCalcType)
    {
        ProdRouteProj prodRouteProj;

        prodRouteProj.clear();
        prodRouteProj.ProdId = _prodRoute.ProdId;
        prodRouteProj.OprNum = _prodRoute.OprNum;
        prodRouteProj.OprPriority = _prodRoute.OprPriority;
        prodRouteProj.CalcType = _itemCalcType;
        ProjJournalTransMapForm::construct(prodRouteProj, _prodRoute).initProdRouteProj(prodRouteProj.CalcType);
        prodRouteProj.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRoute</Name>
				<Source><![CDATA[
    Common defaultRoute()
    {
        ProdRoute route;

        return route;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /*
    Method to delete the 'to' route
    */
    void delete()
    {
        ProdRouteSearch search;

        ttsbegin;

        search  = ProdRouteSearch::newProdId(toProdId,true);

        while (search.next())
        {
            if (! search.prodroute().validateDelete())
                throw error("@SYS18722");
            search.prodroute().delete();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    ItemId itemId()
    {
        return prodTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(
        ProdId              _toId
        )
    {
        toProdId    = _toId;

        prodTable   = ProdTable::find(toProdId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newBOMRouteCopy</Name>
				<Source><![CDATA[
    static RouteCopyToProd newBOMRouteCopy(BOMRouteCopyJob bomRouteCopy)
    {
        RouteCopyToProd   routeCopyToProd;
        routeCopyToProd = new RouteCopyToProd(bomRouteCopy.parmToProdId());

        return routeCopyToProd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdTableType</Name>
				<Source><![CDATA[
    static RouteCopyToProd newProdTableType(ProdTable prodTable)
    {
        RouteCopyToProd    copyTo;

        copyTo = new RouteCopyToProd(prodTable.ProdId);
        copyTo.parmCalcOprOffset(false);

        return copyTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProdUpdSpilt</Name>
				<Source><![CDATA[
    static RouteCopyToProd newProdUpdSpilt(ProdId prodId)
    {
        RouteCopyToProd    copyTo;

        copyTo = new RouteCopyToProd(prodId);

        return copyTo;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>