<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjOnAccountInvoicePlanContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for ProjOnAccountInvoicePlan SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the ProjOnAccountInvoicePlan SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(ProjOnAccountInvoicePlanUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class ProjOnAccountInvoicePlanContract implements SysOperationValidatable
{
    boolean    timeMaterial;
    boolean    fixedPrice;
    boolean    timeMaterialBillingMethod;
    boolean    fixedPriceBillingMethod;
    boolean    invoiced;
    boolean    chargeable;
    TransDate    fromDate;
    TransDate    toDate;
    projInvoiceSort    projInvoiceSort;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmChargeable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Chargeable.
    /// </summary>
    /// <param name="_chargeable">
    /// The new value of the datacontract parameter Chargeable; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Chargeable
    /// </returns>
    [
        DataMemberAttribute('Chargeable'),
        SysOperationLabelAttribute(literalstr("@SYS15343")),
        SysOperationHelpTextAttribute(literalstr("@SYS339138"))
    ]
    public boolean parmChargeable(boolean _chargeable = chargeable)
    {
        chargeable = _chargeable;
        return chargeable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FixedPrice.
    /// </summary>
    /// <param name="_fixedPrice">
    /// The new value of the datacontract parameter FixedPrice; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FixedPrice
    /// </returns>
    [
        DataMemberAttribute('FixedPrice'),
        SysOperationLabelAttribute(literalstr("@SYS3237")),
        SysOperationHelpTextAttribute(literalstr("@SYS78361"))
    ]
    public boolean parmFixedPrice(boolean _fixedPrice = fixedPrice)
    {
        fixedPrice = _fixedPrice;
        return fixedPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedPriceBillingMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FixedPriceBillingMethod.
    /// </summary>
    /// <param name="_fixedPriceBillingMethod">
    /// The new value of the datacontract parameter FixedPriceBillingMethod; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter FixedPriceBillingMethod
    /// </returns>
    [
        DataMemberAttribute('FixedPriceBillingMethod'),
        SysOperationLabelAttribute(literalStr("@SYS3237")),
        SysOperationHelpTextAttribute(literalStr("@Proj:FixedPriceBillingMethodHelp"))
    ]
    public boolean parmFixedPriceBillingMethod(boolean _fixedPriceBillingMethod = fixedPriceBillingMethod)
    {
        fixedPriceBillingMethod = _fixedPriceBillingMethod;
        return fixedPriceBillingMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS24050")),
        SysOperationHelpTextAttribute(literalstr("@SYS90467"))
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter Invoiced.
    /// </summary>
    /// <param name="_invoiced">
    /// The new value of the datacontract parameter Invoiced; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter Invoiced
    /// </returns>
    [
        DataMemberAttribute('Invoiced'),
        SysOperationLabelAttribute(literalstr("@SYS14205")),
        SysOperationHelpTextAttribute(literalstr("@SYS56038"))
    ]
    public boolean parmInvoiced(boolean _invoiced = invoiced)
    {
        invoiced = _invoiced;
        return invoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInvoiceSort</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ProjInvoiceSort.
    /// </summary>
    /// <param name="_projInvoiceSort">
    /// The new value of the datacontract parameter ProjInvoiceSort; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ProjInvoiceSort
    /// </returns>
    [
        DataMemberAttribute('ProjInvoiceSort'),
        SysOperationLabelAttribute(literalstr("@SYS4138"))
    ]
    public projInvoiceSort parmProjInvoiceSort(projInvoiceSort _projInvoiceSort = projInvoiceSort)
    {
        projInvoiceSort = _projInvoiceSort;
        return projInvoiceSort;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterial</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TimeMaterial.
    /// </summary>
    /// <param name="_timeMaterial">
    /// The new value of the datacontract parameter TimeMaterial; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter TimeMaterial
    /// </returns>
    [
        DataMemberAttribute('TimeMaterial'),
        SysOperationLabelAttribute(literalstr("@SYS70232")),
        SysOperationHelpTextAttribute(literalstr("@SYS78362"))
    ]
    public boolean parmTimeMaterial(boolean _timeMaterial = timeMaterial)
    {
        timeMaterial = _timeMaterial;
        return timeMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeMaterialBillingMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter TimeMaterialBillingMethod.
    /// </summary>
    /// <param name="_timeMaterialBillingMethod">
    /// The new value of the datacontract parameter TimeMaterialBillingMethod; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter TimeMaterialBillingMethod
    /// </returns>
    [
        DataMemberAttribute('TimeMaterialBillingMethod'),
        SysOperationLabelAttribute(literalStr("@SYS53874")),
        SysOperationHelpTextAttribute(literalStr("@Proj:TimeMaterialBillingMethodHelp"))
    ]
    public boolean parmTimeMaterialBillingMethod(boolean _timeMaterialBillingMethod = timeMaterialBillingMethod)
    {
        timeMaterialBillingMethod = _timeMaterialBillingMethod;
        return timeMaterialBillingMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS80662")),
        SysOperationHelpTextAttribute(literalstr("@SYS90468"))
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;
        boolean isProjMultipleContractLinesForProjectFeatureEnabled = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

        // No project type selected
        if (!isProjMultipleContractLinesForProjectFeatureEnabled &&
            !(this.parmTimeMaterial() || this.parmFixedPrice()))
        {
            isValid = checkFailed("@SYS91026");
        }

        if (isProjMultipleContractLinesForProjectFeatureEnabled
            && !(this.parmTimeMaterialBillingMethod() ||
                this.parmFixedPriceBillingMethod()))
        {
            isValid = checkFailed("@Proj:BillingMethodIsEmptyError");
        }

        // Wrong date interval
        if ((this.parmFromDate() > this.parmToDate()) && this.parmToDate())
        {
            isValid = checkFailed("@SYS91020");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>