<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxPurchRFQCaseLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxPurchRFQCaseLine extends AxApplicationBase implements AxInventSiteDimensionable
{
    PurchRFQCaseLine                purchRFQCaseLine;
    AxInventDim_PurchRFQCaseLine    axInventDim;
    int                             axPurchRFQCaseTableIdx;
    int                             inventTableIdx;
    int                             priceDisc_LineDiscIdx;
    int                             priceDisc_PriceIdx;
    int                             zipCodeIdx;

    LineNum                         lineNum;
    str                             county;
    str                             state;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    public AxInventDim_PurchRFQCaseLine axInventDim(AxInventDim_PurchRFQCaseLine _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axPurchRFQCaseTable</Name>
				<Source><![CDATA[
    public AxPurchRFQCaseTable axPurchRFQCaseTable(AxPurchRFQCaseTable _axPurchRFQCaseTable = null)
    {
        AxPurchRFQCaseTable axPurchRFQCaseTable;

        if (!axPurchRFQCaseTableIdx)
        {
            axPurchRFQCaseTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axPurchRFQCaseTable))
        {
            this.classCacheInsert(axPurchRFQCaseTableIdx, _axPurchRFQCaseTable);
            axPurchRFQCaseTable = _axPurchRFQCaseTable;
        }
        else
        {
            if (this.classCacheExist(axPurchRFQCaseTableIdx))
            {
                axPurchRFQCaseTable = this.classCacheLookup(axPurchRFQCaseTableIdx);
            }
            else
            {
                this.setRFQCaseId();
                axPurchRFQCaseTable = AxPurchRFQCaseTable::newPurchRFQCaseTable(PurchRFQCaseTable::find(this.parmRFQCaseId()));

                this.classCacheInsert(axPurchRFQCaseTableIdx, axPurchRFQCaseTable);
            }
        }

        return axPurchRFQCaseTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _purchRFQCaseLine = purchRFQCaseLine)
    {
        if (!prmisDefault(_purchRFQCaseLine))
        {
            super(_purchRFQCaseLine);
            purchRFQCaseLine = _purchRFQCaseLine as PurchRFQCaseLine;
        }
        else
        {
            super();
        }

        return purchRFQCaseLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>AxPurchRFQCaseLine</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>AxPurchRFQCaseLine</c> record
    /// </returns>
    protected Common emptyRecord()
    {
        PurchRFQCaseLine localPurchRFQCaseLine;
        return localPurchRFQCaseLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throws an error if an <c>inventDim</c> section was missing in an XML string.
    /// </summary>
    /// <remarks>
    /// The <c>end</c> method is used for processing incoming documents and is run before popping an
    /// <c>AxBC</c> object off the stack. The method is needed because AxBC classes have <c>AxInventDim</c>
    /// as a child.Therefore it must throw an error if no inventory dimension section has been encountered
    /// in the XML. The method is intended for internal use only and should not be called through the
    /// interface.
    /// </remarks>
    public void end()
    {
        super();
        lineNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.purchRFQCaseLine(), this.axInventDim().inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableRecord</Name>
				<Source><![CDATA[
    public InventTable inventTableRecord(InventTable _inventTable = null)
    {
        InventTable   inventTable;

        if (!inventTableIdx)
        {
            inventTableIdx          = this.nextCacheIdx();
        }

        if (!prmisDefault(_inventTable))
        {
            this.tableCacheInsert(inventTableIdx, _inventTable);
            inventTable = _inventTable;
        }
        else
        {
            if (this.tableCacheExist(inventTableIdx))
            {
                inventTable = (this.tableCacheLookup(inventTableIdx) as InventTable);
            }
            else
            {
                this.setItemId();
                inventTable = InventTable::find(this.parmItemId());
                this.tableCacheInsert(inventTableIdx, inventTable);
            }
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAxPurchRFQCaseTableFieldsSet</Name>
				<Source><![CDATA[
    public boolean isAxPurchRFQCaseTableFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchRFQCaseLine, rfqCaseId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTableRecordFieldsSet</Name>
				<Source><![CDATA[
    public boolean isInventTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchRFQCaseLine, ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_LineDiscFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_LineDiscFieldsSet()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        return this.isFieldSet(fieldNum(PurchRFQCaseLine, ItemId))                                                     ||
               this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchUnit))                                                  ||
               this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchQty))                                                   ||
               this.isInventTableRecordFieldsSet()                                                              ||
               (this.isInventTableRecordFieldsSet()             &&
                this.inventTableRecord().purchLineDisc() != localPurchRFQCaseLine.inventTableRecord().purchLineDisc())  ||
               this.axInventDim().isPurchPriceDiscFieldsSet(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_PriceFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_PriceFieldsSet()
    {
        return this.isFieldSet(fieldNum(PurchRFQCaseLine, ItemId))                                             ||
               this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchUnit))                                          ||
               this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchQty))                                           ||
               this.isInventTableRecordFieldsSet()                                                      ||
               this.axInventDim().isPurchPriceDiscFieldsSet(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.axInventDim().isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        axInventDim = AxInventDim_PurchRFQCaseLine::newAxPurchRFQCaseLine(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumber</Name>
				<Source><![CDATA[
    public ProjActivityNumber parmActivityNumber(ProjActivityNumber _activityNumber = '')
    {
        if (!prmisDefault(_activityNumber))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ActivityNumber), _activityNumber);
        }

        return purchRFQCaseLine.ActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, AddressRefRecId), _addressRefRecId);
        }

        return purchRFQCaseLine.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, AddressRefTableId), _addressRefTableId);
        }

        return purchRFQCaseLine.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetBookId</Name>
				<Source><![CDATA[
    public AssetBookId parmAssetBookId(AssetBookId _assetBookId = '')
    {
        if (!prmisDefault(_assetBookId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, AssetBookId), _assetBookId);
        }

        return purchRFQCaseLine.AssetBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetId</Name>
				<Source><![CDATA[
    public AssetIdOpen parmAssetId(AssetIdOpen _assetId = '')
    {
        if (!prmisDefault(_assetId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, AssetId), _assetId);
        }

        return purchRFQCaseLine.AssetId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssetTransTypePurch</Name>
				<Source><![CDATA[
    public AssetTransTypePurchEDT parmAssetTransTypePurch(AssetTransTypePurchEDT _assetTransTypePurch = AssetTransTypePurch::Acquisition)
    {
        if (!prmisDefault(_assetTransTypePurch))
        {
            this.setField(fieldNum(PurchRFQCaseLine, AssetTransTypePurch), _assetTransTypePurch);
        }

        return purchRFQCaseLine.AssetTransTypePurch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CategoryId</c> parameter.
    /// </summary>
    /// <param name="_categoryId">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CategoryId</c> parameter.
    /// </returns>
    public PurchCategory parmCategoryId(PurchCategory _categoryId = 0)
    {
        if (!prmisDefault(_categoryId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, CategoryId), _categoryId);
        }

        return purchRFQCaseLine.CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedDlv</Name>
				<Source><![CDATA[
    public PurchLineDlvDate parmConfirmedDlv(PurchLineDlvDate _confirmedDlv = dateNull())
    {
        if (!prmisDefault(_confirmedDlv))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ConfirmedDlv), _confirmedDlv);
        }

        return purchRFQCaseLine.ConfirmedDlv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(PurchRFQCaseLine),fieldNum(PurchRFQCaseLine,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(PurchRFQCaseLine, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(purchRFQCaseLine.CurrencyCode);
        }
        return purchRFQCaseLine.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.inventSiteDimensionLink().axParmDefaultDimensionSet(this, _defaultDimension);
        }

        return purchRFQCaseLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    public TransDate parmDeliveryDate(TransDate _deliveryDate = dateNull())
    {
        if (!prmisDefault(_deliveryDate))
        {
            this.setField(fieldNum(PurchRFQCaseLine, DeliveryDate), _deliveryDate);
        }

        return purchRFQCaseLine.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public Name parmDeliveryName(Name _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(PurchRFQCaseLine, DeliveryName), _deliveryName);
        }

        return purchRFQCaseLine.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryAddress = 0)
    {
        if (!prmisDefault(_deliveryAddress))
        {
            this.setField(fieldNum(PurchRFQCaseLine, DeliveryPostalAddress), _deliveryAddress);
        }

        return purchRFQCaseLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExpiryDateTime</Name>
				<Source><![CDATA[
    public PurchRFQExpiryDateTime parmExpiryDateTime(PurchRFQExpiryDateTime _expiryDateTime = utcDateTimeNull())
    {
        if (!prmisDefault(_expiryDateTime))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ExpiryDateTime), _expiryDateTime);
        }

        return purchRFQCaseLine.ExpiryDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    public PurchExternalItemId parmExternalItemId(PurchExternalItemId _externalItemId = '')
    {
        if (!prmisDefault(_externalItemId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ExternalItemId), _externalItemId);
        }

        return purchRFQCaseLine.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, InventDimId), _inventDimId);
        }

        return purchRFQCaseLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefId</Name>
				<Source><![CDATA[
    public InventRefId parmInventRefId(InventRefId _inventRefId = '')
    {
        if (!prmisDefault(_inventRefId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, InventRefId), _inventRefId);
        }

        return purchRFQCaseLine.InventRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefTransId</Name>
				<Source><![CDATA[
    public InventRefTransId parmInventRefTransId(InventRefTransId _inventRefTransId = '')
    {
        if (!prmisDefault(_inventRefTransId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, InventRefTransId), _inventRefTransId);
        }

        return purchRFQCaseLine.InventRefTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public InventTransId parmInventTransId(InventTransId _inventTransId = '')
    {
        if (!prmisDefault(_inventTransId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, InventTransId), _inventTransId);
        }

        return purchRFQCaseLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = '')
    {
        DictField   dictField;

        if (!prmisDefault(_itemId))
        {
            dictField = new DictField(tableNum(PurchRFQCaseLine),fieldNum(PurchRFQCaseLine,ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                _itemId = conPeek(this.axSalesItemId('',_itemId),1);
            }

            this.setField(fieldNum(PurchRFQCaseLine, ItemId), _itemId);
        }

        if (this.valueMappingOutbound())
        {
            return conPeek(this.axSalesItemId('', purchRFQCaseLine.ItemId,purchRFQCaseLine.inventDim()),1);
        }
        return purchRFQCaseLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemName</Name>
				<Source><![CDATA[
    public Name parmItemName(Name _itemName = '')
    {
        if (!prmisDefault(_itemName))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ItemName), _itemName);
        }

        return purchRFQCaseLine.ItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemRefType</Name>
				<Source><![CDATA[
    public InventRefType parmItemRefType(InventRefType _itemRefType = InventRefType::None)
    {
        if (!prmisDefault(_itemRefType))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ItemRefType), _itemRefType);
        }

        return purchRFQCaseLine.ItemRefType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public PurchLineAmount parmLineAmount(PurchLineAmount _lineAmount = 0)
    {
        if (!prmisDefault(_lineAmount))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LineAmount), _lineAmount);
        }

        return purchRFQCaseLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LineDisc), _lineDisc);
        }

        return purchRFQCaseLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineItemType</Name>
				<Source><![CDATA[
    public PurchRFQLineItemType parmLineItemType(PurchRFQLineItemType _lineItemType = PurchRFQLineItemType::Category)
    {
        if (!prmisDefault(_lineItemType))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LineItemType), _lineItemType);
        }

        return purchRFQCaseLine.LineItemType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LineNum), _lineNum);
        }

        return purchRFQCaseLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNumber</Name>
				<Source><![CDATA[
    public TradeLineNumber parmLineNumber(TradeLineNumber _lineNumber = 0)
    {
        if (!prmisDefault(_lineNumber))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LineNumber), _lineNumber);
        }

        return purchRFQCaseLine.LineNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    public PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
        if (!prmisDefault(_linePercent))
        {
            this.setField(fieldNum(PurchRFQCaseLine, LinePercent), _linePercent);
        }

        return purchRFQCaseLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice = 0)
    {
        if (!prmisDefault(_maximumRetailPrice))
        {
            this.setField(fieldNum(PurchRFQCaseLine, MaximumRetailPrice_IN), _maximumRetailPrice);
        }

        return purchRFQCaseLine.MaximumRetailPrice_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    public PurchMultiLnDisc parmMultiLnDisc(PurchMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisDefault(_multiLnDisc))
        {
            this.setField(fieldNum(PurchRFQCaseLine, MultiLnDisc), _multiLnDisc);
        }

        return purchRFQCaseLine.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    public PurchMultiLnPercent parmMultiLnPercent(PurchMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisDefault(_multiLnPercent))
        {
            this.setField(fieldNum(PurchRFQCaseLine, MultiLnPercent), _multiLnPercent);
        }

        return purchRFQCaseLine.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisDefault(_name))
        {
            this.setField(fieldNum(PurchRFQCaseLine, Name), _name);
        }

        return purchRFQCaseLine.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PdsCWQty</c> parameter.
    /// </summary>
    /// <param name="_pdsCWQty">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>PdsCWQty</c> parameter.
    /// </returns>
    public PdsCWInventQty parmPdsCWQty(PdsCWInventQty _pdsCWQty = 0)
    {
        if (!prmisDefault(_pdsCWQty))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PdsCWQty), _pdsCWQty);
        }
        return purchRFQCaseLine.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainInventPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PdsCWRemainInventPhysical</c> parameter.
    /// </summary>
    /// <param name="_pdsCWRemainInventPhysical">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>PdsCWPurchUnit</c> parameter.
    /// </returns>
    public PdsCWInventQty parmPdsCWRemainInventPhysical(
        PdsCWInventQty _pdsCWRemainInventPhysical = 0)
    {
        if (!prmisDefault(_pdsCWRemainInventPhysical))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PdsCWRemainInventPhysical),
                _pdsCWRemainInventPhysical);
        }
        return purchRFQCaseLine.PdsCWRemainInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainPurchPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PdsCWRemainPurchPhysical</c> parameter.
    /// </summary>
    /// <param name="_pdsCWRemainPurchPhysical">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>PdsCWPurchUnit</c> parameter.
    /// </returns>
    public PdsCWInventQty parmPdsCWRemainPurchPhysical(
        PdsCWInventQty _pdsCWRemainPurchPhysical = 0)
    {
        if (!prmisDefault(_pdsCWRemainPurchPhysical))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PdsCWRemainPurchPhysical),
                _pdsCWRemainPurchPhysical);
        }
        return purchRFQCaseLine.PdsCWRemainPurchPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PriceUnit), _priceUnit);
        }

        return purchRFQCaseLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    public ProjCategoryId parmProjCategoryId(ProjCategoryId _projCategoryId = '')
    {
        if (!prmisDefault(_projCategoryId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjCategoryId), _projCategoryId);
        }

        return purchRFQCaseLine.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjId), _projId);
        }

        return purchRFQCaseLine.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjLinePropertyId</Name>
				<Source><![CDATA[
    public ProjLinePropertyId parmProjLinePropertyId(ProjLinePropertyId _projLinePropertyId = '')
    {
        if (!prmisDefault(_projLinePropertyId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjLinePropertyId), _projLinePropertyId);
        }

        return purchRFQCaseLine.ProjLinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesCurrencyId</Name>
				<Source><![CDATA[
    public CurrencyCode parmProjSalesCurrencyId(CurrencyCode _projSalesCurrencyId = '')
    {
        if (!prmisDefault(_projSalesCurrencyId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjSalesCurrencyId), _projSalesCurrencyId);
        }

        return purchRFQCaseLine.ProjSalesCurrencyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesPrice</Name>
				<Source><![CDATA[
    public ProjSalesPriceCost parmProjSalesPrice(ProjSalesPriceCost _projSalesPrice = 0)
    {
        if (!prmisDefault(_projSalesPrice))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjSalesPrice), _projSalesPrice);
        }

        return purchRFQCaseLine.ProjSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjSalesUnitId</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol parmProjSalesUnitId(UnitOfMeasureSymbol _projSalesUnitId = '')
    {
        if (!prmisDefault(_projSalesUnitId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjSalesUnitId), _projSalesUnitId);
        }

        return purchRFQCaseLine.ProjSalesUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxGroupId</Name>
				<Source><![CDATA[
    public ProjTaxGroup parmProjTaxGroupId(ProjTaxGroup _projTaxGroupId = '')
    {
        if (!prmisDefault(_projTaxGroupId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjTaxGroupId), _projTaxGroupId);
        }

        return purchRFQCaseLine.ProjTaxGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTaxItemGroupId</Name>
				<Source><![CDATA[
    public ProjTaxItemGroup parmProjTaxItemGroupId(ProjTaxItemGroup _projTaxItemGroupId = '')
    {
        if (!prmisDefault(_projTaxItemGroupId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ProjTaxItemGroupId), _projTaxItemGroupId);
        }

        return purchRFQCaseLine.ProjTaxItemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    public PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
        if (!prmisDefault(_purchMarkup))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PurchMarkup), _purchMarkup);
        }

        return purchRFQCaseLine.PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    public PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
        if (!prmisDefault(_purchPrice))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PurchPrice), _purchPrice);
        }

        return purchRFQCaseLine.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchQty</Name>
				<Source><![CDATA[
    public PurchOrderedQty parmPurchQty(PurchOrderedQty _purchQty = 0)
    {
        if (!prmisDefault(_purchQty))
        {
            this.setField(fieldNum(PurchRFQCaseLine, PurchQty), _purchQty);
        }

        return purchRFQCaseLine.PurchQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchUnit</Name>
				<Source><![CDATA[
    public str parmPurchUnit(str _purchUnit = '')
    {
        DictField   dictField;
        if (!prmisDefault(_purchUnit))
        {
            dictField = new DictField(tableNum(PurchRFQCaseLine),fieldNum(PurchRFQCaseLine,PurchUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_purchUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                _purchUnit = this.axUnitOfMeasureSymbol(_purchUnit);
            }
            else
            {
                this.validateInboundString(_purchUnit,dictField);
            }
            this.setField(fieldNum(PurchRFQCaseLine, PurchUnit), _purchUnit);
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(purchRFQCaseLine.PurchUnit);
        }
        return purchRFQCaseLine.PurchUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyOrdered</Name>
				<Source><![CDATA[
    public InventQty parmQtyOrdered(InventQty _qtyOrdered = 0)
    {
        if (!prmisDefault(_qtyOrdered))
        {
            this.setField(fieldNum(PurchRFQCaseLine, QtyOrdered), _qtyOrdered);
        }

        return purchRFQCaseLine.QtyOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainInventPhysical</Name>
				<Source><![CDATA[
    public InventQty parmRemainInventPhysical(InventQty _remainInventPhysical = 0)
    {
        if (!prmisDefault(_remainInventPhysical))
        {
            this.setField(fieldNum(PurchRFQCaseLine, RemainInventPhysical), _remainInventPhysical);
        }

        return purchRFQCaseLine.RemainInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainPurchPhysical</Name>
				<Source><![CDATA[
    public PurchQty parmRemainPurchPhysical(PurchQty _remainPurchPhysical = 0)
    {
        if (!prmisDefault(_remainPurchPhysical))
        {
            this.setField(fieldNum(PurchRFQCaseLine, RemainPurchPhysical), _remainPurchPhysical);
        }

        return purchRFQCaseLine.RemainPurchPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqPlanIdSched</Name>
				<Source><![CDATA[
    public ReqPlanIdSched parmReqPlanIdSched(ReqPlanIdSched _reqPlanIdSched = '')
    {
        if (!prmisDefault(_reqPlanIdSched))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ReqPlanIdSched), _reqPlanIdSched);
        }

        return purchRFQCaseLine.ReqPlanIdSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqPOId</Name>
				<Source><![CDATA[
    public ReqPOId parmReqPOId(ReqPOId _reqPOId = '')
    {
        if (!prmisDefault(_reqPOId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, ReqPOId), _reqPOId);
        }

        return purchRFQCaseLine.ReqPOId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQCaseId</Name>
				<Source><![CDATA[
    public PurchRFQCaseId parmRFQCaseId(PurchRFQCaseId _rfqCaseId = '')
    {
        if (!prmisDefault(_rfqCaseId))
        {
            this.setField(fieldNum(PurchRFQCaseLine, rfqCaseId), _rfqCaseId);
        }

        return purchRFQCaseLine.rfqCaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRFQType</Name>
				<Source><![CDATA[
    public PurchRFQType parmRFQType(PurchRFQType _rfqType = PurchRFQType::Purch)
    {
        if (!prmisDefault(_rfqType))
        {
            this.setField(fieldNum(PurchRFQCaseLine, rfqType), _rfqType);
        }

        return purchRFQCaseLine.rfqType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusHigh</Name>
				<Source><![CDATA[
    public PurchRFQStatus parmStatusHigh(PurchRFQStatus _statusHigh = PurchRFQStatus::Created)
    {
        if (!prmisDefault(_statusHigh))
        {
            this.setField(fieldNum(PurchRFQCaseLine, StatusHigh), _statusHigh);
        }

        return purchRFQCaseLine.StatusHigh;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusLow</Name>
				<Source><![CDATA[
    public PurchRFQStatus parmStatusLow(PurchRFQStatus _statusLow = PurchRFQStatus::Created)
    {
        if (!prmisDefault(_statusLow))
        {
            this.setField(fieldNum(PurchRFQCaseLine, StatusLow), _statusLow);
        }

        return purchRFQCaseLine.StatusLow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_LineDisc</Name>
				<Source><![CDATA[
    public PriceDisc_LineDisc priceDisc_LineDisc(PriceDisc_LineDisc _priceDisc_LineDisc = null)
    {
        PriceDisc_LineDisc  priceDisc_LineDisc;

        if (!priceDisc_LineDiscIdx)
        {
            priceDisc_LineDiscIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_LineDisc))
        {
            this.classCacheInsert(priceDisc_LineDiscIdx, _priceDisc_LineDisc);
            priceDisc_LineDisc = _priceDisc_LineDisc;
        }
        else
        {
            if (this.classCacheExist(priceDisc_LineDiscIdx))
            {
                priceDisc_LineDisc = this.classCacheLookup(priceDisc_LineDiscIdx);
            }
            else
            {
                this.setPriceDisc_LineDiscFields();

                priceDisc_LineDisc =  new PriceDisc_LineDisc();
                priceDisc_LineDisc.parmModuleType(ModuleInventPurchSales::Purch);
                priceDisc_LineDisc.parmItemId(this.parmItemId());
                priceDisc_LineDisc.parmInventDim(this.axInventDim().inventDim());
                priceDisc_LineDisc.parmUnitID(this.parmPurchUnit());
                priceDisc_LineDisc.parmDiscDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                priceDisc_LineDisc.parmQty(this.parmPurchQty());
                priceDisc_LineDisc.parmAccountNum('');
                priceDisc_LineDisc.parmCurrencyCode(this.axPurchRFQCaseTable().parmCurrencyCode());
                priceDisc_LineDisc.parmItemLineDiscCode(this.inventTableRecord().purchLineDisc());

                this.classCacheInsert(priceDisc_LineDiscIdx, priceDisc_LineDisc);
            }
        }

        return priceDisc_LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_Price</Name>
				<Source><![CDATA[
    public PriceDisc_Price priceDisc_Price(PriceDisc_Price _priceDisc_Price = null)
    {
        PriceDisc_Price  priceDisc_Price;

        if (!priceDisc_PriceIdx)
        {
            priceDisc_PriceIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_Price))
        {
            this.classCacheInsert(priceDisc_PriceIdx, _priceDisc_Price);
            priceDisc_Price = _priceDisc_Price;
        }
        else
        {
            if (this.classCacheExist(priceDisc_PriceIdx))
            {
                priceDisc_Price = this.classCacheLookup(priceDisc_PriceIdx);
            }
            else
            {
                this.setPriceDisc_PriceFields();

                priceDisc_Price =  new PriceDisc_Price();
                priceDisc_Price.parmModuleType(ModuleInventPurchSales::Purch);
                priceDisc_Price.parmItemId(this.parmItemId());
                priceDisc_Price.parmInventDim(this.axInventDim().inventDim());
                priceDisc_Price.parmUnitID(this.parmPurchUnit());
                priceDisc_Price.parmPriceDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                priceDisc_Price.parmQty(this.parmPurchQty());
                priceDisc_Price.parmCurrencyCode(this.axPurchRFQCaseTable().parmCurrencyCode());

                this.classCacheInsert(priceDisc_PriceIdx, priceDisc_Price);
            }
        }

        return priceDisc_Price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQCaseLine</Name>
				<Source><![CDATA[
    public PurchRFQCaseLine purchRFQCaseLine(PurchRFQCaseLine _purchRFQCaseLine = purchRFQCaseLine)
    {
        if (!prmisDefault(_purchRFQCaseLine))
        {
            this.setCurrentRecordFromExternal(_purchRFQCaseLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();

        axInventDim.inventDim(purchRFQCaseLine.inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetBookId</Name>
				<Source><![CDATA[
    protected void setAssetBookId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, AssetBookId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetId</Name>
				<Source><![CDATA[
    protected void setAssetId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, AssetId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetTransTypePurch</Name>
				<Source><![CDATA[
    protected void setAssetTransTypePurch()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, AssetTransTypePurch)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAxPurchRFQCaseTableFields</Name>
				<Source><![CDATA[
    public void setAxPurchRFQCaseTableFields()
    {
        this.setRFQCaseId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>CategoryId</c> field.
    /// </summary>
    protected void setCategoryId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, CategoryId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmedDlv</Name>
				<Source><![CDATA[
    protected void setConfirmedDlv()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ConfirmedDlv)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            return;
        }
        this.setAxPurchRFQCaseTableFields();

        if (this.parmCurrencyCode() != this.axPurchRFQCaseTable().parmCurrencyCode())
        {
            this.parmCurrencyCode(this.axPurchRFQCaseTable().parmCurrencyCode());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, DefaultDimension)))
        {
            return;
        }

        this.setInventDimId();
        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        this.setAxPurchRFQCaseTableFields();

        if (this.isAxPurchRFQCaseTableFieldsSet()                                                        ||
            this.axPurchRFQCaseTable().isFieldModified(fieldNum(PurchRFQCaseTable, DefaultDimension))    ||
            this.isInventTableRecordFieldsSet())
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(this.axPurchRFQCaseTable().purchRFQCaseTable().DefaultDimension, this.inventTableRecord().DefaultDimension));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> interface and is called from the
    ///    <c>InventSiteDimensionLink</c> class.
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        this.setField(fieldNum(PurchRFQCaseLine, DefaultDimension), _dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    protected void setDeliveryDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, DeliveryDate)))
        {
            return;
        }
        this.setAxPurchRFQCaseTableFields();
        if (this.isAxPurchRFQCaseTableFieldsSet() || this.axPurchRFQCaseTable().isFieldModified(fieldNum(PurchRFQCaseTable, DeliveryDate)))
        {
            this.parmDeliveryDate(this.axPurchRFQCaseTable().parmDeliveryDate());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, DeliveryName)))
        {
            return;
        }

        this.setAxPurchRFQCaseTableFields();
        if (this.isAxPurchRFQCaseTableFieldsSet())
        {
            this.parmDeliveryName(this.axPurchRFQCaseTable().parmDeliveryName());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, DeliveryPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so that all of the fields that are
    ///    entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(PurchRFQCaseLine, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExpiryDateTime</Name>
				<Source><![CDATA[
    protected void setExpiryDateTime()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ExpiryDateTime)))
        {
            return;
        }

        this.setAxPurchRFQCaseTableFields();
        if (this.isAxPurchRFQCaseTableFieldsSet() || this.axPurchRFQCaseTable().isFieldModified(fieldNum(PurchRFQCaseTable, ExpiryDateTime)))
        {
            this.parmExpiryDateTime(this.axPurchRFQCaseTable().parmExpiryDateTime());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    protected void setExternalItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ExternalItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefId</Name>
				<Source><![CDATA[
    protected void setInventRefId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, InventRefId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefTransId</Name>
				<Source><![CDATA[
    protected void setInventRefTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, InventRefTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTableRecordFields</Name>
				<Source><![CDATA[
    public void setInventTableRecordFields()
    {
        this.setItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    protected void setInventTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, InventTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ItemId)))
        {
            return;
        }

        this.setLineItemType();
        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, LineItemType)))
        {
            if (this.parmLineItemType() == PurchRFQLineItemType::Category)
            {
                purchRFQCaseLine.ItemId = '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemName</Name>
				<Source><![CDATA[
    protected void setItemName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ItemName)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemRefType</Name>
				<Source><![CDATA[
    protected void setItemRefType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ItemRefType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    protected void setLineAmount()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            return;
        }
        this.setPurchPrice();
        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setPurchQty();
        this.setPurchMarkup();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setPurchQty();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchPrice))    ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, PriceUnit))     ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, LineDisc))      ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, LinePercent))   ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchQty))      ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchMarkup))   ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, MultiLnDisc))   ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, MultiLnPercent)))
        {
            this.parmLineAmount(this.currentRecord().calcLineAmountForced());
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchRFQCaseLine.parmCurrencyCode())
            {
                this.parmLineAmount(CurrencyExchangeHelper::curAmount2CurAmount(this.parmLineAmount(), localPurchRFQCaseLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LineDisc)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmLineDisc(0);
            return;
        }

        this.setPriceDisc_LineDiscFields();

        if (this.isPriceDisc_LineDiscFieldsSet())
        {
            this.parmLineDisc(this.priceDisc_LineDisc().discAmount());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchRFQCaseLine.parmCurrencyCode())
            {
                this.parmLineDisc(ExchangeRateHelper::curPrice2CurPrice(this.parmLineDisc(), localPurchRFQCaseLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineItemType</Name>
				<Source><![CDATA[
    protected void setLineItemType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LineItemType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LineNum)))
        {
            return;
        }

        this.setRFQCaseId();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, rfqCaseId)))
        {
            if (!lineNum)
            {
                lineNum = PurchRFQCaseLine::lastLineNum(this.parmRFQCaseId());
            }
            lineNum += 1;

            this.parmLineNum(lineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNumber</Name>
				<Source><![CDATA[
    protected void setLineNumber()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LineNumber)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    protected void setLinePercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, LinePercent)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmLinePercent(0);
            return;
        }

        this.setPriceDisc_LineDiscFields();

        if (this.isPriceDisc_LineDiscFieldsSet())
        {
            this.parmLinePercent(this.priceDisc_LineDisc().discPct());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    protected void setMaximumRetailPrice_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, MaximumRetailPrice_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnDisc</Name>
				<Source><![CDATA[
    protected void setMultiLnDisc()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, MultiLnDisc)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmMultiLnDisc(0);
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchRFQCaseLine.parmCurrencyCode())
            {
                this.parmMultiLnDisc(ExchangeRateHelper::curPrice2CurPrice(this.parmMultiLnDisc(), localPurchRFQCaseLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnPercent</Name>
				<Source><![CDATA[
    protected void setMultiLnPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, MultiLnPercent)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmMultiLnPercent(0);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    protected void setName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, Name)))
        {
            return;
        }
        this.setInventTableRecordFields();
        this.axInventDim().setConfigId();
        this.setAxPurchRFQCaseTableFields();

        if (this.isInventTableRecordFieldsSet() ||
            this.isAxPurchRFQCaseTableFieldsSet()      ||
            this.axInventDim().isFieldSet(fieldNum(InventDim, ConfigId)) ||
            this.axPurchRFQCaseTable().isFieldModified(fieldNum(PurchRFQCaseTable, LanguageId)))
        {
            this.parmName(PurchParameters::nameAndOrDescription(this.inventTableRecord(), this.axPurchRFQCaseTable().parmLanguageId(), this.parmInventDimId()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQty</c> field.
    /// </summary>
    protected void setPdsCWQty()
    {
        PurchQty    qty;

        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine,
                PdsCWQty)))
        {
            return;
        }

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, ItemId))
                && PdsGlobal::pdsIsCWItem(this.parmItemId()))
        {
            qty = PdsCatchWeight::inventQty(this.parmItemId(),
                this.parmPdsCWQty(), this.parmPurchUnit());
            this.parmPurchQty(qty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWRemainInventPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWRemainInventPhysical</c> field.
    /// </summary>
    protected void setPdsCWRemainInventPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine,
                PdsCWRemainInventPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWRemainPurchPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWRemainPurchPhysical</c> field.
    /// </summary>
    protected void setPdsCWRemainPurchPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine,
                PdsCWRemainPurchPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_LineDiscFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_LineDiscFields()
    {
        this.setItemId();
        this.setPurchQty();
        this.setPurchUnit();
        this.setItemId();
        this.setAxPurchRFQCaseTableFields();
        this.axInventDim().setPurchPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_PriceFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_PriceFields()
    {
        this.setItemId();
        this.setPurchQty();
        this.setPurchUnit();
        this.setInventTableRecordFields();
        this.setAxPurchRFQCaseTableFields();
        this.axInventDim().setPurchPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, PriceUnit)))
        {
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPriceUnit(this.priceDisc_Price().priceUnit());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchMarkup</Name>
				<Source><![CDATA[
    protected void setPurchMarkup()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, PurchMarkup)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmPurchMarkup(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPurchMarkup(this.priceDisc_Price().priceMarkup());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchRFQCaseLine.parmCurrencyCode())
            {
                this.parmPurchMarkup(ExchangeRateHelper::curPrice2CurPrice(this.parmPurchMarkup(), localPurchRFQCaseLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchPrice</Name>
				<Source><![CDATA[
    protected void setPurchPrice()
    {
        AxPurchRFQCaseLine localPurchRFQCaseLine = this.axOrig() as AxPurchRFQCaseLine;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, PurchPrice)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(PurchRFQCaseLine, LineAmount)))
        {
            this.parmPurchPrice(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPurchPrice(this.priceDisc_Price().price());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, CurrencyCode)))
        {
            if (localPurchRFQCaseLine.parmCurrencyCode())
            {
                this.parmPurchPrice(ExchangeRateHelper::curPrice2CurPrice(this.parmPurchPrice(), localPurchRFQCaseLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchQty</Name>
				<Source><![CDATA[
    protected void setPurchQty()
    {
        PurchQty    purchQty;

        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, PurchQty)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.setInventDimId();
            purchQty = this.inventTableRecord().purchStandardQty(this.parmInventDimId());

            this.setPurchUnit();

            UnitOfMeasureSymbol purchUnitId = this.inventTableRecord().purchUnitId();
            UnitOfMeasureSymbol inventUnitId = this.inventTableRecord().inventUnitId();

            if (this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchUnit)) &&
                this.parmPurchUnit() != purchUnitId)
            {
                this.setItemId();

                EcoResProductUnitConverter productUnitConverter = EcoResProductUnitConverter::newGivenUnitSymbolsForReleasedProduct(
                                                                            this.parmItemId(),
                                                                            this.parmInventDimId(),
                                                                            purchUnitId,
                                                                            inventUnitId,
                                                                            NoYes::Yes);

                purchQty = productUnitConverter.convertValue(purchQty);

                productUnitConverter.parmFromUnitOfMeasureSymbol(inventUnitId);
                productUnitConverter.parmToUnitOfMeasureSymbol(this.parmPurchUnit());

                purchQty = productUnitConverter.convertValue(purchQty);
            }

            this.parmPurchQty(purchQty);

            return;
        }

        this.setPurchUnit();

        if (this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchUnit)))
        {
            this.parmPurchQty(decRound(this.parmPurchQty(), UnitOfMeasure::unitOfMeasureDecimalPrecision(
                UnitOfMeasure::unitOfMeasureIdBySymbol(this.parmPurchUnit()))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchUnit</Name>
				<Source><![CDATA[
    protected void setPurchUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, PurchUnit)))
        {
            return;
        }
        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmPurchUnit(this.inventTableRecord().purchUnitId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyOrdered</Name>
				<Source><![CDATA[
    protected void setQtyOrdered()
    {
        InventQty   inventQty;
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, QtyOrdered)))
        {
            return;
        }

        this.setInventTableRecordFields();
        this.setItemId();
        this.setPurchQty();
        this.setPurchUnit();
        this.setInventDimId();

        if (this.isInventTableRecordFieldsSet()                    ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, ItemId))    ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchQty))  ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, PurchUnit)) ||
            this.isFieldSet(fieldNum(PurchRFQCaseLine, InventDimId)))
        {
            inventQty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.parmItemId(),
                                                                                              this.parmInventDimId(),
                                                                                              this.parmPurchQty(),
                                                                                              this.parmPurchUnit(),
                                                                                              this.inventTableRecord().inventUnitId(),
                                                                                              NoYes::Yes);

            this.parmQtyOrdered(decRound(inventQty,InventTable::inventDecimals(this.parmItemId())));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainInventPhysical</Name>
				<Source><![CDATA[
    protected void setRemainInventPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, RemainInventPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainPurchPhysical</Name>
				<Source><![CDATA[
    protected void setRemainPurchPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, RemainPurchPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqPlanIdSched</Name>
				<Source><![CDATA[
    protected void setReqPlanIdSched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ReqPlanIdSched)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqPOId</Name>
				<Source><![CDATA[
    protected void setReqPOId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, ReqPOId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQCaseId</Name>
				<Source><![CDATA[
    protected void setRFQCaseId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, rfqCaseId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRFQType</Name>
				<Source><![CDATA[
    protected void setRFQType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, rfqType)))
        {
            return;
        }

        this.setAxPurchRFQCaseTableFields();
        if (this.isAxPurchRFQCaseTableFieldsSet())
        {
            this.parmRFQType(this.axPurchRFQCaseTable().parmRFQType());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatusHigh</Name>
				<Source><![CDATA[
    protected void setStatusHigh()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, StatusHigh)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatusLow</Name>
				<Source><![CDATA[
    protected void setStatusLow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(PurchRFQCaseLine, StatusLow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        this.axInventDim().setDimFieldId(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>
        super();

        useMapPolicy = false;

        this.setLineNum();
        this.setLineNumber();
        this.setItemId();
        this.setItemName();
        this.setDeliveryDate();
        this.setQtyOrdered();
        this.setPurchUnit();
        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setLineAmount();
        this.setInventDimId();
        this.setName();
        this.setExternalItemId();
        this.setDeliveryPostalAddress();
        this.setDeliveryName();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setPurchMarkup();
        this.setAssetId();
        this.setAssetBookId();
        this.setAssetTransTypePurch();
        this.setPurchPrice();
        this.setPurchQty();
        this.setDefaultDimension();
        this.setExpiryDateTime();
        this.setInventTransId();
        this.setAddressRefTableId();
        this.setAddressRefRecId();
        this.setInventRefTransId();
        this.setInventRefId();
        this.setItemRefType();
        this.setStatusLow();
        this.setRFQType();
        this.setCurrencyCode();
        this.setConfirmedDlv();
        this.setRFQCaseId();
        this.setStatusHigh();
        this.setLineItemType();
        this.setRemainInventPhysical();
        this.setRemainPurchPhysical();
        this.setReqPOId();
        this.setReqPlanIdSched();

        this.setPdsCWQty();
        this.setPdsCWRemainInventPhysical();
        this.setPdsCWRemainPurchPhysical();
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.setMaximumRetailPrice_IN();
        }
        // </GIN>

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    public void updateFromInventDim()
    {
        ttsbegin;

        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateWrite();

        this.write();

        purchRFQCaseLine.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxPurchRFQCaseLine construct()
    {
        return new AxPurchRFQCaseLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchRFQCaseLine</Name>
				<Source><![CDATA[
    public static AxPurchRFQCaseLine newPurchRFQCaseLine(PurchRFQCaseLine _purchRFQCaseLine)
    {
        AxPurchRFQCaseLine axPurchRFQCaseLine = AxPurchRFQCaseLine::construct();
        axPurchRFQCaseLine.purchRFQCaseLine(_purchRFQCaseLine);

        return axPurchRFQCaseLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>