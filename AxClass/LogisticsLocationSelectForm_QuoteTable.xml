<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_QuoteTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsLocationSelectForm_QuoteTable extends LogisticsLocationSelectForm
{
    SalesQuotationTable salesQuotationTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates the entities from which addresses can be selected.
    /// </summary>
    /// <returns>
    ///    A set of <c>LogisticsLocationSelectSourceTypes</c> enumeration values from which addresses can be
    ///    selected.
    /// </returns>
    public Set allowedSources()
    {
        Set ret;

        ret = super();

        ret.add(LogisticsLocationSelectSourceType::BusinessRelation);
        ret.add(LogisticsLocationSelectSourceType::SalesQuotation);
        ret.add(LogisticsLocationSelectSourceType::SalesQuotationLine);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the selected address to the calling sales quotation.
    /// </summary>
    /// <param name="_transferFromTable">
    /// The source of the address.
    /// </param>
    /// <param name="_addressRecId">
    /// The selected address.
    /// </param>
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        LogisticsPostalAddress address = LogisticsPostalAddress::findRecId(_addressRecId);

        salesQuotationTable.DeliveryPostalAddress = _addressRecId;
        salesQuotationTable.setDeliveryName();

        salesQuotationTable.AddressRefRecId = _transferFromTable.RecId;
        salesQuotationTable.AddressRefTableId = _transferFromTable.TableId;

        salesQuotationTable.TaxGroup = TaxSales::custTaxGroup(salesQuotationTable.DlvTerm, salesQuotationTable.TaxGroup, salesQuotationTable.deliveryLocation());

        LogisticsLocation locationToCopyFrom = LogisticsLocation::find(address.Location);
        this.copyShipCarrierInfo(locationToCopyFrom);

        salesQuotationTable.setListCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides an initial selected source for addresses on the form.
    /// </summary>
    /// <returns>
    /// The <c>LogisticslocationSelectSourceType</c> enumeration value that corresponds to the address
    /// source.
    /// </returns>
    public LogisticsLocationSelectSourceType defaultSource()
    {
        LogisticsLocationSelectSourceType   sourceType = super();
        Common                              addressOwner;

        // If AddressRefTableId and AddressRefRecId have values
        if (salesQuotationTable.AddressRefTableId && salesQuotationTable.AddressRefRecId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                salesQuotationTable.AddressRefTableId,
                salesQuotationTable.AddressRefRecId
            );
            if (addressOwner)
            {
                sourceType = LogisticsLocationSelectForm::tableIdToSourceType(
                    salesQuotationTable.AddressRefTableId,
                    sourceType
                );
                return sourceType;
            }
        }

        if (salesQuotationTable.CustAccount)
        {
            sourceType = LogisticsLocationSelectSourceType::Customer;
        }
        else if (salesQuotationTable.BusRelAccount)
        {
            sourceType = LogisticsLocationSelectSourceType::BusinessRelation;
        }

        return sourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record ID of a record in a <c>LogisticsPostalAddress</c> table.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsPostalAddress</c> record ID.
    /// </returns>
    public RecId getLogisticsPostalAddressRecId()
    {
        return salesQuotationTable.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the record that the grid of the target form selects when it opens.
    /// </summary>
    /// <returns>
    /// The record to be selected.
    /// </returns>
    public Common getLookupRecord()
    {
        Common addressOwner;

        if (salesQuotationTable.AddressRefTableId)
        {
            addressOwner = LogisticsLocationSelectForm::findByRecId(
                salesQuotationTable.AddressRefTableId,
                salesQuotationTable.AddressRefRecId
            );
        }

        if (!addressOwner)
        {
            if (salesQuotationTable.CustAccount)
            {
                addressOwner = CustTable::find(salesQuotationTable.CustAccount);
            }
            else if (salesQuotationTable.BusRelAccount)
            {
                addressOwner = smmBusRelTable::find(salesQuotationTable.BusRelAccount);
            }
        }

        return addressOwner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(SalesQuotationTable _salesQuotation)
    {
        salesQuotationTable = _salesQuotation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>LogisticsLocationSelectForm_QuoteTable</c> object.
    /// </summary>
    /// <param name="_buffer">
    ///    A <c>LogisticsLocationSelectForm_QuoteTable</c> record to use to initialize the object.
    /// </param>
    /// <returns>
    ///    A new <c>LogisticsLocationSelectForm_QuoteTable</c> object.
    /// </returns>
    public static LogisticsLocationSelectForm_QuoteTable construct(Common _buffer)
    {
        return new LogisticsLocationSelectForm_QuoteTable(_buffer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyShipCarrierInfo</Name>
				<Source><![CDATA[
    public void copyShipCarrierInfo(LogisticsLocation   _locationToCopyFrom)
    {
        ShipCarrierAddress   shipCarrierAddress;

        if (_locationToCopyFrom.isRole(LogisticsLocationRoleType::Delivery) ||
            _locationToCopyFrom.isRole(LogisticsLocationRoleType::Invoice))
        {
            if (DlvTerm::find(salesQuotationTable.DlvTerm).ShipCarrierFreightApplied != ShipCarrierFreightApplied::ThirdParty)
            {
                shipCarrierAddress = ShipCarrierAddress::findByCustomerLocation(salesQuotationTable.CustAccount, _locationToCopyFrom.RecId);

                if (shipCarrierAddress.DlvModeId)
                {
                    salesQuotationTable.DlvMode = shipCarrierAddress.DlvModeId;
                }
                if (shipCarrierAddress.DlvTermId)
                {
                    salesQuotationTable.DlvTerm = shipCarrierAddress.DlvTermId;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>