<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResCategoryLookupParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
class EcoResCategoryLookupParameters
{
    boolean                             leafNodeOnlySelect;
    boolean                             showActiveNodesOnly;
    boolean                             showFriendlyNameWithName;
    boolean                             recordSelectMode;
  
    EcoResCategoryName                  ecoResCategoryNameFilter;
    EcoResCategorySelectionValidator    ecoResCategorySelectionValidator;
    RefRecId                            buyingLegalEntity;
    RefRecId                            receivingOperatingUnit;
    ProcCategoryOrganizationOption      organizationOption;

    container                           multiRoleSelectionSet;
    RefRecId                            selectedCategoryHierarchyId;
    RecId                               purchAgreementHeaderRecId;

    private EcoResCategoryLevel         levelLimit;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(   boolean _leafNodeOnlySelect = false,
                boolean _showFriendlyNameWithName = false,
                boolean _showActiveNodesOnly = false,
                boolean _recordSelectMode = false,
                EcoResCategoryName  _ecoResCategoryNameFilter = '*',
                EcoResCategorySelectionValidator _ecoResCategorySelectionValidator = null,
                RefRecId _buyingLegalEntity = 0,
                RefRecId _receivingOperatingUnit = 0,
                ProcCategoryOrganizationOption  _organizationOption = _receivingOperatingUnit
                                                                        ? ProcCategoryOrganizationOption::ReceivingOperatingUnitCombination
                                                                        : ProcCategoryOrganizationOption::BuyingLegalEntity
                , RecId                           _purchAgreementHeaderRecId = 0
                , container _multiRoleSelectionSet = conNull()
                , RefRecId  _selectedCategoryHierarchyId = 0
                , EcoResCategoryLevel _levelLimit = 0
        )
    {
        leafNodeOnlySelect                  = _leafNodeOnlySelect;
        showFriendlyNameWithName            = _showFriendlyNameWithName;
        showActiveNodesOnly                 = _showActiveNodesOnly;
        recordSelectMode                    = _recordSelectMode;
        ecoResCategoryNameFilter            =  _ecoResCategoryNameFilter;
        ecoResCategorySelectionValidator    = _ecoResCategorySelectionValidator;
        buyingLegalEntity                   = _buyingLegalEntity;
        receivingOperatingUnit              = _receivingOperatingUnit;
        organizationOption                  = _organizationOption;
        levelLimit                          = _levelLimit;

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            purchAgreementHeaderRecId           = _purchAgreementHeaderRecId;
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            multiRoleSelectionSet           = _multiRoleSelectionSet;
            selectedCategoryHierarchyId      = _selectedCategoryHierarchyId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuyingLegalEntity</Name>
				<Source><![CDATA[
    public RefRecId parmBuyingLegalEntity(RefRecId _buyingLegalEntity = buyingLegalEntity)
    {
        buyingLegalEntity  = _buyingLegalEntity;
        return buyingLegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEcoResCategoryNameFilter</Name>
				<Source><![CDATA[
    public EcoResCategoryName parmEcoResCategoryNameFilter(EcoResCategoryName _ecoResCategoryNameFilter = ecoResCategoryNameFilter)
    {
        ecoResCategoryNameFilter  = Global::strLRTrim(_ecoResCategoryNameFilter);
        return ecoResCategoryNameFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEcoResCategorySelectionValidator</Name>
				<Source><![CDATA[
    public EcoResCategorySelectionValidator parmEcoResCategorySelectionValidator(EcoResCategorySelectionValidator _ecoResCategorySelectionValidator = ecoResCategorySelectionValidator)
    {
        ecoResCategorySelectionValidator  = _ecoResCategorySelectionValidator;
        return ecoResCategorySelectionValidator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLeafNodeOnlySelect</Name>
				<Source><![CDATA[
    public boolean parmLeafNodeOnlySelect(boolean _leafNodeOnlySelect = leafNodeOnlySelect)
    {
        leafNodeOnlySelect  = _leafNodeOnlySelect;
        return leafNodeOnlySelect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiRoleSelectionSet</Name>
				<Source><![CDATA[
    public container parmMultiRoleSelectionSet(container _multiRoleSelectionSet = multiRoleSelectionSet)
    {
        multiRoleSelectionSet  = _multiRoleSelectionSet;
        return multiRoleSelectionSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrganizationOption</Name>
				<Source><![CDATA[
    public ProcCategoryOrganizationOption parmOrganizationOption(ProcCategoryOrganizationOption _organizationOption = organizationOption)
    {
        organizationOption  = _organizationOption;
        return organizationOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchAgreementHeaderRecId</Name>
				<Source><![CDATA[
    public RecId parmPurchAgreementHeaderRecId(RecId _purchAgreementHeaderRecId = purchAgreementHeaderRecId)
    {
        purchAgreementHeaderRecId  = _purchAgreementHeaderRecId;
        return purchAgreementHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceivingOperatingUnit</Name>
				<Source><![CDATA[
    public RefRecId parmReceivingOperatingUnit(RefRecId _receivingOperatingUnit = receivingOperatingUnit)
    {
        receivingOperatingUnit  = _receivingOperatingUnit;
        return receivingOperatingUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordSelectMode</Name>
				<Source><![CDATA[
    public boolean parmRecordSelectMode(boolean _recordSelectMode = recordSelectMode)
    {
        recordSelectMode  = _recordSelectMode;
        return recordSelectMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectedCategoryHierarchyId</Name>
				<Source><![CDATA[
    public RefRecId parmSelectedCategoryHierarchyId(RefRecId _selectedCategoryHierarchyId = selectedCategoryHierarchyId)
    {
        selectedCategoryHierarchyId = _selectedCategoryHierarchyId;

        return selectedCategoryHierarchyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowActiveNodesOnly</Name>
				<Source><![CDATA[
    public boolean parmShowActiveNodesOnly(boolean _showActiveNodesOnly = showActiveNodesOnly)
    {
        showActiveNodesOnly  = _showActiveNodesOnly;
        return showActiveNodesOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowFriendlyNameWithName</Name>
				<Source><![CDATA[
    public boolean parmShowFriendlyNameWithName(boolean _showFriendlyNameWithName = showFriendlyNameWithName)
    {
        showFriendlyNameWithName  = _showFriendlyNameWithName;
        return showFriendlyNameWithName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLimitByLevel</Name>
				<Source><![CDATA[
    public EcoResCategoryLevel parmLimitByLevel(EcoResCategoryLevel _levelLimit = levelLimit)
    {
        levelLimit  = _levelLimit;
        return levelLimit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>