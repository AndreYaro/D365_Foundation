<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDimensionsParametersEntityHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventInventoryDimensionsParametersEntityHelper</c> class is a helper class for the <c>InventInventoryDimensionsParametersEntity</c> data entity.
/// The helper exposes methods required for setting the datasource range values in the data entity.
/// It is also used for the data entity field validation.
/// </summary>
public class InventInventoryDimensionsParametersEntityHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tableNumInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventDim</c> table ID.
    /// </summary>
    /// <returns><c>InventDim</c> table ID</returns>
    [QueryRangeFunctionAttribute()]
    public static str tableNumInventDim()
    {
        return SysQueryRangeUtil::value(tableNum(InventDim));
    }

]]></Source>
			</Method>
			<Method>
				<Name>includedFieldIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a list of field IDs that are valid inventory dimensions parameters.
    /// </summary>
    /// <returns>String representing a list of field IDs.</returns>
    [QueryRangeFunctionAttribute()]
    public static str includedFieldIds()
    {
        Set             validFieldIds   = InventInventoryDimensionsParametersEntityHelper::getValidInventoryDimensionsParametersFieldIds();
        SetEnumerator   enumerator      = validFieldIds.getEnumerator();
        str             value;

        while (enumerator.moveNext())
        {
            value = queryRangeConcat(value, enumerator.current());
        }

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldValidInventoryDimensionsParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the field is a valid inventory dimension parameter.
    /// </summary>
    /// <param name = "_fieldName">Name of the field to be checked.</param>
    /// <returns>true if the field is a valid one; otherwise, false.</returns>
    public static boolean isFieldValidInventoryDimensionsParameter(FieldName _fieldName)
    {
        Set             inventoryDimensionsParametersFields  = InventInventoryDimensionsParametersEntityHelper::getValidInventoryDimensionsParametersFieldIds();
        SqlDictionary   sqlDictionary;

        select fieldId from sqlDictionary
                where sqlDictionary.tabId   == tableNum(InventDim)
                    && sqlDictionary.name   == _fieldName;

        if (inventoryDimensionsParametersFields.in(sqlDictionary.fieldId))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidInventoryDimensionsParametersFieldIds</Name>
				<Source><![CDATA[
    private static Set getValidInventoryDimensionsParametersFieldIds()
    {
        Set             inventoryDimensionsParametersFields = new Set(Types::Integer);
        ListEnumerator  enumerator                          = InventDim::dimFieldListEnumerator();

        while (enumerator.moveNext())
        {
            FieldId inventDimFieldId = enumerator.current();
            inventoryDimensionsParametersFields.add(inventDimFieldId);
        }

        return inventoryDimensionsParametersFields;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
