<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmJobFormExtensionRetailHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the Retail form extension events for the HcmJob form.
/// </summary>
class HcmJobFormExtensionRetailHandler
{
    boolean initialized;
    FormRun element;

    // Extension controls
    FormReferenceGroupControl RetailPosPermissionGroupIdControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void new(FormRun _formRunInstance)
    {
        initialized = false;
        element = _formRunInstance;

        // Register this extension with the main form
        element.registerExtensionInstance(classStr(HcmJobFormExtensionRetailHandler), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this form extension handler instance.
    /// </summary>
    private void init()
    {
        if (initialized)
        {
            return;
        }

        initialized = true;

        // Cache of the extension controls
        RetailPosPermissionGroupIdControl = element.design().controlName(formControlStr(HcmJob, RetailPosPermissionGroupId)) as FormReferenceGroupControl;

        // Register overrides
        RetailPosPermissionGroupIdControl.registerOverrideMethod(methodStr(FormReferenceGroupControl, jumpRef), methodStr(HcmJobFormExtensionRetailHandler, onRetailPosPermissionGroupIdJumpRef), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmJob_OnInitializing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form OnInitializing event handler for HcmJob form extension.
    /// </summary>
    /// <param name="_sender">The <c>xFormRun</c> object of the base form.</param>
    /// <param name="_e">Args for the form event.</param>
    [FormEventHandler(formStr(HcmJob), FormEventType::Initializing)]
    public static void HcmJob_OnInitializing(xFormRun _sender, FormEventArgs _e)
    {
        HcmJobFormExtensionRetailHandler extensionInstance = new HcmJobFormExtensionRetailHandler(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HcmJob_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form OnInitialized event handler for HcmJob form extension.
    /// </summary>
    /// <param name="_sender">The <c>xFormRun</c> object of the base form.</param>
    /// <param name="_e">Args for the form event.</param>
    [FormEventHandler(formStr(HcmJob), FormEventType::Initialized)]
    public static void HcmJob_OnInitialized(xFormRun _sender, FormEventArgs _e)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            // Creating a new job triggers create on RetailJobPosPermissionGroup data source.
            FormDataSource retailJobPosPermissionGroup_ds = _sender.dataSource(formDataSourceStr(HcmJob, RetailJobPosPermissionGroup)) as FormDataSource;
            retailJobPosPermissionGroup_ds.allowCreate(true);
        }

        // Hide the controls for retail essentials mode
        if (RetailDelegates::RetailSMBEnabled())
        {
            // Hide info parts: Skill
            RetailUtils::HidePart(_sender, identifierStr(HcmJobPreferredSkills));
        }

        // Initialize the instance of this form extension handler now that the controls exist
        FormRun jobForm = _sender as FormRun;
        HcmJobFormExtensionRetailHandler extensionInstance = jobForm.getExtensionInstance(classStr(HcmJobFormExtensionRetailHandler));
        extensionInstance.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onRetailPosPermissionGroupIdJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Custom override method for handling the RetailPosPermissionGroupId control's jumpRef.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpref.</param>
    private void onRetailPosPermissionGroupIdJumpRef(FormReferenceGroupControl _sender)
    {
        // super()
        _sender.jumpRef();

        smmUtility::openMenuItemForm(menuItemDisplayStr(RetailPosPermissionGroup), null, _sender.formRun());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>