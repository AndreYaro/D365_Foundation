<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMerchandisingCopilotChannelOverviewDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The util class that provides data for merchandising copilot channel overview.
/// </summary>
internal final class RetailMerchandisingCopilotChannelOverviewDataProvider
{
    private OMInternalOrganization omInternalOrganization;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static RetailMerchandisingCopilotChannelOverviewDataProvider construct(OMInternalOrganization _omInternalOrganization)
    {
        return new RetailMerchandisingCopilotChannelOverviewDataProvider(_omInternalOrganization);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(OMInternalOrganization _omInternalOrganization)
    {
        this.omInternalOrganization = _omInternalOrganization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChannelAssortedProductsCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of assorted products in the channel.
    /// </summary>
    /// <returns>Number of assorted products.</returns>
    internal int getChannelAssortedProductsCount()
    {
        RetailChannelAssortedProductView assortedProductView;
        select count(RecId) from assortedProductView
            where assortedProductView.OMOperatingUnitId == this.omInternalOrganization.RecId;

        return assortedProductView.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChannelCatalogsCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number catalogs associated with the channel.
    /// </summary>
    /// <returns>The number of catalogs.</returns>
    internal int getChannelCatalogsCount()
    {
        RetailInternalOrganization retailInternalOrganization;
        select firstonly RecId from retailInternalOrganization
            where retailInternalOrganization.InternalOrganization == this.omInternalOrganization.RecId;

        RetailCatalogInternalOrg catalogInternalOrg;
        select count(RecId) from catalogInternalOrg
            where catalogInternalOrg.InternalOrganization == retailInternalOrganization.RecId;

        return catalogInternalOrg.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChannelAssortmentsCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of assortment associated with the channel.
    /// </summary>
    /// <returns>The number of assortments.</returns>
    internal int getChannelAssortmentsCount()
    {
        RetailAssortmentChannelLine assortmentChannelLine;
        select count(RecId) from assortmentChannelLine
            where assortmentChannelLine.OMInternalOrganizationId == this.omInternalOrganization.RecId;

        return assortmentChannelLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChannelCategoriesCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of categories associated with the channel.
    /// </summary>
    /// <returns>The number of categories.</returns>
    internal int getChannelCategoriesCount()
    {
        RetailPubRetailChannelTable pubChannelTable;
        select firstonly CategoryHierarchy, OriginId from pubChannelTable
            where pubChannelTable.OMOperatingUnitID == this.omInternalOrganization.RecId;

        RetailPubEcoResCategory pubCategory;
        select count(RecId) from pubCategory
            where pubCategory.CategoryHierarchy == pubChannelTable.CategoryHierarchy
                && pubCategory.Channel == pubChannelTable.OriginId;

        return pubCategory.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>