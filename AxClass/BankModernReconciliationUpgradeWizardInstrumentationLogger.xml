<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankModernReconciliationUpgradeWizardInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BankModernReconciliationUpgradeWizardInstrumentationLogger</c> is the logger class for the Bank Modern Reconciliation Wizard.
/// </summary>
internal final class BankModernReconciliationUpgradeWizardInstrumentationLogger
{
    private SysInstrumentationLogger instrumentationLogger;
    private BankModernReconciliationUpgradeWizardInstrumentationLoggerActivities activities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        instrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(classStr(BankModernReconciliationUpgradeWizard));
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext activityContext(SysInstrumentationActivity _activity)
    {
        return instrumentationLogger.activityContextWithCustomProperties(_activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initActivities</Name>
				<Source><![CDATA[
    internal BankModernReconciliationUpgradeWizardInstrumentationLoggerActivities initActivities()
    {
        if (!activities)
        {
            activities = BankModernReconciliationUpgradeWizardInstrumentationLoggerActivities::newFromLogger(this);
        }

        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivity activity(str _activityName)
    {
        return SysInstrumentationActivity::construct(_activityName, BankInstrumentationConstants::BankNamespace);
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoAndLogErrorCallStack</Name>
				<Source><![CDATA[
    internal void infoAndLogErrorCallStack(str _methodName, str _exceptionName, int _retryCount = 0)
    {
        str errorMessage = strFmt("@Bank:BankModernReconciliationUpgradeWizardExceptionError", _methodName, _exceptionName, _retryCount);
        Global::info(errorMessage);

        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();
        serializer.setValue("@SYS300717", int642Str(CompanyInfo::find().RecId));
        serializer.setValue("@SYS14327", errorMessage);
        serializer.setValue("@SYS65092", con2Str(xSession::xppCallStack()));

        instrumentationLogger.logInformation(serializer.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static BankModernReconciliationUpgradeWizardInstrumentationLogger createLogger()
    {
        return new BankModernReconciliationUpgradeWizardInstrumentationLogger();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>