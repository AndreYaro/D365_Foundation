<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsRebatePurgeDialog</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class that serves to delete rebates.
/// </summary>
class PdsRebatePurgeDialog extends RunBaseBatch implements BatchRetryable
{
    QueryRun                      queryRun;
    container                     packedQuery;

    #define.CurrentVersion(5)

    #LOCALMACRO.CurrentList
        packedQuery
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets application module value.
    /// </summary>
    /// <returns>Returns vendor application module value.</returns>
    public SysModule module()
    {
        return SysModule::Vend;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// substantiates the object
    /// </summary>
    protected void new()
    {
        super();
        queryRun = new QueryRun(querystr(PdsRebateTableListPage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// stores the dialog object parameters.
    /// </summary>
    /// <returns>Returns list of stored parameters.</returns>
    public container pack()
    {
        packedQuery = queryRun.pack();
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches delete process.
    /// </summary>
    public void run()
    {
        PdsRebateTable::runPurge(queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// restore the last parameters saved.
    /// </summary>
    /// <param name="_packedClass">list of stored parameters.</param>
    /// <returns>Returns if restore succeded or failed.</returns>
    public boolean unpack(container _packedClass)
    {
        Integer     version     = conpeek(_packedClass,1);
        boolean     ret = true;

        switch (version)
        {
            case #CurrentVersion  :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                ret = false;
                break;
        }

        if (packedQuery)
        {
            queryRun = new QueryRun(packedQuery);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    private void updateQuery()
    {
        QueryBuildDataSource pdsRebateTableDataSource;
        QueryBuildDataSource pdsRebateAgreementDataSource;

        pdsRebateAgreementDataSource = queryRun.query().dataSourceTable(tablenum(PdsRebateAgreement));

        if (pdsRebateAgreementDataSource)
        {
            pdsRebateAgreementDataSource.enabled(false);
        }

        pdsRebateTableDataSource = queryRun.query().dataSourceTable(tablenum(PdsRebateTable));

        if (pdsRebateTableDataSource)
        {
            SysQuery::findOrCreateRange(pdsRebateTableDataSource, fieldnum(PdsRebateTable, PdsRebateId));
            SysQuery::findOrCreateRange(pdsRebateTableDataSource, fieldnum(PdsRebateTable, PdsRebateType));
            SysQuery::findOrCreateRange(pdsRebateTableDataSource, fieldnum(PdsRebateTable, PdsProcessDate));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns an instance of the class
    /// </summary>
    /// <returns>returns instance</returns>
    public static PdsRebatePurgeDialog construct()
    {
        return new PdsRebatePurgeDialog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns class description.
    /// </summary>
    /// <returns>class description.</returns>
    public static ClassDescription description()
    {
        return "@PRO1117";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PdsRebatePurgeDialog pdsRebatePurgeDialog = PdsRebatePurgeDialog::construct();

        try
        {
            pdsRebatePurgeDialog.updateQuery();

            if (pdsRebatePurgeDialog.prompt())
            {
                if ((Box::yesNo(strfmt("@SCM:PurgeRebatesPrompt",
                        PdsRebateStatus::Processed,
                        PdsRebateStatus::Canceled),
                        DialogButton::No,
                        PdsRebatePurgeDialog::description())) == DialogButton::Yes)
                {
                    pdsRebatePurgeDialog.runOperation();

                    if (_args
                        &&  _args.caller()
                        &&  _args.caller() is FormRun
                        &&  formHasMethod(_args.caller(), identifierStr(refreshData)))
                    {
                        _args.caller().refreshData();
                    }
                }
            }
        }
        catch (Exception::Error)
        {
            warning("@PRO1150" + ' ' + "@PRO1149");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>