<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecTransSetBasedDeleteProcessorBySpec</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>SpecTransSetBasedDeleteProcessorBySpec</c> class clears tables related to marked transactions based on the specification reference
/// of the <c>SpecTrans</c> entries for a set of transactions.
/// </summary>
[Export(identifierStr(Dynamics.AX.Application.SpecTransISetBasedDeleteProcessor)),
ExportMetadata(enumStr(SpecTransSetBasedDeleteScenario), enumLiteralStr(SpecTransSetBasedDeleteScenario, DeleteBySpec))]
internal final class SpecTransSetBasedDeleteProcessorBySpec implements SpecTransISetBasedDeleteProcessor
{
    private TmpDataAreaRecIdFilter specFilter;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void init(SpecTransSetBasedDeleteProcessorParams _params)
    {
        specFilter = _params.getSpecFilter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasRecordsToDelete</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean hasRecordsToDelete()
    {
        select firstonly RecId
            from specFilter
                where specFilter.RefDataAreaId != ''
                    && specFilter.RefTableId != 0
                    && specFilter.RefRecId != 0;

        return specFilter.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSpecTransFilter</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public SysDaQueryObject getSpecTransFilter(SpecTrans _specTrans)
    {
        SysDaQueryObject specTransFilterSDQO = new SysDaQueryObject(specFilter);
        specTransFilterSDQO.joinClauseKind(SysDaJoinKind::ExistsJoin);
        specTransFilterSDQO.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(_specTrans, fieldStr(SpecTrans, SpecCompany)),
                new SysDaFieldExpression(specFilter, fieldStr(TmpDataAreaRecIdFilter, RefDataAreaId)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(_specTrans, fieldStr(SpecTrans, SpecTableId)),
                new SysDaFieldExpression(specFilter, fieldStr(TmpDataAreaRecIdFilter, RefTableId))))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(_specTrans, fieldStr(SpecTrans, SpecRecId)),
                new SysDaFieldExpression(specFilter, fieldStr(TmpDataAreaRecIdFilter, RefRecId)))));

        return specTransFilterSDQO;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>