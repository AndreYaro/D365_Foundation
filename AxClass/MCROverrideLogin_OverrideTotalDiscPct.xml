<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCROverrideLogin_OverrideTotalDiscPct</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>MCROverrideLogin_OverrideTotalDiscPct</c> class validates a user
///     is authorized to override total order discount percentages.
/// </summary>
class MCROverrideLogin_OverrideTotalDiscPct extends MCROverrideLogin
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isUserValidForOverride</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns a <c>boolean</c> value indicating if the user is authorized for overrides.
    /// </summary>
    /// <param name="_userId">
    ///     The network alias to use for the override login.
    /// </param>
    /// <param name="_totalDiscPct">
    ///     The total discount percentage for the override.
    /// </param>
    /// <returns>
    ///     true if the user is allowed to override the total order discount percentage; otherwise, false.
    /// </returns>
    public boolean isUserValidForOverride(UserId _userId, SalesEndDiscPct _totalDiscPct)
    {
        container           roles;
        int                 i;
        boolean             roleIsValid;
        int                 containerLength;

        roles = MCRAssistantUserRole::getRolesForUser(_userId, curext());
        if (conPeek(roles, 1))
        {
            containerLength = conLen(roles);
            for (i = 1;  i <= containerLength;  i++)
            {
                roleIsValid = MCRPriceOverrideMarkUpGroup::
                    isRoleValidForOverride(
                        conPeek(roles, i),
                        _totalDiscPct, fieldNum(MCRPriceOverrideMarkUpGroup, DiscPercentOverride));

                if (roleIsValid)
                {
                    return true;
                }
            }
        }
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>