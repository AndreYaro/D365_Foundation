<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayReverse_PayJournalTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rPayReverse_PayJournalTrans extends RPayReverse
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogBoxText</Name>
				<Source><![CDATA[
        protected str dialogBoxText()
    {
        return "@RUP2964";
    }

]]></Source>
			</Method>
			<Method>
				<Name>runReverse</Name>
				<Source><![CDATA[
        void runReverse()
    {
        RPayJournalTable rPayJournalTableOrig;
        RPayJournalTable rPayJournalTableNew;
        RPayJournalTrans rPayJournalTransOrig;
        RPayJournalTrans rPayJournalTransNew;
        RPayTrans        rPayTransOrig;
        NumberSeq        numberSeq;
        int              linesCount;
        Amount           linesAmount;
        RPayTrans        payTransNew;
        ;

        numberSeq     = NumberSeq::newGetNum(RPayParameters::numRefJournalID());

        rPayJournalTableOrig = RPayJournalTable::find(rPayReverseMap.JournalId);
        rPayJournalTableNew.data(rPayJournalTableOrig);
        rPayJournalTableNew.JournalId = numberSeq.num();
        rPayJournalTableNew.SessionId = 0;
        rPayJournalTableNew.insert();

        rPayJournalTransOrig = formDS.getFirst(1);
        if (!rPayJournalTransOrig)
        {
            rPayJournalTransOrig = formDS.cursor();
        }

        while (rPayJournalTransOrig)
        {
            rPayJournalTransNew.data(rPayJournalTransOrig);
            rPayJournalTransNew.JournalId = rPayJournalTableNew.JournalId;
            rPayJournalTransNew.Amount    = (rPayJournalTransOrig.Amount) * (-1);
            rPayJournalTransNew.Qty       = (rPayJournalTransOrig.Qty) * (-1);
            rPayJournalTransNew.insert();

            linesCount++;
            linesAmount += rPayJournalTransNew.Amount;

            this.createSourceTransLink(rPayJournalTransOrig, rPayJournalTransNew);

            while select rPayTransOrig
                where rPayTransOrig.SourceTableId == rPayJournalTransOrig.TableId &&
                      rPayTransOrig.SourceRecId   == rPayJournalTransOrig.RecId
            {
                this.createReversePayTrans(rPayTransOrig, rPayJournalTransNew);

                update_recordset payTransNew
                    setting PayModuleCode = rPayJournalTableNew.JournalNameId,
                            CounterUnit   = rPayJournalTableNew.JournalId
                    where payTransNew.SourceTableId == rPayJournalTransNew.TableId &&
                          payTransNew.SourceRecId   == rPayJournalTransNew.RecId;
            }

            rPayJournalTransOrig = formDS.getNext();
        }

        rPayJournalTableNew.NumOfLines = linesCount;
        rPayJournalTableNew.Amount     = linesAmount;
        rPayJournalTableNew.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayReverse_PayJournalTrans construct()
    {
        return new RPayReverse_PayJournalTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>