<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkExecuteDisplayMixedLPLineContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>WHSWorkExecuteDisplayMixedLPLineContext</c> allows to pass additional a current mixed license plate receiving line to the downstream methods from a high-level process.
/// </summary>
internal final class WHSWorkExecuteDisplayMixedLPLineContext implements System.IDisposable
{
    private static WHSWorkExecuteDisplayMixedLPLineContext instance;

    private WHSMixedLicensePlateReceiptLine mixedLPLine;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    private static WHSWorkExecuteDisplayMixedLPLineContext construct()
    {
        return new WHSWorkExecuteDisplayMixedLPLineContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    [Hookable(false)]
    internal static WHSWorkExecuteDisplayMixedLPLineContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentMixedLPLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns current value of parameter.
    /// </summary>
    /// <returns>The current mixed LP receiving line from the context.</returns>
    [Hookable(false)]
    internal static WHSMixedLicensePlateReceiptLine currentMixedLPLine()
    {
        return instance ? instance.parmMixedLPLine() : null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromMixedLPLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the class.
    /// </summary>
    /// <param name = "_mixedLPLine">The mixed LP receiving line to initialize the context with.</param>
    /// <returns>A new instance of the class <c>WHSMixedLicensePlateReceiptLine</c>.</returns>
    [Hookable(false)]
    internal static WHSWorkExecuteDisplayMixedLPLineContext newFromMixedLPLine(WHSMixedLicensePlateReceiptLine _mixedLPLine)
    {
        var context = WHSWorkExecuteDisplayMixedLPLineContext::construct();

        context.parmMixedLPLine(_mixedLPLine);

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMixedLPLine</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal WHSMixedLicensePlateReceiptLine parmMixedLPLine(WHSMixedLicensePlateReceiptLine _mixedLPLine = mixedLPLine)
    {
        mixedLPLine = _mixedLPLine;
        return mixedLPLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>