<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdStatusSysQueryRangeUtil</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProdStatusSysQueryRangeUtil</c> class is exposing methods that can be used for advanced filtering of product status in queries.
/// </summary>
public static class ProdStatusSysQueryRangeUtil
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prodStatusBetweenScheduledAndStartedUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between scheduled and started.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenScheduledAndStartedUp()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::Scheduled, ProdStatus::StartedUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenScheduledAndReportedFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between scheduled and reported as finished.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenScheduledAndReportedFinished()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::Scheduled, ProdStatus::ReportedFinished);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenCostEstimatedAndStartedUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between estimated and started.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenCostEstimatedAndStartedUp()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::CostEstimated, ProdStatus::StartedUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenStartedUpAndReportedFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between started and reported as finished.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenStartedUpAndReportedFinished()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::StartedUp, ProdStatus::ReportedFinished);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenCostEstimatedAndReportedFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between estimated and reported as finished.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenCostEstimatedAndReportedFinished()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::CostEstimated, ProdStatus::ReportedFinished);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenCreatedAndStartedUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between created and started.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenCreatedAndStartedUp()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::Created, ProdStatus::StartedUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodStatusBetweenCreatedAndReportedFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string which can be used as range for <c>ProdStatus</c> for statuses between created and reported as finished.
    /// </summary>
    [QueryRangeFunction()]
    public static str prodStatusBetweenCreatedAndReportedFinished()
    {
        return ProdStatusOrderedList::newFromOrder().retrieveQueryRangeBetween(ProdStatus::Created, ProdStatus::ReportedFinished);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>