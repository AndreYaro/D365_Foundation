<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>SMASubscriptionGenerator_Regular</Name>
  <SourceCode>
    <Declaration><![CDATA[
class SMASubscriptionGenerator_Regular extends SMASubscriptionGenerator
{
    boolean         fillout;
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>action</Name>
        <Source><![CDATA[
        public void action()
    {
        if (! SMASubscriptionCreate.parmContinues())
        {
            if (SMASubscriptionCreate.parmProjPeriodFrom() <= SMASubscriptionTable.LatestEnddate)
            {
                this.fillout(true);
            }
        }
        else
        {
            if (SMASubscriptionCreate.parmProjPeriodFrom()-1 != SMASubscriptionTable.LatestEnddate && SMASubscriptionTable.StartDate)
            {
                error(strfmt("@SYS89052", SMASubscriptionCreate.smaSubscriptionId()));
                return;
            }
        }

        super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>createTrans</Name>
        <Source><![CDATA[
        public void createTrans()
    {
        ProjPeriodLine                  projPeriodLine;
        TransDate                       fromDate;
        TransDate                       toDate;
        container                       openPeriod;
        SMASubscriptionPeriodType       periodType;
        boolean                         createOk = ! this.fillout();
        Amount                          salesPrice;
        Counter                         counter;

        while select PeriodId, PeriodFrom, PeriodTo from projPeriodLine
            where   projPeriodLine.PeriodId     == SMASubscriptionTable.invoicePeriodCode() &&
                    projPeriodLine.PeriodFrom   >= this.fromdate()                          &&
                    projPeriodLine.PeriodTo     <= this.toDate()
        {
            if (this.fillout())
            {
                createOk                = false;
                openPeriod              = SMASubscriptionTable.findPeriods(projPeriodLine.PeriodFrom, projPeriodLine.PeriodTo);

                if (openPeriod)
                {
                    for (counter = 1 ; counter <= conlen(openPeriod); counter++)
                    {
                        [fromDate, toDate]  = conpeek(openPeriod, counter);
                        periodType          = this.getPeriodType(fromDate, toDate);
                        createOk            = (periodType == SMASubscriptionPeriodType::Regular);
                    }
                }
            }
            else
            {
                fromDate = projPeriodLine.PeriodFrom;
                toDate   = projPeriodLine.PeriodTo;
            }

            if (createOk)
            {
                this.curInvoicePeriodFrom(projPeriodLine.PeriodFrom);
                this.curInvoicePeriodTo(projPeriodLine.PeriodTo);

                salesPrice = this.getSalesprice(fromDate, toDate);

                this.postTrans( salesPrice, projPeriodLine.PeriodFrom, projPeriodLine.PeriodTo);
            }
        }
    }
]]></Source>
      </Method>
      <Method>
        <Name>description</Name>
        <Source><![CDATA[
        Name description()
    {
        return "@SYS84299";
    }

]]></Source>
      </Method>
      <Method>
        <Name>fillout</Name>
        <Source><![CDATA[
        private boolean fillout(boolean _fillout = fillout)
    {
        fillout = _fillout;

        return fillout;
    }

]]></Source>
      </Method>
      <Method>
        <Name>fromdate</Name>
        <Source><![CDATA[
        public TransDate fromdate()
    {
        return SMASubscriptionCreate.parmProjPeriodFrom();
    }

]]></Source>
      </Method>
      <Method>
        <Name>run</Name>
        <Source><![CDATA[
        public void run()
    {
        super();
        this.setDate();
    }

]]></Source>
      </Method>
      <Method>
        <Name>toDate</Name>
        <Source><![CDATA[
        public TransDate toDate()
    {
        return  SMASubscriptionCreate.parmProjPeriodTo();
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>