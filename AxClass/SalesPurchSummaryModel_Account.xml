<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchSummaryModel_Account</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesPurchSummaryModel_Account extends SalesPurchSummaryModel
{
    SalesTable  summarySalesTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDataSources</Name>
				<Source><![CDATA[
    public void addDataSources(QueryRun _queryRun)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataSources_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds country specific data sources to the query during the query build process.
    /// </summary>
    /// <param name="_query">
    /// The query that is being built.
    /// </param>
    /// <remarks>
    /// This method overrides the method in the base class.
    /// </remarks>
    public void addDataSources_RU(Query _query)
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (!_query.dataSourceTable(orderSummary.tableNumSalesPurchParmTable_RU()))
            {
                QueryBuildDataSource qbds = _query.dataSourceTable(orderSummary.tableNumParentForSalesPurchParmTable_RU()).addDataSource(orderSummary.tableNumSalesPurchParmTable_RU(),
                                                                                                                                    tableid2name(orderSummary.tableNumSalesPurchParmTable_RU()));
                qbds.relations(true);
                qbds.joinMode(JoinMode::InnerJoin);
                qbds.fetchMode(QueryFetchMode::One2One);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addOrderFields_RU</Name>
				<Source><![CDATA[
    protected void addOrderFields_RU(QueryRun    _queryRun)
    {
        container sortingParmTabeleFieldIdList = orderSummary.sortingParmTabeleFieldIdList_RU();
        Counter counter;

        super(_queryRun);

        for (counter = 1; counter <= conLen(sortingParmTabeleFieldIdList); counter++)
        {
            _queryRun.query().dataSourceTable(orderSummary.tableNumSalesPurchParmTable_RU()).addOrderByField(conPeek(sortingParmTabeleFieldIdList, counter));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addOrderTableOrderByField</Name>
				<Source><![CDATA[
    protected void addOrderTableOrderByField(QueryRun _queryRun, FieldId _fieldId)
    {
        // <GBR>
        FieldId                 fieldId = _fieldId;
        TableId                 tableid = orderSummary.tableNumOrderTable();

        if ((BrazilParameters::isEnabled()
        // </GBR>
        // <GTH>
                || SalesTableExtensionTH::isExtensionEnabled()
        // </GTH>
        // <GBR>
            )
            && orderSummary.tableNumOrderTable() == tableNum(SalesTable))
        {
            // Brazil has a sales extension table.
            // The given field ID may be an extended representation of table ID + field ID
            tableid = SalesTable::getTableIdFromExt_BR(_fieldId);
            fieldId = SalesTable::getFieldIdFromExt_BR(_fieldId);
        }
        // </GBR>
        // <GFM>
        else if (orderSummary.tableNumOrderTable() == tableNum(PurchTable)
            && PurchTable::hasExensionTableEnabled())
        {
            fieldId = PurchTable::internalFieldIdToFieldId_W(_fieldId);
            tableId = PurchTable::internalFieldIdToTableId_W(_fieldId);
        }
        // </GFM>

        // <GBR>
        // Check if we are handling a field from an extension table; add it as a
        // datasource to the query if it still wasn't
        if (tableid != orderSummary.tableNumOrderTable())
        {
            QueryBuildDataSource qbds = _queryRun.query().dataSourceTable(tableid);
            if (!qbds)
            {
                qbds = _queryRun.query().dataSourceTable(orderSummary.tableNumOrderTable()).addDataSource(tableid);
                qbds.joinMode(JoinMode::OuterJoin);
                qbds.fetchMode(QueryFetchMode::One2One);
                qbds.relations(true);
            }
        }
        _queryRun.query().dataSourceTable(tableid).addOrderByField(fieldId);
        // </GBR>
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangesQuery</Name>
				<Source><![CDATA[
    QueryRun addRangesQuery(QueryRun _queryRun, Common _orderTable)
    {
        int         i;
        container selectedFieldIdList = orderSummary.orderSummaryFields().selectedFieldIdList();

        QueryRun queryRun = super(_queryRun, _orderTable);

        for (i=1;i<=conlen(selectedFieldIdList);i++)
        {
            fieldId fieldId = conpeek(selectedFieldIdList,i);
            queryRun.query().dataSourceTable(orderSummary.tableNumOrderTable()).addRange(fieldId).value(orderSummary.queryValue(_orderTable, fieldId));
        }

        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewJournal</Name>
				<Source><![CDATA[
    boolean createNewJournal(Common _orderTable)
    {
        int         i;
        boolean     createNewJournal;

        container selectedFieldIdList = this.selectedFieldList(_orderTable);

        Common summaryOrderTable = orderSummary.summaryOrderTable();

        if (orderSummary.orderId(summaryOrderTable))
        {
            createNewJournal = false;

            if (!orderSummary.parmIsPackingSlipCancel())
            {
                for (i=1;i<=conlen(selectedFieldIdList) && !createNewJournal;i++)
                {
                    fieldId fieldId = conpeek(selectedFieldIdList,i);
                    if (!orderSummary.areFieldsEqual(_orderTable, summaryOrderTable, fieldId))
                    {
                        createNewJournal = true;
                    }
                }
            }
        }
        else
        {
            createNewJournal = true;
        }

        return createNewJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the list of the selected field Ids.
    /// </summary>
    /// <param name="_orderTable">The order table associated with the current document being summarized.</param>
    /// <returns>The list of the selected field Ids.</returns>
    protected container selectedFieldList(Common _orderTable)
    {
        return orderSummary.orderSummaryFields().selectedFieldIdList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query for finding records to post.
    /// </summary>
    /// <param name="_isInBatch">
    /// A Boolean value that determines whether the <c>queryBuild</c> method is called from batch; optional.
    /// </param>
    /// <returns>
    /// The <c>QueryRun</c> object for the build query.
    /// </returns>
    QueryRun queryBuild(boolean _isInBatch = false)
    {
        int         i;

        container selectedFieldIdList = orderSummary.orderSummaryFields().selectedFieldIdList();

        QueryRun queryRun = super(_isInBatch);

        queryRun.query().dataSourceTable(orderSummary.tableNumParmTable()).addDataSource(orderSummary.tableNumOrderTable(),tableid2name(orderSummary.tableNumOrderTable()));
        queryRun.query().dataSourceTable(orderSummary.tableNumOrderTable()).relations(true);
        queryRun.query().dataSourceTable(orderSummary.tableNumOrderTable()).fetchMode(0);

        for (i=1;i<=conlen(selectedFieldIdList);i++)
        {
            fieldId fieldId = conpeek(selectedFieldIdList,i);
            this.addOrderTableOrderByField(queryRun, fieldId);
        }

        // <GEERU>
        this.addOrderFields_RU(queryRun);
        // </GEERU>

        // If we are doing sales orders in batch, we need to make sure to also order by sales order id to correct
        // summarization errors due to multithreaded inserts into <c>SalesParmTable</c>.
        if (_isInBatch && orderSummary.tableNumParmTable() == tableNum(SalesParmSubTable))
        {
            queryRun.query().dataSourceTable(orderSummary.tableNumParmTable()).addOrderByField(orderSummary.fieldNumParmTable_OrderId());
        }

        queryRun.query().dataSourceTable(orderSummary.tableNumParmTable()).addOrderByField(orderSummary.fieldNumParmTable_TableRefId());

        return queryRun;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>