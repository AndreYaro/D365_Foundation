<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CategoryTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class CategoryTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExpenseTypeWithProject</Name>
				<Source><![CDATA[
    public static boolean checkExpenseTypeWithProject(CategoryTable _categoryTable, TrvExpType _expenseType)
    {
        boolean ok = true;

        // placeholder if we want to disallow certain expense types when integrating with project
        // currently all expense types are valid

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkGlobalUsage</Name>
				<Source><![CDATA[
    public static boolean checkGlobalUsage(CategoryTable _categoryTable)
    {
        boolean ok = true;
        SharedCategory sharedCategory;

        select firstonly sharedCategory where sharedCategory.CategoryId == _categoryTable.CategoryId;
        if (sharedCategory.RecId)
        {
            if (_categoryTable.UseInExpense == NoYes::Yes)
            {
                if (sharedCategory.canBeUsedInExpense(false,NoYes::No)==NoYes::No)
                {
                    ok = checkFailed("@SYS190120");
                }
            }
            if (_categoryTable.UseInProduction == NoYes::Yes)
            {
                if (sharedCategory.canBeUsedInProduction(false,NoYes::No)==NoYes::No)
                {
                    ok = checkFailed("@SYS190121");
                }
            }
            if (_categoryTable.UseInProject == NoYes::Yes)
            {
                if (sharedCategory.canBeUsedInProject(false,NoYes::No)==NoYes::No)
                {
                    ok = checkFailed("@SYS190122");
                }
            }

            PurchLine purchLine;
            ProjPostTransView projPostTransView;
            ProjUnpostedTransView projUnpostedTransView;

            if (_categoryTable.UseInProject == NoYes::No)
            {
                select firstOnly RecId from purchLine
                    where purchLine.ProjCategoryId == _categoryTable.CategoryId
                          && purchLine.PurchStatus != PurchStatus::Invoiced;

                if (purchLine.RecId)
                {
                    ok = checkFailed("@Proj:CategoryUnmarkForPendingPO");
                }

                if (ok)
                {
                    select firstOnly RecId from projUnpostedTransView
                            where projUnpostedTransView.CategoryId == _categoryTable.CategoryId;

                    if (projUnpostedTransView.RecId)
                    {
                        ok = checkFailed("@Proj:CategoryUnmarkForUnpostedTrans");
                    }
                    else
                    {
                        select firstOnly RecId from projPostTransView
                                where projPostTransView.CategoryId == _categoryTable.CategoryId;

                        if (projPostTransView.RecId)
                        {
                            ok = checkFailed("@Proj:CategoryUnmarkForPostedTrans");
                        }
                    }
                }
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNotBothExpenseAndProduction</Name>
				<Source><![CDATA[
    public static boolean checkNotBothExpenseAndProduction(CategoryTable _categoryTable)
    {
        boolean ok = true;

        if (_categoryTable.UseInExpense && _categoryTable.UseInProduction)
        {
            ok = checkFailed("@SYS105286");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTransactionTypeWithExpense</Name>
				<Source><![CDATA[
    public static boolean checkTransactionTypeWithExpense(CategoryTable _categoryTable, ProjCategoryType _transactionType)
    {
        boolean ok = true;

        if (_categoryTable.UseInExpense && _categoryTable.UseInProject && (_transactionType != ProjCategoryType::Cost))
        {
            ok = checkFailed("@SYS105172");
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTransactionTypeWithProduction</Name>
				<Source><![CDATA[
    public static boolean checkTransactionTypeWithProduction(CategoryTable _categoryTable, ProjCategoryType _transactionType)
    {
        boolean ok = true;

        if (_categoryTable.UseInProduction && _categoryTable.UseInProject && (_transactionType != ProjCategoryType::Hour))
        {
            ok = checkFailed("@SYS105173");
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>