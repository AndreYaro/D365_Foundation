<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdJournalFormTransRelease_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProdJournalFormTransRelease_RU extends ProdJournalFormTrans
{
    ProdJournalRelease_RU                   prodJournalRelease;
    FormFunctionButtonControl               ctrlCreateCancel;
    FormFunctionButtonControl               ctrlCreateFromInventByProduct;

    boolean                                 useDefaultReleaseJournal;
    InventDimCtrl_Frm_Mov_ProdRelease_RU    inventDimFormSetupProdRelease;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowDimEdit</Name>
				<Source><![CDATA[
    protected boolean allowDimEdit()
    {
        return !prodJournalRelease.inventTable().modelGroup().MandatoryRegister &&
               !prodJournalRelease.OffsetTransRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceActivePost</Name>
				<Source><![CDATA[
    public void datasourceActivePost()
    {
        super();

        if (journalTrans_ds &&
            (( journalTrans_ds.allowEdit() &&  prodJournalRelease.OffsetTransRefRecId) ||
             (!journalTrans_ds.allowEdit() && !prodJournalRelease.OffsetTransRefRecId)))
        {
            this.initDatasourceAllow();
        }

        if (inventDim_ds)
        {
            inventDim_ds.allowEdit(this.allowDimEdit());
            inventDim_ds.active();
        }

        this.updateDesign(InventDimFormDesignUpdate::Active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceCreatePost</Name>
				<Source><![CDATA[
    public void datasourceCreatePost()
    {
        inventDim_ds.allowEdit(true);
        if (prodJournalRelease.InventDimId)
        {
            inventDim.data(InventDim::find(prodJournalRelease.InventDimId));
            inventDim_ds.setCurrent();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitPost</Name>
				<Source><![CDATA[
    public void datasourceInitPost(JournalTransMap _journalTrans)
    {
        super(_journalTrans);

        prodJournalRelease = _journalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitValuePre</Name>
				<Source><![CDATA[
    public void datasourceInitValuePre()
    {
        super();

        if (journalTableData)
        {
            prodJournalRelease.initFromProdJournalTable(journalTableData.journalTable());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceWritePost</Name>
				<Source><![CDATA[
    public void datasourceWritePost()
    {
        super();

        if (prodJournalRelease.InventDimId != inventDim.InventDimId)
        {
            inventDim.data(InventDim::find(prodJournalRelease.InventDimId));
            inventDim_ds.setCurrent();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceWritePre</Name>
				<Source><![CDATA[
    public void datasourceWritePre()
    {
        prodJournalRelease.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedItemIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedItemIdPost()
    {
        prodJournalRelease.initFromInventTable(prodJournalRelease.inventTable());
        prodJournalRelease.initFromProdReleaseKindId();
        inventDim.data(InventDim::find(prodJournalRelease.InventDimId));
        inventDim_ds.setCurrent();
        this.updateDesign(InventDimFormDesignUpdate::FieldChange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedProdIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedProdIdPost()
    {
        super();

        prodJournalRelease.initFromProdTable(prodJournalRelease.prodTable());

        if (this.allowDimEdit())
        {
            inventDim.data(InventDim::find(prodJournalRelease.InventDimId));
            inventDim_ds.allowEdit(true);
        }
        else
        {
            inventDim_ds.allowEdit(false);
        }

        this.updateDesign(InventDimFormDesignUpdate::FieldChange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedReleaseKindIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedReleaseKindIdPost()
    {
        prodJournalRelease.initFromProdReleaseKindId();
        inventDim.data(InventDim::find(prodJournalRelease.InventDimId));
        inventDim_ds.setCurrent();
        this.updateDesign(InventDimFormDesignUpdate::FieldChange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formInitPost</Name>
				<Source><![CDATA[
    public void formInitPost()
    {
        super();

        if (journalTableData)
        {
            this.updateDesign(InventDimFormDesignUpdate::Init);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initButtons</Name>
				<Source><![CDATA[
    protected void initButtons()
    {
        boolean enabled = journalTableData.blockLevel() != JournalBlockLevel::System && ! journalTableData.journalTable().Posted && useDefaultReleaseJournal;

        super();

        if (ctrlCheckJournal)
        {
            ctrlCheckJournal.enabled(useDefaultReleaseJournal && ctrlCheckJournal.enabled());
        }

        if (ctrlPostJournal)
        {
            ctrlPostJournal.enabled(useDefaultReleaseJournal && ctrlPostJournal.enabled());
        }

        if (ctrlCreateCancel)
        {
            ctrlCreateCancel.enabled(enabled);
        }

        if (ctrlCreateFromInventByProduct)
        {
            ctrlCreateFromInventByProduct.enabled(enabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDatasourceAllow</Name>
				<Source><![CDATA[
    protected void initDatasourceAllow()
    {
        super();

        journalTrans_ds.allowEdit(useDefaultReleaseJournal && journalTrans_ds.allowEdit());
        journalTrans_ds.allowCreate(useDefaultReleaseJournal && journalTrans_ds.allowCreate());

        journalTrans_ds.allowEdit(journalTrans_ds.allowEdit()             &&
                                  !prodJournalRelease.OffsetTransRefRecId &&
                                  !prodJournalRelease.isPosted());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventMovement</Name>
				<Source><![CDATA[
    public InventMovement inventMovement()
    {
        return InventMovement::construct(prodJournalRelease);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormRun _formRun)
    {
        useDefaultReleaseJournal = ProdParametersDim::findDefault().UseReleaseFromProduction_RU;
        super(_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateCancel</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCreateCancel(FormFunctionButtonControl _ctrlCreateCancel = ctrlCreateCancel)
    {
        ctrlCreateCancel = _ctrlCreateCancel;
        return ctrlCreateCancel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateFromInventByProduct</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl parmCreateFromInventByProduct(FormFunctionButtonControl _ctrlCreateFromInventByProduct = ctrlCreateFromInventByProduct)
    {
        ctrlCreateFromInventByProduct = _ctrlCreateFromInventByProduct;
        return ctrlCreateFromInventByProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignInit</Name>
				<Source><![CDATA[
    protected void updateDesignInit(InventMovement _movement)
    {
        if (!inventDimFormSetup || !inventDimFormSetupProdRelease)
        {
            inventDimFormSetupProdRelease   = InventDimCtrl_Frm_Mov_ProdRelease_RU::newFromFormMovement(formRun, _movement);
            inventDimFormSetup              = inventDimFormSetupProdRelease;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>