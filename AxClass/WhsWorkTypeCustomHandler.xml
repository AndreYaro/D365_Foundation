<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkTypeCustomHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsWorkTypeCustomHandler</c> class handles custom work type.
/// </summary>
[WhsWorkTypeFactory(WhsWorkType::Custom)]
class WhsWorkTypeCustomHandler extends WhsWorkTypeHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findWorkCreateLocationQty</Name>
				<Source><![CDATA[
    public WhsWorkCreateLocationQtyResult findWorkCreateLocationQty(WhsWorkCreateLocationQtyParameters _parameters)
    {
        WhsWorkCreateLocationQtyResult result = WhsWorkCreateLocationQtyResult::construct();

        result.locationId = '';
        result.pickUnitId = _parameters.unitId;
        result.pickQty = _parameters.qtyWork;
        result.inventPickQty = _parameters.inventQtyWork;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineStep</Name>
				<Source><![CDATA[
    public void determineStep(WhsWorkStepContext _context)
    {
        WHSWorkLine workLine = _context.workLine;
        WhsrfPassthrough pass = _context.pass;
        WhsWorkExecuteDisplay workExecuteDisplay = _context.workExecuteDisplay;
        
        pass.insert(#CustomCode, workLine.WorkTypeCustomCode);
        _context.nextForm = workExecuteDisplay.buildConfirmScreen(_context.nextForm, WHSWorkTypeCustom::find(workLine.WorkTypeCustomCode).WorkTypeCustomDesc);
        _context.step = #CustomConfirmation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeWorkLine</Name>
				<Source><![CDATA[
    public WHSWorkLine executeWorkLine(WhsWorkExecute _workExecute, WHSWorkLine _workLine, WHSUserId _userId)
    {
        return _workExecute.confirmCustomWork(_workLine.WorkId, _workLine.LineNum, _userId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>