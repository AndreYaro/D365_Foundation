<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxSalesQuotationLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxSalesQuotationLine extends AxApplicationBase implements AxInventSiteDimensionable
{
    SalesQuotationLine salesQuotationLine;

    int             axSalesQuotationTableIdx;
    int             axMCRSalesQuotationTableIdx;
    int             inventTableIdx;
    int             inventItemBarcodeIdx;
    int             projCategoryIdx;
    str             item;
    str             county;
    str             state;
    int             priceParametersIdx;
    int             priceDisc_PriceIdx;
    int             priceDisc_LineDiscIdx;
    int             custExternalItemDescriptionIdx;
    int             zipCodeIdx;
    AxInventDim     axInventDim;
    LineNum         lineNum;

    boolean         useAlternativeItem;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    public AxInventDim_SalesQuotationLine axInventDim(AxInventDim_SalesQuotationLine _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axSalesQuotationTable</Name>
				<Source><![CDATA[
    public AxSalesQuotationTable axSalesQuotationTable(AxSalesQuotationTable _axSalesQuotationTable = null)
    {
        AxSalesQuotationTable axSalesQuotationTable;

        if (!axSalesQuotationTableIdx)
        {
            axSalesQuotationTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axSalesQuotationTable))
        {
            this.classCacheInsert(axSalesQuotationTableIdx, _axSalesQuotationTable);
            axSalesQuotationTable = _axSalesQuotationTable;
        }
        else
        {
            if (this.classCacheExist(axSalesQuotationTableIdx))
            {
                axSalesQuotationTable = this.classCacheLookup(axSalesQuotationTableIdx);
            }
            else
            {
                axSalesQuotationTable = AxSalesQuotationTable::newSalesQuotationTable(SalesQuotationTable::find(this.parmQuotationId()));

                this.classCacheInsert(axSalesQuotationTableIdx, axSalesQuotationTable);
            }
        }

        return axSalesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateRelatedRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates records that relate to the data in the <c>AxBC</c> class.
    /// </summary>
    protected void createOrUpdateRelatedRecords()
    {
        if (this.isSetMethodsCalledFromSave())
        {
            InventMovement::bufferSetRemainQty(this.currentRecord());

            this.setAxSalesQuotationTableFields();
            if (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, MarkupGroup)) || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, CustAccount)))
            {
                this.salesQuotationLine().createMarkupTrans(this.axSalesQuotationTable().salesQuotationTable()
                                                            ,true
                                                            );
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _salesQuotationLine = salesQuotationLine)
    {
        if (!prmisDefault(_salesQuotationLine))
        {
            super(_salesQuotationLine);
            salesQuotationLine = _salesQuotationLine as SalesQuotationLine;
        }
        else
        {
            super();
        }

        return salesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custExternalItemDescription</Name>
				<Source><![CDATA[
    public CustExternalItemDescription custExternalItemDescription(CustExternalItemDescription _custExternalItemDescription = null)
    {
        CustExternalItemDescription     custExternalItemDescription;

        if (!custExternalItemDescriptionIdx)
        {
            custExternalItemDescriptionIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_custExternalItemDescription))
        {
            this.classCacheInsert(custExternalItemDescriptionIdx, _custExternalItemDescription);
            custExternalItemDescription = _custExternalItemDescription;
        }
        else
        {
            if (this.classCacheExist(custExternalItemDescriptionIdx))
            {
                custExternalItemDescription = this.classCacheLookup(custExternalItemDescriptionIdx);
            }
            else
            {
                custExternalItemDescription = new CustExternalItemDescription(this.parmItemId(), this.axInventDim().inventDim(), this.axSalesQuotationTable().parmCustAccount());
                custExternalItemDescription.findExternalDescription();

                this.classCacheInsert(custExternalItemDescriptionIdx, custExternalItemDescription);
            }
        }

        return custExternalItemDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doSave</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves or updates a sales quotation order line record.
    /// </summary>
    /// <remarks>
    ///    The <c>dosave</c> method is overridden so alternative item replacement can be used on sales
    ///    quotation order lines.
    /// </remarks>
    public void doSave()
    {
        ttsBegin;

        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        if (defaulting)
        {
            this.setTableFields();

            this.setDimensionEntitySpecifiers();
        }

        this.createOrUpdateRelatedRecords();

        this.setAlternativeItem();

        this.validateFields();

        this.validateWrite();

        this.write();

        this.resetInternalValues();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an empty record for the table that the <c>AxBC</c> class relates to.
    /// </summary>
    /// <returns>
    /// An empty record from the table that the <c>AxBC</c> class relates to.
    /// </returns>
    protected Common emptyRecord()
    {
        SalesQuotationLine localSalesQuotationLine;

        return localSalesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throws an error if an <c>inventDim</c> section was missing in an XML string.
    /// </summary>
    /// <remarks>
    /// The <c>end</c> method is used for processing incoming documents and is run before popping an
    /// <c>AxBC</c> object off the stack. The method is needed because <c>AxBC</c> classes have
    /// <c>AxInventDim</c> as a child. Therefore it must throw an error if no inventory dimension section
    /// has been encountered in the XML. The method is intended for internal use only and should not be
    /// called through the interface.
    /// </remarks>
    public void end()
    {
        super();
        lineNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getKeyFields</Name>
				<Source><![CDATA[
    public List getKeyFields()
    {
        List    fieldIdList  = new List(Types::Integer);

        fieldIdList.addEnd(fieldNum(SalesQuotationLine,RecId));

        return fieldIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationLine,parmShippingDateRequested));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesQuotationLine,parmCurrencyCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventItemBarcodeRecord</Name>
				<Source><![CDATA[
    public InventItemBarcode inventItemBarcodeRecord(InventItemBarcode _inventItemBarcode = null)
    {
        InventItemBarcode   inventItemBarcode;

        if (!inventItemBarcodeIdx)
        {
            inventItemBarcodeIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_inventItemBarcode))
        {
            this.tableCacheInsert(inventItemBarcodeIdx, _inventItemBarcode);
            inventItemBarcode = _inventItemBarcode;
        }
        else
        {
            if (this.tableCacheExist(inventItemBarcodeIdx))
            {
                inventItemBarcode = this.tableCacheLookup(inventItemBarcodeIdx);
            }
            else
            {
                this.setInventItemBarcodeRecordFields();
                inventItemBarcode = InventItemBarcode::findSalesBarcodeDimension(this.parmItemId(), InventDim::find(this.parmInventDimId()));
                this.tableCacheInsert(inventItemBarcodeIdx, inventItemBarcode);
            }
        }

        return inventItemBarcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.salesQuotationLine(), this.axInventDim().inventDim());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTableRecord</Name>
				<Source><![CDATA[
    public InventTable inventTableRecord(InventTable _inventTable = null)
    {
        InventTable   inventTable;

        if (!inventTableIdx)
        {
            inventTableIdx          = this.nextCacheIdx();
        }

        if (!prmisDefault(_inventTable))
        {
            this.tableCacheInsert(inventTableIdx, _inventTable);
            inventTable = _inventTable;
        }
        else
        {
            if (this.tableCacheExist(inventTableIdx))
            {
                inventTable = this.tableCacheLookup(inventTableIdx);
            }
            else
            {
                this.setInventTableRecordFields();
                inventTable = InventTable::find(this.parmItemId());
                this.tableCacheInsert(inventTableIdx, inventTable);
            }
        }

        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAxSalesQuotationTableFieldsSet</Name>
				<Source><![CDATA[
    public boolean isAxSalesQuotationTableFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, QuotationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustExternalItemDescriptionFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isCustExternalItemDescriptionFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, ItemId))                             ||
           this.axInventDim().isFieldSet(fieldNum(InventDim, ConfigId))             ||
           this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, CustAccount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventItemBarcodeRecordFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isInventItemBarcodeRecordFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTableRecordFieldsSet</Name>
				<Source><![CDATA[
    public boolean isInventTableRecordFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, ItemId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_LineDiscFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_LineDiscFieldsSet()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        return this.isFieldSet(fieldNum(SalesQuotationLine, ItemId))                                                     ||
           this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit))                                                  ||
           this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty))                                                   ||
           (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, CustAccount))  &&
            this.priceParametersRecord().isSalesLineDiscCustAccountActive())                                ||
           (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, LineDisc))     &&
            this.priceParametersRecord().isSalesLineDiscGroupActive())                                      ||
           this.isInventTableRecordFieldsSet()                                                              ||
           (this.isInventTableRecordFieldsSet()             &&
            this.inventTableRecord().salesLineDisc() != localSalesQuotationLine.inventTableRecord().salesLineDisc())  ||
           (this.axInventDim().isSalesPriceDiscFieldsSet(this.inventTableRecord()) &&
            this.salesQuotationLine().LineDeliveryType != LineDeliveryType::DeliveryLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPriceDisc_LineDiscParamsSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new <c>PriceDisc_LineDisc</c> object and sets parameters.
    /// </summary>
    /// <returns>
    /// The initialized <c>PriceDisc_LineDisc</c> record.
    /// </returns>
    protected PriceDisc_LineDisc initPriceDisc_LineDiscParamsSet()
    {
        PriceDisc_LineDisc priceDisc_LineDisc = new PriceDisc_LineDisc();

        this.setPriceDisc_LineDiscFields();

        this.setPriceDisc_LineDiscParams(priceDisc_LineDisc);

        return priceDisc_LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPriceDisc_PriceParamsSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new <c>PriceDisc_Price</c> object and sets parameters.
    /// </summary>
    /// <returns>
    /// The initialized <c>PriceDisc_Price</c> record.
    /// </returns>
    protected PriceDisc_Price initPriceDisc_PriceParamsSet()
    {
        PriceDisc_Price priceDisc_Price = new PriceDisc_Price();

        this.setPriceDisc_PriceFields();

        this.setPriceDisc_PriceParams(priceDisc_Price);
        
        return priceDisc_Price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPriceDisc_PriceFieldsSet</Name>
				<Source><![CDATA[
    protected boolean isPriceDisc_PriceFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, ItemId))                                             ||
           this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit))                                          ||
           this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty))                                           ||
           this.isInventTableRecordFieldsSet()                                                      ||
           (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, CustAccount))  &&
            this.priceParametersRecord().isSalesPriceCustAccountActive())                           ||
           (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, PriceGroupId)) &&
            this.priceParametersRecord().isSalesPriceGroupActive())                                ||
           (this.axInventDim().isSalesPriceDiscFieldsSet(this.inventTableRecord()) &&
            this.salesQuotationLine().LineDeliveryType != LineDeliveryType::DeliveryLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.axInventDim().isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrAXMCRSalesQuotationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>AxMCRSalesQuotationTable</c> class.
    /// </summary>
    /// <param name="_axMCRSalesQuotationTable">
    /// The <c>AxMCRSalesQuotationTable</c> parameter used to initialize the class; optional.
    /// </param>
    /// <returns>
    /// The newly instantiated <c>AxMCRSalesQuotationTable</c> class.
    /// </returns>
    public AxMCRSalesQuotationTable mcrAXMCRSalesQuotationTable(AxMCRSalesQuotationTable _axMCRSalesQuotationTable = null)
    {
        AxMCRSalesQuotationTable axMCRSalesQuotationTable;

        if (!axMCRSalesQuotationTableIdx)
        {
            axMCRSalesQuotationTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axMCRSalesQuotationTable))
        {
            this.classCacheInsert(axMCRSalesQuotationTableIdx, _axMCRSalesQuotationTable);
            axMCRSalesQuotationTable = _axMCRSalesQuotationTable;
        }
        else
        {
            if (this.classCacheExist(axMCRSalesQuotationTableIdx))
            {
                axMCRSalesQuotationTable = this.classCacheLookup(axMCRSalesQuotationTableIdx);
            }
            else
            {
                axMCRSalesQuotationTable = AxMCRSalesQuotationTable::newMCRSalesQuotationTable(SalesQuotationTable::find(this.parmQuotationId()).mcrSalesQuotationTable());

                this.classCacheInsert(axMCRSalesQuotationTableIdx, axMCRSalesQuotationTable);
            }
        }

        return axMCRSalesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        axInventDim = AxInventDim_SalesQuotationLine::newAxSalesQuotationLine(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountType</Name>
				<Source><![CDATA[
    public LedgerJournalACType parmAccountType(LedgerJournalACType _accountType = LedgerJournalACType::Ledger)
    {
        if (!prmisDefault(_accountType))
        {
            this.setField(fieldNum(SalesQuotationLine, AccountType), _accountType);
        }

        return salesQuotationLine.AccountType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(SalesQuotationLine, AddressRefRecId), _addressRefRecId);
        }

        return salesQuotationLine.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(SalesQuotationLine, AddressRefTableId), _addressRefTableId);
        }

        return salesQuotationLine.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBarCode</Name>
				<Source><![CDATA[
    public SalesBarCode parmBarCode(SalesBarCode _barCode = '')
    {
        if (!prmisDefault(_barCode))
        {
            this.setField(fieldNum(SalesQuotationLine, BarCode), _barCode);
        }

        return salesQuotationLine.BarCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBarCodeType</Name>
				<Source><![CDATA[
    public BarcodeSetupId parmBarCodeType(BarcodeSetupId _barCodeType = '')
    {
        if (!prmisDefault(_barCodeType))
        {
            this.setField(fieldNum(SalesQuotationLine, BarCodeType), _barCodeType);
        }

        return salesQuotationLine.BarCodeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTable = 0)
    {
        if (!prmisDefault(_cfopTable))
        {
            this.setField(fieldNum(SalesQuotationLine, cfopTable_BR), _cfopTable);
        }

        return salesQuotationLine.cfopTable_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea parmCompany(SelectableDataArea _company = '')
    {
        if (!prmisDefault(_company))
        {
            this.setField(fieldNum(SalesQuotationLine, Company), _company);
        }

        return salesQuotationLine.Company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmedDlv</Name>
				<Source><![CDATA[
    public SalesShippingDate parmConfirmedDlv(SalesShippingDate _confirmedDlv = dateNull())
    {
        if (!prmisDefault(_confirmedDlv))
        {
            this.setField(fieldNum(SalesQuotationLine, ConfirmedDlv), _confirmedDlv);
        }

        return salesQuotationLine.ConfirmedDlv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostPrice</Name>
				<Source><![CDATA[
    public ReturnCostPrice parmCostPrice(ReturnCostPrice _costPrice = 0)
    {
        if (!prmisDefault(_costPrice))
        {
            this.setField(fieldNum(SalesQuotationLine, CostPrice), _costPrice);
        }

        return salesQuotationLine.CostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest   _countyOrigDest = '')
    {
        if (!prmisDefault(_countyOrigDest))
        {
            this.setField(fieldNum(SalesQuotationLine, CountyOrigDest), _countyOrigDest);
        }

        return salesQuotationLine.CountyOrigDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(SalesQuotationLine, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(salesQuotationLine.CurrencyCode);
        }
        return salesQuotationLine.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    public str parmCustAccount(str _custAccount = '')
    {
        DictField   dictField;

        if (!prmisDefault(_custAccount))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,CustAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_custAccount,dictField,this.mapPolicy().xMLMapCustAccount());
                _custAccount = this.axCustAccount(_custAccount);
            }
            else
            {
                this.validateInboundString(_custAccount,dictField);
            }
            this.setField(fieldNum(SalesQuotationLine, CustAccount), _custAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(salesQuotationLine.CustAccount);
        }
        return salesQuotationLine.CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerRef</Name>
				<Source><![CDATA[
    public CustRefLine parmCustomerRef(CustRefLine _customerRef = '')
    {
        if (!prmisDefault(_customerRef))
        {
            this.setField(fieldNum(SalesQuotationLine, CustomerRef), _customerRef);
        }

        return salesQuotationLine.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.setField(fieldNum(SalesQuotationLine, DefaultDimension), _defaultDimension);
        }

        return salesQuotationLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateControlType</Name>
				<Source><![CDATA[
    public SalesDeliveryDateControlType parmDeliveryDateControlType(SalesDeliveryDateControlType _deliveryDateControlType = SalesDeliveryDateControlType::None)
    {
        if (!prmisDefault(_deliveryDateControlType))
        {
            this.setField(fieldNum(SalesQuotationLine, DeliveryDateControlType), _deliveryDateControlType);
        }

        return salesQuotationLine.DeliveryDateControlType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public CustName parmDeliveryName(CustName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(SalesQuotationLine, DeliveryName), _deliveryName);
        }

        return salesQuotationLine.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(SalesQuotationLine, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return salesQuotationLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvMode</Name>
				<Source><![CDATA[
    public str parmDlvMode(str _dlvMode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvMode))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,DlvMode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvMode,dictField,this.mapPolicy().xMLMapDlvMode());
                _dlvMode = this.axDlvModeId(_dlvMode);
            }
            else
            {
                this.validateInboundString(_dlvMode,dictField);
            }
            this.setField(fieldNum(SalesQuotationLine, DlvMode), _dlvMode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvModeId(salesQuotationLine.DlvMode);
        }
        return salesQuotationLine.DlvMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
    public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(SalesQuotationLine), fieldNum(SalesQuotationLine, DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm, dictField, this.mapPolicy().xMLMapDlvTerm());
                _dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm, dictField);
            }

            this.setField(fieldNum(SalesQuotationLine, DlvTerm), _dlvTerm);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(SalesQuotationLine.DlvTerm);
        }
        return SalesQuotationLine.DlvTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    public TransDate parmEndDate(TransDate _endDate = dateNull())
    {
        if (!prmisDefault(_endDate))
        {
            this.setField(fieldNum(SalesQuotationLine, EndDate), _endDate);
        }

        return salesQuotationLine.EndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    public SalesExternalItemId parmExternalItemId(SalesExternalItemId _externalItemId = '')
    {
        if (!prmisDefault(_externalItemId))
        {
            this.setField(fieldNum(SalesQuotationLine, ExternalItemId), _externalItemId);
        }

        return salesQuotationLine.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDeliverNow</Name>
				<Source><![CDATA[
    public InventQty parmInventDeliverNow(InventQty _inventDeliverNow = 0)
    {
        if (!prmisDefault(_inventDeliverNow))
        {
            this.setField(fieldNum(SalesQuotationLine, InventDeliverNow), _inventDeliverNow);
        }

        return salesQuotationLine.InventDeliverNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(SalesQuotationLine, InventDimId), _inventDimId);
        }

        return salesQuotationLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefId</Name>
				<Source><![CDATA[
    public InventRefId parmInventRefId(InventRefId _inventRefId = '')
    {
        if (!prmisDefault(_inventRefId))
        {
            this.setField(fieldNum(SalesQuotationLine, InventRefId), _inventRefId);
        }

        return salesQuotationLine.InventRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefTransId</Name>
				<Source><![CDATA[
    public InventRefTransId parmInventRefTransId(InventRefTransId _inventRefTransId = '')
    {
        if (!prmisDefault(_inventRefTransId))
        {
            this.setField(fieldNum(SalesQuotationLine, InventRefTransId), _inventRefTransId);
        }

        return salesQuotationLine.InventRefTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventRefType</Name>
				<Source><![CDATA[
    public InventRefType parmInventRefType(InventRefType _inventRefType = InventRefType::None)
    {
        if (!prmisDefault(_inventRefType))
        {
            this.setField(fieldNum(SalesQuotationLine, InventRefType), _inventRefType);
        }

        return salesQuotationLine.InventRefType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public TradeInventTransId parmInventTransId(TradeInventTransId _inventTransId = '')
    {
        if (!prmisDefault(_inventTransId))
        {
            this.setField(fieldNum(SalesQuotationLine, InventTransId), _inventTransId);
        }

        return salesQuotationLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemBOMId</Name>
				<Source><![CDATA[
    public ItemBOMId parmItemBOMId(ItemBOMId _itemBOMId = '')
    {
        if (!prmisDefault(_itemBOMId))
        {
            this.setField(fieldNum(SalesQuotationLine, ItemBOMId), _itemBOMId);
        }

        return salesQuotationLine.ItemBOMId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public str parmItemId(str _itemId = '')
    {
        DictField   dictField;

        if (!prmisDefault(_itemId))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                item = _itemId;
            }

            this.setField(fieldNum(SalesQuotationLine, ItemId), _itemId);
        }

        if (this.valueMappingOutbound())
        {
            return conPeek(this.axSalesItemId(salesQuotationLine.CustAccount,salesQuotationLine.ItemId,salesQuotationLine.inventDim()),1);
        }
        return salesQuotationLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemRouteId</Name>
				<Source><![CDATA[
    public ItemRouteId parmItemRouteId(ItemRouteId _itemRouteId = '')
    {
        if (!prmisDefault(_itemRouteId))
        {
            this.setField(fieldNum(SalesQuotationLine, ItemRouteId), _itemRouteId);
        }

        return salesQuotationLine.ItemRouteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount parmLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension = 0)
    {
        if (!prmisDefault(_ledgerDimension))
        {
            this.setField(fieldNum(SalesQuotationLine, LedgerDimension), _ledgerDimension);
        }

        return salesQuotationLine.LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public SalesLineAmount parmLineAmount(SalesLineAmount _lineAmount = 0)
    {
        if (!prmisDefault(_lineAmount))
        {
            this.setField(fieldNum(SalesQuotationLine, LineAmount), _lineAmount);
        }

        return salesQuotationLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDeliveryType</Name>
				<Source><![CDATA[
    public LineDeliveryType parmLineDeliveryType(LineDeliveryType _lineDeliveryType = LineDeliveryType::OrderLine)
    {
        if (!prmisDefault(_lineDeliveryType))
        {
            this.setField(fieldNum(SalesQuotationLine, LineDeliveryType), _lineDeliveryType);
        }

        return salesQuotationLine.LineDeliveryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public SalesLineDisc parmLineDisc(SalesLineDisc _lineDisc = 0)
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(SalesQuotationLine, LineDisc), _lineDisc);
        }

        return salesQuotationLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineHeader</Name>
				<Source><![CDATA[
    public ItemFreeTxt parmLineHeader(ItemFreeTxt _lineHeader = '')
    {
        if (!prmisDefault(_lineHeader))
        {
            this.setField(fieldNum(SalesQuotationLine, LineHeader), _lineHeader);
        }

        return salesQuotationLine.LineHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(SalesQuotationLine, LineNum), _lineNum);
        }

        return salesQuotationLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    public SalesLinePercent parmLinePercent(SalesLinePercent _linePercent = 0)
    {
        if (!prmisDefault(_linePercent))
        {
            this.setField(fieldNum(SalesQuotationLine, LinePercent), _linePercent);
        }

        return salesQuotationLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePropertyId</Name>
				<Source><![CDATA[
    public ProjLinePropertyId parmLinePropertyId(ProjLinePropertyId _linePropertyId = '')
    {
        if (!prmisDefault(_linePropertyId))
        {
            this.setField(fieldNum(SalesQuotationLine, LinePropertyId), _linePropertyId);
        }

        return salesQuotationLine.LinePropertyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManualEntryChangepolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicyManual parmManualEntryChangepolicy(PriceDiscPolicyManual _manualEntryChangepolicy = 0)
    {
        if (!prmisDefault(_manualEntryChangepolicy))
        {
            this.setField(fieldNum(SalesQuotationLine, ManualEntryChangepolicy), _manualEntryChangepolicy);
        }

        return salesQuotationLine.ManualEntryChangepolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCROrderLine2PriceHistoryRef</Name>
				<Source><![CDATA[
    public MCROrderLinePriceHistoryReference parmMCROrderLine2PriceHistoryRef(MCROrderLinePriceHistoryReference _mcrOrderLine2PriceHistoryRef = 0)
    {
        if (!prmisDefault(_mcrOrderLine2PriceHistoryRef))
        {
            this.setField(fieldNum(SalesQuotationLine, mcrOrderLine2PriceHistoryRef), _mcrOrderLine2PriceHistoryRef);
        }

        return salesQuotationLine.MCROrderLine2PriceHistoryRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    public SalesMultiLnDisc parmMultiLnDisc(SalesMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisDefault(_multiLnDisc))
        {
            this.setField(fieldNum(SalesQuotationLine, MultiLnDisc), _multiLnDisc);
        }

        return salesQuotationLine.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    public SalesMultiLnPercent parmMultiLnPercent(SalesMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisDefault(_multiLnPercent))
        {
            this.setField(fieldNum(SalesQuotationLine, MultiLnPercent), _multiLnPercent);
        }

        return salesQuotationLine.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisDefault(_name))
        {
            this.setField(fieldNum(SalesQuotationLine, Name), _name);
        }

        return salesQuotationLine.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewSalesPrice</Name>
				<Source><![CDATA[
    public SalesPrice parmNewSalesPrice(SalesPrice _newSalesPrice = 0)
    {
        if (!prmisDefault(_newSalesPrice))
        {
            this.setField(fieldNum(SalesQuotationLine, NewSalesPrice), _newSalesPrice);
        }

        return salesQuotationLine.NewSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewTotalContributionRatio</Name>
				<Source><![CDATA[
    public Price parmNewTotalContributionRatio(Price _newTotalContributionRatio = 0)
    {
        if (!prmisDefault(_newTotalContributionRatio))
        {
            this.setField(fieldNum(SalesQuotationLine, NewTotalContributionRatio), _newTotalContributionRatio);
        }

        return salesQuotationLine.NewTotalContributionRatio;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetAccountType</Name>
				<Source><![CDATA[
    public LedgerJournalACType parmOffsetAccountType(LedgerJournalACType _offsetAccountType = LedgerJournalACType::Ledger)
    {
        if (!prmisDefault(_offsetAccountType))
        {
            this.setField(fieldNum(SalesQuotationLine, OffsetAccountType), _offsetAccountType);
        }

        return salesQuotationLine.OffsetAccountType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea parmOffsetCompany(SelectableDataArea _offsetCompany = '')
    {
        if (!prmisDefault(_offsetCompany))
        {
            this.setField(fieldNum(SalesQuotationLine, OffsetCompany), _offsetCompany);
        }

        return salesQuotationLine.OffsetCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount parmOffsetLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension = 0)
    {
        if (!prmisDefault(_ledgerDimension))
        {
            this.setField(fieldNum(SalesQuotationLine, OffsetLedgerDimension), _ledgerDimension);
        }

        return salesQuotationLine.OffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetTxt</Name>
				<Source><![CDATA[
    public LedgerJournalTransTxt parmOffsetTxt(LedgerJournalTransTxt _offsetTxt = '')
    {
        if (!prmisDefault(_offsetTxt))
        {
            this.setField(fieldNum(SalesQuotationLine, OffsetTxt), _offsetTxt);
        }

        return salesQuotationLine.OffsetTxt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigCostPrice</Name>
				<Source><![CDATA[
    public CostPrice parmOrigCostPrice(CostPrice _origCostPrice = 0)
    {
        if (!prmisDefault(_origCostPrice))
        {
            this.setField(fieldNum(SalesQuotationLine, OrigCostPrice), _origCostPrice);
        }

        return salesQuotationLine.OrigCostPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverDeliveryPct</Name>
				<Source><![CDATA[
    public SalesOverDeliveryPct parmOverDeliveryPct(SalesOverDeliveryPct _overDeliveryPct = 0)
    {
        if (!prmisDefault(_overDeliveryPct))
        {
            this.setField(fieldNum(SalesQuotationLine, OverDeliveryPct), _overDeliveryPct);
        }

        return salesQuotationLine.OverDeliveryPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackingUnit</Name>
				<Source><![CDATA[
    public str parmPackingUnit(str _packingUnit = '')
    {
        DictField   dictField;

        if (!prmisDefault(_packingUnit))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,PackingUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_packingUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                _packingUnit = this.axUnitOfMeasureSymbol(_packingUnit);
            }
            else
            {
                this.validateInboundString(_packingUnit,dictField);
            }
            this.setField(fieldNum(SalesQuotationLine, PackingUnit), _packingUnit);
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(salesQuotationLine.PackingUnit);
        }
        return salesQuotationLine.PackingUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackingUnitQty</Name>
				<Source><![CDATA[
    public InventPackingUnitQty parmPackingUnitQty(InventPackingUnitQty _packingUnitQty = 0)
    {
        if (!prmisDefault(_packingUnitQty))
        {
            this.setField(fieldNum(SalesQuotationLine, PackingUnitQty), _packingUnitQty);
        }

        return salesQuotationLine.PackingUnitQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWDeliverNow</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the SalesQuotationLine
    /// PdsCWDeliverNow field value.
    /// </summary>
    /// <param name="_pdsCWDeliverNow">CW deliver now</param>
    /// <returns>CW deliver now</returns>
    public PdsCWInventQty parmPdsCWDeliverNow(PdsCWInventQty _pdsCWDeliverNow = 0)
    {
        if (!prmisDefault(_pdsCWDeliverNow))
        {
            this.setField(
                fieldNum(SalesQuotationLine, PdsCWDeliverNow),
                _pdsCWDeliverNow);
        }

        return salesQuotationLine.PdsCWDeliverNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the SalesQuotationLine
    /// PdsCWQty field value.
    /// </summary>
    /// <param name="_pdsCWQty">CW quantity</param>
    /// <returns>CW quantitiy</returns>
    public PdsCWInventQty parmPdsCWQty(PdsCWInventQty _pdsCWQty = 0)
    {
        if (!prmisDefault(_pdsCWQty))
        {
            this.setField(fieldNum(SalesQuotationLine, PdsCWQty), _pdsCWQty);
        }

        return salesQuotationLine.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainInventPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the SalesQuotationLine
    /// PdsCWRemainInventPhysical field value.
    /// </summary>
    /// <param name="_cwRemainInventPhysical">CW remain invent physical</param>
    /// <returns>CW remain invent physcical</returns>
    public PdsCWInventQty parmPdsCWRemainInventPhysical(PdsCWInventQty  _cwRemainInventPhysical = 0)
    {
        if (!prmisDefault(_cwRemainInventPhysical))
        {
            this.setField(fieldNum(SalesQuotationLine, PdsCWRemainInventPhysical), _cwRemainInventPhysical);
        }

        return salesQuotationLine.PdsCWRemainInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisDefault(_port))
        {
            this.setField(fieldNum(SalesQuotationLine, Port), _port);
        }

        return salesQuotationLine.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceCalcId</Name>
				<Source><![CDATA[
    public PriceCalcId parmPriceCalcId(PriceCalcId _priceCalcId = '')
    {
        if (!prmisDefault(_priceCalcId))
        {
            this.setField(fieldNum(SalesQuotationLine, PriceCalcId), _priceCalcId);
        }

        return salesQuotationLine.PriceCalcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(SalesQuotationLine, PriceUnit), _priceUnit);
        }

        return salesQuotationLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjActivity</Name>
				<Source><![CDATA[
    public smmActivityNumber parmProjActivity(smmActivityNumber _projActivity = '')
    {
        if (!prmisDefault(_projActivity))
        {
            this.setField(fieldNum(SalesQuotationLine, ProjActivity), _projActivity);
        }

        return salesQuotationLine.ProjActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjCategoryId</Name>
				<Source><![CDATA[
    public QuotationProjCategory parmProjCategoryId(QuotationProjCategory _projCategoryId = '')
    {
        if (!prmisDefault(_projCategoryId))
        {
            this.setField(fieldNum(SalesQuotationLine, ProjCategoryId), _projCategoryId);
        }

        return salesQuotationLine.ProjCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjDescription</Name>
				<Source><![CDATA[
    public Description parmProjDescription(Description _projDescription = '')
    {
        if (!prmisDefault(_projDescription))
        {
            this.setField(fieldNum(SalesQuotationLine, ProjDescription), _projDescription);
        }

        return salesQuotationLine.ProjDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjTransType</Name>
				<Source><![CDATA[
    public QuotationProjTransType parmProjTransType(QuotationProjTransType _projTransType = QuotationProjTransType::None)
    {
        if (!prmisDefault(_projTransType))
        {
            this.setField(fieldNum(SalesQuotationLine, ProjTransType), _projTransType);
        }

        return salesQuotationLine.ProjTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPSARefRecId</Name>
				<Source><![CDATA[
    public RefRecId parmPSARefRecId(RefRecId _refRecId = 0)
    {
        if (!prmisDefault(_refRecId))
        {
            this.setField(fieldNum(SalesQuotationLine, psaRefRecId), _refRecId);
        }

        return salesQuotationLine.psaRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyOrdered</Name>
				<Source><![CDATA[
    public InventQty parmQtyOrdered(InventQty _qtyOrdered = 0)
    {
        if (!prmisDefault(_qtyOrdered))
        {
            this.setField(fieldNum(SalesQuotationLine, QtyOrdered), _qtyOrdered);
        }

        return salesQuotationLine.QtyOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationId</Name>
				<Source><![CDATA[
    public QuotationIdBase parmQuotationId(QuotationIdBase _quotationId = '')
    {
        if (!prmisDefault(_quotationId))
        {
            this.setField(fieldNum(SalesQuotationLine, QuotationId), _quotationId);
        }

        return salesQuotationLine.QuotationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationStatus</Name>
				<Source><![CDATA[
    public SalesQuotationStatus parmQuotationStatus(SalesQuotationStatus _quotationStatus = SalesQuotationStatus::Created)
    {
        if (!prmisDefault(_quotationStatus))
        {
            this.setField(fieldNum(SalesQuotationLine, QuotationStatus), _quotationStatus);
        }

        return salesQuotationLine.QuotationStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationType</Name>
				<Source><![CDATA[
    public QuotationType parmQuotationType(QuotationType _quotationType = QuotationType::Sales)
    {
        if (!prmisDefault(_quotationType))
        {
            this.setField(fieldNum(SalesQuotationLine, QuotationType), _quotationType);
        }

        return salesQuotationLine.QuotationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDateRequested</Name>
				<Source><![CDATA[
    public SalesReceiptDateRequested parmReceiptDateRequested(SalesReceiptDateRequested _receiptDateRequested = dateNull())
    {
        if (!prmisDefault(_receiptDateRequested))
        {
            this.setField(fieldNum(SalesQuotationLine, ReceiptDateRequested), _receiptDateRequested);
        }

        return salesQuotationLine.ReceiptDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainInventPhysical</Name>
				<Source><![CDATA[
    public InventQty parmRemainInventPhysical(InventQty _remainInventPhysical = 0)
    {
        if (!prmisDefault(_remainInventPhysical))
        {
            this.setField(fieldNum(SalesQuotationLine, RemainInventPhysical), _remainInventPhysical);
        }

        return salesQuotationLine.RemainInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainSalesFinancial</Name>
				<Source><![CDATA[
    public SalesQty parmRemainSalesFinancial(SalesQty _remainSalesFinancial = 0)
    {
        if (!prmisDefault(_remainSalesFinancial))
        {
            this.setField(fieldNum(SalesQuotationLine, RemainSalesFinancial), _remainSalesFinancial);
        }

        return salesQuotationLine.RemainSalesFinancial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainSalesPhysical</Name>
				<Source><![CDATA[
    public SalesQty parmRemainSalesPhysical(SalesQty _remainSalesPhysical = 0)
    {
        if (!prmisDefault(_remainSalesPhysical))
        {
            this.setField(fieldNum(SalesQuotationLine, RemainSalesPhysical), _remainSalesPhysical);
        }

        return salesQuotationLine.RemainSalesPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailVariantId</Name>
				<Source><![CDATA[
    public RetailVariantId parmRetailVariantId(RetailVariantId _retailVariantId = '')
    {
        if (!prmisDefault(_retailVariantId))
        {
            this.setField(fieldNum(SalesQuotationLine, RetailVariantId), _retailVariantId);
        }

        return salesQuotationLine.RetailVariantId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesCategory</Name>
				<Source><![CDATA[
    public SalesCategory parmSalesCategory(SalesCategory _salesCategory = 0)
    {
        if (!prmisDefault(_salesCategory))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesCategory), _salesCategory);
        }

        return salesQuotationLine.SalesCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesDeliverNow</Name>
				<Source><![CDATA[
    public SalesQty parmSalesDeliverNow(SalesQty _salesDeliverNow = 0)
    {
        if (!prmisDefault(_salesDeliverNow))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesDeliverNow), _salesDeliverNow);
        }

        return salesQuotationLine.SalesDeliverNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesGroup</Name>
				<Source><![CDATA[
    public CommissSalesGroup parmSalesGroup(CommissSalesGroup _salesGroup = '')
    {
        if (!prmisDefault(_salesGroup))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesGroup), _salesGroup);
        }

        return salesQuotationLine.SalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesMarkup</Name>
				<Source><![CDATA[
    public SalesMarkup parmSalesMarkup(SalesMarkup _salesMarkup = 0)
    {
        if (!prmisDefault(_salesMarkup))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesMarkup), _salesMarkup);
        }

        return salesQuotationLine.SalesMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    public SalesPrice parmSalesPrice(SalesPrice _salesPrice = 0)
    {
        if (!prmisDefault(_salesPrice))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesPrice), _salesPrice);
        }

        return salesQuotationLine.SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesQty</Name>
				<Source><![CDATA[
    public SalesQty parmSalesQty(SalesQty _salesQty = 0)
    {
        if (!prmisDefault(_salesQty))
        {
            this.setField(fieldNum(SalesQuotationLine, SalesQty), _salesQty);
        }

        return salesQuotationLine.SalesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesUnit</Name>
				<Source><![CDATA[
    public str parmSalesUnit(str _salesUnit = '')
    {
        DictField   dictField;

        if (!prmisDefault(_salesUnit))
        {
            dictField = new DictField(tableNum(SalesQuotationLine),fieldNum(SalesQuotationLine,SalesUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_salesUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                _salesUnit = this.axUnitOfMeasureSymbol(_salesUnit);
            }
            else
            {
                this.validateInboundString(_salesUnit,dictField);
            }
            this.setField(fieldNum(SalesQuotationLine, SalesUnit), _salesUnit);
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(salesQuotationLine.SalesUnit);
        }
        return salesQuotationLine.SalesUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateRequested</Name>
				<Source><![CDATA[
    public SalesShippingDateRequested parmShippingDateRequested(SalesShippingDateRequested _shippingDateRequested = dateNull())
    {
        if (!prmisDefault(_shippingDateRequested))
        {
            this.setField(fieldNum(SalesQuotationLine, ShippingDateRequested), _shippingDateRequested);
        }

        return salesQuotationLine.ShippingDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    public TransDate parmStartDate(TransDate _startDate = dateNull())
    {
        if (!prmisDefault(_startDate))
        {
            this.setField(fieldNum(SalesQuotationLine, StartDate), _startDate);
        }

        return salesQuotationLine.StartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisDefault(_statProcId))
        {
            this.setField(fieldNum(SalesQuotationLine, StatProcId), _statProcId);
        }

        return salesQuotationLine.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatTriangularDeal</Name>
				<Source><![CDATA[
    public IntrastatTriangularDeal parmStatTriangularDeal(IntrastatTriangularDeal _statTriangularDeal = NoYes::No)
    {
        if (!prmisDefault(_statTriangularDeal))
        {
            this.setField(fieldNum(SalesQuotationLine, StatTriangularDeal), _statTriangularDeal);
        }

        return salesQuotationLine.StatTriangularDeal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStockedProduct</Name>
				<Source><![CDATA[
    public TradeStockedProduct parmStockedProduct(TradeStockedProduct _stockedProduct = NoYes::No)
    {
        if (!prmisDefault(_stockedProduct))
        {
            this.setField(fieldNum(SalesQuotationLine, StockedProduct), _stockedProduct);
        }

        return salesQuotationLine.StockedProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSuframaDiscount_BR</Name>
				<Source><![CDATA[
    public SalesLinePercent parmSuframaDiscount_BR(SalesLinePercent _suframaDiscount = 0)
    {
        if (!prmisDefault(_suframaDiscount))
        {
            this.setField(fieldNum(SalesQuotationLine, SuframaDiscount_BR), _suframaDiscount);
        }

        return salesQuotationLine.SuframaDiscount_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntryChangePolicy</Name>
				<Source><![CDATA[
    public PriceDiscPolicySystem parmSystemEntryChangePolicy(PriceDiscPolicySystem _systemEntryChangePolicy = 0)
    {
        if (!prmisDefault(_systemEntryChangePolicy))
        {
            this.setField(fieldNum(SalesQuotationLine, SystemEntryChangePolicy), _systemEntryChangePolicy);
        }

        return salesQuotationLine.SystemEntryChangePolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSystemEntrySource</Name>
				<Source><![CDATA[
    public PriceDiscSystemSource parmSystemEntrySource(PriceDiscSystemSource _systemEntrySource = PriceDiscSystemSource::None)
    {
        if (!prmisDefault(_systemEntrySource))
        {
            this.setField(fieldNum(SalesQuotationLine, SystemEntrySource), _systemEntrySource);
        }

        return salesQuotationLine.SystemEntrySource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAutoGenerated</Name>
				<Source><![CDATA[
    public TaxAutoGenerated parmTaxAutoGenerated(TaxAutoGenerated _taxAutoGenerated = NoYes::No)
    {
        if (!prmisDefault(_taxAutoGenerated))
        {
            this.setField(fieldNum(SalesQuotationLine, TaxAutoGenerated), _taxAutoGenerated);
        }

        return salesQuotationLine.TaxAutoGenerated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(SalesQuotationLine, TaxGroup), _taxGroup);
        }

        return salesQuotationLine.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverrideSalesTax</Name>
				<Source><![CDATA[
    public NoYes parmOverrideSalesTax(NoYes _overrideSalesTax = NoYes::No)
    {
        if (!prmisDefault(_overrideSalesTax))
        {
            this.setField(fieldNum(SalesQuotationLine, OverrideSalesTax), _overrideSalesTax);
        }

        return salesQuotationLine.OverrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
        if (!prmisDefault(_taxItemGroup))
        {
            this.setField(fieldNum(SalesQuotationLine, TaxItemGroup), _taxItemGroup);
        }

        return salesQuotationLine.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisDefault(_transactionCode))
        {
            this.setField(fieldNum(SalesQuotationLine, TransactionCode), _transactionCode);
        }

        return salesQuotationLine.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    public ProjTransDate parmTransDate(ProjTransDate _transDate = dateNull())
    {
        if (!prmisDefault(_transDate))
        {
            this.setField(fieldNum(SalesQuotationLine, TransDate), _transDate);
        }

        return salesQuotationLine.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferred2Forecast</Name>
				<Source><![CDATA[
    public NoYesId parmTransferred2Forecast(NoYesId _transferred2Forecast = NoYes::No)
    {
        if (!prmisDefault(_transferred2Forecast))
        {
            this.setField(fieldNum(SalesQuotationLine, Transferred2Forecast), _transferred2Forecast);
        }

        return salesQuotationLine.Transferred2Forecast;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferred2ItemReq</Name>
				<Source><![CDATA[
    public NoYesId parmTransferred2ItemReq(NoYesId _transferred2ItemReq = NoYes::No)
    {
        if (!prmisDefault(_transferred2ItemReq))
        {
            this.setField(fieldNum(SalesQuotationLine, Transferred2ItemReq), _transferred2ItemReq);
        }

        return salesQuotationLine.Transferred2ItemReq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferred2Journal</Name>
				<Source><![CDATA[
    public NoYesId parmTransferred2Journal(NoYesId _transferred2Journal = NoYes::No)
    {
        if (!prmisDefault(_transferred2Journal))
        {
            this.setField(fieldNum(SalesQuotationLine, Transferred2Journal), _transferred2Journal);
        }

        return salesQuotationLine.Transferred2Journal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisDefault(_transport))
        {
            this.setField(fieldNum(SalesQuotationLine, Transport), _transport);
        }

        return salesQuotationLine.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnderDeliveryPct</Name>
				<Source><![CDATA[
    public SalesUnderDeliveryPct parmUnderDeliveryPct(SalesUnderDeliveryPct _underDeliveryPct = 0)
    {
        if (!prmisDefault(_underDeliveryPct))
        {
            this.setField(fieldNum(SalesQuotationLine, UnderDeliveryPct), _underDeliveryPct);
        }

        return salesQuotationLine.UnderDeliveryPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pcMoveDocRefs</Name>
				<Source><![CDATA[
    void pcMoveDocRefs(SalesQuotationBasketLine pcSalesBasketLine)
    {
        //This method updates the references in the DocuRef
        //associated with a SalesQuotationBasketLine to the current SalesQuotationLine
        DocuRef     docuRef;

        select forupdate docuRef where
            docuRef.RefTableId == tableNum(SalesQuotationBasketLine) &&
            docuRef.RefRecId   == pcSalesBasketLine.RecId;

        if (docuRef)
        {
            docuRef.RefTableId = tableNum(SalesQuotationLine);
            docuRef.RefRecId = this.salesQuotationLine().RecId;
            docuRef.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_LineDisc</Name>
				<Source><![CDATA[
    public PriceDisc_LineDisc priceDisc_LineDisc(PriceDisc_LineDisc _priceDisc_LineDisc = null)
    {
        PriceDisc_LineDisc  priceDisc_LineDisc;

        if (!priceDisc_LineDiscIdx)
        {
            priceDisc_LineDiscIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_LineDisc))
        {
            this.classCacheInsert(priceDisc_LineDiscIdx, _priceDisc_LineDisc);
            priceDisc_LineDisc = _priceDisc_LineDisc;
        }
        else
        {
            if (this.classCacheExist(priceDisc_LineDiscIdx))
            {
                priceDisc_LineDisc = this.classCacheLookup(priceDisc_LineDiscIdx);
            }
            else
            {
                priceDisc_LineDisc = this.initPriceDisc_LineDiscParamsSet();

                this.classCacheInsert(priceDisc_LineDiscIdx, priceDisc_LineDisc);
            }
        }

        return priceDisc_LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDisc_Price</Name>
				<Source><![CDATA[
    public PriceDisc_Price priceDisc_Price(PriceDisc_Price _priceDisc_Price = null)
    {
        PriceDisc_Price  priceDisc_Price;

        if (!priceDisc_PriceIdx)
        {
            priceDisc_PriceIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceDisc_Price))
        {
            this.classCacheInsert(priceDisc_PriceIdx, _priceDisc_Price);
            priceDisc_Price = _priceDisc_Price;
        }
        else
        {
            if (this.classCacheExist(priceDisc_PriceIdx))
            {
                priceDisc_Price = this.classCacheLookup(priceDisc_PriceIdx);
            }
            else
            {
                priceDisc_Price = this.initPriceDisc_PriceParamsSet();

                this.classCacheInsert(priceDisc_PriceIdx, priceDisc_Price);
            }
        }

        return priceDisc_Price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceParametersRecord</Name>
				<Source><![CDATA[
    public PriceParameters priceParametersRecord(PriceParameters _priceParameters = null)
    {
        PriceParameters  priceParameters;

        if (!priceParametersIdx)
        {
            priceParametersIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_priceParameters))
        {
            this.tableCacheInsert(priceParametersIdx, _priceParameters);
            priceParameters = _priceParameters;
        }
        else
        {
            if (this.tableCacheExist(priceParametersIdx))
            {
                priceParameters = this.tableCacheLookup(priceParametersIdx);
            }
            else
            {
                priceParameters = PriceParameters::find();
                this.tableCacheInsert(priceParametersIdx, priceParameters);
            }
        }

        return priceParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCategoryRecord</Name>
				<Source><![CDATA[
    public ProjCategory projCategoryRecord(ProjCategory _projCategory = null)
    {
        ProjCategory  projCategory;

        if (!projCategoryIdx)
        {
            projCategoryIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_projCategory))
        {
            this.tableCacheInsert(projCategoryIdx, _projCategory);
            projCategory = _projCategory;
        }
        else
        {
            if (this.tableCacheExist(projCategoryIdx))
            {
                projCategory = this.tableCacheLookup(projCategoryIdx);
            }
            else
            {
                this.setProjCategoryId();
                projCategory = ProjCategory::find(this.parmProjCategoryId());
                this.tableCacheInsert(projCategoryIdx, projCategory);
            }
        }

        return projCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();

        axInventDim.inventDim(this.salesQuotationLine().inventDim());
        item = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuotationLine</Name>
				<Source><![CDATA[
    public SalesQuotationLine salesQuotationLine(SalesQuotationLine _salesQuotationLine = salesQuotationLine)
    {
        if (!prmisDefault(_salesQuotationLine))
        {
            this.setCurrentRecordFromExternal(_salesQuotationLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    public void save()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountType</Name>
				<Source><![CDATA[
    protected void setAccountType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, AccountType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAlternativeItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Replaces the item number with an alternative item number.
    /// </summary>
    private void setAlternativeItem()
    {
        SalesAlternativeItem    salesAlternativeItem;
        SalesQty                salesQty;
        ItemId                  itemId;
        QuotationProjTransType  projTransType;

        if (!salesQuotationLine.RecId && useAlternativeItem)
        {
            salesAlternativeItem = SalesAlternativeItem::newAlternativeItem(salesQuotationLine);
            if (salesAlternativeItem.existAlternativeItem())
            {
                itemId         = salesAlternativeItem.alternativeItemId();
                salesQty       = salesQuotationLine.SalesQty;
                projTransType  = salesQuotationLine.ProjTransType;

                salesQuotationLine.ItemId          = itemId;
                salesQuotationLine.ProjTransType   = projTransType;
                salesQuotationLine.itemIdChanged();
                salesQuotationLine.LinePropertyId  = ProjLinePropertySetup::findLinePropertyId(salesQuotationLine.salesQuotationTable().ProjIdRef,
                                                                                               salesQuotationLine.ProjCategoryId);
                salesQuotationLine.TaxItemGroup    = ProjParameters::taxItemGroupItem(salesQuotationLine.ProjCategoryId,
                                                                                      salesQuotationLine.ItemId);

                salesQuotationLine.ProjDescription = InventTable::find(salesQuotationLine.ItemId).defaultProductName();
                salesQuotationLine.SalesQty        = salesQty;

                SalesQuotationLine::modifySalesQty(salesQuotationLine, salesQuotationLine.inventDim());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAxSalesQuotationTableFields</Name>
				<Source><![CDATA[
    public void setAxSalesQuotationTableFields()
    {
        this.setQuotationId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBarCode</Name>
				<Source><![CDATA[
    protected void setBarCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, BarCode)))
        {
            return;
        }
        this.setInventItemBarcodeRecordFields();

        if (this.isInventItemBarcodeRecordFieldsSet())
        {
            this.parmBarCode(this.inventItemBarcodeRecord().ItemBarCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBarCodeType</Name>
				<Source><![CDATA[
    protected void setBarCodeType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, BarCodeType)))
        {
            return;
        }
        this.setInventItemBarcodeRecordFields();

        if (this.isInventItemBarcodeRecordFieldsSet())
        {
            this.parmBarCodeType(this.inventItemBarcodeRecord().BarcodeSetupId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCFOPTable_BR</Name>
				<Source><![CDATA[
    protected void setCFOPTable_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, cfopTable_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCompany</Name>
				<Source><![CDATA[
    protected void setCompany()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Company)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmedDlv</Name>
				<Source><![CDATA[
    protected void setConfirmedDlv()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ConfirmedDlv)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmConfirmedDlv() != this.axSalesQuotationTable().parmShippingDateRequested())
        {
            this.parmConfirmedDlv(this.axSalesQuotationTable().parmShippingDateRequested());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCostPrice</Name>
				<Source><![CDATA[
    protected void setCostPrice()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, CostPrice)))
        {
            return;
        }

        this.setSalesQty();
        this.setQuotationType();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty)))
        {
            if (this.parmSalesQty() > 0)
            {
                this.parmCostPrice(0);
                return;
            }
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet() ||
            (this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty)) &&
            (this.parmSalesQty() <=0) && (localSalesQuotationLine.parmSalesQty() > 0)))
        {
            this.parmCostPrice(this.inventTableRecord().costPcsPrice(this.parmInventDimId()));
        }

        if (this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, CustAccount)))
        {
            this.salesQuotationLine().setCostPrice();
            this.parmCostPrice(this.salesQuotationLine().CostPrice);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCountyOrigDest</Name>
				<Source><![CDATA[
    protected void setCountyOrigDest()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, CountyOrigDest)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            return;
        }

        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmCurrencyCode() != this.axSalesQuotationTable().parmCurrencyCode())
        {
            this.parmCurrencyCode(this.axSalesQuotationTable().parmCurrencyCode());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustAccount</Name>
				<Source><![CDATA[
    protected void setCustAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, CustAccount)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmCustAccount() != this.axSalesQuotationTable().parmCustAccount())
        {
            this.parmCustAccount(this.axSalesQuotationTable().parmCustAccount());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustExternalItemDescriptionFields</Name>
				<Source><![CDATA[
    protected void setCustExternalItemDescriptionFields()
    {
        this.setItemId();
        this.axInventDim().setConfigId();
        this.setAxSalesQuotationTableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomerRef</Name>
				<Source><![CDATA[
    protected void setCustomerRef()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, CustomerRef)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmCustomerRef() != this.axSalesQuotationTable().parmCustomerRef())
        {
            this.parmCustomerRef(this.axSalesQuotationTable().parmCustomerRef());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
    protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isSetMethodsCalledFromSave())
        {
            if (!this.isFieldSetExternally(fieldNum(SalesQuotationLine, DefaultDimension)))
            {
                if (this.isFieldSet(fieldNum(SalesQuotationLine, DefaultDimension)))
                {
                    return;
                }

                this.setAxSalesQuotationTableFields();

                if (this.isAxSalesQuotationTableFieldsSet()                                                          ||
                    this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, DefaultDimension))    ||
                    this.isInventTableRecordFieldsSet())
                {
                    this.updateDefaultDimensionForSalesQuotationLine();
                }
            }

            this.setInventDimId();
            this.inventSiteDimensionLink().axSetDefaultDimension(this);

            this.setInventTableRecordFields();
            this.setQuotationType();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDefaultDimensionForSalesQuotationLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates default dimension for sales quotation line.
    /// </summary>
    protected void updateDefaultDimensionForSalesQuotationLine()
    {
        this.parmDefaultDimension(this.salesQuotationLine().copyDimension(this.axSalesQuotationTable().salesQuotationTable().DefaultDimension));
        this.parmDefaultDimension(this.currentRecord().mergeDimension(this.axSalesQuotationTable().salesQuotationTable().DefaultDimension, this.inventTableRecord().DefaultDimension));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> interface and is called from the
    ///    <c>InventSiteDimensionLink</c> class.
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        salesQuotationLine.DefaultDimension = _dimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDateControl</Name>
				<Source><![CDATA[
    protected void setDeliveryDateControl()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, DeliveryDateControlType)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, DeliveryDateControlType)))
        {
            this.parmDeliveryDateControlType(this.axSalesQuotationTable().parmDeliveryDateControlType());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, DeliveryName)))
        {
            return;
        }

        this.setQuotationId();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, QuotationId)))
        {
            this.parmDeliveryName(this.axSalesQuotationTable().parmDeliveryName());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, DeliveryPostalAddress)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmDeliveryPostalAddress() != this.axSalesQuotationTable().parmDeliveryPostalAddress())
        {
            this.parmDeliveryPostalAddress(this.axSalesQuotationTable().parmDeliveryPostalAddress());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so all of the fields that are entity
    ///    specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(SalesQuotationLine, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvMode</Name>
				<Source><![CDATA[
    protected void setDlvMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, DlvMode)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, DlvMode)))
        {
            this.parmDlvMode(this.axSalesQuotationTable().parmDlvMode());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
    protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, DlvTerm)))
        {
            return;
        }

        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, DlvTerm)))
        {
            this.parmDlvterm(this.axSalesQuotationTable().parmDlvTerm());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDate</Name>
				<Source><![CDATA[
    protected void setEndDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, EndDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    protected void setExternalItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ExternalItemId)))
        {
            return;
        }
        this.setCustExternalItemDescriptionFields();

        if (this.isCustExternalItemDescriptionFieldsSet())
        {
            this.parmExternalItemId(this.custExternalItemDescription().externalItemId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDeliverNow</Name>
				<Source><![CDATA[
    protected void setInventDeliverNow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventDeliverNow)))
        {
            return;
        }
        this.setItemId();
        this.setInventDimId();
        this.setSalesUnit();
        this.setSalesDeliverNow();
        this.setInventTableRecordFields();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, ItemId))           ||
            this.isFieldSet(fieldNum(SalesQuotationLine, InventDimId))      ||
            this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit))        ||
            this.isFieldSet(fieldNum(SalesQuotationLine, SalesDeliverNow))  ||
            this.isInventTableRecordFieldsSet())
        {
            this.parmInventDeliverNow(EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.parmItemId(),
                                                                                                            this.parmInventDimId(),
                                                                                                            this.parmSalesDeliverNow(),
                                                                                                            this.parmSalesUnit(),
                                                                                                            this.inventTableRecord().inventUnitId(),
                                                                                                            NoYes::Yes));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventDimId)))
        {
            return;
        }
        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventItemBarcodeRecordFields</Name>
				<Source><![CDATA[
    protected void setInventItemBarcodeRecordFields()
    {
        this.setItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefId</Name>
				<Source><![CDATA[
    protected void setInventRefId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventRefId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefTransId</Name>
				<Source><![CDATA[
    protected void setInventRefTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventRefTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventRefType</Name>
				<Source><![CDATA[
    protected void setInventRefType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventRefType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTableRecordFields</Name>
				<Source><![CDATA[
    public void setInventTableRecordFields()
    {
        this.setItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    protected void setInventTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, InventTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemBOMId</Name>
				<Source><![CDATA[
    protected void setItemBOMId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ItemBOMId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemRouteId</Name>
				<Source><![CDATA[
    protected void setItemRouteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ItemRouteId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerDimension</Name>
				<Source><![CDATA[
    protected void setLedgerDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LedgerDimension)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    protected void setLineAmount()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LineAmount)))
        {
            return;
        }

        this.setLineAmountFields();

        if (this.isLineAmountFieldsSet())
        {
            this.parmLineAmount(this.currentRecord().calcLineAmountForced());
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            if (localSalesQuotationLine.parmCurrencyCode())
            {
                this.parmLineAmount(CurrencyExchangeHelper::curAmount2CurAmount(this.parmLineAmount(), localSalesQuotationLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmountFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fields related to line amount.
    /// </summary>
    protected void setLineAmountFields()
    {
        this.setSalesPrice();
        this.setPriceUnit();
        this.setLineDisc();
        this.setLinePercent();
        this.setSalesQty();
        this.setSalesMarkup();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setSalesQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineAmountFieldsSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the fields related to line amounts are set.
    /// </summary>
    /// <returns>true if the fields related to line amounts are set; otherwise, false.</returns>
    protected boolean isLineAmountFieldsSet()
    {
        return this.isFieldSet(fieldNum(SalesQuotationLine, SalesPrice))    ||
               this.isFieldSet(fieldNum(SalesQuotationLine, PriceUnit))     ||
               this.isFieldSet(fieldNum(SalesQuotationLine, LineDisc))      ||
               this.isFieldSet(fieldNum(SalesQuotationLine, LinePercent))   ||
               this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty))      ||
               this.isFieldSet(fieldNum(SalesQuotationLine, SalesMarkup))   ||
               this.isFieldSet(fieldNum(SalesQuotationLine, MultiLnDisc))   ||
               this.isFieldSet(fieldNum(SalesQuotationLine, MultiLnPercent))||
               this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LineDisc)))
        {
            return;
        }

        this.setQuotationType();

        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmLineDisc(0);
            return;
        }

        this.setPriceDisc_LineDiscFields();

        if (this.isPriceDisc_LineDiscFieldsSet() || this.isShipReceiptDateRequestedFieldsModified())
        {
            this.parmLineDisc(this.priceDisc_LineDisc().discAmount());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            if (localSalesQuotationLine.parmCurrencyCode())
            {
                this.parmLineDisc(ExchangeRateHelper::curPrice2CurPrice(this.parmLineDisc(), localSalesQuotationLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineHeader</Name>
				<Source><![CDATA[
    protected void setLineHeader()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LineHeader)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LineNum)))
        {
            return;
        }

        this.setQuotationId();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, QuotationId)))
        {
            if (!lineNum)
            {
                lineNum = SalesQuotationLine::lastLineNum(this.parmQuotationId());
            }
            lineNum += 1;

            this.parmLineNum(lineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    protected void setLinePercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LinePercent)))
        {
            return;
        }
        this.setQuotationType();

        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmLinePercent(0);
            return;
        }

        this.setPriceDisc_LineDiscFields();

        if (this.isPriceDisc_LineDiscFieldsSet() || this.isShipReceiptDateRequestedFieldsModified())
        {
            boolean useRetailPricing = RetailParameters::isRetailEnabledAndInUse() && RetailPricingEngine::useRetailPricing(salesQuotationLine);
            if (useRetailPricing)
            {
                this.parmLinePercent(0);
            }
            else
            {
                this.parmLinePercent(this.priceDisc_LineDisc().discPct());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePropertyId</Name>
				<Source><![CDATA[
    protected void setLinePropertyId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, LinePropertyId)))
        {
            return;
        }

        this.setQuotationId();
        this.setProjCategoryId();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, QuotationId)) ||
            this.isFieldSet(fieldNum(SalesQuotationLine, ProjCategoryId)))
        {
            this.parmLinePropertyId(ProjLinePropertySetup::findLinePropertyId(this.axSalesQuotationTable().parmProjIdRef(),
                                    this.parmProjCategoryId()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnDisc</Name>
				<Source><![CDATA[
    protected void setMultiLnDisc()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, MultiLnDisc)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmMultiLnDisc(0);
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            if (localSalesQuotationLine.parmCurrencyCode())
            {
                this.parmMultiLnDisc(ExchangeRateHelper::curPrice2CurPrice(this.parmMultiLnDisc(), localSalesQuotationLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnPercent</Name>
				<Source><![CDATA[
    protected void setMultiLnPercent()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, MultiLnPercent)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmMultiLnPercent(0);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    protected void setName()
    {
        ItemFreeTxt itemName;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Name)))
        {
            return;
        }
        this.setCustExternalItemDescriptionFields();

        if (this.isCustExternalItemDescriptionFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, LanguageId)))
        {
            if (this.custExternalItemDescription().externalItemFreeTxt())
            {
                if (CustFormletterParameters::find().ExternalItemOverwriteAppend == OverwriteAppend::Overwrite)
                {
                    this.parmName(this.custExternalItemDescription().externalItemFreeTxt());
                }
                else
                {
                    itemName = SalesParameters::nameAndOrDescription(this.inventTableRecord(), this.axSalesQuotationTable().parmLanguageId(), this.parmInventDimId());
                    if (itemName)
                    {
                        itemName += '\n';
                    }
                    itemName += this.custExternalItemDescription().externalItemFreeTxt();
                    this.parmName(itemName);
                }
            }
            else
            {
                this.parmName(SalesParameters::nameAndOrDescription(this.inventTableRecord(), this.axSalesQuotationTable().parmLanguageId(), this.parmInventDimId()));
            }
            return;
        }

        this.setInventTableRecordFields();
        this.setAxSalesQuotationTableFields();

        if (this.isInventTableRecordFieldsSet() ||
            this.isAxSalesQuotationTableFieldsSet()      ||
            this.axSalesQuotationTable().isFieldSet(fieldNum(SalesQuotationTable, LanguageId)))
        {
            this.parmName(SalesParameters::nameAndOrDescription(this.inventTableRecord(), this.axSalesQuotationTable().parmLanguageId(), this.parmInventDimId()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNewSalesPrice</Name>
				<Source><![CDATA[
    protected void setNewSalesPrice()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, NewSalesPrice)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNewTotalContributionRatio</Name>
				<Source><![CDATA[
    protected void setNewTotalContributionRatio()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, NewTotalContributionRatio)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOffsetAccountType</Name>
				<Source><![CDATA[
    protected void setOffsetAccountType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OffsetAccountType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOffsetCompany</Name>
				<Source><![CDATA[
    protected void setOffsetCompany()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OffsetCompany)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOffsetLedgerDimension</Name>
				<Source><![CDATA[
    protected void setOffsetLedgerDimension()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OffsetLedgerDimension)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOffsetTxt</Name>
				<Source><![CDATA[
    protected void setOffsetTxt()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OffsetTxt)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigCostPrice</Name>
				<Source><![CDATA[
    protected void setOrigCostPrice()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OrigCostPrice)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverDeliveryPct</Name>
				<Source><![CDATA[
    protected void setOverDeliveryPct()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OverDeliveryPct)))
        {
            return;
        }
        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmOverDeliveryPct(this.inventTableRecord().salesOverDeliveryPct());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPackingUnit</Name>
				<Source><![CDATA[
    protected void setPackingUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, PackingUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPackingUnitQty</Name>
				<Source><![CDATA[
    protected void setPackingUnitQty()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, PackingUnitQty)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWDeliverNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWDeliverNow</c> field.
    /// </summary>
    protected void setPdsCWDeliverNow()
    {
        if (this.isMethodExecuted(
                funcName(),
                fieldNum(SalesQuotationLine, PdsCWDeliverNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQty</c> field.
    /// </summary>
    protected void setPdsCWQty()
    {
        PdsCWInventQty      cwQty;

        if (this.isMethodExecuted(funcName(),
            fieldNum(SalesQuotationLine, PdsCWQty)))
        {
            return;
        }
        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.setQuotationType();

            this.setInventDimId();
            cwQty = PdsCatchWeight::cwQty(
                        this.parmItemId(),
                        this.inventTableRecord()
                            .salesStandardQty(this.parmInventDimId()));

            this.parmPdsCWQty(cwQty);

            this.parmSalesQty(PdsCatchWeight::inventQty(this.parmItemId(),cwQty));
        }

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWRemainInventPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWRemainInventPhysical</c> field.
    /// </summary>
    protected void setPdsCWRemainInventPhysical()
    {
        if (this.isMethodExecuted(funcName(),
            fieldNum(SalesQuotationLine, PdsCWRemainInventPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPort</Name>
				<Source><![CDATA[
    protected void setPort()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Port)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, Port)))
        {
            this.parmPort(this.axSalesQuotationTable().parmPort());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceCalcId</Name>
				<Source><![CDATA[
    protected void setPriceCalcId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, PriceCalcId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_LineDiscFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_LineDiscFields()
    {
        this.setItemId();
        this.setSalesQty();
        this.setSalesUnit();
        this.setInventTableRecordFields();
        this.setAxSalesQuotationTableFields();
        this.axInventDim().setSalesPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_LineDiscParams</Name>
				<Source><![CDATA[
    private void setPriceDisc_LineDiscParams(PriceDisc_LineDisc _priceDisc_LineDisc)
    {
        _priceDisc_LineDisc.parmModuleType(ModuleInventPurchSales::Sales);
        _priceDisc_LineDisc.parmItemId(this.parmItemId());
        _priceDisc_LineDisc.parmInventDim(this.axInventDim().inventDim());
        _priceDisc_LineDisc.parmUnitID(this.parmSalesUnit());

        RetailParameters retailParameters = RetailParameters::find();

        // When this <c>AxSalesQuotationLine</c> is from a retail sales quotation order and the retail parameter
        // UseSessionDateForCalculatingPricesAndDiscounts is active, set price discount to user preferred time zone,
        // disregarding PriceDateType parameter.
        if (this.axSalesQuotationTable().salesQuotationTable().retailSalesQuotationUseSessionDate())
        {
            _priceDisc_LineDisc.parmDiscDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
        else
        {
            switch (SalesParameters::find().PriceDateType)
            {
                case SalesPriceDateType::ShippingDateRequested:
                    _priceDisc_LineDisc.parmDiscDate(this.parmShippingDateRequested());
                    break;
                case SalesPriceDateType::ReceiptDateRequested:
                    _priceDisc_LineDisc.parmDiscDate(this.parmReceiptDateRequested());
                    break;
                default:
                    _priceDisc_LineDisc.parmDiscDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            }
        }

        _priceDisc_LineDisc.parmQty(this.parmSalesQty());
        _priceDisc_LineDisc.parmAccountNum(this.axSalesQuotationTable().parmCustAccount());
        _priceDisc_LineDisc.parmCurrencyCode(this.axSalesQuotationTable().parmCurrencyCode());
        _priceDisc_LineDisc.parmAccountLineDiscCode(this.axSalesQuotationTable().parmLineDisc());
        _priceDisc_LineDisc.parmItemLineDiscCode(this.inventTableRecord().salesLineDisc());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_PriceFields</Name>
				<Source><![CDATA[
    protected void setPriceDisc_PriceFields()
    {
        this.setItemId();
        this.setSalesQty();
        this.setSalesUnit();
        this.setInventTableRecordFields();
        this.setAxSalesQuotationTableFields();
        this.axInventDim().setSalesPriceDiscFields(this.inventTableRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceDisc_PriceParams</Name>
				<Source><![CDATA[
    private void setPriceDisc_PriceParams(PriceDisc_Price _priceDisc_Price)
    {
        _priceDisc_Price.parmModuleType(ModuleInventPurchSales::Sales);
        _priceDisc_Price.parmItemId(this.parmItemId());
        _priceDisc_Price.parmInventDim(this.axInventDim().inventDim());
        _priceDisc_Price.parmUnitID(this.parmSalesUnit());

        // When this <c>AxSalesQuotationLine</c> is from a retail sales quotation order and the retail parameter
        // UseSessionDateForCalculatingPricesAndDiscounts is active, set price discount to user preferred time zone,
        // disregarding PriceDateType parameter.
        if (this.axSalesQuotationTable().salesQuotationTable().retailSalesQuotationUseSessionDate())
        {
            _priceDisc_Price.parmPriceDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
        else
        {
            switch (SalesParameters::find().PriceDateType)
            {
                case SalesPriceDateType::ShippingDateRequested:
                    _priceDisc_Price.parmPriceDate(this.axSalesQuotationTable().salesQuotationTable().ShippingDateRequested);
                    break;

                case SalesPriceDateType::ReceiptDateRequested:
                    _priceDisc_Price.parmPriceDate(this.axSalesQuotationTable().salesQuotationTable().ReceiptDateRequested);
                    break;

                default:
                    _priceDisc_Price.parmPriceDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            }
        }

        _priceDisc_Price.parmQty(this.parmSalesQty());
        _priceDisc_Price.parmAccountNum(this.axSalesQuotationTable().parmCustAccount());
        _priceDisc_Price.parmCurrencyCode(this.axSalesQuotationTable().parmCurrencyCode());
        _priceDisc_Price.parmPriceGroupId(this.axSalesQuotationTable().parmPriceGroupId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, PriceUnit)))
        {
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmPriceUnit(this.priceDisc_Price().priceUnit());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjCategoryId</Name>
				<Source><![CDATA[
    protected void setProjCategoryId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ProjCategoryId)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmProjCategoryId(this.inventTableRecord().ProjCategoryId);
        }
        if (!this.parmProjCategoryId())
        {
            this.parmProjCategoryId(ProjParameters::find().ItemCategory);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjDescription</Name>
				<Source><![CDATA[
    protected void setProjDescription()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ProjDescription)))
        {
            return;
        }

        this.setProjCategoryId();
        if (this.isFieldSet(fieldNum(SalesQuotationLine, ProjCategoryId)))
        {
            this.parmProjDescription(this.projCategoryRecord().Name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjTransType</Name>
				<Source><![CDATA[
    protected void setProjTransType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ProjTransType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyOrdered</Name>
				<Source><![CDATA[
    protected void setQtyOrdered()
    {
        InventQty   inventQty;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, QtyOrdered)))
        {
            return;
        }
        this.setInventTableRecordFields();
        this.setItemId();
        this.setInventDimId();
        this.setSalesQty();
        this.setSalesUnit();

        if (this.isInventTableRecordFieldsSet()                         ||
            this.isFieldSet(fieldNum(SalesQuotationLine, ItemId))       ||
            this.isFieldSet(fieldNum(SalesQuotationLine, InventDimId))  ||
            this.isFieldSet(fieldNum(SalesQuotationLine, SalesQty))     ||
            this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit)))
        {
            inventQty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.parmItemId(),
                                                                                              this.parmInventDimId(),
                                                                                              this.parmSalesQty(),
                                                                                              this.parmSalesUnit(),
                                                                                              this.inventTableRecord().inventUnitId(),
                                                                                              NoYes::Yes);

            this.parmQtyOrdered(decRound(inventQty,InventTable::inventDecimals(this.parmItemId())));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationId</Name>
				<Source><![CDATA[
    protected void setQuotationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, QuotationId)))
        {
            return;
        }
        if (!this.parmQuotationId())
        {
            this.parmQuotationId(this.axSalesQuotationTable().parmQuotationId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationStatus</Name>
				<Source><![CDATA[
    protected void setQuotationStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, QuotationStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationType</Name>
				<Source><![CDATA[
    protected void setQuotationType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, QuotationType)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.parmQuotationId() && this.parmQuotationType() != this.axSalesQuotationTable().parmQuotationType())
        {
            this.parmQuotationType(this.axSalesQuotationTable().parmQuotationType());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDateRequested</Name>
				<Source><![CDATA[
    protected void setReceiptDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ReceiptDateRequested)))
        {
            return;
        }
        this.setPriceDisc_PriceFields();
        this.setAxSalesQuotationTableFields();

        if (this.isPriceDisc_PriceFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, ReceiptDateRequested)))
        {
            if (this.priceDisc_Price().deliveryDays())
            {
                this.parmReceiptDateRequested(max(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) + this.priceDisc_Price().deliveryDays(), this.axSalesQuotationTable().parmReceiptDateRequested()));
            }
            else
            {
                this.parmReceiptDateRequested(this.axSalesQuotationTable().parmReceiptDateRequested());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainInventPhysical</Name>
				<Source><![CDATA[
    protected void setRemainInventPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, RemainInventPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainSalesFinancial</Name>
				<Source><![CDATA[
    protected void setRemainSalesFinancial()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, RemainSalesFinancial)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainSalesPhysical</Name>
				<Source><![CDATA[
    protected void setRemainSalesPhysical()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, RemainSalesPhysical)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesCategory</Name>
				<Source><![CDATA[
    protected void setSalesCategory()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesCategory)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            // Look up category from itemid
            this.parmSalesCategory(
                EcoResProductCategory::findByItemIdCategoryHierarchyRole(
                    this.parmItemId(),
                    EcoResCategoryNamedHierarchyRole::Sales).Category);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesDeliverNow</Name>
				<Source><![CDATA[
    protected void setSalesDeliverNow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesDeliverNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesGroup</Name>
				<Source><![CDATA[
    protected void setSalesGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesGroup)))
        {
            return;
        }

        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, SalesGroup)))
        {
            this.parmSalesGroup(this.axSalesQuotationTable().parmSalesGroup());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesMarkup</Name>
				<Source><![CDATA[
    protected void setSalesMarkup()
    {
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesMarkup)))
        {
            return;
        }
        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmSalesMarkup(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet())
        {
            this.parmSalesMarkup(this.priceDisc_Price().priceMarkup());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            if (localSalesQuotationLine.parmCurrencyCode())
            {
                this.parmSalesMarkup(ExchangeRateHelper::curPrice2CurPrice(this.parmSalesMarkup(), localSalesQuotationLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isShipReceiptDateRequestedFieldsModified</Name>
				<Source><![CDATA[
    protected boolean isShipReceiptDateRequestedFieldsModified()
    {
        return this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, ShippingDateRequested))
            || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, ReceiptDateRequested));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPrice</Name>
				<Source><![CDATA[
    protected void setSalesPrice()
    {
        SalesQuotationLineType quotationLineType;
        AxSalesQuotationLine localSalesQuotationLine = this.axOrig() as AxSalesQuotationLine;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesPrice)))
        {
            return;
        }

        this.setQuotationType();

        if (this.isFieldSetExternally(fieldNum(SalesQuotationLine, LineAmount)))
        {
            this.parmSalesPrice(0);
            return;
        }

        this.setPriceDisc_PriceFields();

        if (this.isPriceDisc_PriceFieldsSet() || this.isShipReceiptDateRequestedFieldsModified())
        {
            this.parmSalesPrice(this.priceDisc_Price().price());
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, CurrencyCode)))
        {
            if (localSalesQuotationLine.parmCurrencyCode())
            {
                this.parmSalesPrice(ExchangeRateHelper::curPrice2CurPrice(this.parmSalesPrice(), localSalesQuotationLine.parmCurrencyCode(), this.parmCurrencyCode()));
            }
        }

        // Set project quotation sales price
        if (this.parmQuotationType() == QuotationType::Project)
        {
            this.setProjTransType();
            this.setProjectResource();
            this.setProjCategoryId();
            this.setLinePropertyId();
            this.setCustAccount();
            this.setTransDate();
            this.setCostPrice();

            // Set sales price only for fields impacting the sales price calculation.
            SalesQuotationLine salesQuotationLineLoc = this.salesQuotationLine();
            if (salesQuotationLineLoc.ProjTransType != QuotationProjTransType::Item && this.shouldSetSalesPrice())
            {
                salesQuotationLineLoc.setSalesPrice();
            }
            this.parmSalesPrice(salesQuotationLineLoc.SalesPrice);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSetSalesPrice</Name>
				<Source><![CDATA[
    private boolean shouldSetSalesPrice()
    {
        if (this.isFieldModified(fieldNum(SalesQuotationLine, ProjCategoryId))
            || this.isFieldModified(fieldNum(SalesQuotationLine, ProjectResource))
            || this.isFieldModified(fieldNum(SalesQuotationLine, TransDate))
            || this.isFieldModified(fieldNum(SalesQuotationLine, SalesPrice))
            || this.isFieldModified(fieldNum(SalesQuotationLine, LinePropertyId))
            || this.isFieldModified(fieldNum(SalesQuotationLine, CustAccount))
            || this.isFieldModified(fieldNum(SalesQuotationLine, CostPrice))
            || this.isFieldModified(fieldNum(SalesQuotationLine, SalesQty))
            || this.isFieldModified(fieldNum(SalesQuotationLine, CurrencyCode))
            || this.isFieldModified(fieldNum(SalesQuotationTable, PriceGroupId))
            || this.isFieldModified(fieldNum(SalesQuotationTable, ProjIdRef)))
        {
            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesQty</Name>
				<Source><![CDATA[
    protected void setSalesQty()
    {
        SalesQty    salesQty;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesQty)))
        {
            return;
        }
        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.setQuotationType();

            this.setInventDimId();
            salesQty = this.inventTableRecord().salesStandardQty(this.parmInventDimId());

            this.setSalesUnit();

            UnitOfMeasureSymbol salesUnitId = this.inventTableRecord().salesUnitId();
            UnitOfMeasureSymbol inventUnitId = this.inventTableRecord().inventUnitId();

            if (this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit)) &&
                this.parmSalesUnit() != salesUnitId)
            {
                this.setItemId();

                salesQty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(this.parmItemId(),
                                                                                                 this.parmInventDimId(),
                                                                                                 salesQty,
                                                                                                 this.inventTableRecord().salesUnitId(),
                                                                                                 this.parmSalesUnit(),
                                                                                                 NoYes::Yes);

                EcoResProductUnitConverter productUnitConverter = EcoResProductUnitConverter::newGivenUnitSymbolsForReleasedProduct(
                                                                            this.parmItemId(),
                                                                            this.parmInventDimId(),
                                                                            salesUnitId,
                                                                            inventUnitId,
                                                                            NoYes::Yes);

                salesQty = productUnitConverter.convertValue(salesQty);
                
                productUnitConverter.parmFromUnitOfMeasureSymbol(inventUnitId);
                productUnitConverter.parmToUnitOfMeasureSymbol(this.parmSalesUnit());

                salesQty = productUnitConverter.convertValue(salesQty);
            }

            this.parmSalesQty(salesQty);
            return;
        }

        this.setSalesUnit();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, SalesUnit)))
        {
            this.parmSalesQty(decRound(this.parmSalesQty(), UnitOfMeasure::unitOfMeasureDecimalPrecision(
                UnitOfMeasure::unitOfMeasureIdBySymbol(this.parmSalesUnit()))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesUnit</Name>
				<Source><![CDATA[
    protected void setSalesUnit()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SalesUnit)))
        {
            return;
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmSalesUnit(this.inventTableRecord().salesUnitId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateRequested</Name>
				<Source><![CDATA[
    protected void setShippingDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ShippingDateRequested)))
        {
            return;
        }

        this.setQuotationId();

        if (this.isFieldSet(fieldNum(SalesQuotationLine, QuotationId)) ||
            this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, ShippingDateRequested)))
        {
            this.parmShippingDateRequested(this.axSalesQuotationTable().parmShippingDateRequested());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStartDate</Name>
				<Source><![CDATA[
    protected void setStartDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, StartDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatProcId</Name>
				<Source><![CDATA[
    protected void setStatProcId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, StatProcId)))
        {
            return;
        }

        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, StatProcId)))
        {
            this.parmStatProcId (this.axSalesQuotationTable().parmStatProcId ());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatTriangularDeal</Name>
				<Source><![CDATA[
    protected void setStatTriangularDeal()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, StatTriangularDeal)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStockedProduct</Name>
				<Source><![CDATA[
    protected void setStockedProduct()
    {
        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        this.setInventTableRecordFields();
        this.setSalesCategory();

        this.salesQuotationLine().setStockedProduct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        this.axInventDim().setDimFieldId(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSuframaDiscount_BR</Name>
				<Source><![CDATA[
    protected void setSuframaDiscount_BR()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, SuframaDiscount_BR)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setAddressRefTableId();
        this.setAddressRefRecId();
        this.setBarCode();
        this.setBarCodeType();
        this.setLineNum();
        this.setQuotationId();
        this.setDefaultDimension();
        this.setConfirmedDlv();
        this.setCurrencyCode();
        this.setExternalItemId();
        this.setInventDeliverNow();
        this.setInventDimId();
        this.setInventRefId();
        this.setInventRefTransId();
        this.setInventRefType();
        this.setInventTransId();
        this.setReceiptDateRequested();  
        this.setShippingDateRequested();
        this.setItemBOMId();
        this.setItemId();
        this.setItemRouteId();
        this.setLedgerDimension();
        this.setLineAmount();
        this.setLineDisc();
        this.setLineHeader();
        this.setLinePercent();
        this.setMultiLnPercent();
        this.setMultiLnDisc();
        this.setName();
        this.setOverDeliveryPct();
        this.setPackingUnit();
        this.setPackingUnitQty();
        this.setPriceUnit();

        if (this.salesQuotationLine().isStocked())
        {
            this.setQtyOrdered();            
        }

        this.setRemainInventPhysical();
        this.setRemainSalesFinancial();
        this.setRemainSalesPhysical();
        this.setSalesDeliverNow();
        this.setSalesGroup();
        this.setSalesMarkup();
        this.setSalesQty();
        this.setSalesPrice();
        this.setSalesUnit();
        this.setDeliveryDateControl();
        this.setStatProcId();
        this.setTaxAutoGenerated();
        this.setTaxItemGroup();
        this.setTaxGroup();
        this.setTransactionCode();
        this.setTransport();
        this.setUnderDeliveryPct();
        this.setQuotationType();
        this.setCostPrice();
        this.setCustomerRef();
        this.setPort();
        this.setCustAccount();
        this.setDlvMode();
        this.setDlvTerm();
        this.setBarCode();
        this.setBarCodeType();
        this.setOrigCostPrice();
        this.setPriceCalcId();
        this.setNewTotalContributionRatio();
        this.setNewSalesPrice();
        this.setDeliveryPostalAddress();
        this.setDeliveryName();
        this.setProjTransType();
        this.setProjectResource();
        this.setProjCategoryId();
        this.setLinePropertyId();
        this.setAddressRefRecId();
        this.setProjDescription();
        this.setStartDate();
        this.setEndDate();
        this.setTransDate();
        this.setOffsetLedgerDimension();
        this.setOffsetAccountType();
        this.setOffsetTxt();
        this.setOffsetCompany();
        this.setCompany();
        this.setAccountType();
        this.setTransferred2Journal();
        this.setTransferred2Forecast();
        this.setAddressRefTableId(); 
        this.setSalesCategory();
        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.setCFOPTable_BR();
            this.setSuframaDiscount_BR();
        }
        // </GBR>

        if (Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationUtils::getBusinessProcessForSalesQuotationTable(this.axSalesQuotationTable().salesQuotationTable())))
        {
            this.setOverrideSalesTax();
        }

        this.setStockedProduct();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxAutoGenerated</Name>
				<Source><![CDATA[
    protected void setTaxAutoGenerated()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, TaxAutoGenerated)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, TaxGroup)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, TaxGroup)))
        {
            this.parmTaxGroup(this.axSalesQuotationTable().parmTaxGroup());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverrideSalesTax</Name>
				<Source><![CDATA[
    protected void setOverrideSalesTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, OverrideSalesTax)))
        {
            return;
        }

        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, OverrideSalesTax)))
        {
            this.parmOverrideSalesTax(this.axSalesQuotationTable().parmOverrideSalesTax());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxItemGroup</Name>
				<Source><![CDATA[
    protected void setTaxItemGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, TaxItemGroup)))
        {
            return;
        }

        if (this.axSalesQuotationTable().parmProjIdRef())
        {
            this.setProjCategoryId();
            if (this.isFieldSet(fieldNum(SalesQuotationLine, ProjCategoryId)))
            {
                this.parmTaxItemGroup(this.projCategoryRecord().TaxItemGroupId);
                return;
            }
        }

        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmTaxItemGroup(this.inventTableRecord().salesTaxItemGroupId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCode</Name>
				<Source><![CDATA[
    protected void setTransactionCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, TransactionCode)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, TransactionCode)))
        {
            this.parmTransactionCode(this.axSalesQuotationTable().parmTransactionCode());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransDate</Name>
				<Source><![CDATA[
    protected void setTransDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, TransDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferred2Forecast</Name>
				<Source><![CDATA[
    protected void setTransferred2Forecast()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Transferred2Forecast)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferred2ItemReq</Name>
				<Source><![CDATA[
    protected void setTransferred2ItemReq()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Transferred2ItemReq)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferred2Journal</Name>
				<Source><![CDATA[
    protected void setTransferred2Journal()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Transferred2Journal)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransport</Name>
				<Source><![CDATA[
    protected void setTransport()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, Transport)))
        {
            return;
        }
        this.setAxSalesQuotationTableFields();

        if (this.isAxSalesQuotationTableFieldsSet() || this.axSalesQuotationTable().isFieldModified(fieldNum(SalesQuotationTable, Transport)))
        {
            this.parmTransport(this.axSalesQuotationTable().parmTransport());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnderDeliveryPct</Name>
				<Source><![CDATA[
    protected void setUnderDeliveryPct()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, UnderDeliveryPct)))
        {
            return;
        }
        this.setInventTableRecordFields();

        if (this.isInventTableRecordFieldsSet())
        {
            this.parmUnderDeliveryPct(this.inventTableRecord().salesUnderDeliveryPct());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    public void updateFromInventDim()
    {
        ttsbegin;
        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();

        this.setAlternativeItem();

        this.validateFields();

        this.validateWrite();

        this.write();

        salesQuotationLine.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useAlternativeItem</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the use of alternative item replacement.
    /// </summary>
    /// <param name="_useAlternativeItem">
    ///    A Boolean value that indicates whether to use the alternative item replacement.
    /// </param>
    /// <returns>
    ///    true if the alternative item replacement is used; otherwise, false.
    /// </returns>
    public boolean useAlternativeItem(boolean  _useAlternativeItem = useAlternativeItem)
    {
        useAlternativeItem = _useAlternativeItem;

        return useAlternativeItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueMapDependingFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the incoming value mapping of that depend on another field, such as the item, state, and
    ///    county fields.
    /// </summary>
    /// <remarks>
    ///    This method is used in the save method. Therefore the incoming value mapping is performed before
    ///    the fields are defaulted.
    /// </remarks>
    protected void valueMapDependingFields()
    {
        ItemId      valueMapedItemId;
        InventDim   valueMapedInventDim;

        if (this.valueMappingInbound())
        {
            if (salesQuotationLine.CustAccount && item)
            {
                [valueMapedItemId,valueMapedInventDim] = this.axSalesItemId(salesQuotationLine.CustAccount,item);
                this.parmItemId(valueMapedItemId);
                if (!InventDim::isInventDimEqualProductDim(EcoResProductDimGroupSetup::newItemId(salesQuotationLine.ItemId), valueMapedInventDim, InventDim::find(InventDim::inventDimIdBlank())))
                {
                    axInventDim.productDimensions(valueMapedInventDim);
                    this.parmInventDimId(InventDim::findOrCreate(axInventDim.inventDim()).InventDimId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxSalesQuotationLine construct()
    {
        return new AxSalesQuotationLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMCRSalesQuotationLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>AxMCRSalesQuotationLine</c> class.
    /// </summary>
    /// <param name="_mcrSalesQuotationLine">
    /// The <c>MCRSalesQuotationLine</c> record used to instantiate the <c>AxMCRSalesQuotationLine</c> class.
    /// </param>
    /// <returns>
    /// The newly instantiated <c>AxMCRSalesQuotationLine</c> class.
    /// </returns>
    public static AxMCRSalesQuotationLine newMCRSalesQuotationLine(MCRSalesQuotationLine _mcrSalesQuotationLine)
    {
        AxMCRSalesQuotationLine axMCRSalesQuotationLine = AxMCRSalesQuotationLine::construct();
        axMCRSalesQuotationLine.mcrSalesQuotationLine(_mcrSalesQuotationLine);

        return axMCRSalesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSalesQuotationLine</Name>
				<Source><![CDATA[
    public static AxSalesQuotationLine newSalesQuotationLine(SalesQuotationLine _salesQuotationLine)
    {
        AxSalesQuotationLine axSalesQuotationLine = AxSalesQuotationLine::construct();

        axSalesQuotationLine.salesQuotationLine(_salesQuotationLine);

        return axSalesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjectResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the project resource parameter.
    /// </summary>
    /// <param name="_resource">
    /// The value of the resource record ID to set.
    /// </param>
    /// <returns>
    /// The value of the resource record ID parameter.
    /// </returns>
    public ResourceRecId parmProjectResource(ResourceRecId _resource = 0)
    {
        if (!prmisDefault(_resource))
        {
            this.setField(fieldNum(SalesQuotationLine, ProjectResource), _resource);
        }
        
        return salesQuotationLine.ProjectResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjectResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for the project resource field.
    /// </summary>
    protected void setProjectResource()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesQuotationLine, ProjectResource)))
        {
            return;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>