<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMShipperDeclarationDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>HMIMShipperDeclarationDP</c> Data provider class for the Shipper's declaration report
/// </summary>
[SRSReportQueryAttribute(queryStr(HMIMShipperDeclarationReportQuery))]
public class HMIMShipperDeclarationDP extends SrsReportDataProviderPreProcessTempDB
{
    HMIMShipperDeclarationTmp       headerTmp;
    HMIMShipperDeclarationItemTmp   linesTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getHeaderTmp</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(HMIMShipperDeclarationTmp))]
    public HMIMShipperDeclarationTmp getHeaderTmp()
    {
        select headerTmp;
        return headerTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinesTmp</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(HMIMShipperDeclarationItemTmp))]
    public HMIMShipperDeclarationItemTmp getLinesTmp()
    {
        select linesTmp;
        return linesTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        QueryRun queryRun = new QueryRun(this.parmQuery());
        boolean firstloop = true;

        ttsbegin;       
        while (queryRun.next())
        {
            HMIMShipperDeclaration     shipperDecHeader = queryRun.get(tableNum(HMIMShipperDeclaration));
            HMIMShipperDeclarationItem shipperDecLine   = queryRun.get(tableNum(HMIMShipperDeclarationItem));

            if (firstloop)
            {
                this.initHeader(shipperDecHeader);
                firstloop = false;
            }
            
            this.initLines(shipperDecLine);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the headerTmp object with data
    /// </summary>
    /// <param name = "_shipperDecHeader">Shipper declaration header record</param>
    private void initHeader(HMIMShipperDeclaration _shipperDecHeader)
    {
        headerTmp.ConsigneeName         = _shipperDecHeader.ConsigneeName;
        headerTmp.ConsigneeAddress      = _shipperDecHeader.ConsigneeAddress;
        headerTmp.AirWaybillNum         = _shipperDecHeader.AirWaybillNum;
        headerTmp.ShipperName           = _shipperDecHeader.ShipperName;
        headerTmp.ShipperAddress        = _shipperDecHeader.ShipperAddress;
        headerTmp.Warning               = _shipperDecHeader.Warning;
        headerTmp.FooterMsg             = _shipperDecHeader.FooterMsg;
        headerTmp.ShipmentId            = _shipperDecHeader.ShipmentId;
        if (HMIMTransportationTypeRadioactiveToggle::instance().isEnabled())
        {
            headerTmp.IsRadioactive     = _shipperDecHeader.IsRadioactive;
            headerTmp.AirType           = _shipperDecHeader.AirType;
        }

        this.insertHeader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts initialized headerTmp object in to the header temp table
    /// </summary>
    private void insertHeader()
    {
        headerTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the linesTmp object with data
    /// </summary>
    /// <param name = "_shipperDecLine">Shipper declaration line</param>
    private void initLines(HMIMShipperDeclarationItem _shipperDecLine)
    {
        linesTmp.UNNumber               = _shipperDecLine.UNNumber;
        linesTmp.ShippingName           = _shipperDecLine.ShippingName;
        linesTmp.ClassCode              = _shipperDecLine.ClassCode;
        linesTmp.DivisionCode           = _shipperDecLine.DivisionCode;
        linesTmp.PackingGroup           = _shipperDecLine.PackingGroup;
        linesTmp.Qty                    = _shipperDecLine.Qty;
        linesTmp.PackingInstruction     = _shipperDecLine.PackingInstruction;
        linesTmp.NumberAndTypeOfPacking = _shipperDecLine.NumberAndTypeOfPacking;
        linesTmp.ShipmentId             = _shipperDecLine.ShipmentId;
        linesTmp.AirWaybillNum          = _shipperDecLine.AirWaybillNum;

        this.insertLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the initialized linesTmp object in to the Lines temp table
    /// </summary>
    private void insertLines()
    {
        linesTmp.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>