<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOrderPackSlipProController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransOrderPackSlipProController</c> class is the helper class for the associated SRS Report.
/// </summary>
public class InventTransOrderPackSlipProController extends SrsReportRunController implements BatchRetryable
{
    #define.ReportName('InventTransferOrderPackingSlipPro.Report')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides ability to modify the report contract before dialog is shown to user.
    /// </summary>
    /// <remarks>
    /// Use this method to change the report contract, common use case is to add/change a Query Important
    /// note: This method is called only during interactive scenario, before rendering the UI to user. For
    /// batch scenario, we do not invoke this method, because there is no user interaction and contract
    /// values are already saved in batch. Do not instantiate any instance variables in this code if they
    /// are used during the lifetime of controller, because these will fail in batch cases.
    /// </remarks>
    protected void prePromptModifyContract()
    {
        this.setRanges(this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the report query and parameters based on caller settings.
    /// </summary>
    /// <param name="_query">
    /// The Query object.
    /// </param>
    /// <remarks>
    /// Assigns values to <c>TransferId</c> range.
    /// </remarks>
    public void setRanges(Query _query)
    {
        if (this.parmArgs())
        {
            if (this.parmArgs().dataset() == tableNum(InventTransferTable))
            {
                InventTransferTable inventTransferTable = this.parmArgs().record() as InventTransferTable;

                QueryBuildRange qbr = SysQuery::findOrCreateRange(_query.dataSourceTable(tableNum(InventTransferTable)),
                                                            fieldNum(InventTransferTable, TransferId));
                qbr.value(inventTransferTable.TransferId);
                qbr.status(RangeStatus::Hidden);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the query values to the dialog.
    /// </summary>
    /// <param name="parameterName">
    /// The name of the query parameter in the data contract.
    /// </param>
    /// <returns>
    /// true if query values are to be shown otherwise false.
    /// </returns>
    /// <remarks>
    /// Used by the query UI builder.
    /// </remarks>

    public boolean showQueryValues(str parameterName)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initailzes the controller, sets the print management, assigns parameter values and runs the SRS report.
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object.
    /// </param>
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceLT00003, funcName());

        InventTransOrderPackSlipProController controller = new InventTransOrderPackSlipProController();

        controller.parmReportName(#ReportName);
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>