<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendPaymProposalAutomationRuntimeCriteriaConverter</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustVendPaymProposalAutomationRuntimeCriteriaConverter</c> class handles orchestration of converting saved payment proposal automation
/// criteria to runtime values.
/// </summary>
internal final class CustVendPaymProposalAutomationRuntimeCriteriaConverter
{
    private ProcessScheduleWorkItem processScheduleWorkItem;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>transformSavedCriteriaToRuntimeValues</Name>
				<Source><![CDATA[
    internal static CustVendCreatePaymJournalDialogValues transformSavedCriteriaToRuntimeValues(ProcessScheduleWorkItem _processScheduleWorkItem)
    {
        CustVendPaymProposalAutomationRuntimeCriteriaConverter runtimeCriteriaConverter = new CustVendPaymProposalAutomationRuntimeCriteriaConverter();
        runtimeCriteriaConverter.initialize(_processScheduleWorkItem);

        CustVendPaymProposalAutomationIRuntimeCriteria runtimeCriteria =
            CustVendPaymProposalAutomationRuntimeCriteriaFactory::getRuntimeCriteria(_processScheduleWorkItem.parmProcessScheduleTypeName());
        
        runtimeCriteria.initializeContract(_processScheduleWorkItem);

        return runtimeCriteriaConverter.getRuntimeValuesFromRuntimeCriteria(runtimeCriteria);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transformRelativeDaysToPhysicalDate</Name>
				<Source><![CDATA[
    internal static Date transformRelativeDaysToPhysicalDate(ProcessScheduleWorkItem _processScheduleWorkItem, int _days)
    {
        return DateTimeUtil::date(DateTimeUtil::addDays(_processScheduleWorkItem.parmScheduledDateTime(), _days));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(ProcessScheduleWorkItem _processScheduleWorkItem)
    {
        processScheduleWorkItem = _processScheduleWorkItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRuntimeValuesFromRuntimeCriteria</Name>
				<Source><![CDATA[
    private CustVendCreatePaymJournalDialogValues getRuntimeValuesFromRuntimeCriteria(CustVendPaymProposalAutomationIRuntimeCriteria _runtimeCriteria)
    {
        CustVendCreatePaymJournalDialogValues runtimeValues = new CustVendCreatePaymJournalDialogValues();

        runtimeValues.parmSkipEditForm(NoYes::Yes);
        
        runtimeValues.parmPaymProposalType(_runtimeCriteria.getPaymProposalType());
        
        if (_runtimeCriteria.getUseToDateOffsetDays())
        {
            runtimeValues.parmToDate(
                CustVendPaymProposalAutomationRuntimeCriteriaConverter::transformRelativeDaysToPhysicalDate(processScheduleWorkItem, _runtimeCriteria.getToDateOffsetDays()));
        }
        else
        {
            runtimeValues.parmToDate(dateMax());
        }

        if (_runtimeCriteria.getUseMinimumPaymentDateOffsetDays())
        {
            runtimeValues.parmEarlyPaymDate(
                CustVendPaymProposalAutomationRuntimeCriteriaConverter::transformRelativeDaysToPhysicalDate(processScheduleWorkItem, _runtimeCriteria.getMinimumPaymentDateOffsetDays()));
        }

        runtimeValues.parmAmountMax(_runtimeCriteria.getAmountLimit());
        runtimeValues.parmPaymCurrency(_runtimeCriteria.getPaymentCurrencyCode());
        runtimeValues.parmDefaultOffsetAccountType(_runtimeCriteria.getDefaultOffsetAccountType());
        runtimeValues.parmDefaultOffsetLedgerDimension(_runtimeCriteria.getDefaultOffsetAccount());

        if (_runtimeCriteria.getUseSummarizedPaymentDateOffsetDays())
        {
            runtimeValues.parmPaymDateFixed(
                CustVendPaymProposalAutomationRuntimeCriteriaConverter::transformRelativeDaysToPhysicalDate(processScheduleWorkItem, _runtimeCriteria.getSummarizedPaymentDateOffsetDays()));
        }

        runtimeValues.parmBalanceCheck(_runtimeCriteria.getBalanceCheck());
        runtimeValues.parmDeleteCredit(_runtimeCriteria.getDeleteCredit());
        runtimeValues.parmIncludeInvoicesFromOtherCompanies(_runtimeCriteria.getIncludeInvoicesFromOtherCompanies());
        runtimeValues.parmProposeSeparatePaymentPerCompany(_runtimeCriteria.getProposeSeparatePaymentPerCompany());
       
        _runtimeCriteria.populateRuntimeValues(runtimeValues);

        return runtimeValues;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>