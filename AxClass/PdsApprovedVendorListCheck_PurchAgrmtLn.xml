<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorListCheck_PurchAgrmtLn</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(AgreementLine))]
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(AgreementLineQuantityCommitment))]
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(AgreementLineVolumeCommitment))]
/// <summary>
/// Handles the approved vendor list check for buffer type <c>AgreementLine</c>.
/// </summary>
class PdsApprovedVendorListCheck_PurchAgrmtLn
    extends PdsApprovedVendorListCheck
{
    AgreementLine   agreementLine;
    date            releaseDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if Approved Vendor List record is present. If valid record found 'OK' is returned.If no valid record is found,
    /// the warning value set in the item master is returned.
    /// </summary>
    /// <returns>
    /// Corresponding value of PdsVendorCheckResult
    /// </returns>
    public PdsVendorCheckResult check()
    {
        PdsVendorCheckResult    ret = PdsVendorCheckResult::OK;
        date                    validityFrom;
        date                    validityTo;

        if (this.parmReleaseDate() && (this.parmReleaseDate() != dateNull()))
        {
            // get the dates set on the agreement release screen
            validityFrom = this.parmReleaseDate();
            validityTo   = this.parmReleaseDate();
        }
        else
        {
            // get the dates on the agreement line
            validityFrom = fromDate;
            validityTo   = toDate;
        }

        if (vendAccount
            && inventTable.PdsVendorCheckItem != PdsVendorCheckItem::NoCheck
            && !PdsApprovedVendorList::existValid(
                    inventTable.ItemId,
                    vendAccount,
                    validityFrom,
                    validityTo,
                    true)
            )
        {
            switch (inventTable.PdsVendorCheckItem)
            {
                case PdsVendorCheckItem::WarningOnly :
                    ret = PdsVendorCheckResult::Warning;
                    break;
                case PdsVendorCheckItem::NotAllowed :
                    ret = PdsVendorCheckResult::NotAllowed;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiate new instance of subclass
    /// </summary>
    protected void new()
    {
        super();
        // date of relase should only be set on released order screen
        releaseDate = dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    public Common parmBuffer(Common _common = null)
    {
        PurchAgreementHeader    purchAgreementHeader;
        AgreementLine           purchAgreementLine;

        if (!prmisdefault(_common) && _common is AgreementLine)
        {
            agreementLine = _common;

            super(agreementLine.inventTable());

            purchAgreementHeader = PurchAgreementHeader::find(agreementLine.agreementHeader().RecId);

            vendAccount = purchAgreementHeader.VendAccount;
            // first initialize the dates from the line, if possible - then header
            purchAgreementLine = _common;
            if (    purchAgreementLine.EffectiveDate    != dateNull()
                &&  purchAgreementLine.ExpirationDate   != dateNull() )
            {
                fromDate    = purchAgreementLine.EffectiveDate;
                toDate      = purchAgreementLine.ExpirationDate;
            }
            else
            {
                fromDate    = purchAgreementHeader.DefaultAgreementLineEffectiveDate;
                toDate      = purchAgreementHeader.DefaultAgreementLineExpirationDate;
            }
        }

        return agreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseDate</Name>
				<Source><![CDATA[
    public date parmReleaseDate(date _releaseDate = releaseDate)
    {
        releaseDate = _releaseDate;
        return releaseDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the check method and if check returns anything other than 'OK'. Either a warning or a fail message will be returned.
    /// </summary>
    /// <returns>
    /// Returns true / false
    /// </returns>
    public boolean validateCheck()
    {
        boolean     ret = true;

        switch (this.check())
        {
            case PdsVendorCheckResult::NotAllowed:
                setPrefix(PurchAgreementHeader::find(agreementLine.Agreement).PurchNumberSequence);
                setPrefix(strfmt("@PRO1547",
                                this.parmVendAccount(),
                                this.getInventTable().ItemId,
                                this.parmActiveDate()));
                warning("@PDS1604");
                ret = ignoreError;
                break;
            case PdsVendorCheckResult::Warning:
                warning(strfmt("@PRO1547",
                                this.parmVendAccount(),
                                this.getInventTable().ItemId,
                                this.parmActiveDate()));
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs instance of class
    /// </summary>
    /// <returns>
    /// Returns instance of subclass
    /// </returns>
    public static PdsApprovedVendorListCheck_PurchAgrmtLn construct()
    {
        return new PdsApprovedVendorListCheck_PurchAgrmtLn();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>